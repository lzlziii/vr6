using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Xml;
using Analytics.Events;
using Halfbrick.FNVR.Achievments;
using Halfbrick.FNVR.SceneManagement;
using Halfbrick.FNVR.Stats;
using Halfbrick.FNVR.System.AssetManagement;
using Halfbrick.FNVR.System.Blades;
using Halfbrick.FNVR.System.Environment;
using Halfbrick.FNVR.System.Hands;
using Halfbrick.FNVR.System.Inventory;
using Halfbrick.FNVR.System.TimeSystem;
using Il2CppDummyDll;
using NetworkEffects.Analytics;
using NetworkEffects.Schema;
using Oculus.Platform;
using Oculus.Platform.Models;
using Poly2Tri;
using TMPro;
using UltimateFracturing;
using UltimateGameTools.MeshSimplifier;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.AzureSky;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using Valve.VR;
using Viveport;
using Viveport.Internal;
using WaveVR_Log;
using Xft;
using wvr;
using wvr.render;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE050", Offset = "0x9DE050")]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader _combineLayersShader;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x17000001")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xCBEB44", Offset = "0xCBEB44", VA = "0xCBEB44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xCBEBDC", Offset = "0xCBEBDC", VA = "0xCBEBDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x6000003")]
		[Address(RVA = "0xCBEC9C", Offset = "0xCBEC9C", VA = "0xCBEC9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x6000004")]
		[Address(RVA = "0xCBEE4C", Offset = "0xCBEE4C", VA = "0xCBEE4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x6000005")]
		[Address(RVA = "0xCBEEE4", Offset = "0xCBEEE4", VA = "0xCBEEE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCBEFA4", Offset = "0xCBEFA4", VA = "0xCBEFA4")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xCBED20", Offset = "0xCBED20", VA = "0xCBED20")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xCBF078", Offset = "0xCBF078", VA = "0xCBF078")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xCBF110", Offset = "0xCBF110", VA = "0xCBF110")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xCBF14C", Offset = "0xCBF14C", VA = "0xCBF14C")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x2000003")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E05D8", Offset = "0x9E05D8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E05D8", Offset = "0x9E05D8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E05D8", Offset = "0x9E05D8")]
	public float radius;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0654", Offset = "0x9E0654")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E0654", Offset = "0x9E0654")]
	public float density;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E06A8", Offset = "0x9E06A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E06A8", Offset = "0x9E06A8")]
	public float exponent;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0700", Offset = "0x9E0700")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E0700", Offset = "0x9E0700")]
	public int maxPixelizationLevel;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0754", Offset = "0x9E0754")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E078C", Offset = "0x9E078C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E078C", Offset = "0x9E078C")]
	public bool debugSphere;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x119D498", Offset = "0x119D498", VA = "0x119D498")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x119D610", Offset = "0x119D610", VA = "0x119D610")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x119D668", Offset = "0x119D668", VA = "0x119D668")]
	public VolumetricSphere()
	{
	}
}
[Token(Token = "0x2000004")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xC21B14", Offset = "0xC21B14", VA = "0xC21B14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xC21DA4", Offset = "0xC21DA4", VA = "0xC21DA4")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000005")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xC28334", Offset = "0xC28334", VA = "0xC28334")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xC283D0", Offset = "0xC283D0", VA = "0xC283D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xC286CC", Offset = "0xC286CC", VA = "0xC286CC")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000006")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6000013")]
		[Address(RVA = "0xC2D0B0", Offset = "0xC2D0B0", VA = "0xC2D0B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000014")]
		[Address(RVA = "0xC2D0B8", Offset = "0xC2D0B8", VA = "0xC2D0B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xC2D0C0", Offset = "0xC2D0C0", VA = "0xC2D0C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xC2D0FC", Offset = "0xC2D0FC", VA = "0xC2D0FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xC2D338", Offset = "0xC2D338", VA = "0xC2D338")]
	public Smear()
	{
	}
}
[Token(Token = "0x2000007")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x190EDC0", Offset = "0x190EDC0", VA = "0x190EDC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x190EE98", Offset = "0x190EE98", VA = "0x190EE98")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x190EF1C", Offset = "0x190EF1C", VA = "0x190EF1C")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xB7EA70", Offset = "0xB7EA70", VA = "0xB7EA70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xB7EB54", Offset = "0xB7EB54", VA = "0xB7EB54")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x2000009")]
public enum AudioPlaybackType
{
	[Token(Token = "0x400001B")]
	First,
	[Token(Token = "0x400001C")]
	Random,
	[Token(Token = "0x400001D")]
	Sequence
}
[Token(Token = "0x200000A")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioManager m_instance;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_folderPath;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixer m_audioMixer;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup m_defaultMixGroup;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_debugLog;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sound[] m_allSounds;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AudioSourceObject> m_allAudioSources;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_disabled;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<AudioFade> m_allAudioFades;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_currentSnapshot;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject m_objectParent;

	[Token(Token = "0x17000007")]
	public static AudioManager Instance
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0xD5BB24", Offset = "0xD5BB24", VA = "0xD5BB24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xD63348", Offset = "0xD63348", VA = "0xD63348")]
	public void DisablePlay()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xD63354", Offset = "0xD63354", VA = "0xD63354")]
	public void EnablePlay()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xD6335C", Offset = "0xD6335C", VA = "0xD6335C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xD63584", Offset = "0xD63584", VA = "0xD63584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xD636C4", Offset = "0xD636C4", VA = "0xD636C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xD63794", Offset = "0xD63794", VA = "0xD63794")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xD63864", Offset = "0xD63864", VA = "0xD63864")]
	public void ResetSoundSequence(AudioType soundType)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xD638E8", Offset = "0xD638E8", VA = "0xD638E8")]
	private AudioSourceObject CreateNewAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xD63ADC", Offset = "0xD63ADC", VA = "0xD63ADC")]
	public void ReturnAudioSourceToList(AudioSourceObject audSource)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xD63C5C", Offset = "0xD63C5C", VA = "0xD63C5C")]
	public void CleanUpUnusedAudioSourceObjects()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xD63D74", Offset = "0xD63D74", VA = "0xD63D74")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E8E84", Offset = "0x9E8E84")]
	public AudioSourceObject PlaySound(Transform location, string type, AudioPlaybackType playbackType = AudioPlaybackType.Random, float volumeModifier = 1f, float pitchModifier = 1f, float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xD5BD70", Offset = "0xD5BD70", VA = "0xD5BD70")]
	public AudioSourceObject PlaySound(Transform location, AudioSound sound, AudioPlaybackType playbackType = AudioPlaybackType.Random, float pitchModifier = 1f, float delay = 0f, [Optional] AudioPlayer player)
	{
		return null;
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xD61D38", Offset = "0xD61D38", VA = "0xD61D38")]
	public AudioSourceObject PlaySound(Transform location, AudioType type, AudioPlaybackType playbackType = AudioPlaybackType.Random, float volumeModifier = 1f, float pitchModifier = 1f, float delay = 0f, [Optional] AudioPlayer player)
	{
		return null;
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xD63894", Offset = "0xD63894", VA = "0xD63894")]
	public Sound GetSound(AudioType type)
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xD643CC", Offset = "0xD643CC", VA = "0xD643CC")]
	public string GetCurrentSnapshot()
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xD5FD00", Offset = "0xD5FD00", VA = "0xD5FD00")]
	public void TransitioinToSnapshot(string name, float transitionTime)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xD643D4", Offset = "0xD643D4", VA = "0xD643D4")]
	public void FadeAudioClip(AudioSourceObject sourceObj, float toValue, float time, [Optional] Action<AudioSourceObject> fadeCompleteCallback)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xD6454C", Offset = "0xD6454C", VA = "0xD6454C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xD635E8", Offset = "0xD635E8", VA = "0xD635E8")]
	public void MusicOn(bool on)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xD6465C", Offset = "0xD6465C", VA = "0xD6465C")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x200000B")]
internal class AudioFade
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Action<AudioSourceObject> m_fadeCompleteCallback;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSourceObject sourceObj;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float startValue;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float endValue;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float transitionTime;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xD62FC0", Offset = "0xD62FC0", VA = "0xD62FC0")]
	public AudioFade(AudioSourceObject source, float end, float time, [Optional] Action<AudioSourceObject> fadeCompleteCallback)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xD63128", Offset = "0xD63128", VA = "0xD63128")]
	public bool UpdateParam(float deltaTime)
	{
		return default(bool);
	}
}
[Token(Token = "0x200000C")]
public class AudioPlayer : MonoBehaviour
{
	[Token(Token = "0x20003DF")]
	public enum Type
	{
		[Token(Token = "0x4001624")]
		PlayOnAwake,
		[Token(Token = "0x4001625")]
		PlayViaCode,
		[Token(Token = "0x4001626")]
		PlayOnInterval
	}

	[Token(Token = "0x20003E0")]
	private enum Shape
	{
		[Token(Token = "0x4001628")]
		None,
		[Token(Token = "0x4001629")]
		Sphere,
		[Token(Token = "0x400162A")]
		Cube
	}

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string m_sound;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSound m_audioSound;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Type m_playbackTiming;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_playOnDelay;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E07FC", Offset = "0x9E07FC")]
	public float m_volumeModifier;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_pitchModifier;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioPlaybackType m_playbackType;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform x_locObj;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSourceObject m_source;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float m_intervalMinTime;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float m_intervalMaxTime;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Shape m_playInArea;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool m_isPaused;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh m_gizmoMesh;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_timer;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int m_frameSkips;

	[Token(Token = "0x17000008")]
	private Transform m_locationObject
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xD646F8", Offset = "0xD646F8", VA = "0xD646F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xD648C0", Offset = "0xD648C0", VA = "0xD648C0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xD64BEC", Offset = "0xD64BEC", VA = "0xD64BEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xD64C58", Offset = "0xD64C58", VA = "0xD64C58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xD64C68", Offset = "0xD64C68", VA = "0xD64C68")]
	private void Update()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xD64E80", Offset = "0xD64E80", VA = "0xD64E80", Slot = "4")]
	public virtual void PlaySound(float fadeInSeconds = 0f)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xD65444", Offset = "0xD65444", VA = "0xD65444")]
	private Vector3 RandomInBox()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xD6558C", Offset = "0xD6558C", VA = "0xD6558C")]
	public void PauseSound()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xD654D4", Offset = "0xD654D4", VA = "0xD654D4")]
	private void ResumeSound()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xD65664", Offset = "0xD65664", VA = "0xD65664", Slot = "5")]
	public virtual void StopSound(float fadeOutSeconds = 0f)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xD657E4", Offset = "0xD657E4", VA = "0xD657E4", Slot = "6")]
	public virtual void StopSoundAndDeactivate(float fadeOutSeconds = 0f)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xD657DC", Offset = "0xD657DC", VA = "0xD657DC")]
	public void RemoveSound()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xD65938", Offset = "0xD65938", VA = "0xD65938")]
	public AudioPlayer()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xD65A98", Offset = "0xD65A98", VA = "0xD65A98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8EBC", Offset = "0x9E8EBC")]
	private void <StopSound>b__28_0(AudioSourceObject source)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xD65AD0", Offset = "0xD65AD0", VA = "0xD65AD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8ECC", Offset = "0x9E8ECC")]
	private void <StopSoundAndDeactivate>b__29_0(AudioSourceObject source)
	{
	}
}
[Serializable]
[Token(Token = "0x200000D")]
public class AudioSound
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string m_audioName;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_volume;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xD659D0", Offset = "0xD659D0", VA = "0xD659D0")]
	public AudioSound()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xD65B14", Offset = "0xD65B14", VA = "0xD65B14")]
	public AudioSound(AudioType type)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xD65BD8", Offset = "0xD65BD8", VA = "0xD65BD8")]
	public AudioSound(AudioType type, float volume)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xD65328", Offset = "0xD65328", VA = "0xD65328")]
	public void SetSound(AudioType type)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xD63FEC", Offset = "0xD63FEC", VA = "0xD63FEC")]
	public AudioType GetAudioType()
	{
		return default(AudioType);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xD653C0", Offset = "0xD653C0", VA = "0xD653C0")]
	public void SetVolume(float vol)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD64194", Offset = "0xD64194", VA = "0xD64194")]
	public float GetVolume()
	{
		return default(float);
	}
}
[Token(Token = "0x200000E")]
public class AudioSourceObject : MonoBehaviour
{
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFAFC", Offset = "0x9DFAFC")]
	private sealed class <StopAudioAfterSeconds>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSourceObject <>4__this;

		[Token(Token = "0x1700027A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0xD6634C", Offset = "0xD6634C", VA = "0xD6634C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0xD663BC", Offset = "0xD663BC", VA = "0xD663BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xD65D88", Offset = "0xD65D88", VA = "0xD65D88")]
		[DebuggerHidden]
		public <StopAudioAfterSeconds>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xD66290", Offset = "0xD66290", VA = "0xD66290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xD66294", Offset = "0xD66294", VA = "0xD66294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xD66354", Offset = "0xD66354", VA = "0xD66354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioPlayer m_player;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_source;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_isActive;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AudioType m_type;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_timer;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_delay;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_isDelay;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_location;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_resetLoop;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSourceObject m_endLoopTrack;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD63C54", Offset = "0xD63C54", VA = "0xD63C54")]
	public AudioType GetAudioType()
	{
		return default(AudioType);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD63290", Offset = "0xD63290", VA = "0xD63290")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xD65CAC", Offset = "0xD65CAC", VA = "0xD65CAC")]
	public AudioPlayer GetPlayer()
	{
		return null;
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD63088", Offset = "0xD63088", VA = "0xD63088")]
	public float GetVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD63298", Offset = "0xD63298", VA = "0xD63298")]
	public void SetVolume(float vol)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD64E50", Offset = "0xD64E50", VA = "0xD64E50")]
	public bool IsLoop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD6565C", Offset = "0xD6565C", VA = "0xD6565C")]
	public AudioSource GetAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD63AD4", Offset = "0xD63AD4", VA = "0xD63AD4")]
	public void SetAudioSource(AudioSource s)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xD6419C", Offset = "0xD6419C", VA = "0xD6419C")]
	public void InitialiseAudio(AudioType type, float delay, Transform trans, float volumeModifier, float pitchModifier, AudioPlayer player)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xD65CB4", Offset = "0xD65CB4", VA = "0xD65CB4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xD657AC", Offset = "0xD657AC", VA = "0xD657AC")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xD65CF0", Offset = "0xD65CF0", VA = "0xD65CF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E8EDC", Offset = "0x9E8EDC")]
	private IEnumerator StopAudioAfterSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xD5FBEC", Offset = "0xD5FBEC", VA = "0xD5FBEC")]
	public void StopAudioAfterFade(float seconds)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xD65DB4", Offset = "0xD65DB4", VA = "0xD65DB4")]
	public void StopAudioAtEndOfLoop(AudioType trackToPlayOnEnd = AudioType.None)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xD65F4C", Offset = "0xD65F4C", VA = "0xD65F4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xD66138", Offset = "0xD66138", VA = "0xD66138")]
	private void RemoveSound()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xD66280", Offset = "0xD66280", VA = "0xD66280")]
	public AudioSourceObject()
	{
	}
}
[Token(Token = "0x200000F")]
public enum AudioType
{
	[Token(Token = "0x400004C")]
	background,
	[Token(Token = "0x400004D")]
	bombExplode,
	[Token(Token = "0x400004E")]
	bombThrow,
	[Token(Token = "0x400004F")]
	bombFuseLP,
	[Token(Token = "0x4000050")]
	gank,
	[Token(Token = "0x4000051")]
	Game_over,
	[Token(Token = "0x4000052")]
	Game_start,
	[Token(Token = "0x4000053")]
	fruitSplatter,
	[Token(Token = "0x4000054")]
	fruitStab,
	[Token(Token = "0x4000055")]
	fruitImpactApple,
	[Token(Token = "0x4000056")]
	fruitImpactPumpkin,
	[Token(Token = "0x4000057")]
	fruitImpactBigHollow,
	[Token(Token = "0x4000058")]
	fruitImpactBigWet,
	[Token(Token = "0x4000059")]
	fruitImpactMediumCrunchy,
	[Token(Token = "0x400005A")]
	fruitImpactMediumDry,
	[Token(Token = "0x400005B")]
	fruitImpactMediumWet,
	[Token(Token = "0x400005C")]
	fruitImpactSmallWet,
	[Token(Token = "0x400005D")]
	fruitWaterSplash,
	[Token(Token = "0x400005E")]
	fruitThrow,
	[Token(Token = "0x400005F")]
	ExtraLife,
	[Token(Token = "0x4000060")]
	ambCourtyardDayFL,
	[Token(Token = "0x4000061")]
	ambCourtyardDayFR,
	[Token(Token = "0x4000062")]
	ambCourtyardDayRR,
	[Token(Token = "0x4000063")]
	ambCourtyardDayRL,
	[Token(Token = "0x4000064")]
	ambCourtyardHalloweenFL,
	[Token(Token = "0x4000065")]
	ambCourtyardHalloweenFR,
	[Token(Token = "0x4000066")]
	ambCourtyardHalloweenRear,
	[Token(Token = "0x4000067")]
	ambOutlookFL,
	[Token(Token = "0x4000068")]
	ambOutlookFR,
	[Token(Token = "0x4000069")]
	ambOutlookRear,
	[Token(Token = "0x400006A")]
	ambOutlookBird,
	[Token(Token = "0x400006B")]
	Critical,
	[Token(Token = "0x400006C")]
	uiTimerTick,
	[Token(Token = "0x400006D")]
	uiTimerTock,
	[Token(Token = "0x400006E")]
	uiTimerRing,
	[Token(Token = "0x400006F")]
	fruitBounce,
	[Token(Token = "0x4000070")]
	bombBounce,
	[Token(Token = "0x4000071")]
	bombFizzle,
	[Token(Token = "0x4000072")]
	bombLand,
	[Token(Token = "0x4000073")]
	bonusPoints,
	[Token(Token = "0x4000074")]
	combo1,
	[Token(Token = "0x4000075")]
	combo2,
	[Token(Token = "0x4000076")]
	combo3,
	[Token(Token = "0x4000077")]
	combo4,
	[Token(Token = "0x4000078")]
	combo5,
	[Token(Token = "0x4000079")]
	combo6,
	[Token(Token = "0x400007A")]
	combo7,
	[Token(Token = "0x400007B")]
	combo8,
	[Token(Token = "0x400007C")]
	comboBlitz,
	[Token(Token = "0x400007D")]
	blitzLightLP,
	[Token(Token = "0x400007E")]
	blitzHeavyLP,
	[Token(Token = "0x400007F")]
	blitzEnd,
	[Token(Token = "0x4000080")]
	bladeRegularSlow,
	[Token(Token = "0x4000081")]
	bladeRegularFast,
	[Token(Token = "0x4000082")]
	bladeRegularLP,
	[Token(Token = "0x4000083")]
	musMenuMain,
	[Token(Token = "0x4000084")]
	musMenuHalloween,
	[Token(Token = "0x4000085")]
	musMenuChristmas,
	[Token(Token = "0x4000086")]
	uiResultsWhoosh,
	[Token(Token = "0x4000087")]
	uiResultsScrollOpen,
	[Token(Token = "0x4000088")]
	uiResultsScrollClose,
	[Token(Token = "0x4000089")]
	uiResultsBonus1,
	[Token(Token = "0x400008A")]
	uiResultsBonus2,
	[Token(Token = "0x400008B")]
	uiResultsBonus3,
	[Token(Token = "0x400008C")]
	uiResultsBonusTotal,
	[Token(Token = "0x400008D")]
	uiResultsFinalImpact,
	[Token(Token = "0x400008E")]
	uiResultsFinalIncrement,
	[Token(Token = "0x400008F")]
	uiResultsFinalLaunch,
	[Token(Token = "0x4000090")]
	uiResultsBestLaunch,
	[Token(Token = "0x4000091")]
	uiResultsBestExplode,
	[Token(Token = "0x4000092")]
	uiLeaderboardScore,
	[Token(Token = "0x4000093")]
	uiBombExplode,
	[Token(Token = "0x4000094")]
	uiPauseOpen,
	[Token(Token = "0x4000095")]
	uiPauseScroll,
	[Token(Token = "0x4000096")]
	uiPauseSelect,
	[Token(Token = "0x4000097")]
	uiLetterScroll,
	[Token(Token = "0x4000098")]
	uiSwordEquip,
	[Token(Token = "0x4000099")]
	powerupThrow,
	[Token(Token = "0x400009A")]
	powerupFreezeImpact,
	[Token(Token = "0x400009B")]
	powerupFrenzyImpact,
	[Token(Token = "0x400009C")]
	powerupX2Impact,
	[Token(Token = "0x400009D")]
	powerupFreezeLP,
	[Token(Token = "0x400009E")]
	powerupPeachThrow,
	[Token(Token = "0x400009F")]
	powerupPeachImpact,
	[Token(Token = "0x40000A0")]
	heliFlyLP,
	[Token(Token = "0x40000A1")]
	heliSpawn,
	[Token(Token = "0x40000A2")]
	heliWindup,
	[Token(Token = "0x40000A3")]
	heliSmash,
	[Token(Token = "0x40000A4")]
	heliRelease,
	[Token(Token = "0x40000A5")]
	heliFlinch,
	[Token(Token = "0x40000A6")]
	heliCollision,
	[Token(Token = "0x40000A7")]
	halloweenGhost,
	[Token(Token = "0x40000A8")]
	heliSpawnHalloween,
	[Token(Token = "0x40000A9")]
	heliLaughHalloween,
	[Token(Token = "0x40000AA")]
	Game_start_halloween,
	[Token(Token = "0x40000AB")]
	ambCourtyardNightFL,
	[Token(Token = "0x40000AC")]
	ambCourtyardNightFR,
	[Token(Token = "0x40000AD")]
	ambCourtyardNightRL,
	[Token(Token = "0x40000AE")]
	ambCourtyardNightRR,
	[Token(Token = "0x40000AF")]
	ambCourtyardNightBat,
	[Token(Token = "0x40000B0")]
	ambCourtyardNightOwl,
	[Token(Token = "0x40000B1")]
	ambCourtyardNightWolf,
	[Token(Token = "0x40000B2")]
	bladeIceSwipe,
	[Token(Token = "0x40000B3")]
	bladeDragonFruitFlameSwipe,
	[Token(Token = "0x40000B4")]
	bladeButterflySwipe,
	[Token(Token = "0x40000B5")]
	bladeDiscoSwipe,
	[Token(Token = "0x40000B6")]
	bladeRockSwipe,
	[Token(Token = "0x40000B7")]
	bladeShadowSwipe,
	[Token(Token = "0x40000B8")]
	bladeSongSwordSwipe,
	[Token(Token = "0x40000B9")]
	bladeWindSwordSwipe,
	[Token(Token = "0x40000BA")]
	bladeHalloweenSwordSwipe,
	[Token(Token = "0x40000BB")]
	bladeChristmasSwordSwipe,
	[Token(Token = "0x40000BC")]
	testTone,
	[Token(Token = "0x40000BD")]
	AchievementScrolling,
	[Token(Token = "0x40000BE")]
	None
}
[Serializable]
[Token(Token = "0x2000010")]
public class Sound : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_fileName;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup m_audioMixerGroup;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_maxPlayingAtOnce;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_loop;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool m_3dSound;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_volume;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_dopplerLevel;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 m_minMaxPitch;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 m_minMaxDistance;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<AudioClip> m_allAudioClips;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_lastClipPlayed;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int m_numberPlayingInScene;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB7C5EC", Offset = "0xB7C5EC", VA = "0xB7C5EC")]
	public void AddAudioClip(AudioClip clip)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB7C65C", Offset = "0xB7C65C", VA = "0xB7C65C")]
	public int GetNumberOfClips()
	{
		return default(int);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB7C6BC", Offset = "0xB7C6BC", VA = "0xB7C6BC")]
	public void ClearAllAudioClips()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB7C71C", Offset = "0xB7C71C", VA = "0xB7C71C")]
	public bool ApplySoundInformation(AudioType type, AudioPlaybackType playbackType, ref AudioSourceObject sourceObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB7CB7C", Offset = "0xB7CB7C", VA = "0xB7CB7C")]
	public void FinishedPlayingSound()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xB7CB8C", Offset = "0xB7CB8C", VA = "0xB7CB8C")]
	public void ResetSequence()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xB7CBF8", Offset = "0xB7CBF8", VA = "0xB7CBF8")]
	public Sound()
	{
	}
}
[Token(Token = "0x2000011")]
public class TestAudioFruit : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioPlayer player;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSourceObject soundObj;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB92A00", Offset = "0xB92A00", VA = "0xB92A00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB92A70", Offset = "0xB92A70", VA = "0xB92A70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB92BD0", Offset = "0xB92BD0", VA = "0xB92BD0")]
	public TestAudioFruit()
	{
	}
}
[Token(Token = "0x2000012")]
public class AzureUIController : MonoBehaviour
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AzureSkyController skyController;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slider;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image transitionBar;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_scale;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD66DB4", Offset = "0xD66DB4", VA = "0xD66DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD66EE8", Offset = "0xD66EE8", VA = "0xD66EE8")]
	public AzureUIController()
	{
	}
}
[Token(Token = "0x2000013")]
public class CameraRotation : MonoBehaviour
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 v3;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 p3;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cameraZoon;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool zoom;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xC5A1E0", Offset = "0xC5A1E0", VA = "0xC5A1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xC5A224", Offset = "0xC5A224", VA = "0xC5A224")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xC5A490", Offset = "0xC5A490", VA = "0xC5A490")]
	private Vector3 clamp(Vector3 v3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xC5A4D4", Offset = "0xC5A4D4", VA = "0xC5A4D4")]
	public CameraRotation()
	{
	}
}
[Token(Token = "0x2000014")]
public class Fader : MonoBehaviour
{
	[Token(Token = "0x20003E2")]
	public delegate void OnFadeComplete(State state);

	[Token(Token = "0x20003E3")]
	public enum State
	{
		[Token(Token = "0x4001630")]
		FadedIn,
		[Token(Token = "0x4001631")]
		FadingIn,
		[Token(Token = "0x4001632")]
		FadingOut,
		[Token(Token = "0x4001633")]
		FadedOut
	}

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startFadedOut;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private State m_state;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float t;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color color1;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color color2;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioSource;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float volume;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OnFadeComplete m_fadeCallback;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xC68EFC", Offset = "0xC68EFC", VA = "0xC68EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xC69160", Offset = "0xC69160", VA = "0xC69160")]
	private void Update()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xC69874", Offset = "0xC69874", VA = "0xC69874")]
	public void FadeOut(float delay = 0f, [Optional] OnFadeComplete callabck)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xC69A60", Offset = "0xC69A60", VA = "0xC69A60")]
	public void FadeIn(float delay = 0f, [Optional] OnFadeComplete callabck)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xC69C48", Offset = "0xC69C48", VA = "0xC69C48")]
	public State GetState()
	{
		return default(State);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xC69C50", Offset = "0xC69C50", VA = "0xC69C50")]
	public Fader()
	{
	}
}
[Token(Token = "0x2000015")]
public class FruitGutsLoader : MonoBehaviour
{
	[Token(Token = "0x6000072")]
	[Address(RVA = "0xBDB2A8", Offset = "0xBDB2A8", VA = "0xBDB2A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xBDB2E0", Offset = "0xBDB2E0", VA = "0xBDB2E0")]
	public FruitGutsLoader()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE104", Offset = "0x9DE104")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xC57F7C", Offset = "0xC57F7C", VA = "0xC57F7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xC57F88", Offset = "0xC57F88", VA = "0xC57F88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xC580B4", Offset = "0xC580B4", VA = "0xC580B4")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000017")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB0C", Offset = "0x9DFB0C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xC591F0", Offset = "0xC591F0", VA = "0xC591F0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xC591F8", Offset = "0xC591F8", VA = "0xC591F8")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB1C", Offset = "0x9DFB1C")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x1700027C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xC593EC", Offset = "0xC593EC", VA = "0xC593EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xC5945C", Offset = "0xC5945C", VA = "0xC5945C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xC590F0", Offset = "0xC590F0", VA = "0xC590F0")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xC59268", Offset = "0xC59268", VA = "0xC59268", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xC5926C", Offset = "0xC5926C", VA = "0xC5926C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xC593F4", Offset = "0xC593F4", VA = "0xC593F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E0874", Offset = "0x9E0874")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E0874", Offset = "0x9E0874")]
	public Image slowMoBtn;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E08AC", Offset = "0x9E08AC")]
	public Text EffectLabel;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xC580C4", Offset = "0xC580C4", VA = "0xC580C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xC584DC", Offset = "0xC584DC", VA = "0xC584DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xC58D4C", Offset = "0xC58D4C", VA = "0xC58D4C")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xC58E78", Offset = "0xC58E78", VA = "0xC58E78")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xC58F94", Offset = "0xC58F94", VA = "0xC58F94")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xC59074", Offset = "0xC59074", VA = "0xC59074")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xC59078", Offset = "0xC59078", VA = "0xC59078")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xC58370", Offset = "0xC58370", VA = "0xC58370")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xC58ACC", Offset = "0xC58ACC", VA = "0xC58ACC")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xC5907C", Offset = "0xC5907C", VA = "0xC5907C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E8F40", Offset = "0x9E8F40")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xC588D0", Offset = "0xC588D0", VA = "0xC588D0")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xC5891C", Offset = "0xC5891C", VA = "0xC5891C")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xC58970", Offset = "0xC58970", VA = "0xC58970")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xC5911C", Offset = "0xC5911C", VA = "0xC5911C")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000018")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xC59464", Offset = "0xC59464", VA = "0xC59464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xC5951C", Offset = "0xC5951C", VA = "0xC5951C")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000019")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xC595B0", Offset = "0xC595B0", VA = "0xC595B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xC59714", Offset = "0xC59714", VA = "0xC59714")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xC598CC", Offset = "0xC598CC", VA = "0xC598CC")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200001A")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xC5995C", Offset = "0xC5995C", VA = "0xC5995C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xC59AC0", Offset = "0xC59AC0", VA = "0xC59AC0")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x200001B")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xC59B24", Offset = "0xC59B24", VA = "0xC59B24")]
	private void Start()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xC59C18", Offset = "0xC59C18", VA = "0xC59C18")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xC59D1C", Offset = "0xC59D1C", VA = "0xC59D1C")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE168", Offset = "0x9DE168")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB2C", Offset = "0x9DFB2C")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x1700027E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xC57E14", Offset = "0xC57E14", VA = "0xC57E14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xC57E84", Offset = "0xC57E84", VA = "0xC57E84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xC57C20", Offset = "0xC57C20", VA = "0xC57C20")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xC57C54", Offset = "0xC57C54", VA = "0xC57C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xC57C58", Offset = "0xC57C58", VA = "0xC57C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xC57E1C", Offset = "0xC57E1C", VA = "0xC57E1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC57B58", Offset = "0xC57B58", VA = "0xC57B58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC57BAC", Offset = "0xC57BAC", VA = "0xC57BAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E8FA4", Offset = "0x9E8FA4")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC57C4C", Offset = "0xC57C4C", VA = "0xC57C4C")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x200001D")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC57E8C", Offset = "0xC57E8C", VA = "0xC57E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC57F6C", Offset = "0xC57F6C", VA = "0xC57F6C")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE1CC", Offset = "0x9DE1CC")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xC59DAC", Offset = "0xC59DAC", VA = "0xC59DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xC59E1C", Offset = "0xC59E1C", VA = "0xC59E1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xC59E30", Offset = "0xC59E30", VA = "0xC59E30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xC59F0C", Offset = "0xC59F0C", VA = "0xC59F0C")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE230", Offset = "0x9DE230")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xC59F1C", Offset = "0xC59F1C", VA = "0xC59F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xC59F8C", Offset = "0xC59F8C", VA = "0xC59F8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xC5A018", Offset = "0xC5A018", VA = "0xC5A018")]
	private void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xC5A1D0", Offset = "0xC5A1D0", VA = "0xC5A1D0")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000020")]
public class TCP2_Demo_Camera : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Pivot;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E08BC", Offset = "0x9E08BC")]
	public float OrbitStrg;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float OrbitClamp;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E08F4", Offset = "0x9E08F4")]
	public float PanStrgMin;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float PanStrgMax;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E092C", Offset = "0x9E092C")]
	public float ZoomStrg;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ZoomClamp;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ZoomDistMin;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ZoomDistMax;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0964", Offset = "0x9E0964")]
	public float Decceleration;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform ignoreMouseRect;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 mouseDelta;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 orbitAcceleration;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 panAcceleration;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 moveAcceleration;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float zoomAcceleration;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float zoomDistance;

	[Token(Token = "0x4000122")]
	private const float XMax = 60f;

	[Token(Token = "0x4000123")]
	private const float XMin = 300f;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 mResetCamPos;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 mResetPivotPos;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 mResetCamRot;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 mResetPivotRot;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool leftMouseHeld;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool rightMouseHeld;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	private bool middleMouseHeld;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB8389C", Offset = "0xB8389C", VA = "0xB8389C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB83954", Offset = "0xB83954", VA = "0xB83954")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB83980", Offset = "0xB83980", VA = "0xB83980")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB84284", Offset = "0xB84284", VA = "0xB84284")]
	public void ResetView()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB843F4", Offset = "0xB843F4", VA = "0xB843F4")]
	public TCP2_Demo_Camera()
	{
	}
}
[Token(Token = "0x2000021")]
public class TCP2_Demo_Cat : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003E7")]
	public class Ambience
	{
		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] activate;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material skybox;

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xB856E0", Offset = "0xB856E0", VA = "0xB856E0")]
		public Ambience()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003E8")]
	public class ShaderStyle
	{
		[Serializable]
		[Token(Token = "0x20005A4")]
		public class CharacterSettings
		{
			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material material;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Renderer[] renderers;

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0xB856F0", Offset = "0xB856F0", VA = "0xB856F0")]
			public CharacterSettings()
			{
			}
		}

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterSettings[] settings;

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xB856E8", Offset = "0xB856E8", VA = "0xB856E8")]
		public ShaderStyle()
		{
		}
	}

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ambience[] ambiences;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int amb;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E099C", Offset = "0x9E099C")]
	public ShaderStyle[] styles;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int style;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E09AC", Offset = "0x9E09AC")]
	public GameObject shadedGroup;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject flatGroup;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E09BC", Offset = "0x9E09BC")]
	public GameObject[] cats;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] unityChans;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject unityChanCopyright;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E09CC", Offset = "0x9E09CC")]
	public AnimationClip[] catAnimations;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int catAnim;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationClip[] unityChanAnimations;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int uchanAnim;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E09DC", Offset = "0x9E09DC")]
	private bool <animate>k__BackingField;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float animTime;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E09EC", Offset = "0x9E09EC")]
	public Light[] dirLights;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Light[] otherLights;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform rotatingPointLights;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E09FC", Offset = "0x9E09FC")]
	private bool <rotateLights>k__BackingField;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0A0C", Offset = "0x9E0A0C")]
	private bool <rotatePointLights>k__BackingField;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E0A1C", Offset = "0x9E0A1C")]
	public Button[] ambiencesButtons;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button[] stylesButtons;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Button[] characterButtons;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Button[] textureButtons;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button[] animationButtons;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E0A2C", Offset = "0x9E0A2C")]
	public Canvas canvas;

	[Token(Token = "0x17000009")]
	public bool animate
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xB84418", Offset = "0xB84418", VA = "0xB84418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9008", Offset = "0x9E9008")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xB84420", Offset = "0xB84420", VA = "0xB84420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9018", Offset = "0x9E9018")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public bool rotateLights
	{
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xB8442C", Offset = "0xB8442C", VA = "0xB8442C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9028", Offset = "0x9E9028")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xB84434", Offset = "0xB84434", VA = "0xB84434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9038", Offset = "0x9E9038")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public bool rotatePointLights
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xB84440", Offset = "0xB84440", VA = "0xB84440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9048", Offset = "0x9E9048")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xB84448", Offset = "0xB84448", VA = "0xB84448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9058", Offset = "0x9E9058")]
		set
		{
		}
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB84454", Offset = "0xB84454", VA = "0xB84454")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB850F8", Offset = "0xB850F8", VA = "0xB850F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB85414", Offset = "0xB85414", VA = "0xB85414")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB844B4", Offset = "0xB844B4", VA = "0xB844B4")]
	public void SetAmbience(int index)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB847D0", Offset = "0xB847D0", VA = "0xB847D0")]
	public void SetStyle(int index)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB84D1C", Offset = "0xB84D1C", VA = "0xB84D1C")]
	public void SetFlat(bool flat)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB84A8C", Offset = "0xB84A8C", VA = "0xB84A8C")]
	public void SetCat(bool cat)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB855D0", Offset = "0xB855D0", VA = "0xB855D0")]
	public void SetLightShadows(bool on)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB84EF4", Offset = "0xB84EF4", VA = "0xB84EF4")]
	public void SetAnimation(int index)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB856D8", Offset = "0xB856D8", VA = "0xB856D8")]
	public TCP2_Demo_Cat()
	{
	}
}
[Token(Token = "0x2000022")]
[ExecuteInEditMode]
public class TCP2_Demo_GammaLinear : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003E9")]
	public class LightSettings
	{
		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Light light;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float gammaIntensity;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float linearIntensity;

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xB85700", Offset = "0xB85700", VA = "0xB85700")]
		public LightSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003EA")]
	public class MaterialSettings
	{
		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color gammaColor;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color linearColor;

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xB85708", Offset = "0xB85708", VA = "0xB85708")]
		public MaterialSettings()
		{
		}
	}

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightSettings[] lights;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaterialSettings[] materials;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ColorSpace lastColorSpace;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB856F8", Offset = "0xB856F8", VA = "0xB856F8")]
	public TCP2_Demo_GammaLinear()
	{
	}
}
[Token(Token = "0x2000023")]
public class TCP2_Demo : MonoBehaviour
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] AffectedMaterials;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] RampTextures;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUISkin GuiSkin;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light DirLight;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Robot;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Ethan;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mUnityShader;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool mShaderSpecular;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool mShaderBump;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool mShaderReflection;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool mShaderRim;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool mShaderRimOutline;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool mShaderOutline;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mRimMin;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float mRimMax;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool mRampTextureFlag;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D mRampTexture;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float mRampSmoothing;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float mLightRotationX;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float mLightRotationY;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool mViewRobot;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool mRobotOutlineNormals;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TCP2_Demo_View DemoView;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB8111C", Offset = "0xB8111C", VA = "0xB8111C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB8184C", Offset = "0xB8184C", VA = "0xB8184C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB819F0", Offset = "0xB819F0", VA = "0xB819F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB832D0", Offset = "0xB832D0", VA = "0xB832D0")]
	private void UnityDiffuseShader()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xB811A8", Offset = "0xB811A8", VA = "0xB811A8")]
	private void UpdateShader()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB82FC0", Offset = "0xB82FC0", VA = "0xB82FC0")]
	private void RimOutlineColor()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB81870", Offset = "0xB81870", VA = "0xB81870")]
	private void RestoreRimColors()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB83418", Offset = "0xB83418", VA = "0xB83418")]
	private void ToggleKeyword(Material m, bool enabled, string keyword)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB830B0", Offset = "0xB830B0", VA = "0xB830B0")]
	private void PrevRamp()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB831B8", Offset = "0xB831B8", VA = "0xB831B8")]
	private void NextRamp()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB83858", Offset = "0xB83858", VA = "0xB83858")]
	public TCP2_Demo()
	{
	}
}
[Token(Token = "0x2000024")]
public class TCP2_Demo_PBS : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003EB")]
	public class SkyboxSetting
	{
		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material SkyMaterial;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color lightColor;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 DirLightEuler;

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xB86BC0", Offset = "0xB86BC0", VA = "0xB86BC0")]
		public SkyboxSetting()
		{
		}
	}

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light DirLight;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PointLights;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer Robot;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Canvas;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SkyboxSetting[] SkySettings;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool FlipLight;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D[] RampTextures;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider SmoothnessSlider;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text SmoothnessValue;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider MetallicSlider;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text MetallicValue;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text BumpScaleValue;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text ShaderText;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text SkyboxValue;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text RampValue;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Slider RampThresholdSlider;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text RampThresholdValue;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Slider RampSmoothSlider;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text RampSmoothValue;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Slider RampSmoothAddSlider;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text RampSmoothAddValue;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RawImage RampImage;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentSky;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int currentRamp;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Material robotMaterial;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool mUseOutline;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool mRotatePointLights;

	[Token(Token = "0x1700000C")]
	public bool ShowPointLights
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xB85710", Offset = "0xB85710", VA = "0xB85710")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool ShowDirLight
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xB85748", Offset = "0xB85748", VA = "0xB85748")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public bool RotatePointLights
	{
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0xB85780", Offset = "0xB85780", VA = "0xB85780")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0xB85788", Offset = "0xB85788", VA = "0xB85788")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public bool UseOutline
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xB85794", Offset = "0xB85794", VA = "0xB85794")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xB8579C", Offset = "0xB8579C", VA = "0xB8579C")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public bool UseRampTexture
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xB8592C", Offset = "0xB8592C", VA = "0xB8592C")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public bool UseStylizedFresnel
	{
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xB859FC", Offset = "0xB859FC", VA = "0xB859FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public bool UseStylizedSpecular
	{
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xB85ACC", Offset = "0xB85ACC", VA = "0xB85ACC")]
		set
		{
		}
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB85B9C", Offset = "0xB85B9C", VA = "0xB85B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB86260", Offset = "0xB86260", VA = "0xB86260")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xB864B8", Offset = "0xB864B8", VA = "0xB864B8")]
	public void ToggleShader()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xB86418", Offset = "0xB86418", VA = "0xB86418")]
	public void NextSky()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB8646C", Offset = "0xB8646C", VA = "0xB8646C")]
	public void PrevSky()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB86624", Offset = "0xB86624", VA = "0xB86624")]
	public void NextRamp()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB86678", Offset = "0xB86678", VA = "0xB86678")]
	public void PrevRamp()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB866C4", Offset = "0xB866C4", VA = "0xB866C4")]
	public void SetMetallic(float f)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB86784", Offset = "0xB86784", VA = "0xB86784")]
	public void SetSmoothness(float f)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xB86844", Offset = "0xB86844", VA = "0xB86844")]
	public void SetBumpScale(float f)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xB86904", Offset = "0xB86904", VA = "0xB86904")]
	public void SetRampThreshold(float f)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xB869C4", Offset = "0xB869C4", VA = "0xB869C4")]
	public void SetRampSmooth(float f)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xB86A84", Offset = "0xB86A84", VA = "0xB86A84")]
	public void SetRampSmoothAdd(float f)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xB860C0", Offset = "0xB860C0", VA = "0xB860C0")]
	private void UpdateRamp()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xB85E18", Offset = "0xB85E18", VA = "0xB85E18")]
	private void UpdateSky()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xB865B0", Offset = "0xB865B0", VA = "0xB865B0")]
	private void ShowUnityStandardShader()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB85860", Offset = "0xB85860", VA = "0xB85860")]
	public void ShowTCP2Shader()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB86B44", Offset = "0xB86B44", VA = "0xB86B44")]
	private void ToggleKeyword(Material m, bool enabled, string keyword)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB86BAC", Offset = "0xB86BAC", VA = "0xB86BAC")]
	public TCP2_Demo_PBS()
	{
	}
}
[Token(Token = "0x2000025")]
public class TCP2_Demo_PBS_View : MonoBehaviour
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Pivot;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0A3C", Offset = "0x9E0A3C")]
	public float OrbitStrg;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float OrbitClamp;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0A74", Offset = "0x9E0A74")]
	public float PanStrg;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float PanClamp;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMin;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMax;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0AAC", Offset = "0x9E0AAC")]
	public float ZoomStrg;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ZoomClamp;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ZoomDistMin;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ZoomDistMax;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0AE4", Offset = "0x9E0AE4")]
	public float Decceleration;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Rect ignoreMouseRect;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 mouseDelta;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 orbitAcceleration;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 panAcceleration;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 moveAcceleration;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float zoomAcceleration;

	[Token(Token = "0x400018C")]
	private const float XMax = 60f;

	[Token(Token = "0x400018D")]
	private const float XMin = 300f;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 mResetCamPos;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 mResetPivotPos;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 mResetCamRot;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 mResetPivotRot;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool leftMouseHeld;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool rightMouseHeld;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool middleMouseHeld;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB86BC8", Offset = "0xB86BC8", VA = "0xB86BC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB86C80", Offset = "0xB86C80", VA = "0xB86C80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB86CAC", Offset = "0xB86CAC", VA = "0xB86CAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB8755C", Offset = "0xB8755C", VA = "0xB8755C")]
	public void ResetView()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB876CC", Offset = "0xB876CC", VA = "0xB876CC")]
	public TCP2_Demo_PBS_View()
	{
	}
}
[Token(Token = "0x2000026")]
public class TCP2_Demo_View : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0B1C", Offset = "0x9E0B1C")]
	public float OrbitStrg;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float OrbitClamp;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0B54", Offset = "0x9E0B54")]
	public float PanStrg;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float PanClamp;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0B8C", Offset = "0x9E0B8C")]
	public float ZoomStrg;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ZoomClamp;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E0BC4", Offset = "0x9E0BC4")]
	public float Decceleration;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform CharacterTransform;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 mouseDelta;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 orbitAcceleration;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 panAcceleration;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 moveAcceleration;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float zoomAcceleration;

	[Token(Token = "0x40001A2")]
	private const float XMax = 60f;

	[Token(Token = "0x40001A3")]
	private const float XMin = 300f;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 mResetCamPos;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 mResetCamRot;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool mMouseDown;

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB876F4", Offset = "0xB876F4", VA = "0xB876F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB87790", Offset = "0xB87790", VA = "0xB87790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB877BC", Offset = "0xB877BC", VA = "0xB877BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB88128", Offset = "0xB88128", VA = "0xB88128")]
	public void ResetView()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB881E8", Offset = "0xB881E8", VA = "0xB881E8")]
	public TCP2_Demo_View()
	{
	}
}
[Token(Token = "0x2000027")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE2A4", Offset = "0x9DE2A4")]
public class TCP2_CameraDepth : MonoBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RenderDepth;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB81054", Offset = "0xB81054", VA = "0xB81054")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB81108", Offset = "0xB81108", VA = "0xB81108")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB81058", Offset = "0xB81058", VA = "0xB81058")]
	private void SetCameraDepth()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB8110C", Offset = "0xB8110C", VA = "0xB8110C")]
	public TCP2_CameraDepth()
	{
	}
}
[Token(Token = "0x2000028")]
public class TCP2_GetPosOnWater : MonoBehaviour
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material WaterMaterial;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0BFC", Offset = "0x9E0BFC")]
	public float heightScale;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E0C34", Offset = "0x9E0C34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0C34", Offset = "0x9E0C34")]
	public bool followWaterHeight;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0C80", Offset = "0x9E0C80")]
	public float heightOffset;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E0CB8", Offset = "0x9E0CB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0CB8", Offset = "0x9E0CB8")]
	public bool followWaterNormal;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0D04", Offset = "0x9E0D04")]
	public Vector3 upAxis;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0D3C", Offset = "0x9E0D3C")]
	public Vector3 postRotation;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private bool isValid;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private int sineCount;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] sinePosOffsetsX;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] sinePosOffsetsZ;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] sinePhsOffsetsX;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] sinePhsOffsetsZ;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB88210", Offset = "0xB88210", VA = "0xB88210")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB88408", Offset = "0xB88408", VA = "0xB88408")]
	public Vector3 GetPositionOnWater(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB893D0", Offset = "0xB893D0", VA = "0xB893D0")]
	public Vector3 GetNormalOnWater(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB8A9AC", Offset = "0xB8A9AC", VA = "0xB8A9AC")]
	public TCP2_GetPosOnWater()
	{
	}
}
[Token(Token = "0x2000029")]
[ExecuteInEditMode]
public class TCP2_PlanarReflection : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB8AB20", Offset = "0xB8AB20", VA = "0xB8AB20")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB8C1F8", Offset = "0xB8C1F8", VA = "0xB8C1F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB8B910", Offset = "0xB8B910", VA = "0xB8B910")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB8B208", Offset = "0xB8B208", VA = "0xB8B208")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB8C664", Offset = "0xB8C664", VA = "0xB8C664")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB8C010", Offset = "0xB8C010", VA = "0xB8C010")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB8BD6C", Offset = "0xB8BD6C", VA = "0xB8BD6C")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB8C684", Offset = "0xB8C684", VA = "0xB8C684")]
	public TCP2_PlanarReflection()
	{
	}
}
[Token(Token = "0x200002A")]
public static class TCP2_RuntimeUtils
{
	[Token(Token = "0x40001BD")]
	private const string BASE_SHADER_PATH = "Toony Colors Pro 2/";

	[Token(Token = "0x40001BE")]
	private const string VARIANT_SHADER_PATH = "Hidden/Toony Colors Pro 2/Variants/";

	[Token(Token = "0x40001BF")]
	private const string BASE_SHADER_NAME = "Desktop";

	[Token(Token = "0x40001C0")]
	private const string BASE_SHADER_NAME_MOB = "Mobile";

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string[]> ShaderVariants;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB83480", Offset = "0xB83480", VA = "0xB83480")]
	public static Shader GetShaderWithKeywords(Material material)
	{
		return null;
	}
}
[Token(Token = "0x200002B")]
public class TCP2_ShaderUpdateUnityTime : MonoBehaviour
{
	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB8CDDC", Offset = "0xB8CDDC", VA = "0xB8CDDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB8CE30", Offset = "0xB8CE30", VA = "0xB8CE30")]
	public TCP2_ShaderUpdateUnityTime()
	{
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DE328", Offset = "0x9DE328")]
public class FastList<T>
{
	[Token(Token = "0x20003EC")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB3C", Offset = "0x9DFB3C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000280")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001E4D")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000281")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E4F")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E4A")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001E4B")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E4C")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4E")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000013")]
	public int Count
	{
		[Token(Token = "0x60000FA")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000FB")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public T Item
	{
		[Token(Token = "0x60000FC")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60000FD")]
		set
		{
		}
	}

	[Token(Token = "0x60000F8")]
	public FastList()
	{
	}

	[Token(Token = "0x60000F9")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60000FE")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60000FF")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000100")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000101")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000102")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000103")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000104")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000106")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000108")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000109")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600010B")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600010C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9068", Offset = "0x9E9068")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600010E")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600010F")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000110")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000111")]
	public void Release()
	{
	}
}
[Token(Token = "0x200002D")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xBF28B8", Offset = "0xBF28B8", VA = "0xBF28B8")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200002E")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xBF288C", Offset = "0xBF288C", VA = "0xBF288C")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001C7")]
	private const float mobileBaseHeadHeight = 1.7f;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xCB7C0C", Offset = "0xCB7C0C", VA = "0xCB7C0C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xCB7D38", Offset = "0xCB7D38", VA = "0xCB7D38")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xCB8094", Offset = "0xCB8094", VA = "0xCB8094")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xCB841C", Offset = "0xCB841C", VA = "0xCB841C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xCB8448", Offset = "0xCB8448", VA = "0xCB8448")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000030")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x190E318", Offset = "0x190E318", VA = "0x190E318")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x190E3A4", Offset = "0x190E3A4", VA = "0x190E3A4")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x190E568", Offset = "0x190E568", VA = "0x190E568")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000031")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20003EE")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xC176F8", Offset = "0xC176F8", VA = "0xC176F8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003EF")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E85C4", Offset = "0x9E85C4")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E85DC", Offset = "0x9E85DC")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E85F4", Offset = "0x9E85F4")]
		public float LatencyWeight;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E860C", Offset = "0x9E860C")]
		public int MaxSamples;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xC17700", Offset = "0xC17700", VA = "0xC17700")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xC1790C", Offset = "0xC1790C", VA = "0xC1790C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xC16BDC", Offset = "0xC16BDC", VA = "0xC16BDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC16DBC", Offset = "0xC16DBC", VA = "0xC16DBC")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC17170", Offset = "0xC17170", VA = "0xC17170")]
	private void Update()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC170B8", Offset = "0xC170B8", VA = "0xC170B8")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC17450", Offset = "0xC17450", VA = "0xC17450")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC17880", Offset = "0xC17880", VA = "0xC17880")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000032")]
public class P2PManager
{
	[Token(Token = "0x20003F0")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001659")]
		Update = 1
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xCB8934", Offset = "0xCB8934", VA = "0xCB8934")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xCB89F4", Offset = "0xCB89F4", VA = "0xCB89F4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xCB8AD8", Offset = "0xCB8AD8", VA = "0xCB8AD8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xCB8B5C", Offset = "0xCB8B5C", VA = "0xCB8B5C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xCB8D50", Offset = "0xCB8D50", VA = "0xCB8D50")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xCB91B0", Offset = "0xCB91B0", VA = "0xCB91B0")]
	public void SendAvatarUpdate(ulong userID, Transform bodyTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xCB9678", Offset = "0xCB9678", VA = "0xCB9678")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xCB9968", Offset = "0xCB9968", VA = "0xCB9968")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xCB9424", Offset = "0xCB9424", VA = "0xCB9424")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xCB9874", Offset = "0xCB9874", VA = "0xCB9874")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xCB9530", Offset = "0xCB9530", VA = "0xCB9530")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xCB9C10", Offset = "0xCB9C10", VA = "0xCB9C10")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xCB9490", Offset = "0xCB9490", VA = "0xCB9490")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xCB98DC", Offset = "0xCB98DC", VA = "0xCB98DC")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xCB95D8", Offset = "0xCB95D8", VA = "0xCB95D8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xCB9C9C", Offset = "0xCB9C9C", VA = "0xCB9C9C")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000033")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Camera spyCamera;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject cameraRig;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool showUI;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xCBF4E4", Offset = "0xCBF4E4", VA = "0xCBF4E4", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xCBF528", Offset = "0xCBF528", VA = "0xCBF528", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xCBF568", Offset = "0xCBF568", VA = "0xCBF568", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xCBF590", Offset = "0xCBF590", VA = "0xCBF590")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xCBF748", Offset = "0xCBF748", VA = "0xCBF748")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xCBF838", Offset = "0xCBF838", VA = "0xCBF838")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xCBF8B0", Offset = "0xCBF8B0", VA = "0xCBF8B0")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000034")]
public class RemotePlayer
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedBodyPosition;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedBodyPositionPrior;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedBodyRotation;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedBodyRotationPrior;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xC17994", Offset = "0xC17994", VA = "0xC17994")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000035")]
public class RoomManager
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xC180E0", Offset = "0xC180E0", VA = "0xC180E0")]
	public RoomManager()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xC181AC", Offset = "0xC181AC", VA = "0xC181AC")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xC184C8", Offset = "0xC184C8", VA = "0xC184C8")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xC185D8", Offset = "0xC185D8", VA = "0xC185D8")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xC18690", Offset = "0xC18690", VA = "0xC18690")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xC18DEC", Offset = "0xC18DEC", VA = "0xC18DEC")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xC184F8", Offset = "0xC184F8", VA = "0xC184F8")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xC18E78", Offset = "0xC18E78", VA = "0xC18E78")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xC19798", Offset = "0xC19798", VA = "0xC19798")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xC19BEC", Offset = "0xC19BEC", VA = "0xC19BEC")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xC192B8", Offset = "0xC192B8", VA = "0xC192B8")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000036")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20003F1")]
	public enum State
	{
		[Token(Token = "0x400165B")]
		INITIALIZING,
		[Token(Token = "0x400165C")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400165D")]
		CREATING_A_ROOM,
		[Token(Token = "0x400165E")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x400165F")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001660")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001661")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001662")]
		SHUTDOWN
	}

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CAPI.FilterCallback micFilterDelegate;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float voiceCurrent;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private uint packetSequence;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject helpPanel;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material riftMaterial;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material gearMaterial;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject roomSphere;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject roomFloor;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected State currentState;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected ulong myID;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected string myOculusID;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000015")]
	public static State CurrentState
	{
		[Token(Token = "0x6000151")]
		[Address(RVA = "0xC2EF84", Offset = "0xC2EF84", VA = "0xC2EF84")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000016")]
	public static ulong MyID
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0xC18820", Offset = "0xC18820", VA = "0xC18820")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000017")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0xC2EFFC", Offset = "0xC2EFFC", VA = "0xC2EFFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xC2D3A8", Offset = "0xC2D3A8", VA = "0xC2D3A8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xC2D6B8", Offset = "0xC2D6B8", VA = "0xC2D6B8", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xC2DAB8", Offset = "0xC2DAB8", VA = "0xC2DAB8")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xC2DC28", Offset = "0xC2DC28", VA = "0xC2DC28", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xC2DC2C", Offset = "0xC2DC2C", VA = "0xC2DC2C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xC2DD2C", Offset = "0xC2DD2C", VA = "0xC2DD2C")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xC2E608", Offset = "0xC2E608", VA = "0xC2E608")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xC2EB38", Offset = "0xC2EB38", VA = "0xC2EB38")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xC2ED48", Offset = "0xC2ED48", VA = "0xC2ED48")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xC2EF08", Offset = "0xC2EF08", VA = "0xC2EF08")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xC2DA04", Offset = "0xC2DA04", VA = "0xC2DA04")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xC1833C", Offset = "0xC1833C", VA = "0xC1833C")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xC188FC", Offset = "0xC188FC", VA = "0xC188FC")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xC2F120", Offset = "0xC2F120", VA = "0xC2F120")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xC18CB8", Offset = "0xC18CB8", VA = "0xC18CB8")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xC19C64", Offset = "0xC19C64", VA = "0xC19C64")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xC1A1C8", Offset = "0xC1A1C8", VA = "0xC1A1C8")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xC1A2B0", Offset = "0xC1A2B0", VA = "0xC1A2B0")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xC18404", Offset = "0xC18404", VA = "0xC18404")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xC19DE4", Offset = "0xC19DE4", VA = "0xC19DE4")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xC19E80", Offset = "0xC19E80", VA = "0xC19E80")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xC2F318", Offset = "0xC2F318", VA = "0xC2F318")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xC2F544", Offset = "0xC2F544", VA = "0xC2F544")]
	public void UpdateVoiceData(short[] pcmData)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xC2F660", Offset = "0xC2F660", VA = "0xC2F660")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xC2F6E0", Offset = "0xC2F6E0", VA = "0xC2F6E0")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xC2F7B8", Offset = "0xC2F7B8", VA = "0xC2F7B8")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000037")]
public class VoipManager
{
	[Token(Token = "0x6000163")]
	[Address(RVA = "0x119CC1C", Offset = "0x119CC1C", VA = "0x119CC1C")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x119CCDC", Offset = "0x119CCDC", VA = "0x119CCDC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x119CDC0", Offset = "0x119CDC0", VA = "0x119CDC0")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x119CE44", Offset = "0x119CE44", VA = "0x119CE44")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x119D038", Offset = "0x119D038", VA = "0x119D038")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class AvatarLayer
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xD66DAC", Offset = "0xD66DAC", VA = "0xD66DAC")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xCB9DC8", Offset = "0xCB9DC8", VA = "0xCB9DC8")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200003A")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20003F2")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xCA98A0", Offset = "0xCA98A0", VA = "0xCA98A0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20003F3")]
	public enum HandType
	{
		[Token(Token = "0x4001665")]
		Right,
		[Token(Token = "0x4001666")]
		Left,
		[Token(Token = "0x4001667")]
		Max
	}

	[Token(Token = "0x20003F4")]
	public enum HandJoint
	{
		[Token(Token = "0x4001669")]
		HandBase,
		[Token(Token = "0x400166A")]
		IndexBase,
		[Token(Token = "0x400166B")]
		IndexTip,
		[Token(Token = "0x400166C")]
		ThumbBase,
		[Token(Token = "0x400166D")]
		ThumbTip,
		[Token(Token = "0x400166E")]
		Max
	}

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatarMaterialManager DefaultBodyMaterialManager;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatarMaterialManager DefaultHandMaterialManager;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatarBase Base;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OvrAvatarBody Body;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OvrAvatarHand HandLeft;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OvrAvatarHand HandRight;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool RecordPackets;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool StartWithControllers;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader SurfaceShader;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader SurfaceShaderSelfOccluding;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader SurfaceShaderPBS;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader SurfaceShaderPBSV2Single;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader SurfaceShaderPBSV2Combined;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader SurfaceShaderPBSV2Simple;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader SurfaceShaderPBSV2Loading;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int renderPartCount;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool showLeftController;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool showRightController;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string oculusUserID;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool CombineMeshes;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool ForceMobileTextureFormat;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool WaitingForCombinedMesh;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<string, OvrAvatarComponent> trackedComponents;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private UnityEvent AssetsDoneLoading;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[,] HandJoints;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string NECK_JONT;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float VoiceAmplitude;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xD0728C", Offset = "0xD0728C", VA = "0xD0728C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xD072F4", Offset = "0xD072F4", VA = "0xD072F4")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xD07374", Offset = "0xD07374", VA = "0xD07374")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xD07468", Offset = "0xD07468", VA = "0xD07468")]
	private void AddAvatarComponent(GameObject componentObject, ovrAvatarComponent component)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xD07A0C", Offset = "0xD07A0C", VA = "0xD07A0C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xD07B24", Offset = "0xD07B24", VA = "0xD07B24")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xD07C38", Offset = "0xD07C38", VA = "0xD07C38")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, OvrAvatarMaterialManager materialManager)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xD07E2C", Offset = "0xD07E2C", VA = "0xD07E2C")]
	private OvrAvatarProjectorRenderComponent AddProjectorRenderComponent(GameObject gameObject, ovrAvatarRenderPart_ProjectorRender projectorRender)
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xD07FD0", Offset = "0xD07FD0", VA = "0xD07FD0")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xD080EC", Offset = "0xD080EC", VA = "0xD080EC")]
	private void UpdateAvatarComponent(ovrAvatarComponent component)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xD08228", Offset = "0xD08228", VA = "0xD08228")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xD082AC", Offset = "0xD082AC", VA = "0xD082AC")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xD08394", Offset = "0xD08394", VA = "0xD08394")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xD084C0", Offset = "0xD084C0", VA = "0xD084C0")]
	private void RemoveAvatarComponent(string name)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xD085B4", Offset = "0xD085B4", VA = "0xD085B4")]
	private void UpdateSDKAvatarUnityState()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xD09688", Offset = "0xD09688", VA = "0xD09688")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xD09974", Offset = "0xD09974", VA = "0xD09974")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xD09B18", Offset = "0xD09B18", VA = "0xD09B18")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xD09E2C", Offset = "0xD09E2C", VA = "0xD09E2C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xD09F20", Offset = "0xD09F20", VA = "0xD09F20")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xD0A210", Offset = "0xD0A210", VA = "0xD0A210")]
	private void Start()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xD0A3CC", Offset = "0xD0A3CC", VA = "0xD0A3CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xD0A61C", Offset = "0xD0A61C", VA = "0xD0A61C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xD0A664", Offset = "0xD0A664", VA = "0xD0A664")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xD0A120", Offset = "0xD0A120", VA = "0xD0A120")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xD0A198", Offset = "0xD0A198", VA = "0xD0A198")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xD0A694", Offset = "0xD0A694", VA = "0xD0A694")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xD0A60C", Offset = "0xD0A60C", VA = "0xD0A60C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xD0A900", Offset = "0xD0A900", VA = "0xD0A900")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xD0A704", Offset = "0xD0A704", VA = "0xD0A704")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xD075E8", Offset = "0xD075E8", VA = "0xD075E8")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xD0ABE0", Offset = "0xD0ABE0", VA = "0xD0ABE0")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xD0AFA8", Offset = "0xD0AFA8", VA = "0xD0AFA8")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xD0AFB4", Offset = "0xD0AFB4", VA = "0xD0AFB4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xD0B1F4", Offset = "0xD0B1F4", VA = "0xD0B1F4")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xD0B2F0", Offset = "0xD0B2F0", VA = "0xD0B2F0")]
	public Transform GetMouthTransform()
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xD091AC", Offset = "0xD091AC", VA = "0xD091AC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xD0B408", Offset = "0xD0B408", VA = "0xD0B408")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200003B")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xCA991C", Offset = "0xCA991C", VA = "0xCA991C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200003C")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xCA9984", Offset = "0xCA9984", VA = "0xCA9984")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xCAAFDC", Offset = "0xCAAFDC", VA = "0xCAAFDC")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200003D")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000250")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xCAB7AC", Offset = "0xCAB7AC", VA = "0xCAB7AC")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200003E")]
public class OvrAvatarBase : MonoBehaviour
{
	[Token(Token = "0x6000195")]
	[Address(RVA = "0xCAB9F0", Offset = "0xCAB9F0", VA = "0xCAB9F0")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarBody : MonoBehaviour
{
	[Token(Token = "0x6000196")]
	[Address(RVA = "0xCAB9F8", Offset = "0xCAB9F8", VA = "0xCAB9F8", Slot = "4")]
	public virtual void UpdatePose(float voiceAmplitude)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xCAB9FC", Offset = "0xCAB9FC", VA = "0xCAB9FC")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000040")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong ClothingAlphaTexture;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 ClothingAlphaOffset;

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xCABA04", Offset = "0xCABA04", VA = "0xCABA04")]
	public void UpdateAvatar(ovrAvatarComponent component, OvrAvatar avatar)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xCAC6E8", Offset = "0xCAC6E8", VA = "0xCAC6E8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xCAC788", Offset = "0xCAC788", VA = "0xCAC788")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xCAD398", Offset = "0xCAD398", VA = "0xCAD398")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xCAD668", Offset = "0xCAD668", VA = "0xCAD668")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000041")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20003F5")]
	public enum PacketMode
	{
		[Token(Token = "0x4001670")]
		SDK,
		[Token(Token = "0x4001671")]
		Unity
	}

	[Token(Token = "0x20003F6")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xCAF430", Offset = "0xCAF430", VA = "0xCAF430")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20003F7")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xCAF588", Offset = "0xCAF588", VA = "0xCAF588")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xCAF068", Offset = "0xCAF068", VA = "0xCAF068")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600019F")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xCAF078", Offset = "0xCAF078", VA = "0xCAF078")]
	protected void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xCAF308", Offset = "0xCAF308", VA = "0xCAF308")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xCAF3A4", Offset = "0xCAF3A4", VA = "0xCAF3A4")]
	private ovrAvatarControllerType GetRemoteControllerType()
	{
		return default(ovrAvatarControllerType);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xCAF428", Offset = "0xCAF428", VA = "0xCAF428")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000042")]
public class OvrAvatarHand : MonoBehaviour
{
	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xCAF94C", Offset = "0xCAF94C", VA = "0xCAF94C")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000043")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float voiceAmplitude;

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xCAF954", Offset = "0xCAF954", VA = "0xCAF954")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xCAFA80", Offset = "0xCAFA80", VA = "0xCAFA80")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xCAFDDC", Offset = "0xCAFDDC", VA = "0xCAFDDC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xCB0168", Offset = "0xCB0168", VA = "0xCB0168", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xCB0194", Offset = "0xCB0194", VA = "0xCB0194")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000044")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20003F8")]
	public enum TextureType
	{
		[Token(Token = "0x4001682")]
		DiffuseTextures,
		[Token(Token = "0x4001683")]
		NormalMaps,
		[Token(Token = "0x4001684")]
		RoughnessMaps,
		[Token(Token = "0x4001685")]
		Count
	}

	[Serializable]
	[Token(Token = "0x20003F9")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8624", Offset = "0x9E8624")]
		public float DiffuseIntensity;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E863C", Offset = "0x9E863C")]
		public float RimIntensity;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8654", Offset = "0x9E8654")]
		public float BacklightIntensity;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E866C", Offset = "0x9E866C")]
		public float ReflectionIntensity;
	}

	[Serializable]
	[Token(Token = "0x20003FA")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Serializable]
	[Token(Token = "0x20003FB")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] BacklightIntensities;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20003FC")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xCB26FC", Offset = "0xCB26FC", VA = "0xCB26FC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB4C", Offset = "0x9DFB4C")]
	private sealed class <RunLoadingAnimation>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x17000282")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xCB2684", Offset = "0xCB2684", VA = "0xCB2684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xCB26F4", Offset = "0xCB26F4", VA = "0xCB26F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xCB1ECC", Offset = "0xCB1ECC", VA = "0xCB1ECC")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xCB21E8", Offset = "0xCB21E8", VA = "0xCB21E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xCB21EC", Offset = "0xCB21EC", VA = "0xCB21EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xCB268C", Offset = "0xCB268C", VA = "0xCB268C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] DiffuseFallbacks;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] NormalFallbacks;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarTextureCopyManager TextureCopyManager;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color[] BodyColorTints;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AvatarMaterialConfig DefaultAvatarConfig;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AvatarMaterialPropertyBlock LocalAvatarMaterialPropertyBlock;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RENDER_QUEUE;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_COMBINED;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_BACKLIGHTINTENSITY;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400027A")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400027B")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x400027C")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400027D")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xCB019C", Offset = "0xCB019C", VA = "0xCB019C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xCB020C", Offset = "0xCB020C", VA = "0xCB020C")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xCB0334", Offset = "0xCB0334", VA = "0xCB0334")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xCB0370", Offset = "0xCB0370", VA = "0xCB0370")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xCB03AC", Offset = "0xCB03AC", VA = "0xCB03AC")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xCB0D08", Offset = "0xCB0D08", VA = "0xCB0D08")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xCB0900", Offset = "0xCB0900", VA = "0xCB0900")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xCB0FE0", Offset = "0xCB0FE0", VA = "0xCB0FE0")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xCB13BC", Offset = "0xCB13BC", VA = "0xCB13BC")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xCB14EC", Offset = "0xCB14EC", VA = "0xCB14EC")]
	public void ValidateTextures()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xCB0C94", Offset = "0xCB0C94", VA = "0xCB0C94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E90CC", Offset = "0x9E90CC")]
	private IEnumerator RunLoadingAnimation()
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xCB1EF8", Offset = "0xCB1EF8", VA = "0xCB1EF8")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000045")]
public class OvrAvatarMeshInstance : MonoBehaviour
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<ulong> AssetsToLoad;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ulong MeshID;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong MaterialID;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong FadeTextureID;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarBodyPartType MeshType;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ovrAvatarMaterialState MaterialState;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MeshFilter Mesh;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MeshRenderer MeshInstance;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xCB2704", Offset = "0xCB2704", VA = "0xCB2704")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xCB3764", Offset = "0xCB3764", VA = "0xCB3764")]
	public void SetMeshAssets(ulong fadeTexture, ulong meshID, ulong materialID, ovrAvatarBodyPartType type)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xCB27D4", Offset = "0xCB27D4", VA = "0xCB27D4")]
	private void HandleAssetAvailable(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xCB39D4", Offset = "0xCB39D4", VA = "0xCB39D4")]
	public void ChangeMaterial(ulong assetID)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xCB3818", Offset = "0xCB3818", VA = "0xCB3818")]
	private void RequestAsset(ulong assetID)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xCB3930", Offset = "0xCB3930", VA = "0xCB3930")]
	private void RequestMaterialTextures()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xCB3AF8", Offset = "0xCB3AF8", VA = "0xCB3AF8")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xCB2B58", Offset = "0xCB2B58", VA = "0xCB2B58")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xCB3B5C", Offset = "0xCB3B5C", VA = "0xCB3B5C")]
	public OvrAvatarMeshInstance()
	{
	}
}
[Token(Token = "0x2000046")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000018")]
	public float Duration
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xCB3B64", Offset = "0xCB3B64", VA = "0xCB3B64")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000019")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xCB3C04", Offset = "0xCB3C04", VA = "0xCB3C04")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xCB3CB4", Offset = "0xCB3CB4", VA = "0xCB3CB4")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xCB3D78", Offset = "0xCB3D78", VA = "0xCB3D78")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xCB3EC8", Offset = "0xCB3EC8", VA = "0xCB3EC8")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xCB3FA4", Offset = "0xCB3FA4", VA = "0xCB3FA4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xCB4084", Offset = "0xCB4084", VA = "0xCB4084")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xCB42B4", Offset = "0xCB42B4", VA = "0xCB42B4")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xCB4534", Offset = "0xCB4534", VA = "0xCB4534")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000047")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xD6C960", Offset = "0xD6C960", VA = "0xD6C960")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xD6CA84", Offset = "0xD6CA84", VA = "0xD6CA84")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xD6CD10", Offset = "0xD6CD10", VA = "0xD6CD10")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xD6CB38", Offset = "0xD6CB38", VA = "0xD6CB38")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xD6CC14", Offset = "0xD6CC14", VA = "0xD6CC14")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000048")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xD6C4D0", Offset = "0xD6C4D0", VA = "0xD6C4D0")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xD6C8F4", Offset = "0xD6C8F4", VA = "0xD6C8F4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xD6C678", Offset = "0xD6C678", VA = "0xD6C678")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xD6C70C", Offset = "0xD6C70C", VA = "0xD6C70C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xD6C7D0", Offset = "0xD6C7D0", VA = "0xD6C7D0")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000049")]
public class OvrAvatarProjectorRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material material;

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xCB4780", Offset = "0xCB4780", VA = "0xCB4780")]
	internal void InitializeProjectorRender(ovrAvatarRenderPart_ProjectorRender render, Shader shader, OvrAvatarRenderComponent target)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xCAC3F8", Offset = "0xCAC3F8", VA = "0xCAC3F8")]
	internal void UpdateProjectorRender(OvrAvatarComponent component, ovrAvatarRenderPart_ProjectorRender render)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xCB4AC0", Offset = "0xCB4AC0", VA = "0xCB4AC0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xCB5088", Offset = "0xCB5088", VA = "0xCB5088")]
	public OvrAvatarProjectorRenderComponent()
	{
	}
}
[Token(Token = "0x200004A")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400028E")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400028F")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xCB50A8", Offset = "0xCB50A8", VA = "0xCB50A8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xCB513C", Offset = "0xCB513C", VA = "0xCB513C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xCB5158", Offset = "0xCB5158", VA = "0xCB5158")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xCB531C", Offset = "0xCB531C", VA = "0xCB531C")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xCB5564", Offset = "0xCB5564", VA = "0xCB5564")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200004B")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xCB55DC", Offset = "0xCB55DC", VA = "0xCB55DC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xCB567C", Offset = "0xCB567C", VA = "0xCB567C")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer, int sortingOrder)
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xCB58EC", Offset = "0xCB58EC", VA = "0xCB58EC")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xCB49BC", Offset = "0xCB49BC", VA = "0xCB49BC")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xCB5098", Offset = "0xCB5098", VA = "0xCB5098")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200004C")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000297")]
	Body = 1,
	[Token(Token = "0x4000298")]
	Hands = 2,
	[Token(Token = "0x4000299")]
	Base = 4,
	[Token(Token = "0x400029A")]
	BodyTilt = 0x10,
	[Token(Token = "0x400029B")]
	All = -1
}
[Token(Token = "0x200004D")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400029D")]
	AvatarSpecification,
	[Token(Token = "0x400029E")]
	AssetLoaded,
	[Token(Token = "0x400029F")]
	Count
}
[Token(Token = "0x200004E")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200004F")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000050")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40002A5")]
	Mesh,
	[Token(Token = "0x40002A6")]
	Texture,
	[Token(Token = "0x40002A7")]
	Pose,
	[Token(Token = "0x40002A8")]
	Material,
	[Token(Token = "0x40002A9")]
	CombinedMesh,
	[Token(Token = "0x40002AA")]
	PBSMaterial,
	[Token(Token = "0x40002AB")]
	Count
}
[Token(Token = "0x2000051")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000054")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000055")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40002D7")]
	RGB24,
	[Token(Token = "0x40002D8")]
	DXT1,
	[Token(Token = "0x40002D9")]
	DXT5,
	[Token(Token = "0x40002DA")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40002DB")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40002DC")]
	Count
}
[Token(Token = "0x2000056")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000057")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40002E4")]
	SkinnedMeshRender,
	[Token(Token = "0x40002E5")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40002E6")]
	ProjectorRender,
	[Token(Token = "0x40002E7")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40002E8")]
	Count
}
[Token(Token = "0x2000058")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000059")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40002ED")]
	One = 1,
	[Token(Token = "0x40002EE")]
	Two = 2,
	[Token(Token = "0x40002EF")]
	Three = 4,
	[Token(Token = "0x40002F0")]
	Joystick = 8
}
[Token(Token = "0x200005A")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40002F2")]
	One = 1,
	[Token(Token = "0x40002F3")]
	Two = 2,
	[Token(Token = "0x40002F4")]
	Joystick = 4,
	[Token(Token = "0x40002F5")]
	ThumbRest = 8,
	[Token(Token = "0x40002F6")]
	Index = 0x10,
	[Token(Token = "0x40002F7")]
	Pointing = 0x40,
	[Token(Token = "0x40002F8")]
	ThumbUp = 0x80
}
[Token(Token = "0x200005B")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005F")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000060")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000061")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000310")]
	Add,
	[Token(Token = "0x4000311")]
	Multiply,
	[Token(Token = "0x4000312")]
	Count
}
[Token(Token = "0x2000062")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000314")]
	Color,
	[Token(Token = "0x4000315")]
	Texture,
	[Token(Token = "0x4000316")]
	TextureSingleChannel,
	[Token(Token = "0x4000317")]
	Parallax,
	[Token(Token = "0x4000318")]
	Count
}
[Token(Token = "0x2000063")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400031A")]
	None,
	[Token(Token = "0x400031B")]
	Positional,
	[Token(Token = "0x400031C")]
	ViewReflection,
	[Token(Token = "0x400031D")]
	Fresnel,
	[Token(Token = "0x400031E")]
	Pulse,
	[Token(Token = "0x400031F")]
	Count
}
[Token(Token = "0x2000064")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000321")]
	Touch,
	[Token(Token = "0x4000322")]
	Malibu,
	[Token(Token = "0x4000323")]
	Go,
	[Token(Token = "0x4000324")]
	Count
}
[Token(Token = "0x2000065")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000326")]
	Lowest = 1,
	[Token(Token = "0x4000327")]
	Medium = 3,
	[Token(Token = "0x4000328")]
	Highest = 5
}
[Token(Token = "0x2000066")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400032A")]
	Unknown = -1,
	[Token(Token = "0x400032B")]
	One,
	[Token(Token = "0x400032C")]
	Two
}
[Token(Token = "0x2000067")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1FFB2B0", Offset = "0x1FFB2B0", VA = "0x1FFB2B0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xAC30AC", Offset = "0xAC30AC", VA = "0xAC30AC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xAC30B4", Offset = "0xAC30B4", VA = "0xAC30B4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000068")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1FFB5E0", Offset = "0x1FFB5E0", VA = "0x1FFB5E0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xAC3354", Offset = "0xAC3354", VA = "0xAC3354", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xAC335C", Offset = "0xAC335C", VA = "0xAC335C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000069")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1FFBB40", Offset = "0x1FFBB40", VA = "0x1FFBB40")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xAC3C0C", Offset = "0xAC3C0C", VA = "0xAC3C0C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xAC3C14", Offset = "0xAC3C14", VA = "0xAC3C14", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006A")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xCA9924", Offset = "0xCA9924", VA = "0xCA9924")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200006B")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200006C")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000358")]
	FirstPerson = 1,
	[Token(Token = "0x4000359")]
	ThirdPerson = 2,
	[Token(Token = "0x400035A")]
	SelfOccluding = 4
}
[Token(Token = "0x200006D")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006F")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000070")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000071")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000370")]
	Default,
	[Token(Token = "0x4000371")]
	GripSphere,
	[Token(Token = "0x4000372")]
	GripCube,
	[Token(Token = "0x4000373")]
	Count
}
[Token(Token = "0x2000072")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000375")]
	Body,
	[Token(Token = "0x4000376")]
	Clothing,
	[Token(Token = "0x4000377")]
	Eyewear,
	[Token(Token = "0x4000378")]
	Hair,
	[Token(Token = "0x4000379")]
	Beard,
	[Token(Token = "0x400037A")]
	Count
}
[Token(Token = "0x2000073")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000074")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000075")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000076")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x1700001A")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xCAD484", Offset = "0xCAD484", VA = "0xCAD484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xCB5BE8", Offset = "0xCB5BE8", VA = "0xCB5BE8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xCB5D2C", Offset = "0xCB5D2C", VA = "0xCB5D2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xCB5D34", Offset = "0xCB5D34", VA = "0xCB5D34")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xCB633C", Offset = "0xCB633C", VA = "0xCB633C")]
	public void RequestAvatarSpecification(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xCB39DC", Offset = "0xCB39DC", VA = "0xCB39DC")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xCB64D8", Offset = "0xCB64D8", VA = "0xCB64D8")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xCAD5E0", Offset = "0xCAD5E0", VA = "0xCAD5E0")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xCB65D4", Offset = "0xCB65D4", VA = "0xCB65D4")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000077")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700001B")]
	public static string AppID
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xCB65DC", Offset = "0xCB65DC", VA = "0xCB65DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0xCB671C", Offset = "0xCB671C", VA = "0xCB671C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public static string GearAppID
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0xCB5D00", Offset = "0xCB5D00", VA = "0xCB5D00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0xCB674C", Offset = "0xCB674C", VA = "0xCB674C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0xCB6608", Offset = "0xCB6608", VA = "0xCB6608")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xCB677C", Offset = "0xCB677C", VA = "0xCB677C")]
		set
		{
		}
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xCB67D0", Offset = "0xCB67D0", VA = "0xCB67D0")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000078")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader surface;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xCB7798", Offset = "0xCB7798", VA = "0xCB7798")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer, int sortOrder)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xCAC0A0", Offset = "0xCAC0A0", VA = "0xCAC0A0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xCB78F4", Offset = "0xCB78F4", VA = "0xCB78F4")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xCB7A8C", Offset = "0xCB7A8C", VA = "0xCB7A8C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x600020B")]
	[Address(RVA = "0xCB7A9C", Offset = "0xCB7A9C", VA = "0xCB7A9C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer, int sortOrder)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xCAC298", Offset = "0xCAC298", VA = "0xCAC298")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xCB7BFC", Offset = "0xCB7BFC", VA = "0xCB7BFC")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatarMaterialManager AvatarMaterialManager;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool PreviouslyActive;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool IsCombinedMaterial;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xCB6828", Offset = "0xCB6828", VA = "0xCB6828")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, int sortOrder, bool isCombinedMaterial, ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xCAC588", Offset = "0xCAC588", VA = "0xCAC588")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xCB700C", Offset = "0xCB700C", VA = "0xCB700C")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xCB6A5C", Offset = "0xCB6A5C", VA = "0xCB6A5C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xCB7788", Offset = "0xCB7788", VA = "0xCB7788")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Token(Token = "0x20003FE")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xA8AFC4", Offset = "0xA8AFC4", VA = "0xA8AFC4")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB5C", Offset = "0x9DFB5C")]
	private sealed class <CopyTextureCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CopyTextureParams copyTextureParams;

		[Token(Token = "0x17000284")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0xCB88B4", Offset = "0xCB88B4", VA = "0xCB88B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xCB8924", Offset = "0xCB8924", VA = "0xCB8924", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xCB8778", Offset = "0xCB8778", VA = "0xCB8778")]
		[DebuggerHidden]
		public <CopyTextureCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xCB87A4", Offset = "0xCB87A4", VA = "0xCB87A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xCB87A8", Offset = "0xCB87A8", VA = "0xCB87A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xCB88BC", Offset = "0xCB88BC", VA = "0xCB88BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000389")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xCB8450", Offset = "0xCB8450", VA = "0xCB8450")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xCB84C8", Offset = "0xCB84C8", VA = "0xCB84C8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xCB2624", Offset = "0xCB2624", VA = "0xCB2624")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xCB0E2C", Offset = "0xCB0E2C", VA = "0xCB0E2C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xCB8614", Offset = "0xCB8614", VA = "0xCB8614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E91D0", Offset = "0x9E91D0")]
	private IEnumerator CopyTextureCoroutine(CopyTextureParams copyTextureParams)
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xCB86BC", Offset = "0xCB86BC", VA = "0xCB86BC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatarTouchController : MonoBehaviour
{
	[Token(Token = "0x6000219")]
	[Address(RVA = "0xCB892C", Offset = "0xCB892C", VA = "0xCB892C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200007D")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600021A")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xC68310", Offset = "0xC68310", VA = "0xC68310")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xC68448", Offset = "0xC68448", VA = "0xC68448")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x200007E")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0E04", Offset = "0x9E0E04")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0E3C", Offset = "0x9E0E3C")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0E74", Offset = "0x9E0E74")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xF790E4", Offset = "0xF790E4", VA = "0xF790E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xF790E8", Offset = "0xF790E8", VA = "0xF790E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xF79168", Offset = "0xF79168", VA = "0xF79168")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xF793DC", Offset = "0xF793DC", VA = "0xF793DC")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x200007F")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xF79404", Offset = "0xF79404", VA = "0xF79404")]
	private void Start()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xF79548", Offset = "0xF79548", VA = "0xF79548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xF7961C", Offset = "0xF7961C", VA = "0xF7961C")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xF79A40", Offset = "0xF79A40", VA = "0xF79A40")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xF79A90", Offset = "0xF79A90", VA = "0xF79A90")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000080")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700001E")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x1312C20", Offset = "0x1312C20", VA = "0x1312C20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1312EFC", Offset = "0x1312EFC", VA = "0x1312EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1313038", Offset = "0x1313038", VA = "0x1313038")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1312F6C", Offset = "0x1312F6C", VA = "0x1312F6C")]
	public void Init()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1310CB4", Offset = "0x1310CB4", VA = "0x1310CB4")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x13131D4", Offset = "0x13131D4", VA = "0x13131D4")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1310C44", Offset = "0x1310C44", VA = "0x1310C44")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1310D68", Offset = "0x1310D68", VA = "0x1310D68")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x13130D0", Offset = "0x13130D0", VA = "0x13130D0")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x131327C", Offset = "0x131327C", VA = "0x131327C")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x13132C0", Offset = "0x13132C0", VA = "0x13132C0")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1313540", Offset = "0x1313540", VA = "0x1313540")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x13132D0", Offset = "0x13132D0", VA = "0x13132D0")]
	private void Display()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1313620", Offset = "0x1313620", VA = "0x1313620")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000081")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1316198", Offset = "0x1316198", VA = "0x1316198")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000082")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000400")]
	public enum TouchEvent
	{
		[Token(Token = "0x40016A2")]
		SingleTap,
		[Token(Token = "0x40016A3")]
		DoubleTap,
		[Token(Token = "0x40016A4")]
		Left,
		[Token(Token = "0x40016A5")]
		Right,
		[Token(Token = "0x40016A6")]
		Up,
		[Token(Token = "0x40016A7")]
		Down
	}

	[Token(Token = "0x2000401")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x130FC84", Offset = "0x130FC84", VA = "0x130FC84")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x13174F0", Offset = "0x13174F0", VA = "0x13174F0")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1317824", Offset = "0x1317824", VA = "0x1317824")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1317660", Offset = "0x1317660", VA = "0x1317660")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1310718", Offset = "0x1310718", VA = "0x1310718")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000083")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x600023C")]
	[Address(RVA = "0x13178D8", Offset = "0x13178D8", VA = "0x13178D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1317954", Offset = "0x1317954", VA = "0x1317954")]
	private void Start()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x13179EC", Offset = "0x13179EC", VA = "0x13179EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1317A48", Offset = "0x1317A48", VA = "0x1317A48")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1317AAC", Offset = "0x1317AAC", VA = "0x1317AAC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1317AB0", Offset = "0x1317AB0", VA = "0x1317AB0")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000084")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000402")]
	public enum Result
	{
		[Token(Token = "0x40016A9")]
		Success = 0,
		[Token(Token = "0x40016AA")]
		Unknown = -2200,
		[Token(Token = "0x40016AB")]
		CannotCreateContext = -2201,
		[Token(Token = "0x40016AC")]
		InvalidParam = -2202,
		[Token(Token = "0x40016AD")]
		BadSampleRate = -2203,
		[Token(Token = "0x40016AE")]
		MissingDLL = -2204,
		[Token(Token = "0x40016AF")]
		BadVersion = -2205,
		[Token(Token = "0x40016B0")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000403")]
	public enum AudioDataType
	{
		[Token(Token = "0x40016B2")]
		S16_Mono,
		[Token(Token = "0x40016B3")]
		S16_Stereo,
		[Token(Token = "0x40016B4")]
		F32_Mono,
		[Token(Token = "0x40016B5")]
		F32_Stereo
	}

	[Token(Token = "0x2000404")]
	public enum Viseme
	{
		[Token(Token = "0x40016B7")]
		sil,
		[Token(Token = "0x40016B8")]
		PP,
		[Token(Token = "0x40016B9")]
		FF,
		[Token(Token = "0x40016BA")]
		TH,
		[Token(Token = "0x40016BB")]
		DD,
		[Token(Token = "0x40016BC")]
		kk,
		[Token(Token = "0x40016BD")]
		CH,
		[Token(Token = "0x40016BE")]
		SS,
		[Token(Token = "0x40016BF")]
		nn,
		[Token(Token = "0x40016C0")]
		RR,
		[Token(Token = "0x40016C1")]
		aa,
		[Token(Token = "0x40016C2")]
		E,
		[Token(Token = "0x40016C3")]
		ih,
		[Token(Token = "0x40016C4")]
		oh,
		[Token(Token = "0x40016C5")]
		ou
	}

	[Token(Token = "0x2000405")]
	public enum Signals
	{
		[Token(Token = "0x40016C7")]
		VisemeOn,
		[Token(Token = "0x40016C8")]
		VisemeOff,
		[Token(Token = "0x40016C9")]
		VisemeAmount,
		[Token(Token = "0x40016CA")]
		VisemeSmoothing,
		[Token(Token = "0x40016CB")]
		LaughterAmount
	}

	[Token(Token = "0x2000406")]
	public enum ContextProviders
	{
		[Token(Token = "0x40016CD")]
		Original,
		[Token(Token = "0x40016CE")]
		Enhanced,
		[Token(Token = "0x40016CF")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000407")]
	public class Frame
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x131042C", Offset = "0x131042C", VA = "0x131042C")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x13104CC", Offset = "0x13104CC", VA = "0x13104CC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x131055C", Offset = "0x131055C", VA = "0x131055C")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40003A2")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000242")]
	[Address(RVA = "0x130F12C", Offset = "0x130F12C", VA = "0x130F12C")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000243")]
	[Address(RVA = "0x130F1D8", Offset = "0x130F1D8", VA = "0x130F1D8")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000244")]
	[Address(RVA = "0x130F264", Offset = "0x130F264", VA = "0x130F264")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000245")]
	[Address(RVA = "0x130F314", Offset = "0x130F314", VA = "0x130F314")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000246")]
	[Address(RVA = "0x130F3D8", Offset = "0x130F3D8", VA = "0x130F3D8")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000247")]
	[Address(RVA = "0x130F474", Offset = "0x130F474", VA = "0x130F474")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000248")]
	[Address(RVA = "0x130F510", Offset = "0x130F510", VA = "0x130F510")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000249")]
	[Address(RVA = "0x130F5D4", Offset = "0x130F5D4", VA = "0x130F5D4")]
	private static extern int ovrLipSyncDll_ProcessFrame(uint context, float[] audioBuffer, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount);

	[PreserveSig]
	[Token(Token = "0x600024A")]
	[Address(RVA = "0x130F6C0", Offset = "0x130F6C0", VA = "0x130F6C0")]
	private static extern int ovrLipSyncDll_ProcessFrameInterleaved(uint context, float[] audioBuffer, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount);

	[PreserveSig]
	[Token(Token = "0x600024B")]
	[Address(RVA = "0x130F7AC", Offset = "0x130F7AC", VA = "0x130F7AC")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, float[] audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x130F8CC", Offset = "0x130F8CC", VA = "0x130F8CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x130FC88", Offset = "0x130FC88", VA = "0x130FC88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x130FB4C", Offset = "0x130FB4C", VA = "0x130FB4C")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x130FD68", Offset = "0x130FD68", VA = "0x130FD68")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x130FE7C", Offset = "0x130FE7C", VA = "0x130FE7C")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x130FAE4", Offset = "0x130FAE4", VA = "0x130FAE4")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x130FEEC", Offset = "0x130FEEC", VA = "0x130FEEC")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x130FFD0", Offset = "0x130FFD0", VA = "0x130FFD0")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1310064", Offset = "0x1310064", VA = "0x1310064")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x13100F8", Offset = "0x13100F8", VA = "0x13100F8")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x13101BC", Offset = "0x13101BC", VA = "0x13101BC")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, AudioDataType dataType = AudioDataType.F32_Stereo)
	{
		return default(Result);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1310308", Offset = "0x1310308", VA = "0x1310308")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE3C0", Offset = "0x9DE3C0")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0EAC", Offset = "0x9E0EAC")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0EE4", Offset = "0x9E0EE4")]
	public bool enableTouchInput;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0F1C", Offset = "0x9E0F1C")]
	public bool audioLoopback;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0F54", Offset = "0x9E0F54")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0F8C", Offset = "0x9E0F8C")]
	public bool showVisemes;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0FC4", Offset = "0x9E0FC4")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E0FFC", Offset = "0x9E0FFC")]
	public bool skipAudioSource;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1034", Offset = "0x9E1034")]
	public float gain;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x13105E4", Offset = "0x13105E4", VA = "0x13105E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1310860", Offset = "0x1310860", VA = "0x1310860")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1310DEC", Offset = "0x1310DEC", VA = "0x1310DEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1311100", Offset = "0x1311100", VA = "0x1311100")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1311354", Offset = "0x1311354", VA = "0x1311354")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1310E3C", Offset = "0x1310E3C", VA = "0x1310E3C")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1310B70", Offset = "0x1310B70", VA = "0x1310B70")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1311364", Offset = "0x1311364", VA = "0x1311364")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1311490", Offset = "0x1311490", VA = "0x1311490")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE424", Offset = "0x9DE424")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E106C", Offset = "0x9E106C")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E10A4", Offset = "0x9E10A4")]
	public bool enableAcceleration;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700001F")]
	public int Smoothing
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x1311610", Offset = "0x1311610", VA = "0x1311610")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x1311524", Offset = "0x1311524", VA = "0x1311524")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public uint Context
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x131134C", Offset = "0x131134C", VA = "0x131134C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000021")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1310E34", Offset = "0x1310E34", VA = "0x1310E34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1311618", Offset = "0x1311618", VA = "0x1311618")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x13117B0", Offset = "0x13117B0", VA = "0x13117B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x13118D4", Offset = "0x13118D4", VA = "0x13118D4")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x13118DC", Offset = "0x13118DC", VA = "0x13118DC")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x13119D0", Offset = "0x13119D0", VA = "0x13119D0")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1311A98", Offset = "0x1311A98", VA = "0x1311A98")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x13114B4", Offset = "0x13114B4", VA = "0x13114B4")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE488", Offset = "0x9DE488")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E10DC", Offset = "0x9E10DC")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1311B18", Offset = "0x1311B18", VA = "0x1311B18")]
	private void Update()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1311D24", Offset = "0x1311D24", VA = "0x1311D24")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000088")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1114", Offset = "0x9E1114")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x9E114C", Offset = "0x9E114C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E114C", Offset = "0x9E114C")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E12C8", Offset = "0x9E12C8")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1300", Offset = "0x9E1300")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1338", Offset = "0x9E1338")]
	public KeyCode laughterKey;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1370", Offset = "0x9E1370")]
	public int laughterBlendTarget;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E13A8", Offset = "0x9E13A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E13A8", Offset = "0x9E13A8")]
	public float laughterThreshold;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E13FC", Offset = "0x9E13FC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E13FC", Offset = "0x9E13FC")]
	public float laughterMultiplier;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E1450", Offset = "0x9E1450")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1450", Offset = "0x9E1450")]
	public int smoothAmount;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1311D28", Offset = "0x1311D28", VA = "0x1311D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1311E78", Offset = "0x1311E78", VA = "0x1311E78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x13121F4", Offset = "0x13121F4", VA = "0x13121F4")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1311FAC", Offset = "0x1311FAC", VA = "0x1311FAC")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x13120F0", Offset = "0x13120F0", VA = "0x13120F0")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x13122D8", Offset = "0x13122D8", VA = "0x13122D8")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x13123FC", Offset = "0x13123FC", VA = "0x13123FC")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x1312478", Offset = "0x1312478", VA = "0x1312478")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000089")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E14A8", Offset = "0x9E14A8")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x9E14A8", Offset = "0x9E14A8")]
	public Texture[] Textures;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E1624", Offset = "0x9E1624")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1624", Offset = "0x9E1624")]
	public int smoothAmount;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1312570", Offset = "0x1312570", VA = "0x1312570")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x13126D0", Offset = "0x13126D0", VA = "0x13126D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1312974", Offset = "0x1312974", VA = "0x1312974")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1312B74", Offset = "0x1312B74", VA = "0x1312B74")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE4EC", Offset = "0x9DE4EC")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000408")]
	public enum micActivation
	{
		[Token(Token = "0x40016D5")]
		HoldToSpeak,
		[Token(Token = "0x40016D6")]
		PushToSpeak,
		[Token(Token = "0x40016D7")]
		ConstantSpeak
	}

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E167C", Offset = "0x9E167C")]
	public AudioSource audioSource;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E16B4", Offset = "0x9E16B4")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E16EC", Offset = "0x9E16EC")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E1724", Offset = "0x9E1724")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1724", Offset = "0x9E1724")]
	private float micInputVolume;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E178C", Offset = "0x9E178C")]
	private int micFrequency;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E17D8", Offset = "0x9E17D8")]
	public micActivation micControl;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1810", Offset = "0x9E1810")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1848", Offset = "0x9E1848")]
	public string selectedDevice;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x17000022")]
	public float MicFrequency
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x1313694", Offset = "0x1313694", VA = "0x1313694")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600027C")]
		[Address(RVA = "0x13136A0", Offset = "0x13136A0", VA = "0x13136A0")]
		set
		{
		}
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x131372C", Offset = "0x131372C", VA = "0x131372C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x13137EC", Offset = "0x13137EC", VA = "0x13137EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1313994", Offset = "0x1313994", VA = "0x1313994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1313E3C", Offset = "0x1313E3C", VA = "0x1313E3C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1313E50", Offset = "0x1313E50", VA = "0x1313E50")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1313E68", Offset = "0x1313E68", VA = "0x1313E68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1313E6C", Offset = "0x1313E6C", VA = "0x1313E6C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1313EE4", Offset = "0x1313EE4", VA = "0x1313EE4")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x13138CC", Offset = "0x13138CC", VA = "0x13138CC")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1313C74", Offset = "0x1313C74", VA = "0x1313C74")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1313AF4", Offset = "0x1313AF4", VA = "0x1313AF4")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x131410C", Offset = "0x131410C", VA = "0x131410C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1314114", Offset = "0x1314114", VA = "0x1314114")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x200008B")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1311C2C", Offset = "0x1311C2C", VA = "0x1311C2C")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1314144", Offset = "0x1314144", VA = "0x1314144")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200008C")]
public class BufferedAudioStream
{
	[Token(Token = "0x40003D5")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x40003D9")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40003DA")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40003DB")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40003DC")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xC575C4", Offset = "0xC575C4", VA = "0xC575C4")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xC576FC", Offset = "0xC576FC", VA = "0xC576FC")]
	public void Update()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xC57698", Offset = "0xC57698", VA = "0xC57698")]
	private void Stop()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xC57900", Offset = "0xC57900", VA = "0xC57900")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x200008D")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000409")]
	public delegate void OnClick();

	[Token(Token = "0x200040A")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200040B")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200040C")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB6C", Offset = "0x9DFB6C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xC64730", Offset = "0xC64730", VA = "0xC64730")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xC65268", Offset = "0xC65268", VA = "0xC65268")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB7C", Offset = "0x9DFB7C")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xC64A34", Offset = "0xC64A34", VA = "0xC64A34")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xC65694", Offset = "0xC65694", VA = "0xC65694")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB8C", Offset = "0x9DFB8C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xC64C80", Offset = "0xC64C80", VA = "0xC64C80")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xC65B20", Offset = "0xC65B20", VA = "0xC65B20")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFB9C", Offset = "0x9DFB9C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xC64E54", Offset = "0xC64E54", VA = "0xC64E54")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xC66284", Offset = "0xC66284", VA = "0xC66284")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFBAC", Offset = "0x9DFBAC")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xC65130", Offset = "0xC65130", VA = "0xC65130")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xC662B4", Offset = "0xC662B4", VA = "0xC662B4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40003DF")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40003E0")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40003E1")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool manuallyResizeContentPanels;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40003EF")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40003F0")]
	private const float marginH = 16f;

	[Token(Token = "0x40003F1")]
	private const float marginV = 16f;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xC63140", Offset = "0xC63140", VA = "0xC63140")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xC63668", Offset = "0xC63668", VA = "0xC63668")]
	public void Show()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xC63E74", Offset = "0xC63E74", VA = "0xC63E74")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xC63B74", Offset = "0xC63B74", VA = "0xC63B74")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xC64068", Offset = "0xC64068", VA = "0xC64068")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xC64424", Offset = "0xC64424", VA = "0xC64424")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xC64738", Offset = "0xC64738", VA = "0xC64738")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xC64840", Offset = "0xC64840", VA = "0xC64840")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xC64A3C", Offset = "0xC64A3C", VA = "0xC64A3C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xC64AD8", Offset = "0xC64AD8", VA = "0xC64AD8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xC64C88", Offset = "0xC64C88", VA = "0xC64C88")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xC64E5C", Offset = "0xC64E5C", VA = "0xC64E5C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xC65138", Offset = "0xC65138", VA = "0xC65138")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xC651F8", Offset = "0xC651F8", VA = "0xC651F8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200008E")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xBEFFD8", Offset = "0xBEFFD8", VA = "0xBEFFD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xBF0060", Offset = "0xBF0060", VA = "0xBF0060")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xBF00E0", Offset = "0xBF00E0", VA = "0xBF00E0")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xBF0150", Offset = "0xBF0150", VA = "0xBF0150")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200008F")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000412")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40016E1")]
		On,
		[Token(Token = "0x40016E2")]
		Off,
		[Token(Token = "0x40016E3")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000023")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xF75804", Offset = "0xF75804", VA = "0xF75804")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xF757A8", Offset = "0xF757A8", VA = "0xF757A8")]
		set
		{
		}
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xF7580C", Offset = "0xF7580C", VA = "0xF7580C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xF75864", Offset = "0xF75864", VA = "0xF75864")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xF75900", Offset = "0xF75900", VA = "0xF75900", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xF7591C", Offset = "0xF7591C", VA = "0xF7591C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xF75994", Offset = "0xF75994", VA = "0xF75994")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xF75C78", Offset = "0xF75C78", VA = "0xF75C78")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xF75DD4", Offset = "0xF75DD4", VA = "0xF75DD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xF75E70", Offset = "0xF75E70", VA = "0xF75E70")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000090")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xC56E30", Offset = "0xC56E30", VA = "0xC56E30")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xC57084", Offset = "0xC57084", VA = "0xC57084")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xC575BC", Offset = "0xC575BC", VA = "0xC575BC")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000091")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xBE3768", Offset = "0xBE3768", VA = "0xBE3768")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xBE38E8", Offset = "0xBE38E8", VA = "0xBE38E8")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xBE3B50", Offset = "0xBE3B50", VA = "0xBE3B50")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000092")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_boundaryColor;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_framecount;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000024")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xBE3C44", Offset = "0xBE3C44", VA = "0xBE3C44")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xBE37FC", Offset = "0xBE37FC", VA = "0xBE37FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9234", Offset = "0x9E9234")]
		add
		{
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xBE3B58", Offset = "0xBE3B58", VA = "0xBE3B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9244", Offset = "0x9E9244")]
		remove
		{
		}
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xBE3C50", Offset = "0xBE3C50", VA = "0xBE3C50")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xBE3DCC", Offset = "0xBE3DCC", VA = "0xBE3DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xBE3F84", Offset = "0xBE3F84", VA = "0xBE3F84")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xBE3F8C", Offset = "0xBE3F8C", VA = "0xBE3F8C")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE550", Offset = "0x9DE550")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE550", Offset = "0x9DE550")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1940", Offset = "0x9E1940")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1978", Offset = "0x9E1978")]
	public float CurrentDistance;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E19B0", Offset = "0x9E19B0")]
	public bool EnableFadeout;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E19E8", Offset = "0x9E19E8")]
	public bool EnableCollision;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1A20", Offset = "0x9E1A20")]
	public bool DynamicHeight;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1A58", Offset = "0x9E1A58")]
	public float MaxFade;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1A90", Offset = "0x9E1A90")]
	public float FadeMinDistance;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1AC8", Offset = "0x9E1AC8")]
	public float FadeMaxDistance;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController _character;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRPlayerController _playerController;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xC5ABF0", Offset = "0xC5ABF0", VA = "0xC5ABF0")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xC5ACB4", Offset = "0xC5ACB4", VA = "0xC5ACB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xC5AD24", Offset = "0xC5AD24", VA = "0xC5AD24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xC5AD8C", Offset = "0xC5AD8C", VA = "0xC5AD8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xC5ADF4", Offset = "0xC5ADF4", VA = "0xC5ADF4")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xC5B250", Offset = "0xC5B250", VA = "0xC5B250")]
	private void PreCharacterMovement()
	{
	}
}
[Token(Token = "0x2000094")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController CharacterController;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRPlayerController PlayerController;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xF91248", Offset = "0xF91248", VA = "0xF91248")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xF91384", Offset = "0xF91384", VA = "0xF91384")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000095")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000413")]
	public enum States
	{
		[Token(Token = "0x40016E5")]
		Ready,
		[Token(Token = "0x40016E6")]
		Aim,
		[Token(Token = "0x40016E7")]
		CancelAim,
		[Token(Token = "0x40016E8")]
		PreTeleport,
		[Token(Token = "0x40016E9")]
		CancelTeleport,
		[Token(Token = "0x40016EA")]
		Teleporting,
		[Token(Token = "0x40016EB")]
		PostTeleport
	}

	[Token(Token = "0x2000414")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40016ED")]
		None,
		[Token(Token = "0x40016EE")]
		Aim,
		[Token(Token = "0x40016EF")]
		PreTeleport,
		[Token(Token = "0x40016F0")]
		Teleport
	}

	[Token(Token = "0x2000415")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40016F2")]
		Point,
		[Token(Token = "0x40016F3")]
		Sphere,
		[Token(Token = "0x40016F4")]
		Capsule
	}

	[Token(Token = "0x2000416")]
	public class AimData
	{
		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8684", Offset = "0x9E8684")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000286")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xF95494", Offset = "0xF95494", VA = "0xF95494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED22C", Offset = "0x9ED22C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xF9548C", Offset = "0xF9548C", VA = "0xF9548C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED23C", Offset = "0x9ED23C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xF95418", Offset = "0xF95418", VA = "0xF95418")]
		public AimData()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xF9549C", Offset = "0xF9549C", VA = "0xF9549C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFBBC", Offset = "0x9DFBBC")]
	private sealed class <ReadyStateCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000287")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xF951F4", Offset = "0xF951F4", VA = "0xF951F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xF95264", Offset = "0xF95264", VA = "0xF95264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xF92E44", Offset = "0xF92E44", VA = "0xF92E44")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xF95088", Offset = "0xF95088", VA = "0xF95088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xF9508C", Offset = "0xF9508C", VA = "0xF9508C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xF951FC", Offset = "0xF951FC", VA = "0xF951FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFBCC", Offset = "0x9DFBCC")]
	private sealed class <AimStateCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000289")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xF949C4", Offset = "0xF949C4", VA = "0xF949C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0xF94A34", Offset = "0xF94A34", VA = "0xF94A34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xF934E0", Offset = "0xF934E0", VA = "0xF934E0")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xF947F8", Offset = "0xF947F8", VA = "0xF947F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xF947FC", Offset = "0xF947FC", VA = "0xF947FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xF949CC", Offset = "0xF949CC", VA = "0xF949CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFBDC", Offset = "0x9DFBDC")]
	private sealed class <CancelAimStateCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700028B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xF94B18", Offset = "0xF94B18", VA = "0xF94B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xF94B88", Offset = "0xF94B88", VA = "0xF94B88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xF93758", Offset = "0xF93758", VA = "0xF93758")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xF94A3C", Offset = "0xF94A3C", VA = "0xF94A3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xF94A40", Offset = "0xF94A40", VA = "0xF94A40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xF94B20", Offset = "0xF94B20", VA = "0xF94B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFBEC", Offset = "0x9DFBEC")]
	private sealed class <PreTeleportStateCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xF95010", Offset = "0xF95010", VA = "0xF95010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xF95080", Offset = "0xF95080", VA = "0xF95080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xF939D0", Offset = "0xF939D0", VA = "0xF939D0")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xF94EC4", Offset = "0xF94EC4", VA = "0xF94EC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xF94EC8", Offset = "0xF94EC8", VA = "0xF94EC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xF95018", Offset = "0xF95018", VA = "0xF95018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFBFC", Offset = "0x9DFBFC")]
	private sealed class <CancelTeleportStateCoroutine>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0xF94C6C", Offset = "0xF94C6C", VA = "0xF94C6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xF94CDC", Offset = "0xF94CDC", VA = "0xF94CDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xF93C48", Offset = "0xF93C48", VA = "0xF93C48")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xF94B90", Offset = "0xF94B90", VA = "0xF94B90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xF94B94", Offset = "0xF94B94", VA = "0xF94B94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xF94C74", Offset = "0xF94C74", VA = "0xF94C74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC0C", Offset = "0x9DFC0C")]
	private sealed class <TeleportingStateCoroutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000291")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xF953A0", Offset = "0xF953A0", VA = "0xF953A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xF95410", Offset = "0xF95410", VA = "0xF95410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xF93EC0", Offset = "0xF93EC0", VA = "0xF93EC0")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xF9526C", Offset = "0xF9526C", VA = "0xF9526C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xF95270", Offset = "0xF95270", VA = "0xF95270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xF953A8", Offset = "0xF953A8", VA = "0xF953A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC1C", Offset = "0x9DFC1C")]
	private sealed class <PostTeleportStateCoroutine>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000293")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xF94E4C", Offset = "0xF94E4C", VA = "0xF94E4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xF94EBC", Offset = "0xF94EBC", VA = "0xF94EBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xF94138", Offset = "0xF94138", VA = "0xF94138")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xF94CE4", Offset = "0xF94CE4", VA = "0xF94CE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xF94CE8", Offset = "0xF94CE8", VA = "0xF94CE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xF94E54", Offset = "0xF94E54", VA = "0xF94E54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1B00", Offset = "0x9E1B00")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1B38", Offset = "0x9E1B38")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1B70", Offset = "0x9E1B70")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1BA8", Offset = "0x9E1BA8")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1BE0", Offset = "0x9E1BE0")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1C18", Offset = "0x9E1C18")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1C50", Offset = "0x9E1C50")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1C88", Offset = "0x9E1C88")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E1CC0", Offset = "0x9E1CC0")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1CD0", Offset = "0x9E1CD0")]
	public TeleportDestination TeleportDestinationPrefab;

	[NonSerialized]
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E1D18", Offset = "0x9E1D18")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1D28", Offset = "0x9E1D28")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1D60", Offset = "0x9E1D60")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1D98", Offset = "0x9E1D98")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1DD0", Offset = "0x9E1DD0")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000025")]
	public States CurrentState
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xF92170", Offset = "0xF92170", VA = "0xF92170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9254", Offset = "0x9E9254")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xF92178", Offset = "0xF92178", VA = "0xF92178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9264", Offset = "0x9E9264")]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xF92438", Offset = "0xF92438", VA = "0xF92438")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000027")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xF92478", Offset = "0xF92478", VA = "0xF92478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9294", Offset = "0x9E9294")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xF92480", Offset = "0xF92480", VA = "0xF92480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E92A4", Offset = "0x9E92A4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xF92180", Offset = "0xF92180", VA = "0xF92180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9274", Offset = "0x9E9274")]
		add
		{
		}
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xF9226C", Offset = "0xF9226C", VA = "0xF9226C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9284", Offset = "0x9E9284")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xF92C6C", Offset = "0xF92C6C", VA = "0xF92C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E92EC", Offset = "0x9E92EC")]
		add
		{
		}
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xF92D58", Offset = "0xF92D58", VA = "0xF92D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E92FC", Offset = "0x9E92FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xF92E70", Offset = "0xF92E70", VA = "0xF92E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9370", Offset = "0x9E9370")]
		add
		{
		}
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xF92F5C", Offset = "0xF92F5C", VA = "0xF92F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9380", Offset = "0x9E9380")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xF93048", Offset = "0xF93048", VA = "0xF93048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9390", Offset = "0x9E9390")]
		add
		{
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xF93134", Offset = "0xF93134", VA = "0xF93134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E93A0", Offset = "0x9E93A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xF93294", Offset = "0xF93294", VA = "0xF93294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E93B0", Offset = "0x9E93B0")]
		add
		{
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xF93380", Offset = "0xF93380", VA = "0xF93380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E93C0", Offset = "0x9E93C0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xF9350C", Offset = "0xF9350C", VA = "0xF9350C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9434", Offset = "0x9E9434")]
		add
		{
		}
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xF935F8", Offset = "0xF935F8", VA = "0xF935F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9444", Offset = "0x9E9444")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xF93784", Offset = "0xF93784", VA = "0xF93784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E94B8", Offset = "0x9E94B8")]
		add
		{
		}
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xF93870", Offset = "0xF93870", VA = "0xF93870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E94C8", Offset = "0x9E94C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xF939FC", Offset = "0xF939FC", VA = "0xF939FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E953C", Offset = "0x9E953C")]
		add
		{
		}
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xF93AE8", Offset = "0xF93AE8", VA = "0xF93AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E954C", Offset = "0x9E954C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xF93C74", Offset = "0xF93C74", VA = "0xF93C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E95C0", Offset = "0x9E95C0")]
		add
		{
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xF93D60", Offset = "0xF93D60", VA = "0xF93D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E95D0", Offset = "0x9E95D0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xF93EEC", Offset = "0xF93EEC", VA = "0xF93EEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9644", Offset = "0x9E9644")]
		add
		{
		}
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xF93FD8", Offset = "0xF93FD8", VA = "0xF93FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9654", Offset = "0x9E9654")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xF94164", Offset = "0xF94164", VA = "0xF94164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E96C8", Offset = "0x9E96C8")]
		add
		{
		}
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xF94250", Offset = "0xF94250", VA = "0xF94250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E96D8", Offset = "0x9E96D8")]
		remove
		{
		}
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xF91C98", Offset = "0xF91C98", VA = "0xF91C98")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xF91CBC", Offset = "0xF91CBC", VA = "0xF91CBC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xF92358", Offset = "0xF92358", VA = "0xF92358")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xF92488", Offset = "0xF92488", VA = "0xF92488")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xF9285C", Offset = "0xF9285C", VA = "0xF9285C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9E92B4", Offset = "0x9E92B4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xF92914", Offset = "0xF92914", VA = "0xF92914")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xF929F4", Offset = "0xF929F4", VA = "0xF929F4")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xF92A24", Offset = "0xF92A24", VA = "0xF92A24")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xF92AF0", Offset = "0xF92AF0", VA = "0xF92AF0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xF92B6C", Offset = "0xF92B6C", VA = "0xF92B6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xF92BC8", Offset = "0xF92BC8", VA = "0xF92BC8", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xF92BF8", Offset = "0xF92BF8", VA = "0xF92BF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E930C", Offset = "0x9E930C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xF93220", Offset = "0xF93220", VA = "0xF93220")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xF9346C", Offset = "0xF9346C", VA = "0xF9346C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E93D0", Offset = "0x9E93D0")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xF936E4", Offset = "0xF936E4", VA = "0xF936E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9454", Offset = "0x9E9454")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xF9395C", Offset = "0xF9395C", VA = "0xF9395C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E94D8", Offset = "0x9E94D8")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xF93BD4", Offset = "0xF93BD4", VA = "0xF93BD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E955C", Offset = "0x9E955C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xF93E4C", Offset = "0xF93E4C", VA = "0xF93E4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E95E0", Offset = "0x9E95E0")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xF940C4", Offset = "0xF940C4", VA = "0xF940C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9664", Offset = "0x9E9664")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xF9433C", Offset = "0xF9433C", VA = "0xF9433C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xF9450C", Offset = "0xF9450C", VA = "0xF9450C")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xF94564", Offset = "0xF94564", VA = "0xF94564")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xF9462C", Offset = "0xF9462C", VA = "0xF9462C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xF947E8", Offset = "0xF947E8", VA = "0xF947E8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000096")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB8D604", Offset = "0xB8D604", VA = "0xB8D604", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB8D6A4", Offset = "0xB8D6A4", VA = "0xB8D6A4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002F6")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB8D780", Offset = "0xB8D780", VA = "0xB8D780")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1EA8", Offset = "0x9E1EA8")]
	public float Range;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB8D790", Offset = "0xB8D790", VA = "0xB8D790", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB8D940", Offset = "0xB8D940", VA = "0xB8D940")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1EE0", Offset = "0x9E1EE0")]
	public float Range;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1F18", Offset = "0x9E1F18")]
	public float MinimumElevation;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1F50", Offset = "0x9E1F50")]
	public float Gravity;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1F88", Offset = "0x9E1F88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E1F88", Offset = "0x9E1F88")]
	public float AimVelocity;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E1FE4", Offset = "0x9E1FE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E1FE4", Offset = "0x9E1FE4")]
	public float AimStep;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB8D950", Offset = "0xB8D950", VA = "0xB8D950", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB8DBB4", Offset = "0xB8DBB4", VA = "0xB8DBB4")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E203C", Offset = "0x9E203C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB8DBC8", Offset = "0xB8DBC8", VA = "0xB8DBC8")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB8DCAC", Offset = "0xB8DCAC", VA = "0xB8DCAC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB8DCF8", Offset = "0xB8DCF8", VA = "0xB8DCF8")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB8DD44", Offset = "0xB8DD44", VA = "0xB8DD44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB8DDF8", Offset = "0xB8DDF8", VA = "0xB8DDF8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB8DE98", Offset = "0xB8DE98", VA = "0xB8DE98", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB8DF34", Offset = "0xB8DF34", VA = "0xB8DF34")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200009A")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2074", Offset = "0x9E2074")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2084", Offset = "0x9E2084")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E20BC", Offset = "0x9E20BC")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E20F4", Offset = "0x9E20F4")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000028")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0xB8E0F0", Offset = "0xB8E0F0", VA = "0xB8E0F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E96E8", Offset = "0x9E96E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xB8E0F8", Offset = "0xB8E0F8", VA = "0xB8E0F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E96F8", Offset = "0x9E96F8")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0xB8E308", Offset = "0xB8E308", VA = "0xB8E308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9708", Offset = "0x9E9708")]
		add
		{
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xB8E3F4", Offset = "0xB8E3F4", VA = "0xB8E3F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9718", Offset = "0x9E9718")]
		remove
		{
		}
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xB8E104", Offset = "0xB8E104", VA = "0xB8E104")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xB8E194", Offset = "0xB8E194", VA = "0xB8E194")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xB8E2B0", Offset = "0xB8E2B0", VA = "0xB8E2B0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB8E304", Offset = "0xB8E304", VA = "0xB8E304")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB8E4E0", Offset = "0xB8E4E0", VA = "0xB8E4E0")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xB8E548", Offset = "0xB8E548", VA = "0xB8E548")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB8E580", Offset = "0xB8E580", VA = "0xB8E580", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200009B")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC2C", Offset = "0x9DFC2C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000295")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xB8EDD8", Offset = "0xB8EDD8", VA = "0xB8EDD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xB8EE48", Offset = "0xB8EE48", VA = "0xB8EE48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xB8EAF0", Offset = "0xB8EAF0", VA = "0xB8EAF0")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xB8ED3C", Offset = "0xB8ED3C", VA = "0xB8ED3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xB8ED40", Offset = "0xB8ED40", VA = "0xB8ED40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xB8EDE0", Offset = "0xB8EDE0", VA = "0xB8EDE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC3C", Offset = "0x9DFC3C")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000297")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xB8ECC4", Offset = "0xB8ECC4", VA = "0xB8ECC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0xB8ED34", Offset = "0xB8ED34", VA = "0xB8ED34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xB8EB90", Offset = "0xB8EB90", VA = "0xB8EB90")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xB8EC14", Offset = "0xB8EC14", VA = "0xB8EC14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xB8EC18", Offset = "0xB8EC18", VA = "0xB8EC18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xB8ECCC", Offset = "0xB8ECCC", VA = "0xB8ECCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB8E85C", Offset = "0xB8E85C", VA = "0xB8E85C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xB8E908", Offset = "0xB8E908", VA = "0xB8E908", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xB8E98C", Offset = "0xB8E98C", VA = "0xB8E98C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xB8EA7C", Offset = "0xB8EA7C", VA = "0xB8EA7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9728", Offset = "0x9E9728")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xB8EB1C", Offset = "0xB8EB1C", VA = "0xB8EB1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E978C", Offset = "0x9E978C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000314")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xB8EBBC", Offset = "0xB8EBBC", VA = "0xB8EBBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E97F0", Offset = "0x9E97F0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xB8EBE8", Offset = "0xB8EBE8", VA = "0xB8EBE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9800", Offset = "0x9E9800")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000420")]
	public enum InputModes
	{
		[Token(Token = "0x4001716")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001717")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001718")]
		ThumbstickTeleport,
		[Token(Token = "0x4001719")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000421")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400171B")]
		A,
		[Token(Token = "0x400171C")]
		B,
		[Token(Token = "0x400171D")]
		LeftTrigger,
		[Token(Token = "0x400171E")]
		LeftThumbstick,
		[Token(Token = "0x400171F")]
		RightTrigger,
		[Token(Token = "0x4001720")]
		RightThumbstick,
		[Token(Token = "0x4001721")]
		X,
		[Token(Token = "0x4001722")]
		Y
	}

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E213C", Offset = "0x9E213C")]
	public OvrAvatar Avatar;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2174", Offset = "0x9E2174")]
	public InputModes InputMode;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E21AC", Offset = "0x9E21AC")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E21E4", Offset = "0x9E21E4")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E221C", Offset = "0x9E221C")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xB8EE50", Offset = "0xB8EE50", VA = "0xB8EE50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xB8EF30", Offset = "0xB8EF30", VA = "0xB8EF30", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xB8F550", Offset = "0xB8F550", VA = "0xB8F550", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xB8F650", Offset = "0xB8F650", VA = "0xB8F650")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2254", Offset = "0x9E2254")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2264", Offset = "0x9E2264")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E229C", Offset = "0x9E229C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E22D4", Offset = "0x9E22D4")]
	public bool FastTeleport;

	[Token(Token = "0x17000029")]
	public Transform Pointer
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xB8F700", Offset = "0xB8F700", VA = "0xB8F700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9810", Offset = "0x9E9810")]
		get
		{
			return null;
		}
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xB8F708", Offset = "0xB8F708", VA = "0xB8F708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9820", Offset = "0x9E9820")]
		private set
		{
		}
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xB8F3E8", Offset = "0xB8F3E8", VA = "0xB8F3E8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xB8F710", Offset = "0xB8F710", VA = "0xB8F710", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xB8F6FC", Offset = "0xB8F6FC", VA = "0xB8F6FC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200009E")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000422")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001724")]
		HeadRelative,
		[Token(Token = "0x4001725")]
		ForwardFacing
	}

	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC4C", Offset = "0x9DFC4C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000299")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0xB8FCA4", Offset = "0xB8FCA4", VA = "0xB8FCA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xB8FD14", Offset = "0xB8FD14", VA = "0xB8FD14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xB8FA0C", Offset = "0xB8FA0C", VA = "0xB8FA0C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xB8FBB8", Offset = "0xB8FBB8", VA = "0xB8FBB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xB8FBBC", Offset = "0xB8FBBC", VA = "0xB8FBBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xB8FCAC", Offset = "0xB8FCAC", VA = "0xB8FCAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xB8F800", Offset = "0xB8F800", VA = "0xB8F800")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xB8F8B4", Offset = "0xB8F8B4", VA = "0xB8F8B4")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB8F8BC", Offset = "0xB8F8BC", VA = "0xB8F8BC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB8F92C", Offset = "0xB8F92C", VA = "0xB8F92C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB8F998", Offset = "0xB8F998", VA = "0xB8F998")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9830", Offset = "0x9E9830")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000325")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000326")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xB8FA38", Offset = "0xB8FA38", VA = "0xB8FA38")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xB8FB8C", Offset = "0xB8FB8C", VA = "0xB8FB8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9894", Offset = "0x9E9894")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000329")]
	[Address(RVA = "0xB8FD1C", Offset = "0xB8FD1C", VA = "0xB8FD1C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xB8FD20", Offset = "0xB8FD20", VA = "0xB8FD20", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xB8FDDC", Offset = "0xB8FDDC", VA = "0xB8FDDC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E230C", Offset = "0x9E230C")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2344", Offset = "0x9E2344")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E237C", Offset = "0x9E237C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E23B4", Offset = "0x9E23B4")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xB8FDE0", Offset = "0xB8FDE0", VA = "0xB8FDE0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xB8FE50", Offset = "0xB8FE50", VA = "0xB8FE50", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xB903BC", Offset = "0xB903BC", VA = "0xB903BC")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E23EC", Offset = "0x9E23EC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2424", Offset = "0x9E2424")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E245C", Offset = "0x9E245C")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xB903C0", Offset = "0xB903C0", VA = "0xB903C0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB9040C", Offset = "0xB9040C", VA = "0xB9040C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB908F0", Offset = "0xB908F0", VA = "0xB908F0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000A2")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB90900", Offset = "0xB90900", VA = "0xB90900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB90904", Offset = "0xB90904", VA = "0xB90904")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB9090C", Offset = "0xB9090C", VA = "0xB9090C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB90A08", Offset = "0xB90A08", VA = "0xB90A08")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xB90A30", Offset = "0xB90A30", VA = "0xB90A30")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000A3")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2494", Offset = "0x9E2494")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002A")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xB8D69C", Offset = "0xB8D69C", VA = "0xB8D69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E98A4", Offset = "0x9E98A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000338")]
		[Address(RVA = "0xB90A48", Offset = "0xB90A48", VA = "0xB90A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E98B4", Offset = "0x9E98B4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xB8D638", Offset = "0xB8D638", VA = "0xB8D638", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xB8D754", Offset = "0xB8D754", VA = "0xB8D754", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xB90A50", Offset = "0xB90A50", VA = "0xB90A50")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9E98C4", Offset = "0x9E98C4")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xB8DE8C", Offset = "0xB8DE8C", VA = "0xB8DE8C", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB8DF2C", Offset = "0xB8DF2C", VA = "0xB8DF2C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xB8D788", Offset = "0xB8D788", VA = "0xB8D788")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000A4")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC5C", Offset = "0x9DFC5C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700029B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xB9126C", Offset = "0xB9126C", VA = "0xB9126C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xB912DC", Offset = "0xB912DC", VA = "0xB912DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xB90CD4", Offset = "0xB90CD4", VA = "0xB90CD4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xB90EFC", Offset = "0xB90EFC", VA = "0xB90EFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xB90F00", Offset = "0xB90F00", VA = "0xB90F00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xB91274", Offset = "0xB91274", VA = "0xB91274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E24A4", Offset = "0x9E24A4")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xB90B20", Offset = "0xB90B20", VA = "0xB90B20")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xB90BE4", Offset = "0xB90BE4", VA = "0xB90BE4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xB90C24", Offset = "0xB90C24", VA = "0xB90C24", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB90C60", Offset = "0xB90C60", VA = "0xB90C60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E98FC", Offset = "0x9E98FC")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB90D00", Offset = "0xB90D00", VA = "0xB90D00", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000344")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB90D30", Offset = "0xB90D30", VA = "0xB90D30", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB90ED0", Offset = "0xB90ED0", VA = "0xB90ED0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9960", Offset = "0x9E9960")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A5")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xB912E4", Offset = "0xB912E4", VA = "0xB912E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xB91344", Offset = "0xB91344", VA = "0xB91344", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB914E4", Offset = "0xB914E4", VA = "0xB914E4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB9161C", Offset = "0xB9161C", VA = "0xB9161C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9E9970", Offset = "0x9E9970")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB91620", Offset = "0xB91620", VA = "0xB91620")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E24DC", Offset = "0x9E24DC")]
	public float LOSOffset;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2514", Offset = "0x9E2514")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xB9162C", Offset = "0xB9162C", VA = "0xB9162C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xB918B8", Offset = "0xB918B8", VA = "0xB918B8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A7")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600034E")]
	[Address(RVA = "0xB918C4", Offset = "0xB918C4", VA = "0xB918C4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xB91A64", Offset = "0xB91A64", VA = "0xB91A64")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A8")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000350")]
	[Address(RVA = "0xB91A68", Offset = "0xB91A68", VA = "0xB91A68", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xB91B10", Offset = "0xB91B10", VA = "0xB91B10", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000352")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xB91BB4", Offset = "0xB91BB4", VA = "0xB91BB4")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A9")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC6C", Offset = "0x9DFC6C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700029D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xB91F84", Offset = "0xB91F84", VA = "0xB91F84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xB91FF4", Offset = "0xB91FF4", VA = "0xB91FF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xB91C5C", Offset = "0xB91C5C", VA = "0xB91C5C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xB91E48", Offset = "0xB91E48", VA = "0xB91E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xB91E4C", Offset = "0xB91E4C", VA = "0xB91E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xB91F8C", Offset = "0xB91F8C", VA = "0xB91F8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E254C", Offset = "0x9E254C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E254C", Offset = "0x9E254C")]
	public float TransitionDuration;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E25A4", Offset = "0x9E25A4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E25A4", Offset = "0x9E25A4")]
	public float TeleportDelay;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E25F8", Offset = "0x9E25F8")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xB91BBC", Offset = "0xB91BBC", VA = "0xB91BBC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xB91BE8", Offset = "0xB91BE8", VA = "0xB91BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E99A8", Offset = "0x9E99A8")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xB91C88", Offset = "0xB91C88", VA = "0xB91C88")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000357")]
	[Address(RVA = "0xB91FFC", Offset = "0xB91FFC", VA = "0xB91FFC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xB9202C", Offset = "0xB9202C", VA = "0xB9202C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC7C", Offset = "0x9DFC7C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700029F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0xB922F4", Offset = "0xB922F4", VA = "0xB922F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xB92364", Offset = "0xB92364", VA = "0xB92364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xB920D4", Offset = "0xB920D4", VA = "0xB920D4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xB92148", Offset = "0xB92148", VA = "0xB92148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xB9214C", Offset = "0xB9214C", VA = "0xB9214C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xB922FC", Offset = "0xB922FC", VA = "0xB922FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2630", Offset = "0x9E2630")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E2630", Offset = "0x9E2630")]
	public float TransitionDuration;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xB92034", Offset = "0xB92034", VA = "0xB92034", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xB92060", Offset = "0xB92060", VA = "0xB92060")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9A0C", Offset = "0x9E9A0C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xB92100", Offset = "0xB92100", VA = "0xB92100")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000AC")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC668C0", Offset = "0xC668C0", VA = "0xC668C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC66D5C", Offset = "0xC66D5C", VA = "0xC66D5C")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC66E24", Offset = "0xC66E24", VA = "0xC66E24")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC670E0", Offset = "0xC670E0", VA = "0xC670E0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC671D0", Offset = "0xC671D0", VA = "0xC671D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC672C4", Offset = "0xC672C4", VA = "0xC672C4")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC67330", Offset = "0xC67330", VA = "0xC67330")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC67338", Offset = "0xC67338", VA = "0xC67338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A70", Offset = "0x9E9A70")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC67394", Offset = "0xC67394", VA = "0xC67394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A80", Offset = "0x9E9A80")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC673F0", Offset = "0xC673F0", VA = "0xC673F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A90", Offset = "0x9E9A90")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC6744C", Offset = "0xC6744C", VA = "0xC6744C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9AA0", Offset = "0x9E9AA0")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000AD")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E2698", Offset = "0x9E2698")]
	public int SubdivisionsU;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E26B4", Offset = "0x9E26B4")]
	public int SubdivisionsV;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC5B744", Offset = "0xC5B744", VA = "0xC5B744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC5C6A4", Offset = "0xC5C6A4", VA = "0xC5C6A4")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000AE")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700002B")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xF9138C", Offset = "0xF9138C", VA = "0xF9138C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xF913EC", Offset = "0xF913EC", VA = "0xF913EC")]
	public void Start()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xF917FC", Offset = "0xF917FC", VA = "0xF917FC")]
	public void Update()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xF918F8", Offset = "0xF918F8", VA = "0xF918F8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9E9AB0", Offset = "0x9E9AB0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600036D")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600036E")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600036F")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000370")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000371")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000372")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000373")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000374")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xF91960", Offset = "0xF91960", VA = "0xF91960")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xF919C4", Offset = "0xF919C4", VA = "0xF919C4")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xF91A74", Offset = "0xF91A74", VA = "0xF91A74")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xF91CE0", Offset = "0xF91CE0", VA = "0xF91CE0")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xF91DD0", Offset = "0xF91DD0", VA = "0xF91DD0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xF91658", Offset = "0xF91658", VA = "0xF91658")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xF91F08", Offset = "0xF91F08", VA = "0xF91F08")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xF91FE8", Offset = "0xF91FE8", VA = "0xF91FE8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xF92168", Offset = "0xF92168", VA = "0xF92168")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000AF")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFC8C", Offset = "0x9DFC8C")]
	private sealed class <ShowOverlayAndLoad>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartMenu <>4__this;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x170002A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xB7F650", Offset = "0xB7F650", VA = "0xB7F650", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0xB7F6C0", Offset = "0xB7F6C0", VA = "0xB7F6C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xB7F074", Offset = "0xB7F074", VA = "0xB7F074")]
		[DebuggerHidden]
		public <ShowOverlayAndLoad>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xB7F378", Offset = "0xB7F378", VA = "0xB7F378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xB7F37C", Offset = "0xB7F37C", VA = "0xB7F37C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xB7F658", Offset = "0xB7F658", VA = "0xB7F658", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB7EB5C", Offset = "0xB7EB5C", VA = "0xB7EB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB7EF4C", Offset = "0xB7EF4C", VA = "0xB7EF4C")]
	private void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB7EFDC", Offset = "0xB7EFDC", VA = "0xB7EFDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9AE8", Offset = "0x9E9AE8")]
	private IEnumerator ShowOverlayAndLoad(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xB7F0A0", Offset = "0xB7F0A0", VA = "0xB7F0A0")]
	private void LoadAvatarGrab()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB7F0F0", Offset = "0xB7F0F0", VA = "0xB7F0F0")]
	private void LoadCustomControllers()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB7F140", Offset = "0xB7F140", VA = "0xB7F140")]
	private void LoadCustomHands()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB7F190", Offset = "0xB7F190", VA = "0xB7F190")]
	private void LoadDebugUI()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB7F1E0", Offset = "0xB7F1E0", VA = "0xB7F1E0")]
	private void LoadDistanceGrab()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xB7F230", Offset = "0xB7F230", VA = "0xB7F230")]
	private void LoadGuardianBoundarySystem()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB7F280", Offset = "0xB7F280", VA = "0xB7F280")]
	private void LoadLocomotion()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB7F2D0", Offset = "0xB7F2D0", VA = "0xB7F2D0")]
	private void LoadMixedRealityCapture()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xB7F320", Offset = "0xB7F320", VA = "0xB7F320")]
	private void LoadOVROverlay()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xB7F370", Offset = "0xB7F370", VA = "0xB7F370")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9DE5EC", Offset = "0x9DE5EC")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000428")]
	public enum RotationAxes
	{
		[Token(Token = "0x400173D")]
		MouseXAndY,
		[Token(Token = "0x400173E")]
		MouseX,
		[Token(Token = "0x400173F")]
		MouseY
	}

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xFB6B80", Offset = "0xFB6B80", VA = "0xFB6B80")]
	private void Update()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xFB6E04", Offset = "0xFB6E04", VA = "0xFB6E04")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xFB6ECC", Offset = "0xFB6ECC", VA = "0xFB6ECC")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000B1")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000B2")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1302228", Offset = "0x1302228", VA = "0x1302228")]
	private void Start()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x130222C", Offset = "0x130222C", VA = "0x130222C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1302230", Offset = "0x1302230", VA = "0x1302230")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x13023BC", Offset = "0x13023BC", VA = "0x13023BC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1302284", Offset = "0x1302284", VA = "0x1302284")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1302318", Offset = "0x1302318", VA = "0x1302318")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1302410", Offset = "0x1302410", VA = "0x1302410")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x13024B0", Offset = "0x13024B0", VA = "0x13024B0")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x130263C", Offset = "0x130263C", VA = "0x130263C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x13027C8", Offset = "0x13027C8", VA = "0x13027C8")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000B3")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000429")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40004B5")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40004BB")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xD0451C", Offset = "0xD0451C", VA = "0xD0451C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xD04554", Offset = "0xD04554", VA = "0xD04554")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xD04724", Offset = "0xD04724", VA = "0xD04724")]
	private void Start()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xD047DC", Offset = "0xD047DC", VA = "0xD047DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xD048EC", Offset = "0xD048EC", VA = "0xD048EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xD05524", Offset = "0xD05524", VA = "0xD05524")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600039F")]
	[Address(RVA = "0xD047B8", Offset = "0xD047B8", VA = "0xD047B8")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xD04840", Offset = "0xD04840", VA = "0xD04840")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xD0520C", Offset = "0xD0520C", VA = "0xD0520C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xD052A8", Offset = "0xD052A8", VA = "0xD052A8")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xD05348", Offset = "0xD05348", VA = "0xD05348")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD053E8", Offset = "0xD053E8", VA = "0xD053E8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xD05484", Offset = "0xD05484", VA = "0xD05484")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD0688C", Offset = "0xD0688C", VA = "0xD0688C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xD06950", Offset = "0xD06950", VA = "0xD06950")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xD06A14", Offset = "0xD06A14", VA = "0xD06A14")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200042A")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001741")]
		Uninitialized = -1,
		[Token(Token = "0x4001742")]
		NotEnabled,
		[Token(Token = "0x4001743")]
		Success,
		[Token(Token = "0x4001744")]
		StreamError,
		[Token(Token = "0x4001745")]
		ProcessError,
		[Token(Token = "0x4001746")]
		MaxStatValue
	}

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700002C")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xFB94AC", Offset = "0xFB94AC", VA = "0xFB94AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xFB94B4", Offset = "0xFB94B4", VA = "0xFB94B4")]
		set
		{
		}
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xFB94C0", Offset = "0xFB94C0", VA = "0xFB94C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xFB9710", Offset = "0xFB9710", VA = "0xFB9710")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xFB999C", Offset = "0xFB999C", VA = "0xFB999C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200042B")]
	private enum Parameters
	{
		[Token(Token = "0x4001748")]
		P_GAIN,
		[Token(Token = "0x4001749")]
		P_USEINVSQR,
		[Token(Token = "0x400174A")]
		P_NEAR,
		[Token(Token = "0x400174B")]
		P_FAR,
		[Token(Token = "0x400174C")]
		P_RADIUS,
		[Token(Token = "0x400174D")]
		P_DISABLE_RFL,
		[Token(Token = "0x400174E")]
		P_VSPEAKERMODE,
		[Token(Token = "0x400174F")]
		P_AMBISTAT,
		[Token(Token = "0x4001750")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001751")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001752")]
		P_SENDLEVEL,
		[Token(Token = "0x4001753")]
		P_NUM
	}

	[Token(Token = "0x40004C1")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700002D")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xFB9B1C", Offset = "0xFB9B1C", VA = "0xFB9B1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xFB9B24", Offset = "0xFB9B24", VA = "0xFB9B24")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public float Gain
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xFB9B30", Offset = "0xFB9B30", VA = "0xFB9B30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xFB9B38", Offset = "0xFB9B38", VA = "0xFB9B38")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xFB9BBC", Offset = "0xFB9BBC", VA = "0xFB9BBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xFB9BC4", Offset = "0xFB9BC4", VA = "0xFB9BC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public float Near
	{
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xFB9BD0", Offset = "0xFB9BD0", VA = "0xFB9BD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xFB9BD8", Offset = "0xFB9BD8", VA = "0xFB9BD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public float Far
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xFB9C60", Offset = "0xFB9C60", VA = "0xFB9C60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xFB9C68", Offset = "0xFB9C68", VA = "0xFB9C68")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xFB9CF0", Offset = "0xFB9CF0", VA = "0xFB9CF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xFB9CF8", Offset = "0xFB9CF8", VA = "0xFB9CF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public float ReverbSend
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xFB9D80", Offset = "0xFB9D80", VA = "0xFB9D80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xFB9D88", Offset = "0xFB9D88", VA = "0xFB9D88")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xFB9E10", Offset = "0xFB9E10", VA = "0xFB9E10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xFB9E18", Offset = "0xFB9E18", VA = "0xFB9E18")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xFB9A20", Offset = "0xFB9A20", VA = "0xFB9A20")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xFB9E24", Offset = "0xFB9E24", VA = "0xFB9E24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xFBA024", Offset = "0xFBA024", VA = "0xFBA024")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xFBA028", Offset = "0xFBA028", VA = "0xFBA028")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xFB9E90", Offset = "0xFB9E90", VA = "0xFB9E90")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xFBA108", Offset = "0xFBA108", VA = "0xFBA108")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xFBA5DC", Offset = "0xFBA5DC", VA = "0xFBA5DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xFBA6AC", Offset = "0xFBA6AC", VA = "0xFBA6AC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40004CC")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40004CE")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xFBA6CC", Offset = "0xFBA6CC", VA = "0xFBA6CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xFBA6D8", Offset = "0xFBA6D8", VA = "0xFBA6D8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xFBA7AC", Offset = "0xFBA7AC", VA = "0xFBA7AC")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xFBA710", Offset = "0xFBA710", VA = "0xFBA710")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xFBA848", Offset = "0xFBA848", VA = "0xFBA848")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200042C")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200042D")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int OSPSuccess;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int terrainDecimation;

	[Token(Token = "0x17000035")]
	public string filePath
	{
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xFBA858", Offset = "0xFBA858", VA = "0xFBA858")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xFBA8B4", Offset = "0xFBA8B4", VA = "0xFBA8B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xFBA8B8", Offset = "0xFBA8B8", VA = "0xFBA8B8")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xFBAD88", Offset = "0xFBAD88", VA = "0xFBAD88")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xFBB274", Offset = "0xFBB274", VA = "0xFBB274")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xFBB3E4", Offset = "0xFBB3E4", VA = "0xFBB3E4")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xFBBC18", Offset = "0xFBBC18", VA = "0xFBBC18")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic)
	{
		return default(int);
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xFBAC3C", Offset = "0xFBAC3C", VA = "0xFBAC3C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xFBAAB4", Offset = "0xFBAAB4", VA = "0xFBAAB4")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xFBD668", Offset = "0xFBD668", VA = "0xFBD668")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000B8")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200042E")]
	public enum Preset
	{
		[Token(Token = "0x4001759")]
		Custom,
		[Token(Token = "0x400175A")]
		AcousticTile,
		[Token(Token = "0x400175B")]
		Brick,
		[Token(Token = "0x400175C")]
		BrickPainted,
		[Token(Token = "0x400175D")]
		Carpet,
		[Token(Token = "0x400175E")]
		CarpetHeavy,
		[Token(Token = "0x400175F")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001760")]
		CeramicTile,
		[Token(Token = "0x4001761")]
		Concrete,
		[Token(Token = "0x4001762")]
		ConcreteRough,
		[Token(Token = "0x4001763")]
		ConcreteBlock,
		[Token(Token = "0x4001764")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001765")]
		Curtain,
		[Token(Token = "0x4001766")]
		Foliage,
		[Token(Token = "0x4001767")]
		Glass,
		[Token(Token = "0x4001768")]
		GlassHeavy,
		[Token(Token = "0x4001769")]
		Grass,
		[Token(Token = "0x400176A")]
		Gravel,
		[Token(Token = "0x400176B")]
		GypsumBoard,
		[Token(Token = "0x400176C")]
		PlasterOnBrick,
		[Token(Token = "0x400176D")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400176E")]
		Soil,
		[Token(Token = "0x400176F")]
		SoundProof,
		[Token(Token = "0x4001770")]
		Snow,
		[Token(Token = "0x4001771")]
		Steel,
		[Token(Token = "0x4001772")]
		Water,
		[Token(Token = "0x4001773")]
		WoodThin,
		[Token(Token = "0x4001774")]
		WoodThick,
		[Token(Token = "0x4001775")]
		WoodFloor,
		[Token(Token = "0x4001776")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200042F")]
	public sealed class Point
	{
		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x1301BC0", Offset = "0x1301BC0", VA = "0x1301BC0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x1301BF8", Offset = "0x1301BF8", VA = "0x1301BF8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x1301C68", Offset = "0x1301C68", VA = "0x1301C68")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DFC9C", Offset = "0x9DFC9C")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0480", Offset = "0x9E0480")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x13021C8", Offset = "0x13021C8", VA = "0x13021C8")]
			public <>c()
			{
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x13021D0", Offset = "0x13021D0", VA = "0x13021D0")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x13021FC", Offset = "0x13021FC", VA = "0x13021FC")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170002A3")]
		public float Item
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x1301CD0", Offset = "0x1301CD0", VA = "0x1301CD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x13020EC", Offset = "0x13020EC", VA = "0x13020EC")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2760", Offset = "0x9E2760")]
	public Spectrum absorption;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2798", Offset = "0x9E2798")]
	public Spectrum transmission;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E27D0", Offset = "0x9E27D0")]
	public Spectrum scattering;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000036")]
	public Preset preset
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xFC0E90", Offset = "0xFC0E90", VA = "0xFC0E90")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xFC0E98", Offset = "0xFC0E98", VA = "0xFC0E98")]
		set
		{
		}
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xFC1054", Offset = "0xFC1054", VA = "0xFC1054")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xFBD3B8", Offset = "0xFBD3B8", VA = "0xFBD3B8")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xFC14E4", Offset = "0xFC14E4", VA = "0xFC14E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xFC14E8", Offset = "0xFC14E8", VA = "0xFC14E8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xFC1058", Offset = "0xFC1058", VA = "0xFC1058")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xFC0EC0", Offset = "0xFC0EC0", VA = "0xFC0EC0")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xFC156C", Offset = "0xFC156C", VA = "0xFC156C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xFC1B04", Offset = "0xFC1B04", VA = "0xFC1B04")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xFC20A0", Offset = "0xFC20A0", VA = "0xFC20A0")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xFC2638", Offset = "0xFC2638", VA = "0xFC2638")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xFC2BE4", Offset = "0xFC2BE4", VA = "0xFC2BE4")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xFC317C", Offset = "0xFC317C", VA = "0xFC317C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xFC3714", Offset = "0xFC3714", VA = "0xFC3714")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xFC3CB4", Offset = "0xFC3CB4", VA = "0xFC3CB4")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xFC4254", Offset = "0xFC4254", VA = "0xFC4254")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xFC47F8", Offset = "0xFC47F8", VA = "0xFC47F8")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xFC4D98", Offset = "0xFC4D98", VA = "0xFC4D98")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xFC5340", Offset = "0xFC5340", VA = "0xFC5340")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xFC58D8", Offset = "0xFC58D8", VA = "0xFC58D8")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xFC5E7C", Offset = "0xFC5E7C", VA = "0xFC5E7C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xFC6404", Offset = "0xFC6404", VA = "0xFC6404")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xFC6998", Offset = "0xFC6998", VA = "0xFC6998")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xFC6DD4", Offset = "0xFC6DD4", VA = "0xFC6DD4")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xFC7208", Offset = "0xFC7208", VA = "0xFC7208")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xFC77B0", Offset = "0xFC77B0", VA = "0xFC77B0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xFC7D54", Offset = "0xFC7D54", VA = "0xFC7D54")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xFC82F0", Offset = "0xFC82F0", VA = "0xFC82F0")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xFC8730", Offset = "0xFC8730", VA = "0xFC8730")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xFC88D0", Offset = "0xFC88D0", VA = "0xFC88D0")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xFC8D00", Offset = "0xFC8D00", VA = "0xFC8D00")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xFC9288", Offset = "0xFC9288", VA = "0xFC9288")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xFC9828", Offset = "0xFC9828", VA = "0xFC9828")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xFC9DB8", Offset = "0xFC9DB8", VA = "0xFC9DB8")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xFCA350", Offset = "0xFCA350", VA = "0xFCA350")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xFCA8F0", Offset = "0xFCA8F0", VA = "0xFCA8F0")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xFCAE8C", Offset = "0xFCAE8C", VA = "0xFCAE8C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40004DA")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1302850", Offset = "0x1302850", VA = "0x1302850")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1302904", Offset = "0x1302904", VA = "0x1302904")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1302A10", Offset = "0x1302A10", VA = "0x1302A10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1302A14", Offset = "0x1302A14", VA = "0x1302A14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1302A18", Offset = "0x1302A18", VA = "0x1302A18")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000BA")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceModEnableSwitch SwitchTarget;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 scale;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x119BDEC", Offset = "0x119BDEC", VA = "0x119BDEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x119C0A0", Offset = "0x119C0A0", VA = "0x119C0A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x119C574", Offset = "0x119C574", VA = "0x119C574")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x119C680", Offset = "0x119C680", VA = "0x119C680")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x119C3C4", Offset = "0x119C3C4", VA = "0x119C3C4")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x119CBB0", Offset = "0x119CBB0", VA = "0x119CBB0")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x20000BB")]
public class VoiceModEnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600040A")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x119BF68", Offset = "0x119BF68", VA = "0x119BF68")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x119CC14", Offset = "0x119CC14", VA = "0x119CC14")]
	public VoiceModEnableSwitch()
	{
	}
}
[Token(Token = "0x20000BC")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000037")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x130D938", Offset = "0x130D938", VA = "0x130D938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x130DC14", Offset = "0x130DC14", VA = "0x130DC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x130DD50", Offset = "0x130DD50", VA = "0x130DD50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x130DC84", Offset = "0x130DC84", VA = "0x130DC84")]
	public void Init()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x130DE58", Offset = "0x130DE58", VA = "0x130DE58")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x130E010", Offset = "0x130E010", VA = "0x130E010")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x130DDE8", Offset = "0x130DDE8", VA = "0x130DDE8")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x130E0FC", Offset = "0x130E0FC", VA = "0x130E0FC")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x130DF0C", Offset = "0x130DF0C", VA = "0x130DF0C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x130E0B8", Offset = "0x130E0B8", VA = "0x130E0B8")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x130E180", Offset = "0x130E180", VA = "0x130E180")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x130E400", Offset = "0x130E400", VA = "0x130E400")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x130E190", Offset = "0x130E190", VA = "0x130E190")]
	private void Display()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x130E4E0", Offset = "0x130E4E0", VA = "0x130E4E0")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x20000BD")]
public delegate void OVRCallback();
[Token(Token = "0x20000BE")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x20000BF")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x20000C0")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x20000C1")]
internal static class OVRMessenger
{
	[Token(Token = "0x2000431")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x13150DC", Offset = "0x13150DC", VA = "0x13150DC")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x2000432")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x1314C9C", Offset = "0x1314C9C", VA = "0x1314C9C")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x13141B4", Offset = "0x13141B4", VA = "0x13141B4")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1314240", Offset = "0x1314240", VA = "0x1314240")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1314680", Offset = "0x1314680", VA = "0x1314680")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1314A24", Offset = "0x1314A24", VA = "0x1314A24")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1314D14", Offset = "0x1314D14", VA = "0x1314D14")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1314F68", Offset = "0x1314F68", VA = "0x1314F68")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1315058", Offset = "0x1315058", VA = "0x1315058")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x131505C", Offset = "0x131505C", VA = "0x131505C")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1315154", Offset = "0x1315154", VA = "0x1315154")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000435")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x6000436")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x6000437")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1315300", Offset = "0x1315300", VA = "0x1315300")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x6000439")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x600043A")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x600043B")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x13154B4", Offset = "0x13154B4", VA = "0x13154B4")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x600043D")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x600043E")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x600043F")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x20000C2")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x6000441")]
	[Address(RVA = "0xFB38C0", Offset = "0xFB38C0", VA = "0xFB38C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xFB393C", Offset = "0xFB393C", VA = "0xFB393C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xFB399C", Offset = "0xFB399C", VA = "0xFB399C")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x20000C3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE624", Offset = "0x9DE624")]
public class OVRMicInput : MonoBehaviour
{
	[Token(Token = "0x2000433")]
	public enum micActivation
	{
		[Token(Token = "0x400177C")]
		HoldToSpeak,
		[Token(Token = "0x400177D")]
		PushToSpeak,
		[Token(Token = "0x400177E")]
		ConstantSpeak
	}

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GuiSelectDevice;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float sensitivity;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public micActivation micControl;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedDevice;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float loudness;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool micSelected;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int minFreq;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxFreq;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool focused;

	[Token(Token = "0x17000038")]
	public float Sensitivity
	{
		[Token(Token = "0x6000444")]
		[Address(RVA = "0x13156AC", Offset = "0x13156AC", VA = "0x13156AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x13156B4", Offset = "0x13156B4", VA = "0x13156B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float SourceVolume
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x131573C", Offset = "0x131573C", VA = "0x131573C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x1315744", Offset = "0x1315744", VA = "0x1315744")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float MicFrequency
	{
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x13157CC", Offset = "0x13157CC", VA = "0x13157CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000449")]
		[Address(RVA = "0x13157D8", Offset = "0x13157D8", VA = "0x13157D8")]
		set
		{
		}
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1315864", Offset = "0x1315864", VA = "0x1315864")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1315924", Offset = "0x1315924", VA = "0x1315924")]
	private void Start()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1315ACC", Offset = "0x1315ACC", VA = "0x1315ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1315EA4", Offset = "0x1315EA4", VA = "0x1315EA4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1315EB8", Offset = "0x1315EB8", VA = "0x1315EB8")]
	private void OnApplicationPause(bool focus)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1315ECC", Offset = "0x1315ECC", VA = "0x1315ECC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1315ED0", Offset = "0x1315ED0", VA = "0x1315ED0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1315F48", Offset = "0x1315F48", VA = "0x1315F48")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1315A04", Offset = "0x1315A04", VA = "0x1315A04")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1315E00", Offset = "0x1315E00", VA = "0x1315E00")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1315CA0", Offset = "0x1315CA0", VA = "0x1315CA0")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1315DF8", Offset = "0x1315DF8", VA = "0x1315DF8")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1316170", Offset = "0x1316170", VA = "0x1316170")]
	public OVRMicInput()
	{
	}
}
[Token(Token = "0x20000C4")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x2000434")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x4001780")]
		Unknown = -2250,
		[Token(Token = "0x4001781")]
		CannotCreateContext = -2251,
		[Token(Token = "0x4001782")]
		InvalidParam = -2252,
		[Token(Token = "0x4001783")]
		BadSampleRate = -2253,
		[Token(Token = "0x4001784")]
		MissingDLL = -2254,
		[Token(Token = "0x4001785")]
		BadVersion = -2255,
		[Token(Token = "0x4001786")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x2000435")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x4001788")]
		None
	}

	[Token(Token = "0x40004F9")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x40004FA")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1317AB8", Offset = "0x1317AB8", VA = "0x1317AB8")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1317B64", Offset = "0x1317B64", VA = "0x1317B64")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1317BF0", Offset = "0x1317BF0", VA = "0x1317BF0")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1317CA4", Offset = "0x1317CA4", VA = "0x1317CA4")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1317D40", Offset = "0x1317D40", VA = "0x1317D40")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1317DDC", Offset = "0x1317DDC", VA = "0x1317DDC")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1317E90", Offset = "0x1317E90", VA = "0x1317E90")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1317F4C", Offset = "0x1317F4C", VA = "0x1317F4C")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1318008", Offset = "0x1318008", VA = "0x1318008")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x13180B4", Offset = "0x13180B4", VA = "0x13180B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1318350", Offset = "0x1318350", VA = "0x1318350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1318354", Offset = "0x1318354", VA = "0x1318354")]
	private void Update()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1318358", Offset = "0x1318358", VA = "0x1318358")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1318464", Offset = "0x1318464", VA = "0x1318464")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x13184CC", Offset = "0x13184CC", VA = "0x13184CC")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1318560", Offset = "0x1318560", VA = "0x1318560")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x13185F4", Offset = "0x13185F4", VA = "0x13185F4")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x13186A4", Offset = "0x13186A4", VA = "0x13186A4")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x1318750", Offset = "0x1318750", VA = "0x1318750")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x13187FC", Offset = "0x13187FC", VA = "0x13187FC")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x13188A0", Offset = "0x13188A0", VA = "0x13188A0")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE688", Offset = "0x9DE688")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x400178A")]
		MixInputAudio,
		[Token(Token = "0x400178B")]
		PitchInputAudio,
		[Token(Token = "0x400178C")]
		SetBands,
		[Token(Token = "0x400178D")]
		FormantCorrection,
		[Token(Token = "0x400178E")]
		Carrier1_TrackPitch,
		[Token(Token = "0x400178F")]
		Carrier1_Type,
		[Token(Token = "0x4001790")]
		Carrier1_Gain,
		[Token(Token = "0x4001791")]
		Carrier1_Frequency,
		[Token(Token = "0x4001792")]
		Carrier1_Note,
		[Token(Token = "0x4001793")]
		Carrier1_PulseWidth,
		[Token(Token = "0x4001794")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x4001795")]
		Carrier2_TrackPitch,
		[Token(Token = "0x4001796")]
		Carrier2_Type,
		[Token(Token = "0x4001797")]
		Carrier2_Gain,
		[Token(Token = "0x4001798")]
		Carrier2_Frequency,
		[Token(Token = "0x4001799")]
		Carrier2_Note,
		[Token(Token = "0x400179A")]
		Carrier2_PulseWidth,
		[Token(Token = "0x400179B")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x400179C")]
		Count
	}

	[Token(Token = "0x2000437")]
	public struct VMPreset
	{
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1318908", Offset = "0x1318908", VA = "0x1318908")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x13189C8", Offset = "0x13189C8", VA = "0x13189C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1318F34", Offset = "0x1318F34", VA = "0x1318F34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1319194", Offset = "0x1319194", VA = "0x1319194")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x13192B8", Offset = "0x13192B8", VA = "0x13192B8")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x13194F8", Offset = "0x13194F8", VA = "0x13194F8")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x13195AC", Offset = "0x13195AC", VA = "0x13195AC")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1319AD0", Offset = "0x1319AD0", VA = "0x1319AD0")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1319AFC", Offset = "0x1319AFC", VA = "0x1319AFC")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x1319B98", Offset = "0x1319B98", VA = "0x1319B98")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1319C3C", Offset = "0x1319C3C", VA = "0x1319C3C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x13190F8", Offset = "0x13190F8", VA = "0x13190F8")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1318B80", Offset = "0x1318B80", VA = "0x1318B80")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1319D1C", Offset = "0x1319D1C", VA = "0x1319D1C")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x20000C6")]
public class TrackedDeviceDualShock4 : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform controller;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer illuminatedComponent;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xB93634", Offset = "0xB93634", VA = "0xB93634")]
	public TrackedDeviceDualShock4()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TrackedDeviceMoveControllers : MonoBehaviour
{
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform primaryController;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform secondaryController;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xB9363C", Offset = "0xB9363C", VA = "0xB9363C")]
	public TrackedDeviceMoveControllers()
	{
	}
}
[Token(Token = "0x20000C8")]
public class VRDeviceNames
{
	[Token(Token = "0x400051A")]
	public const string None = "None";

	[Token(Token = "0x400051B")]
	public const string Unknown = "Unknown";

	[Token(Token = "0x400051C")]
	public const string Oculus = "Oculus";

	[Token(Token = "0x400051D")]
	public const string PlayStationVR = "PlayStationVR";

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x122C444", Offset = "0x122C444", VA = "0x122C444")]
	public VRDeviceNames()
	{
	}
}
[Token(Token = "0x20000C9")]
public class VRManager : MonoBehaviour
{
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFCD4", Offset = "0x9DFCD4")]
	private sealed class <SetupVR>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRManager <>4__this;

		[Token(Token = "0x170002A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x122C680", Offset = "0x122C680", VA = "0x122C680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x122C6F0", Offset = "0x122C6F0", VA = "0x122C6F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x122C540", Offset = "0x122C540", VA = "0x122C540")]
		[DebuggerHidden]
		public <SetupVR>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x122C5DC", Offset = "0x122C5DC", VA = "0x122C5DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x122C5E0", Offset = "0x122C5E0", VA = "0x122C5E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x122C688", Offset = "0x122C688", VA = "0x122C688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float renderScale;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRManager _instance;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool systemPaused;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float previousTimeScale;

	[Token(Token = "0x1700003B")]
	public static VRManager instance
	{
		[Token(Token = "0x600047E")]
		[Address(RVA = "0x122C44C", Offset = "0x122C44C", VA = "0x122C44C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x122C49C", Offset = "0x122C49C", VA = "0x122C49C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x122C4A0", Offset = "0x122C4A0", VA = "0x122C4A0")]
	public void BeginVRSetup()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x122C4CC", Offset = "0x122C4CC", VA = "0x122C4CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9B4C", Offset = "0x9E9B4C")]
	private IEnumerator SetupVR()
	{
		return null;
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x122C56C", Offset = "0x122C56C", VA = "0x122C56C")]
	public void ShutdownVR()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x122C578", Offset = "0x122C578", VA = "0x122C578")]
	public void SetupHMDDevice()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x122C57C", Offset = "0x122C57C", VA = "0x122C57C")]
	public void ToggleHMDViewOnMonitor(bool showOnMonitor)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x122C590", Offset = "0x122C590", VA = "0x122C590")]
	public void ToggleHMDViewOnMonitor()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x122C5B0", Offset = "0x122C5B0", VA = "0x122C5B0")]
	public void ChangeRenderScale(float scale)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x122C5B8", Offset = "0x122C5B8", VA = "0x122C5B8")]
	public VRManager()
	{
	}
}
[Token(Token = "0x20000CA")]
public class VRPlaySpace : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform frustumTransform;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] frustumRenderers;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float safeDistance;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeSpeed;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color showColor;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color hideColor;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool showFrustum;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 camAcceleration;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 hmdPositionRaw;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion hmdRotationUnity;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion hmdRotationRaw;

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x122C6F8", Offset = "0x122C6F8", VA = "0x122C6F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x122C7E4", Offset = "0x122C7E4", VA = "0x122C7E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x122C7E8", Offset = "0x122C7E8", VA = "0x122C7E8")]
	private void UpdateFrustumTransform()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x122C7EC", Offset = "0x122C7EC", VA = "0x122C7EC")]
	private void UpdateFrustumDisplay()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x122C99C", Offset = "0x122C99C", VA = "0x122C99C")]
	public VRPlaySpace()
	{
	}
}
[Token(Token = "0x20000CB")]
public class VRPostReprojection : MonoBehaviour
{
	[Token(Token = "0x600048D")]
	[Address(RVA = "0x122C9B4", Offset = "0x122C9B4", VA = "0x122C9B4")]
	public VRPostReprojection()
	{
	}
}
[Token(Token = "0x20000CC")]
public class VRUIComplete : MonoBehaviour
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string message;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool disableColliderAfterUse;

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x122C9D0", Offset = "0x122C9D0", VA = "0x122C9D0")]
	public void Complete()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x122CAC4", Offset = "0x122CAC4", VA = "0x122CAC4")]
	public VRUIComplete()
	{
	}
}
[Token(Token = "0x20000CD")]
public class VRUIController : MonoBehaviour
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask uiLayerMask;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float sliderFillSpeed;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RaycastHit hit;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Slider currentSlider;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioSrc;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x122CB1C", Offset = "0x122CB1C", VA = "0x122CB1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x122CB74", Offset = "0x122CB74", VA = "0x122CB74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x122D240", Offset = "0x122D240", VA = "0x122D240")]
	public VRUIController()
	{
	}
}
[Token(Token = "0x20000CE")]
public class AchievementPanelSetUp : MonoBehaviour
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2848", Offset = "0x9E2848")]
	[SerializeField]
	private TextMeshProUGUI m_nameText;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_descriptionText;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_progressBar;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image m_sliderValue;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image m_image;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image m_iconBorder;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image m_mainBorder;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color32 m_unlockedBorderColour;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_unlockedObject;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xD5B274", Offset = "0xD5B274", VA = "0xD5B274")]
	public void UpdateAchievementStatus(AchievementsData.AchievementData achievementData)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xD5B584", Offset = "0xD5B584", VA = "0xD5B584")]
	private string SetUpTextForTranslation(string value)
	{
		return null;
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xD5B5E4", Offset = "0xD5B5E4", VA = "0xD5B5E4")]
	public AchievementPanelSetUp()
	{
	}
}
[Token(Token = "0x20000CF")]
public class AchievementScroll : MonoBehaviour
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2914", Offset = "0x9E2914")]
	public GameObject m_achievementCanvas;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_displayParent;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E294C", Offset = "0x9E294C")]
	public Animator m_animScroll;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator m_animParent;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2984", Offset = "0x9E2984")]
	public AudioSound m_soundDisplay;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSound m_soundOpen;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSound m_soundClose;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject m_activeDisplayObject;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_prefabToLoad;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_isDisplayed;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xD5B5EC", Offset = "0xD5B5EC", VA = "0xD5B5EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xD5B5F4", Offset = "0xD5B5F4", VA = "0xD5B5F4")]
	private void ShowInformation(GameObject displayPrefab)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xD5BB1C", Offset = "0xD5BB1C", VA = "0xD5BB1C")]
	public void CloseDisplay()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xD5B93C", Offset = "0xD5B93C", VA = "0xD5B93C")]
	private void Display()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xD5BF10", Offset = "0xD5BF10", VA = "0xD5BF10")]
	private void OpenScroll()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xD5BA30", Offset = "0xD5BA30", VA = "0xD5BA30")]
	private void CloseScroll()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xD5BFFC", Offset = "0xD5BFFC", VA = "0xD5BFFC")]
	private void Hide()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xD5C0EC", Offset = "0xD5C0EC", VA = "0xD5C0EC")]
	public void CallbackOpenScroll()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xD5C150", Offset = "0xD5C150", VA = "0xD5C150")]
	public void CallbackCloseScroll()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xD5C1B4", Offset = "0xD5C1B4", VA = "0xD5C1B4")]
	public void CallbackOpenIdle()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xD5C21C", Offset = "0xD5C21C", VA = "0xD5C21C")]
	public void CallbackClosedIdle()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xD5C330", Offset = "0xD5C330", VA = "0xD5C330")]
	public AchievementScroll()
	{
	}
}
[Token(Token = "0x20000D0")]
public class ArcadeGameMode : GameMode
{
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFCE4", Offset = "0x9DFCE4")]
	private sealed class <Start>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArcadeGameMode <>4__this;

		[Token(Token = "0x170002A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xD62B7C", Offset = "0xD62B7C", VA = "0xD62B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xD62BEC", Offset = "0xD62BEC", VA = "0xD62BEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xD5F3A4", Offset = "0xD5F3A4", VA = "0xD5F3A4")]
		[DebuggerHidden]
		public <Start>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xD62984", Offset = "0xD62984", VA = "0xD62984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xD62988", Offset = "0xD62988", VA = "0xD62988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xD62B84", Offset = "0xD62B84", VA = "0xD62B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFCF4", Offset = "0x9DFCF4")]
	private sealed class <ShowResults>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startDelay;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArcadeGameMode <>4__this;

		[Token(Token = "0x170002A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xD6290C", Offset = "0xD6290C", VA = "0xD6290C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xD6297C", Offset = "0xD6297C", VA = "0xD6297C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xD60780", Offset = "0xD60780", VA = "0xD60780")]
		[DebuggerHidden]
		public <ShowResults>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xD627A0", Offset = "0xD627A0", VA = "0xD627A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xD627A4", Offset = "0xD627A4", VA = "0xD627A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xD62914", Offset = "0xD62914", VA = "0xD62914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public uint m_arcadeModeGameDurationInSeconds;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioSound m_startSound;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Score m_scoreDisplay;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Score m_bestScoreDisplay;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Timer m_arcadeModeTimer;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private DoubleBananaBoard m_doubleBoard;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public WaveManager m_waveManager;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public InfoBoardController m_infoBoard;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public FreezeEffect m_freezeEffect;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject m_bonusScreenPrefab;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float m_sliceBombTimePenalty;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float m_startDelay;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public int m_maxBananasPerGame;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float m_minWaitForBanana;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float m_maxWaitForBanana;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float m_bananaChanceStart;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public BananaDisplay m_freezeSign;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public BananaDisplay m_frenzySign;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public BananaDisplay m_doubleSign;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected bool m_isFreezeBananaActive;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	protected bool m_isFrenzyBananaActive;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	protected bool m_isDoubleBananaActive;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	protected int m_doubleScoreValue;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float m_timeToNextPowerBanana;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected List<string> m_availablePowerBananasToSpawn;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float m_powerBananaEffectLength;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float m_currentPowerBananaTimer;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject m_buttons;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject m_buttonsTwoWorlds;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected bool m_wavesActive;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private AudioSourceObject m_freezeBlitzLoop;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public List<ParticleSystem> m_frenzyEmitters;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xD5EDFC", Offset = "0xD5EDFC", VA = "0xD5EDFC", Slot = "12")]
	public override bool IsFreeze()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xD5EE04", Offset = "0xD5EE04", VA = "0xD5EE04", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xD5F294", Offset = "0xD5F294", VA = "0xD5F294")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xD5F330", Offset = "0xD5F330", VA = "0xD5F330")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9BB0", Offset = "0x9E9BB0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xD5F3D0", Offset = "0xD5F3D0", VA = "0xD5F3D0")]
	private float PickNextBananaTime()
	{
		return default(float);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xD5F488", Offset = "0xD5F488", VA = "0xD5F488")]
	private void SpawnNewPowerBanana()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xD5F69C", Offset = "0xD5F69C", VA = "0xD5F69C")]
	private void OnStartTimerFinished()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xD5F6A8", Offset = "0xD5F6A8", VA = "0xD5F6A8")]
	private void ResetPowerBananas()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xD5FFDC", Offset = "0xD5FFDC", VA = "0xD5FFDC", Slot = "29")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xD60248", Offset = "0xD60248", VA = "0xD60248")]
	private void OnArcadeModeTimerFinished()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xD60254", Offset = "0xD60254", VA = "0xD60254", Slot = "9")]
	public override void StartGame()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xD603E8", Offset = "0xD603E8", VA = "0xD603E8", Slot = "13")]
	public override void UnloadMode()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xD60410", Offset = "0xD60410", VA = "0xD60410")]
	private void OnArcadeModeTimerAboutToFinished()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xD604B0", Offset = "0xD604B0", VA = "0xD604B0")]
	private bool CanStopWaves()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xD604D8", Offset = "0xD604D8", VA = "0xD604D8", Slot = "10")]
	public override void GameOver()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xD606E8", Offset = "0xD606E8", VA = "0xD606E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9C14", Offset = "0x9E9C14")]
	private IEnumerator ShowResults(float startDelay)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xD607AC", Offset = "0xD607AC", VA = "0xD607AC", Slot = "11")]
	public override void Finish()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xD6084C", Offset = "0xD6084C", VA = "0xD6084C", Slot = "30")]
	public override void CancelBlitz()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xD6087C", Offset = "0xD6087C", VA = "0xD6087C", Slot = "32")]
	protected override void OnSuccessfulCombo(List<Vector3> positions)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xD6107C", Offset = "0xD6107C", VA = "0xD6107C", Slot = "23")]
	public override bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xD61F60", Offset = "0xD61F60", VA = "0xD61F60", Slot = "24")]
	public override bool FruitSkewered(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xD620F8", Offset = "0xD620F8", VA = "0xD620F8", Slot = "26")]
	public override bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xD62458", Offset = "0xD62458", VA = "0xD62458", Slot = "28")]
	public override void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xD62594", Offset = "0xD62594", VA = "0xD62594", Slot = "15")]
	public override void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xD626B8", Offset = "0xD626B8", VA = "0xD626B8")]
	public ArcadeGameMode()
	{
	}
}
[Token(Token = "0x20000D1")]
public class AutoSlicer : MonoBehaviour
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object TargetPrefab;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xD663C4", Offset = "0xD663C4", VA = "0xD663C4")]
	private static Vector3 ArbitraryRightVector(Vector3 normal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xD664D0", Offset = "0xD664D0", VA = "0xD664D0")]
	private static Vector3 Project(Plane p, Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xD665C8", Offset = "0xD665C8", VA = "0xD665C8")]
	private static void SliceFruit(Fruit f)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xD669A4", Offset = "0xD669A4", VA = "0xD669A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xD66A80", Offset = "0xD66A80", VA = "0xD66A80")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xD66C48", Offset = "0xD66C48", VA = "0xD66C48")]
	public void CreatePreslicedFruit(PreslicedFruitCache fruitCache)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xD66B14", Offset = "0xD66B14", VA = "0xD66B14")]
	private void SliceAllFruit()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xD66DA4", Offset = "0xD66DA4", VA = "0xD66DA4")]
	public AutoSlicer()
	{
	}
}
[Token(Token = "0x20000D2")]
public class BananaDisplay : MonoBehaviour
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_anim;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_isShown;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xD66EF0", Offset = "0xD66EF0", VA = "0xD66EF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xD61C8C", Offset = "0xD61C8C", VA = "0xD61C8C")]
	public void ShowBananaBoard()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xD5FB44", Offset = "0xD5FB44", VA = "0xD5FB44")]
	public void HideBananaBoard()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xD66F60", Offset = "0xD66F60", VA = "0xD66F60")]
	public BananaDisplay()
	{
	}
}
[Token(Token = "0x20000D3")]
public class ADH
{
	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_angle;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m_depth;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_height;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xD5B090", Offset = "0xD5B090", VA = "0xD5B090")]
	public ADH()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xD5B0BC", Offset = "0xD5B0BC", VA = "0xD5B0BC")]
	public Vector3 ConvertToPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xD5B128", Offset = "0xD5B128", VA = "0xD5B128")]
	public Vector3 ConvertToPosition(Vector3 basePos)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000D4")]
public class BasketEnemy : MonoBehaviour
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ADH m_anglePosition;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody m_baseBody;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody m_followBody;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_cannonTip;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_acceleration;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_rotateSpeed;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_shotVelocity;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_explosionBonusPoints;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_explosionPFX;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string m_bonusPFX;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_shotFX;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_shotBombFX;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_maxSteamFX;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_maxSteamDelay;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSound m_shotWindUp;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSound m_shotRelease;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSound m_flinchSound;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSound m_collisionSound;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSound m_enemySpawnSound;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSound m_fruitDroppedSound;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject m_tempObject1;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject m_tempObject2;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected GameObject m_head;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected FlyingEnemyManager m_enemyManager;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Animator m_anim;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float m_fruitScale;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float m_bonusDistance;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float m_timeTillMove;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float m_moveSpeed;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float m_moveSpeedShooting;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float m_actualVel;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float m_idleMovementTimer;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float m_evasionForce;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool m_isMoving;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool m_isShooting;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_maxWidthShot;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_timerBetweenShots;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_timerShotDelay;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_timerSafetyMode;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float m_afterShootingDelay;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int m_shotsLeftInBurst;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int m_wavesTillNextBomb;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector2 m_minMaxWavesTillNextBomb;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected Vector2 m_minMaxFruitCount;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool m_isFirstShot;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 m_tagetFirstPos;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 m_tagetLastPos;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 m_targetShotUnitVec;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 m_minMaxShotsInBurst;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 m_minMaxShotDelay;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 m_minMaxSafetyMode;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float m_minShotDelayOnOverlap;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float m_overlapDistance;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int m_totalInBurst;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float m_firstShotExclusionPercentage;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private MultipleParticlePlays[] m_allSteamFX;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int m_currentWaveID;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float m_shotSpreadWidth;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float m_randCurveOffset;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float m_collisionPlayDelay;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float m_collisionPlayDelayTimer;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float m_disruptTime;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float m_disrupt;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float m_xSpeed;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float m_ySpeed;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float m_zSpeed;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float m_shotRecoil;

	[Token(Token = "0x1400000E")]
	public static event Action<BasketEnemy> OnBasketEnemyActivated
	{
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xD66F68", Offset = "0xD66F68", VA = "0xD66F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9C78", Offset = "0x9E9C78")]
		add
		{
		}
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xD67064", Offset = "0xD67064", VA = "0xD67064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9C88", Offset = "0x9E9C88")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event Action<BasketEnemy> OnBasketEnemyDeactivated
	{
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xD67160", Offset = "0xD67160", VA = "0xD67160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9C98", Offset = "0x9E9C98")]
		add
		{
		}
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xD67260", Offset = "0xD67260", VA = "0xD67260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9CA8", Offset = "0x9E9CA8")]
		remove
		{
		}
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xD67360", Offset = "0xD67360", VA = "0xD67360")]
	public void SetMoveSpeed(float speed)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xD67370", Offset = "0xD67370", VA = "0xD67370")]
	public void SetIdleTime(float time)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xD67378", Offset = "0xD67378", VA = "0xD67378")]
	public void SetFruitWavesCount(float min, float max)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xD67384", Offset = "0xD67384", VA = "0xD67384")]
	public void SetBombWavesDelay(float min, float max)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xD67390", Offset = "0xD67390", VA = "0xD67390")]
	public void SetSafetyModeDelay(float min, float max)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xD6739C", Offset = "0xD6739C", VA = "0xD6739C")]
	public void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xD67458", Offset = "0xD67458", VA = "0xD67458")]
	public void Initialise(FlyingEnemyManager man)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xD67A3C", Offset = "0xD67A3C", VA = "0xD67A3C")]
	private bool IsDebug()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xD67AB0", Offset = "0xD67AB0", VA = "0xD67AB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xD67B18", Offset = "0xD67B18", VA = "0xD67B18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xD67C34", Offset = "0xD67C34", VA = "0xD67C34")]
	private float GetYDirectionAngleTo(Vector3 from, Vector3 to)
	{
		return default(float);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xD67818", Offset = "0xD67818", VA = "0xD67818")]
	private void SnapToDestination()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xD67CC8", Offset = "0xD67CC8", VA = "0xD67CC8")]
	private void Move()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xD68124", Offset = "0xD68124", VA = "0xD68124")]
	private Vector3 GetEvasionOffset(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xD684C4", Offset = "0xD684C4", VA = "0xD684C4")]
	private void Idle()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xD6889C", Offset = "0xD6889C", VA = "0xD6889C")]
	public Vector3 GetShotVector(Vector3 from, Vector3 target, float v, float upThrust = 0f, bool local = false, bool useMin = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xD677E0", Offset = "0xD677E0", VA = "0xD677E0")]
	private void SetNextBomsWave()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xD68C34", Offset = "0xD68C34", VA = "0xD68C34")]
	public void WarmUpCannon()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xD68C40", Offset = "0xD68C40", VA = "0xD68C40")]
	public void CoolDownCannon()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xD68C48", Offset = "0xD68C48", VA = "0xD68C48")]
	private bool IsFriendlyInTheWayOfTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xD68FE0", Offset = "0xD68FE0", VA = "0xD68FE0")]
	public void StartShooting()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xD69A44", Offset = "0xD69A44", VA = "0xD69A44")]
	public void StopShooting()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xD69B58", Offset = "0xD69B58", VA = "0xD69B58")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xD6A854", Offset = "0xD6A854", VA = "0xD6A854")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xD699D0", Offset = "0xD699D0", VA = "0xD699D0")]
	private bool CanShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xD6A8DC", Offset = "0xD6A8DC", VA = "0xD6A8DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xD6AD1C", Offset = "0xD6AD1C", VA = "0xD6AD1C")]
	public void Explode(Vector3 position)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xD6B234", Offset = "0xD6B234", VA = "0xD6B234")]
	public void Disorientate()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xD6B3B8", Offset = "0xD6B3B8", VA = "0xD6B3B8")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xD6B52C", Offset = "0xD6B52C", VA = "0xD6B52C")]
	public BasketEnemy()
	{
	}
}
[Token(Token = "0x20000D5")]
public class BillBoard : MonoBehaviour
{
	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_playerHead;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xD6C34C", Offset = "0xD6C34C", VA = "0xD6C34C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xD6C4C8", Offset = "0xD6C4C8", VA = "0xD6C4C8")]
	public BillBoard()
	{
	}
}
[Token(Token = "0x20000D6")]
public class Blade : MonoBehaviour
{
	[Token(Token = "0x200043B")]
	public class SkeweredFruit
	{
		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Fruit fruit;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 offset;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rotationOffset;

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xD70C40", Offset = "0xD70C40", VA = "0xD70C40")]
		public SkeweredFruit()
		{
		}
	}

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_name;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XWeaponTrail bladeTrail;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer m_meshRender;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_materialBase;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_materialSelected;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_highlightedMesh;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minEdgeSliceSpeed;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float minTopSliceSpeed;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minSideSliceSpeed;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minPokeSpeed;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minBombSliceSpeed;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float minSkewerSliceSpeed;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float vibrateLength;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float oculusVibrateFreq;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float oculusVibrateAmp;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float viveVibrateFreq;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float viveVibrateAmp;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float bombBounceDelay;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float bounceDelay;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float bombBounceSFXVelocity;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float fruitBounceSFXVelocity;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float criticalDist;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject blitzEffect;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform m_controllerParent;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<BladeCollider> m_colliders;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject m_leftHandModel;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject m_rightHandModel;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m_lockPrefab;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Hand m_hand;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public BladeCollider m_physicalCollider;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public float m_length;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public float magnitude;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public Vector3 velocity;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public List<Vector3> positions;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A3C", Offset = "0x9E2A3C")]
	private bool <IsRightBlade>k__BackingField;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected Transform m_center;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected Transform m_tip;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform m_grip;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected float m_directionAngle;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	protected Vector3 m_direction;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 m_previousTipPos;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 m_tipCache;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float m_skewerSliceTimer;

	[Token(Token = "0x40005E0")]
	private const float skewerSpeed = 0.05f;

	[Token(Token = "0x40005E1")]
	private const int maxSkewered = 5;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 m_lastPos;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Quaternion m_lastRot;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E2A4C", Offset = "0x9E2A4C")]
	public float m_dragFactor;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected List<SkeweredFruit> m_skeweredFruit;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject m_handModel;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A68", Offset = "0x9E2A68")]
	private BladeConfig <Config>k__BackingField;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A78", Offset = "0x9E2A78")]
	private GameObject <Prefab>k__BackingField;

	[Token(Token = "0x1700003C")]
	public float DirectionAngle
	{
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xD6CD7C", Offset = "0xD6CD7C", VA = "0xD6CD7C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003D")]
	public Vector3 Direction
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xD6CD84", Offset = "0xD6CD84", VA = "0xD6CD84")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003E")]
	public bool IsRightBlade
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xD6CD94", Offset = "0xD6CD94", VA = "0xD6CD94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9CB8", Offset = "0x9E9CB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xD6CD9C", Offset = "0xD6CD9C", VA = "0xD6CD9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9CC8", Offset = "0x9E9CC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public BladeConfig Config
	{
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xD5EBA8", Offset = "0xD5EBA8", VA = "0xD5EBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9CD8", Offset = "0x9E9CD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xD6CDA8", Offset = "0xD6CDA8", VA = "0xD6CDA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9CE8", Offset = "0x9E9CE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public GameObject Prefab
	{
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xD6CDB0", Offset = "0xD6CDB0", VA = "0xD6CDB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9CF8", Offset = "0x9E9CF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xD6CDB8", Offset = "0xD6CDB8", VA = "0xD6CDB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9D08", Offset = "0x9E9D08")]
		set
		{
		}
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xD6CDC0", Offset = "0xD6CDC0", VA = "0xD6CDC0")]
	public Blade Duplicate()
	{
		return null;
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xD6CE98", Offset = "0xD6CE98", VA = "0xD6CE98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xD6D4DC", Offset = "0xD6D4DC", VA = "0xD6D4DC")]
	public void ShowLockIfLocked()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xD6D640", Offset = "0xD6D640", VA = "0xD6D640")]
	public void SelectBlade()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xD6D770", Offset = "0xD6D770", VA = "0xD6D770")]
	public void DeselectBlade()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xD6D89C", Offset = "0xD6D89C", VA = "0xD6D89C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xD6DA20", Offset = "0xD6DA20", VA = "0xD6DA20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xD6DBA4", Offset = "0xD6DBA4", VA = "0xD6DBA4")]
	public void TurnOffCollision(float time)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xD6DD10", Offset = "0xD6DD10", VA = "0xD6DD10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xD6DE68", Offset = "0xD6DE68", VA = "0xD6DE68")]
	public void ResetBlade()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xD6E04C", Offset = "0xD6E04C", VA = "0xD6E04C")]
	public void SetController(Hand _hand)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xD6EF40", Offset = "0xD6EF40", VA = "0xD6EF40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xD6E4E0", Offset = "0xD6E4E0", VA = "0xD6E4E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xD6F964", Offset = "0xD6F964", VA = "0xD6F964")]
	private bool CanSliceSkewered()
	{
		return default(bool);
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xD6F28C", Offset = "0xD6F28C", VA = "0xD6F28C")]
	private void UpdateSkewered()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xD6FC90", Offset = "0xD6FC90", VA = "0xD6FC90")]
	private void MoveSkewered()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xD70154", Offset = "0xD70154", VA = "0xD70154")]
	public void Vibrate(SliceObject sliceObject, Collider col)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xD704A8", Offset = "0xD704A8", VA = "0xD704A8")]
	public void Vibrate(HandVibration setting)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xD6FA08", Offset = "0xD6FA08", VA = "0xD6FA08")]
	public bool Slice(SliceObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xD70578", Offset = "0xD70578", VA = "0xD70578")]
	public void Skewer(SliceObject sliceObject)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xD70C48", Offset = "0xD70C48", VA = "0xD70C48")]
	public void Bounce(SliceObject obj)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xD70ED4", Offset = "0xD70ED4", VA = "0xD70ED4")]
	private void SpwanBombDeflectParticle(Vector3 bombPosition)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xD71098", Offset = "0xD71098", VA = "0xD71098")]
	public void SetSliceDelay(SliceObject obj)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xD6D42C", Offset = "0xD6D42C", VA = "0xD6D42C")]
	public void SetBlitzMode(bool on)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xD71168", Offset = "0xD71168", VA = "0xD71168")]
	public Transform GetCenter()
	{
		return null;
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xD6F25C", Offset = "0xD6F25C", VA = "0xD6F25C")]
	public Vector3 GetTip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xD71170", Offset = "0xD71170", VA = "0xD71170")]
	public Vector3 GetGrip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xD711A0", Offset = "0xD711A0", VA = "0xD711A0")]
	public Vector3 GetPreviousTip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xD711B0", Offset = "0xD711B0", VA = "0xD711B0")]
	public void SetPreviousTip(Vector3 pos)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xD711C0", Offset = "0xD711C0", VA = "0xD711C0")]
	public Blade()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D7")]
public class BladeAudio
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSound swipeAudioType;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve volumeCurve;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve pitchCurve;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minReplayInterval;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xD71354", Offset = "0xD71354", VA = "0xD71354")]
	public BladeAudio()
	{
	}
}
[Token(Token = "0x20000D8")]
public class BladeAudioPlayer : MonoBehaviour
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BladeAudio audio;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSourceObject currentSound;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Blade blade;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastSwingDir;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_replayDelay;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xD71364", Offset = "0xD71364", VA = "0xD71364")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xD713BC", Offset = "0xD713BC", VA = "0xD713BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xD713C4", Offset = "0xD713C4", VA = "0xD713C4")]
	public void PlaySound(BladeAudio audio)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xD719D8", Offset = "0xD719D8", VA = "0xD719D8")]
	public BladeAudioPlayer()
	{
	}
}
[Token(Token = "0x20000D9")]
public class BladeCollider : MonoBehaviour
{
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD04", Offset = "0x9DFD04")]
	private sealed class <VibrationTimer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BladeCollider <>4__this;

		[Token(Token = "0x170002AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xD72F58", Offset = "0xD72F58", VA = "0xD72F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xD72FC8", Offset = "0xD72FC8", VA = "0xD72FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xD72DD0", Offset = "0xD72DD0", VA = "0xD72DD0")]
		[DebuggerHidden]
		public <VibrationTimer>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xD72E8C", Offset = "0xD72E8C", VA = "0xD72E8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xD72E90", Offset = "0xD72E90", VA = "0xD72E90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xD72F60", Offset = "0xD72F60", VA = "0xD72F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Blade m_blade;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider m_collider;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody m_rigidbody;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 m_lastPos;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 m_lastForward;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_collisionEnableTimer;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_allowedToVibrate;

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xD71A50", Offset = "0xD71A50", VA = "0xD71A50")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xD71B34", Offset = "0xD71B34", VA = "0xD71B34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xD71C18", Offset = "0xD71C18", VA = "0xD71C18")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xD722F0", Offset = "0xD722F0", VA = "0xD722F0")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xD7246C", Offset = "0xD7246C", VA = "0xD7246C")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xD6DCD8", Offset = "0xD6DCD8", VA = "0xD6DCD8")]
	public void TurnOffCollision(float time)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xD71C60", Offset = "0xD71C60", VA = "0xD71C60")]
	private void EvalCollision(Collider col, bool stay = false, [Optional] Collision collision)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xD72478", Offset = "0xD72478", VA = "0xD72478")]
	private bool EvalSkewer(SliceObject sliceObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xD72780", Offset = "0xD72780", VA = "0xD72780")]
	private bool EvalSlice(SliceObject sliceObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xD72B8C", Offset = "0xD72B8C", VA = "0xD72B8C")]
	public Vector3 GetTip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xD72AB8", Offset = "0xD72AB8", VA = "0xD72AB8")]
	public Vector3 GetLastTip()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xD72CB4", Offset = "0xD72CB4", VA = "0xD72CB4")]
	private Vector3 Project(Vector3 point, Vector3 planeOrigin, Vector3 planeNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xD6D388", Offset = "0xD6D388", VA = "0xD6D388")]
	public bool IsPhysical()
	{
		return default(bool);
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xD723F8", Offset = "0xD723F8", VA = "0xD723F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9D18", Offset = "0x9E9D18")]
	private IEnumerator VibrationTimer()
	{
		return null;
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xD72DFC", Offset = "0xD72DFC", VA = "0xD72DFC")]
	public BladeCollider()
	{
	}
}
[Token(Token = "0x20000DA")]
public class BladeManager : MonoSingleton<BladeManager>
{
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD14", Offset = "0x9DFD14")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BladeManager <>4__this;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isRight;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action onComplete;

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xD73698", Offset = "0xD73698", VA = "0xD73698")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xD74108", Offset = "0xD74108", VA = "0xD74108")]
		internal void <ResetBlade>b__0(Blade blade)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xD7418C", Offset = "0xD7418C", VA = "0xD7418C")]
		internal void <ResetBlade>b__1(Blade blade)
		{
		}
	}

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSound m_bladeSwap;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSound m_bladeHighlight;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hand m_leftHand;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Hand m_rightHand;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Blade m_leftBlade;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Blade m_rightBlade;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_leftHandLoadProcess;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine m_rightHandLoadProcess;

	[Token(Token = "0x4000601")]
	private const string STORE_KEY_LEFT_BLADE_ID = "BladeLeftID";

	[Token(Token = "0x4000602")]
	private const string STORE_KEY_RIGHT_BLADE_ID = "BladeRightID";

	[Token(Token = "0x17000041")]
	public bool IsLoadingLeftHand
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0xD72FD0", Offset = "0xD72FD0", VA = "0xD72FD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000042")]
	public bool IsLoadingRightHand
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0xD72FE0", Offset = "0xD72FE0", VA = "0xD72FE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000043")]
	public Blade Left
	{
		[Token(Token = "0x600052A")]
		[Address(RVA = "0xD5EA98", Offset = "0xD5EA98", VA = "0xD5EA98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public Blade Right
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0xD5EBB0", Offset = "0xD5EBB0", VA = "0xD5EBB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xD72FF0", Offset = "0xD72FF0", VA = "0xD72FF0")]
	public void InitialiseHand(Hand hand)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xD7331C", Offset = "0xD7331C", VA = "0xD7331C")]
	private BladeConfig GetStoredBladeConfig(bool isRight)
	{
		return null;
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xD73578", Offset = "0xD73578", VA = "0xD73578")]
	public void StoreBladeConfig(bool isRight)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xD730CC", Offset = "0xD730CC", VA = "0xD730CC")]
	public void ResetBlade(bool isRight, [Optional] Action onComplete)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xD736A0", Offset = "0xD736A0", VA = "0xD736A0")]
	public void ChangeBlade(bool isRight, Blade blade, bool save)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xD73B9C", Offset = "0xD73B9C", VA = "0xD73B9C")]
	public void UnloadBlade(Hand hand)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xD73E14", Offset = "0xD73E14", VA = "0xD73E14")]
	public void SetBladeBlitz(bool on)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xD73F2C", Offset = "0xD73F2C", VA = "0xD73F2C")]
	public void ResetBlades()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xD74038", Offset = "0xD74038", VA = "0xD74038")]
	public BladeManager()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xD740A8", Offset = "0xD740A8", VA = "0xD740A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9D7C", Offset = "0x9E9D7C")]
	private void <InitialiseHand>b__18_0()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xD740D8", Offset = "0xD740D8", VA = "0xD740D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9D8C", Offset = "0x9E9D8C")]
	private void <InitialiseHand>b__18_1()
	{
	}
}
[Token(Token = "0x20000DB")]
public class BladeMenu : MonoBehaviour
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_newInventoryNotification;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_activated;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_newInventory;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xD74210", Offset = "0xD74210", VA = "0xD74210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xD74410", Offset = "0xD74410", VA = "0xD74410")]
	private void ActivateChildren(bool activate)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xD744E8", Offset = "0xD744E8", VA = "0xD744E8")]
	public BladeMenu()
	{
	}
}
[Token(Token = "0x20000DC")]
public class BladeMenuScroll : MonoBehaviour
{
	[Token(Token = "0x200043E")]
	public class BladeDetails
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_titleId;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_descId;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_unlockDescId;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_unlockProgress;

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xD74ADC", Offset = "0xD74ADC", VA = "0xD74ADC")]
		public BladeDetails()
		{
		}
	}

	[Token(Token = "0x200043F")]
	private enum State
	{
		[Token(Token = "0x40017C9")]
		Closed,
		[Token(Token = "0x40017CA")]
		Opening,
		[Token(Token = "0x40017CB")]
		Closing,
		[Token(Token = "0x40017CC")]
		Open
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_scrollAnimator;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI m_bladeTitleText;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI m_bladeDescText;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI m_bladeUnlockText;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI m_unlockTitleText;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_progresBarPrefab;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image m_progressFillImage;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_lockIcon;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State m_state;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BladeDetails m_currentBladeDetails;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BladeDetails m_nextBladeDetails;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xD744F8", Offset = "0xD744F8", VA = "0xD744F8")]
	public void ShowBladeDetails(BladeDetails details)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xD74500", Offset = "0xD74500", VA = "0xD74500")]
	private void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xD74504", Offset = "0xD74504", VA = "0xD74504")]
	private void Update()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xD74538", Offset = "0xD74538", VA = "0xD74538")]
	private void UpdateClosed()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xD7480C", Offset = "0xD7480C", VA = "0xD7480C")]
	private void UpdateOpening()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xD74964", Offset = "0xD74964", VA = "0xD74964")]
	private void UpdateClosing()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xD74A34", Offset = "0xD74A34", VA = "0xD74A34")]
	private void UpdateOpen()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xD74AD4", Offset = "0xD74AD4", VA = "0xD74AD4")]
	public BladeMenuScroll()
	{
	}
}
[Token(Token = "0x20000DD")]
public class BladeStandSelection
{
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Hand m_hand;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BladeStandPoint m_point;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xD75054", Offset = "0xD75054", VA = "0xD75054")]
	public void TrySetSelection(Hand h, BladeStandPoint p, bool force = false)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xD74D48", Offset = "0xD74D48", VA = "0xD74D48")]
	public void TryRemoveSelection(Hand h, BladeStandPoint p)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xD758F0", Offset = "0xD758F0", VA = "0xD758F0")]
	public Blade GetBlade()
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xD74B58", Offset = "0xD74B58", VA = "0xD74B58")]
	public bool IsCurrentPointSet(BladeStandPoint p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xD75874", Offset = "0xD75874", VA = "0xD75874")]
	public bool HandEquals(Hand h)
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xD7527C", Offset = "0xD7527C", VA = "0xD7527C")]
	public void InternalUpdate(BladeStand stand, float time, float deltaTime)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xD753E0", Offset = "0xD753E0", VA = "0xD753E0")]
	public void ForceClear()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xD75BA4", Offset = "0xD75BA4", VA = "0xD75BA4")]
	public BladeStandSelection()
	{
	}
}
[Token(Token = "0x20000DE")]
public class BladeStand : MonoBehaviour
{
	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD24", Offset = "0x9DFD24")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Blade blade;

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xD75BAC", Offset = "0xD75BAC", VA = "0xD75BAC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xD75BB4", Offset = "0xD75BB4", VA = "0xD75BB4")]
		internal void <Start>b__0(Blade result)
		{
		}
	}

	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD34", Offset = "0x9DFD34")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BladeStand <>4__this;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass12_0 <>8__1;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <bladePointIndex>5__2;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BladeConfig[] <>7__wrap2;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <>7__wrap3;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BladeStandPoint <bladePoint>5__5;

		[Token(Token = "0x170002AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xD76184", Offset = "0xD76184", VA = "0xD76184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xD761F4", Offset = "0xD761F4", VA = "0xD761F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xD75178", Offset = "0xD75178", VA = "0xD75178")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xD75BBC", Offset = "0xD75BBC", VA = "0xD75BBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xD75BC0", Offset = "0xD75BC0", VA = "0xD75BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xD7618C", Offset = "0xD7618C", VA = "0xD7618C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BladeMenuScroll m_scroll;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BladeStandPoint> m_bladePoints;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandVibration m_vibrationSettings;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_scaleTime;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_scaleMax;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_scaleOffset;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AchievementsData m_achievementsData;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BladeStandSelection m_left;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BladeStandSelection m_right;

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xD74AE4", Offset = "0xD74AE4", VA = "0xD74AE4")]
	public bool IsSelected(BladeStandPoint p)
	{
		return default(bool);
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xD74BD4", Offset = "0xD74BD4", VA = "0xD74BD4")]
	public void TryDeSelectBlade(Collider col, BladeStandPoint p)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xD74E10", Offset = "0xD74E10", VA = "0xD74E10")]
	public void TrySelectBlade(Collider col, BladeStandPoint p)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xD75104", Offset = "0xD75104", VA = "0xD75104")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9D9C", Offset = "0x9E9D9C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xD751A4", Offset = "0xD751A4", VA = "0xD751A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xD753C4", Offset = "0xD753C4", VA = "0xD753C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xD753E8", Offset = "0xD753E8", VA = "0xD753E8")]
	public void OnHandInput(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xD75984", Offset = "0xD75984", VA = "0xD75984")]
	private BladeMenuScroll.BladeDetails GetBladeDetails(Blade blade)
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xD75AE0", Offset = "0xD75AE0", VA = "0xD75AE0")]
	public BladeStand()
	{
	}
}
[Token(Token = "0x20000DF")]
public class BladeStandPoint : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Blade m_blade;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BladeStand m_stand;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_lock;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_newSign;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_isSelected;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_nextStateCheckTimer;

	[Token(Token = "0x4000622")]
	private const float m_stateCheckDelay = 5f;

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xD761FC", Offset = "0xD761FC", VA = "0xD761FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xD76254", Offset = "0xD76254", VA = "0xD76254")]
	private void Update()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xD76388", Offset = "0xD76388", VA = "0xD76388")]
	private void UpdateBladeState()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xD76570", Offset = "0xD76570", VA = "0xD76570")]
	public Blade GetBlade()
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xD76578", Offset = "0xD76578", VA = "0xD76578")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xD76674", Offset = "0xD76674", VA = "0xD76674")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xD76770", Offset = "0xD76770", VA = "0xD76770")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xD7686C", Offset = "0xD7686C", VA = "0xD7686C")]
	public BladeStandPoint()
	{
	}
}
[Token(Token = "0x20000E0")]
public class BlitzComboManager : MonoSingleton<BlitzComboManager>
{
	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_comboCount;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_timer;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_blitzResetTime;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int fullVolLevelLight;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int fullVolLevelHeavy;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameMode m_gameMode;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_fadeTime;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_comboEffectOffset;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float volLight;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float volHeavy;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSourceObject m_lightSound;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSourceObject m_heavySound;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_fadingOut;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xD76874", Offset = "0xD76874", VA = "0xD76874")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xD76960", Offset = "0xD76960", VA = "0xD76960")]
	private void Update()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xD60B04", Offset = "0xD60B04", VA = "0xD60B04")]
	public void AddCombo()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xD623D4", Offset = "0xD623D4", VA = "0xD623D4")]
	public void ResetBlitz()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xD76AB0", Offset = "0xD76AB0", VA = "0xD76AB0")]
	private void EnableBlitzMode()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xD76CA4", Offset = "0xD76CA4", VA = "0xD76CA4")]
	private void DisableBlitzMode()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xD76DFC", Offset = "0xD76DFC", VA = "0xD76DFC")]
	public BlitzComboManager()
	{
	}
}
[Token(Token = "0x20000E1")]
public class Bomb : SliceObject
{
	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_ExplosionPrefabName;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int penaltyTime;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_maxFlickVelocity;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AnimationCurve colliderSize;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2A98", Offset = "0x9E2A98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2A98", Offset = "0x9E2A98")]
	public AnimationCurve m_slicePlaneDistanceConfidenceCurve;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationCurve m_collinearConfidenceCurve;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AnimationCurve m_contactSeparationConfidenceCurve;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AnimationCurve m_bladeVelocityConfidenceCurve;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AnimationCurve m_bladeAngularVelocityConfidenceCurve;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2AF8", Offset = "0x9E2AF8")]
	public float explosionForce;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float explosionRadius;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject m_fusePFX;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected float m_explodeDistanceFromPlayer;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private SphereCollider[] m_sphereColliders;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool m_explodable;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool m_hasExploded;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float m_cleanupTimer;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int m_basketLayer;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool m_deflect;

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xD76E8C", Offset = "0xD76E8C", VA = "0xD76E8C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xD76FB4", Offset = "0xD76FB4", VA = "0xD76FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xD77024", Offset = "0xD77024", VA = "0xD77024", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xD77124", Offset = "0xD77124", VA = "0xD77124", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xD774C8", Offset = "0xD774C8", VA = "0xD774C8")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xD780E8", Offset = "0xD780E8", VA = "0xD780E8")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xD78620", Offset = "0xD78620", VA = "0xD78620")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xD623B4", Offset = "0xD623B4", VA = "0xD623B4")]
	public bool CanExplode()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xD77EE0", Offset = "0xD77EE0", VA = "0xD77EE0")]
	private void DisableFuse()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xD77B94", Offset = "0xD77B94", VA = "0xD77B94")]
	public bool Explode(ObjectPooler pool)
	{
		return default(bool);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xD78A1C", Offset = "0xD78A1C", VA = "0xD78A1C", Slot = "10")]
	public override bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xD78B88", Offset = "0xD78B88", VA = "0xD78B88", Slot = "9")]
	public override void Recycle()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xD72AAC", Offset = "0xD72AAC", VA = "0xD72AAC")]
	public void Deflect()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xD78BF4", Offset = "0xD78BF4", VA = "0xD78BF4")]
	public Bomb()
	{
	}
}
[Token(Token = "0x20000E2")]
public class BombRepel : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bombRepelForce;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xD78C34", Offset = "0xD78C34", VA = "0xD78C34")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xD78E80", Offset = "0xD78E80", VA = "0xD78E80")]
	public BombRepel()
	{
	}
}
[Token(Token = "0x20000E3")]
public class Bonus : MonoBehaviour
{
	[Token(Token = "0x6000572")]
	[Address(RVA = "0xD78E90", Offset = "0xD78E90", VA = "0xD78E90", Slot = "4")]
	public virtual void ResetData()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xD78E94", Offset = "0xD78E94", VA = "0xD78E94", Slot = "5")]
	public virtual void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xD78E98", Offset = "0xD78E98", VA = "0xD78E98", Slot = "6")]
	public virtual string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xD78EE0", Offset = "0xD78EE0", VA = "0xD78EE0", Slot = "7")]
	public virtual int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xD78EE8", Offset = "0xD78EE8", VA = "0xD78EE8", Slot = "8")]
	public virtual Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xD78EF0", Offset = "0xD78EF0", VA = "0xD78EF0")]
	public Bonus()
	{
	}
}
[Token(Token = "0x20000E4")]
public class Bonus_BananaFrenzy : Bonus
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_iconSingleSprite;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite m_iconMultipleSprite;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_frenzyCount;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_freezeCount;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_scoreX2Count;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xC55AE0", Offset = "0xC55AE0", VA = "0xC55AE0", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xC55AEC", Offset = "0xC55AEC", VA = "0xC55AEC", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xC55B9C", Offset = "0xC55B9C", VA = "0xC55B9C")]
	private void SlicedFruit(string type)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xC55C8C", Offset = "0xC55C8C", VA = "0xC55C8C", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xC55D84", Offset = "0xC55D84", VA = "0xC55D84", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xC55E18", Offset = "0xC55E18", VA = "0xC55E18", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xC55E50", Offset = "0xC55E50", VA = "0xC55E50")]
	public Bonus_BananaFrenzy()
	{
	}
}
[Token(Token = "0x20000E5")]
public class Bonus_BestCombo : Bonus
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_iconCombo;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_highestCombo;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xC55E58", Offset = "0xC55E58", VA = "0xC55E58", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xC55E60", Offset = "0xC55E60", VA = "0xC55E60", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xC55F10", Offset = "0xC55F10", VA = "0xC55F10")]
	public void ComboComplete(int amount)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xC55F94", Offset = "0xC55F94", VA = "0xC55F94", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xC5600C", Offset = "0xC5600C", VA = "0xC5600C", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xC56038", Offset = "0xC56038", VA = "0xC56038", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xC56040", Offset = "0xC56040", VA = "0xC56040")]
	public Bonus_BestCombo()
	{
	}
}
[Token(Token = "0x20000E6")]
public class Bonus_BombsHit : Bonus
{
	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_iconBomb;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_bombsHit;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xC56048", Offset = "0xC56048", VA = "0xC56048", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xC56050", Offset = "0xC56050", VA = "0xC56050", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xC560F0", Offset = "0xC560F0", VA = "0xC560F0")]
	public void SlicedBomb()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xC56100", Offset = "0xC56100", VA = "0xC56100", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xC56170", Offset = "0xC56170", VA = "0xC56170", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xC56190", Offset = "0xC56190", VA = "0xC56190", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xC56198", Offset = "0xC56198", VA = "0xC56198")]
	public Bonus_BombsHit()
	{
	}
}
[Token(Token = "0x20000E7")]
public class Bonus_ComboBonus : Bonus
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_iconCombo;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_numberOfCombos;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xC561A0", Offset = "0xC561A0", VA = "0xC561A0", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xC561A8", Offset = "0xC561A8", VA = "0xC561A8", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xC56258", Offset = "0xC56258", VA = "0xC56258")]
	public void ComboComplete(int amount)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xC56268", Offset = "0xC56268", VA = "0xC56268", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xC56318", Offset = "0xC56318", VA = "0xC56318", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xC5636C", Offset = "0xC5636C", VA = "0xC5636C", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xC56374", Offset = "0xC56374", VA = "0xC56374")]
	public Bonus_ComboBonus()
	{
	}
}
[Token(Token = "0x20000E8")]
public class Bonus_Default : Bonus
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_icon;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_title;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_points;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xC5637C", Offset = "0xC5637C", VA = "0xC5637C", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xC56384", Offset = "0xC56384", VA = "0xC56384", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xC5638C", Offset = "0xC5638C", VA = "0xC5638C", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xC56394", Offset = "0xC56394", VA = "0xC56394")]
	public Bonus_Default()
	{
	}
}
[Token(Token = "0x20000E9")]
public class Bonus_FinalScore : Bonus
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_icon5;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite m_icon10;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite m_icon100;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite m_icon111;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_finalScore;

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xC5639C", Offset = "0xC5639C", VA = "0xC5639C", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xC563A4", Offset = "0xC563A4", VA = "0xC563A4", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xC56454", Offset = "0xC56454", VA = "0xC56454")]
	private void FinalScore(int amount)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xC564D8", Offset = "0xC564D8", VA = "0xC564D8", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xC565F8", Offset = "0xC565F8", VA = "0xC565F8", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xC566BC", Offset = "0xC566BC", VA = "0xC566BC", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xC5676C", Offset = "0xC5676C", VA = "0xC5676C")]
	public Bonus_FinalScore()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Bonus_FirstAndLast : Bonus
{
	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_iconFirstLast;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_firstFruit;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_lastFruit;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xC56774", Offset = "0xC56774", VA = "0xC56774", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xC567C4", Offset = "0xC567C4", VA = "0xC567C4", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xC56874", Offset = "0xC56874", VA = "0xC56874")]
	public void SlicedFruit(string type)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xC568E8", Offset = "0xC568E8", VA = "0xC568E8", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xC56958", Offset = "0xC56958", VA = "0xC56958", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xC5698C", Offset = "0xC5698C", VA = "0xC5698C", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xC56994", Offset = "0xC56994", VA = "0xC56994")]
	public Bonus_FirstAndLast()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Bonus_FruitDropped : Bonus
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_iconNoFruitDropped;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_fruitDropped;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xC569EC", Offset = "0xC569EC", VA = "0xC569EC", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xC569F4", Offset = "0xC569F4", VA = "0xC569F4", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xC56A94", Offset = "0xC56A94", VA = "0xC56A94")]
	public void FruitMissed()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xC56AA0", Offset = "0xC56AA0", VA = "0xC56AA0", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xC56B00", Offset = "0xC56B00", VA = "0xC56B00", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xC56B14", Offset = "0xC56B14", VA = "0xC56B14", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xC56B1C", Offset = "0xC56B1C", VA = "0xC56B1C")]
	public Bonus_FruitDropped()
	{
	}
}
[Token(Token = "0x20000EC")]
public class Bonus_OneTypeFruit : Bonus
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite m_iconFirstLast;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_firstFruit;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_onlyOne;

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xC56B24", Offset = "0xC56B24", VA = "0xC56B24", Slot = "4")]
	public override void ResetData()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xC56B74", Offset = "0xC56B74", VA = "0xC56B74", Slot = "5")]
	public override void SetUpListeners(BonusManager manager)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xC56C24", Offset = "0xC56C24", VA = "0xC56C24")]
	public void SlicedFruit(string type)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xC56CAC", Offset = "0xC56CAC", VA = "0xC56CAC", Slot = "6")]
	public override string GetBonusTitle()
	{
		return null;
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xC56D40", Offset = "0xC56D40", VA = "0xC56D40", Slot = "7")]
	public override int GetBonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xC56DC8", Offset = "0xC56DC8", VA = "0xC56DC8", Slot = "8")]
	public override Sprite GetBonusIcon()
	{
		return null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xC56DD0", Offset = "0xC56DD0", VA = "0xC56DD0")]
	public Bonus_OneTypeFruit()
	{
	}
}
[Token(Token = "0x20000ED")]
public class BonusDisplay : MonoBehaviour
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image m_icon;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI m_titleText;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI m_pointsText;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xD78F98", Offset = "0xD78F98", VA = "0xD78F98")]
	public void SetData(Bonus bonus)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xD792A0", Offset = "0xD792A0", VA = "0xD792A0")]
	public BonusDisplay()
	{
	}
}
[Token(Token = "0x20000EE")]
public class BonusCallbackInt : UnityEvent<int>
{
	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xD78EF8", Offset = "0xD78EF8", VA = "0xD78EF8")]
	public BonusCallbackInt()
	{
	}
}
[Token(Token = "0x20000EF")]
public class BonusCallbackString : UnityEvent<string>
{
	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xD78F48", Offset = "0xD78F48", VA = "0xD78F48")]
	public BonusCallbackString()
	{
	}
}
[Token(Token = "0x20000F0")]
public class BonusManager : MonoSingleton<BonusManager>
{
	[Serializable]
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD44", Offset = "0x9DFD44")]
	private sealed class <>c
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Bonus> <>9__9_0;

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xC55638", Offset = "0xC55638", VA = "0xC55638")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xC55640", Offset = "0xC55640", VA = "0xC55640")]
		internal int <GetTop3Bonuses>b__9_0(Bonus a, Bonus b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Bonus[] m_allBonuses;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_debugLog;

	[NonSerialized]
	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BonusCallbackInt m_eventFinalScore;

	[NonSerialized]
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BonusCallbackInt m_eventComboComplete;

	[NonSerialized]
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BonusCallbackString m_eventSlicedFruit;

	[NonSerialized]
	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent m_eventFruitMissed;

	[NonSerialized]
	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent m_eventSlicedBomb;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xC549A0", Offset = "0xC549A0", VA = "0xC549A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xC54A84", Offset = "0xC54A84", VA = "0xC54A84")]
	public void Reset()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xC54CB4", Offset = "0xC54CB4", VA = "0xC54CB4")]
	public Bonus[] GetTop3Bonuses()
	{
		return null;
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xC55214", Offset = "0xC55214", VA = "0xC55214")]
	public void FinalScore(int score)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xC55284", Offset = "0xC55284", VA = "0xC55284")]
	public void ComboComplete(int amount)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xC552F4", Offset = "0xC552F4", VA = "0xC552F4")]
	public void SlicedFruit(string type)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xC55364", Offset = "0xC55364", VA = "0xC55364")]
	public void FruitMissed()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xC55394", Offset = "0xC55394", VA = "0xC55394")]
	public void SlicedBomb()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xC54B14", Offset = "0xC54B14", VA = "0xC54B14")]
	public void ShuffleBonuses()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xC553C4", Offset = "0xC553C4", VA = "0xC553C4")]
	public int GetTop3BonusPoints()
	{
		return default(int);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xC554AC", Offset = "0xC554AC", VA = "0xC554AC")]
	public BonusManager()
	{
	}
}
[Token(Token = "0x20000F1")]
public class BonusUI : MonoBehaviour
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_anim;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BonusDisplay m_bonus1;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BonusDisplay m_bonus2;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BonusDisplay m_bonus3;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI m_testTotalPoints;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_totalPoints;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xC556B8", Offset = "0xC556B8", VA = "0xC556B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xC55728", Offset = "0xC55728", VA = "0xC55728")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xC559A0", Offset = "0xC559A0", VA = "0xC559A0")]
	public void ScrollOpen()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xC55A04", Offset = "0xC55A04", VA = "0xC55A04")]
	public void ApplyTotalToScore()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xC55AD8", Offset = "0xC55AD8", VA = "0xC55AD8")]
	public BonusUI()
	{
	}
}
[Token(Token = "0x20000F2")]
public class CannonSpawnFX : MonoBehaviour
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 effectOffset;

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xC5A548", Offset = "0xC5A548", VA = "0xC5A548")]
	public void SpawnFX(float delta, bool enableChild = false)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xC5AB90", Offset = "0xC5AB90", VA = "0xC5AB90")]
	public CannonSpawnFX()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ClassicGameMode : GameMode
{
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD54", Offset = "0x9DFD54")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClassicGameMode <>4__this;

		[Token(Token = "0x170002AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xC5E0B0", Offset = "0xC5E0B0", VA = "0xC5E0B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xC5E120", Offset = "0xC5E120", VA = "0xC5E120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xC5D720", Offset = "0xC5D720", VA = "0xC5D720")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xC5DFF8", Offset = "0xC5DFF8", VA = "0xC5DFF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xC5DFFC", Offset = "0xC5DFFC", VA = "0xC5DFFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xC5E0B8", Offset = "0xC5E0B8", VA = "0xC5E0B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000670")]
	private const int LifeCount = 3;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int m_lives;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Life[] m_livesHud;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public WaveManager m_waveManager;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public InfoBoardController m_infoBoard;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public string droppedFruitPFX;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject m_buttons;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xC5D35C", Offset = "0xC5D35C", VA = "0xC5D35C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xC5D610", Offset = "0xC5D610", VA = "0xC5D610")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xC5D6AC", Offset = "0xC5D6AC", VA = "0xC5D6AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9E00", Offset = "0x9E9E00")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xC5D74C", Offset = "0xC5D74C", VA = "0xC5D74C")]
	private void OnStartTimerFinished()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xC5D758", Offset = "0xC5D758", VA = "0xC5D758", Slot = "29")]
	public override void Update()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xC5D784", Offset = "0xC5D784", VA = "0xC5D784", Slot = "9")]
	public override void StartGame()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xC5D7D4", Offset = "0xC5D7D4", VA = "0xC5D7D4", Slot = "10")]
	public override void GameOver()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xC5D8A0", Offset = "0xC5D8A0", VA = "0xC5D8A0", Slot = "11")]
	public override void Finish()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xC5D940", Offset = "0xC5D940", VA = "0xC5D940", Slot = "23")]
	public override bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xC5D9D4", Offset = "0xC5D9D4", VA = "0xC5D9D4", Slot = "15")]
	public override void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xC5DB70", Offset = "0xC5DB70", VA = "0xC5DB70", Slot = "26")]
	public override bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xC5DC04", Offset = "0xC5DC04", VA = "0xC5DC04", Slot = "28")]
	public override void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xC5DF88", Offset = "0xC5DF88", VA = "0xC5DF88")]
	public ClassicGameMode()
	{
	}
}
[Token(Token = "0x20000F4")]
public class DestroyAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DestroyAfter;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xC67974", Offset = "0xC67974", VA = "0xC67974")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xC67A00", Offset = "0xC67A00", VA = "0xC67A00")]
	public DestroyAfterDelay()
	{
	}
}
[Token(Token = "0x20000F5")]
public class DisableAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DisableAfter;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xC67A10", Offset = "0xC67A10", VA = "0xC67A10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xC67A1C", Offset = "0xC67A1C", VA = "0xC67A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xC67A90", Offset = "0xC67A90", VA = "0xC67A90")]
	public DisableAfterDelay()
	{
	}
}
[Token(Token = "0x20000F6")]
public class DoubleBananaBoard : MonoBehaviour
{
	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Score score;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particles;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float skyBoxExposure;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float startExposure;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xC67AA0", Offset = "0xC67AA0", VA = "0xC67AA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xC67B6C", Offset = "0xC67B6C", VA = "0xC67B6C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xC67C38", Offset = "0xC67C38", VA = "0xC67C38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xC67D30", Offset = "0xC67D30", VA = "0xC67D30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xC67DFC", Offset = "0xC67DFC", VA = "0xC67DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xC6808C", Offset = "0xC6808C", VA = "0xC6808C")]
	public void AddScore(int amt)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xC68168", Offset = "0xC68168", VA = "0xC68168")]
	public void SetScore(int amt, bool snap = false)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xC67C3C", Offset = "0xC67C3C", VA = "0xC67C3C")]
	public void Show()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xC67F4C", Offset = "0xC67F4C", VA = "0xC67F4C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xC68240", Offset = "0xC68240", VA = "0xC68240")]
	public DoubleBananaBoard()
	{
	}
}
[Token(Token = "0x20000F7")]
public class FestiveCounter : MonoBehaviour
{
	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int countBy;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xC69D50", Offset = "0xC69D50", VA = "0xC69D50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xC69F18", Offset = "0xC69F18", VA = "0xC69F18")]
	public FestiveCounter()
	{
	}
}
[Token(Token = "0x20000F8")]
public class FestiveEvent : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string eventName;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_sceneDeco;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_menuPrefab;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_classicPrefab;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_arcadePrefab;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_zenPrefab;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_survivalPrefab;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_bladesMenuPrefab;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ObjectPooler m_fruitPooler;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_basketEnemyPrefab;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioType m_startSound;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public StatsId m_eventStat;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_achievementName;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject m_currentDeco;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string m_sound;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int m_eventEndTime;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int m_timeOffset;

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xC69F28", Offset = "0xC69F28", VA = "0xC69F28")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xC6A05C", Offset = "0xC6A05C", VA = "0xC6A05C")]
	public void GiveAchievement()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xC6A120", Offset = "0xC6A120", VA = "0xC6A120")]
	public void OnLeaderboardRecieved(Leaderboard lBoard, bool success, List<LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xC6A330", Offset = "0xC6A330", VA = "0xC6A330")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xC6A334", Offset = "0xC6A334", VA = "0xC6A334")]
	private int GetCurrentTime()
	{
		return default(int);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xC6A3EC", Offset = "0xC6A3EC", VA = "0xC6A3EC")]
	public int GetDaysRemaining()
	{
		return default(int);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xC6A508", Offset = "0xC6A508", VA = "0xC6A508")]
	private void OnDRMTimeResponse(bool success, WWW request)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xC6A598", Offset = "0xC6A598", VA = "0xC6A598")]
	public string GetMenuMusic()
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xC6A480", Offset = "0xC6A480", VA = "0xC6A480")]
	public int GetEventTimeRemaining()
	{
		return default(int);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xC6A5A0", Offset = "0xC6A5A0", VA = "0xC6A5A0")]
	public string GetEventTimeRemainingString()
	{
		return null;
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xC69E64", Offset = "0xC69E64", VA = "0xC69E64")]
	public void Increment(int count)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xC6A838", Offset = "0xC6A838", VA = "0xC6A838")]
	public void SubmitEventScore()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xC6A9D4", Offset = "0xC6A9D4", VA = "0xC6A9D4", Slot = "4")]
	public virtual void OnScoreSubmitted(Leaderboard leaderboard, bool success)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xC6A9D8", Offset = "0xC6A9D8", VA = "0xC6A9D8")]
	public void SetupScene(Halfbrick.FNVR.SceneManagement.SceneManager.Scene scene)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xC6ABC4", Offset = "0xC6ABC4", VA = "0xC6ABC4")]
	public FestiveEvent()
	{
	}
}
[Token(Token = "0x20000F9")]
public class FestiveEventTimer : MonoBehaviour
{
	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string translation;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string translationDay;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string translationDays;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshProUGUI m_text;

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xC6AC30", Offset = "0xC6AC30", VA = "0xC6AC30")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xC6AC88", Offset = "0xC6AC88", VA = "0xC6AC88")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xC6B10C", Offset = "0xC6B10C", VA = "0xC6B10C")]
	public FestiveEventTimer()
	{
	}
}
[Token(Token = "0x20000FA")]
public class FlyingEnemyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000444")]
	public class EnemyCount
	{
		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int startScore;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int enemyCount;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int enemyExtents;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int enemySpread;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 m_minMaxFruitCount;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 m_minMaxBombCount;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 m_minMaxShotSafetyTime;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 m_minMaxWaitTime;

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xC6C8F8", Offset = "0xC6C8F8", VA = "0xC6C8F8")]
		public EnemyCount()
		{
		}
	}

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_enemyPrefab;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BasketEnemy> m_allEnemies;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 m_minMaxAngle;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 m_minMaxDepth;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 m_minMaxHeight;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 m_minMaxMoveSpeed;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_maxEnemyArc;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_exclusionColParent;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BoxCollider[] m_allExclusionCols;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Queue<int> m_destroyedEnemyScores;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_currentEnemyIndex;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int m_rebirthScoreAmount;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_timeBetweenShots;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected float m_timeSinceLastShot;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected int m_score;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<EnemyCount> m_enemyCount;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_medianAngle;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_medianAngleSpeed;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_medianAngleTimer;

	[Token(Token = "0x17000045")]
	public int Score
	{
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xC6B184", Offset = "0xC6B184", VA = "0xC6B184")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xC6B18C", Offset = "0xC6B18C", VA = "0xC6B18C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xC6B4A8", Offset = "0xC6B4A8", VA = "0xC6B4A8")]
	public bool CanShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xC6B4B8", Offset = "0xC6B4B8", VA = "0xC6B4B8")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xC6B4C0", Offset = "0xC6B4C0", VA = "0xC6B4C0")]
	private bool IsPointInExclusionZone(Vector3 pos, BasketEnemy enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xC6B850", Offset = "0xC6B850", VA = "0xC6B850")]
	public void SetNewRandomPosition(BasketEnemy curEnemy)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xC6BBE0", Offset = "0xC6BBE0", VA = "0xC6BBE0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xC6BD4C", Offset = "0xC6BD4C", VA = "0xC6BD4C")]
	public void AddEnemy()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xC6C00C", Offset = "0xC6C00C", VA = "0xC6C00C")]
	public void DestroyEnemy(BasketEnemy enemy)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xC6C164", Offset = "0xC6C164", VA = "0xC6C164")]
	private void Update()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xC6C398", Offset = "0xC6C398", VA = "0xC6C398")]
	public void OnScoreChanged(int score)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xC6B27C", Offset = "0xC6B27C", VA = "0xC6B27C")]
	public void SetEnemyCountData(EnemyCount en)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xC6C530", Offset = "0xC6C530", VA = "0xC6C530")]
	public void OnGameover()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xC6C774", Offset = "0xC6C774", VA = "0xC6C774")]
	public FlyingEnemyManager()
	{
	}
}
[Token(Token = "0x20000FB")]
public class FoliageAnimation : MonoBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh mesh;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] verts_ref;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] verts;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] verts_time;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] verts_speed;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float time_offset;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 globalSway;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 vertSway;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float globalSwayTime;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float vertSwayTime;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xC6C9CC", Offset = "0xC6C9CC", VA = "0xC6C9CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xC6CBF8", Offset = "0xC6CBF8", VA = "0xC6CBF8")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xC6CC04", Offset = "0xC6CC04", VA = "0xC6CC04")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xC6CC10", Offset = "0xC6CC10", VA = "0xC6CC10")]
	private void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xC6CEC8", Offset = "0xC6CEC8", VA = "0xC6CEC8")]
	public FoliageAnimation()
	{
	}
}
[Token(Token = "0x20000FC")]
public class FovIndicators : MonoBehaviour
{
	[Token(Token = "0x2000445")]
	private enum IndicatorMode
	{
		[Token(Token = "0x40017E4")]
		Off,
		[Token(Token = "0x40017E5")]
		ShowOnlyBombs,
		[Token(Token = "0x40017E6")]
		ShowBombsAndFruits,
		[Token(Token = "0x40017E7")]
		ShowBombsAndPowerFruit,
		[Token(Token = "0x40017E8")]
		ShowOnlyEnemyBasket
	}

	[Token(Token = "0x2000446")]
	private enum TypeOfObjectBeingTracked
	{
		[Token(Token = "0x40017EA")]
		Bomb,
		[Token(Token = "0x40017EB")]
		Fruit,
		[Token(Token = "0x40017EC")]
		PowerFruit,
		[Token(Token = "0x40017ED")]
		BasketEnemy
	}

	[Token(Token = "0x2000447")]
	private enum PlayerIndicatorPreference
	{
		[Token(Token = "0x40017EF")]
		Default,
		[Token(Token = "0x40017F0")]
		ShowAll,
		[Token(Token = "0x40017F1")]
		Off
	}

	[Token(Token = "0x2000448")]
	private struct ObjectInfo
	{
		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform m_transform;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TypeOfObjectBeingTracked m_objectType;

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xA8A8F0", Offset = "0xA8A8F0", VA = "0xA8A8F0")]
		public ObjectInfo(Transform transform, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
		{
		}
	}

	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD64", Offset = "0x9DFD64")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SliceObject sliceObject;

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xC6E3F8", Offset = "0xC6E3F8", VA = "0xC6E3F8")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xC6FBDC", Offset = "0xC6FBDC", VA = "0xC6FBDC")]
		internal bool <RemoveSlicedObjectFromList>b__0(ObjectInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD74", Offset = "0x9DFD74")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BasketEnemy basketEnemy;

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xC6E594", Offset = "0xC6E594", VA = "0xC6E594")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xC6FC78", Offset = "0xC6FC78", VA = "0xC6FC78")]
		internal bool <RemoveBasketEnemyToList>b__0(ObjectInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2B30", Offset = "0x9E2B30")]
	[SerializeField]
	private IndicatorMode m_indicatorMode;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2B7C", Offset = "0x9E2B7C")]
	[SerializeField]
	private GameObject m_indicator;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2BC8", Offset = "0x9E2BC8")]
	[SerializeField]
	private int m_amountOfIndicatorToCreate;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2C14", Offset = "0x9E2C14")]
	[SerializeField]
	private RectTransform m_parentOfIndicator;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve m_indicatorScaling;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2C70", Offset = "0x9E2C70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E2C70", Offset = "0x9E2C70")]
	[SerializeField]
	private float m_indicatorPositionOnScreen;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool m_usingObjectDistanceFromPlayer;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2CE4", Offset = "0x9E2CE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E2CE4", Offset = "0x9E2CE4")]
	[SerializeField]
	private float m_percentageOfScreenViewsAsInside;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E2D48", Offset = "0x9E2D48")]
	[SerializeField]
	private float m_cutOffPointOfIndicatorsFromPlayer;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2D88", Offset = "0x9E2D88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E2D88", Offset = "0x9E2D88")]
	[SerializeField]
	private float m_cutOffPointOfIndicatorsForX;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E2DF4", Offset = "0x9E2DF4")]
	[SerializeField]
	private float m_cutOffPointOfIndicatorsForY;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2E3C", Offset = "0x9E2E3C")]
	[SerializeField]
	private Color m_colorForBombs;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color m_colorForFruit;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color m_colorForPowerFruit;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Color m_colorForBasketEnemy;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E2EB8", Offset = "0x9E2EB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E2EB8", Offset = "0x9E2EB8")]
	[SerializeField]
	private Camera m_camera;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F28", Offset = "0x9E2F28")]
	private static FovIndicators <Instance>k__BackingField;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlayerIndicatorPreference m_playerIndicatorPreference;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Image[] m_indicators;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<ObjectInfo> m_activeObjectsToTrack;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float m_minimumForBeingInsideScreen;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector2 m_canvasSize;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform m_playerHead;

	[Token(Token = "0x17000046")]
	public static FovIndicators Instance
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0xC6D668", Offset = "0xC6D668", VA = "0xC6D668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E64", Offset = "0x9E9E64")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060E")]
		[Address(RVA = "0xC6D6B8", Offset = "0xC6D6B8", VA = "0xC6D6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E74", Offset = "0x9E9E74")]
		private set
		{
		}
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xC6D70C", Offset = "0xC6D70C", VA = "0xC6D70C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xC6DDB0", Offset = "0xC6DDB0", VA = "0xC6DDB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xC6DFA4", Offset = "0xC6DFA4", VA = "0xC6DFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xC6DFE0", Offset = "0xC6DFE0", VA = "0xC6DFE0")]
	private void AddSlicedObjectToList(SliceObject sliceObject)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xC6E2F4", Offset = "0xC6E2F4", VA = "0xC6E2F4")]
	private void RemoveSlicedObjectFromList(SliceObject sliceObject)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xC6E400", Offset = "0xC6E400", VA = "0xC6E400")]
	private void AddBasketEnemyToList(BasketEnemy basketEnemy)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xC6E490", Offset = "0xC6E490", VA = "0xC6E490")]
	private void RemoveBasketEnemyToList(BasketEnemy basketEnemy)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xC6E59C", Offset = "0xC6E59C", VA = "0xC6E59C")]
	private void AdaptFovModeToSceneSelected(Halfbrick.FNVR.SceneManagement.SceneManager.Scene scene)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xC6E820", Offset = "0xC6E820", VA = "0xC6E820")]
	private void ClearAllObjects(GameMode gameMode)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xC6E6E4", Offset = "0xC6E6E4", VA = "0xC6E6E4")]
	private void ChangeIndicatorMode(IndicatorMode indicatorMode)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xC6E8F4", Offset = "0xC6E8F4", VA = "0xC6E8F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xC6E918", Offset = "0xC6E918", VA = "0xC6E918")]
	private void CreateIndicators()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xC6EE44", Offset = "0xC6EE44", VA = "0xC6EE44")]
	private void SetUpOffScreenIndicator(Vector3 screenPos, Vector3 worldPosition, int i, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xC6FADC", Offset = "0xC6FADC", VA = "0xC6FADC")]
	public void SetPlayerIndicatorPreference(int playerIndicatorPreference)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xC6F468", Offset = "0xC6F468", VA = "0xC6F468")]
	private void ScaleIndicatorBasedOnPlayerDistance(int i, Vector3 worldPosition, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xC6F748", Offset = "0xC6F748", VA = "0xC6F748")]
	private void ScaleIndicatorBasedOnScreenDistance(Vector3 screenPosition, int i, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xC6ED98", Offset = "0xC6ED98", VA = "0xC6ED98")]
	private bool IsOnScreen(Vector3 screenPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xC6EC24", Offset = "0xC6EC24", VA = "0xC6EC24")]
	private bool NeedToShowIndicatorForThisSliceObject(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xC6F35C", Offset = "0xC6F35C", VA = "0xC6F35C")]
	private Color ChooseIndicatorColor(TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
		return default(Color);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xC6E140", Offset = "0xC6E140", VA = "0xC6E140")]
	private bool IsPowerFruit(SliceObject sliceObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xC6DC54", Offset = "0xC6DC54", VA = "0xC6DC54")]
	private bool SettingUpInstanceSucceeded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xC6FB44", Offset = "0xC6FB44", VA = "0xC6FB44")]
	public FovIndicators()
	{
	}
}
[Token(Token = "0x20000FD")]
public class FreezeEffect : MonoBehaviour
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialLerp materialLerp;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeDuration;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fadeTimer;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isFadingIn;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xBD7FC4", Offset = "0xBD7FC4", VA = "0xBD7FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xBD7FF4", Offset = "0xBD7FF4", VA = "0xBD7FF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xBD8004", Offset = "0xBD8004", VA = "0xBD8004")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xBD8034", Offset = "0xBD8034", VA = "0xBD8034")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xBD8064", Offset = "0xBD8064", VA = "0xBD8064")]
	private void Update()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xBD829C", Offset = "0xBD829C", VA = "0xBD829C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xBD82A4", Offset = "0xBD82A4", VA = "0xBD82A4")]
	public bool IsFadingOut()
	{
		return default(bool);
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xBD82B4", Offset = "0xBD82B4", VA = "0xBD82B4")]
	public FreezeEffect()
	{
	}
}
[Token(Token = "0x20000FE")]
public interface ISlicableFruit
{
	[Token(Token = "0x17000047")]
	string GutsReferenceName
	{
		[Token(Token = "0x600062D")]
		get;
	}
}
[Token(Token = "0x20000FF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE6EC", Offset = "0x9DE6EC")]
public class Fruit : SliceObject, ISlicableFruit
{
	[Token(Token = "0x200044B")]
	public struct SliceParams
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ObjectPooler pool;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 bladePos;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 bladeTip;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 previousTip;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isRightBlade;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BladeConfig bladeConfig;
	}

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_fruitHalvesPrefabName;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string m_trailParticle;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected GameObject m_trail;

	[NonSerialized]
	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool HasSpawnedHalves;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color[] m_particleColors;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_cleanupTimer;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AnimationCurve colliderSize;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string slicedParticleName;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected HalvesParent m_halvesParent;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<Collider> m_activeColliders;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioSound m_soundSkewer;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioSound m_soundImpact;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioSound m_soundSplatter;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected Transform originalParent;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string FruitGutsReferenceName;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject FruitGutsReferenceObject;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float m_enableCollidersTimer;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool m_enableColliders;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	public bool m_overridePFXWithCritical;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int m_fruitActiveColLayer;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private SliceParams sliceParams;

	[Token(Token = "0x17000048")]
	public string GutsReferenceName
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0xBD8524", Offset = "0xBD8524", VA = "0xBD8524", Slot = "20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000010")]
	public static event Action<SliceObject> OnFruitSkewered
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0xBD832C", Offset = "0xBD832C", VA = "0xBD832C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E84", Offset = "0x9E9E84")]
		add
		{
		}
		[Token(Token = "0x600062F")]
		[Address(RVA = "0xBD8428", Offset = "0xBD8428", VA = "0xBD8428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E94", Offset = "0x9E9E94")]
		remove
		{
		}
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xBD852C", Offset = "0xBD852C", VA = "0xBD852C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xBD8668", Offset = "0xBD8668", VA = "0xBD8668")]
	public GameObject GetFruitGutsReferenceObject()
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xBD88F4", Offset = "0xBD88F4", VA = "0xBD88F4", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xBD8ACC", Offset = "0xBD8ACC", VA = "0xBD8ACC")]
	private void CreateTrail()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xBD8E30", Offset = "0xBD8E30", VA = "0xBD8E30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xBD8ED0", Offset = "0xBD8ED0", VA = "0xBD8ED0", Slot = "6")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xBD8E34", Offset = "0xBD8E34", VA = "0xBD8E34")]
	private void DestroyTrail()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xBD8F04", Offset = "0xBD8F04", VA = "0xBD8F04", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xBD9D50", Offset = "0xBD9D50", VA = "0xBD9D50", Slot = "19")]
	public override void Dropped()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xBD9F34", Offset = "0xBD9F34", VA = "0xBD9F34")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xBDA214", Offset = "0xBDA214", VA = "0xBDA214")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xBDA3D8", Offset = "0xBDA3D8", VA = "0xBDA3D8")]
	public void SetSkewered(bool value, Transform blade)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xBDA6D4", Offset = "0xBDA6D4", VA = "0xBDA6D4")]
	public bool HalvesHaveDropped()
	{
		return default(bool);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xBDA770", Offset = "0xBDA770", VA = "0xBDA770")]
	public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xBD949C", Offset = "0xBD949C", VA = "0xBD949C")]
	public void ProcessSliceLogic(SliceParams sliceParams)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xBDABD8", Offset = "0xBDABD8", VA = "0xBDABD8")]
	private void SpawnSlicedEffect(string pfxName, float directionAngle)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xBDAFE8", Offset = "0xBDAFE8", VA = "0xBDAFE8", Slot = "21")]
	public virtual bool CanBeSkewered()
	{
		return default(bool);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xBDAFF0", Offset = "0xBDAFF0", VA = "0xBDAFF0", Slot = "10")]
	public override bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xBDB1C4", Offset = "0xBDB1C4", VA = "0xBDB1C4")]
	public Fruit()
	{
	}
}
[Token(Token = "0x2000100")]
public class FruitGutsRef : MonoBehaviour
{
	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fruitReference;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Position;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody m_rigidBody;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshCollider m_col;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_enableCollider;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_cleanUpTimer;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xBDB2E8", Offset = "0xBDB2E8", VA = "0xBDB2E8")]
	public void CaptureDifference(GameObject obj)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xBDB434", Offset = "0xBDB434", VA = "0xBDB434")]
	private void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xBDB624", Offset = "0xBDB624", VA = "0xBDB624")]
	private void Update()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xBDB95C", Offset = "0xBDB95C", VA = "0xBDB95C")]
	public FruitGutsRef()
	{
	}
}
[Token(Token = "0x2000101")]
public class FruitHalf : MonoBehaviour
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HalvesParent halvesParent;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 initialPos;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 initialRotation;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool initialisedValues;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 explosiveForce;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float explosionRadius;

	[NonSerialized]
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_canBeUsed;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_enableCollider;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xBDB9BC", Offset = "0xBDB9BC", VA = "0xBDB9BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xBDBA34", Offset = "0xBDBA34", VA = "0xBDBA34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xBDBDB4", Offset = "0xBDBDB4", VA = "0xBDBDB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xBDBE98", Offset = "0xBDBE98", VA = "0xBDBE98")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xBDC0B4", Offset = "0xBDC0B4", VA = "0xBDC0B4")]
	public FruitHalf()
	{
	}
}
[Token(Token = "0x2000102")]
public class FruitHalvesManager : MonoSingleton<FruitHalvesManager>
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int m_fruitGutsCount;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<FruitGutsRef> m_fruitHalves;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xBDB5A8", Offset = "0xBDB5A8", VA = "0xBDB5A8")]
	public void AddFruitHalf(FruitGutsRef guts)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xBDB8DC", Offset = "0xBDB8DC", VA = "0xBDB8DC")]
	public void RemoveFruitHalf(FruitGutsRef guts)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xBDC114", Offset = "0xBDC114", VA = "0xBDC114")]
	public void Explode(float explosionForce, Vector3 explosionPosition, float explosionRadius)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xBDC2B4", Offset = "0xBDC2B4", VA = "0xBDC2B4")]
	public void CleanupFruit()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xBDC428", Offset = "0xBDC428", VA = "0xBDC428")]
	public FruitHalvesManager()
	{
	}
}
[Token(Token = "0x2000103")]
public class GameMode : MonoBehaviour
{
	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD84", Offset = "0x9DFD84")]
	private sealed class <SubmitAfterSeconds>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameMode <>4__this;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float seconds;

		[Token(Token = "0x170002B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0xBE060C", Offset = "0xBE060C", VA = "0xBE060C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xBE067C", Offset = "0xBE067C", VA = "0xBE067C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xBDD998", Offset = "0xBDD998", VA = "0xBDD998")]
		[DebuggerHidden]
		public <SubmitAfterSeconds>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xBE0524", Offset = "0xBE0524", VA = "0xBE0524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xBE0528", Offset = "0xBE0528", VA = "0xBE0528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xBE0614", Offset = "0xBE0614", VA = "0xBE0614", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFD94", Offset = "0x9DFD94")]
	private sealed class <CloseGameAfterSeconds>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x170002B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xBE028C", Offset = "0xBE028C", VA = "0xBE028C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0xBE02FC", Offset = "0xBE02FC", VA = "0xBE02FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xBDDECC", Offset = "0xBDDECC", VA = "0xBDDECC")]
		[DebuggerHidden]
		public <CloseGameAfterSeconds>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xBE01E0", Offset = "0xBE01E0", VA = "0xBE01E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xBE01E4", Offset = "0xBE01E4", VA = "0xBE01E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xBE0294", Offset = "0xBE0294", VA = "0xBE0294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFDA4", Offset = "0x9DFDA4")]
	private sealed class <ShowLeaderBoardAfterSeconds>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameMode <>4__this;

		[Token(Token = "0x170002B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0xBE04AC", Offset = "0xBE04AC", VA = "0xBE04AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xBE051C", Offset = "0xBE051C", VA = "0xBE051C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xBDDEF8", Offset = "0xBDDEF8", VA = "0xBDDEF8")]
		[DebuggerHidden]
		public <ShowLeaderBoardAfterSeconds>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xBE0304", Offset = "0xBE0304", VA = "0xBE0304", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xBE0308", Offset = "0xBE0308", VA = "0xBE0308", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xBE04B4", Offset = "0xBE04B4", VA = "0xBE04B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> m_combos;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_comboTimer;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<Vector3> ComboLocation;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_comboAverageLocation;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_criticalSlicedEffect;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_critical;

	[NonSerialized]
	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_peachChancePercent;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_peachChanceIncAmount;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected SpawnPoint[] m_fruitSpawners;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_gameOverComponent;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_leaderBoard;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool m_isGameOver;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	protected bool m_hasGameStarted;

	[NonSerialized]
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ObjectPooler m_fruitHalvesPooler;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected int m_score;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected int m_bestScore;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int m_bestCombo;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected ScoreboardManager m_scoreBoardManager;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool m_hasBestChanged;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected int m_fruitServed;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected int m_fruitSliced;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected int m_leftSliced;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected int m_rightSliced;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected int m_fruitSkewered;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected int m_bombsHit;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected int m_objectsJuggled;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected int m_gameStartTime;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected int m_bananaFrenzySpawn;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected int m_bananaFrenzySlice;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected int m_bananaDoubleSpawn;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected int m_bananaDoubleSlice;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected int m_bananaFreezeSpawn;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected int m_bananaFreezeSlice;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected int m_peachSpawn;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected int m_peachSlice;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected int m_bombsSpawned;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected int m_bombsDeflected;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected int m_enemiesKilled;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected int m_enemiesHit;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected int m_waitingForSubmit;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Coroutine m_leaderboardRoutine;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameMode m_currentGameMode;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool m_debug;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int m_waveID;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GamePlay _mAnalyticsGamePlay;

	[Token(Token = "0x17000049")]
	public static GameMode CurrentGameMode
	{
		[Token(Token = "0x6000653")]
		[Address(RVA = "0xBD9DFC", Offset = "0xBD9DFC", VA = "0xBD9DFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000652")]
		[Address(RVA = "0xBDCD94", Offset = "0xBDCD94", VA = "0xBDCD94")]
		protected set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event Action<GameMode> OnGameOver
	{
		[Token(Token = "0x6000654")]
		[Address(RVA = "0xBDCE00", Offset = "0xBDCE00", VA = "0xBDCE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9EA4", Offset = "0x9E9EA4")]
		add
		{
		}
		[Token(Token = "0x6000655")]
		[Address(RVA = "0xBDCF30", Offset = "0xBDCF30", VA = "0xBDCF30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9EB4", Offset = "0x9E9EB4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xBDD060", Offset = "0xBDD060", VA = "0xBDD060")]
	public int GetNextWaveID()
	{
		return default(int);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xBDD074", Offset = "0xBDD074", VA = "0xBDD074")]
	public bool IsGameOver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xBDD07C", Offset = "0xBDD07C", VA = "0xBDD07C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xBDD3E4", Offset = "0xBDD3E4", VA = "0xBDD3E4", Slot = "5")]
	public virtual void SubmitResults()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xBDD8FC", Offset = "0xBDD8FC", VA = "0xBDD8FC", Slot = "6")]
	public virtual void BombExploded(Bomb bomb)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xBDD900", Offset = "0xBDD900", VA = "0xBDD900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9EC4", Offset = "0x9E9EC4")]
	private IEnumerator SubmitAfterSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xBDD9C4", Offset = "0xBDD9C4", VA = "0xBDD9C4", Slot = "7")]
	public virtual void OnScoreSubmitted(Leaderboard leaderboard, bool success)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xBDDA7C", Offset = "0xBDDA7C", VA = "0xBDDA7C", Slot = "8")]
	public virtual void OnResultsEnd()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xBDDE0C", Offset = "0xBDDE0C", VA = "0xBDDE0C")]
	public void OnPeachSpawned()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xBDDE24", Offset = "0xBDDE24", VA = "0xBDDE24")]
	public void CloseGame(float seconds)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xBDDE50", Offset = "0xBDDE50", VA = "0xBDDE50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9F28", Offset = "0x9E9F28")]
	public IEnumerator CloseGameAfterSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xBDDD74", Offset = "0xBDDD74", VA = "0xBDDD74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9F8C", Offset = "0x9E9F8C")]
	private IEnumerator ShowLeaderBoardAfterSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xBDDF24", Offset = "0xBDDF24", VA = "0xBDDF24", Slot = "9")]
	public virtual void StartGame()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xBDE278", Offset = "0xBDE278", VA = "0xBDE278", Slot = "10")]
	public virtual void GameOver()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xBDE6D0", Offset = "0xBDE6D0", VA = "0xBDE6D0", Slot = "11")]
	public virtual void Finish()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xBDE6D4", Offset = "0xBDE6D4", VA = "0xBDE6D4", Slot = "12")]
	public virtual bool IsFreeze()
	{
		return default(bool);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xBDE6DC", Offset = "0xBDE6DC", VA = "0xBDE6DC", Slot = "13")]
	public virtual void UnloadMode()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xBDE7E8", Offset = "0xBDE7E8", VA = "0xBDE7E8")]
	public void QuitGame(string from)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xBDE3E0", Offset = "0xBDE3E0", VA = "0xBDE3E0")]
	public void SendGameEndEvent(string result)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xBDE854", Offset = "0xBDE854", VA = "0xBDE854", Slot = "14")]
	public virtual void OnTouchDown(Vector2 pos)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xBDE858", Offset = "0xBDE858", VA = "0xBDE858", Slot = "15")]
	public virtual void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xBDE958", Offset = "0xBDE958", VA = "0xBDE958")]
	public int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xBDE960", Offset = "0xBDE960", VA = "0xBDE960", Slot = "16")]
	public virtual void BombSpawned()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xBDE970", Offset = "0xBDE970", VA = "0xBDE970", Slot = "17")]
	public virtual void BombDeflected()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xBDE980", Offset = "0xBDE980", VA = "0xBDE980", Slot = "18")]
	public virtual void EnemyKilled()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xBDE990", Offset = "0xBDE990", VA = "0xBDE990", Slot = "19")]
	public virtual void EnemyHit()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xBDE9A0", Offset = "0xBDE9A0", VA = "0xBDE9A0", Slot = "20")]
	public virtual void FruitSpawned()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xBDE9B0", Offset = "0xBDE9B0", VA = "0xBDE9B0", Slot = "21")]
	public virtual void ObjectsJuggled()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xBDE9C0", Offset = "0xBDE9C0", VA = "0xBDE9C0", Slot = "22")]
	public virtual bool PropSliced(Blade blade, SliceableProp fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xBDEBB4", Offset = "0xBDEBB4", VA = "0xBDEBB4", Slot = "23")]
	public virtual bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xBDF08C", Offset = "0xBDF08C", VA = "0xBDF08C", Slot = "24")]
	public virtual bool FruitSkewered(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xBDF0A4", Offset = "0xBDF0A4", VA = "0xBDF0A4", Slot = "25")]
	public virtual bool ObjectSliced(Blade blade, SliceObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xBDF1FC", Offset = "0xBDF1FC", VA = "0xBDF1FC", Slot = "26")]
	public virtual bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xBDF4D0", Offset = "0xBDF4D0", VA = "0xBDF4D0", Slot = "27")]
	public virtual bool MenuFruitSliced(Blade blade, MenuFruit menu)
	{
		return default(bool);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xBDF6B8", Offset = "0xBDF6B8", VA = "0xBDF6B8", Slot = "28")]
	public virtual void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xBDF7B4", Offset = "0xBDF7B4", VA = "0xBDF7B4")]
	protected void SetSpawnersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xBDF8A4", Offset = "0xBDF8A4", VA = "0xBDF8A4", Slot = "29")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xBDF8A8", Offset = "0xBDF8A8", VA = "0xBDF8A8")]
	protected void UpdateCombos()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xBDFAF4", Offset = "0xBDFAF4", VA = "0xBDFAF4", Slot = "30")]
	public virtual void CancelBlitz()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xBDFAF8", Offset = "0xBDFAF8", VA = "0xBDFAF8", Slot = "31")]
	protected virtual void ComboFinish(Vector3 position)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xBDFF58", Offset = "0xBDFF58", VA = "0xBDFF58")]
	public Vector3 GetPositionAlongCombo(List<Vector3> positions, float fractionAlongPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xBE0104", Offset = "0xBE0104", VA = "0xBE0104", Slot = "32")]
	protected virtual void OnSuccessfulCombo(List<Vector3> positions)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xBDA88C", Offset = "0xBDA88C", VA = "0xBDA88C")]
	public bool CriticalChance(Blade blade, Vector3 position, Plane splitPlane)
	{
		return default(bool);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xBE0108", Offset = "0xBE0108", VA = "0xBE0108")]
	public GameMode()
	{
	}
}
[Token(Token = "0x2000104")]
public class HalvesParent : MonoBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int halvesAlive;

	[NonSerialized]
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_canBeUsed;

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xBEEFF8", Offset = "0xBEEFF8", VA = "0xBEEFF8")]
	private void EnableChildren(Transform t)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xBEF0B0", Offset = "0xBEF0B0", VA = "0xBEF0B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xBDC090", Offset = "0xBDC090", VA = "0xBDC090")]
	public void KillChild()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xBEF14C", Offset = "0xBEF14C", VA = "0xBEF14C")]
	public HalvesParent()
	{
	}
}
[Token(Token = "0x2000105")]
public class HorizontalSelectButton : MonoBehaviour
{
	[Token(Token = "0x6000687")]
	[Address(RVA = "0xBF0158", Offset = "0xBF0158", VA = "0xBF0158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xBF015C", Offset = "0xBF015C", VA = "0xBF015C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xBF0160", Offset = "0xBF0160", VA = "0xBF0160")]
	public HorizontalSelectButton()
	{
	}
}
[Token(Token = "0x2000106")]
public class HorizontalSelectMenu : MonoSingleton<HorizontalSelectMenu>
{
	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_width;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_depth;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_swipeSpeed;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] m_allIcons;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_mouseDown;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_previousPos;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_currentPos;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_currentVel;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_moveSinceDown;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_decelerationSpeed;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_maxVel;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_iconGap;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_snapThreshold;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_snapSpeed;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xBF0168", Offset = "0xBF0168", VA = "0xBF0168")]
	private void Start()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xBF065C", Offset = "0xBF065C", VA = "0xBF065C")]
	public void OnTouchDown(float posX)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xBF06F0", Offset = "0xBF06F0", VA = "0xBF06F0")]
	public void OnTouch(float posX)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xBF0790", Offset = "0xBF0790", VA = "0xBF0790")]
	public void OnTouchUp()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xBF0808", Offset = "0xBF0808", VA = "0xBF0808")]
	public void OnTouchClick()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xBF080C", Offset = "0xBF080C", VA = "0xBF080C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xBF016C", Offset = "0xBF016C", VA = "0xBF016C")]
	public void SetPositions()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xBF098C", Offset = "0xBF098C", VA = "0xBF098C")]
	private void ShiftLeft()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xBF09A0", Offset = "0xBF09A0", VA = "0xBF09A0")]
	private void ShiftRight()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xBF09B4", Offset = "0xBF09B4", VA = "0xBF09B4")]
	public HorizontalSelectMenu()
	{
	}
}
[Token(Token = "0x2000107")]
public class HUDMessage : MonoBehaviour
{
	[Token(Token = "0x200044F")]
	public enum Type
	{
		[Token(Token = "0x4001808")]
		Top,
		[Token(Token = "0x4001809")]
		Center
	}

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform content;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 positionOffset;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xBE3F9C", Offset = "0xBE3F9C", VA = "0xBE3F9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xBE3FF4", Offset = "0xBE3FF4", VA = "0xBE3FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xBE4378", Offset = "0xBE4378", VA = "0xBE4378")]
	public void Set(string message, Type type)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xBE3FA4", Offset = "0xBE3FA4", VA = "0xBE3FA4")]
	public void Show(bool visible)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xBE4468", Offset = "0xBE4468", VA = "0xBE4468")]
	public HUDMessage()
	{
	}
}
[Token(Token = "0x2000108")]
public class InfoBoardController : MonoBehaviour
{
	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh m_startTimerText;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMesh m_endGameInfoText;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Timer m_timer;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xBF1EC8", Offset = "0xBF1EC8", VA = "0xBF1EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xBF20AC", Offset = "0xBF20AC", VA = "0xBF20AC")]
	public void ShowStartTimer(UnityAction GameMode_OnStartTimerFinishedListener)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xBF22A4", Offset = "0xBF22A4", VA = "0xBF22A4")]
	public void ShowEndGameInfo(int score, UnityAction GameMode_OnEndGameInfoDisplayFinished)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xBF2448", Offset = "0xBF2448", VA = "0xBF2448")]
	private void InfoBoard_OnStartTimerFinished()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xBF25A8", Offset = "0xBF25A8", VA = "0xBF25A8")]
	private void InfoBoard_OnEndGameDisplayInfoTimerFinished()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xBF2708", Offset = "0xBF2708", VA = "0xBF2708")]
	private void Update()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xBF2884", Offset = "0xBF2884", VA = "0xBF2884")]
	public InfoBoardController()
	{
	}
}
[Token(Token = "0x2000109")]
public class JointFollow : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_meshBone;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_offsetPosition;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_offsetRotation;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_setPosition;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_setRotation;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool m_lockX;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool m_lockY;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool m_lockZ;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xBF2CE8", Offset = "0xBF2CE8", VA = "0xBF2CE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xBF2DE0", Offset = "0xBF2DE0", VA = "0xBF2DE0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xBF2FC0", Offset = "0xBF2FC0", VA = "0xBF2FC0")]
	public JointFollow()
	{
	}
}
[Token(Token = "0x200010A")]
public class LanguageButton : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LanguageManager.Language m_language;

	[Token(Token = "0x1700004A")]
	public LanguageManager.Language Language
	{
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xBF2FD0", Offset = "0xBF2FD0", VA = "0xBF2FD0")]
		get
		{
			return default(LanguageManager.Language);
		}
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xBF2FD8", Offset = "0xBF2FD8", VA = "0xBF2FD8")]
	public void SetLanguage()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xBF3218", Offset = "0xBF3218", VA = "0xBF3218")]
	public LanguageButton()
	{
	}
}
[Token(Token = "0x200010B")]
public class IntRange
{
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int min;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int max;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xBF28F0", Offset = "0xBF28F0", VA = "0xBF28F0")]
	public IntRange()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xBF2918", Offset = "0xBF2918", VA = "0xBF2918")]
	public IntRange(int _min, int _max)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xBF2950", Offset = "0xBF2950", VA = "0xBF2950")]
	public bool ExtendRange(int num)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xBF298C", Offset = "0xBF298C", VA = "0xBF298C")]
	public void Join(IntRange range)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xBF2A34", Offset = "0xBF2A34", VA = "0xBF2A34")]
	public int Size()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x200010C")]
public class RingMaterial
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material m_material;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture m_defaultTexture;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xC180D8", Offset = "0xC180D8", VA = "0xC180D8")]
	public RingMaterial()
	{
	}
}
[Token(Token = "0x200010D")]
public class LanguageManager : MonoSingleton<LanguageManager>
{
	[Token(Token = "0x2000450")]
	public enum Language
	{
		[Token(Token = "0x400180B")]
		ENGLISH,
		[Token(Token = "0x400180C")]
		FRENCH,
		[Token(Token = "0x400180D")]
		GERMAN,
		[Token(Token = "0x400180E")]
		ITALIAN,
		[Token(Token = "0x400180F")]
		SPANISH,
		[Token(Token = "0x4001810")]
		SPANISH_TRAD,
		[Token(Token = "0x4001811")]
		JAPANESE,
		[Token(Token = "0x4001812")]
		CHINESE,
		[Token(Token = "0x4001813")]
		CHINESE_TRAD,
		[Token(Token = "0x4001814")]
		KOREAN,
		[Token(Token = "0x4001815")]
		POLISH,
		[Token(Token = "0x4001816")]
		PORTUGUESE_EU,
		[Token(Token = "0x4001817")]
		RUSSIAN,
		[Token(Token = "0x4001818")]
		ARABIC
	}

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Font m_font;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_size;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_padding;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int m_charCount;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_saveLocation;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_xmlStringTableFilePath;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	private XmlDocument m_xmlStringTable;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	private Dictionary<string, string> m_stringLookup;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	public string m_currentLanguage;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Language m_language;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool m_debug;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string translatedText;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int firstIndex;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string firstString;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int lastIndex;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string lastString;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string subStr;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string transKey;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string[] m_allLanguages;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material[] m_allTextMeshMats;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RingMaterial[] m_menuRingMaterials;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<string> m_charOverrides;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int m_overrideIndex;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xBF3220", Offset = "0xBF3220", VA = "0xBF3220")]
	public string[] GetLanguages()
	{
		return null;
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xBF3228", Offset = "0xBF3228", VA = "0xBF3228")]
	public Texture2D FindRingTexture(Texture2D[] textures, string name)
	{
		return null;
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xBF32C8", Offset = "0xBF32C8", VA = "0xBF32C8")]
	public void SetMenuRingsTextures()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xBF3588", Offset = "0xBF3588", VA = "0xBF3588")]
	public void SetAllAtlas(Texture2D tex, int _width, int _height)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xBF3778", Offset = "0xBF3778", VA = "0xBF3778")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xBF41A0", Offset = "0xBF41A0", VA = "0xBF41A0")]
	public void SetLanguage(string lang)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xBF3060", Offset = "0xBF3060", VA = "0xBF3060")]
	public void SetLanguage(Language lang)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xBF4450", Offset = "0xBF4450", VA = "0xBF4450")]
	private string TranslateText(string text)
	{
		return null;
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xBF45C8", Offset = "0xBF45C8", VA = "0xBF45C8")]
	private void FindNextTranslation()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xBF4998", Offset = "0xBF4998", VA = "0xBF4998")]
	public string ParseText(string text)
	{
		return null;
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xBF4F58", Offset = "0xBF4F58", VA = "0xBF4F58")]
	public bool IsXmlNull()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xBF4F68", Offset = "0xBF4F68", VA = "0xBF4F68")]
	private void LoadXML()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xBF50A0", Offset = "0xBF50A0", VA = "0xBF50A0")]
	public void GenerateStringTable()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xBF38C0", Offset = "0xBF38C0", VA = "0xBF38C0")]
	public void GenerateStringTable(string langCode)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xBF50A8", Offset = "0xBF50A8", VA = "0xBF50A8")]
	public string GenerateFontAtlas()
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xBF5898", Offset = "0xBF5898", VA = "0xBF5898")]
	public Language GetCurrentLanguage()
	{
		return default(Language);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xBF58EC", Offset = "0xBF58EC", VA = "0xBF58EC")]
	public LanguageManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200010E")]
public class LeaderboardEntry
{
	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string m_playerName;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_playerId;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_rank;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_prevRank;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_score;

	[NonSerialized]
	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_image;

	[NonSerialized]
	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_imageHttp;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xF78FA4", Offset = "0xF78FA4", VA = "0xF78FA4", Slot = "4")]
	public virtual void LoadImage()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xF78FA8", Offset = "0xF78FA8", VA = "0xF78FA8")]
	public LeaderboardEntry()
	{
	}
}
[Token(Token = "0x200010F")]
public class Leaderboard
{
	[Token(Token = "0x2000451")]
	public enum RequestType
	{
		[Token(Token = "0x400181A")]
		GLOBAL,
		[Token(Token = "0x400181B")]
		GLOBAL_RELATIVE,
		[Token(Token = "0x400181C")]
		FRIENDS
	}

	[Token(Token = "0x2000452")]
	public delegate void SubmitCallback(Leaderboard leaderboard, bool success);

	[Token(Token = "0x2000453")]
	public delegate void RequestEntriesCallback(Leaderboard leaderboard, bool success, List<LeaderboardEntry> entries);

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected string m_name;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int m_rank;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int m_score;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xF75E80", Offset = "0xF75E80", VA = "0xF75E80", Slot = "4")]
	public virtual void SubmitScore(int score, [Optional] SubmitCallback callback)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xF75E84", Offset = "0xF75E84", VA = "0xF75E84", Slot = "5")]
	public virtual void RequestEntries(int start, int end, RequestType type, RequestEntriesCallback callback)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xF75E88", Offset = "0xF75E88", VA = "0xF75E88", Slot = "6")]
	public virtual bool IsLocal()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xF75E90", Offset = "0xF75E90", VA = "0xF75E90", Slot = "7")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xF75E94", Offset = "0xF75E94", VA = "0xF75E94")]
	public Leaderboard()
	{
	}
}
[Token(Token = "0x2000110")]
public class LeaderboardDisplay : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color m_playerColour;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_entries;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_entryTemplate;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_loading;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_loadingFailed;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI m_ranking;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<LeaderboardEntry> m_entrylist;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> m_entryObjList;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LeaderboardEntry m_first;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Leaderboard m_board;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_requestFirstEntry;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool m_requestTopLeaderboard;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int m_attempts;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string m_leaderboardName;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string leaderboardOverride;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool forceOnline;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int m_maxEntries;

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xF76FA8", Offset = "0xF76FA8", VA = "0xF76FA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xF774B4", Offset = "0xF774B4", VA = "0xF774B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xF774B8", Offset = "0xF774B8", VA = "0xF774B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xF77AE8", Offset = "0xF77AE8", VA = "0xF77AE8")]
	private void GetLeaderboardBoard(string name)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xF771F4", Offset = "0xF771F4", VA = "0xF771F4")]
	public void DownloadLeaderboard(string name, bool userCentered)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xF77CB4", Offset = "0xF77CB4", VA = "0xF77CB4")]
	public void OnEntriesDownloaded(Leaderboard leaderboard, bool success, List<LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xF7817C", Offset = "0xF7817C", VA = "0xF7817C")]
	public void OnFirstEntryDownloaded(Leaderboard leaderboard, bool success, List<LeaderboardEntry> entries)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xF78268", Offset = "0xF78268", VA = "0xF78268")]
	private int GetMyPlayerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xF77DB8", Offset = "0xF77DB8", VA = "0xF77DB8")]
	private void DisplayLeaderboard()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xF78428", Offset = "0xF78428", VA = "0xF78428")]
	private void SetupEntryGameObject(LeaderboardEntry entry)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xF78C54", Offset = "0xF78C54", VA = "0xF78C54")]
	public string GetRankSuffix(int rank)
	{
		return null;
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xF777F4", Offset = "0xF777F4", VA = "0xF777F4")]
	private void DisplayImage(LeaderboardEntry entry, GameObject entryObj)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xF78D38", Offset = "0xF78D38", VA = "0xF78D38")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xF78EF4", Offset = "0xF78EF4", VA = "0xF78EF4")]
	public LeaderboardDisplay()
	{
	}
}
[Token(Token = "0x2000111")]
public class LocalLeaderboard : Leaderboard
{
	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<LeaderboardEntry> m_leaderboard;

	[Token(Token = "0x4000778")]
	private const int LOCAL_MAX = 6;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_pendingScore;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SubmitCallback m_pendingSubmitCallback;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_lastSubmittedRank;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xF8F9FC", Offset = "0xF8F9FC", VA = "0xF8F9FC")]
	public LocalLeaderboard(string name)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xF8FCC4", Offset = "0xF8FCC4", VA = "0xF8FCC4", Slot = "6")]
	public override bool IsLocal()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xF8FCCC", Offset = "0xF8FCCC", VA = "0xF8FCCC", Slot = "4")]
	public override void SubmitScore(int score, [Optional] SubmitCallback callback)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xF8FEE4", Offset = "0xF8FEE4", VA = "0xF8FEE4")]
	public void OnNameEntered(string name)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xF90364", Offset = "0xF90364", VA = "0xF90364", Slot = "5")]
	public override void RequestEntries(int start, int end, RequestType type, RequestEntriesCallback callback)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xF904A4", Offset = "0xF904A4", VA = "0xF904A4")]
	private string GetPath()
	{
		return null;
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xF8FA88", Offset = "0xF8FA88", VA = "0xF8FA88")]
	private void Load()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xF901AC", Offset = "0xF901AC", VA = "0xF901AC")]
	private void Save()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xF9050C", Offset = "0xF9050C", VA = "0xF9050C", Slot = "7")]
	public override void Clear()
	{
	}
}
[Token(Token = "0x2000112")]
public class OculusLeaderboardEntry : LeaderboardEntry
{
	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xCFE330", Offset = "0xCFE330", VA = "0xCFE330")]
	public OculusLeaderboardEntry()
	{
	}
}
[Token(Token = "0x2000113")]
public class OculusLeaderboard : Leaderboard
{
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFDB4", Offset = "0x9DFDB4")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OculusLeaderboard <>4__this;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderboardFilterType filter;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LeaderboardStartAt requestType;

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xCFDE90", Offset = "0xCFDE90", VA = "0xCFDE90")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xCFE274", Offset = "0xCFE274", VA = "0xCFE274")]
		internal void <RequestEntries>b__0(Message<bool> message)
		{
		}
	}

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_found;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_pendingSubmit;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_pendingRequestStart;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int m_pendingRequestEnd;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RequestType m_pendingRequestType;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SubmitCallback m_submitCallback;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RequestEntriesCallback m_entriesCallback;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xCFD90C", Offset = "0xCFD90C", VA = "0xCFD90C")]
	public OculusLeaderboard(string name)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xCFD940", Offset = "0xCFD940", VA = "0xCFD940", Slot = "4")]
	public override void SubmitScore(int score, SubmitCallback callback)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xCFDC28", Offset = "0xCFDC28", VA = "0xCFDC28")]
	private void OnSubmitReturn(Message msg)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xCFDD30", Offset = "0xCFDD30", VA = "0xCFDD30", Slot = "5")]
	public override void RequestEntries(int start, int end, RequestType type, RequestEntriesCallback callback)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xCFDE98", Offset = "0xCFDE98", VA = "0xCFDE98")]
	private void ReadLeaderboards(Message msg)
	{
	}
}
[Token(Token = "0x2000114")]
public class Life : MonoBehaviour
{
	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_isLifeLost;

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xF79018", Offset = "0xF79018", VA = "0xF79018")]
	public void SetIsLifeLost(bool lost)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xF790D4", Offset = "0xF790D4", VA = "0xF790D4")]
	public Life()
	{
	}
}
[Token(Token = "0x2000115")]
public class LightningManger : MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] m_defaulValues;

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xF790DC", Offset = "0xF790DC", VA = "0xF790DC")]
	public LightningManger()
	{
	}
}
[Token(Token = "0x2000116")]
public class Location : MonoBehaviour
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScoreboardManager m_scoreboardPrefab;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_scorboardSpawnPoint;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CannonSpawnFX m_cannonFX;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_scoreboard;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xF909FC", Offset = "0xF909FC", VA = "0xF909FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xF90CD0", Offset = "0xF90CD0", VA = "0xF90CD0")]
	public Location()
	{
	}
}
[Token(Token = "0x2000117")]
public class LocationManager : MonoSingleton<LocationManager>
{
	[Token(Token = "0x2000455")]
	public enum Locations
	{
		[Token(Token = "0x4001821")]
		COURTYARD,
		[Token(Token = "0x4001822")]
		DOJO,
		[Token(Token = "0x4001823")]
		NONE
	}

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Location m_courtyard;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Location m_dojo;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Locations m_currentLocation;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Location m_currentLocationObject;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xF90CD8", Offset = "0xF90CD8", VA = "0xF90CD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xF91170", Offset = "0xF91170", VA = "0xF91170")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xF90EEC", Offset = "0xF90EEC", VA = "0xF90EEC")]
	public void ChangeLocation(Locations loc)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xF911D0", Offset = "0xF911D0", VA = "0xF911D0")]
	public LocationManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000118")]
public class MaterialLerp
{
	[Serializable]
	[Token(Token = "0x2000456")]
	public class MaterialMod
	{
		[Serializable]
		[Token(Token = "0x20005A6")]
		public class ColorMod
		{
			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string propertyName;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color color;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public Color defaultValue;

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0xFA97F8", Offset = "0xFA97F8", VA = "0xFA97F8")]
			public ColorMod()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A7")]
		public class FloatMod
		{
			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string propertyName;

			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8E3C", Offset = "0x9E8E3C")]
			public float value;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[HideInInspector]
			public float defaultValue;

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xFA9870", Offset = "0xFA9870", VA = "0xFA9870")]
			public FloatMod()
			{
			}
		}

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material material;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ColorMod[] colorMods;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatMod[] floatMods;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool reverse;

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xFA97F0", Offset = "0xFA97F0", VA = "0xFA97F0")]
		public MaterialMod()
		{
		}
	}

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MaterialMod[] materialMods;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xF95508", Offset = "0xF95508", VA = "0xF95508")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xF95750", Offset = "0xF95750", VA = "0xF95750")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xF959BC", Offset = "0xF959BC", VA = "0xF959BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xF9550C", Offset = "0xF9550C", VA = "0xF9550C")]
	public void RefreshDefaults()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xF95754", Offset = "0xF95754", VA = "0xF95754")]
	public void ResetToDefaults()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xF959C0", Offset = "0xF959C0", VA = "0xF959C0")]
	public void Lerp(float t)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xF95CDC", Offset = "0xF95CDC", VA = "0xF95CDC")]
	public MaterialLerp()
	{
	}
}
[Token(Token = "0x2000119")]
public class MenuFruit : SliceObject, ISlicableFruit
{
	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 m_rotateAxis;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float spinSpeed;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_fruitHalvesPrefabName;

	[NonSerialized]
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool HasSpawnedHalves;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationCurve colliderSize;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string slicedParticleName;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSound m_soundImpact;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioSound m_soundSplatter;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string FruitGutsReferenceName;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject FruitGutsReferenceObject;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool m_isBomb;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Halfbrick.FNVR.SceneManagement.SceneManager.Scene m_scene;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UnityEvent m_OnSliceEvent;

	[Token(Token = "0x1700004B")]
	public string GutsReferenceName
	{
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xFA98C8", Offset = "0xFA98C8", VA = "0xFA98C8", Slot = "20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xFA98D0", Offset = "0xFA98D0", VA = "0xFA98D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xFA9A2C", Offset = "0xFA9A2C", VA = "0xFA9A2C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xFA9ACC", Offset = "0xFA9ACC", VA = "0xFA9ACC", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xFA9B44", Offset = "0xFA9B44", VA = "0xFA9B44")]
	public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xFA9C60", Offset = "0xFA9C60", VA = "0xFA9C60", Slot = "10")]
	public override bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 bladePreviousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xFAA5D0", Offset = "0xFAA5D0", VA = "0xFAA5D0")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xFAA64C", Offset = "0xFAA64C", VA = "0xFAA64C")]
	public void QuitToMain()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xFAA6DC", Offset = "0xFAA6DC", VA = "0xFAA6DC")]
	public void CloseApplication()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xFAA6E4", Offset = "0xFAA6E4", VA = "0xFAA6E4")]
	public void Retry()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xFAA76C", Offset = "0xFAA76C", VA = "0xFAA76C")]
	public void QuitBladeMenu()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xFAA654", Offset = "0xFAA654", VA = "0xFAA654")]
	public void LoadScene(Halfbrick.FNVR.SceneManagement.SceneManager.Scene scene)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xFAAAAC", Offset = "0xFAAAAC", VA = "0xFAAAAC")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xFAAAB4", Offset = "0xFAAAB4", VA = "0xFAAAB4")]
	public MenuFruit()
	{
	}
}
[Token(Token = "0x200011A")]
public class MenuRingRotator : MonoBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spinSpeed;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_rotateAxis;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_rotation;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_transform;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xFAAB54", Offset = "0xFAAB54", VA = "0xFAAB54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xFAAB7C", Offset = "0xFAAB7C", VA = "0xFAAB7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xFAAFF8", Offset = "0xFAAFF8", VA = "0xFAAFF8")]
	public MenuRingRotator()
	{
	}
}
[Token(Token = "0x200011B")]
public class MeshSlicer : MonoSingleton<MeshSlicer>
{
	[Token(Token = "0x2000457")]
	public class FruitSplitCache
	{
		[Token(Token = "0x20005A8")]
		public class Item
		{
			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8E64", Offset = "0x9E8E64")]
			private Plane <LocalSplitPlane>k__BackingField;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8E74", Offset = "0x9E8E74")]
			private IList<GameObject> <Cachelist>k__BackingField;

			[Token(Token = "0x1700038F")]
			public Plane LocalSplitPlane
			{
				[Token(Token = "0x60023D7")]
				[Address(RVA = "0xFB03D8", Offset = "0xFB03D8", VA = "0xFB03D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7CC", Offset = "0x9EF7CC")]
				get
				{
					return default(Plane);
				}
				[Token(Token = "0x60023D8")]
				[Address(RVA = "0xFB38AC", Offset = "0xFB38AC", VA = "0xFB38AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7DC", Offset = "0x9EF7DC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000390")]
			public IList<GameObject> Cachelist
			{
				[Token(Token = "0x60023D9")]
				[Address(RVA = "0xFB03D0", Offset = "0xFB03D0", VA = "0xFB03D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7EC", Offset = "0x9EF7EC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023DA")]
				[Address(RVA = "0xFB38B8", Offset = "0xFB38B8", VA = "0xFB38B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7FC", Offset = "0x9EF7FC")]
				private set
				{
				}
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xFB2B54", Offset = "0xFB2B54", VA = "0xFB2B54")]
			public Item(Plane localSplitPlane, List<GameObject> cachelist)
			{
			}
		}

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8694", Offset = "0x9E8694")]
		private string <CacheIdentifier>k__BackingField;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E86A4", Offset = "0x9E86A4")]
		private float <MaxDistance>k__BackingField;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E86B4", Offset = "0x9E86B4")]
		private int <DistanceIntervals>k__BackingField;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E86C4", Offset = "0x9E86C4")]
		private int <AngleIntervals>k__BackingField;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Item[] m_Cache;

		[Token(Token = "0x170002B6")]
		public string CacheIdentifier
		{
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xFB2B4C", Offset = "0xFB2B4C", VA = "0xFB2B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED97C", Offset = "0x9ED97C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0xFB3244", Offset = "0xFB3244", VA = "0xFB3244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED98C", Offset = "0x9ED98C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public float MaxDistance
		{
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0xFB324C", Offset = "0xFB324C", VA = "0xFB324C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED99C", Offset = "0x9ED99C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0xFB3254", Offset = "0xFB3254", VA = "0xFB3254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED9AC", Offset = "0x9ED9AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public int DistanceIntervals
		{
			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0xFB325C", Offset = "0xFB325C", VA = "0xFB325C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED9BC", Offset = "0x9ED9BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0xFB3264", Offset = "0xFB3264", VA = "0xFB3264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED9CC", Offset = "0x9ED9CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public int AngleIntervals
		{
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xFB326C", Offset = "0xFB326C", VA = "0xFB326C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED9DC", Offset = "0x9ED9DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xFB3274", Offset = "0xFB3274", VA = "0xFB3274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED9EC", Offset = "0x9ED9EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public int YawIntervals
		{
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xFB327C", Offset = "0xFB327C", VA = "0xFB327C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BB")]
		public int ZIntevals
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xFB3284", Offset = "0xFB3284", VA = "0xFB3284")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BC")]
		public int MaxIterations
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xFB3298", Offset = "0xFB3298", VA = "0xFB3298")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xFAE190", Offset = "0xFAE190", VA = "0xFAE190")]
		public FruitSplitCache(string cacheIdentifier, float maxDist = 0.55f, int distIntervals = 5, int angleIntervals = 6)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xFB32B4", Offset = "0xFB32B4", VA = "0xFB32B4")]
		private static int QuantizeFloat(float value, float min, float max, int intervals)
		{
			return default(int);
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xFB3364", Offset = "0xFB3364", VA = "0xFB3364")]
		private static int QuantizeQuaterAngle(float value, int intervals)
		{
			return default(int);
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xFB3398", Offset = "0xFB3398", VA = "0xFB3398")]
		private static int QuantizeFullAngle(float value, int intervals)
		{
			return default(int);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xFB33D0", Offset = "0xFB33D0", VA = "0xFB33D0")]
		private static float DeQuantizeFloat(int value, float min, float max, int intervals)
		{
			return default(float);
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xFB33EC", Offset = "0xFB33EC", VA = "0xFB33EC")]
		private static float DeQuantizeQuaterAngle(int value, int intervals)
		{
			return default(float);
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xFB3410", Offset = "0xFB3410", VA = "0xFB3410")]
		private static float DeQuantizeFullAngle(int value, int intervals)
		{
			return default(float);
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xFAFF18", Offset = "0xFAFF18", VA = "0xFAFF18")]
		public int Quantize(Plane plane)
		{
			return default(int);
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xFB01A4", Offset = "0xFB01A4", VA = "0xFB01A4")]
		public Plane DeQuantize(int i)
		{
			return default(Plane);
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xFB3438", Offset = "0xFB3438", VA = "0xFB3438")]
		public bool HasCache(Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xFB0374", Offset = "0xFB0374", VA = "0xFB0374")]
		public Item GetCache(Plane plane)
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xFB3498", Offset = "0xFB3498", VA = "0xFB3498")]
		public Item GetCache(int quantizedPlane)
		{
			return null;
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xFB2BF8", Offset = "0xFB2BF8", VA = "0xFB2BF8")]
		public void AddCache(Plane plane, Item objects)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xFB34EC", Offset = "0xFB34EC", VA = "0xFB34EC")]
		internal void AddCache(int quantizedPlane, Item objects)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xFB357C", Offset = "0xFB357C", VA = "0xFB357C")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, FruitSplitCache> s_SplitCache;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sliceTarget;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject testSplitPlane;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fruitReference;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FracturedObject fractureObject;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float parentSpeedScale;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float angularScale0;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float angularScale1;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SliceQuantizerDebugger sliceDebugger;

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xFAE030", Offset = "0xFAE030", VA = "0xFAE030")]
	public static void DestroyEditorSwitch(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xFAE098", Offset = "0xFAE098", VA = "0xFAE098")]
	public FruitSplitCache GetTypeCache(string fruitGutsReferenceName, bool createIfNeeded = true)
	{
		return null;
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xFAE238", Offset = "0xFAE238", VA = "0xFAE238")]
	public FruitSplitCache GetTypeCache(ISlicableFruit fruit, bool createIfNeeded = true)
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xFAE314", Offset = "0xFAE314", VA = "0xFAE314")]
	public FruitSplitCache GetTypeCache(GameObject fruit, bool createIfNeeded = true)
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xFAE404", Offset = "0xFAE404", VA = "0xFAE404")]
	public void TestMeshSliceGoGo()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xFAE7E0", Offset = "0xFAE7E0", VA = "0xFAE7E0")]
	public static Plane TransformPlane(Matrix4x4 mtx, Plane p)
	{
		return default(Plane);
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xFAE930", Offset = "0xFAE930", VA = "0xFAE930")]
	public int CacheFruitSplit(GameObject sliceTarget, Plane splitPlanePlane, Vector3 splitPlaneRightVec, GameObject fruitReference)
	{
		return default(int);
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xFAA5C8", Offset = "0xFAA5C8", VA = "0xFAA5C8")]
	public void SplitFruit(GameObject sliceTarget, Plane splitPlanePlane, Vector3 splitPlaneRightVec, GameObject fruitReference, out List<GameObject> resultObjects)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xFAE958", Offset = "0xFAE958", VA = "0xFAE958")]
	private int SplitFruit(GameObject sliceTarget, Plane splitPlanePlane, Vector3 splitPlaneRightVec, GameObject fruitReference, out List<GameObject> resultObjects, bool createResults)
	{
		return default(int);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xFB0BDC", Offset = "0xFB0BDC", VA = "0xFB0BDC")]
	private void CreateSplitFruit(GameObject sliceTarget, Plane splitPlanePlane, Vector3 splitPlaneRightVec, GameObject fruitReference, out List<GameObject> resultObjects, out Plane actualSplitPlane)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xFB03E4", Offset = "0xFB03E4", VA = "0xFB03E4")]
	private void ApplySplitVelocities(GameObject sliceTarget, Plane planeToSplitWith, IList<GameObject> splitObjects)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xFB2C28", Offset = "0xFB2C28", VA = "0xFB2C28")]
	public Matrix4x4 MatrixFromPlane(Plane plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xFB2F08", Offset = "0xFB2F08", VA = "0xFB2F08")]
	public static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xFB301C", Offset = "0xFB301C", VA = "0xFB301C")]
	public static float SignedDistancePlanePoint(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xFB30F4", Offset = "0xFB30F4", VA = "0xFB30F4")]
	public static Vector3 SetVectorLength(Vector3 vector, float size)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xFB318C", Offset = "0xFB318C", VA = "0xFB318C")]
	public MeshSlicer()
	{
	}
}
[Token(Token = "0x200011C")]
public abstract class MonoSingleton<T> : MonoBehaviour where T : MonoSingleton<T>
{
	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x1700004C")]
	public static bool exists
	{
		[Token(Token = "0x6000712")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004D")]
	public static T Instance
	{
		[Token(Token = "0x6000713")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000714")]
		set
		{
		}
	}

	[Token(Token = "0x6000715")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000716")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000717")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000718")]
	protected MonoSingleton()
	{
	}
}
[Token(Token = "0x200011D")]
public class MouseInput : MonoBehaviour
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObjectPooler pooler;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 m_mouseRotatePos;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_cameraTransform;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xFB5C68", Offset = "0xFB5C68", VA = "0xFB5C68")]
	private void Start()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xFB5D90", Offset = "0xFB5D90", VA = "0xFB5D90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xFB5DE4", Offset = "0xFB5DE4", VA = "0xFB5DE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xFB6B78", Offset = "0xFB6B78", VA = "0xFB6B78")]
	public MouseInput()
	{
	}
}
[Token(Token = "0x200011E")]
public class MultipleParticlePlays : MonoBehaviour
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] m_allsystems;

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xFB6EEC", Offset = "0xFB6EEC", VA = "0xFB6EEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xFB6F44", Offset = "0xFB6F44", VA = "0xFB6F44")]
	public void SetDelay(float delay)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xFB6FD8", Offset = "0xFB6FD8", VA = "0xFB6FD8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xFB705C", Offset = "0xFB705C", VA = "0xFB705C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xFB70E0", Offset = "0xFB70E0", VA = "0xFB70E0")]
	public MultipleParticlePlays()
	{
	}
}
[Token(Token = "0x200011F")]
public class NameEntry : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000458")]
	public class Roller
	{
		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject m_roller;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_firstIndex;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI[] m_visuals;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NameEntry m_parent;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_visualHeight;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_speed;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_moveTime;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_moveDist;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_moveTimer;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_yVelocity;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_decelSpeed;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector2 m_minMaxYVel;

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xFB71E8", Offset = "0xFB71E8", VA = "0xFB71E8")]
		public void Init(NameEntry parent)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xFB78B8", Offset = "0xFB78B8", VA = "0xFB78B8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xFB9348", Offset = "0xFB9348", VA = "0xFB9348")]
		public void Move(float amt)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xFB8B70", Offset = "0xFB8B70", VA = "0xFB8B70")]
		public void Step(int steps, float time)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xFB75B0", Offset = "0xFB75B0", VA = "0xFB75B0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xFB8CB8", Offset = "0xFB8CB8", VA = "0xFB8CB8")]
		public void StopMoving()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xFB9444", Offset = "0xFB9444", VA = "0xFB9444")]
		public void Brake()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xFB9094", Offset = "0xFB9094", VA = "0xFB9094")]
		public void Shift(int amt)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xFB8504", Offset = "0xFB8504", VA = "0xFB8504")]
		public int GetSelectedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xFB944C", Offset = "0xFB944C", VA = "0xFB944C")]
		public Roller()
		{
		}
	}

	[Token(Token = "0x2000459")]
	public delegate void NameEnteredCallback(string name);

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_characters;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Roller[] m_rollers;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_selectedIndex;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_move;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_moveTime;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_highlighter;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSound m_stepSound;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSound m_changeRollerSound;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSound m_displaySound;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private NameEnteredCallback m_callback;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite m_confirmOff;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite m_confirmOn;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image m_confirmImage;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_finished;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Blade m_currentBlade;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector2 m_previousTouch;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector2 m_currentTouch;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector2 m_currentMoveTouch;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector2 m_swipeThreshold;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xFB70E8", Offset = "0xFB70E8", VA = "0xFB70E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xFB72B0", Offset = "0xFB72B0", VA = "0xFB72B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xFB7344", Offset = "0xFB7344", VA = "0xFB7344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xFB7838", Offset = "0xFB7838", VA = "0xFB7838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xFB7B04", Offset = "0xFB7B04", VA = "0xFB7B04")]
	public void Show(NameEnteredCallback callback, bool effects = true)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xFB7C28", Offset = "0xFB7C28", VA = "0xFB7C28")]
	public void Finish()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xFB7CBC", Offset = "0xFB7CBC", VA = "0xFB7CBC")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xFB86DC", Offset = "0xFB86DC", VA = "0xFB86DC")]
	public void OnInputAction(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xFB8794", Offset = "0xFB8794", VA = "0xFB8794")]
	public void OnTouchPress(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xFB8B90", Offset = "0xFB8B90", VA = "0xFB8B90")]
	public void OnTouchDown(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xFB8D00", Offset = "0xFB8D00", VA = "0xFB8D00")]
	public void OnTouch(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xFB8E40", Offset = "0xFB8E40", VA = "0xFB8E40")]
	public void OnTouchUp(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xFB8FBC", Offset = "0xFB8FBC", VA = "0xFB8FBC")]
	public NameEntry()
	{
	}
}
[Token(Token = "0x2000120")]
public class ObjectPooler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200045A")]
	public class PooledObject
	{
		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_id;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_prefab;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_maxInstances;

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x131C56C", Offset = "0x131C56C", VA = "0x131C56C")]
		public PooledObject()
		{
		}
	}

	[Token(Token = "0x200045B")]
	public class ObjectPool
	{
		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GameObject> m_instances;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_currentIndex;

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x131AC38", Offset = "0x131AC38", VA = "0x131AC38")]
		public ObjectPool()
		{
		}
	}

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PooledObject[] m_pooledObjectsConfig;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, ObjectPool> m_objectPools;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform m_canvasParent;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform m_pooledObjectsParent;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x131A42C", Offset = "0x131A42C", VA = "0x131A42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x131ACA8", Offset = "0x131ACA8", VA = "0x131ACA8")]
	public void DisableAll()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x131AF80", Offset = "0x131AF80", VA = "0x131AF80")]
	public bool AnyFruitAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x131B344", Offset = "0x131B344", VA = "0x131B344")]
	public List<Fruit> GetAliveFruit()
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x131B704", Offset = "0x131B704", VA = "0x131B704")]
	public List<Bomb> GetAliveBombs()
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x131BAA4", Offset = "0x131BAA4", VA = "0x131BAA4")]
	public string GetRandomId()
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x131BB58", Offset = "0x131BB58", VA = "0x131BB58")]
	public static GameObject GetRandomInstanceFromPools(List<ObjectPooler> pools)
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x131C08C", Offset = "0x131C08C", VA = "0x131C08C")]
	public GameObject GetRandomInstance()
	{
		return null;
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x131BE30", Offset = "0x131BE30", VA = "0x131BE30")]
	public GameObject GetObjectInstance(string objectId)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x131C17C", Offset = "0x131C17C", VA = "0x131C17C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x131C4FC", Offset = "0x131C4FC", VA = "0x131C4FC")]
	public ObjectPooler()
	{
	}
}
[Token(Token = "0x2000121")]
public class ParticleSpawner : MonoBehaviour
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_playOnEnable;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_delay;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_systemPrefabString;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject m_parent;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem[] m_allSystems;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ObjectPooler m_pooler;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_markForDisable;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xCB9DDC", Offset = "0xCB9DDC", VA = "0xCB9DDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xCBA240", Offset = "0xCBA240", VA = "0xCBA240")]
	private void Update()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xCBA484", Offset = "0xCBA484", VA = "0xCBA484")]
	public void PlayParticle()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xCBA510", Offset = "0xCBA510", VA = "0xCBA510")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xCBA760", Offset = "0xCBA760", VA = "0xCBA760")]
	public ParticleSpawner()
	{
	}
}
[Token(Token = "0x2000122")]
public class PauseManager : MonoSingleton<PauseManager>
{
	[Token(Token = "0x200045C")]
	public enum PauseReason
	{
		[Token(Token = "0x400183F")]
		UserAction,
		[Token(Token = "0x4001840")]
		AppBackgrounded,
		[Token(Token = "0x4001841")]
		NoControllers
	}

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSound m_soundScroll;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSound m_soundSelect;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSound m_soundOpen;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSound m_soundClose;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color m_textSelectColour;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color m_textDeselectColour;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E3030", Offset = "0x9E3030")]
	private float m_playerDistanceFromPauseScreen;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool m_isPaused;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_pauseTimer;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_previousSnapshot;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_previousTimeScale;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PauseScreen m_pauseGame;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PauseScreen m_pauseMain;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HUDMessage m_hudMessage;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool m_debug;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PauseScreen m_currentScreen;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Blade m_currentBlade;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2 m_previousPos;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector2 m_currentPos;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 m_dist;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float m_menuScrollThreshold;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float m_noControllerPauseTimer;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xCBA7C0", Offset = "0xCBA7C0", VA = "0xCBA7C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xCBA854", Offset = "0xCBA854", VA = "0xCBA854")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xCBA8E8", Offset = "0xCBA8E8", VA = "0xCBA8E8")]
	public float GetPauseDelay()
	{
		return default(float);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xCBA8F0", Offset = "0xCBA8F0", VA = "0xCBA8F0")]
	public void OnInputAction(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xCBAB7C", Offset = "0xCBAB7C", VA = "0xCBAB7C")]
	public bool IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xCBB064", Offset = "0xCBB064", VA = "0xCBB064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xCBB570", Offset = "0xCBB570", VA = "0xCBB570")]
	private void UpdatePauseHUDMessage()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xCBAD30", Offset = "0xCBAD30", VA = "0xCBAD30")]
	public void OnPauseButtonDown(Blade blade)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xCBC234", Offset = "0xCBC234", VA = "0xCBC234")]
	public void OnTriggerDown(Blade blade)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xCBAB84", Offset = "0xCBAB84", VA = "0xCBAB84")]
	public void OnSelect(Blade blade)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xCBC398", Offset = "0xCBC398", VA = "0xCBC398")]
	public void OnTouchDown(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xCBC478", Offset = "0xCBC478", VA = "0xCBC478")]
	public void OnTouchUp(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xCBC578", Offset = "0xCBC578", VA = "0xCBC578")]
	public void OnTouch(Blade blade, Vector2 pos)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xCBA9CC", Offset = "0xCBA9CC", VA = "0xCBA9CC")]
	public void ChangeSelection(int dir)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xCBC910", Offset = "0xCBC910", VA = "0xCBC910")]
	public void TransferMenu(Blade blade)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xCBC994", Offset = "0xCBC994", VA = "0xCBC994")]
	public void ChangeScreen(PauseScreen screen)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xCBB654", Offset = "0xCBB654", VA = "0xCBB654")]
	public void Pause(PauseReason reason)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xCBBB14", Offset = "0xCBBB14", VA = "0xCBBB14")]
	public void Pause(Blade blade, PauseScreen screen, PauseReason reason, bool isCritical)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xCBB850", Offset = "0xCBB850", VA = "0xCBB850")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xCBD3F0", Offset = "0xCBD3F0", VA = "0xCBD3F0")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xCBD490", Offset = "0xCBD490", VA = "0xCBD490")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xCBD530", Offset = "0xCBD530", VA = "0xCBD530")]
	public PauseManager()
	{
	}
}
[Token(Token = "0x2000123")]
public class PauseScreen : MonoBehaviour
{
	[Token(Token = "0x200045D")]
	private enum TypeOfPauseScreen
	{
		[Token(Token = "0x4001843")]
		None = -1,
		[Token(Token = "0x4001844")]
		PauseSettings,
		[Token(Token = "0x4001845")]
		PauseMain,
		[Token(Token = "0x4001846")]
		PauseGame,
		[Token(Token = "0x4001847")]
		PauseQuality,
		[Token(Token = "0x4001848")]
		PauseLeaderboards,
		[Token(Token = "0x4001849")]
		PauseTimeOfDay,
		[Token(Token = "0x400184A")]
		PauseIndicator,
		[Token(Token = "0x400184B")]
		PauseMusic,
		[Token(Token = "0x400184C")]
		PauseLanguage
	}

	[Token(Token = "0x200045E")]
	private enum DaySetting
	{
		[Token(Token = "0x400184E")]
		Day,
		[Token(Token = "0x400184F")]
		Night,
		[Token(Token = "0x4001850")]
		Alternate
	}

	[Serializable]
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFDC4", Offset = "0x9DFDC4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Fader.OnFadeComplete <>9__22_0;

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xCBEB34", Offset = "0xCBEB34", VA = "0xCBEB34")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xCBEB3C", Offset = "0xCBEB3C", VA = "0xCBEB3C")]
		internal void <QuitGame>b__22_0(Fader.State OnFadeComplete)
		{
		}
	}

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TypeOfPauseScreen m_typeOfPauseScreen;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button[] m_allButtons;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LayoutElement[] m_allElements;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshProUGUI[] m_allText;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_currentSelected;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_optionCurrentlyActive;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PointerEventData m_pointerEventData;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PauseManager m_pauseMan;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E308C", Offset = "0x9E308C")]
	private PauseScreen <PreviousScreen>k__BackingField;

	[Token(Token = "0x1700004E")]
	public PauseScreen PreviousScreen
	{
		[Token(Token = "0x6000756")]
		[Address(RVA = "0xCBD5BC", Offset = "0xCBD5BC", VA = "0xCBD5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9FF0", Offset = "0x9E9FF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000757")]
		[Address(RVA = "0xCBD5C4", Offset = "0xCBD5C4", VA = "0xCBD5C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA000", Offset = "0x9EA000")]
		private set
		{
		}
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xCBCAE0", Offset = "0xCBCAE0", VA = "0xCBCAE0")]
	public void LoadScreen(PauseManager man)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xCBDA2C", Offset = "0xCBDA2C", VA = "0xCBDA2C")]
	private void SelectButtonWithCurrentValue(string playerPrefName, int defaultValue, bool hasBackButton)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xCBDB50", Offset = "0xCBDB50", VA = "0xCBDB50")]
	private Button GetCurrentButton()
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xCBC73C", Offset = "0xCBC73C", VA = "0xCBC73C")]
	public bool ChangeSelection(int dir)
	{
		return default(bool);
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xCBD7FC", Offset = "0xCBD7FC", VA = "0xCBD7FC")]
	private void SelectCurrent()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xCBD5CC", Offset = "0xCBD5CC", VA = "0xCBD5CC")]
	private void DeselectCurrent()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xCBC2EC", Offset = "0xCBC2EC", VA = "0xCBC2EC")]
	public void ActivateSelectedButton()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xCBDD18", Offset = "0xCBDD18", VA = "0xCBDD18")]
	public void Retry()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xCBDEBC", Offset = "0xCBDEBC", VA = "0xCBDEBC")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xCBE004", Offset = "0xCBE004", VA = "0xCBE004")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xCBDE90", Offset = "0xCBDE90", VA = "0xCBDE90")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xCBE150", Offset = "0xCBE150", VA = "0xCBE150")]
	public void ChangeScreen(PauseScreen screen)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xCBE198", Offset = "0xCBE198", VA = "0xCBE198")]
	public void ChangeQualitySettings(int val)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xCBE334", Offset = "0xCBE334", VA = "0xCBE334")]
	public void ChangeLeaderboardSettings(int val)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xCBE390", Offset = "0xCBE390", VA = "0xCBE390")]
	public void ChangeLanguage(string lang)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xCBE614", Offset = "0xCBE614", VA = "0xCBE614")]
	public void ChangeTimeOfDay(int value)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xCBE808", Offset = "0xCBE808", VA = "0xCBE808")]
	public void SetIndicatorPreference(int value)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xCBE844", Offset = "0xCBE844", VA = "0xCBE844")]
	public void ClearLeaderboards()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xCBE99C", Offset = "0xCBE99C", VA = "0xCBE99C")]
	public void MusicOn(bool on)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xCBE1CC", Offset = "0xCBE1CC", VA = "0xCBE1CC")]
	private void RestartGame()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xCBEA1C", Offset = "0xCBEA1C", VA = "0xCBEA1C")]
	public PauseScreen()
	{
	}
}
[Token(Token = "0x2000124")]
public class LocalProvider : PlatformProvider
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, LocalLeaderboard> m_leaderboards;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AchievementsData m_achievementsData;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xF90574", Offset = "0xF90574", VA = "0xF90574", Slot = "7")]
	public override bool IsInitialised()
	{
		return default(bool);
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xF9057C", Offset = "0xF9057C", VA = "0xF9057C", Slot = "10")]
	public override void Save()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xF90584", Offset = "0xF90584", VA = "0xF90584")]
	private string EvalStatStorageKey(StatsId key)
	{
		return null;
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xF90648", Offset = "0xF90648", VA = "0xF90648")]
	private string EvalAchievementStorageKey(string key)
	{
		return null;
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xF906E4", Offset = "0xF906E4", VA = "0xF906E4", Slot = "11")]
	public override void SetStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xF90738", Offset = "0xF90738", VA = "0xF90738", Slot = "12")]
	public override void IncrementStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xF907A0", Offset = "0xF907A0", VA = "0xF907A0", Slot = "13")]
	public override int GetStat(StatsId key, int def = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xF907C8", Offset = "0xF907C8", VA = "0xF907C8", Slot = "15")]
	public override void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xF90870", Offset = "0xF90870", VA = "0xF90870", Slot = "16")]
	public override bool IsAchievementUnlocked(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xF90898", Offset = "0xF90898", VA = "0xF90898", Slot = "18")]
	public override string GetProfileName()
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xF908A0", Offset = "0xF908A0", VA = "0xF908A0", Slot = "19")]
	public override string GetProfileId()
	{
		return null;
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xF908A8", Offset = "0xF908A8", VA = "0xF908A8", Slot = "20")]
	public override Leaderboard GetLeaderboard(string name)
	{
		return null;
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xF9098C", Offset = "0xF9098C", VA = "0xF9098C")]
	public LocalProvider()
	{
	}
}
[Token(Token = "0x2000125")]
public class OculusProvider : PlatformProvider
{
	[Serializable]
	[Token(Token = "0x2000460")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFDD4", Offset = "0x9DFDD4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Message.Callback <>9__9_0;

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xCFF71C", Offset = "0xCFF71C", VA = "0xCFF71C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xCFF724", Offset = "0xCFF724", VA = "0xCFF724")]
		internal void <Initialise>b__9_0(Message msg)
		{
		}
	}

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string DEMO_APP_ID;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_initialised;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_achievementsProgressInitialised;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, OculusLeaderboard> m_leaderboards;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string m_oculusID;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string m_oculusName;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, ulong> m_statsProgress;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, ulong> m_statsProgressPendingIncrements;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, bool> m_achievementsStates;

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xCFE338", Offset = "0xCFE338", VA = "0xCFE338", Slot = "6")]
	public override void Initialise(AchievementsData achievementsData)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xCFE624", Offset = "0xCFE624", VA = "0xCFE624", Slot = "9")]
	public override void Update()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xCFE7C8", Offset = "0xCFE7C8", VA = "0xCFE7C8", Slot = "7")]
	public override bool IsInitialised()
	{
		return default(bool);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xCFE7D0", Offset = "0xCFE7D0", VA = "0xCFE7D0", Slot = "18")]
	public override string GetProfileName()
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xCFE7D8", Offset = "0xCFE7D8", VA = "0xCFE7D8", Slot = "19")]
	public override string GetProfileId()
	{
		return null;
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xCFE7E0", Offset = "0xCFE7E0", VA = "0xCFE7E0", Slot = "10")]
	public override void Save()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xCFE978", Offset = "0xCFE978", VA = "0xCFE978", Slot = "12")]
	public override void IncrementStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xCFE9C8", Offset = "0xCFE9C8", VA = "0xCFE9C8", Slot = "13")]
	public override int GetStat(StatsId key, int def = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xCFEA48", Offset = "0xCFEA48", VA = "0xCFEA48", Slot = "11")]
	public override void SetStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xCFEAFC", Offset = "0xCFEAFC", VA = "0xCFEAFC", Slot = "14")]
	protected override void OnStatChanged(StatsId id, int newValue)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xCFECAC", Offset = "0xCFECAC", VA = "0xCFECAC", Slot = "16")]
	public override bool IsAchievementUnlocked(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xCFED2C", Offset = "0xCFED2C", VA = "0xCFED2C", Slot = "15")]
	public override void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xCFEE04", Offset = "0xCFEE04", VA = "0xCFEE04", Slot = "20")]
	public override Leaderboard GetLeaderboard(string name)
	{
		return null;
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xCFEF14", Offset = "0xCFEF14", VA = "0xCFEF14")]
	private void OnOculusInitialise(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xCFE568", Offset = "0xCFE568", VA = "0xCFE568")]
	private void UpdateAchievementsProgress()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xCFEFD0", Offset = "0xCFEFD0", VA = "0xCFEFD0")]
	private void OnAchievementsProgressUpdate(Message msg)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xCFF5B8", Offset = "0xCFF5B8", VA = "0xCFF5B8")]
	public OculusProvider()
	{
	}
}
[Token(Token = "0x2000126")]
public abstract class PlatformProvider
{
	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E309C", Offset = "0x9E309C")]
	private AchievementsData <AchievementsData>k__BackingField;

	[Token(Token = "0x1700004F")]
	public AchievementsData AchievementsData
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0xCBF154", Offset = "0xCBF154", VA = "0xCBF154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA010", Offset = "0x9EA010")]
		get
		{
			return null;
		}
		[Token(Token = "0x600078C")]
		[Address(RVA = "0xCBF15C", Offset = "0xCBF15C", VA = "0xCBF15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA020", Offset = "0x9EA020")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public virtual bool AllowPauseMenuInMainMenu
	{
		[Token(Token = "0x600078D")]
		[Address(RVA = "0xCBF164", Offset = "0xCBF164", VA = "0xCBF164", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000051")]
	public virtual bool AllowPauseMenuInGame
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0xCBF16C", Offset = "0xCBF16C", VA = "0xCBF16C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xCBF174", Offset = "0xCBF174", VA = "0xCBF174", Slot = "6")]
	public virtual void Initialise(AchievementsData achievementsData)
	{
	}

	[Token(Token = "0x6000790")]
	public abstract bool IsInitialised();

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xCBF17C", Offset = "0xCBF17C", VA = "0xCBF17C", Slot = "8")]
	public virtual bool IsLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xCBF184", Offset = "0xCBF184", VA = "0xCBF184", Slot = "9")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000793")]
	public abstract void Save();

	[Token(Token = "0x6000794")]
	public abstract void SetStat(StatsId key, int val);

	[Token(Token = "0x6000795")]
	public abstract void IncrementStat(StatsId key, int val);

	[Token(Token = "0x6000796")]
	public abstract int GetStat(StatsId key, int def = 0);

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xCBF188", Offset = "0xCBF188", VA = "0xCBF188", Slot = "14")]
	protected virtual void OnStatChanged(StatsId id, int newValue)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xCBF27C", Offset = "0xCBF27C", VA = "0xCBF27C", Slot = "15")]
	public virtual void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x6000799")]
	public abstract bool IsAchievementUnlocked(string name);

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xCBF314", Offset = "0xCBF314", VA = "0xCBF314", Slot = "17")]
	public virtual float GetAchievmentProgress(string name)
	{
		return default(float);
	}

	[Token(Token = "0x600079B")]
	public abstract string GetProfileName();

	[Token(Token = "0x600079C")]
	public abstract string GetProfileId();

	[Token(Token = "0x600079D")]
	public abstract Leaderboard GetLeaderboard(string name);

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xCBF4D8", Offset = "0xCBF4D8", VA = "0xCBF4D8", Slot = "21")]
	public virtual void Deinitialise()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xCBF4DC", Offset = "0xCBF4DC", VA = "0xCBF4DC")]
	protected PlatformProvider()
	{
	}
}
[Token(Token = "0x2000127")]
public class PositionLock : MonoBehaviour
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_lockAxis;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_lockPosition;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_limitRange;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 m_limitRangeMin;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 m_limitRangeMax;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool m_moveParent;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 m_steamOffset;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 m_oculusOffset;

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x190E570", Offset = "0x190E570", VA = "0x190E570")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x190ECF8", Offset = "0x190ECF8", VA = "0x190ECF8")]
	public PositionLock()
	{
	}
}
[Token(Token = "0x2000128")]
public class PreslicedFruitCache : MonoBehaviour, ISerializationCallbackReceiver
{
	[Serializable]
	[Token(Token = "0x2000461")]
	public class CacheItem
	{
		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 planeNormal;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float planeDistance;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] fragments;

		[Token(Token = "0x170002BD")]
		public Plane plane
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x190FFD8", Offset = "0x190FFD8", VA = "0x190FFD8")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x190F334", Offset = "0x190F334", VA = "0x190F334")]
			set
			{
			}
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x190F800", Offset = "0x190F800", VA = "0x190F800")]
		internal MeshSlicer.FruitSplitCache.Item ToItem()
		{
			return null;
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x190F32C", Offset = "0x190F32C", VA = "0x190F32C")]
		public CacheItem()
		{
		}
	}

	[Token(Token = "0x2000462")]
	public class OptimizedSplitMesh
	{
		[Token(Token = "0x20005A9")]
		private struct MeshFeatures
		{
			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool colors;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool uv;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool uv2;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public bool uv3;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool uv4;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool tangents;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool normals;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool boneWeights;

			[Token(Token = "0x60023DC")]
			[Address(RVA = "0xA8A1F8", Offset = "0xA8A1F8", VA = "0xA8A1F8")]
			public void AddFeaturesFromMesh(Mesh mesh)
			{
			}
		}

		[Token(Token = "0x20005AA")]
		private class IndexBuffer
		{
			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] indices;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshTopology topology;

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0xC12FAC", Offset = "0xC12FAC", VA = "0xC12FAC")]
			public IndexBuffer(int[] newIndexBuffer, MeshTopology topology)
			{
			}
		}

		[Token(Token = "0x20005AB")]
		private struct Vertex
		{
			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Color color;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Vector3 position;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly Vector2 uv;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public readonly Vector2 uv2;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public readonly Vector2 uv3;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public readonly Vector2 uv4;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public readonly Vector4 tangent;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public readonly Vector3 normal;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public readonly BoneWeight boneWeight;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int hash;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static float minVal;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private static float maxVal;

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0xA8A200", Offset = "0xA8A200", VA = "0xA8A200")]
			public Vertex(Color color, Vector3 position, Vector2 uv, Vector2 uv2, Vector2 uv3, Vector2 uv4, Vector4 tangent, Vector3 normal, BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0xC131D8", Offset = "0xC131D8", VA = "0xC131D8")]
			private static uint CombineHash(uint a, uint b)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xC131F0", Offset = "0xC131F0", VA = "0xC131F0")]
			private static uint CombineHash(uint a, uint b, uint c)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xC13218", Offset = "0xC13218", VA = "0xC13218")]
			private static uint CombineHash(uint a, uint b, uint c, uint d)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xC1324C", Offset = "0xC1324C", VA = "0xC1324C")]
			private static uint CombineHash(uint a, uint b, uint c, uint d, uint e, uint f, uint g, uint h)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xC132B0", Offset = "0xC132B0", VA = "0xC132B0")]
			private static uint CombineHash(uint a, uint b, uint c, uint d, uint e, uint f, uint g, uint h, uint i)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xC13324", Offset = "0xC13324", VA = "0xC13324")]
			private static uint GetHash(float f)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E5")]
			[Address(RVA = "0xC133A8", Offset = "0xC133A8", VA = "0xC133A8")]
			private static uint GetHash(Color f)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xC13488", Offset = "0xC13488", VA = "0xC13488")]
			private static uint GetHash(Vector4 f)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E7")]
			[Address(RVA = "0xC13568", Offset = "0xC13568", VA = "0xC13568")]
			private static uint GetHash(Vector3 f)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xC13624", Offset = "0xC13624", VA = "0xC13624")]
			private static uint GetHash(Vector2 f)
			{
				return default(uint);
			}

			[Token(Token = "0x60023E9")]
			[Address(RVA = "0xC136B8", Offset = "0xC136B8", VA = "0xC136B8")]
			private static uint GetHash(BoneWeight f)
			{
				return default(uint);
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0xC1382C", Offset = "0xC1382C", VA = "0xC1382C")]
			private static uint GetHash(Vertex vert)
			{
				return default(uint);
			}

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0xA8A274", Offset = "0xA8A274", VA = "0xA8A274", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xA8A27C", Offset = "0xA8A27C", VA = "0xA8A27C", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E0490", Offset = "0x9E0490")]
		private struct VertexExtractor
		{
			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Color[] colors;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly Vector3[] vertices;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Vector2[] uv;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly Vector2[] uv2;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly Vector2[] uv3;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Vector2[] uv4;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public readonly Vector4[] tangents;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public readonly Vector3[] normals;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public readonly BoneWeight[] boneWeights;

			[Token(Token = "0x17000391")]
			public Vertex Item
			{
				[Token(Token = "0x60023F3")]
				[Address(RVA = "0xA8A2D0", Offset = "0xA8A2D0", VA = "0xA8A2D0")]
				get
				{
					return default(Vertex);
				}
			}

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0xA8A284", Offset = "0xA8A284", VA = "0xA8A284")]
			public VertexExtractor(Mesh mesh, Matrix4x4 mtx)
			{
			}

			[Token(Token = "0x60023EF")]
			[Address(RVA = "0xC14488", Offset = "0xC14488", VA = "0xC14488")]
			private static Vector3[] TransformVectors(Vector3[] normals, Matrix4x4 mtx)
			{
				return null;
			}

			[Token(Token = "0x60023F0")]
			[Address(RVA = "0xC14200", Offset = "0xC14200", VA = "0xC14200")]
			private static Vector3[] TransformPoints(Vector3[] vertices, Matrix4x4 mtx)
			{
				return null;
			}

			[Token(Token = "0x60023F1")]
			[Address(RVA = "0xC14324", Offset = "0xC14324", VA = "0xC14324")]
			private static Vector4[] TransformVectors(Vector4[] vertices, Matrix4x4 mtx)
			{
				return null;
			}

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0xA8A2C8", Offset = "0xA8A2C8", VA = "0xA8A2C8")]
			public Vertex Get(int idx)
			{
				return default(Vertex);
			}
		}

		[Serializable]
		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E04C8", Offset = "0x9E04C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vertex, Vector3> <>9__16_0;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Vertex, BoneWeight> <>9__16_1;

			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Vertex, Vector3> <>9__16_2;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Vertex, Vector4> <>9__16_3;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Vertex, Vector2> <>9__16_4;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Vertex, Vector2> <>9__16_5;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Vertex, Vector2> <>9__16_6;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<Vertex, Vector2> <>9__16_7;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<Vertex, Color> <>9__16_8;

			[Token(Token = "0x60023F5")]
			[Address(RVA = "0xC12DD4", Offset = "0xC12DD4", VA = "0xC12DD4")]
			public <>c()
			{
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0xC12DDC", Offset = "0xC12DDC", VA = "0xC12DDC")]
			internal Vector3 <UpdateMesh>b__16_0(Vertex v)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60023F7")]
			[Address(RVA = "0xC12DE8", Offset = "0xC12DE8", VA = "0xC12DE8")]
			internal BoneWeight <UpdateMesh>b__16_1(Vertex v)
			{
				return default(BoneWeight);
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0xC12E24", Offset = "0xC12E24", VA = "0xC12E24")]
			internal Vector3 <UpdateMesh>b__16_2(Vertex v)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60023F9")]
			[Address(RVA = "0xC12E30", Offset = "0xC12E30", VA = "0xC12E30")]
			internal Vector4 <UpdateMesh>b__16_3(Vertex v)
			{
				return default(Vector4);
			}

			[Token(Token = "0x60023FA")]
			[Address(RVA = "0xC12E3C", Offset = "0xC12E3C", VA = "0xC12E3C")]
			internal Vector2 <UpdateMesh>b__16_4(Vertex v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023FB")]
			[Address(RVA = "0xC12E44", Offset = "0xC12E44", VA = "0xC12E44")]
			internal Vector2 <UpdateMesh>b__16_5(Vertex v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023FC")]
			[Address(RVA = "0xC12E4C", Offset = "0xC12E4C", VA = "0xC12E4C")]
			internal Vector2 <UpdateMesh>b__16_6(Vertex v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023FD")]
			[Address(RVA = "0xC12E54", Offset = "0xC12E54", VA = "0xC12E54")]
			internal Vector2 <UpdateMesh>b__16_7(Vertex v)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023FE")]
			[Address(RVA = "0xC12E5C", Offset = "0xC12E5C", VA = "0xC12E5C")]
			internal Color <UpdateMesh>b__16_8(Vertex v)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E04D8", Offset = "0x9E04D8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<int, KeyValuePair<int, Matrix4x4>> submeshRemapping;

			[Token(Token = "0x60023FF")]
			[Address(RVA = "0xC12E68", Offset = "0xC12E68", VA = "0xC12E68")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002400")]
			[Address(RVA = "0xC12E70", Offset = "0xC12E70", VA = "0xC12E70")]
			internal SubMeshRenderer.SubMeshPass <Duplicate>b__0(Material mat, int idx)
			{
				return default(SubMeshRenderer.SubMeshPass);
			}
		}

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E86D4", Offset = "0x9E86D4")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CacheItem[] splitInstances;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFeatures features;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Vertex, int> vertLookup;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vertex> verts;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<IndexBuffer> indexBuffers;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Bounds bounds;

		[Token(Token = "0x170002BE")]
		public Mesh mesh
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x1910010", Offset = "0x1910010", VA = "0x1910010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED9FC", Offset = "0x9ED9FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x1910018", Offset = "0x1910018", VA = "0x1910018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDA0C", Offset = "0x9EDA0C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x1910020", Offset = "0x1910020", VA = "0x1910020")]
		private static bool NotEmpty(Array arr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x1910044", Offset = "0x1910044", VA = "0x1910044")]
		private Dictionary<int, KeyValuePair<int, Matrix4x4>> AppendMesh(MeshFilter applyTo)
		{
			return null;
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x1910A48", Offset = "0x1910A48", VA = "0x1910A48")]
		private void UpdateMesh()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x190F384", Offset = "0x190F384", VA = "0x190F384")]
		public void FinalizeMesh()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x190FCB8", Offset = "0x190FCB8", VA = "0x190FCB8")]
		internal GameObject Duplicate(Transform parent, GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x190F324", Offset = "0x190F324", VA = "0x190F324")]
		public OptimizedSplitMesh()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000463")]
	private struct SerializedCache
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CacheItem[] slicedInstances;
	}

	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFDE4", Offset = "0x9DFDE4")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OptimizedSplitMesh cachedObjects;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PreslicedFruitCache <>4__this;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<GameObject, GameObject> <>9__0;

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x190F31C", Offset = "0x190F31C", VA = "0x190F31C")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x190FC5C", Offset = "0x190FC5C", VA = "0x190FC5C")]
		internal GameObject <AddFruitCache>b__0(GameObject obj)
		{
			return null;
		}
	}

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, OptimizedSplitMesh> m_cachedFruit;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SerializedCache[] m_serializedCache;

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x190EF24", Offset = "0x190EF24", VA = "0x190EF24")]
	public void AddFruitCache(MeshSlicer.FruitSplitCache cache)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x190F3A8", Offset = "0x190F3A8", VA = "0x190F3A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x190F8B8", Offset = "0x190F8B8", VA = "0x190F8B8", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x190FABC", Offset = "0x190FABC", VA = "0x190FABC", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x190FBEC", Offset = "0x190FBEC", VA = "0x190FBEC")]
	public PreslicedFruitCache()
	{
	}
}
[Token(Token = "0x2000129")]
public class ProfileManager : MonoSingleton<ProfileManager>
{
	[Serializable]
	[Token(Token = "0x2000465")]
	public struct BladeAchievement
	{
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong itemID;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string achievementName;
	}

	[Token(Token = "0x2000466")]
	public delegate void RequestResponse(bool success, WWW requestObject);

	[Token(Token = "0x2000467")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFDF4", Offset = "0x9DFDF4")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProfileManager <>4__this;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<PlatformProvider>.Enumerator <>7__wrap1;

		[Token(Token = "0x170002BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xC1621C", Offset = "0xC1621C", VA = "0xC1621C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0xC1628C", Offset = "0xC1628C", VA = "0xC1628C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xC14940", Offset = "0xC14940", VA = "0xC14940")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xC15E90", Offset = "0xC15E90", VA = "0xC15E90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xC15F04", Offset = "0xC15F04", VA = "0xC15F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xC15EAC", Offset = "0xC15EAC", VA = "0xC15EAC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xC16224", Offset = "0xC16224", VA = "0xC16224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE04", Offset = "0x9DFE04")]
	private sealed class <RequestRoutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RequestResponse responseCallback;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <sendRequest>5__2;

		[Token(Token = "0x170002C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xC15E18", Offset = "0xC15E18", VA = "0xC15E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xC15E88", Offset = "0xC15E88", VA = "0xC15E88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xC15788", Offset = "0xC15788", VA = "0xC15788")]
		[DebuggerHidden]
		public <RequestRoutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xC1584C", Offset = "0xC1584C", VA = "0xC1584C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xC15850", Offset = "0xC15850", VA = "0xC15850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xC15E20", Offset = "0xC15E20", VA = "0xC15E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AchievementsData m_achievementsData;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PlatformProvider> m_providers;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlatformProvider m_mainProvider;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlatformProvider m_localProvider;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xC148CC", Offset = "0xC148CC", VA = "0xC148CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA030", Offset = "0x9EA030")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xC1496C", Offset = "0xC1496C", VA = "0xC1496C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xC14A98", Offset = "0xC14A98", VA = "0xC14A98")]
	public int GetBuildId()
	{
		return default(int);
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xC14AA0", Offset = "0xC14AA0", VA = "0xC14AA0")]
	public void InitProviders()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xC14C34", Offset = "0xC14C34", VA = "0xC14C34")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xC14D64", Offset = "0xC14D64", VA = "0xC14D64")]
	public void Save()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xC14EA8", Offset = "0xC14EA8", VA = "0xC14EA8")]
	public PlatformProvider GetMainProvider()
	{
		return null;
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xC14F28", Offset = "0xC14F28", VA = "0xC14F28")]
	public bool HasMainProvider()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xC14F38", Offset = "0xC14F38", VA = "0xC14F38")]
	public PlatformProvider GetLocalProvider()
	{
		return null;
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xC14F40", Offset = "0xC14F40", VA = "0xC14F40")]
	public void CheckForTimedUnlocks()
	{
	}

	[Token(Token = "0x60007B1")]
	public Leaderboard GetLeaderboard<T>(string name)
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xC15240", Offset = "0xC15240", VA = "0xC15240")]
	public void UnlockAchievement(string name)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xC15390", Offset = "0xC15390", VA = "0xC15390")]
	public float GetAchievmentProgress(string name)
	{
		return default(float);
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xC15404", Offset = "0xC15404", VA = "0xC15404")]
	public bool IsAchievementUnlocked(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xC150E4", Offset = "0xC150E4", VA = "0xC150E4")]
	public void SetStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xC15474", Offset = "0xC15474", VA = "0xC15474")]
	public void IncrementStat(StatsId key, int val)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xC155D0", Offset = "0xC155D0", VA = "0xC155D0")]
	public int GetStatInt(StatsId key, int def = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xC15654", Offset = "0xC15654", VA = "0xC15654")]
	public string GetMainProfileName()
	{
		return null;
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xC1568C", Offset = "0xC1568C", VA = "0xC1568C")]
	public string GetMainProfileId()
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xC156C4", Offset = "0xC156C4", VA = "0xC156C4")]
	public void SendHTTPRequest(string url, RequestResponse responseCallback)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xC156F0", Offset = "0xC156F0", VA = "0xC156F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA094", Offset = "0x9EA094")]
	private IEnumerator RequestRoutine(string url, RequestResponse responseCallback)
	{
		return null;
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xC157B4", Offset = "0xC157B4", VA = "0xC157B4")]
	public ProfileManager()
	{
	}
}
[Token(Token = "0x200012A")]
public class ReflectionProbeControl : MonoBehaviour
{
	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe m_probe;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_rendered;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_doRender;

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xC16AC4", Offset = "0xC16AC4", VA = "0xC16AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xC16B1C", Offset = "0xC16B1C", VA = "0xC16B1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xC16BD4", Offset = "0xC16BD4", VA = "0xC16BD4")]
	public ReflectionProbeControl()
	{
	}
}
[Token(Token = "0x200012B")]
public class RemoveFromDemo : MonoBehaviour
{
	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xC1799C", Offset = "0xC1799C", VA = "0xC1799C")]
	public RemoveFromDemo()
	{
	}
}
[Token(Token = "0x200012C")]
public class RemoveFromOculus : MonoBehaviour
{
	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xC179A4", Offset = "0xC179A4", VA = "0xC179A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xC17A20", Offset = "0xC17A20", VA = "0xC17A20")]
	public RemoveFromOculus()
	{
	}
}
[Token(Token = "0x200012D")]
public class RemoveFromSteamWorks : MonoBehaviour
{
	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xC17A28", Offset = "0xC17A28", VA = "0xC17A28")]
	public RemoveFromSteamWorks()
	{
	}
}
[Token(Token = "0x200012E")]
public class RemoveFromViveport : MonoBehaviour
{
	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xC17A30", Offset = "0xC17A30", VA = "0xC17A30")]
	public RemoveFromViveport()
	{
	}
}
[Token(Token = "0x200012F")]
public class ResultsScreenArcade : MonoBehaviour
{
	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation m_animation;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BonusDisplay m_bonus1;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BonusDisplay m_bonus2;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BonusDisplay m_bonus3;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI m_testTotalPoints;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameMode m_gameMode;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_totalPoints;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xC17A38", Offset = "0xC17A38", VA = "0xC17A38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xC17ACC", Offset = "0xC17ACC", VA = "0xC17ACC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xC17AD0", Offset = "0xC17AD0", VA = "0xC17AD0")]
	public int ShowResultsScreen(GameMode mode)
	{
		return default(int);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xC17DA8", Offset = "0xC17DA8", VA = "0xC17DA8")]
	public void CloseResultsScreen()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xC17DE0", Offset = "0xC17DE0", VA = "0xC17DE0")]
	public void BonusFinishedAnimating(int number)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xC17E90", Offset = "0xC17E90", VA = "0xC17E90")]
	public void ApplyTotalToScore()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xC180D0", Offset = "0xC180D0", VA = "0xC180D0")]
	public ResultsScreenArcade()
	{
	}
}
[Token(Token = "0x2000130")]
public class ScaleUp : MonoBehaviour
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve scale;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float duration;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[NonSerialized]
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasFinished;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startScale;

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xC1CA08", Offset = "0xC1CA08", VA = "0xC1CA08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xC1CA4C", Offset = "0xC1CA4C", VA = "0xC1CA4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xC1CB70", Offset = "0xC1CB70", VA = "0xC1CB70")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xC1CCD8", Offset = "0xC1CCD8", VA = "0xC1CCD8")]
	public ScaleUp()
	{
	}
}
[Token(Token = "0x2000131")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000469")]
	private enum States
	{
		[Token(Token = "0x4001870")]
		Init,
		[Token(Token = "0x4001871")]
		ConfigSetup,
		[Token(Token = "0x4001872")]
		Warmup,
		[Token(Token = "0x4001873")]
		FadeIn,
		[Token(Token = "0x4001874")]
		StartLoad,
		[Token(Token = "0x4001875")]
		WaitForLoad,
		[Token(Token = "0x4001876")]
		Fadeout,
		[Token(Token = "0x4001877")]
		ActivateScene
	}

	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE14", Offset = "0x9DFE14")]
	private sealed class <Start>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x170002C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xC1E034", Offset = "0xC1E034", VA = "0xC1E034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xC1E0A4", Offset = "0xC1E0A4", VA = "0xC1E0A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xC1CE5C", Offset = "0xC1CE5C", VA = "0xC1CE5C")]
		[DebuggerHidden]
		public <Start>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xC1DE40", Offset = "0xC1DE40", VA = "0xC1DE40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xC1DE44", Offset = "0xC1DE44", VA = "0xC1DE44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xC1E03C", Offset = "0xC1E03C", VA = "0xC1E03C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE24", Offset = "0x9DFE24")]
	private sealed class <>c
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Blade> <>9__24_0;

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xC1DA14", Offset = "0xC1DA14", VA = "0xC1DA14")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xC1DA1C", Offset = "0xC1DA1C", VA = "0xC1DA1C")]
		internal void <LoadContent>b__24_0(Blade result)
		{
		}
	}

	[Token(Token = "0x200046C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE34", Offset = "0x9DFE34")]
	private sealed class <LoadContent>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InventoryService <inventory>5__2;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BladeConfig[] <>7__wrap2;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap3;

		[Token(Token = "0x170002C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xC1DDC8", Offset = "0xC1DDC8", VA = "0xC1DDC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xC1DE38", Offset = "0xC1DE38", VA = "0xC1DE38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xC1D3CC", Offset = "0xC1D3CC", VA = "0xC1D3CC")]
		[DebuggerHidden]
		public <LoadContent>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xC1DAC0", Offset = "0xC1DAC0", VA = "0xC1DAC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xC1DAC4", Offset = "0xC1DAC4", VA = "0xC1DAC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xC1DDD0", Offset = "0xC1DDD0", VA = "0xC1DDD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetVariationAddressable m_systemSet;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShaderVariantCollection m_shaderVariantCollection;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ValueVariation[] m_sceneToLoad;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Fader[] m_faders;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ProfileManager m_profileManagerPrefab;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ProfileManager m_profileManagerInstance;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AsyncOperation m_operation;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private States m_currentState;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int m_frameCounter;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string m_sceneNameToLoad;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_systemSetLoaded;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30CC", Offset = "0x9E30CC")]
	private VRSet <SystemSet>k__BackingField;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ApplicationLoad m_evtLoad;

	[Token(Token = "0x17000052")]
	public VRSet SystemSet
	{
		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xC1CD58", Offset = "0xC1CD58", VA = "0xC1CD58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA0F8", Offset = "0x9EA0F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xC1CD60", Offset = "0xC1CD60", VA = "0xC1CD60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA108", Offset = "0x9EA108")]
		private set
		{
		}
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xC1CD68", Offset = "0xC1CD68", VA = "0xC1CD68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xC1CDE8", Offset = "0xC1CDE8", VA = "0xC1CDE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA118", Offset = "0x9EA118")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xC1CE88", Offset = "0xC1CE88", VA = "0xC1CE88")]
	private void OnUpdateInit()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xC1CEA0", Offset = "0xC1CEA0", VA = "0xC1CEA0")]
	private void SetupConfig()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xC1CF90", Offset = "0xC1CF90", VA = "0xC1CF90")]
	private void OnUpdateWarmup()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xC1D048", Offset = "0xC1D048", VA = "0xC1D048")]
	private void OnUpdateFadeIn()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xC1D308", Offset = "0xC1D308", VA = "0xC1D308")]
	private void OnUpdateStartLoad()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xC1D358", Offset = "0xC1D358", VA = "0xC1D358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA17C", Offset = "0x9EA17C")]
	private IEnumerator LoadContent()
	{
		return null;
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xC1D3F8", Offset = "0xC1D3F8", VA = "0xC1D3F8")]
	private void OnUpdateWaitForLoad()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xC1D5AC", Offset = "0xC1D5AC", VA = "0xC1D5AC")]
	private void OnUpdateFadeOut()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xC1D7BC", Offset = "0xC1D7BC", VA = "0xC1D7BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xC1D808", Offset = "0xC1D808", VA = "0xC1D808")]
	public SceneLoader()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xC1D810", Offset = "0xC1D810", VA = "0xC1D810")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA1E0", Offset = "0x9EA1E0")]
	private void <Start>b__18_0(GameObject result)
	{
	}
}
[Token(Token = "0x2000132")]
public class Score : MonoBehaviour
{
	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30DC", Offset = "0x9E30DC")]
	private int <CurrentScore>k__BackingField;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30EC", Offset = "0x9E30EC")]
	private float <DisplayedScore>k__BackingField;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_scoreTickSpeed;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public TextMesh m_textMesh;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public TextMeshPro m_textMeshPro;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public TextMeshProUGUI m_textMeshProUGUI;

	[Token(Token = "0x17000053")]
	public int CurrentScore
	{
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xC1E0AC", Offset = "0xC1E0AC", VA = "0xC1E0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA1F0", Offset = "0x9EA1F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xC1E0B4", Offset = "0xC1E0B4", VA = "0xC1E0B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA200", Offset = "0x9EA200")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float DisplayedScore
	{
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xC1E0BC", Offset = "0xC1E0BC", VA = "0xC1E0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA210", Offset = "0x9EA210")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xC1E0C4", Offset = "0xC1E0C4", VA = "0xC1E0C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA220", Offset = "0x9EA220")]
		set
		{
		}
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xC1E0CC", Offset = "0xC1E0CC", VA = "0xC1E0CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xC1E1F8", Offset = "0xC1E1F8", VA = "0xC1E1F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xC1E3B8", Offset = "0xC1E3B8", VA = "0xC1E3B8")]
	public Score()
	{
	}
}
[Token(Token = "0x2000133")]
public class ScoreboardManager : MonoSingleton<ScoreboardManager>
{
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Score m_currentScore;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Score m_bestScore;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Timer m_timer;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private DoubleBananaBoard m_double;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_ScoreBoard;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject m_TimerBoard;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_doubleBoard;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_newBestParticleLocation;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xC1E3C8", Offset = "0xC1E3C8", VA = "0xC1E3C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xC1E444", Offset = "0xC1E444", VA = "0xC1E444")]
	public Score GetScore()
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xC1E4F4", Offset = "0xC1E4F4", VA = "0xC1E4F4")]
	public Score GetBestScore()
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xC1E5A4", Offset = "0xC1E5A4", VA = "0xC1E5A4")]
	public Timer GetTimer()
	{
		return null;
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xC1E654", Offset = "0xC1E654", VA = "0xC1E654")]
	public DoubleBananaBoard GetDoubleBoard()
	{
		return null;
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xC1E704", Offset = "0xC1E704", VA = "0xC1E704")]
	public void ShowScoreAndTimer()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xC1E75C", Offset = "0xC1E75C", VA = "0xC1E75C")]
	public void ShowScoreOnly()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xC1E3CC", Offset = "0xC1E3CC", VA = "0xC1E3CC")]
	public void HideBoard()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xC1E790", Offset = "0xC1E790", VA = "0xC1E790")]
	public void SetBestScore(int score, bool snap = false)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xC1E7EC", Offset = "0xC1E7EC", VA = "0xC1E7EC")]
	public void SetScore(int score, bool snap = false)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xC17FB4", Offset = "0xC17FB4", VA = "0xC17FB4")]
	public void AddScore(int val, bool snap = false)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xC1E8E4", Offset = "0xC1E8E4", VA = "0xC1E8E4")]
	public void FireNewBestFireworks()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xC1EBA8", Offset = "0xC1EBA8", VA = "0xC1EBA8")]
	public ScoreboardManager()
	{
	}
}
[Token(Token = "0x2000134")]
public class ScrollManager : MonoSingleton<ScrollManager>
{
	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_displayParent;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_isDisplayed;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator m_animScroll;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator m_animParent;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSound m_soundDisplay;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSound m_soundOpen;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSound m_soundClose;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_nameEntry;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_activeDisplayObject;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject m_prefabeToLoad;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xC1EC18", Offset = "0xC1EC18", VA = "0xC1EC18")]
	public GameObject ShowInformation(GameObject displayPrefab)
	{
		return null;
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xC1F128", Offset = "0xC1F128", VA = "0xC1F128")]
	public void CloseDisplay()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xC1EF38", Offset = "0xC1EF38", VA = "0xC1EF38")]
	private void Display()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xC1F130", Offset = "0xC1F130", VA = "0xC1F130")]
	private void OpenScroll()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xC1F034", Offset = "0xC1F034", VA = "0xC1F034")]
	private void CloseScroll()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xC1F224", Offset = "0xC1F224", VA = "0xC1F224")]
	private void Hide()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xC1F31C", Offset = "0xC1F31C", VA = "0xC1F31C")]
	public void CallbackOpenScroll()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xC1F380", Offset = "0xC1F380", VA = "0xC1F380")]
	public void CallbackCloseScroll()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xC1F3E4", Offset = "0xC1F3E4", VA = "0xC1F3E4")]
	public void CallbackOpenIdle()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xC1F44C", Offset = "0xC1F44C", VA = "0xC1F44C")]
	public void CallbackClosedIdle()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xC1F560", Offset = "0xC1F560", VA = "0xC1F560")]
	public ScrollManager()
	{
	}
}
[Token(Token = "0x2000135")]
public class ScrollViewPageScroller : MonoBehaviour
{
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE44", Offset = "0x9DFE44")]
	private sealed class <LerpToNewPosition>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScrollViewPageScroller <>4__this;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 positionToReach;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startPosition>5__3;

		[Token(Token = "0x170002C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0xC204F8", Offset = "0xC204F8", VA = "0xC204F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xC20568", Offset = "0xC20568", VA = "0xC20568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xC1FEB4", Offset = "0xC1FEB4", VA = "0xC1FEB4")]
		[DebuggerHidden]
		public <LerpToNewPosition>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xC20284", Offset = "0xC20284", VA = "0xC20284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xC20288", Offset = "0xC20288", VA = "0xC20288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xC20500", Offset = "0xC20500", VA = "0xC20500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE54", Offset = "0x9DFE54")]
	private sealed class <HighlightArrow>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image image;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScrollViewPageScroller <>4__this;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x170002C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xC2020C", Offset = "0xC2020C", VA = "0xC2020C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xC2027C", Offset = "0xC2027C", VA = "0xC2027C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xC1FF38", Offset = "0xC1FF38", VA = "0xC1FF38")]
		[DebuggerHidden]
		public <HighlightArrow>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xC20034", Offset = "0xC20034", VA = "0xC20034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xC20038", Offset = "0xC20038", VA = "0xC20038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xC20214", Offset = "0xC20214", VA = "0xC20214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E31AC", Offset = "0x9E31AC")]
	[SerializeField]
	private RectTransform m_contentRect;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image m_rightArrow;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image m_leftArrow;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSound m_scrollingSound;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3228", Offset = "0x9E3228")]
	[SerializeField]
	private float m_highlightDuration;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_timeToScroll;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve m_scrollingLerpCurve;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color m_highlightingColor;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ScrollRect m_scrollRect;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_amountToScrollForReachingNextPage;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool m_initialised;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_contentEndingPosition;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator m_rightArrowAnimator;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator m_leftArrowAnimator;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_canScroll;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Disappear;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int Appear;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xC1F5D0", Offset = "0xC1F5D0", VA = "0xC1F5D0")]
	public void Initialise()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xC1F9A8", Offset = "0xC1F9A8", VA = "0xC1F9A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xC1F9AC", Offset = "0xC1F9AC", VA = "0xC1F9AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xC1FA40", Offset = "0xC1FA40", VA = "0xC1FA40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xC1FAD4", Offset = "0xC1FAD4", VA = "0xC1FAD4")]
	private void PlayerInput(Hand hand, Hand.InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xC1FBCC", Offset = "0xC1FBCC", VA = "0xC1FBCC")]
	private void Scroll(int direction)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xC1FE08", Offset = "0xC1FE08", VA = "0xC1FE08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA230", Offset = "0x9EA230")]
	private IEnumerator LerpToNewPosition(Vector3 positionToReach)
	{
		return null;
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xC1FEE0", Offset = "0xC1FEE0", VA = "0xC1FEE0")]
	public void SetHorizontalScrollingValue(float horizontalValue)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xC1FD70", Offset = "0xC1FD70", VA = "0xC1FD70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA294", Offset = "0x9EA294")]
	private IEnumerator HighlightArrow(Image image)
	{
		return null;
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xC1F788", Offset = "0xC1F788", VA = "0xC1F788")]
	private void UpdateArrowVisibility(float xPosition)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xC1FF64", Offset = "0xC1FF64", VA = "0xC1FF64")]
	public ScrollViewPageScroller()
	{
	}
}
[Token(Token = "0x2000136")]
public class SetUpAchievementBoard : MonoBehaviour
{
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE64", Offset = "0x9DFE64")]
	private sealed class <SetScrollingToZero>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetUpAchievementBoard <>4__this;

		[Token(Token = "0x170002CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xC21348", Offset = "0xC21348", VA = "0xC21348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xC213B8", Offset = "0xC213B8", VA = "0xC213B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xC21128", Offset = "0xC21128", VA = "0xC21128")]
		[DebuggerHidden]
		public <SetScrollingToZero>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xC2115C", Offset = "0xC2115C", VA = "0xC2115C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xC21160", Offset = "0xC21160", VA = "0xC21160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xC21350", Offset = "0xC21350", VA = "0xC21350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AchievementsData m_achievementData;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_achievementPrefab;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_parentOfAchievements;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ScrollViewPageScroller m_achievementMenuScrolling;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AchievementPanelSetUp[] m_achievementStatus;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xC20DEC", Offset = "0xC20DEC", VA = "0xC20DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xC20DF0", Offset = "0xC20DF0", VA = "0xC20DF0")]
	private void SetUpAllAchievement()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xC20F14", Offset = "0xC20F14", VA = "0xC20F14")]
	private void CreateAllAchievements()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xC210B4", Offset = "0xC210B4", VA = "0xC210B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA2F8", Offset = "0x9EA2F8")]
	private IEnumerator SetScrollingToZero()
	{
		return null;
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xC21154", Offset = "0xC21154", VA = "0xC21154")]
	public SetUpAchievementBoard()
	{
	}
}
[Token(Token = "0x2000137")]
public class SliceObject : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBeforeRightCanSlice;

	[NonSerialized]
	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayBeforeLeftCanSlice;

	[NonSerialized]
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody m_rigidBody;

	[NonSerialized]
	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Bomb m_bomb;

	[NonSerialized]
	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Fruit m_fruit;

	[NonSerialized]
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MenuFruit m_menu;

	[NonSerialized]
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SliceableProp m_prop;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider m_mainTrigger;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float upThrust;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float currentThrust;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Collider m_collider;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool m_skewered;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	protected bool m_sliced;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	protected bool m_beenDropped;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	protected bool m_canBeUsed;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected bool m_sliceQueued;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector3 m_lastVelocity;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected Vector3 m_lastAngVelocity;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 m_lastPosition;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Quaternion m_lastRotation;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected ParticleSystem[] m_particles;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Collider[] m_colliders;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected bool isDelayedRight;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	protected bool isDelayedLeft;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected BasketEnemy m_enemyFired;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int m_waveID;

	[Token(Token = "0x14000012")]
	public static event Action<SliceObject> OnSliceObjectActivated
	{
		[Token(Token = "0x600080F")]
		[Address(RVA = "0xC2AAC0", Offset = "0xC2AAC0", VA = "0xC2AAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA35C", Offset = "0x9EA35C")]
		add
		{
		}
		[Token(Token = "0x6000810")]
		[Address(RVA = "0xC2ABBC", Offset = "0xC2ABBC", VA = "0xC2ABBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA36C", Offset = "0x9EA36C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action<SliceObject> OnSliceObjectDeactivated
	{
		[Token(Token = "0x6000811")]
		[Address(RVA = "0xC2ACB8", Offset = "0xC2ACB8", VA = "0xC2ACB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA37C", Offset = "0x9EA37C")]
		add
		{
		}
		[Token(Token = "0x6000812")]
		[Address(RVA = "0xC2ADB8", Offset = "0xC2ADB8", VA = "0xC2ADB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA38C", Offset = "0x9EA38C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xC2AEB8", Offset = "0xC2AEB8", VA = "0xC2AEB8")]
	public int GetWaveID()
	{
		return default(int);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xC2AEC0", Offset = "0xC2AEC0", VA = "0xC2AEC0")]
	public BasketEnemy GetFiredEnemy()
	{
		return null;
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xC2AEC8", Offset = "0xC2AEC8", VA = "0xC2AEC8")]
	public void SetWaveID(int id, [Optional] BasketEnemy enemy)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xC2AED4", Offset = "0xC2AED4", VA = "0xC2AED4")]
	public float GetCurThrust()
	{
		return default(float);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xC2AEDC", Offset = "0xC2AEDC", VA = "0xC2AEDC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xC2B038", Offset = "0xC2B038", VA = "0xC2B038", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xC2B1E8", Offset = "0xC2B1E8", VA = "0xC2B1E8", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xC2B2F0", Offset = "0xC2B2F0", VA = "0xC2B2F0", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xC2B568", Offset = "0xC2B568", VA = "0xC2B568", Slot = "8")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xC2B638", Offset = "0xC2B638", VA = "0xC2B638", Slot = "9")]
	public virtual void Recycle()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xC2B6C8", Offset = "0xC2B6C8", VA = "0xC2B6C8")]
	public void SetSliceDelay(float delay, bool isRightBlade)
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xC2B6DC", Offset = "0xC2B6DC", VA = "0xC2B6DC")]
	public bool CanBeUsed()
	{
		return default(bool);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xC2B6E4", Offset = "0xC2B6E4", VA = "0xC2B6E4")]
	public bool IsFruit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xC2B754", Offset = "0xC2B754", VA = "0xC2B754")]
	public bool IsBomb()
	{
		return default(bool);
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xC2B7C4", Offset = "0xC2B7C4", VA = "0xC2B7C4")]
	public bool IsProp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xC2B834", Offset = "0xC2B834", VA = "0xC2B834")]
	public bool IsMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xC2B8A4", Offset = "0xC2B8A4", VA = "0xC2B8A4")]
	public Plane GetBladeSlicePlane(Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, out Vector3 right)
	{
		return default(Plane);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xC2BAFC", Offset = "0xC2BAFC", VA = "0xC2BAFC")]
	public bool IsDelayed(bool isRightBlade)
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xC2B694", Offset = "0xC2B694", VA = "0xC2B694")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xC2BB34", Offset = "0xC2BB34", VA = "0xC2BB34")]
	public void SetCollisions(bool enabled)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xC2BB6C", Offset = "0xC2BB6C", VA = "0xC2BB6C", Slot = "10")]
	public virtual bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xC2BB78", Offset = "0xC2BB78", VA = "0xC2BB78", Slot = "11")]
	public virtual bool CanBeSliced()
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xC2BBC8", Offset = "0xC2BBC8", VA = "0xC2BBC8", Slot = "12")]
	public virtual bool IsSkewered()
	{
		return default(bool);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC2BBD0", Offset = "0xC2BBD0", VA = "0xC2BBD0", Slot = "13")]
	public virtual bool HasBeenDropped()
	{
		return default(bool);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xC2BBD8", Offset = "0xC2BBD8", VA = "0xC2BBD8", Slot = "14")]
	public virtual bool IsSliceQueued()
	{
		return default(bool);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC2BBE0", Offset = "0xC2BBE0", VA = "0xC2BBE0", Slot = "15")]
	public virtual bool HasBeenSliced()
	{
		return default(bool);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC2BBE8", Offset = "0xC2BBE8", VA = "0xC2BBE8", Slot = "16")]
	public virtual bool HasBeenDroppedOrSliced()
	{
		return default(bool);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC2BC34", Offset = "0xC2BC34", VA = "0xC2BC34", Slot = "17")]
	public virtual void IgnoreCollisions(Blade blade, bool ignore = true)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC2BD2C", Offset = "0xC2BD2C", VA = "0xC2BD2C", Slot = "18")]
	public virtual void IgnoreCollisions(Collider other, bool ignore = true)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC2BF50", Offset = "0xC2BF50", VA = "0xC2BF50", Slot = "19")]
	public virtual void Dropped()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC2BF54", Offset = "0xC2BF54", VA = "0xC2BF54")]
	public void MoveBack()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC2C080", Offset = "0xC2C080", VA = "0xC2C080")]
	public Vector3 GetLastVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC2C08C", Offset = "0xC2C08C", VA = "0xC2C08C")]
	public void SetLastVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC2C098", Offset = "0xC2C098", VA = "0xC2C098")]
	protected void CallOnSliceObjectActivatedEvent()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC2C10C", Offset = "0xC2C10C", VA = "0xC2C10C")]
	protected void CallOnSliceObjectDeactivatedEvent()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC2C180", Offset = "0xC2C180", VA = "0xC2C180")]
	public SliceObject()
	{
	}
}
[Token(Token = "0x2000138")]
public class SpawnPoint : MonoBehaviour
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBetweenSpawn;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float arcRange;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float arcDistance;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float thurst;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float forwardAngle;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 bombAngle;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float angleRange;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float dx;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speed;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected ObjectPooler m_fruitPooler;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected ObjectPooler m_bombPooler;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected ObjectPooler m_specialPooler;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject anchor;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float m_minThrustAdjust;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected float m_maxThrustAdjust;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int spawnCount;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3304", Offset = "0x9E3304")]
	private bool <IsControlledByWaveManager>k__BackingField;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool m_useInitialPositionAsOffset;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 m_positionOffset;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool m_spawnFX;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CannonSpawnFX m_spawnFXContainer;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TowerSpawnFX m_spawnTowerFXContainer;

	[Token(Token = "0x17000055")]
	public bool IsControlledByWaveManager
	{
		[Token(Token = "0x6000837")]
		[Address(RVA = "0xB7CCD0", Offset = "0xB7CCD0", VA = "0xB7CCD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA39C", Offset = "0x9EA39C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000838")]
		[Address(RVA = "0xB7CCD8", Offset = "0xB7CCD8", VA = "0xB7CCD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA3AC", Offset = "0x9EA3AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xB7CCE4", Offset = "0xB7CCE4", VA = "0xB7CCE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xB7CD28", Offset = "0xB7CD28", VA = "0xB7CD28")]
	private void Start()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xB7CD58", Offset = "0xB7CD58", VA = "0xB7CD58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xB7CE40", Offset = "0xB7CE40", VA = "0xB7CE40")]
	public GameObject SpawnEntity(float delta, string entityId, ObjectPooler pooler, bool disableThurstRandom = false)
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xB7D664", Offset = "0xB7D664", VA = "0xB7D664")]
	public GameObject SpawnFruit(float delta, string fruitId, bool disableThurstRandom = false)
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xB7E318", Offset = "0xB7E318", VA = "0xB7E318")]
	public GameObject SpawnPeach(float delta, string peachId, bool disableThurstRandom = false)
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xB7E430", Offset = "0xB7E430", VA = "0xB7E430")]
	public GameObject SpawnBomb(float delta, string bombId, bool disableThurstRandom = false)
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xB7E630", Offset = "0xB7E630", VA = "0xB7E630")]
	private void Update()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xB7E9E0", Offset = "0xB7E9E0", VA = "0xB7E9E0")]
	public SpawnPoint()
	{
	}
}
[Token(Token = "0x2000139")]
[ExecuteInEditMode]
public class SubMeshRenderer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000470")]
	public struct SubMeshPass
	{
		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Matrix4x4 matrix;
	}

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter m_mesh;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SubMeshPass[] m_passes;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_recieveShadows;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_motionVectors;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ShadowCastingMode m_castShadows;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LightProbeUsage m_lightProbes;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ReflectionProbeUsage m_reflectionProbes;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_lightProbeAnchor;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xB7F798", Offset = "0xB7F798", VA = "0xB7F798")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xB7F7F0", Offset = "0xB7F7F0", VA = "0xB7F7F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xB7F7F8", Offset = "0xB7F7F8", VA = "0xB7F7F8")]
	public void Draw(Camera cam)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xB7FADC", Offset = "0xB7FADC", VA = "0xB7FADC")]
	public SubMeshRenderer()
	{
	}
}
[Token(Token = "0x200013A")]
public class SurvivalGameMode : GameMode
{
	[Token(Token = "0x2000471")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE74", Offset = "0x9DFE74")]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SurvivalGameMode <>4__this;

		[Token(Token = "0x170002CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0xB80FDC", Offset = "0xB80FDC", VA = "0xB80FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0xB8104C", Offset = "0xB8104C", VA = "0xB8104C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xB80208", Offset = "0xB80208", VA = "0xB80208")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xB80F24", Offset = "0xB80F24", VA = "0xB80F24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xB80F28", Offset = "0xB80F28", VA = "0xB80F28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xB80FE4", Offset = "0xB80FE4", VA = "0xB80FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float m_currentGlobalArc;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float m_globalArcSpeed;

	[Token(Token = "0x400088D")]
	private const int LifeCount = 3;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int m_lives;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Life[] m_livesHud;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public WaveManager m_waveManager;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public InfoBoardController m_infoBoard;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string droppedFruitPFX;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject m_buttons;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject m_enemyPrefab;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private FlyingEnemyManager m_enemyManager;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<int> m_droppedFruitWaves;

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xB7FB50", Offset = "0xB7FB50", VA = "0xB7FB50")]
	public float GetGlobalArc()
	{
		return default(float);
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xB7FB58", Offset = "0xB7FB58", VA = "0xB7FB58", Slot = "6")]
	public override void BombExploded(Bomb bomb)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xB7FE14", Offset = "0xB7FE14", VA = "0xB7FE14", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xB800F8", Offset = "0xB800F8", VA = "0xB800F8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xB80194", Offset = "0xB80194", VA = "0xB80194")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA3BC", Offset = "0x9EA3BC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xB80234", Offset = "0xB80234", VA = "0xB80234")]
	private void OnStartTimerFinished()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xB80240", Offset = "0xB80240", VA = "0xB80240", Slot = "14")]
	public override void OnTouchDown(Vector2 pos)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xB80244", Offset = "0xB80244", VA = "0xB80244", Slot = "29")]
	public override void Update()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xB802D4", Offset = "0xB802D4", VA = "0xB802D4", Slot = "9")]
	public override void StartGame()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xB803D0", Offset = "0xB803D0", VA = "0xB803D0", Slot = "10")]
	public override void GameOver()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xB8048C", Offset = "0xB8048C", VA = "0xB8048C", Slot = "11")]
	public override void Finish()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xB8052C", Offset = "0xB8052C", VA = "0xB8052C", Slot = "23")]
	public override bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xB805C0", Offset = "0xB805C0", VA = "0xB805C0", Slot = "15")]
	public override void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xB807CC", Offset = "0xB807CC", VA = "0xB807CC", Slot = "26")]
	public override bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xB80940", Offset = "0xB80940", VA = "0xB80940", Slot = "28")]
	public override void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xB80E84", Offset = "0xB80E84", VA = "0xB80E84")]
	public SurvivalGameMode()
	{
	}
}
[Token(Token = "0x200013B")]
public class TextMeshProUGUITranslator : MonoBehaviour
{
	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI m_textMeshObj;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string m_originalText;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_shouldTranslate;

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xB92BD8", Offset = "0xB92BD8", VA = "0xB92BD8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xB92C80", Offset = "0xB92C80", VA = "0xB92C80")]
	public void ForceTranslate()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xB92C8C", Offset = "0xB92C8C", VA = "0xB92C8C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xB92E68", Offset = "0xB92E68", VA = "0xB92E68")]
	public TextMeshProUGUITranslator()
	{
	}
}
[Token(Token = "0x200013C")]
public class Timer : MonoBehaviour
{
	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_isRunning;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEvent OnTimerAboutToFinishedEvent;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEvent OnTimerFinishedEvent;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_hours;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_minutes;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_seconds;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_internalSeconds;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color warningColour;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color defaultColour;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string tickSFX;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string tockSFX;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string outOfTimeSFX;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Color m_colour;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected bool tickTock;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	protected bool m_canPlayOutOfTime;

	[NonSerialized]
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool m_canTimerFinish;

	[Token(Token = "0x17000056")]
	public Color Colour
	{
		[Token(Token = "0x600085A")]
		[Address(RVA = "0xB92E70", Offset = "0xB92E70", VA = "0xB92E70")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000057")]
	public int Hours
	{
		[Token(Token = "0x600085B")]
		[Address(RVA = "0xB92E7C", Offset = "0xB92E7C", VA = "0xB92E7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000058")]
	public int Minutes
	{
		[Token(Token = "0x600085C")]
		[Address(RVA = "0xB92F68", Offset = "0xB92F68", VA = "0xB92F68")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000059")]
	public int Seconds
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0xB92F8C", Offset = "0xB92F8C", VA = "0xB92F8C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005A")]
	public bool IsRunning
	{
		[Token(Token = "0x600085E")]
		[Address(RVA = "0xB92FB0", Offset = "0xB92FB0", VA = "0xB92FB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xB92FB8", Offset = "0xB92FB8", VA = "0xB92FB8")]
	public void ResetTimer()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xB92FE0", Offset = "0xB92FE0", VA = "0xB92FE0")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xB9300C", Offset = "0xB9300C", VA = "0xB9300C")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xB93014", Offset = "0xB93014", VA = "0xB93014")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xB9303C", Offset = "0xB9303C", VA = "0xB9303C")]
	public void RegisterOnTimerFinishedEvent(UnityAction listener)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xB93074", Offset = "0xB93074", VA = "0xB93074")]
	public void DeregisterOnTimerFinishedEvent(UnityAction listener)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xB930AC", Offset = "0xB930AC", VA = "0xB930AC")]
	public void DeregisterAllOnTimerFinishedEvent()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xB930DC", Offset = "0xB930DC", VA = "0xB930DC")]
	public void RegisterOnTimerAboutToFinishedEvent(UnityAction listener)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xB93114", Offset = "0xB93114", VA = "0xB93114")]
	public void DeregisterOnTimerAboutToFinishedEvent(UnityAction listener)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xB9314C", Offset = "0xB9314C", VA = "0xB9314C")]
	public void DeregisterAllOnTimerAboutToFinishedEvent()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xB9317C", Offset = "0xB9317C", VA = "0xB9317C")]
	public void Set(int hours, int minutes, int seconds)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xB934E0", Offset = "0xB934E0", VA = "0xB934E0")]
	public void AddSeconds(int seconds)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xB92EA0", Offset = "0xB92EA0", VA = "0xB92EA0")]
	private void UpdateInternals()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xB93504", Offset = "0xB93504", VA = "0xB93504")]
	public void HackSetTimer(float timeSec)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xB93534", Offset = "0xB93534", VA = "0xB93534")]
	private void Update()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xB931B4", Offset = "0xB931B4", VA = "0xB931B4")]
	private void UpdateTimer(bool force)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xB9353C", Offset = "0xB9353C", VA = "0xB9353C")]
	public Timer()
	{
	}
}
[Token(Token = "0x200013D")]
public class TowerSpawnFX : MonoBehaviour
{
	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_enableChildObject;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 effectOffset;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xB7DC44", Offset = "0xB7DC44", VA = "0xB7DC44")]
	public void SpawnFX(bool enableChild = false)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xB935D4", Offset = "0xB935D4", VA = "0xB935D4")]
	public TowerSpawnFX()
	{
	}
}
[Serializable]
[Token(Token = "0x200013E")]
public struct HandVibration
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float length;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float freq;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float strength;
}
[Token(Token = "0x200013F")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x2000472")]
	public enum Type
	{
		[Token(Token = "0x4001898")]
		Left,
		[Token(Token = "0x4001899")]
		Right
	}

	[Token(Token = "0x2000473")]
	public enum InputAction
	{
		[Token(Token = "0x400189B")]
		STEP,
		[Token(Token = "0x400189C")]
		OPTIONS,
		[Token(Token = "0x400189D")]
		CONFIRM,
		[Token(Token = "0x400189E")]
		BACK,
		[Token(Token = "0x400189F")]
		GRAB
	}

	[Token(Token = "0x2000474")]
	public delegate void InputCallback(Hand hand, InputAction action, Vector2 delta);

	[Token(Token = "0x2000475")]
	public interface FingerCurls
	{
		[Token(Token = "0x170002CF")]
		float ThumbCurl
		{
			[Token(Token = "0x6001FB3")]
			get;
		}

		[Token(Token = "0x170002D0")]
		float IndexCurl
		{
			[Token(Token = "0x6001FB4")]
			get;
		}

		[Token(Token = "0x170002D1")]
		float MiddleCurl
		{
			[Token(Token = "0x6001FB5")]
			get;
		}

		[Token(Token = "0x170002D2")]
		float RingCurl
		{
			[Token(Token = "0x6001FB6")]
			get;
		}

		[Token(Token = "0x170002D3")]
		float PinkyCurl
		{
			[Token(Token = "0x6001FB7")]
			get;
		}
	}

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isInitialised;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Type m_type;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 bladeLocalRotation;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 bladeLocalPosition;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<InputCallback> m_registeredCallbacks;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Blade blade;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xBEF164", Offset = "0xBEF164", VA = "0xBEF164")]
	public static void RegisterInputCallback(InputCallback callback)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xBEF200", Offset = "0xBEF200", VA = "0xBEF200")]
	public static void UnregisterInputCallback(InputCallback callback)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xBEF28C", Offset = "0xBEF28C", VA = "0xBEF28C")]
	public static void InvokeInputAction(Hand hand, InputAction action, Vector2 delta)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xBEFC3C", Offset = "0xBEFC3C", VA = "0xBEFC3C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xBEFDD0", Offset = "0xBEFDD0", VA = "0xBEFDD0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xBEFDD4", Offset = "0xBEFDD4", VA = "0xBEFDD4", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xBEFDE4", Offset = "0xBEFDE4", VA = "0xBEFDE4", Slot = "7")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xBEFDE8", Offset = "0xBEFDE8", VA = "0xBEFDE8", Slot = "8")]
	public virtual void Vibrate(HandVibration setting)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xBEFDEC", Offset = "0xBEFDEC", VA = "0xBEFDEC", Slot = "9")]
	public virtual bool IsControllerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xBEFDF4", Offset = "0xBEFDF4", VA = "0xBEFDF4", Slot = "10")]
	public virtual bool HasSkeletonSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xBEFDFC", Offset = "0xBEFDFC", VA = "0xBEFDFC", Slot = "11")]
	public virtual FingerCurls GetFingerCurls()
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xBEFC40", Offset = "0xBEFC40", VA = "0xBEFC40")]
	private void Initialise()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xBEFE04", Offset = "0xBEFE04", VA = "0xBEFE04")]
	public Hand()
	{
	}
}
[Token(Token = "0x2000140")]
public class OVRHand : Hand
{
	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3314", Offset = "0x9E3314")]
	public float m_thumbstickThreshold;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 m_thumbstickInputPrevious;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 m_thumbstickInputCurrent;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_stepTimer;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_stepTime;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_stepDuration;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_stepAccel;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_stepMinSpeed;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_vibrateTimer;

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x130E554", Offset = "0x130E554", VA = "0x130E554", Slot = "4")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x130E598", Offset = "0x130E598", VA = "0x130E598", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x130EF2C", Offset = "0x130EF2C", VA = "0x130EF2C", Slot = "7")]
	public override void LateUpdate()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x130EF34", Offset = "0x130EF34", VA = "0x130EF34", Slot = "8")]
	public override void Vibrate(HandVibration setting)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x130EFE4", Offset = "0x130EFE4", VA = "0x130EFE4", Slot = "9")]
	public override bool IsControllerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x130F064", Offset = "0x130F064", VA = "0x130F064")]
	public OVRHand()
	{
	}
}
[Token(Token = "0x2000141")]
public class OVRSet : VRSet
{
	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float startHoldTime;

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x13161C4", Offset = "0x13161C4", VA = "0x13161C4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x13161C8", Offset = "0x13161C8", VA = "0x13161C8", Slot = "6")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x13161CC", Offset = "0x13161CC", VA = "0x13161CC", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x13161D0", Offset = "0x13161D0", VA = "0x13161D0")]
	public void ResetTracking()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x13161D4", Offset = "0x13161D4", VA = "0x13161D4")]
	public void RecentrePosition()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x13161D8", Offset = "0x13161D8", VA = "0x13161D8")]
	public void ResetHeight()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x13161DC", Offset = "0x13161DC", VA = "0x13161DC")]
	public OVRSet()
	{
	}
}
[Token(Token = "0x2000142")]
public class PSVRHand : Hand
{
	[Token(Token = "0x2000476")]
	public enum Buttons
	{
		[Token(Token = "0x40018A1")]
		None = 0,
		[Token(Token = "0x40018A2")]
		Trigger = 2,
		[Token(Token = "0x40018A3")]
		Move = 4,
		[Token(Token = "0x40018A4")]
		Start = 8,
		[Token(Token = "0x40018A5")]
		Triangle = 0x10,
		[Token(Token = "0x40018A6")]
		Circle = 0x20,
		[Token(Token = "0x40018A7")]
		Cross = 0x40,
		[Token(Token = "0x40018A8")]
		Square = 0x80
	}

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int moveIndex;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int activeButtons;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int previousActiveButtons;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private HandVibration currentSetting;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_vibrationTimer;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_vibrationFrames;

	[Token(Token = "0x40008C6")]
	private const int MINIMUM_FRAMES = 2;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_startHoldTime;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool m_triggeredHoldAction;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 m_triggerDownGyroPos;

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xCB9D28", Offset = "0xCB9D28", VA = "0xCB9D28")]
	public PSVRHand()
	{
	}
}
[Token(Token = "0x2000143")]
public class PSVRSet : VRSet
{
	[Token(Token = "0x600088E")]
	[Address(RVA = "0xCB9DC0", Offset = "0xCB9DC0", VA = "0xCB9DC0")]
	public PSVRSet()
	{
	}
}
[Token(Token = "0x2000144")]
public class SteamHand : Hand
{
	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SteamVR_Behaviour_Pose m_pose;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 m_dist;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E332C", Offset = "0x9E332C")]
	public float m_thumbstickThreshold;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 m_controllerPrevious;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 m_controllerCurrent;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_stepTimer;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_stepTime;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int m_stepDuration;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_stepAccel;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_stepMinSpeed;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SteamVR_Input_ActionSet_Default m_defaultActions;

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xB7F6C8", Offset = "0xB7F6C8", VA = "0xB7F6C8")]
	public SteamHand()
	{
	}
}
[Token(Token = "0x2000145")]
public class SteamSet : VRSet
{
	[Token(Token = "0x6000890")]
	[Address(RVA = "0xB7F790", Offset = "0xB7F790", VA = "0xB7F790")]
	public SteamSet()
	{
	}
}
[Token(Token = "0x2000146")]
public class ViveWaveHand : Hand
{
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3344", Offset = "0x9E3344")]
	public float m_thumbstickThreshold;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 m_controllerPrevious;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 m_controllerCurrent;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_stepTimer;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_stepTime;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_stepDuration;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_stepAccel;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_stepMinSpeed;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WVR_DeviceType m_controllerType;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IntPtr m_nativeRenderModelNameString;

	[Token(Token = "0x40008DF")]
	private const int m_nativeRenderModelNameResultBufferLen = 64;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IntPtr m_nativeRenderModelNameResultBuffer;

	[Token(Token = "0x40008E1")]
	private const string m_viveFocusProControllerModelName = "WVR_CONTROLLER_ASPEN_MI6";

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x122D250", Offset = "0x122D250", VA = "0x122D250")]
	public ViveWaveHand()
	{
	}
}
[Token(Token = "0x2000147")]
public class VRSet : MonoBehaviour
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject head;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Fader fader;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandVibration sliceVibration;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public HandVibration bounceVibration;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandVibration sliceBetweenBladesVibration;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public HandVibration environmentBladeVibration;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HandVibration sliceBombVibration;

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x122C9BC", Offset = "0x122C9BC", VA = "0x122C9BC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x122C9C0", Offset = "0x122C9C0", VA = "0x122C9C0", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x122C9C4", Offset = "0x122C9C4", VA = "0x122C9C4", Slot = "6")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x122C9C8", Offset = "0x122C9C8", VA = "0x122C9C8")]
	public VRSet()
	{
	}
}
[Token(Token = "0x2000148")]
public class WaterSplash : MonoBehaviour
{
	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_prefabID;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_minSpeedForSplash;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float upthrust;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 m_waterForce;

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x119D690", Offset = "0x119D690", VA = "0x119D690")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x119D7F8", Offset = "0x119D7F8", VA = "0x119D7F8")]
	private void CreateSplash(Vector3 pos, float speed)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x119DA30", Offset = "0x119DA30", VA = "0x119DA30")]
	public WaterSplash()
	{
	}
}
[Token(Token = "0x2000149")]
[ExecuteInEditMode]
public class WaveManager : MonoBehaviour
{
	[Token(Token = "0x2000477")]
	private class SpawnInfo
	{
		[Token(Token = "0x20005AF")]
		public enum Placement
		{
			[Token(Token = "0x4001E65")]
			Default,
			[Token(Token = "0x4001E66")]
			Top,
			[Token(Token = "0x4001E67")]
			Bottom,
			[Token(Token = "0x4001E68")]
			Left,
			[Token(Token = "0x4001E69")]
			Right
		}

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> fruitTypes;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int min;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int max;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int minInc;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxInc;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delayInc;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int cannonIdx;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Placement placement;

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x119EBB8", Offset = "0x119EBB8", VA = "0x119EBB8")]
		public SpawnInfo()
		{
		}
	}

	[Token(Token = "0x2000478")]
	private class WaveInfo
	{
		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int waveNo;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int waveIdx;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string debugName;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SpawnInfo> spawnInfoList;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waveDt;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float waveDtInc;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delayBeforeWave;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float delayAfterWave;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int waveChance;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> fruitToChooseFrom;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool waitForEntities;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool disableThurstRandom;

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x119EAF8", Offset = "0x119EAF8", VA = "0x119EAF8")]
		public WaveInfo()
		{
		}
	}

	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE84", Offset = "0x9DFE84")]
	private sealed class <FruitWavesCoroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startDelay;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WaveManager <>4__this;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaveInfo <wave>5__2;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Fruit> <waveFruit>5__3;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Bomb> <waveBombs>5__4;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <waitStartTime>5__5;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<SpawnInfo>.Enumerator <>7__wrap5;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpawnInfo <spawnInfo>5__7;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <fruitCount>5__8;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool <isSingleFruitTypeWave>5__9;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string <fruitType>5__10;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int <i>5__11;

		[Token(Token = "0x170002D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x11A0AD4", Offset = "0x11A0AD4", VA = "0x11A0AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x11A0B44", Offset = "0x11A0B44", VA = "0x11A0B44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x119F2BC", Offset = "0x119F2BC", VA = "0x119F2BC")]
		[DebuggerHidden]
		public <FruitWavesCoroutine>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x119F5B8", Offset = "0x119F5B8", VA = "0x119F5B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x119F62C", Offset = "0x119F62C", VA = "0x119F62C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x119F5D4", Offset = "0x119F5D4", VA = "0x119F5D4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x11A0ADC", Offset = "0x11A0ADC", VA = "0x11A0ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset m_waveListFile;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpawnPoint m_defaultSpawner;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpawnPoint m_leftSpawner;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpawnPoint m_rightSpawner;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpawnPoint m_topSpawner;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpawnPoint m_bottomSpawner;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_globalDt;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_globalDtStart;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_globalDtInc;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_globalDtMax;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_desiredSpeed;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_speed;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_freezeModifier;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool m_speedOverrideActive;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_speedOverride;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<WaveInfo> m_waveInfoList;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_clearCurrentWave;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool m_isUsingForcedWaveNo;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_forcedWaveNo;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> m_waveNoList;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int m_indexInWaveNoList;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine m_fruitwavesCoroutine;

	[Token(Token = "0x1700005B")]
	public bool IsUsingForcedWaveNo
	{
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x119DAC0", Offset = "0x119DAC0", VA = "0x119DAC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005C")]
	public int CurrentForcedWaveNo
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x119DAC8", Offset = "0x119DAC8", VA = "0x119DAC8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x119DAD0", Offset = "0x119DAD0", VA = "0x119DAD0")]
	public void SetForcedWaveNo(int waveNo)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x119DAE0", Offset = "0x119DAE0", VA = "0x119DAE0")]
	public void StopUsingForcedWaveNo()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x119DAEC", Offset = "0x119DAEC", VA = "0x119DAEC")]
	private string ReadXmlStringAttribute(XmlReader reader, string attribute, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x119DB90", Offset = "0x119DB90", VA = "0x119DB90")]
	private int ReadXmlIntAttribute(XmlReader reader, string attribute, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x119DC04", Offset = "0x119DC04", VA = "0x119DC04")]
	private float ReadXmlFloatAttribute(XmlReader reader, string attribute, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x119DCEC", Offset = "0x119DCEC", VA = "0x119DCEC")]
	private bool ReadXmlBoolAttribute(XmlReader reader, string attribute, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x119DDC0", Offset = "0x119DDC0", VA = "0x119DDC0")]
	private List<string> SplitFruitList(string fruitListString)
	{
		return null;
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x119DF34", Offset = "0x119DF34", VA = "0x119DF34")]
	public void AddSpeed(int val)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x119DFD4", Offset = "0x119DFD4", VA = "0x119DFD4")]
	public void ResetSpeed()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x119DFE0", Offset = "0x119DFE0", VA = "0x119DFE0")]
	public void ResetFreezeSpeed()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x119DFEC", Offset = "0x119DFEC", VA = "0x119DFEC")]
	public void StartFreezeSpeed()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x119DFF8", Offset = "0x119DFF8", VA = "0x119DFF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x119EC30", Offset = "0x119EC30", VA = "0x119EC30")]
	private WaveInfo PickWave(int waveNo)
	{
		return null;
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x119EFD0", Offset = "0x119EFD0", VA = "0x119EFD0")]
	public void StartFruitWaves(float startDelay = 0f)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x119F09C", Offset = "0x119F09C", VA = "0x119F09C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x119F20C", Offset = "0x119F20C", VA = "0x119F20C")]
	public void SetSpeedOverride(bool overrideActive, float speedOverride = 1f)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x119F21C", Offset = "0x119F21C", VA = "0x119F21C")]
	public float GetWavedt()
	{
		return default(float);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x119F004", Offset = "0x119F004", VA = "0x119F004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA420", Offset = "0x9EA420")]
	private IEnumerator FruitWavesCoroutine(float startDelay)
	{
		return null;
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x119F2E8", Offset = "0x119F2E8", VA = "0x119F2E8")]
	public void StopFruitWaves()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x119F2F4", Offset = "0x119F2F4", VA = "0x119F2F4")]
	public void ClearAllActiveFruitAndBombs()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x119F50C", Offset = "0x119F50C", VA = "0x119F50C")]
	public WaveManager()
	{
	}
}
[Token(Token = "0x200014A")]
public class ZenGameMode : GameMode
{
	[Token(Token = "0x200047A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFE94", Offset = "0x9DFE94")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZenGameMode <>4__this;

		[Token(Token = "0x170002D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x1FFA240", Offset = "0x1FFA240", VA = "0x1FFA240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x1FFA2B0", Offset = "0x1FFA2B0", VA = "0x1FFA2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1FF985C", Offset = "0x1FF985C", VA = "0x1FF985C")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1FFA05C", Offset = "0x1FFA05C", VA = "0x1FFA05C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1FFA060", Offset = "0x1FFA060", VA = "0x1FFA060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x1FFA248", Offset = "0x1FFA248", VA = "0x1FFA248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public uint ZenModeGameDurationInSeconds;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Score m_scoreDisplay;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Score m_bestScoreDisplay;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Timer m_zenModeTimer;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public WaveManager m_waveManager;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public InfoBoardController m_infoBoard;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject m_buttons;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1FF94F4", Offset = "0x1FF94F4", VA = "0x1FF94F4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1FF974C", Offset = "0x1FF974C", VA = "0x1FF974C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1FF97E8", Offset = "0x1FF97E8", VA = "0x1FF97E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA484", Offset = "0x9EA484")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1FF9888", Offset = "0x1FF9888", VA = "0x1FF9888")]
	private void OnStartTimerFinished()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1FF9894", Offset = "0x1FF9894", VA = "0x1FF9894", Slot = "29")]
	public override void Update()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1FF98FC", Offset = "0x1FF98FC", VA = "0x1FF98FC")]
	private void OnZenModeTimerFinished()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1FF9908", Offset = "0x1FF9908", VA = "0x1FF9908", Slot = "9")]
	public override void StartGame()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1FF9974", Offset = "0x1FF9974", VA = "0x1FF9974")]
	private void OnZenModeTimerAboutToFinished()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1FF99D0", Offset = "0x1FF99D0", VA = "0x1FF99D0", Slot = "10")]
	public override void GameOver()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1FF9B04", Offset = "0x1FF9B04", VA = "0x1FF9B04", Slot = "11")]
	public override void Finish()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1FF9BA4", Offset = "0x1FF9BA4", VA = "0x1FF9BA4", Slot = "23")]
	public override bool FruitSliced(Blade blade, Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1FF9FD8", Offset = "0x1FF9FD8", VA = "0x1FF9FD8", Slot = "26")]
	public override bool BombSliced(Blade blade, Bomb bomb)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1FF9FE0", Offset = "0x1FF9FE0", VA = "0x1FF9FE0", Slot = "28")]
	public override void FruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1FF9FE8", Offset = "0x1FF9FE8", VA = "0x1FF9FE8", Slot = "15")]
	public override void AddScore(int value, bool ignoreGameOver = false)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1FF9FF4", Offset = "0x1FF9FF4", VA = "0x1FF9FF4")]
	public ZenGameMode()
	{
	}
}
[Token(Token = "0x200014B")]
public class ZenModeTimerDisplayController : MonoBehaviour
{
	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Timer ZenModeTimer;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public TextMeshPro m_textMeshPro;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public TextMeshProUGUI m_textMeshProUGUI;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1FFA2B8", Offset = "0x1FFA2B8", VA = "0x1FFA2B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1FFA328", Offset = "0x1FFA328", VA = "0x1FFA328")]
	private static string GenerateTimerString(Timer timer)
	{
		return null;
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1FFA438", Offset = "0x1FFA438", VA = "0x1FFA438")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1FFA64C", Offset = "0x1FFA64C", VA = "0x1FFA64C")]
	public ZenModeTimerDisplayController()
	{
	}
}
[Token(Token = "0x200014C")]
public class TargetConstraintAttribute : PropertyAttribute
{
	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type targetType;

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xB8D5D8", Offset = "0xB8D5D8", VA = "0xB8D5D8")]
	public TargetConstraintAttribute(Type targetType)
	{
	}
}
[Token(Token = "0x200014D")]
public class InvokableCallback<TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFEA4", Offset = "0x9DFEA4")]
	private sealed class <>c
	{
		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<TReturn> <>9__3_0;

		[Token(Token = "0x6001FC8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FC9")]
		internal TReturn <.ctor>b__3_0()
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<TReturn> func;

	[Token(Token = "0x60008C4")]
	public TReturn Invoke()
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008C5")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008C6")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x200014E")]
public class InvokableCallback<T0, TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFEB4", Offset = "0x9DFEB4")]
	private sealed class <>c
	{
		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T0, TReturn> <>9__3_0;

		[Token(Token = "0x6001FCB")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FCC")]
		internal TReturn <.ctor>b__3_0(T0 x)
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<T0, TReturn> func;

	[Token(Token = "0x60008C7")]
	public TReturn Invoke(T0 arg0)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008C8")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008C9")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x200014F")]
public class InvokableCallback<T0, T1, TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFEC4", Offset = "0x9DFEC4")]
	private sealed class <>c
	{
		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T0, T1, TReturn> <>9__3_0;

		[Token(Token = "0x6001FCE")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FCF")]
		internal TReturn <.ctor>b__3_0(T0 x, T1 y)
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<T0, T1, TReturn> func;

	[Token(Token = "0x60008CA")]
	public TReturn Invoke(T0 arg0, T1 arg1)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008CB")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008CC")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000150")]
public class InvokableCallback<T0, T1, T2, TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFED4", Offset = "0x9DFED4")]
	private sealed class <>c
	{
		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T0, T1, T2, TReturn> <>9__3_0;

		[Token(Token = "0x6001FD1")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FD2")]
		internal TReturn <.ctor>b__3_0(T0 x, T1 y, T2 z)
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<T0, T1, T2, TReturn> func;

	[Token(Token = "0x60008CD")]
	public TReturn Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008CE")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008CF")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000151")]
public class InvokableCallback<T0, T1, T2, T3, TReturn> : InvokableCallbackBase<TReturn>
{
	[Serializable]
	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFEE4", Offset = "0x9DFEE4")]
	private sealed class <>c
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T0, T1, T2, T3, TReturn> <>9__3_0;

		[Token(Token = "0x6001FD4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FD5")]
		internal TReturn <.ctor>b__3_0(T0 x, T1 y, T2 z, T3 w)
		{
			return (TReturn)null;
		}
	}

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Func<T0, T1, T2, T3, TReturn> func;

	[Token(Token = "0x60008D0")]
	public TReturn Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008D1")]
	public override TReturn Invoke(params object[] args)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008D2")]
	public InvokableCallback(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000152")]
public abstract class InvokableCallbackBase<TReturn>
{
	[Token(Token = "0x60008D3")]
	public abstract TReturn Invoke(params object[] args);

	[Token(Token = "0x60008D4")]
	protected InvokableCallbackBase()
	{
	}
}
[Token(Token = "0x2000153")]
public class InvokableEvent : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFEF4", Offset = "0x9DFEF4")]
	private sealed class <>c
	{
		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__3_0;

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xBF2CDC", Offset = "0xBF2CDC", VA = "0xBF2CDC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xBF2CE4", Offset = "0xBF2CE4", VA = "0xBF2CE4")]
		internal void <.ctor>b__3_0()
		{
		}
	}

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action action;

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xBF2A44", Offset = "0xBF2A44", VA = "0xBF2A44")]
	public void Invoke()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xBF2A74", Offset = "0xBF2A74", VA = "0xBF2A74", Slot = "4")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xBF2AA4", Offset = "0xBF2AA4", VA = "0xBF2AA4")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000154")]
public class InvokableEvent<T0> : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF04", Offset = "0x9DFF04")]
	private sealed class <>c
	{
		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<T0> <>9__3_0;

		[Token(Token = "0x6001FDA")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FDB")]
		internal void <.ctor>b__3_0(T0 x)
		{
		}
	}

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action<T0> action;

	[Token(Token = "0x60008D8")]
	public void Invoke(T0 arg0)
	{
	}

	[Token(Token = "0x60008D9")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60008DA")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000155")]
public class InvokableEvent<T0, T1> : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF14", Offset = "0x9DFF14")]
	private sealed class <>c
	{
		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<T0, T1> <>9__3_0;

		[Token(Token = "0x6001FDD")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FDE")]
		internal void <.ctor>b__3_0(T0 x, T1 y)
		{
		}
	}

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action<T0, T1> action;

	[Token(Token = "0x60008DB")]
	public void Invoke(T0 arg0, T1 arg1)
	{
	}

	[Token(Token = "0x60008DC")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60008DD")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000156")]
public class InvokableEvent<T0, T1, T2> : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF24", Offset = "0x9DFF24")]
	private sealed class <>c
	{
		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<T0, T1, T2> <>9__3_0;

		[Token(Token = "0x6001FE0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FE1")]
		internal void <.ctor>b__3_0(T0 x, T1 y, T2 z)
		{
		}
	}

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action<T0, T1, T2> action;

	[Token(Token = "0x60008DE")]
	public void Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
	}

	[Token(Token = "0x60008DF")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60008E0")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000157")]
public class InvokableEvent<T0, T1, T2, T3> : InvokableEventBase
{
	[Serializable]
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF34", Offset = "0x9DFF34")]
	private sealed class <>c
	{
		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<T0, T1, T2, T3> <>9__3_0;

		[Token(Token = "0x6001FE3")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FE4")]
		internal void <.ctor>b__3_0(T0 x, T1 y, T2 z, T3 w)
		{
		}
	}

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Action<T0, T1, T2, T3> action;

	[Token(Token = "0x60008E1")]
	public void Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
	}

	[Token(Token = "0x60008E2")]
	public override void Invoke(params object[] args)
	{
	}

	[Token(Token = "0x60008E3")]
	public InvokableEvent(object target, string methodName)
	{
	}
}
[Token(Token = "0x2000158")]
public abstract class InvokableEventBase
{
	[Token(Token = "0x60008E4")]
	public abstract void Invoke(params object[] args);

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xBF2C70", Offset = "0xBF2C70", VA = "0xBF2C70")]
	protected InvokableEventBase()
	{
	}
}
[Token(Token = "0x2000159")]
public abstract class SerializableCallback<TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60008E6")]
	public TReturn Invoke()
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008E7")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60008E8")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x200015A")]
public abstract class SerializableCallback<T0, TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60008E9")]
	public TReturn Invoke(T0 arg0)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008EA")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60008EB")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x200015B")]
public abstract class SerializableCallback<T0, T1, TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60008EC")]
	public TReturn Invoke(T0 arg0, T1 arg1)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008ED")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60008EE")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x200015C")]
public abstract class SerializableCallback<T0, T1, T2, TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60008EF")]
	public TReturn Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008F0")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60008F1")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x200015D")]
public abstract class SerializableCallback<T0, T1, T2, T3, TReturn> : SerializableCallbackBase<TReturn>
{
	[Token(Token = "0x60008F2")]
	public TReturn Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
		return (TReturn)null;
	}

	[Token(Token = "0x60008F3")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x60008F4")]
	protected SerializableCallback()
	{
	}
}
[Token(Token = "0x200015E")]
public abstract class SerializableCallbackBase<TReturn> : SerializableCallbackBase
{
	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public InvokableCallbackBase<TReturn> func;

	[Token(Token = "0x60008F5")]
	public override void ClearCache()
	{
	}

	[Token(Token = "0x60008F6")]
	protected InvokableCallbackBase<TReturn> GetPersistentMethod()
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	protected SerializableCallbackBase()
	{
	}
}
[Serializable]
[Token(Token = "0x200015F")]
public abstract class SerializableCallbackBase : ISerializationCallbackReceiver
{
	[Serializable]
	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF44", Offset = "0x9DFF44")]
	private sealed class <>c
	{
		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Arg, object> <>9__7_0;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Arg, Type> <>9__10_0;

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xC20884", Offset = "0xC20884", VA = "0xC20884")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xC2088C", Offset = "0xC2088C", VA = "0xC2088C")]
		internal object <get_Args>b__7_0(Arg x)
		{
			return null;
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xC20898", Offset = "0xC20898", VA = "0xC20898")]
		internal Type <get_ArgTypes>b__10_0(Arg x)
		{
			return null;
		}
	}

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public object[] args;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type[] argTypes;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected UnityEngine.Object _target;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected string _methodName;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Arg[] _args;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool _dynamic;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string _typeName;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool dirty;

	[Token(Token = "0x1700005D")]
	public UnityEngine.Object target
	{
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xC20570", Offset = "0xC20570", VA = "0xC20570")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xC20578", Offset = "0xC20578", VA = "0xC20578")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public string methodName
	{
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xC20588", Offset = "0xC20588", VA = "0xC20588")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xC20590", Offset = "0xC20590", VA = "0xC20590")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public object[] Args
	{
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xC205A0", Offset = "0xC205A0", VA = "0xC205A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public Type[] ArgTypes
	{
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xC206B8", Offset = "0xC206B8", VA = "0xC206B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public bool dynamic
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xC207D0", Offset = "0xC207D0", VA = "0xC207D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xC207D8", Offset = "0xC207D8", VA = "0xC207D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xC207EC", Offset = "0xC207EC", VA = "0xC207EC", Slot = "6")]
	public virtual void ClearCache()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xC207F4", Offset = "0xC207F4", VA = "0xC207F4")]
	public void SetMethod(UnityEngine.Object target, string methodName, bool dynamic, params Arg[] args)
	{
	}

	[Token(Token = "0x6000902")]
	protected abstract void Cache();

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xC20810", Offset = "0xC20810", VA = "0xC20810", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xC20814", Offset = "0xC20814", VA = "0xC20814", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xC20818", Offset = "0xC20818", VA = "0xC20818")]
	protected SerializableCallbackBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000160")]
public struct Arg
{
	[Token(Token = "0x2000486")]
	public enum ArgType
	{
		[Token(Token = "0x40018E7")]
		Unsupported,
		[Token(Token = "0x40018E8")]
		Bool,
		[Token(Token = "0x40018E9")]
		Int,
		[Token(Token = "0x40018EA")]
		Float,
		[Token(Token = "0x40018EB")]
		String,
		[Token(Token = "0x40018EC")]
		Object
	}

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool boolValue;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int intValue;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float floatValue;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stringValue;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object objectValue;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArgType argType;

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xA8B5D4", Offset = "0xA8B5D4", VA = "0xA8B5D4")]
	public object GetValue()
	{
		return null;
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xA8B5E0", Offset = "0xA8B5E0", VA = "0xA8B5E0")]
	public object GetValue(ArgType type)
	{
		return null;
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xD62CD4", Offset = "0xD62CD4", VA = "0xD62CD4")]
	public static Type RealType(ArgType type)
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xD62DD8", Offset = "0xD62DD8", VA = "0xD62DD8")]
	public static ArgType FromRealType(Type type)
	{
		return default(ArgType);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xD62FA4", Offset = "0xD62FA4", VA = "0xD62FA4")]
	public static bool IsSupported(Type type)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000161")]
public class SerializableEvent : SerializableEventBase
{
	[Token(Token = "0x600090B")]
	[Address(RVA = "0xC208A4", Offset = "0xC208A4", VA = "0xC208A4")]
	public void Invoke()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xC209BC", Offset = "0xC209BC", VA = "0xC209BC", Slot = "7")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xC20DD0", Offset = "0xC20DD0", VA = "0xC20DD0")]
	public SerializableEvent()
	{
	}
}
[Token(Token = "0x2000162")]
public abstract class SerializableEvent<T0> : SerializableEventBase
{
	[Token(Token = "0x600090E")]
	public void Invoke(T0 arg0)
	{
	}

	[Token(Token = "0x600090F")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x6000910")]
	protected SerializableEvent()
	{
	}
}
[Token(Token = "0x2000163")]
public abstract class SerializableEvent<T0, T1> : SerializableEventBase
{
	[Token(Token = "0x6000911")]
	public void Invoke(T0 arg0, T1 arg1)
	{
	}

	[Token(Token = "0x6000912")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x6000913")]
	protected SerializableEvent()
	{
	}
}
[Token(Token = "0x2000164")]
public abstract class SerializableEvent<T0, T1, T2> : SerializableEventBase
{
	[Token(Token = "0x6000914")]
	public void Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
	}

	[Token(Token = "0x6000915")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x6000916")]
	protected SerializableEvent()
	{
	}
}
[Token(Token = "0x2000165")]
public abstract class SerializableEvent<T0, T1, T2, T3> : SerializableEventBase
{
	[Token(Token = "0x6000917")]
	public void Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
	}

	[Token(Token = "0x6000918")]
	protected override void Cache()
	{
	}

	[Token(Token = "0x6000919")]
	protected SerializableEvent()
	{
	}
}
[Token(Token = "0x2000166")]
public abstract class SerializableEventBase : SerializableCallbackBase
{
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InvokableEventBase invokable;

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xC20DE0", Offset = "0xC20DE0", VA = "0xC20DE0", Slot = "6")]
	public override void ClearCache()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xC20AB0", Offset = "0xC20AB0", VA = "0xC20AB0")]
	protected InvokableEventBase GetPersistentMethod()
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xC20DD8", Offset = "0xC20DD8", VA = "0xC20DD8")]
	protected SerializableEventBase()
	{
	}
}
[Token(Token = "0x2000167")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x4000928")]
	private const int ITERATIONS = 100000;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float f;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string s;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Func<float, bool> RegularDelegate;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Func<float, bool> DynamicDelegate;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Condition condition;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SerializableEvent ev;

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xB9236C", Offset = "0xB9236C", VA = "0xB9236C")]
	private void Start()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xB924D8", Offset = "0xB924D8", VA = "0xB924D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xB929AC", Offset = "0xB929AC", VA = "0xB929AC")]
	public bool TestMethod(float f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xB929BC", Offset = "0xB929BC", VA = "0xB929BC")]
	public bool TestMethod(string a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xB929C8", Offset = "0xB929C8", VA = "0xB929C8")]
	public bool TestMethod2(float f, string a)
	{
		return default(bool);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xB929E8", Offset = "0xB929E8", VA = "0xB929E8")]
	public void TestMethod2(string a)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xB929F0", Offset = "0xB929F0", VA = "0xB929F0")]
	public Test()
	{
	}
}
[Serializable]
[Token(Token = "0x2000168")]
public class Condition : SerializableCallback<float, bool>
{
	[Token(Token = "0x6000924")]
	[Address(RVA = "0xC621C8", Offset = "0xC621C8", VA = "0xC621C8")]
	public Condition()
	{
	}
}
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE770", Offset = "0x9DE770")]
public class EnableCameraDepthInForward : MonoBehaviour
{
	[Token(Token = "0x6000925")]
	[Address(RVA = "0xC68258", Offset = "0xC68258", VA = "0xC68258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xC6825C", Offset = "0xC6825C", VA = "0xC6825C")]
	private void Set()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xC68308", Offset = "0xC68308", VA = "0xC68308")]
	public EnableCameraDepthInForward()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE7D4", Offset = "0x9DE7D4")]
public class SoftNormalsToVertexColor : MonoBehaviour
{
	[Token(Token = "0x2000487")]
	public enum Method
	{
		[Token(Token = "0x40018EE")]
		Simple,
		[Token(Token = "0x40018EF")]
		AngularDeviation
	}

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Method method;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool generateOnAwake;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool generateNow;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xB7B9B0", Offset = "0xB7B9B0", VA = "0xB7B9B0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xB7BBAC", Offset = "0xB7BBAC", VA = "0xB7BBAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xB7B9C4", Offset = "0xB7B9C4", VA = "0xB7B9C4")]
	private void TryGenerate()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xB7BBBC", Offset = "0xB7BBBC", VA = "0xB7BBBC")]
	private void Generate(Mesh m)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xB7C5DC", Offset = "0xB7C5DC", VA = "0xB7C5DC")]
	public SoftNormalsToVertexColor()
	{
	}
}
[Token(Token = "0x200016B")]
public class ShaderVariantsListGenerator : MonoBehaviour
{
	[Token(Token = "0x2000488")]
	private struct ShaderVariantDetails
	{
		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_shaderName;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<string> m_passNames;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_keywords;
	}

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, ShaderVariantDetails> m_variants;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShaderVariantsListGenerator m_instance;

	[Token(Token = "0x17000062")]
	public static ShaderVariantsListGenerator Instance
	{
		[Token(Token = "0x600092D")]
		[Address(RVA = "0xC213C0", Offset = "0xC213C0", VA = "0xC213C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xC21428", Offset = "0xC21428", VA = "0xC21428")]
	public void LogAllVariants()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xC21798", Offset = "0xC21798", VA = "0xC21798")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xC21804", Offset = "0xC21804", VA = "0xC21804")]
	private void Update()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC21AA0", Offset = "0xC21AA0", VA = "0xC21AA0")]
	public ShaderVariantsListGenerator()
	{
	}
}
[Token(Token = "0x200016C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE838", Offset = "0x9DE838")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE838", Offset = "0x9DE838")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE838", Offset = "0x9DE838")]
public class SliceableProp : SliceObject
{
	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string PropGutsReferenceName;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject PropGutsReferenceObject;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool m_isDebris;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_hangingPoint;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC2C9F0", Offset = "0xC2C9F0", VA = "0xC2C9F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC2C9F4", Offset = "0xC2C9F4", VA = "0xC2C9F4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC2CA24", Offset = "0xC2CA24", VA = "0xC2CA24", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC2CA28", Offset = "0xC2CA28", VA = "0xC2CA28", Slot = "10")]
	public override bool Slice(ObjectPooler pool, Vector3 bladePos, Vector3 bladeTip, Vector3 previousTip, bool isRightBlade, BladeConfig bladeConfig)
	{
		return default(bool);
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xC2D05C", Offset = "0xC2D05C", VA = "0xC2D05C")]
	public SliceableProp()
	{
	}
}
[Token(Token = "0x200016D")]
[ExecuteInEditMode]
public class SliceQuantizerDebugger : MonoBehaviour
{
	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Plane debugSlicePlaneView;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E33DC", Offset = "0x9E33DC")]
	public float debugYaw;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E33FC", Offset = "0x9E33FC")]
	public float debugPitch;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E341C", Offset = "0x9E341C")]
	public float debugDist;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int quantizedValue;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 debugSlicePlanePos;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 debugSlicePlaneYawRollOldVal;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer m_SlicePlaneDisplay;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer m_SlicePlaneDisplay2;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshSlicer.FruitSplitCache m_dummySplitCache;

	[Token(Token = "0x17000063")]
	public Vector3 debugSlicePlaneYawRollDist
	{
		[Token(Token = "0x6000938")]
		[Address(RVA = "0xC2C224", Offset = "0xC2C224", VA = "0xC2C224")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000939")]
		[Address(RVA = "0xC2C260", Offset = "0xC2C260", VA = "0xC2C260")]
		set
		{
		}
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xC2C26C", Offset = "0xC2C26C", VA = "0xC2C26C")]
	private static void SetPlaneDisplay(Component displayPlane, Plane plane, Vector3 position)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xC2C578", Offset = "0xC2C578", VA = "0xC2C578")]
	private static void SetPlaneDisplay(Component displayPlane, Plane plane, GameObject CenterOn)
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xC2C608", Offset = "0xC2C608", VA = "0xC2C608")]
	private void Update()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xC2C8D8", Offset = "0xC2C8D8", VA = "0xC2C8D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xC2C8DC", Offset = "0xC2C8DC", VA = "0xC2C8DC")]
	public SliceQuantizerDebugger()
	{
	}
}
[Token(Token = "0x200016E")]
public class DemoUI : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected SSAOPro m_SSAOPro;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xC674A8", Offset = "0xC674A8", VA = "0xC674A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xC67500", Offset = "0xC67500", VA = "0xC67500")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xC6796C", Offset = "0xC6796C", VA = "0xC6796C")]
	public DemoUI()
	{
	}
}
[Token(Token = "0x200016F")]
public class RotateAround : MonoBehaviour
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Vector3 m_TargetPosition;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xC1A5B4", Offset = "0xC1A5B4", VA = "0xC1A5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xC1A5F4", Offset = "0xC1A5F4", VA = "0xC1A5F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xC1A6E4", Offset = "0xC1A6E4", VA = "0xC1A6E4")]
	public RotateAround()
	{
	}
}
[Token(Token = "0x2000170")]
[ImageEffectAllowedInSceneView]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x9DE8FC", Offset = "0x9DE8FC")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9DE8FC", Offset = "0x9DE8FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE8FC", Offset = "0x9DE8FC")]
public class SSAOPro : MonoBehaviour
{
	[Token(Token = "0x2000489")]
	public enum BlurMode
	{
		[Token(Token = "0x40018F4")]
		None,
		[Token(Token = "0x40018F5")]
		Gaussian,
		[Token(Token = "0x40018F6")]
		HighQualityBilateral
	}

	[Token(Token = "0x200048A")]
	public enum SampleCount
	{
		[Token(Token = "0x40018F8")]
		VeryLow,
		[Token(Token = "0x40018F9")]
		Low,
		[Token(Token = "0x40018FA")]
		Medium,
		[Token(Token = "0x40018FB")]
		High,
		[Token(Token = "0x40018FC")]
		Ultra
	}

	[Token(Token = "0x200048B")]
	protected enum Pass
	{
		[Token(Token = "0x40018FE")]
		Clear = 0,
		[Token(Token = "0x40018FF")]
		GaussianBlur = 5,
		[Token(Token = "0x4001900")]
		HighQualityBilateralBlur = 6,
		[Token(Token = "0x4001901")]
		Composite = 7
	}

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D NoiseTexture;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseHighPrecisionDepthMap;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SampleCount Samples;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3434", Offset = "0x9E3434")]
	public int Downsampling;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E344C", Offset = "0x9E344C")]
	public float Radius;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3468", Offset = "0x9E3468")]
	public float Intensity;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3480", Offset = "0x9E3480")]
	public float Distance;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3498", Offset = "0x9E3498")]
	public float Bias;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E34B0", Offset = "0x9E34B0")]
	public float LumContribution;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x9E34C8", Offset = "0x9E34C8")]
	public Color OcclusionColor;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float CutoffDistance;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float CutoffFalloff;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BlurMode Blur;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool BlurDownsampling;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E34DC", Offset = "0x9E34DC")]
	public int BlurPasses;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E34F4", Offset = "0x9E34F4")]
	public float BlurBilateralThreshold;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool DebugAO;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Shader m_ShaderSSAO;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Material m_Material;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Camera m_Camera;

	[Token(Token = "0x17000064")]
	public Material Material
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0xC1B9B4", Offset = "0xC1B9B4", VA = "0xC1B9B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000065")]
	public Shader ShaderSSAO
	{
		[Token(Token = "0x6000946")]
		[Address(RVA = "0xC1BA90", Offset = "0xC1BA90", VA = "0xC1BA90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xC1BB28", Offset = "0xC1BB28", VA = "0xC1BB28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xC1BDAC", Offset = "0xC1BDAC", VA = "0xC1BDAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xC1BE58", Offset = "0xC1BE58", VA = "0xC1BE58")]
	[ImageEffectOpaque]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xC1C994", Offset = "0xC1C994", VA = "0xC1C994")]
	public SSAOPro()
	{
	}
}
[Token(Token = "0x2000171")]
public class CheckDynamicCollision : MonoBehaviour
{
	[Token(Token = "0x600094B")]
	[Address(RVA = "0xC5C6AC", Offset = "0xC5C6AC", VA = "0xC5C6AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xC5CA38", Offset = "0xC5CA38", VA = "0xC5CA38")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xC5C8E8", Offset = "0xC5C8E8", VA = "0xC5C8E8")]
	private void EnableObjectColliders(GameObject chunk, bool bEnable)
	{
	}

	[Token(Token = "0x600094E")]
	private static void SearchForAllComponentsInHierarchy<T>(GameObject current, ref List<T> listOut) where T : Component
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xC5D354", Offset = "0xC5D354", VA = "0xC5D354")]
	public CheckDynamicCollision()
	{
	}
}
[Token(Token = "0x2000172")]
public class ExplosionSource : MonoBehaviour
{
	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InfluenceRadius;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Force;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool CheckStructureIntegrity;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool MoveManually;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 PosStart;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 PosEnd;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MoveDuration;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FracturedObject[] m_aFracturedObjects;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fStartTime;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xC68450", Offset = "0xC68450", VA = "0xC68450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xC6851C", Offset = "0xC6851C", VA = "0xC6851C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xC68CF8", Offset = "0xC68CF8", VA = "0xC68CF8")]
	public ExplosionSource()
	{
	}
}
[Serializable]
[Token(Token = "0x2000173")]
[ExecuteInEditMode]
public class FracturedChunk : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200048C")]
	public class AdjacencyInfo
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FracturedChunk chunk;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fArea;

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xC72758", Offset = "0xC72758", VA = "0xC72758")]
		public AdjacencyInfo(FracturedChunk chunk, float fArea)
		{
		}
	}

	[Token(Token = "0x200048D")]
	public class CollisionInfo
	{
		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FracturedChunk chunk;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 collisionPoint;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool bIsMain;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool bCancelCollisionEvent;

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xC70BD0", Offset = "0xC70BD0", VA = "0xC70BD0")]
		public CollisionInfo(FracturedChunk chunk, Vector3 collisionPoint, bool bIsMain)
		{
		}
	}

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FracturedObject FracturedObjectSource;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int SplitSubMeshIndex;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DontDeleteAfterBroken;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsSupportChunk;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsNonSupportedChunk;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool IsDetachedChunk;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RelativeVolume;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Volume;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool HasConcaveCollider;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float PreviewDecompositionValue;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color RandomMaterialColor;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool Visited;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<AdjacencyInfo> ListAdjacentChunks;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 m_v3InitialLocalPosition;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Quaternion m_qInitialLocalRotation;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private Vector3 m_v3InitialLocalScale;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool m_bInitialLocalRotScaleInitialized;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<AdjacencyInfo> ListAdjacentChunksCopy;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_fInvisibleTimer;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool m_bNonSupportedChunkStored;

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xC6FD14", Offset = "0xC6FD14", VA = "0xC6FD14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xC6FE6C", Offset = "0xC6FE6C", VA = "0xC6FE6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xC6FFB8", Offset = "0xC6FFB8", VA = "0xC6FFB8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xC70948", Offset = "0xC70948", VA = "0xC70948")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xC70110", Offset = "0xC70110", VA = "0xC70110")]
	private void HandleCollision(Collider other, Vector3 v3CollisionPos, float relativeSpeed)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xC70B14", Offset = "0xC70B14", VA = "0xC70B14")]
	public bool IsDestructibleChunk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xC715D0", Offset = "0xC715D0", VA = "0xC715D0")]
	public void ResetChunk(FracturedObject fracturedObjectSource)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xC717CC", Offset = "0xC717CC", VA = "0xC717CC")]
	public void Impact(Vector3 v3Position, float fExplosionForce, float fRadius, bool bAlsoImpactFreeChunks)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xC72134", Offset = "0xC72134", VA = "0xC72134")]
	public void OnCreateFromFracturedObject(FracturedObject fracturedComponent, int nSplitSubMeshIndex)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xC72250", Offset = "0xC72250", VA = "0xC72250")]
	public void UpdatePreviewDecompositionPosition()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xC723E8", Offset = "0xC723E8", VA = "0xC723E8")]
	public void ConnectTo(FracturedChunk chunk, float fArea)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xC72794", Offset = "0xC72794", VA = "0xC72794")]
	public void DisconnectFrom(FracturedChunk chunk)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xC7253C", Offset = "0xC7253C", VA = "0xC7253C")]
	public bool IsConnectedTo(FracturedChunk chunk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xC70E08", Offset = "0xC70E08", VA = "0xC70E08")]
	public void DetachFromObject(bool bCheckStructureIntegrity = true)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xC729D8", Offset = "0xC729D8", VA = "0xC729D8")]
	private void RemoveConnectionInfo()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xC70D38", Offset = "0xC70D38", VA = "0xC70D38")]
	public List<FracturedChunk> ComputeRandomConnectionBreaks()
	{
		return null;
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xC7312C", Offset = "0xC7312C", VA = "0xC7312C")]
	private static void ComputeRandomConnectionBreaksRecursive(FracturedChunk chunk, List<FracturedChunk> listBreaksOut, int nLevel)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xC733F0", Offset = "0xC733F0", VA = "0xC733F0")]
	public static FracturedChunk ChunkRaycast(Vector3 v3Pos, Vector3 v3Forward, out RaycastHit hitInfo)
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xC735D0", Offset = "0xC735D0", VA = "0xC735D0")]
	public FracturedChunk()
	{
	}
}
[Token(Token = "0x2000174")]
[ExecuteInEditMode]
public class FracturedObject : MonoBehaviour
{
	[Token(Token = "0x200048E")]
	public enum EFracturePattern
	{
		[Token(Token = "0x4001909")]
		BSP,
		[Token(Token = "0x400190A")]
		Voronoi
	}

	[Serializable]
	[Token(Token = "0x200048F")]
	public class PrefabInfo
	{
		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float MinLifeTime;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MaxLifeTime;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject GameObject;

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xBD7F94", Offset = "0xBD7F94", VA = "0xBD7F94")]
		public PrefabInfo()
		{
		}
	}

	[Token(Token = "0x2000490")]
	public enum ECCAlgorithm
	{
		[Token(Token = "0x400190F")]
		Fast,
		[Token(Token = "0x4001910")]
		Normal,
		[Token(Token = "0x4001911")]
		Legacy
	}

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool GUIExpandMain;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SourceObject;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool GenerateIslands;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool GenerateChunkConnectionInfo;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool StartStatic;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ChunkConnectionMinArea;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ChunkConnectionStrength;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ChunkHorizontalRadiusSupportStrength;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool SupportChunksAreIndestructible;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ChunkIslandConnectionMaxDistance;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TotalMass;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PhysicMaterial ChunkPhysicMaterial;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MinColliderVolumeForBox;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float CapPrecisionFix;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool InvertCapNormals;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool GUIExpandSplits;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public EFracturePattern FracturePattern;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool VoronoiVolumeOptimization;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool VoronoiProximityOptimization;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool VoronoiMultithreading;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VoronoiCellsXCount;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VoronoiCellsYCount;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int VoronoiCellsZCount;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VoronoiCellsXSizeVariation;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float VoronoiCellsYSizeVariation;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VoronoiCellsZSizeVariation;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int GenerateNumChunks;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool SplitsWorldSpace;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool SplitRegularly;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float SplitXProbability;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SplitYProbability;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float SplitZProbability;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float SplitSizeVariation;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float SplitXVariation;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float SplitYVariation;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float SplitZVariation;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material SplitMaterial;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float SplitMappingTileU;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float SplitMappingTileV;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool GUIExpandEvents;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float EventDetachMinMass;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float EventDetachMinVelocity;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float EventDetachExitForce;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float EventDetachUpwardsModifier;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip EventDetachSound;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PrefabInfo[] EventDetachPrefabsArray;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string EventDetachCollisionCallMethod;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject EventDetachCollisionCallGameObject;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float EventDetachedMinLifeTime;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float EventDetachedMaxLifeTime;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float EventDetachedOffscreenLifeTime;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float EventDetachedMinMass;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float EventDetachedMinVelocity;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int EventDetachedMaxSounds;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip[] EventDetachedSoundArray;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int EventDetachedMaxPrefabs;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PrefabInfo[] EventDetachedPrefabsArray;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string EventDetachedCollisionCallMethod;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject EventDetachedCollisionCallGameObject;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip EventExplosionSound;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int EventExplosionPrefabsInstanceCount;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public PrefabInfo[] EventExplosionPrefabsArray;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AudioClip EventImpactSound;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public PrefabInfo[] EventImpactPrefabsArray;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public string EventDetachedAnyCallMethod;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject EventDetachedAnyCallGameObject;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool GUIExpandSupportPlanes;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public int RandomSeed;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float DecomposePreview;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool AlwaysComputeColliders;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool ShowChunkConnectionLines;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool ShowChunkColoredState;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	public bool ShowChunkColoredRandomly;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool SaveMeshDataToAsset;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string MeshAssetDataFile;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool Verbose;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	public bool IntegrateWithConcaveCollider;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public ECCAlgorithm ConcaveColliderAlgorithm;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public int ConcaveColliderMaxHulls;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public int ConcaveColliderMaxHullVertices;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int ConcaveColliderLegacySteps;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[HideInInspector]
	public List<SupportPlane> ListSupportPlanes;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[HideInInspector]
	public List<FracturedChunk> ListFracturedChunks;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public GameObject SingleMeshObject;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[HideInInspector]
	public bool IsUsingSingleMeshObjectDraw;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[HideInInspector]
	public float DecomposeRadius;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color GizmoColorSupport;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color GizmoColorNonSupport;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool m_bCheckDetachNonSupportedChunkds;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	private bool m_bExploded;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
	private bool m_bDetached;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float[] m_afFreeChunkSoundTimers;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float[] m_afFreeChunkPrefabTimers;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Material m_GizmosMaterial;

	[Token(Token = "0x17000066")]
	public Material GizmosMaterial
	{
		[Token(Token = "0x6000966")]
		[Address(RVA = "0xC73664", Offset = "0xC73664", VA = "0xC73664")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000967")]
		[Address(RVA = "0xC73730", Offset = "0xC73730", VA = "0xC73730")]
		set
		{
		}
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xC73738", Offset = "0xC73738", VA = "0xC73738")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xC7373C", Offset = "0xC7373C", VA = "0xC7373C")]
	private void Start()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xC73BC0", Offset = "0xC73BC0", VA = "0xC73BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xC747A8", Offset = "0xC747A8", VA = "0xC747A8")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xC747AC", Offset = "0xC747AC", VA = "0xC747AC")]
	public void OnCreateFracturedObject()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xC73990", Offset = "0xC73990", VA = "0xC73990")]
	public void SetSingleMeshVisibility(bool bEnabled)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xC74890", Offset = "0xC74890", VA = "0xC74890")]
	public bool ResetChunks()
	{
		return default(bool);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xC71BE8", Offset = "0xC71BE8", VA = "0xC71BE8")]
	public List<FracturedChunk> GetDestructibleChunksInRadius(Vector3 v3Position, float fRadius, bool bAlsoIncludeFreeChunks)
	{
		return null;
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xC5CDEC", Offset = "0xC5CDEC", VA = "0xC5CDEC")]
	public void Explode(Vector3 v3ExplosionPosition, float fExplosionForce)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xC68734", Offset = "0xC68734", VA = "0xC68734")]
	public void Explode(Vector3 v3ExplosionPosition, float fExplosionForce, float fRadius, bool bPlayExplosionSound, bool bInstanceExplosionPrefabs, bool bAlsoExplodeFree, bool bCheckStructureIntegrityAfter)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xC74B04", Offset = "0xC74B04", VA = "0xC74B04")]
	public void DeleteChunks()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xC74D1C", Offset = "0xC74D1C", VA = "0xC74D1C")]
	public void CollapseChunks()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xC74EC4", Offset = "0xC74EC4", VA = "0xC74EC4")]
	public void ExplodeChunks(float fExplosionForce, Vector3 v3ExplosionPosition, float fUpwardsModifier)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xC75100", Offset = "0xC75100", VA = "0xC75100")]
	public void ComputeChunksRelativeVolume()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xC756A0", Offset = "0xC756A0", VA = "0xC756A0")]
	public void ComputeChunksMass(float fTotalMass)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xC758D8", Offset = "0xC758D8", VA = "0xC758D8")]
	public bool HasDetachedChunks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xC72D50", Offset = "0xC72D50", VA = "0xC72D50")]
	public void NotifyChunkDetach(FracturedChunk chunk)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xC70C38", Offset = "0xC70C38", VA = "0xC70C38")]
	public void NotifyDetachChunkCollision(FracturedChunk.CollisionInfo collisionInfo)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xC758E0", Offset = "0xC758E0", VA = "0xC758E0")]
	public void NotifyDetachChunkCollision(Vector3 v3Position, bool bIsMain)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xC7106C", Offset = "0xC7106C", VA = "0xC7106C")]
	public void NotifyFreeChunkCollision(FracturedChunk.CollisionInfo collisionInfo)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xC71EB8", Offset = "0xC71EB8", VA = "0xC71EB8")]
	public void NotifyImpact(Vector3 v3Position)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xC72FD8", Offset = "0xC72FD8", VA = "0xC72FD8")]
	public void ResetAllChunkVisitedFlags()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xC72FC0", Offset = "0xC72FC0", VA = "0xC72FC0")]
	public void CheckDetachNonSupportedChunks(bool bForceImmediate = false)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xC75B68", Offset = "0xC75B68", VA = "0xC75B68")]
	public void MarkNonSupportedChunks()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xC73E04", Offset = "0xC73E04", VA = "0xC73E04")]
	private void CheckDetachNonSupportedChunksInternal(bool bOnlyMarkThem = false)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xC75CD0", Offset = "0xC75CD0", VA = "0xC75CD0")]
	private static bool AreSupportedChunksRecursive(FracturedChunk chunk, List<FracturedChunk> listChunksVisited, List<FracturedChunk> listChunksSupport)
	{
		return default(bool);
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xC75FA8", Offset = "0xC75FA8", VA = "0xC75FA8")]
	public void AddSupportPlane()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xC76060", Offset = "0xC76060", VA = "0xC76060")]
	public void ComputeSupportPlaneIntersections()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xC76374", Offset = "0xC76374", VA = "0xC76374")]
	public FracturedObject()
	{
	}
}
[Token(Token = "0x2000175")]
public class CombinedMesh : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	public delegate void CombineProgressDelegate(string strMessage, float fT);

	[Serializable]
	[Token(Token = "0x2000492")]
	public class ObjectInfo
	{
		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] aMaterials;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 v3LocalPosition;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion qLocalRotation;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 v3LocalScale;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Matrix4x4 mtxLocal;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Matrix4x4 mtxWorld;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3[] av3NormalsWorld;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector4[] av4TangentsWorld;

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xC61B78", Offset = "0xC61B78", VA = "0xC61B78")]
		public ObjectInfo(Material[] aMaterials, Mesh mesh, Transform transform, Matrix4x4 mtxLocal)
		{
		}
	}

	[Token(Token = "0x2000493")]
	private class MaterialMeshInfo
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int nSubMesh;

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xC61B38", Offset = "0xC61B38", VA = "0xC61B38")]
		public MaterialMeshInfo(Transform transform, Mesh mesh, int nSubMesh)
		{
		}
	}

	[Token(Token = "0x2000494")]
	public enum EPivotMode
	{
		[Token(Token = "0x400191F")]
		Keep,
		[Token(Token = "0x4001920")]
		Center,
		[Token(Token = "0x4001921")]
		BottomCenter,
		[Token(Token = "0x4001922")]
		TopCenter,
		[Token(Token = "0x4001923")]
		Min,
		[Token(Token = "0x4001924")]
		Max
	}

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool SaveMeshAsset;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool KeepPosition;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public EPivotMode PivotMode;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter[] MeshObjects;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RootNode;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_bCancelled;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<ObjectInfo> m_listObjectInfo;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<Material, List<MaterialMeshInfo>> m_dicMeshEntries;

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xC5E128", Offset = "0xC5E128", VA = "0xC5E128")]
	public void CancelCombining()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xC5E134", Offset = "0xC5E134", VA = "0xC5E134")]
	public bool CombiningCancelled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xC5E13C", Offset = "0xC5E13C", VA = "0xC5E13C")]
	public void TransformObjInfoMeshVectorsToLocal(Transform newTransform)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xC5E670", Offset = "0xC5E670", VA = "0xC5E670")]
	public int GetObjectCount()
	{
		return default(int);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xC5E6D0", Offset = "0xC5E6D0", VA = "0xC5E6D0")]
	public ObjectInfo GetObjectInfo(int nIndex)
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xC5E740", Offset = "0xC5E740", VA = "0xC5E740")]
	public void Combine(CombineProgressDelegate progress)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xC62014", Offset = "0xC62014", VA = "0xC62014")]
	public CombinedMesh()
	{
	}
}
[Token(Token = "0x2000176")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000495")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xC2AA48", Offset = "0xC2AA48", VA = "0xC2AA48")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF54", Offset = "0x9DFF54")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x170002D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xC2A9D0", Offset = "0xC2A9D0", VA = "0xC2A9D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xC2AA40", Offset = "0xC2AA40", VA = "0xC2AA40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xC2A0B0", Offset = "0xC2A0B0", VA = "0xC2A0B0")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xC2A168", Offset = "0xC2A168", VA = "0xC2A168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xC2A1DC", Offset = "0xC2A1DC", VA = "0xC2A1DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xC2A184", Offset = "0xC2A184", VA = "0xC2A184")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xC2A9D8", Offset = "0xC2A9D8", VA = "0xC2A9D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xC28730", Offset = "0xC28730", VA = "0xC28730")]
	private void Start()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xC28B44", Offset = "0xC28B44", VA = "0xC28B44")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xC28C14", Offset = "0xC28C14", VA = "0xC28C14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xC291D4", Offset = "0xC291D4", VA = "0xC291D4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xC288B0", Offset = "0xC288B0", VA = "0xC288B0")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xC29E94", Offset = "0xC29E94", VA = "0xC29E94")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xC28EE0", Offset = "0xC28EE0", VA = "0xC28EE0")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xC29DFC", Offset = "0xC29DFC", VA = "0xC29DFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA4F8", Offset = "0x9EA4F8")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xC2A0DC", Offset = "0xC2A0DC", VA = "0xC2A0DC")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x2000177")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseCurvature;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[SerializeField]
	[HideInInspector]
	private bool m_bDataDirty;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x17000067")]
	public bool RecurseIntoChildren
	{
		[Token(Token = "0x6000996")]
		[Address(RVA = "0xFAB010", Offset = "0xFAB010", VA = "0xFAB010")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000068")]
	public Simplifier MeshSimplifier
	{
		[Token(Token = "0x6000997")]
		[Address(RVA = "0xFAB018", Offset = "0xFAB018", VA = "0xFAB018")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000998")]
		[Address(RVA = "0xFAB020", Offset = "0xFAB020", VA = "0xFAB020")]
		set
		{
		}
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xFAB028", Offset = "0xFAB028", VA = "0xFAB028")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xFAB12C", Offset = "0xFAB12C", VA = "0xFAB12C")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xFAB2A0", Offset = "0xFAB2A0", VA = "0xFAB2A0")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xFAB2A8", Offset = "0xFAB2A8", VA = "0xFAB2A8")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xFAB308", Offset = "0xFAB308", VA = "0xFAB308")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xFAB310", Offset = "0xFAB310", VA = "0xFAB310")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xFAB320", Offset = "0xFAB320", VA = "0xFAB320")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xFAB350", Offset = "0xFAB350", VA = "0xFAB350")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xFAB4BC", Offset = "0xFAB4BC", VA = "0xFAB4BC")]
	public void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xFAB6C8", Offset = "0xFAB6C8", VA = "0xFAB6C8")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xFAB6D0", Offset = "0xFAB6D0", VA = "0xFAB6D0")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xFAB714", Offset = "0xFAB714", VA = "0xFAB714")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xFAC160", Offset = "0xFAC160", VA = "0xFAC160")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xFAC238", Offset = "0xFAC238", VA = "0xFAC238")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xFAC2DC", Offset = "0xFAC2DC", VA = "0xFAC2DC")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xFAC320", Offset = "0xFAC320", VA = "0xFAC320")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xFAC854", Offset = "0xFAC854", VA = "0xFAC854")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xFAC888", Offset = "0xFAC888", VA = "0xFAC888")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xFACB04", Offset = "0xFACB04", VA = "0xFACB04")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xFACB48", Offset = "0xFACB48", VA = "0xFACB48")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xFACE18", Offset = "0xFACE18", VA = "0xFACE18")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xFACE4C", Offset = "0xFACE4C", VA = "0xFACE4C")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xFAD114", Offset = "0xFAD114", VA = "0xFAD114")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xFAD148", Offset = "0xFAD148", VA = "0xFAD148")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xFAD324", Offset = "0xFAD324", VA = "0xFAD324")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xFAD370", Offset = "0xFAD370", VA = "0xFAD370")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xFAD544", Offset = "0xFAD544", VA = "0xFAD544")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xFAD590", Offset = "0xFAD590", VA = "0xFAD590")]
	private static void GetOriginalTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xFAD78C", Offset = "0xFAD78C", VA = "0xFAD78C")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xFAD7D8", Offset = "0xFAD7D8", VA = "0xFAD7D8")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xFAD9AC", Offset = "0xFAD9AC", VA = "0xFAD9AC")]
	public int GetSimplifiedTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xFAD9F8", Offset = "0xFAD9F8", VA = "0xFAD9F8")]
	private static void GetSimplifiedTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xFADBF4", Offset = "0xFADBF4", VA = "0xFADBF4")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xFAC12C", Offset = "0xFAC12C", VA = "0xFAC12C")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xFADCCC", Offset = "0xFADCCC", VA = "0xFADCCC")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xFAC75C", Offset = "0xFAC75C", VA = "0xFAC75C")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xFADFA0", Offset = "0xFADFA0", VA = "0xFADFA0")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x2000178")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DE9E8", Offset = "0x9DE9E8")]
public class RuntimeMeshSimplifier : MonoBehaviour
{
	[Token(Token = "0x2000497")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF64", Offset = "0x9DFF64")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeMeshSimplifier <>4__this;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private KeyValuePair<GameObject, Material[]> <pair>5__3;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshSimplify <meshSimplify>5__4;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter <meshFilter>5__5;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SkinnedMeshRenderer <skin>5__6;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mesh <newMesh>5__7;

		[Token(Token = "0x170002DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0xC1B93C", Offset = "0xC1B93C", VA = "0xC1B93C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002000")]
			[Address(RVA = "0xC1B9AC", Offset = "0xC1B9AC", VA = "0xC1B9AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xC1AC18", Offset = "0xC1AC18", VA = "0xC1AC18")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xC1ACA4", Offset = "0xC1ACA4", VA = "0xC1ACA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xC1AD28", Offset = "0xC1AD28", VA = "0xC1AD28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xC1ACD0", Offset = "0xC1ACD0", VA = "0xC1ACD0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xC1B944", Offset = "0xC1B944", VA = "0xC1B944", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_bFinished;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh m_newMesh;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nLastProgress;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_strLastTitle;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_strLastMessage;

	[Token(Token = "0x17000069")]
	public string ProgressTitle
	{
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xC1A6F4", Offset = "0xC1A6F4", VA = "0xC1A6F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public string ProgressMessage
	{
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xC1A6FC", Offset = "0xC1A6FC", VA = "0xC1A6FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public int ProgressPercent
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xC1A704", Offset = "0xC1A704", VA = "0xC1A704")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006C")]
	public bool Finished
	{
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xC1A70C", Offset = "0xC1A70C", VA = "0xC1A70C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xC1A714", Offset = "0xC1A714", VA = "0xC1A714")]
	public void Simplify(float percent)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xC1A858", Offset = "0xC1A858", VA = "0xC1A858")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xC1A910", Offset = "0xC1A910", VA = "0xC1A910")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xC1AB48", Offset = "0xC1AB48", VA = "0xC1AB48")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xC1A7C0", Offset = "0xC1A7C0", VA = "0xC1A7C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA55C", Offset = "0x9EA55C")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xC1AC44", Offset = "0xC1AC44", VA = "0xC1AC44")]
	public RuntimeMeshSimplifier()
	{
	}
}
[Token(Token = "0x2000179")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x2000498")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1195A18", Offset = "0x1195A18", VA = "0x1195A18", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x1195B80", Offset = "0x1195B80", VA = "0x1195B80", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1195C54", Offset = "0x1195C54", VA = "0x1195C54")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x123F750", Offset = "0x123F750", VA = "0x123F750")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x123F804", Offset = "0x123F804", VA = "0x123F804")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x123F8C4", Offset = "0x123F8C4", VA = "0x123F8C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x123F8C8", Offset = "0x123F8C8", VA = "0x123F8C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x12424F0", Offset = "0x12424F0", VA = "0x12424F0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1242640", Offset = "0x1242640", VA = "0x1242640")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1242784", Offset = "0x1242784", VA = "0x1242784")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x12428BC", Offset = "0x12428BC", VA = "0x12428BC")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x12429A8", Offset = "0x12429A8", VA = "0x12429A8")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1242C58", Offset = "0x1242C58", VA = "0x1242C58")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1242EA8", Offset = "0x1242EA8", VA = "0x1242EA8")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1242FEC", Offset = "0x1242FEC", VA = "0x1242FEC")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1243110", Offset = "0x1243110", VA = "0x1243110")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x12431FC", Offset = "0x12431FC", VA = "0x12431FC")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x12432E8", Offset = "0x12432E8", VA = "0x12432E8")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x12433D4", Offset = "0x12433D4", VA = "0x12433D4")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x12434C0", Offset = "0x12434C0", VA = "0x12434C0")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x200017A")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1195C5C", Offset = "0x1195C5C", VA = "0x1195C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1195D24", Offset = "0x1195D24", VA = "0x1195D24")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1195D28", Offset = "0x1195D28", VA = "0x1195D28")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1195E24", Offset = "0x1195E24", VA = "0x1195E24")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x200017B")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x2000499")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E04E8", Offset = "0x9E04E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002402")]
			[Address(RVA = "0x119739C", Offset = "0x119739C", VA = "0x119739C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002403")]
			[Address(RVA = "0x11973A4", Offset = "0x11973A4", VA = "0x11973A4")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E04F8", Offset = "0x9E04F8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6002404")]
			[Address(RVA = "0x1197330", Offset = "0x1197330", VA = "0x1197330")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002405")]
			[Address(RVA = "0x1197410", Offset = "0x1197410", VA = "0x1197410")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x119710C", Offset = "0x119710C", VA = "0x119710C", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x119722C", Offset = "0x119722C", VA = "0x119722C", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x1196AFC", Offset = "0x1196AFC", VA = "0x1196AFC")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x200049A")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0508", Offset = "0x9E0508")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002407")]
			[Address(RVA = "0x11978A0", Offset = "0x11978A0", VA = "0x11978A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002408")]
			[Address(RVA = "0x11978A8", Offset = "0x11978A8", VA = "0x11978A8")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0518", Offset = "0x9E0518")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6002409")]
			[Address(RVA = "0x1197834", Offset = "0x1197834", VA = "0x1197834")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600240A")]
			[Address(RVA = "0x1197914", Offset = "0x1197914", VA = "0x1197914")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x1197610", Offset = "0x1197610", VA = "0x1197610", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x1197730", Offset = "0x1197730", VA = "0x1197730", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x1196B04", Offset = "0x1196B04", VA = "0x1196B04")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x200049B")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0528", Offset = "0x9E0528")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x600240C")]
			[Address(RVA = "0x1196E98", Offset = "0x1196E98", VA = "0x1196E98")]
			public <>c()
			{
			}

			[Token(Token = "0x600240D")]
			[Address(RVA = "0x1196EA0", Offset = "0x1196EA0", VA = "0x1196EA0")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0538", Offset = "0x9E0538")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x600240E")]
			[Address(RVA = "0x1196E2C", Offset = "0x1196E2C", VA = "0x1196E2C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600240F")]
			[Address(RVA = "0x1196F0C", Offset = "0x1196F0C", VA = "0x1196F0C")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x1196C08", Offset = "0x1196C08", VA = "0x1196C08", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x1196D28", Offset = "0x1196D28", VA = "0x1196D28", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x1196B0C", Offset = "0x1196B0C", VA = "0x1196B0C")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LaunchData;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string LaunchBranchName;

	[Token(Token = "0x4000A25")]
	private const int SUCCESS = 0;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x11963D0", Offset = "0x11963D0", VA = "0x11963D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x11964C4", Offset = "0x11964C4", VA = "0x11964C4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x119656C", Offset = "0x119656C", VA = "0x119656C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x1196630", Offset = "0x1196630", VA = "0x1196630")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x11966C0", Offset = "0x11966C0", VA = "0x11966C0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x11967A0", Offset = "0x11967A0", VA = "0x11967A0")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x119687C", Offset = "0x119687C", VA = "0x119687C")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x1196880", Offset = "0x1196880", VA = "0x1196880")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1196B14", Offset = "0x1196B14", VA = "0x1196B14")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x200017C")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x1195E94", Offset = "0x1195E94", VA = "0x1195E94")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x1195F58", Offset = "0x1195F58", VA = "0x1195F58")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1196344", Offset = "0x1196344", VA = "0x1196344")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1196348", Offset = "0x1196348", VA = "0x1196348")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x119634C", Offset = "0x119634C", VA = "0x119634C")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x1196350", Offset = "0x1196350", VA = "0x1196350")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x200017D")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x200049C")]
	public class Item
	{
		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1198D0C", Offset = "0x1198D0C", VA = "0x1198D0C")]
		public Item()
		{
		}
	}

	[Token(Token = "0x200049D")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x1198D74", Offset = "0x1198D74", VA = "0x1198D74", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x1198E2C", Offset = "0x1198E2C", VA = "0x1198E2C", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x1198EF4", Offset = "0x1198EF4", VA = "0x1198EF4", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x1198FE8", Offset = "0x1198FE8", VA = "0x1198FE8", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x11990C8", Offset = "0x11990C8", VA = "0x11990C8", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x1199928", Offset = "0x1199928", VA = "0x1199928", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x11999B0", Offset = "0x11999B0", VA = "0x11999B0", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x1199A78", Offset = "0x1199A78", VA = "0x1199A78", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x1199B40", Offset = "0x1199B40", VA = "0x1199B40", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x1199C34", Offset = "0x1199C34", VA = "0x1199C34", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x119A188", Offset = "0x119A188", VA = "0x119A188", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x119A6DC", Offset = "0x119A6DC", VA = "0x119A6DC", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x119A77C", Offset = "0x119A77C", VA = "0x119A77C", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1197C64", Offset = "0x1197C64", VA = "0x1197C64")]
		public Result()
		{
		}
	}

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1197B14", Offset = "0x1197B14", VA = "0x1197B14")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x1197CC8", Offset = "0x1197CC8", VA = "0x1197CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x1197CCC", Offset = "0x1197CCC", VA = "0x1197CCC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1198A8C", Offset = "0x1198A8C", VA = "0x1198A8C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1198B74", Offset = "0x1198B74", VA = "0x1198B74")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1198C64", Offset = "0x1198C64", VA = "0x1198C64")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x200017E")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x200049E")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x600201C")]
		[Address(RVA = "0x119AB7C", Offset = "0x119AB7C", VA = "0x119AB7C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x119AC24", Offset = "0x119AC24", VA = "0x119AC24")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x200049F")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0548", Offset = "0x9E0548")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x6002410")]
			[Address(RVA = "0x119AD04", Offset = "0x119AD04", VA = "0x119AD04")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002411")]
			[Address(RVA = "0x119AD0C", Offset = "0x119AD0C", VA = "0x119AD0C")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x119AC2C", Offset = "0x119AC2C", VA = "0x119AC2C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x119AAFC", Offset = "0x119AAFC", VA = "0x119AAFC")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x20004A0")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0558", Offset = "0x9E0558")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x17000392")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002415")]
				[Address(RVA = "0x119AFD8", Offset = "0x119AFD8", VA = "0x119AFD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000393")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002417")]
				[Address(RVA = "0x119B048", Offset = "0x119B048", VA = "0x119B048", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0x119AEB8", Offset = "0x119AEB8", VA = "0x119AEB8")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002413")]
			[Address(RVA = "0x119AEEC", Offset = "0x119AEEC", VA = "0x119AEEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0x119AEF0", Offset = "0x119AEF0", VA = "0x119AEF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002416")]
			[Address(RVA = "0x119AFE0", Offset = "0x119AFE0", VA = "0x119AFE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x119ADB4", Offset = "0x119ADB4", VA = "0x119ADB4", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x119AE44", Offset = "0x119AE44", VA = "0x119AE44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EDDDC", Offset = "0x9EDDDC")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x119AEE4", Offset = "0x119AEE4", VA = "0x119AEE4")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x119A980", Offset = "0x119A980", VA = "0x119A980")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x119AA5C", Offset = "0x119AA5C", VA = "0x119AA5C")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x119AB04", Offset = "0x119AB04", VA = "0x119AB04")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x200017F")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInit;

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x119B050", Offset = "0x119B050", VA = "0x119B050")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x119B114", Offset = "0x119B114", VA = "0x119B114")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x119B9A8", Offset = "0x119B9A8", VA = "0x119B9A8")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x119BAF0", Offset = "0x119BAF0", VA = "0x119BAF0")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x119BAF4", Offset = "0x119BAF4", VA = "0x119BAF4")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x119BD64", Offset = "0x119BD64", VA = "0x119BD64")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x2000180")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xFB39A4", Offset = "0xFB39A4", VA = "0xFB39A4")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xFB5748", Offset = "0xFB5748", VA = "0xFB5748")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xFB4C24", Offset = "0xFB4C24", VA = "0xFB4C24")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xFB451C", Offset = "0xFB451C", VA = "0xFB451C")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xFB5BB4", Offset = "0xFB5BB4", VA = "0xFB5BB4")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xFB5324", Offset = "0xFB5324", VA = "0xFB5324")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xFB550C", Offset = "0xFB550C", VA = "0xFB550C")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xFB5080", Offset = "0xFB5080", VA = "0xFB5080")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xFB5BD4", Offset = "0xFB5BD4", VA = "0xFB5BD4")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x2000181")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DEA5C", Offset = "0x9DEA5C")]
public class Beam : MonoBehaviour
{
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startWidth;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float endWidth;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startOffset;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endOffset;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int count;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool updateEveryFrame;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool makeTail;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxUVAngle;

	[Token(Token = "0x4000A54")]
	private const float epsilon = 0.001f;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> vertices;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector2> uvs;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Vector3> normals;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> indices;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 position;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xD6B708", Offset = "0xD6B708", VA = "0xD6B708")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xD6B7C0", Offset = "0xD6B7C0", VA = "0xD6B7C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xD6C288", Offset = "0xD6C288", VA = "0xD6C288")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xD6B87C", Offset = "0xD6B87C", VA = "0xD6B87C")]
	private Mesh createMesh()
	{
		return null;
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xD6C320", Offset = "0xD6C320", VA = "0xD6C320")]
	public Beam()
	{
	}
}
[Token(Token = "0x2000182")]
internal class WaveVR_COMMITINFO
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string wavevr_version;

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x11B5D30", Offset = "0x11B5D30", VA = "0x11B5D30")]
	public WaveVR_COMMITINFO()
	{
	}
}
[Token(Token = "0x2000183")]
public class ControllerConnectionStateReactor : MonoBehaviour
{
	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType type;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool connected;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xC62218", Offset = "0xC62218", VA = "0xC62218")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xC62300", Offset = "0xC62300", VA = "0xC62300")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xC62620", Offset = "0xC62620", VA = "0xC62620")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xC626E8", Offset = "0xC626E8", VA = "0xC626E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xC62410", Offset = "0xC62410", VA = "0xC62410")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xC624AC", Offset = "0xC624AC", VA = "0xC624AC")]
	private void setActive(bool active)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xC62814", Offset = "0xC62814", VA = "0xC62814")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xC62BB8", Offset = "0xC62BB8", VA = "0xC62BB8")]
	public ControllerConnectionStateReactor()
	{
	}
}
[Token(Token = "0x2000184")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DEADC", Offset = "0x9DEADC")]
public class ControllerFadeManager : MonoBehaviour
{
	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FadeManger fadeManager;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float AngleHide;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xC62C84", Offset = "0xC62C84", VA = "0xC62C84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xC62EFC", Offset = "0xC62EFC", VA = "0xC62EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xC63130", Offset = "0xC63130", VA = "0xC63130")]
	public ControllerFadeManager()
	{
	}
}
[Token(Token = "0x2000185")]
public class WaveVR_EventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IDropHandler, IPointerUpHandler, IPointerHoverHandler
{
	[Token(Token = "0x20004A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF74", Offset = "0x9DFF74")]
	private sealed class <TrackPointer>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_EventHandler <>4__this;

		[Token(Token = "0x170002DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x1289718", Offset = "0x1289718", VA = "0x1289718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002028")]
			[Address(RVA = "0x1289788", Offset = "0x1289788", VA = "0x1289788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x128959C", Offset = "0x128959C", VA = "0x128959C")]
		[DebuggerHidden]
		public <TrackPointer>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x1289630", Offset = "0x1289630", VA = "0x1289630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1289634", Offset = "0x1289634", VA = "0x1289634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x1289720", Offset = "0x1289720", VA = "0x1289720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A62")]
	private const string LOG_TAG = "WaveVR_EventHandler";

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 goPosition;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float goPositionZ;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x1288DD4", Offset = "0x1288DD4", VA = "0x1288DD4")]
	private void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x1288F14", Offset = "0x1288F14", VA = "0x1288F14")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x1288FCC", Offset = "0x1288FCC", VA = "0x1288FCC", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x128907C", Offset = "0x128907C", VA = "0x128907C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x1289080", Offset = "0x1289080", VA = "0x1289080", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x1289084", Offset = "0x1289084", VA = "0x1289084", Slot = "11")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x1289088", Offset = "0x1289088", VA = "0x1289088", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x12891BC", Offset = "0x12891BC", VA = "0x12891BC", Slot = "8")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x12892F4", Offset = "0x12892F4", VA = "0x12892F4", Slot = "9")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x12893D4", Offset = "0x12893D4", VA = "0x12893D4", Slot = "10")]
	public void OnDrop(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x12894C4", Offset = "0x12894C4", VA = "0x12894C4", Slot = "12")]
	public void OnPointerHover(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x1289528", Offset = "0x1289528", VA = "0x1289528")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA5C0", Offset = "0x9EA5C0")]
	private IEnumerator TrackPointer()
	{
		return null;
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x12895C8", Offset = "0x12895C8", VA = "0x12895C8")]
	public WaveVR_EventHandler()
	{
	}
}
[Token(Token = "0x2000186")]
public class WaveVR_Raycast : MonoBehaviour
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType index;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ListenToDevice;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool AddLineRenderer;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject raycastObject;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer lr;

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x129A3F4", Offset = "0x129A3F4", VA = "0x129A3F4")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x129A4D8", Offset = "0x129A4D8", VA = "0x129A4D8")]
	private void initLineRenderer()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x129A634", Offset = "0x129A634", VA = "0x129A634")]
	private void shotRaycast()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x129A8CC", Offset = "0x129A8CC", VA = "0x129A8CC")]
	private void updateLineRenderer()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x129AADC", Offset = "0x129AADC", VA = "0x129AADC")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x129AE9C", Offset = "0x129AE9C", VA = "0x129AE9C")]
	private void OnRenderModelLoaded(params object[] args)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x129B05C", Offset = "0x129B05C", VA = "0x129B05C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x129B06C", Offset = "0x129B06C", VA = "0x129B06C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x129B0C4", Offset = "0x129B0C4", VA = "0x129B0C4")]
	private void onDestroy()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x129B160", Offset = "0x129B160", VA = "0x129B160")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x129B564", Offset = "0x129B564", VA = "0x129B564")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x129B664", Offset = "0x129B664", VA = "0x129B664")]
	public WaveVR_Raycast()
	{
	}
}
[Token(Token = "0x2000187")]
public class FadeManger : MonoBehaviour
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadeTime;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> Materials;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float InternalFadeTime;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isInTransition;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool IsFadeOut;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float alpha;

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xC630C8", Offset = "0xC630C8", VA = "0xC630C8")]
	public void Fade(bool fadeOut)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xC68D10", Offset = "0xC68D10", VA = "0xC68D10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xC68EDC", Offset = "0xC68EDC", VA = "0xC68EDC")]
	public FadeManger()
	{
	}
}
[Token(Token = "0x2000188")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x20004A2")]
	public enum DOF
	{
		[Token(Token = "0x4001945")]
		TRACK_6DOF,
		[Token(Token = "0x4001946")]
		TRACK_3DOF
	}

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DOF howTargetTrackHMD;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool followPostion;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool followRotation;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_DevicePoseTracker inverter;

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xC6CF78", Offset = "0xC6CF78", VA = "0xC6CF78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xC6D304", Offset = "0xC6D304", VA = "0xC6D304")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xC6D138", Offset = "0xC6D138", VA = "0xC6D138")]
	private void Expand()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xC6D3B0", Offset = "0xC6D3B0", VA = "0xC6D3B0")]
	private void OnAfterNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xC6D654", Offset = "0xC6D654", VA = "0xC6D654")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x2000189")]
public enum EGazeTriggerMouseKey
{
	[Token(Token = "0x4000A79")]
	LeftClick,
	[Token(Token = "0x4000A7A")]
	RightClick,
	[Token(Token = "0x4000A7B")]
	MiddleClick
}
[Token(Token = "0x200018A")]
public enum EGazeTriggerButton
{
	[Token(Token = "0x4000A7D")]
	System = 0,
	[Token(Token = "0x4000A7E")]
	Menu = 1,
	[Token(Token = "0x4000A7F")]
	Grip = 2,
	[Token(Token = "0x4000A80")]
	DPad_Left = 3,
	[Token(Token = "0x4000A81")]
	DPad_Up = 4,
	[Token(Token = "0x4000A82")]
	DPad_Right = 5,
	[Token(Token = "0x4000A83")]
	DPad_Down = 6,
	[Token(Token = "0x4000A84")]
	Volume_Up = 7,
	[Token(Token = "0x4000A85")]
	Volume_Down = 8,
	[Token(Token = "0x4000A86")]
	DigitalTrigger = 9,
	[Token(Token = "0x4000A87")]
	Touchpad = 16,
	[Token(Token = "0x4000A88")]
	Trigger = 17
}
[Token(Token = "0x200018B")]
public enum EGazeTriggerDevice
{
	[Token(Token = "0x4000A8A")]
	HMD,
	[Token(Token = "0x4000A8B")]
	NonDominantController,
	[Token(Token = "0x4000A8C")]
	DominantController,
	[Token(Token = "0x4000A8D")]
	HMDWithNonDominantController,
	[Token(Token = "0x4000A8E")]
	HMDWithDominantController,
	[Token(Token = "0x4000A8F")]
	HMDWithTwoControllers
}
[Token(Token = "0x200018C")]
public enum EGazeInputEvent
{
	[Token(Token = "0x4000A91")]
	PointerDown,
	[Token(Token = "0x4000A92")]
	PointerClick,
	[Token(Token = "0x4000A93")]
	PointerSubmit
}
[Token(Token = "0x200018D")]
public class GazeInputModule : PointerInputModule
{
	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool progressRate;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RateTextZPosition;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool progressCounter;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float CounterTextZPosition;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float TimeToGaze;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public EGazeInputEvent InputEvent;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Head;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool BtnControl;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public EGazeTriggerDevice GazeDevice;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public EGazeTriggerButton ButtonToTrigger;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public bool WithTimeGaze;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool defWithTimeGaze;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool btnPressDown;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	private bool btnPressed;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool btnPressUp;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool HmdEnterPressDown;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PointerEventData pointerData;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float gazeTime;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Text progressText;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Text counterText;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WaveVR_Reticle gazePointer;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject percentCanvas;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject counterCanvas;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool progressflag;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float countingTime;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool EnableGaze;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Canvas[] sceneCanvases;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool focusCapturedBySystem;

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xBE0684", Offset = "0xBE0684", VA = "0xBE0684")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xBE0724", Offset = "0xBE0724", VA = "0xBE0724")]
	public void SetWithTimeGaze(bool withTimer)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xBE0834", Offset = "0xBE0834", VA = "0xBE0834")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xBE0A18", Offset = "0xBE0A18", VA = "0xBE0A18")]
	private void CastToCenterOfScreen()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xBE0C34", Offset = "0xBE0C34", VA = "0xBE0C34")]
	private void GraphicRaycast(Camera event_camera)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xBE0FE0", Offset = "0xBE0FE0", VA = "0xBE0FE0")]
	private void PhysicRaycast(PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xBE1288", Offset = "0xBE1288", VA = "0xBE1288")]
	private GameObject GetCurrentGameObject(PointerEventData pointerData)
	{
		return null;
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xBE1368", Offset = "0xBE1368", VA = "0xBE1368")]
	private Vector3 GetIntersectionPosition(PointerEventData pointerData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xBE15A8", Offset = "0xBE15A8", VA = "0xBE15A8")]
	private void UpdateProgressDistance(PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xBE1870", Offset = "0xBE1870", VA = "0xBE1870")]
	private void UpdateReticle(GameObject preGazedObject, PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xBE1BE8", Offset = "0xBE1BE8", VA = "0xBE1BE8")]
	private void UpdateBtnState()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xBE1F98", Offset = "0xBE1F98", VA = "0xBE1F98")]
	private void OnTriggeGaze()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xBE2DDC", Offset = "0xBE2DDC", VA = "0xBE2DDC")]
	private void GazeControl()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xBE2EB4", Offset = "0xBE2EB4", VA = "0xBE2EB4", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xBE3508", Offset = "0xBE3508", VA = "0xBE3508", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xBE3210", Offset = "0xBE3210", VA = "0xBE3210")]
	private void ActivaeGazePointerCanvas(bool active)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xBE355C", Offset = "0xBE355C", VA = "0xBE355C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xBE36D0", Offset = "0xBE36D0", VA = "0xBE36D0")]
	public GazeInputModule()
	{
	}
}
[Token(Token = "0x200018E")]
public class GOEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color defaultColor;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color changedColor;

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xBDC4C0", Offset = "0xBDC4C0", VA = "0xBDC4C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xBDC594", Offset = "0xBDC594", VA = "0xBDC594")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xBDC730", Offset = "0xBDC730", VA = "0xBDC730")]
	public void OnTrigger()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xBDC920", Offset = "0xBDC920", VA = "0xBDC920")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xBDC9D4", Offset = "0xBDC9D4", VA = "0xBDC9D4")]
	public void OnQuitGame()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xBDCA80", Offset = "0xBDCA80", VA = "0xBDCA80")]
	public void OnGazeReset()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xBDCAE8", Offset = "0xBDCAE8", VA = "0xBDCAE8")]
	public void OnShowButton()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xBDCB38", Offset = "0xBDCB38", VA = "0xBDCB38")]
	public void OnHideButton()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xBDCB88", Offset = "0xBDCB88", VA = "0xBDCB88")]
	public void ChangeColor(string color)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xBDC648", Offset = "0xBDC648", VA = "0xBDC648")]
	private void ChangeColor(bool change)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xBDC7E0", Offset = "0xBDC7E0", VA = "0xBDC7E0")]
	private void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xBDCCF4", Offset = "0xBDCCF4", VA = "0xBDCCF4")]
	public GOEventTrigger()
	{
	}
}
[Token(Token = "0x200018F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DEB40", Offset = "0x9DEB40")]
public class IndicatorLine : MonoBehaviour
{
	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3854", Offset = "0x9E3854")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3854", Offset = "0x9E3854")]
	public float startWidth;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E38B0", Offset = "0x9E38B0")]
	public float endWidth;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E38D0", Offset = "0x9E38D0")]
	public float lineLength;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color lineColor;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ButtonIndication.Alignment alignment;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startOffset;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float endOffset;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int count;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool makeTail;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxUVAngle;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int Count;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int verticesCount;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int indicesCount;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector2> uvs;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> normals;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> indices;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Color32> colors;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 position;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Mesh updateMesh;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xBF0A58", Offset = "0xBF0A58", VA = "0xBF0A58")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xBF0AA4", Offset = "0xBF0AA4", VA = "0xBF0AA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xBF0C5C", Offset = "0xBF0C5C", VA = "0xBF0C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xBF0EC8", Offset = "0xBF0EC8", VA = "0xBF0EC8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xBF0ECC", Offset = "0xBF0ECC", VA = "0xBF0ECC")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xBF0C60", Offset = "0xBF0C60", VA = "0xBF0C60")]
	public void updateMeshSettings()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xBF1124", Offset = "0xBF1124", VA = "0xBF1124")]
	private Mesh createMesh()
	{
		return null;
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xBF1D6C", Offset = "0xBF1D6C", VA = "0xBF1D6C")]
	public IndicatorLine()
	{
	}
}
[Serializable]
[Token(Token = "0x2000190")]
public class BatteryPercentage
{
	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minBatteryPercentage;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxBatteryPercentage;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xD6B700", Offset = "0xD6B700", VA = "0xD6B700")]
	public BatteryPercentage()
	{
	}
}
[Token(Token = "0x2000191")]
public class UniversalControllerActions : MonoBehaviour
{
	[Token(Token = "0x20004A3")]
	public enum AxisMapping
	{
		[Token(Token = "0x4001948")]
		Y_Axis,
		[Token(Token = "0x4001949")]
		Z_Axis
	}

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType device;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useSystemConfig;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TouchPad;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Touch_Dot;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AxisMapping touch_YAxis_mapping;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Touch_Press;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Trigger_Press;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject VolumeUp_Press;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject VolumeDown_Press;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Grip_Press;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject DigitalTrigger_Press;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Menu_Press;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Home_Press;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Battery_Change;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<BatteryPercentage> batteryPercentages;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 originPosition;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer batteryMeshRenderer;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Mesh toucheffectMesh;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Mesh touchpadMesh;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isTouchPressed;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Color materialColor;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool currentIsLeftHandMode;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int batteryLevels;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int t;

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x1227664", Offset = "0x1227664", VA = "0x1227664")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x12278A0", Offset = "0x12278A0", VA = "0x12278A0")]
	private Color StringToColor(string color_string)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1227A0C", Offset = "0x1227A0C", VA = "0x1227A0C")]
	private Texture2D GetTexture2D(string texture_path)
	{
		return null;
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1227AAC", Offset = "0x1227AAC", VA = "0x1227AAC")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x1227D04", Offset = "0x1227D04", VA = "0x1227D04")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x122920C", Offset = "0x122920C", VA = "0x122920C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1229734", Offset = "0x1229734", VA = "0x1229734")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x12297E0", Offset = "0x12297E0", VA = "0x12297E0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x12298DC", Offset = "0x12298DC", VA = "0x12298DC")]
	private void onBatteryStatusUpdate(params object[] args)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x12299B8", Offset = "0x12299B8", VA = "0x12299B8")]
	private bool updateBatteryInfo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x122A0D0", Offset = "0x122A0D0", VA = "0x122A0D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x122939C", Offset = "0x122939C", VA = "0x122939C")]
	private void resetButtonState()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x122A3AC", Offset = "0x122A3AC", VA = "0x122A3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x122C314", Offset = "0x122C314", VA = "0x122C314")]
	public UniversalControllerActions()
	{
	}
}
[Token(Token = "0x2000192")]
public class WaveVR_Resource
{
	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000AE6")]
	private const string RESOURCE_WRAPPER_CLASSNAME = "com.htc.vr.unity.ResourceWrapper";

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject ResourceWrapper;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_Resource mInstance;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string mPreferredLanguage;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string mCountry;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool useSystemLanguageFlag;

	[Token(Token = "0x1700006D")]
	public static WaveVR_Resource instance
	{
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x1833E08", Offset = "0x1833E08", VA = "0x1833E08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1833F24", Offset = "0x1833F24", VA = "0x1833F24")]
	private void initializeJavaObject()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1834148", Offset = "0x1834148", VA = "0x1834148")]
	public string getString(string stringName)
	{
		return null;
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x183443C", Offset = "0x183443C", VA = "0x183443C")]
	public string getStringByLanguage(string stringName, string lang, string country)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x18348A0", Offset = "0x18348A0", VA = "0x18348A0")]
	public string getSystemLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x18349A8", Offset = "0x18349A8", VA = "0x18349A8")]
	public string getSystemCountry()
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x1834AB0", Offset = "0x1834AB0", VA = "0x1834AB0")]
	public bool setPreferredLanguage(string lang, string country)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x1834B44", Offset = "0x1834B44", VA = "0x1834B44")]
	public void useSystemLanguage()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x1833EC4", Offset = "0x1833EC4", VA = "0x1833EC4")]
	public WaveVR_Resource()
	{
	}
}
[Serializable]
[Token(Token = "0x2000193")]
public class MeshObject
{
	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string MeshName;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasEffect;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gameObject;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 originPosition;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 originLocalScale;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material originMat;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material effectMat;

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xFAB008", Offset = "0xFAB008", VA = "0xFAB008")]
	public MeshObject()
	{
	}
}
[Token(Token = "0x2000194")]
public class WaveVR_AdaptiveControllerActions : MonoBehaviour
{
	[Token(Token = "0x20004A4")]
	public class WVR_InputObject
	{
		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_InputId destination;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WVR_InputId sourceId;

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x11AEFD8", Offset = "0x11AEFD8", VA = "0x11AEFD8")]
		public WVR_InputObject()
		{
		}
	}

	[Token(Token = "0x20004A5")]
	private enum keyMappingInputType
	{
		[Token(Token = "0x400194D")]
		touchDown,
		[Token(Token = "0x400194E")]
		touchUp,
		[Token(Token = "0x400194F")]
		pressDown,
		[Token(Token = "0x4001950")]
		pressUp
	}

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableButtonEffect;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useSystemConfig;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color buttonEffectColor;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool collectInStart;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int volume_index;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly WVR_InputId[] pressIds;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] PressEffectNames;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_InputObject[] PressInputObjectArr;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshObject[] pressObjectArrays;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly WVR_InputId[] touchIds;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly string[] TouchEffectNames;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WVR_InputObject[] TouchInputObjectArr;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshObject[] touchObjectArrays;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject touchpad;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Mesh touchpadMesh;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Mesh toucheffectMesh;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool currentIsLeftHandMode;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int touch_index;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material effectMat;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material touchMat;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool mergeToOneBone;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isTouchPadSetting;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 touchForward;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 touchCenter;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 touchRight;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float raidus;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 touchPtW;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 touchPtU;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 touchPtV;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float touchptHeight;

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x11A5A40", Offset = "0x11A5A40", VA = "0x11A5A40")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x11A5C7C", Offset = "0x11A5C7C", VA = "0x11A5C7C")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x11A5EB8", Offset = "0x11A5EB8", VA = "0x11A5EB8")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x11A7338", Offset = "0x11A7338", VA = "0x11A7338")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x11A7B00", Offset = "0x11A7B00", VA = "0x11A7B00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x11A7BAC", Offset = "0x11A7BAC", VA = "0x11A7BAC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x11A73EC", Offset = "0x11A73EC", VA = "0x11A73EC")]
	private void resetButtonState()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x11A7C4C", Offset = "0x11A7C4C", VA = "0x11A7C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x11A7C84", Offset = "0x11A7C84", VA = "0x11A7C84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x11ABE20", Offset = "0x11ABE20", VA = "0x11ABE20")]
	private bool GetTouchPadParam()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x11AAA40", Offset = "0x11AAA40", VA = "0x11AAA40")]
	private int GetPressInputMapping(int pressIds_Index, keyMappingInputType status)
	{
		return default(int);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x11AB3B8", Offset = "0x11AB3B8", VA = "0x11AB3B8")]
	private int GetTouchInputMapping(int touchIds_Index, keyMappingInputType status)
	{
		return default(int);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x11A5F60", Offset = "0x11A5F60", VA = "0x11A5F60")]
	private void CollectEffectObjects()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x11AE338", Offset = "0x11AE338", VA = "0x11AE338")]
	private Color StringToColor(string color_string)
	{
		return default(Color);
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x11AE4A4", Offset = "0x11AE4A4", VA = "0x11AE4A4")]
	private Texture2D GetTexture2D(string texture_path)
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x11AE544", Offset = "0x11AE544", VA = "0x11AE544")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x11ADE10", Offset = "0x11ADE10", VA = "0x11ADE10")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x11AE79C", Offset = "0x11AE79C", VA = "0x11AE79C")]
	public WaveVR_AdaptiveControllerActions()
	{
	}
}
[Token(Token = "0x2000195")]
public class WaveVR_ControllerInstanceManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004A6")]
	private class ControllerInstance
	{
		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_DeviceType type;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject instance;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool eventEnabled;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool ShowBeam;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool showPointer;

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x1645A14", Offset = "0x1645A14", VA = "0x1645A14")]
		public ControllerInstance()
		{
		}
	}

	[Token(Token = "0x20004A7")]
	private enum CComponent
	{
		[Token(Token = "0x4001958")]
		Beam,
		[Token(Token = "0x4001959")]
		ControllerPointer
	}

	[Serializable]
	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF84", Offset = "0x9DFF84")]
	private sealed class <>c
	{
		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Log.PeriodLog.StringProcessDelegate <>9__34_0;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Log.PeriodLog.StringProcessDelegate <>9__34_1;

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x16482A4", Offset = "0x16482A4", VA = "0x16482A4")]
		public <>c()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x16482AC", Offset = "0x16482AC", VA = "0x16482AC")]
		internal string <setActiveOfEmitter>b__34_0()
		{
			return null;
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x1648344", Offset = "0x1648344", VA = "0x1648344")]
		internal string <setActiveOfEmitter>b__34_1()
		{
			return null;
		}
	}

	[Token(Token = "0x20004A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFF94", Offset = "0x9DFF94")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ControllerInstance ci;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject _controller;

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x1647F44", Offset = "0x1647F44", VA = "0x1647F44")]
		public <>c__DisplayClass35_0()
		{
		}
	}

	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFFA4", Offset = "0x9DFFA4")]
	private sealed class <>c__DisplayClass35_1
	{
		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Beam _beam;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_ControllerPointer _pointer;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass35_0 CS$<>8__locals1;

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x1647F4C", Offset = "0x1647F4C", VA = "0x1647F4C")]
		public <>c__DisplayClass35_1()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x16483DC", Offset = "0x16483DC", VA = "0x16483DC")]
		internal string <ForceSetActiveOfEmitter>b__0()
		{
			return null;
		}
	}

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ControllerInstanceManager instance;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int ControllerIdx;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject eventSystem;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ControllerInstance> ctrInstanceList;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WVR_DeviceType systemEventType;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WVR_DeviceType lastEventType;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isFocusCapturedBySystemLastFrame;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isCtrInstanceUpdated;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool toSetActiveOfEmitter;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool connectionUpdated;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool rConnected;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool lConnected;

	[Token(Token = "0x1700006E")]
	public static WaveVR_ControllerInstanceManager Instance
	{
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x1644A0C", Offset = "0x1644A0C", VA = "0x1644A0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1644BBC", Offset = "0x1644BBC", VA = "0x1644BBC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1644C5C", Offset = "0x1644C5C", VA = "0x1644C5C")]
	private void PrintIntervalLog(Log.PeriodLog.StringProcessDelegate del)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x1644D20", Offset = "0x1644D20", VA = "0x1644D20")]
	private bool getEventSystemParameter(WVR_DeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1644F74", Offset = "0x1644F74", VA = "0x1644F74")]
	private bool getComponentParameter(GameObject controller, CComponent comp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x16451BC", Offset = "0x16451BC", VA = "0x16451BC")]
	public int registerControllerInstance(WVR_DeviceType type, GameObject controller)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x1645A1C", Offset = "0x1645A1C", VA = "0x1645A1C")]
	public void removeControllerInstance(int index)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1645D94", Offset = "0x1645D94", VA = "0x1645D94")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1646248", Offset = "0x1646248", VA = "0x1646248")]
	private void onDeviceRoleChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x16463B0", Offset = "0x16463B0", VA = "0x16463B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x16465EC", Offset = "0x16465EC", VA = "0x16465EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x16466E0", Offset = "0x16466E0", VA = "0x16466E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x1646794", Offset = "0x1646794", VA = "0x1646794")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x16467DC", Offset = "0x16467DC", VA = "0x16467DC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x16468A4", Offset = "0x16468A4", VA = "0x16468A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x164784C", Offset = "0x164784C", VA = "0x164784C")]
	private void activateEventSystem(WVR_DeviceType type, bool enabled)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x1647DAC", Offset = "0x1647DAC", VA = "0x1647DAC")]
	private void printAllChildren(GameObject go)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x16464AC", Offset = "0x16464AC", VA = "0x16464AC")]
	private void checkControllerConnected()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x1647AD4", Offset = "0x1647AD4", VA = "0x1647AD4")]
	private void setActiveOfEmitter()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x1646DD0", Offset = "0x1646DD0", VA = "0x1646DD0")]
	private bool ForceSetActiveOfEmitter(ControllerInstance ci, bool enabled)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1647F54", Offset = "0x1647F54", VA = "0x1647F54")]
	public WaveVR_ControllerInstanceManager()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1648034", Offset = "0x1648034", VA = "0x1648034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA624", Offset = "0x9EA624")]
	private string <Update>b__30_0()
	{
		return null;
	}
}
[Token(Token = "0x2000196")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DEBC0", Offset = "0x9DEBC0")]
public class WaveVR_ControllerPointer : MonoBehaviour
{
	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFFB4", Offset = "0x9DFFB4")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_ControllerPointer <>4__this;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Log.PeriodLog.StringProcessDelegate del;

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x127E58C", Offset = "0x127E58C", VA = "0x127E58C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x1281DF4", Offset = "0x1281DF4", VA = "0x1281DF4")]
		internal string <PrintIntervalLog>b__0()
		{
			return null;
		}
	}

	[Token(Token = "0x20004AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFFC4", Offset = "0x9DFFC4")]
	private sealed class <>c__DisplayClass79_0
	{
		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool interactive;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 targetLocalPosition;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_ControllerPointer <>4__this;

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x1281CA0", Offset = "0x1281CA0", VA = "0x1281CA0")]
		public <>c__DisplayClass79_0()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x12822B8", Offset = "0x12822B8", VA = "0x12822B8")]
		internal string <SetPointerTarget>b__0()
		{
			return null;
		}
	}

	[Token(Token = "0x4000B20")]
	private const string LOG_TAG = "WaveVR_ControllerPointer";

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useSystemConfig;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pointerOuterDiameterMin;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pointerOuterDiameter;

	[Token(Token = "0x4000B25")]
	private const float pointerDistanceMin = 0.5f;

	[Token(Token = "0x4000B26")]
	private const float pointerDistanceMax = 10f;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pointerDistanceInMeters;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool useTexture;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter pointerMeshFilter;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh pointerMesh;

	[Token(Token = "0x4000B2B")]
	private const string defaultPointerResource_Material = "ControllerPointer";

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material pointerMaterial;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material pointerMaterialInstance;

	[Token(Token = "0x4000B2E")]
	private const string defaultPointerResource_Texture = "focused_dot";

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D defaultTexture;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Texture2D customTexture;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool useDefaultTexture;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public Color pointerColor;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color borderColor;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color focusColor;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color focusBorderColor;

	[Token(Token = "0x4000B36")]
	private const int pointerRenderQueueMin = 1000;

	[Token(Token = "0x4000B37")]
	private const int pointerRenderQueueMax = 5000;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public int pointerRenderQueue;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public bool showPointer;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string textureName;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool blink;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color colorFactor;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int reticleSegments;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public float kpointerGrowthAngle;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float colorFlickerTime;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool isPointerEnabled;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool pointerInitialized;

	[Token(Token = "0x1700006F")]
	public bool UseSystemConfig
	{
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x127E654", Offset = "0x127E654", VA = "0x127E654")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x127E65C", Offset = "0x127E65C", VA = "0x127E65C")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public float PointerOuterDiameterMin
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x127E6E0", Offset = "0x127E6E0", VA = "0x127E6E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x127E6E8", Offset = "0x127E6E8", VA = "0x127E6E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public float PointerOuterDiameter
	{
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x127E778", Offset = "0x127E778", VA = "0x127E778")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x127E780", Offset = "0x127E780", VA = "0x127E780")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public float PointerDistanceInMeters
	{
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x127E810", Offset = "0x127E810", VA = "0x127E810")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x127E818", Offset = "0x127E818", VA = "0x127E818")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public Texture2D CustomTexture
	{
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x127E8C0", Offset = "0x127E8C0", VA = "0x127E8C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x127E8C8", Offset = "0x127E8C8", VA = "0x127E8C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public bool UseDefaultTexture
	{
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x127E928", Offset = "0x127E928", VA = "0x127E928")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x127E930", Offset = "0x127E930", VA = "0x127E930")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public Color PointerColor
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x127E9B4", Offset = "0x127E9B4", VA = "0x127E9B4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x127E9C0", Offset = "0x127E9C0", VA = "0x127E9C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public int PointerRenderQueue
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x127EA78", Offset = "0x127EA78", VA = "0x127EA78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x127EA80", Offset = "0x127EA80", VA = "0x127EA80")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool ShowPointer
	{
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x127EB1C", Offset = "0x127EB1C", VA = "0x127EB1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x127EB24", Offset = "0x127EB24", VA = "0x127EB24")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool Blink
	{
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x127EBA8", Offset = "0x127EBA8", VA = "0x127EBA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x127EBB0", Offset = "0x127EBB0", VA = "0x127EBB0")]
		set
		{
		}
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x127E17C", Offset = "0x127E17C", VA = "0x127E17C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x127E480", Offset = "0x127E480", VA = "0x127E480")]
	private void PrintIntervalLog(Log.PeriodLog.StringProcessDelegate del)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x127EC34", Offset = "0x127EC34", VA = "0x127EC34")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x127FC24", Offset = "0x127FC24", VA = "0x127FC24")]
	private static bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x127FA48", Offset = "0x127FA48", VA = "0x127FA48")]
	private static bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x1280284", Offset = "0x1280284", VA = "0x1280284")]
	private static bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x127FE04", Offset = "0x127FE04", VA = "0x127FE04")]
	private Color32 StringToColor32(string color_string, int value)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x1280460", Offset = "0x1280460", VA = "0x1280460")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x12804DC", Offset = "0x12804DC", VA = "0x12804DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x12808B0", Offset = "0x12808B0", VA = "0x12808B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x12809A4", Offset = "0x12809A4", VA = "0x12809A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x1281698", Offset = "0x1281698", VA = "0x1281698")]
	private void CreatePointerMesh()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1281328", Offset = "0x1281328", VA = "0x1281328")]
	private void initialPointer()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x1280910", Offset = "0x1280910", VA = "0x1280910")]
	private void removePointer()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x1281B2C", Offset = "0x1281B2C", VA = "0x1281B2C")]
	public void OnPointerEnter(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x1281B34", Offset = "0x1281B34", VA = "0x1281B34")]
	private void SetPointerTarget(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1281CA8", Offset = "0x1281CA8", VA = "0x1281CA8")]
	public WaveVR_ControllerPointer()
	{
	}
}
[Token(Token = "0x2000197")]
public class WaveVR_ControllerRootToEmitter : MonoBehaviour
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] moveToEmitter;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject emitter;

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x12878D8", Offset = "0x12878D8", VA = "0x12878D8")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x12879BC", Offset = "0x12879BC", VA = "0x12879BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x1287A68", Offset = "0x1287A68", VA = "0x1287A68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1287B14", Offset = "0x1287B14", VA = "0x1287B14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x1287B18", Offset = "0x1287B18", VA = "0x1287B18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x1287B1C", Offset = "0x1287B1C", VA = "0x1287B1C")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x1288418", Offset = "0x1288418", VA = "0x1288418")]
	public WaveVR_ControllerRootToEmitter()
	{
	}
}
[Token(Token = "0x2000198")]
public class WaveVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x20004AD")]
	public enum ControllerHand
	{
		[Token(Token = "0x4001968")]
		Controller_Right,
		[Token(Token = "0x4001969")]
		Controller_Left
	}

	[Serializable]
	[Token(Token = "0x20004AE")]
	private class BatteryIndicator
	{
		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int level;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float min;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float max;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string texturePath;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool textureLoaded;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D batteryTexture;

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x18310C0", Offset = "0x18310C0", VA = "0x18310C0")]
		public BatteryIndicator()
		{
		}
	}

	[Token(Token = "0x20004AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFFD4", Offset = "0x9DFFD4")]
	private sealed class <SpawnRenderModel>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderModel <>4__this;

		[Token(Token = "0x170002DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0x1833CA4", Offset = "0x1833CA4", VA = "0x1833CA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0x1833D14", Offset = "0x1833D14", VA = "0x1833D14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x182E398", Offset = "0x182E398", VA = "0x182E398")]
		[DebuggerHidden]
		public <SpawnRenderModel>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x1833BC4", Offset = "0x1833BC4", VA = "0x1833BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x1833BC8", Offset = "0x1833BC8", VA = "0x1833BC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x1833CAC", Offset = "0x1833CAC", VA = "0x1833CAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFFE4", Offset = "0x9DFFE4")]
	private sealed class <checkRenderModelAndDelete>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderModel <>4__this;

		[Token(Token = "0x170002E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x1833D90", Offset = "0x1833D90", VA = "0x1833D90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002042")]
			[Address(RVA = "0x1833E00", Offset = "0x1833E00", VA = "0x1833E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x1833A70", Offset = "0x1833A70", VA = "0x1833A70")]
		[DebuggerHidden]
		public <checkRenderModelAndDelete>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x1833D1C", Offset = "0x1833D1C", VA = "0x1833D1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x1833D20", Offset = "0x1833D20", VA = "0x1833D20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x1833D98", Offset = "0x1833D98", VA = "0x1833D98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerHand WhichHand;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject defaultModel;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool updateDynamically;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool mergeToOneBone;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject controllerSpawned;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool connected;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string renderModelNamePath;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string renderModelName;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IntPtr ptrParameterName;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IntPtr ptrResult;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private uint sessionid;

	[Token(Token = "0x4000B53")]
	private const string VRACTIVITY_CLASSNAME = "com.htc.vr.unity.WVRUnityVRActivity";

	[Token(Token = "0x4000B54")]
	private const string FILEUTILS_CLASSNAME = "com.htc.vr.unity.FileUtils";

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Color32> colors;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject meshCom;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject meshGO;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh updateMesh;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Texture2D MatImage;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material modelMat;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private FBXInfo_t[] FBXInfo;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshInfo_t[] SectionInfo;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private uint sectionCount;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Thread mthread;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isChecking;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Material ImgMaterial;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WaitForEndOfFrame wfef;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private WaitForSeconds wfs;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool bLoadMesh;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool isProcessing;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool showBatterIndicator;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
	private bool isBatteryIndicatorReady;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<BatteryIndicator> batteryTextureList;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private BatteryIndicator currentBattery;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject batteryGO;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MeshRenderer batteryMR;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int t;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool IsFocusCapturedBySystemLastFrame;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string emitterMeshName;

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x182A268", Offset = "0x182A268", VA = "0x182A268")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x182A4A4", Offset = "0x182A4A4", VA = "0x182A4A4")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x182A6E0", Offset = "0x182A6E0", VA = "0x182A6E0")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x182A91C", Offset = "0x182A91C", VA = "0x182A91C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x182BA6C", Offset = "0x182BA6C", VA = "0x182BA6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x182BE0C", Offset = "0x182BE0C", VA = "0x182BE0C")]
	private void onOEMConfigChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x182BE64", Offset = "0x182BE64", VA = "0x182BE64")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x182C184", Offset = "0x182C184", VA = "0x182C184")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x182C820", Offset = "0x182C820", VA = "0x182C820")]
	private void onDeviceRoleChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x182B560", Offset = "0x182B560", VA = "0x182B560")]
	private bool isRenderModelNameSameAsPrevious()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x182CAE8", Offset = "0x182CAE8", VA = "0x182CAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x182CDA0", Offset = "0x182CDA0", VA = "0x182CDA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x182AC44", Offset = "0x182AC44", VA = "0x182AC44")]
	private void onLoadController(WVR_DeviceType type)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x182D754", Offset = "0x182D754", VA = "0x182D754")]
	private bool deployZIPFile(int deviceIndex, string renderModelUnzipFolder)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x182DAB8", Offset = "0x182DAB8", VA = "0x182DAB8")]
	private bool loadMeshAndImageByDevice(string renderModelNamePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x182DE6C", Offset = "0x182DE6C", VA = "0x182DE6C")]
	public bool makeupControllerModel(string renderModelNamePath, uint sid)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x182E324", Offset = "0x182E324", VA = "0x182E324")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA634", Offset = "0x9EA634")]
	private IEnumerator SpawnRenderModel()
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x182E3C4", Offset = "0x182E3C4", VA = "0x182E3C4")]
	private void spawnMesh()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x183014C", Offset = "0x183014C", VA = "0x183014C")]
	private void getBatteryIndicatorParam()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x1830BF4", Offset = "0x1830BF4", VA = "0x1830BF4")]
	private void cleanNativeData()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x18310C8", Offset = "0x18310C8", VA = "0x18310C8")]
	private void readNativeData()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1833814", Offset = "0x1833814", VA = "0x1833814")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x182D284", Offset = "0x182D284", VA = "0x182D284")]
	private void updateBatteryLevel()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x182CD2C", Offset = "0x182CD2C", VA = "0x182CD2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA698", Offset = "0x9EA698")]
	private IEnumerator checkRenderModelAndDelete()
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x182B728", Offset = "0x182B728", VA = "0x182B728")]
	private void deleteChild()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x182AC04", Offset = "0x182AC04", VA = "0x182AC04")]
	private bool checkChild()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x1833854", Offset = "0x1833854", VA = "0x1833854")]
	private bool DeleteControllerWhenDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x182AB68", Offset = "0x182AB68", VA = "0x182AB68")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x1833A9C", Offset = "0x1833A9C", VA = "0x1833A9C")]
	public WaveVR_RenderModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000199")]
public class ButtonIndication
{
	[Token(Token = "0x20004B1")]
	public enum Alignment
	{
		[Token(Token = "0x4001977")]
		RIGHT,
		[Token(Token = "0x4001978")]
		LEFT
	}

	[Token(Token = "0x20004B2")]
	public enum KeyIndicator
	{
		[Token(Token = "0x400197A")]
		Trigger,
		[Token(Token = "0x400197B")]
		TouchPad,
		[Token(Token = "0x400197C")]
		DigitalTrigger,
		[Token(Token = "0x400197D")]
		App,
		[Token(Token = "0x400197E")]
		Home,
		[Token(Token = "0x400197F")]
		Volume,
		[Token(Token = "0x4001980")]
		VolumeUp,
		[Token(Token = "0x4001981")]
		VolumeDown,
		[Token(Token = "0x4001982")]
		Grip,
		[Token(Token = "0x4001983")]
		DPad_Left,
		[Token(Token = "0x4001984")]
		DPad_Right,
		[Token(Token = "0x4001985")]
		DPad_Up,
		[Token(Token = "0x4001986")]
		DPad_Down
	}

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public KeyIndicator keyType;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Alignment alignment;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 indicationOffset;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useMultiLanguage;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string indicationText;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool followButtonRotation;

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xC57AC4", Offset = "0xC57AC4", VA = "0xC57AC4")]
	public ButtonIndication()
	{
	}
}
[Serializable]
[Token(Token = "0x200019A")]
public class ComponentsIndication
{
	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Description;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SourceObject;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LineIndicator;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject DestObject;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ButtonIndication.Alignment alignment;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 Offset;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool followButtonRoration;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xC62170", Offset = "0xC62170", VA = "0xC62170")]
	public ComponentsIndication()
	{
	}
}
[Token(Token = "0x200019B")]
public class WaveVR_ShowIndicator : MonoBehaviour
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3940", Offset = "0x9E3940")]
	public bool showIndicator;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3978", Offset = "0x9E3978")]
	public float showIndicatorAngle;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hideIndicatorByRoll;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool basedOnEmitter;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3994", Offset = "0x9E3994")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3994", Offset = "0x9E3994")]
	public float lineLength;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E39F0", Offset = "0x9E39F0")]
	public float lineStartWidth;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3A10", Offset = "0x9E3A10")]
	public float lineEndWidth;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color lineColor;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3A30", Offset = "0x9E3A30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3A30", Offset = "0x9E3A30")]
	public float textCharacterSize;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3A8C", Offset = "0x9E3A8C")]
	public float zhCharactarSize;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3AAC", Offset = "0x9E3AAC")]
	public int textFontSize;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color textColor;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3ACC", Offset = "0x9E3ACC")]
	public List<ButtonIndication> buttonIndicationList;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaveVR_Resource rw;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string sysLang;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string sysCountry;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int checkCount;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject indicatorPrefab;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject linePrefab;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<ComponentsIndication> compInd;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject _HMD;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool needRedraw;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject Emitter;

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x1838CE4", Offset = "0x1838CE4", VA = "0x1838CE4")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x1838D84", Offset = "0x1838D84", VA = "0x1838D84")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x1838E24", Offset = "0x1838E24", VA = "0x1838E24")]
	private void resetIndicator()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x1839118", Offset = "0x1839118", VA = "0x1839118")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x1838EE0", Offset = "0x1838EE0", VA = "0x1838EE0")]
	private void clearResourceAndObject()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x1839124", Offset = "0x1839124", VA = "0x1839124")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x183C464", Offset = "0x183C464", VA = "0x183C464")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x183C504", Offset = "0x183C504", VA = "0x183C504")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x183C5A4", Offset = "0x183C5A4", VA = "0x183C5A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x1839128", Offset = "0x1839128", VA = "0x1839128")]
	public void createIndicator()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x183C5A8", Offset = "0x183C5A8", VA = "0x183C5A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x183D380", Offset = "0x183D380", VA = "0x183D380")]
	public WaveVR_ShowIndicator()
	{
	}
}
[Token(Token = "0x200019C")]
public interface IPointerHoverHandler : IEventSystemHandler
{
	[Token(Token = "0x6000B08")]
	void OnPointerHover(PointerEventData eventData);
}
[Token(Token = "0x200019D")]
public class WaveVR_AddEventSystemGUI : MonoBehaviour
{
	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool added;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x11AEFE0", Offset = "0x11AEFE0", VA = "0x11AEFE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x11AF184", Offset = "0x11AF184", VA = "0x11AF184")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x11AF210", Offset = "0x11AF210", VA = "0x11AF210")]
	public WaveVR_AddEventSystemGUI()
	{
	}
}
[Token(Token = "0x200019E")]
public class WaveVR_EventSystemControllerProvider
{
	[Token(Token = "0x20004B3")]
	public class ControllerModel
	{
		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E86E4", Offset = "0x9E86E4")]
		private GameObject <model>k__BackingField;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E86F4", Offset = "0x9E86F4")]
		private bool <HasLoader>k__BackingField;

		[Token(Token = "0x170002E2")]
		public GameObject model
		{
			[Token(Token = "0x6002043")]
			[Address(RVA = "0x128A4FC", Offset = "0x128A4FC", VA = "0x128A4FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF30", Offset = "0x9EDF30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002044")]
			[Address(RVA = "0x128A504", Offset = "0x128A504", VA = "0x128A504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF40", Offset = "0x9EDF40")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public bool HasLoader
		{
			[Token(Token = "0x6002045")]
			[Address(RVA = "0x128AB84", Offset = "0x128AB84", VA = "0x128AB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF50", Offset = "0x9EDF50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002046")]
			[Address(RVA = "0x128A9E8", Offset = "0x128A9E8", VA = "0x128A9E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF60", Offset = "0x9EDF60")]
			set
			{
			}
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x1289C1C", Offset = "0x1289C1C", VA = "0x1289C1C")]
		public ControllerModel()
		{
		}
	}

	[Token(Token = "0x4000B95")]
	private const string LOG_TAG = "WaveVR_EventSystemControllerProvider";

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_EventSystemControllerProvider instance;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Hashtable ControllerModels;

	[Token(Token = "0x17000079")]
	public static WaveVR_EventSystemControllerProvider Instance
	{
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1289804", Offset = "0x1289804", VA = "0x1289804")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x1289790", Offset = "0x1289790", VA = "0x1289790")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x12898C4", Offset = "0x12898C4", VA = "0x12898C4")]
	private WaveVR_EventSystemControllerProvider()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1289C48", Offset = "0x1289C48", VA = "0x1289C48")]
	public void SetControllerModel(WaveVR_Controller.EDeviceType type, GameObject model)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x128A50C", Offset = "0x128A50C", VA = "0x128A50C")]
	public GameObject GetControllerModel(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x128A69C", Offset = "0x128A69C", VA = "0x128A69C")]
	public void MarkControllerLoader(WaveVR_Controller.EDeviceType type, bool value)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x128A9F4", Offset = "0x128A9F4", VA = "0x128A9F4")]
	public bool HasControllerLoader(WaveVR_Controller.EDeviceType type)
	{
		return default(bool);
	}
}
[Token(Token = "0x200019F")]
internal static class WaveVR_EventSystemGUIProvider
{
	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> EventGUIs;

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x128AB90", Offset = "0x128AB90", VA = "0x128AB90")]
	public static void AddEventGUI(GameObject go)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x128AC1C", Offset = "0x128AC1C", VA = "0x128AC1C")]
	public static void RemoveEventGUI(GameObject go)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x128ACA8", Offset = "0x128ACA8", VA = "0x128ACA8")]
	public static GameObject[] GetEventGUIs()
	{
		return null;
	}
}
[Token(Token = "0x20001A0")]
public static class WaveVR_ExecuteEvents
{
	[Token(Token = "0x1700007A")]
	public static ExecuteEvents.EventFunction<IPointerHoverHandler> pointerHoverHandler
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x128AEEC", Offset = "0x128AEEC", VA = "0x128AEEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x128ADF4", Offset = "0x128ADF4", VA = "0x128ADF4")]
	private static void HoverExecutor(IPointerHoverHandler handler, BaseEventData eventData)
	{
	}
}
[Token(Token = "0x20001A1")]
public enum WaveVR_EInputModule
{
	[Token(Token = "0x4000B9A")]
	Controller,
	[Token(Token = "0x4000B9B")]
	Gaze
}
[Token(Token = "0x20001A2")]
public class WaveVR_InputModuleManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004B4")]
	public class CGazeInputModule
	{
		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool progressRate;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float RateTextZPosition;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool progressCounter;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float CounterTextZPosition;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToGaze;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public EGazeInputEvent InputEvent;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Head;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool BtnControl;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public EGazeTriggerDevice GazeDevice;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public EGazeTriggerButton ButtonToTrigger;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool WithTimeGaze;

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x12936C0", Offset = "0x12936C0", VA = "0x12936C0")]
		public CGazeInputModule()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004B5")]
	public class CControllerInputModule
	{
		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool DominantEventEnabled;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject DominantController;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask DominantRaycastMask;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NonDominantEventEnabled;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NonDominantController;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask NonDominantRaycastMask;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EControllerButtons ButtonToTrigger;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<EControllerButtons> OtherButtonToTrigger;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ERaycastMode RaycastMode;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ERaycastStartPoint RaycastStartPoint;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject Head;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E8744", Offset = "0x9E8744")]
		public string CanvasTag;

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x1293630", Offset = "0x1293630", VA = "0x1293630")]
		public CControllerInputModule()
		{
		}
	}

	[Token(Token = "0x4000B9C")]
	private const string LOG_TAG = "WaveVR_InputModuleManager";

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableInputModule;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool OverrideSystemSettings;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AutoGaze;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool AlwaysShowController;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_EInputModule CustomInputModule;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CGazeInputModule Gaze;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CControllerInputModule Controller;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float FixedBeamLength;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_InputModuleManager instance;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool preOverrideSystemSettings;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaveVR_EInputModule InteractionMode_User;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private WVR_InteractionMode InteractionMode_System;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_InteractionMode InteractionMode_Current;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private WVR_GazeTriggerType gazeTriggerType_User;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WVR_GazeTriggerType gazeTriggerType_System;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private WVR_GazeTriggerType gazeTriggerType_User_pre;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject Head;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject eventSystem;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GazeInputModule gazeInputModule;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaveVR_Reticle gazePointer;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaveVR_ControllerInputModule controllerInputModule;

	[Token(Token = "0x1700007B")]
	public static WaveVR_InputModuleManager Instance
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1291014", Offset = "0x1291014", VA = "0x1291014")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1290FA0", Offset = "0x1290FA0", VA = "0x1290FA0")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x129107C", Offset = "0x129107C", VA = "0x129107C")]
	private void initInteractionModeAndGazeTriggerType()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1291898", Offset = "0x1291898", VA = "0x1291898")]
	private void updateInteractionModeAndGazeTriggerType()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x12915C0", Offset = "0x12915C0", VA = "0x12915C0")]
	private void updateGazeTriggerType_User()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1291DBC", Offset = "0x1291DBC", VA = "0x1291DBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1292014", Offset = "0x1292014", VA = "0x1292014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1292414", Offset = "0x1292414", VA = "0x1292414")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1291E94", Offset = "0x1291E94", VA = "0x1291E94")]
	private void ActivateGazePointer(bool active)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1292838", Offset = "0x1292838", VA = "0x1292838")]
	private void CreateGazeInputModule()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1292928", Offset = "0x1292928", VA = "0x1292928")]
	private void SetGazeInputModuleParameters()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1292BC8", Offset = "0x1292BC8", VA = "0x1292BC8")]
	private void CreateControllerInputModule()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x1292CB8", Offset = "0x1292CB8", VA = "0x1292CB8")]
	private void SetControllerInputModuleParameters()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1292F7C", Offset = "0x1292F7C", VA = "0x1292F7C")]
	private void SetActiveGaze(bool value)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x129306C", Offset = "0x129306C", VA = "0x129306C")]
	private void SetActiveController(bool value)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x1293134", Offset = "0x1293134", VA = "0x1293134")]
	private bool IsAnyControllerConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x1291624", Offset = "0x1291624", VA = "0x1291624")]
	private void initializeInputModuleByCustomSettings()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x1291748", Offset = "0x1291748", VA = "0x1291748")]
	private void initializeInputModuleBySystemSetting()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x12923E8", Offset = "0x12923E8", VA = "0x12923E8")]
	private void disableAllInputModules()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x1291AC8", Offset = "0x1291AC8", VA = "0x1291AC8")]
	private void updateInputModuleByCustomSettings()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x1291C2C", Offset = "0x1291C2C", VA = "0x1291C2C")]
	private void updateInputModuleBySystemSetting()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x1293488", Offset = "0x1293488", VA = "0x1293488")]
	public ERaycastMode GetRaycastMode()
	{
		return default(ERaycastMode);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x1291870", Offset = "0x1291870", VA = "0x1291870")]
	public WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x129351C", Offset = "0x129351C", VA = "0x129351C")]
	public WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x1293538", Offset = "0x1293538", VA = "0x1293538")]
	public WVR_GazeTriggerType GetUserGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1293540", Offset = "0x1293540", VA = "0x1293540")]
	public void SetControllerBeamLength(WaveVR_Controller.EDeviceType dt, float length)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x1293604", Offset = "0x1293604", VA = "0x1293604")]
	public WaveVR_InputModuleManager()
	{
	}
}
[Token(Token = "0x20001A3")]
public class WaveVR_SetAsEventSystemController : MonoBehaviour
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool added;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x1838B84", Offset = "0x1838B84", VA = "0x1838B84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1838C34", Offset = "0x1838C34", VA = "0x1838C34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x1838CD4", Offset = "0x1838CD4", VA = "0x1838CD4")]
	public WaveVR_SetAsEventSystemController()
	{
	}
}
[Token(Token = "0x20001A4")]
public class WaveVR_ControllerPoseTracker : MonoBehaviour
{
	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool InversePosition;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool TrackPosition;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private WVR_SimulationOption currSimulationOption;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bSetupSimulation;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool FollowHead;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool currFollowHead;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool bSetupFollowHead;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool InverseRotation;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool TrackRotation;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WVR_TrackTiming TrackTiming;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool ApplyNeckOffset;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3B14", Offset = "0x9E3B14")]
	public float ElbowRaiseYaxis;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3B30", Offset = "0x9E3B30")]
	public float ElbowRaiseZaxis;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject Head;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3B4C", Offset = "0x9E3B4C")]
	public float pointerTiltAngle;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 controllerSimulatedPosition;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion controllerSimulatedRotation;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float smoothMoveSpeed;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 v3ChangeArmXAxis;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	private bool SetCustomHand;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion headRotation;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 bodyDirection;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion bodyRotation;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion wristOrientation;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 HEADTOELBOW_OFFSET;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 NECK_OFFSET;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 ELBOW_PITCH_OFFSET;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float ELBOW_PITCH_ANGLE_MIN;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float ELBOW_PITCH_ANGLE_MAX;

	[Token(Token = "0x4000BD4")]
	private const float ELBOW_TO_XYPLANE_LERP_MIN = 0.45f;

	[Token(Token = "0x4000BD5")]
	private const float ELBOW_TO_XYPLANE_LERP_MAX = 0.65f;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 ELBOWTOWRIST_OFFSET;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 WRISTTOCONTROLLER_OFFSET;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool cptEnabled;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float mFPS;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 defaultHeadPosition;

	[Token(Token = "0x4000BDB")]
	private const float BodyAngularVelocityUpperBound = 0.2f;

	[Token(Token = "0x4000BDC")]
	private const float ControllerAngularVelocityUpperBound = 30f;

	[Token(Token = "0x4000BDD")]
	private const float BodyAngleBound = 0.01f;

	[Token(Token = "0x4000BDE")]
	private const float BodyAngleLimitation = 0.3f;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private uint framesOfFreeze;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 prevVOffset;

	[Token(Token = "0x1700007C")]
	public Quaternion PointerRotationFromController
	{
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x12827E8", Offset = "0x12827E8", VA = "0x12827E8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1282620", Offset = "0x1282620", VA = "0x1282620")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1282704", Offset = "0x1282704", VA = "0x1282704")]
	private void PrintErrorLog(string msg)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x12828A4", Offset = "0x12828A4", VA = "0x12828A4")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x12839F4", Offset = "0x12839F4", VA = "0x12839F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1284278", Offset = "0x1284278", VA = "0x1284278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x1284BD0", Offset = "0x1284BD0", VA = "0x1284BD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x1284EA4", Offset = "0x1284EA4", VA = "0x1284EA4")]
	private void OnEvent(params object[] args)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1284128", Offset = "0x1284128", VA = "0x1284128")]
	private void SetupPoseSimulation()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1284FAC", Offset = "0x1284FAC", VA = "0x1284FAC")]
	private void OnRecentered(params object[] args)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x1284FB0", Offset = "0x1284FB0", VA = "0x1284FB0")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x1284D6C", Offset = "0x1284D6C", VA = "0x1284D6C")]
	private void updatePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x12850CC", Offset = "0x12850CC", VA = "0x12850CC")]
	private void updateDevicePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x1285388", Offset = "0x1285388", VA = "0x1285388")]
	private void updateControllerPose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x12866EC", Offset = "0x12866EC", VA = "0x12866EC")]
	private Vector3 GetHeadForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x12867D8", Offset = "0x12867D8", VA = "0x12867D8")]
	private Quaternion GetHeadRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x128696C", Offset = "0x128696C", VA = "0x128696C")]
	private Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x1286B08", Offset = "0x1286B08", VA = "0x1286B08")]
	private float BodyRotationFilter1(WVR_DevicePosePair_t pose)
	{
		return default(float);
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x1286BCC", Offset = "0x1286BCC", VA = "0x1286BCC")]
	private float BodyRotationFilter2(WaveVR_Utils.RigidTransform rtPose)
	{
		return default(float);
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x1285F58", Offset = "0x1285F58", VA = "0x1285F58")]
	private void UpdateHeadAndBodyPose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x12870B4", Offset = "0x12870B4", VA = "0x12870B4")]
	private Quaternion GetRelativeControllerRotation(Quaternion rot)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x1287178", Offset = "0x1287178", VA = "0x1287178")]
	private Vector3 GetVelocityOffset(WVR_DevicePosePair_t pose)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x1287350", Offset = "0x1287350", VA = "0x1287350")]
	private Vector3 ApplyNeckToHead(Vector3 headPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x12861CC", Offset = "0x12861CC", VA = "0x12861CC")]
	private void ComputeControllerPose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x128746C", Offset = "0x128746C", VA = "0x128746C")]
	private void ApplyHeadRotation(Vector3 startPosition, Quaternion startRotation)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x128766C", Offset = "0x128766C", VA = "0x128766C")]
	public WaveVR_ControllerPoseTracker()
	{
	}
}
[Token(Token = "0x20001A5")]
public sealed class WaveVR_DevicePoseTracker : MonoBehaviour
{
	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType type;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool inversePosition;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool trackPosition;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E3B9C", Offset = "0x9E3B9C")]
	public bool EnableNeckModel;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool inverseRotation;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool trackRotation;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_TrackTiming timing;

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x1288484", Offset = "0x1288484", VA = "0x1288484")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x1288778", Offset = "0x1288778", VA = "0x1288778")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x12885A0", Offset = "0x12885A0", VA = "0x12885A0")]
	private void updatePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x1288880", Offset = "0x1288880", VA = "0x1288880")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1288C8C", Offset = "0x1288C8C", VA = "0x1288C8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x1288D54", Offset = "0x1288D54", VA = "0x1288D54")]
	public WaveVR_DevicePoseTracker()
	{
	}
}
[Token(Token = "0x20001A6")]
public class WaveVR_PoseSimulator : MonoBehaviour
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_PoseSimulator instance;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WVR_DevicePosePair_t pose_head;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WVR_DevicePosePair_t pose_right;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private WVR_DevicePosePair_t pose_left;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private WaveVR_Utils.RigidTransform rtPose_head;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private WaveVR_Utils.RigidTransform rtPose_right;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private WaveVR_Utils.RigidTransform rtPose_left;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private WaveVR_Utils.WVR_ButtonState_t btn_right;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private WaveVR_Utils.WVR_ButtonState_t btn_left;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private WVR_Axis_t axis_right;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private WVR_Axis_t axis_left;

	[Token(Token = "0x4000BF4")]
	private const ulong Input_Mask_Menu = 2uL;

	[Token(Token = "0x4000BF5")]
	private const ulong Input_Mask_Grip = 4uL;

	[Token(Token = "0x4000BF6")]
	private const ulong Input_Mask_Touchpad = 65536uL;

	[Token(Token = "0x4000BF7")]
	private const ulong Input_Mask_Trigger = 131072uL;

	[Token(Token = "0x4000BF8")]
	private const ulong Input_Mask_DPadUp = 16uL;

	[Token(Token = "0x4000BF9")]
	private const string MOUSE_X = "Mouse X";

	[Token(Token = "0x4000BFA")]
	private const string MOUSE_Y = "Mouse Y";

	[Token(Token = "0x4000BFB")]
	private const string MOUSE_SCROLLWHEEL = "Mouse ScrollWheel";

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float shiftX_head;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float shiftY_head;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float shiftZ_head;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private float angleX_head;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float angleY_head;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private float angleZ_head;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private float shiftX_right;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float shiftY_right;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float shiftZ_right;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float angleX_right;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float angleY_right;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private float angleZ_right;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private float shiftX_left;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private float shiftY_left;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private float shiftZ_left;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private float angleX_left;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private float angleY_left;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	private float angleZ_left;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly KeyCode[] KeyCode_Head;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly KeyCode[] KeyCode_Right;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly KeyCode[] KeyCode_Left;

	[Token(Token = "0x1700007D")]
	public static WaveVR_PoseSimulator Instance
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1296064", Offset = "0x1296064", VA = "0x1296064")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x12961D4", Offset = "0x12961D4", VA = "0x12961D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1296234", Offset = "0x1296234", VA = "0x1296234")]
	public WVR_Vector3f_t GetVelocity(WVR_DeviceType type)
	{
		return default(WVR_Vector3f_t);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x1296258", Offset = "0x1296258", VA = "0x1296258")]
	public WVR_Vector3f_t GetAngularVelocity(WVR_DeviceType type)
	{
		return default(WVR_Vector3f_t);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x129627C", Offset = "0x129627C", VA = "0x129627C")]
	public WaveVR_Utils.RigidTransform GetRigidTransform(WVR_DeviceType type)
	{
		return default(WaveVR_Utils.RigidTransform);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x129633C", Offset = "0x129633C", VA = "0x129633C")]
	public void GetTransform(WVR_DeviceType type, ref WVR_DevicePosePair_t pose, ref WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x12963F8", Offset = "0x12963F8", VA = "0x12963F8")]
	public bool GetButtonPressState(WVR_DeviceType type, WVR_InputId button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x12964F0", Offset = "0x12964F0", VA = "0x12964F0")]
	public bool GetButtonTouchState(WVR_DeviceType type, WVR_InputId button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x12965E8", Offset = "0x12965E8", VA = "0x12965E8")]
	public WVR_Axis_t GetAxis(WVR_DeviceType type, WVR_InputId button)
	{
		return default(WVR_Axis_t);
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x1296620", Offset = "0x1296620", VA = "0x1296620")]
	public void TriggerHapticPulse(WVR_DeviceType device, WVR_InputId id, ushort durationMicroSec)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x1296624", Offset = "0x1296624", VA = "0x1296624")]
	private void UpdateHeadPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x1296A1C", Offset = "0x1296A1C", VA = "0x1296A1C")]
	private void UpdateRightHandPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x1296ED0", Offset = "0x1296ED0", VA = "0x1296ED0")]
	private void UpdateLefHandPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x12971A4", Offset = "0x12971A4", VA = "0x12971A4")]
	public void InAppRecenter()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x12971B0", Offset = "0x12971B0", VA = "0x12971B0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x129742C", Offset = "0x129742C", VA = "0x129742C")]
	public WaveVR_PoseSimulator()
	{
	}
}
[Token(Token = "0x20001A7")]
public enum WVR_TrackTiming
{
	[Token(Token = "0x4000C12")]
	WhenUpdate,
	[Token(Token = "0x4000C13")]
	WhenNewPoses
}
[Token(Token = "0x20001A8")]
public enum WVR_SimulationOption
{
	[Token(Token = "0x4000C15")]
	WhenNoPosition,
	[Token(Token = "0x4000C16")]
	ForceSimulation,
	[Token(Token = "0x4000C17")]
	NoSimulation
}
[Token(Token = "0x20001A9")]
public class WaveVR_PoseTrackerManager : MonoBehaviour
{
	[Token(Token = "0x4000C18")]
	private const string LOG_TAG = "WaveVR_PoseTrackerManager";

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool TrackPosition;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool EnableNeckModel;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool FollowHead;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool TrackRotation;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WVR_TrackTiming TrackTiming;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] IncludedObjects;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] IncludedStates;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool showTrackedObject;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool connected;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool poseUpdated;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasNewPose;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool gazeOnly;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaveVR_DevicePoseTracker devicePoseTracker;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaveVR_ControllerPoseTracker ctrlerPoseTracker;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool ptmEnabled;

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x12975A8", Offset = "0x12975A8", VA = "0x12975A8")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x12977BC", Offset = "0x12977BC", VA = "0x12977BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x1298170", Offset = "0x1298170", VA = "0x1298170")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1298840", Offset = "0x1298840", VA = "0x1298840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1299530", Offset = "0x1299530", VA = "0x1299530")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1299748", Offset = "0x1299748", VA = "0x1299748")]
	private bool hideEventController()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x1299108", Offset = "0x1299108", VA = "0x1299108")]
	public void ActivateTargetObjects()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1297EBC", Offset = "0x1297EBC", VA = "0x1297EBC")]
	private void ForceActivateTargetObjects(bool active)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x12997FC", Offset = "0x12997FC", VA = "0x12997FC")]
	private void SetEmitter(GameObject gobj)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1299A7C", Offset = "0x1299A7C", VA = "0x1299A7C")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1299D70", Offset = "0x1299D70", VA = "0x1299D70")]
	private void onDeviceRoleChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x1299FE4", Offset = "0x1299FE4", VA = "0x1299FE4")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x129A06C", Offset = "0x129A06C", VA = "0x129A06C")]
	private void onSystemFocusChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x129A160", Offset = "0x129A160", VA = "0x129A160")]
	private void onInteractionModeChange(params object[] args)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x129A3CC", Offset = "0x129A3CC", VA = "0x129A3CC")]
	public WaveVR_PoseTrackerManager()
	{
	}
}
[Token(Token = "0x20001AA")]
public class WaveVR : IDisposable
{
	[Token(Token = "0x20004B6")]
	public class Device
	{
		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E877C", Offset = "0x9E877C")]
		private WVR_DeviceType <type>k__BackingField;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E878C", Offset = "0x9E878C")]
		private int <index>k__BackingField;

		[Token(Token = "0x170002E4")]
		public WVR_DeviceType type
		{
			[Token(Token = "0x600204B")]
			[Address(RVA = "0x11A574C", Offset = "0x11A574C", VA = "0x11A574C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF70", Offset = "0x9EDF70")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x600204C")]
			[Address(RVA = "0x11A573C", Offset = "0x11A573C", VA = "0x11A573C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF80", Offset = "0x9EDF80")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public int index
		{
			[Token(Token = "0x600204D")]
			[Address(RVA = "0x11A5754", Offset = "0x11A5754", VA = "0x11A5754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF90", Offset = "0x9EDF90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600204E")]
			[Address(RVA = "0x11A5744", Offset = "0x11A5744", VA = "0x11A5744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDFA0", Offset = "0x9EDFA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public bool connected
		{
			[Token(Token = "0x600204F")]
			[Address(RVA = "0x11A575C", Offset = "0x11A575C", VA = "0x11A575C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E7")]
		public WVR_DevicePosePair_t pose
		{
			[Token(Token = "0x6002050")]
			[Address(RVA = "0x11A580C", Offset = "0x11A580C", VA = "0x11A580C")]
			get
			{
				return default(WVR_DevicePosePair_t);
			}
		}

		[Token(Token = "0x170002E8")]
		public WaveVR_Utils.RigidTransform rigidTransform
		{
			[Token(Token = "0x6002051")]
			[Address(RVA = "0x11A5924", Offset = "0x11A5924", VA = "0x11A5924")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x11A15A8", Offset = "0x11A15A8", VA = "0x11A15A8")]
		public Device(WVR_DeviceType type)
		{
		}
	}

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public bool editor;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR instance;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool Initialized;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool FocusCapturedBySystem;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3BE4", Offset = "0x9E3BE4")]
	private Device <hmd>k__BackingField;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3BF4", Offset = "0x9E3BF4")]
	private Device <controllerLeft>k__BackingField;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3C04", Offset = "0x9E3C04")]
	private Device <controllerRight>k__BackingField;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static WVR_DeviceType[] DeviceTypes;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool[] connected;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint[] deviceIndexMap;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_DevicePosePair_t[] poses;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaveVR_Utils.RigidTransform[] rtPoses;

	[Token(Token = "0x1700007E")]
	public static WaveVR Instance
	{
		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x11A0D2C", Offset = "0x11A0D2C", VA = "0x11A0D2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007F")]
	public Device hmd
	{
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x11A1170", Offset = "0x11A1170", VA = "0x11A1170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA6FC", Offset = "0x9EA6FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x11A1178", Offset = "0x11A1178", VA = "0x11A1178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA70C", Offset = "0x9EA70C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public Device controllerLeft
	{
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x11A1180", Offset = "0x11A1180", VA = "0x11A1180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA71C", Offset = "0x9EA71C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x11A1188", Offset = "0x11A1188", VA = "0x11A1188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA72C", Offset = "0x9EA72C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public Device controllerRight
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x11A1190", Offset = "0x11A1190", VA = "0x11A1190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA73C", Offset = "0x9EA73C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x11A1198", Offset = "0x11A1198", VA = "0x11A1198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA74C", Offset = "0x9EA74C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EFD6C", Offset = "0x9EFD6C")]
	public static bool Hmd
	{
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x11A1540", Offset = "0x11A1540", VA = "0x11A1540")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x11A0B4C", Offset = "0x11A0B4C", VA = "0x11A0B4C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x11A0BEC", Offset = "0x11A0BEC", VA = "0x11A0BEC")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x11A0C8C", Offset = "0x11A0C8C", VA = "0x11A0C8C")]
	private void PrintErrorLog(string msg)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x11A11A0", Offset = "0x11A11A0", VA = "0x11A11A0")]
	public Device getDeviceByType(WVR_DeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x11A1304", Offset = "0x11A1304", VA = "0x11A1304")]
	public Device getDeviceByType(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x11A1400", Offset = "0x11A1400", VA = "0x11A1400")]
	private static void ReportError(WVR_InitError error)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x11A0E28", Offset = "0x11A0E28", VA = "0x11A0E28")]
	private WaveVR()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x11A2038", Offset = "0x11A2038", VA = "0x11A2038", Slot = "1")]
	~WaveVR()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x11A217C", Offset = "0x11A217C", VA = "0x11A217C")]
	public void onLoadLevel()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x11A22FC", Offset = "0x11A22FC", VA = "0x11A22FC")]
	private void UpdateConnection(WVR_DeviceType dt, bool conn)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x11A20AC", Offset = "0x11A20AC", VA = "0x11A20AC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x11A2640", Offset = "0x11A2640", VA = "0x11A2640")]
	public static void SafeDispose()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x11A26EC", Offset = "0x11A26EC", VA = "0x11A26EC")]
	public int is6DoFTracking()
	{
		return default(int);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x11A2734", Offset = "0x11A2734", VA = "0x11A2734")]
	public void UpdatePoses(WVR_PoseOriginModel origin)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x11A273C", Offset = "0x11A273C", VA = "0x11A273C")]
	public void UpdatePoses(WVR_PoseOriginModel origin, bool isSimulator)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x11A43E8", Offset = "0x11A43E8", VA = "0x11A43E8")]
	public int SetQualityLevel(int level, bool applyExpensiveChanges = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x11A16C4", Offset = "0x11A16C4", VA = "0x11A16C4")]
	public bool SetLeftHandedMode(bool leftHandedInEditor = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x11A454C", Offset = "0x11A454C", VA = "0x11A454C")]
	public void SetConnectionStatus(WVR_DeviceType type, bool conn)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x11A1800", Offset = "0x11A1800", VA = "0x11A1800")]
	public void SetConnectionStatus()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x11A429C", Offset = "0x11A429C", VA = "0x11A429C")]
	public void ResetButtonEvents()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x11A51CC", Offset = "0x11A51CC", VA = "0x11A51CC")]
	public void ResetAllButtonStates()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x11A1B9C", Offset = "0x11A1B9C", VA = "0x11A1B9C")]
	public void SetDefaultButtons()
	{
	}
}
[Token(Token = "0x20001AB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DEC24", Offset = "0x9DEC24")]
public class WaveVR_Beam : MonoBehaviour
{
	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9DFFF4", Offset = "0x9DFFF4")]
	private sealed class <>c__DisplayClass74_0
	{
		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 targetLocalPosition;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Beam <>4__this;

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x11B28E0", Offset = "0x11B28E0", VA = "0x11B28E0")]
		public <>c__DisplayClass74_0()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x11B3C10", Offset = "0x11B3C10", VA = "0x11B3C10")]
		internal string <SetEndOffset>b__0()
		{
			return null;
		}
	}

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowBeam;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool useSystemConfig;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useDefaultMaterial;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float startWidth;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float endWidth;

	[Token(Token = "0x4000C3E")]
	private const float minimal_length = 0.1f;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float startOffset;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float endOffset;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float endOffsetMin;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float endOffsetMax;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material customMat;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Color32 startColor;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color32 TailColor;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Color32 endColor;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isBeamLengthValid;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int count;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool updateEveryFrame;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool makeTail;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string textureName;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int maxUVAngle;

	[Token(Token = "0x4000C4D")]
	private const float epsilon = 0.001f;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isBeamEnable;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool connected;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int Count;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int verticesCount;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int indicesCount;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Vector3> vertices;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Vector2> uvs;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> normals;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<int> indices;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<Color32> colors;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 position;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool ListenToDevice;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Mesh emptyMesh;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Mesh updateMesh;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Material materialComp;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MeshFilter mf_beam;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool meshIsCreated;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool toUpdateBeam;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Matrix4x4 mat44_rot;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Matrix4x4 mat44_uv;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3 vec3_vertices_start;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 vec3_vertices_end;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private readonly Vector2 vec2_05_05;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private readonly Vector3 vec3_0_05_0;

	[Token(Token = "0x17000083")]
	public float StartWidth
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x11AF3C4", Offset = "0x11AF3C4", VA = "0x11AF3C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x11AF3CC", Offset = "0x11AF3CC", VA = "0x11AF3CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public float EndWidth
	{
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x11AF3DC", Offset = "0x11AF3DC", VA = "0x11AF3DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x11AF3E4", Offset = "0x11AF3E4", VA = "0x11AF3E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public float StartOffset
	{
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x11AF3F4", Offset = "0x11AF3F4", VA = "0x11AF3F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x11AF3FC", Offset = "0x11AF3FC", VA = "0x11AF3FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public float EndOffset
	{
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x11AF4AC", Offset = "0x11AF4AC", VA = "0x11AF4AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x11AF4B4", Offset = "0x11AF4B4", VA = "0x11AF4B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public Color32 StartColor
	{
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x11AF694", Offset = "0x11AF694", VA = "0x11AF694")]
		get
		{
			return default(Color32);
		}
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x11AF69C", Offset = "0x11AF69C", VA = "0x11AF69C")]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public Color32 EndColor
	{
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x11AF6AC", Offset = "0x11AF6AC", VA = "0x11AF6AC")]
		get
		{
			return default(Color32);
		}
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x11AF6B4", Offset = "0x11AF6B4", VA = "0x11AF6B4")]
		set
		{
		}
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x11AF218", Offset = "0x11AF218", VA = "0x11AF218")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x11AF300", Offset = "0x11AF300", VA = "0x11AF300")]
	private void PrintIntervalLog(Log.PeriodLog.StringProcessDelegate del)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x11AF5A4", Offset = "0x11AF5A4", VA = "0x11AF5A4")]
	public void SetEndOffset(float end_offset)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x11AF6C4", Offset = "0x11AF6C4", VA = "0x11AF6C4")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x11B0BB0", Offset = "0x11B0BB0", VA = "0x11B0BB0")]
	private static bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x11B0220", Offset = "0x11B0220", VA = "0x11B0220")]
	private static bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x11B0DE8", Offset = "0x11B0DE8", VA = "0x11B0DE8")]
	private static bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x11B101C", Offset = "0x11B101C", VA = "0x11B101C")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x11B10D4", Offset = "0x11B10D4", VA = "0x11B10D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x11B1154", Offset = "0x11B1154", VA = "0x11B1154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x11B11D0", Offset = "0x11B11D0", VA = "0x11B11D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x11B1D84", Offset = "0x11B1D84", VA = "0x11B1D84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x11B1F20", Offset = "0x11B1F20", VA = "0x11B1F20")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x11B1F88", Offset = "0x11B1F88", VA = "0x11B1F88")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x11B2784", Offset = "0x11B2784", VA = "0x11B2784")]
	public void SetEndOffset(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x11B28E8", Offset = "0x11B28E8", VA = "0x11B28E8")]
	public void ResetEndOffset()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x11B2BA4", Offset = "0x11B2BA4", VA = "0x11B2BA4")]
	private void createMesh()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x11B26A8", Offset = "0x11B26A8", VA = "0x11B26A8")]
	private void createBeamMesh()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x11B1DE8", Offset = "0x11B1DE8", VA = "0x11B1DE8")]
	private void showBeamMesh(bool show)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x11B3594", Offset = "0x11B3594", VA = "0x11B3594")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x11B0450", Offset = "0x11B0450", VA = "0x11B0450")]
	private void UpdateStartColor(string color_string)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x11B0808", Offset = "0x11B0808", VA = "0x11B0808")]
	private void UpdateEndColor(string color_string)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x11B26D8", Offset = "0x11B26D8", VA = "0x11B26D8")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x11B395C", Offset = "0x11B395C", VA = "0x11B395C")]
	public WaveVR_Beam()
	{
	}
}
[Token(Token = "0x20001AC")]
public class WaveVR_ButtonList : MonoBehaviour
{
	[Token(Token = "0x20004B8")]
	public enum EButtons
	{
		[Token(Token = "0x40019A5")]
		Menu = 1,
		[Token(Token = "0x40019A6")]
		Grip = 2,
		[Token(Token = "0x40019A7")]
		DPadUp = 4,
		[Token(Token = "0x40019A8")]
		DPadRight = 5,
		[Token(Token = "0x40019A9")]
		DPadDown = 6,
		[Token(Token = "0x40019AA")]
		DPadLeft = 3,
		[Token(Token = "0x40019AB")]
		VolumeUp = 7,
		[Token(Token = "0x40019AC")]
		VolumeDown = 8,
		[Token(Token = "0x40019AD")]
		HMDEnter = 15,
		[Token(Token = "0x40019AE")]
		Touchpad = 16,
		[Token(Token = "0x40019AF")]
		Trigger = 17,
		[Token(Token = "0x40019B0")]
		Thumbstick = 18
	}

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EButtons> HmdButtons;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_InputAttribute_t[] inputAttribtues_hmd;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<WVR_InputId> usableButtons_hmd;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hmd_connected;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EButtons> DominantButtons;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_InputAttribute_t[] inputAttributes_Dominant;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<WVR_InputId> usableButtons_dominant;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool dominant_connected;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<EButtons> NonDominantButtons;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WVR_InputAttribute_t[] inputAttributes_NonDominant;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<WVR_InputId> usableButtons_nonDominant;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool nodomint_connected;

	[Token(Token = "0x4000C75")]
	private const uint inputTableSize = 32u;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WVR_InputMappingPair_t[] inputTable;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WVR_InputMappingPair_t inputPair;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ButtonList instance;

	[Token(Token = "0x17000089")]
	public static WaveVR_ButtonList Instance
	{
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x11ADCC4", Offset = "0x11ADCC4", VA = "0x11ADCC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x11B3F90", Offset = "0x11B3F90", VA = "0x11B3F90")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x11B4030", Offset = "0x11B4030", VA = "0x11B4030")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x11B40D0", Offset = "0x11B40D0", VA = "0x11B40D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x11B41A0", Offset = "0x11B41A0", VA = "0x11B41A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x11B4264", Offset = "0x11B4264", VA = "0x11B4264")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x11ADD2C", Offset = "0x11ADD2C", VA = "0x11ADD2C")]
	public bool GetInputMappingPair(WaveVR_Controller.EDeviceType device, ref WVR_InputId destination)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x11B43C8", Offset = "0x11B43C8", VA = "0x11B43C8")]
	private void setupButtonAttributes(WaveVR_Controller.EDeviceType device, List<EButtons> buttons, WVR_InputAttribute_t[] inputAttributes, int count)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x11B4A48", Offset = "0x11B4A48", VA = "0x11B4A48")]
	private void createHmdRequestAttributes()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x11B4B40", Offset = "0x11B4B40", VA = "0x11B4B40")]
	private void createDominantRequestAttributes()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x11B4BE4", Offset = "0x11B4BE4", VA = "0x11B4BE4")]
	private void createNonDominantRequestAttributes()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x11B4C88", Offset = "0x11B4C88", VA = "0x11B4C88")]
	public bool IsButtonAvailable(WaveVR_Controller.EDeviceType device, WVR_InputId button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x11B4D3C", Offset = "0x11B4D3C", VA = "0x11B4D3C")]
	private void SetHmdInputRequest()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x11B519C", Offset = "0x11B519C", VA = "0x11B519C")]
	private void SetDominantInputRequest()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x11B55FC", Offset = "0x11B55FC", VA = "0x11B55FC")]
	private void SetNonDominantInputRequest()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x11B5A5C", Offset = "0x11B5A5C", VA = "0x11B5A5C")]
	private void ResetInputRequest(WaveVR_Controller.EDeviceType device)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x11B5B34", Offset = "0x11B5B34", VA = "0x11B5B34")]
	public void SetupButtonList(WaveVR_Controller.EDeviceType device, List<EButtons> list)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x11B41F4", Offset = "0x11B41F4", VA = "0x11B41F4")]
	public void ResetAllInputRequest()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x11B5C08", Offset = "0x11B5C08", VA = "0x11B5C08")]
	public WaveVR_ButtonList()
	{
	}
}
[Token(Token = "0x20001AD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DECA4", Offset = "0x9DECA4")]
public class WaveVR_Camera : MonoBehaviour, IEquatable<Camera>
{
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_Eye eye;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CommandBuffer cmdBufBeforeForwardOpaque;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CommandBuffer cmdBufBeforeSkybox;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CommandBuffer cmdBufAfterSkybox;

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x11B5D94", Offset = "0x11B5D94", VA = "0x11B5D94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x11B5DEC", Offset = "0x11B5DEC", VA = "0x11B5DEC")]
	public Camera GetCamera()
	{
		return null;
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x11B5E84", Offset = "0x11B5E84", VA = "0x11B5E84")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EA75C", Offset = "0x9EA75C")]
	public Camera getCamera()
	{
		return null;
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x11B5F1C", Offset = "0x11B5F1C", VA = "0x11B5F1C", Slot = "4")]
	public bool Equals(Camera other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x11B5F98", Offset = "0x11B5F98", VA = "0x11B5F98")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x11B69EC", Offset = "0x11B69EC", VA = "0x11B69EC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x11B69F4", Offset = "0x11B69F4", VA = "0x11B69F4")]
	public void SetEyesPosition(Vector3 left, Vector3 right)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x11B6CB0", Offset = "0x11B6CB0", VA = "0x11B6CB0")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x11B6F68", Offset = "0x11B6F68", VA = "0x11B6F68")]
	private void debugLogMatrix(Matrix4x4 m, string name)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x11B7D8C", Offset = "0x11B7D8C", VA = "0x11B7D8C")]
	private void PrepareCommandBuffers()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x11B5FAC", Offset = "0x11B5FAC", VA = "0x11B5FAC")]
	private void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x11B69F0", Offset = "0x11B69F0", VA = "0x11B69F0")]
	private void SinglePassPostRender()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x11B84D0", Offset = "0x11B84D0", VA = "0x11B84D0")]
	public WaveVR_Camera()
	{
	}
}
[Token(Token = "0x20001AE")]
public class WaveVR_CameraTexture
{
	[Token(Token = "0x20004B9")]
	public delegate void UpdateCameraCompleted(uint nativeTextureId);

	[Token(Token = "0x20004BA")]
	public delegate void StartCameraCompleted(bool result);

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WVR_CameraInfo_t camerainfo;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool mStarted;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private uint nativeTextureId;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float spentTime;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static WaveVR_CameraTexture mInstance;

	[Token(Token = "0x1700008A")]
	public bool isStarted
	{
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x11B85FC", Offset = "0x11B85FC", VA = "0x11B85FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	public static WaveVR_CameraTexture instance
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x11B8AC4", Offset = "0x11B8AC4", VA = "0x11B8AC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000014")]
	public static event UpdateCameraCompleted UpdateCameraCompletedDelegate
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x11B8604", Offset = "0x11B8604", VA = "0x11B8604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA794", Offset = "0x9EA794")]
		add
		{
		}
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x11B8734", Offset = "0x11B8734", VA = "0x11B8734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA7A4", Offset = "0x9EA7A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event StartCameraCompleted StartCameraCompletedDelegate
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x11B8864", Offset = "0x11B8864", VA = "0x11B8864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA7B4", Offset = "0x9EA7B4")]
		add
		{
		}
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x11B8994", Offset = "0x11B8994", VA = "0x11B8994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA7C4", Offset = "0x9EA7C4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x11B8BC4", Offset = "0x11B8BC4", VA = "0x11B8BC4")]
	private void OnStartCameraCompleted(params object[] args)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x11B94D8", Offset = "0x11B94D8", VA = "0x11B94D8")]
	private void OnUpdateCameraCompleted(params object[] args)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x11B9CB0", Offset = "0x11B9CB0", VA = "0x11B9CB0")]
	public uint getNativeTextureId()
	{
		return default(uint);
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x11B9CC8", Offset = "0x11B9CC8", VA = "0x11B9CC8")]
	public bool startCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x11B9DF0", Offset = "0x11B9DF0", VA = "0x11B9DF0")]
	public WVR_CameraImageType GetCameraImageType()
	{
		return default(WVR_CameraImageType);
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x11B9DF8", Offset = "0x11B9DF8", VA = "0x11B9DF8")]
	public WVR_CameraImageFormat GetCameraImageFormat()
	{
		return default(WVR_CameraImageFormat);
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x11B9E10", Offset = "0x11B9E10", VA = "0x11B9E10")]
	public uint GetCameraImageWidth()
	{
		return default(uint);
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x11B9E28", Offset = "0x11B9E28", VA = "0x11B9E28")]
	public uint GetCameraImageHeight()
	{
		return default(uint);
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x11B9E40", Offset = "0x11B9E40", VA = "0x11B9E40")]
	public void stopCamera()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x11B9F60", Offset = "0x11B9F60", VA = "0x11B9F60")]
	public void updateTexture(uint textureId)
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x11B8B94", Offset = "0x11B8B94", VA = "0x11B8B94")]
	public WaveVR_CameraTexture()
	{
	}
}
[Token(Token = "0x20001AF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DED08", Offset = "0x9DED08")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DED08", Offset = "0x9DED08")]
public class WaveVR_CanvasEye : MonoBehaviour
{
	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x11BA264", Offset = "0x11BA264", VA = "0x11BA264")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x11BA2D4", Offset = "0x11BA2D4", VA = "0x11BA2D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x11BA468", Offset = "0x11BA468", VA = "0x11BA468")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x11BA5FC", Offset = "0x11BA5FC", VA = "0x11BA5FC")]
	private void MyRenderEye(WaveVR_Render render, WVR_Eye eye, WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x11BA690", Offset = "0x11BA690", VA = "0x11BA690")]
	public WaveVR_CanvasEye()
	{
	}
}
[Token(Token = "0x20001B0")]
public class WaveVR_Controller
{
	[Token(Token = "0x20004BB")]
	public enum EDeviceType
	{
		[Token(Token = "0x40019B2")]
		Head = 1,
		[Token(Token = "0x40019B3")]
		Dominant,
		[Token(Token = "0x40019B4")]
		NonDominant
	}

	[Token(Token = "0x20004BC")]
	public class Device
	{
		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WVR_InputId[] pressIds;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int[] prevFrameCount_press;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool[] state_press;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] prevState_press;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool[] event_state_press;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static WVR_InputId[] touchIds;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] prevFrameCount_touch;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool[] state_touch;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool[] prevState_touch;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool[] event_state_touch;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E879C", Offset = "0x9E879C")]
		private WVR_DeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int prevFrame_connected;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal bool _connected;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int prevFrame_pose;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal WVR_PoseState_t pose;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal WVR_Axis_t axis;

		[Token(Token = "0x170002E9")]
		public WVR_DeviceType DeviceType
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x11A46A0", Offset = "0x11A46A0", VA = "0x11A46A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDFB0", Offset = "0x9EDFB0")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x6002062")]
			[Address(RVA = "0x11BAE7C", Offset = "0x11BAE7C", VA = "0x11BAE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDFC0", Offset = "0x9EDFC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public bool connected
		{
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x11ADA2C", Offset = "0x11ADA2C", VA = "0x11ADA2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x11A46A8", Offset = "0x11A46A8", VA = "0x11A46A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public WaveVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x11BBAAC", Offset = "0x11BBAAC", VA = "0x11BBAAC")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170002EC")]
		public WVR_Vector3f_t velocity
		{
			[Token(Token = "0x6002068")]
			[Address(RVA = "0x11BBC18", Offset = "0x11BBC18", VA = "0x11BBC18")]
			get
			{
				return default(WVR_Vector3f_t);
			}
		}

		[Token(Token = "0x170002ED")]
		public WVR_Vector3f_t AngularVelocity
		{
			[Token(Token = "0x6002069")]
			[Address(RVA = "0x11BBCD0", Offset = "0x11BBCD0", VA = "0x11BBCD0")]
			get
			{
				return default(WVR_Vector3f_t);
			}
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x11BAB80", Offset = "0x11BAB80", VA = "0x11BAB80")]
		public Device(WVR_DeviceType dt)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x11BAE84", Offset = "0x11BAE84", VA = "0x11BAE84")]
		public void SetEventState_Press(WVR_InputId btn, bool down)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x11BB304", Offset = "0x11BB304", VA = "0x11BB304")]
		public bool GetEventState_Press(WVR_InputId btn)
		{
			return default(bool);
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x11BB44C", Offset = "0x11BB44C", VA = "0x11BB44C")]
		public void SetEventState_Touch(WVR_InputId btn, bool down)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x11BB8CC", Offset = "0x11BB8CC", VA = "0x11BB8CC")]
		public bool GetEventState_Touch(WVR_InputId btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x11BBA14", Offset = "0x11BBA14", VA = "0x11BBA14")]
		private bool AllowGetConnectionState()
		{
			return default(bool);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x11BBA5C", Offset = "0x11BBA5C", VA = "0x11BBA5C")]
		private bool AllowGetPoseState()
		{
			return default(bool);
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x11BBD88", Offset = "0x11BBD88", VA = "0x11BBD88")]
		private bool AllowPressActionInAFrame(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x11BBF30", Offset = "0x11BBF30", VA = "0x11BBF30")]
		private bool AllowTouchActionInAFrame(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x11BC0D8", Offset = "0x11BC0D8", VA = "0x11BC0D8")]
		private void Update_PressState(WVR_InputId _id)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x11BC29C", Offset = "0x11BC29C", VA = "0x11BC29C")]
		private void Update_TouchState(WVR_InputId _id)
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x11A530C", Offset = "0x11A530C", VA = "0x11A530C")]
		public void ResetAllButtonStates()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x11A490C", Offset = "0x11A490C", VA = "0x11A490C")]
		public void ResetButtonEvents()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x11BC460", Offset = "0x11BC460", VA = "0x11BC460")]
		public bool GetPress(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x11AA8B0", Offset = "0x11AA8B0", VA = "0x11AA8B0")]
		public bool GetPressDown(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x11AB098", Offset = "0x11AB098", VA = "0x11AB098")]
		public bool GetPressUp(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x11AB928", Offset = "0x11AB928", VA = "0x11AB928")]
		public bool GetTouch(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x11AB228", Offset = "0x11AB228", VA = "0x11AB228")]
		public bool GetTouchDown(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x11ABC90", Offset = "0x11ABC90", VA = "0x11ABC90")]
		public bool GetTouchUp(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x11ABA7C", Offset = "0x11ABA7C", VA = "0x11ABA7C")]
		public Vector2 GetAxis(WVR_InputId _id)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x11BC5B4", Offset = "0x11BC5B4", VA = "0x11BC5B4")]
		public void TriggerHapticPulse(ushort _durationMicroSec = 500, WVR_InputId _id = WVR_InputId.WVR_InputId_16)
		{
		}
	}

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool isLeftHanded;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Device[] devices;

	[Token(Token = "0x1700008C")]
	public static bool IsLeftHanded
	{
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x11A129C", Offset = "0x11A129C", VA = "0x11A129C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x11A4478", Offset = "0x11A4478", VA = "0x11A4478")]
	public static void SetLeftHandedMode(bool lefthanded)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x11BA698", Offset = "0x11BA698", VA = "0x11BA698")]
	public static EDeviceType GetEDeviceByWVRType(WVR_DeviceType type)
	{
		return default(EDeviceType);
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x11A45FC", Offset = "0x11A45FC", VA = "0x11A45FC")]
	public static Device Input(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x11A55A4", Offset = "0x11A55A4", VA = "0x11A55A4")]
	public static Device Input(EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x11BA764", Offset = "0x11BA764", VA = "0x11BA764")]
	private static Device ChangeRole(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x11BAE0C", Offset = "0x11BAE0C", VA = "0x11BAE0C")]
	public WaveVR_Controller()
	{
	}
}
[Token(Token = "0x20001B1")]
public enum EControllerButtons
{
	[Token(Token = "0x4000C93")]
	Menu = 1,
	[Token(Token = "0x4000C94")]
	Touchpad = 16,
	[Token(Token = "0x4000C95")]
	Trigger = 17
}
[Token(Token = "0x20001B2")]
public enum ERaycastMode
{
	[Token(Token = "0x4000C97")]
	Beam,
	[Token(Token = "0x4000C98")]
	Fixed,
	[Token(Token = "0x4000C99")]
	Mouse
}
[Token(Token = "0x20001B3")]
public enum ERaycastStartPoint
{
	[Token(Token = "0x4000C9B")]
	CenterOfEyes,
	[Token(Token = "0x4000C9C")]
	LeftEye,
	[Token(Token = "0x4000C9D")]
	RightEye
}
[Token(Token = "0x20001B4")]
public class WaveVR_ControllerInputModule : BaseInputModule
{
	[Serializable]
	[Token(Token = "0x20004BD")]
	public class CBeamConfig
	{
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float StartWidth;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float EndWidth;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float StartOffset;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float EndOffset;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32 StartColor;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color32 EndColor;

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x16370A4", Offset = "0x16370A4", VA = "0x16370A4")]
		public void equalTo(CBeamConfig src)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1644680", Offset = "0x1644680", VA = "0x1644680")]
		public CBeamConfig()
		{
		}
	}

	[Token(Token = "0x20004BE")]
	public class EventController
	{
		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E87AC", Offset = "0x9E87AC")]
		private WaveVR_Controller.EDeviceType <device>k__BackingField;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E87BC", Offset = "0x9E87BC")]
		private GameObject <controller>k__BackingField;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E87CC", Offset = "0x9E87CC")]
		private GameObject <prevRaycastedObject>k__BackingField;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E87DC", Offset = "0x9E87DC")]
		private PointerEventData <event_data>k__BackingField;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E87EC", Offset = "0x9E87EC")]
		private WaveVR_ControllerPointer <pointer>k__BackingField;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E87FC", Offset = "0x9E87FC")]
		private bool <pointerEnabled>k__BackingField;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E880C", Offset = "0x9E880C")]
		private WaveVR_Beam <beam>k__BackingField;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E881C", Offset = "0x9E881C")]
		private bool <beamEnabled>k__BackingField;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Hashtable raycastModeSettings;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E882C", Offset = "0x9E882C")]
		private bool <eligibleForButtonClick>k__BackingField;

		[Token(Token = "0x170002EE")]
		public WaveVR_Controller.EDeviceType device
		{
			[Token(Token = "0x600207B")]
			[Address(RVA = "0x1637174", Offset = "0x1637174", VA = "0x1637174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDFD0", Offset = "0x9EDFD0")]
			get
			{
				return default(WaveVR_Controller.EDeviceType);
			}
			[Token(Token = "0x600207C")]
			[Address(RVA = "0x16449FC", Offset = "0x16449FC", VA = "0x16449FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDFE0", Offset = "0x9EDFE0")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public GameObject controller
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0x1635F0C", Offset = "0x1635F0C", VA = "0x1635F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDFF0", Offset = "0x9EDFF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600207E")]
			[Address(RVA = "0x163709C", Offset = "0x163709C", VA = "0x163709C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE000", Offset = "0x9EE000")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public GameObject prevRaycastedObject
		{
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x1640244", Offset = "0x1640244", VA = "0x1640244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE010", Offset = "0x9EE010")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002080")]
			[Address(RVA = "0x163F04C", Offset = "0x163F04C", VA = "0x163F04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE020", Offset = "0x9EE020")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public PointerEventData event_data
		{
			[Token(Token = "0x6002081")]
			[Address(RVA = "0x1635590", Offset = "0x1635590", VA = "0x1635590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE030", Offset = "0x9EE030")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x1643E3C", Offset = "0x1643E3C", VA = "0x1643E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE040", Offset = "0x9EE040")]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public WaveVR_ControllerPointer pointer
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x1639FE8", Offset = "0x1639FE8", VA = "0x1639FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE050", Offset = "0x9EE050")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x1639FE0", Offset = "0x1639FE0", VA = "0x1639FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE060", Offset = "0x9EE060")]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public bool pointerEnabled
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x1643E44", Offset = "0x1643E44", VA = "0x1643E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE070", Offset = "0x9EE070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x1643E4C", Offset = "0x1643E4C", VA = "0x1643E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE080", Offset = "0x9EE080")]
			set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public WaveVR_Beam beam
		{
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x163716C", Offset = "0x163716C", VA = "0x163716C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE090", Offset = "0x9EE090")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x1637164", Offset = "0x1637164", VA = "0x1637164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE0A0", Offset = "0x9EE0A0")]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public bool beamEnabled
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x1643E58", Offset = "0x1643E58", VA = "0x1643E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE0B0", Offset = "0x9EE0B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x1643E60", Offset = "0x1643E60", VA = "0x1643E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE0C0", Offset = "0x9EE0C0")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public bool eligibleForButtonClick
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x1644A04", Offset = "0x1644A04", VA = "0x1644A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE0D0", Offset = "0x9EE0D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x16402F4", Offset = "0x16402F4", VA = "0x16402F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE0E0", Offset = "0x9EE0E0")]
			set
			{
			}
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x163CB80", Offset = "0x163CB80", VA = "0x163CB80")]
		public EventController(WaveVR_Controller.EDeviceType type)
		{
		}
	}

	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0004", Offset = "0x9E0004")]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Controller.EDeviceType _dt;

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x163EB40", Offset = "0x163EB40", VA = "0x163EB40")]
		public <>c__DisplayClass51_0()
		{
		}
	}

	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0014", Offset = "0x9E0014")]
	private sealed class <>c__DisplayClass51_1
	{
		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 _intersectionPosition_prev;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass51_0 CS$<>8__locals1;

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x163EB48", Offset = "0x163EB48", VA = "0x163EB48")]
		public <>c__DisplayClass51_1()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x1644688", Offset = "0x1644688", VA = "0x1644688")]
		internal string <Process>b__0()
		{
			return null;
		}
	}

	[Token(Token = "0x4000C9E")]
	private const string LOG_TAG = "WaveVR_ControllerInputModule";

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool UnityMouseMode;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool DomintEventEnabled;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject DominantController;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LayerMask DominantRaycastMask;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool NoDomtEventEnabled;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject NonDominantController;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask NonDominantRaycastMask;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public EControllerButtons ButtonToTrigger;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<EControllerButtons> OtherButtonToTrigger;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Head;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public ERaycastMode RaycastMode;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public ERaycastStartPoint RaycastStartPoint;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E3CE4", Offset = "0x9E3CE4")]
	public string CanvasTag;

	[Token(Token = "0x4000CAC")]
	private const float CLICK_TIME = 0.2f;

	[Token(Token = "0x4000CAD")]
	private const float raycastStartPointOffset = 0.0315f;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject pointCameraNoDomt;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject pointCameraDomint;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float FixedBeamLength;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lengthFromBeamToPointer;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color32 FlexiblePointerColor;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ERaycastMode preRaycastMode;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool toChangeBeamPointer;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 DomintIntersectPos_prev;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 NoDomtIntersectPos_prev;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool mForceModuleActive;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CBeamConfig mouseBeamConfig;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CBeamConfig fixedBeamConfig;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CBeamConfig flexibleBeamConfig;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Hashtable EventControllers;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool enableControllerInputModule;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector2 centerOfScreen;

	[Token(Token = "0x1700008D")]
	public bool ForceModuleActive
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1635158", Offset = "0x1635158", VA = "0x1635158")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1635160", Offset = "0x1635160", VA = "0x1635160")]
		set
		{
		}
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x163504C", Offset = "0x163504C", VA = "0x163504C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x16350C4", Offset = "0x16350C4", VA = "0x16350C4")]
	private void PrintIntervalLog(Log.PeriodLog.StringProcessDelegate del)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x163516C", Offset = "0x163516C", VA = "0x163516C", Slot = "25")]
	public override bool IsModuleSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x1635174", Offset = "0x1635174", VA = "0x1635174", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x16351A8", Offset = "0x16351A8", VA = "0x16351A8", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x1635598", Offset = "0x1635598", VA = "0x1635598")]
	private void SetControllerModel()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x1636F6C", Offset = "0x1636F6C", VA = "0x1636F6C")]
	private void SetupEventController(EventController event_controller, GameObject controller_model)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x1635F14", Offset = "0x1635F14", VA = "0x1635F14")]
	private void SetupEventController(EventController eventController, GameObject controller_model, LayerMask mask)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x163717C", Offset = "0x163717C", VA = "0x163717C")]
	private void SetupEventControllerBeam(EventController eventController, Vector3 intersectionPosition, bool updateRaycastConfig = false)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x163AAC4", Offset = "0x163AAC4", VA = "0x163AAC4")]
	private void SetupEventControllerPointer(EventController eventController, Camera eventCamera, Vector3 intersectionPosition)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x1639FF0", Offset = "0x1639FF0", VA = "0x1639FF0")]
	private void SetupEventControllerPointer(EventController eventController)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x163B478", Offset = "0x163B478", VA = "0x163B478")]
	public void ChangeBeamLength(WaveVR_Controller.EDeviceType dt, float length)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x163B72C", Offset = "0x163B72C", VA = "0x163B72C")]
	private void SetupPointerCamera(WaveVR_Controller.EDeviceType type)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x163C508", Offset = "0x163C508", VA = "0x163C508", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x163CEF4", Offset = "0x163CEF4", VA = "0x163CEF4", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x163D320", Offset = "0x163D320", VA = "0x163D320", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1640E4C", Offset = "0x1640E4C", VA = "0x1640E4C")]
	private void OnTriggerDown(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1641710", Offset = "0x1641710", VA = "0x1641710")]
	private void OnTriggerUp(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x164204C", Offset = "0x164204C", VA = "0x164204C")]
	private void OnTriggerUpMouse(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x1640300", Offset = "0x1640300", VA = "0x1640300")]
	private void OnDrag(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1640A54", Offset = "0x1640A54", VA = "0x1640A54")]
	private void OnDragMouse(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x164024C", Offset = "0x164024C", VA = "0x164024C")]
	private void OnTriggerHover(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x163FCE8", Offset = "0x163FCE8", VA = "0x163FCE8")]
	private void OnTriggerEnterAndExit(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x164366C", Offset = "0x164366C", VA = "0x164366C")]
	private void onButtonClick(EventController event_controller)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x163F9F0", Offset = "0x163F9F0", VA = "0x163F9F0")]
	private void PhysicRaycast(EventController event_controller, PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x163F450", Offset = "0x163F450", VA = "0x163F450")]
	private void GraphicRaycast(EventController event_controller, Camera event_camera)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x163F2A8", Offset = "0x163F2A8", VA = "0x163F2A8")]
	private void ResetPointerEventData(WaveVR_Controller.EDeviceType type)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x163F054", Offset = "0x163F054", VA = "0x163F054")]
	private void ResetPointerEventData_Hybrid(WaveVR_Controller.EDeviceType type, Camera eventCam)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x1642DF0", Offset = "0x1642DF0", VA = "0x1642DF0")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x163B2AC", Offset = "0x163B2AC", VA = "0x163B2AC")]
	private GameObject GetRaycastedObject(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x163EB50", Offset = "0x163EB50", VA = "0x163EB50")]
	private void CheckBeamPointerActive(EventController eventController)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x1642FBC", Offset = "0x1642FBC", VA = "0x1642FBC")]
	private void SetPointerCameraTracker()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x1643B3C", Offset = "0x1643B3C", VA = "0x1643B3C")]
	private GameObject[] MergeArray(GameObject[] start, GameObject[] end)
	{
		return null;
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x163A0C4", Offset = "0x163A0C4", VA = "0x163A0C4")]
	private static bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x163A2A8", Offset = "0x163A2A8", VA = "0x163A2A8")]
	private void UpdateStartColor(EventController eventController, string color_string)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x1643E6C", Offset = "0x1643E6C", VA = "0x1643E6C")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x163A6C0", Offset = "0x163A6C0", VA = "0x163A6C0")]
	private void UpdateEndColor(EventController eventController, string color_string)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1644210", Offset = "0x1644210", VA = "0x1644210")]
	public WaveVR_ControllerInputModule()
	{
	}
}
[Token(Token = "0x20001B5")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DED90", Offset = "0x9DED90")]
public class WaveVR_ControllerListener : MonoBehaviour
{
	[Token(Token = "0x20004C1")]
	public class Device
	{
		[Token(Token = "0x20005B8")]
		public delegate void ButtonEventHandler();

		[Token(Token = "0x20005B9")]
		public delegate void ConnectionEventHandler(bool value);

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0568", Offset = "0x9E0568")]
		private sealed class <PollingConnectionStatus>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000394")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002423")]
				[Address(RVA = "0x164BB2C", Offset = "0x164BB2C", VA = "0x164BB2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000395")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002425")]
				[Address(RVA = "0x164BB9C", Offset = "0x164BB9C", VA = "0x164BB9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002420")]
			[Address(RVA = "0x164AEA0", Offset = "0x164AEA0", VA = "0x164AEA0")]
			[DebuggerHidden]
			public <PollingConnectionStatus>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6002421")]
			[Address(RVA = "0x164B5D0", Offset = "0x164B5D0", VA = "0x164B5D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002422")]
			[Address(RVA = "0x164B5D4", Offset = "0x164B5D4", VA = "0x164B5D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002424")]
			[Address(RVA = "0x164BB34", Offset = "0x164BB34", VA = "0x164BB34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0578", Offset = "0x9E0578")]
		private sealed class <PollingPressState_Menu>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000396")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002429")]
				[Address(RVA = "0x164C70C", Offset = "0x164C70C", VA = "0x164C70C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000397")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600242B")]
				[Address(RVA = "0x164C77C", Offset = "0x164C77C", VA = "0x164C77C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002426")]
			[Address(RVA = "0x164B01C", Offset = "0x164B01C", VA = "0x164B01C")]
			[DebuggerHidden]
			public <PollingPressState_Menu>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6002427")]
			[Address(RVA = "0x164C394", Offset = "0x164C394", VA = "0x164C394", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002428")]
			[Address(RVA = "0x164C398", Offset = "0x164C398", VA = "0x164C398", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0x164C714", Offset = "0x164C714", VA = "0x164C714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0588", Offset = "0x9E0588")]
		private sealed class <PollingPressState_Grip>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000398")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600242F")]
				[Address(RVA = "0x164C31C", Offset = "0x164C31C", VA = "0x164C31C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000399")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002431")]
				[Address(RVA = "0x164C38C", Offset = "0x164C38C", VA = "0x164C38C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600242C")]
			[Address(RVA = "0x164B048", Offset = "0x164B048", VA = "0x164B048")]
			[DebuggerHidden]
			public <PollingPressState_Grip>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x600242D")]
			[Address(RVA = "0x164BBA4", Offset = "0x164BBA4", VA = "0x164BBA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600242E")]
			[Address(RVA = "0x164BBA8", Offset = "0x164BBA8", VA = "0x164BBA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002430")]
			[Address(RVA = "0x164C324", Offset = "0x164C324", VA = "0x164C324", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0598", Offset = "0x9E0598")]
		private sealed class <PollingPressState_Touchpad>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700039A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002435")]
				[Address(RVA = "0x164CAFC", Offset = "0x164CAFC", VA = "0x164CAFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002437")]
				[Address(RVA = "0x164CB6C", Offset = "0x164CB6C", VA = "0x164CB6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002432")]
			[Address(RVA = "0x164B074", Offset = "0x164B074", VA = "0x164B074")]
			[DebuggerHidden]
			public <PollingPressState_Touchpad>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6002433")]
			[Address(RVA = "0x164C784", Offset = "0x164C784", VA = "0x164C784", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002434")]
			[Address(RVA = "0x164C788", Offset = "0x164C788", VA = "0x164C788", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0x164CB04", Offset = "0x164CB04", VA = "0x164CB04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E05A8", Offset = "0x9E05A8")]
		private sealed class <PollingPressState_Trigger>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700039C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600243B")]
				[Address(RVA = "0x164CEEC", Offset = "0x164CEEC", VA = "0x164CEEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600243D")]
				[Address(RVA = "0x164CF5C", Offset = "0x164CF5C", VA = "0x164CF5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002438")]
			[Address(RVA = "0x164B0A0", Offset = "0x164B0A0", VA = "0x164B0A0")]
			[DebuggerHidden]
			public <PollingPressState_Trigger>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6002439")]
			[Address(RVA = "0x164CB74", Offset = "0x164CB74", VA = "0x164CB74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0x164CB78", Offset = "0x164CB78", VA = "0x164CB78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600243C")]
			[Address(RVA = "0x164CEF4", Offset = "0x164CEF4", VA = "0x164CEF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E05B8", Offset = "0x9E05B8")]
		private sealed class <PollingTouchState_Touchpad>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700039E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002441")]
				[Address(RVA = "0x164D2DC", Offset = "0x164D2DC", VA = "0x164D2DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002443")]
				[Address(RVA = "0x164D34C", Offset = "0x164D34C", VA = "0x164D34C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600243E")]
			[Address(RVA = "0x164B19C", Offset = "0x164B19C", VA = "0x164B19C")]
			[DebuggerHidden]
			public <PollingTouchState_Touchpad>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x600243F")]
			[Address(RVA = "0x164CF64", Offset = "0x164CF64", VA = "0x164CF64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002440")]
			[Address(RVA = "0x164CF68", Offset = "0x164CF68", VA = "0x164CF68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002442")]
			[Address(RVA = "0x164D2E4", Offset = "0x164D2E4", VA = "0x164D2E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E05C8", Offset = "0x9E05C8")]
		private sealed class <PollingTouchState_Trigger>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x170003A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002447")]
				[Address(RVA = "0x164D6CC", Offset = "0x164D6CC", VA = "0x164D6CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002449")]
				[Address(RVA = "0x164D73C", Offset = "0x164D73C", VA = "0x164D73C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002444")]
			[Address(RVA = "0x164B1C8", Offset = "0x164B1C8", VA = "0x164B1C8")]
			[DebuggerHidden]
			public <PollingTouchState_Trigger>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0x164D354", Offset = "0x164D354", VA = "0x164D354", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0x164D358", Offset = "0x164D358", VA = "0x164D358", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002448")]
			[Address(RVA = "0x164D6D4", Offset = "0x164D6D4", VA = "0x164D6D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ulong Input_Mask_Menu;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ulong Input_Mask_Grip;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ulong Input_Mask_Touchpad;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ulong Input_Mask_Trigger;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IEnumerator ieConnection;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator iePressMenu;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator iePressGrip;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator iePressTouchpad;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IEnumerator iePressTrigger;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerator ieTouchTouchpad;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IEnumerator ieTouchTrigger;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E883C", Offset = "0x9E883C")]
		private WVR_DeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal WaveVR_Utils.RigidTransform rt;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal WaveVR_Utils.WVR_ButtonState_t state;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal WaveVR_Utils.WVR_ButtonState_t pre_state;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal WVR_Axis_t axis;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal WVR_PoseState_t pose;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private WaitForEndOfFrame waitForEndOfFrame;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E890C", Offset = "0x9E890C")]
		private bool <connected>k__BackingField;

		[Token(Token = "0x170002F7")]
		public WVR_DeviceType DeviceType
		{
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x1648EAC", Offset = "0x1648EAC", VA = "0x1648EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE0F0", Offset = "0x9EE0F0")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x164924C", Offset = "0x164924C", VA = "0x164924C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE100", Offset = "0x9EE100")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public WaveVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x1649580", Offset = "0x1649580", VA = "0x1649580")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170002F9")]
		public bool connected
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x164ACAC", Offset = "0x164ACAC", VA = "0x164ACAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE290", Offset = "0x9EE290")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x164ACB4", Offset = "0x164ACB4", VA = "0x164ACB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE2A0", Offset = "0x9EE2A0")]
			private set
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event ButtonEventHandler PressDownListenersMenu
		{
			[Token(Token = "0x6002095")]
			[Address(RVA = "0x164962C", Offset = "0x164962C", VA = "0x164962C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE110", Offset = "0x9EE110")]
			add
			{
			}
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x164971C", Offset = "0x164971C", VA = "0x164971C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE120", Offset = "0x9EE120")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event ButtonEventHandler PressDownListenersGrip
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x164980C", Offset = "0x164980C", VA = "0x164980C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE130", Offset = "0x9EE130")]
			add
			{
			}
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x16498FC", Offset = "0x16498FC", VA = "0x16498FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE140", Offset = "0x9EE140")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event ButtonEventHandler PressDownListenersTouchpad
		{
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x16499EC", Offset = "0x16499EC", VA = "0x16499EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE150", Offset = "0x9EE150")]
			add
			{
			}
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x1649ADC", Offset = "0x1649ADC", VA = "0x1649ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE160", Offset = "0x9EE160")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event ButtonEventHandler PressDownListenersTrigger
		{
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x1649BCC", Offset = "0x1649BCC", VA = "0x1649BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE170", Offset = "0x9EE170")]
			add
			{
			}
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x1649CBC", Offset = "0x1649CBC", VA = "0x1649CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE180", Offset = "0x9EE180")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event ButtonEventHandler PressUpListenersMenu
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x1649DAC", Offset = "0x1649DAC", VA = "0x1649DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE190", Offset = "0x9EE190")]
			add
			{
			}
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x1649E9C", Offset = "0x1649E9C", VA = "0x1649E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE1A0", Offset = "0x9EE1A0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event ButtonEventHandler PressUpListenersGrip
		{
			[Token(Token = "0x600209F")]
			[Address(RVA = "0x1649F8C", Offset = "0x1649F8C", VA = "0x1649F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE1B0", Offset = "0x9EE1B0")]
			add
			{
			}
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x164A07C", Offset = "0x164A07C", VA = "0x164A07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE1C0", Offset = "0x9EE1C0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event ButtonEventHandler PressUpListenersTouchpad
		{
			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x164A16C", Offset = "0x164A16C", VA = "0x164A16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE1D0", Offset = "0x9EE1D0")]
			add
			{
			}
			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x164A25C", Offset = "0x164A25C", VA = "0x164A25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE1E0", Offset = "0x9EE1E0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event ButtonEventHandler PressUpListenersTrigger
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x164A34C", Offset = "0x164A34C", VA = "0x164A34C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE1F0", Offset = "0x9EE1F0")]
			add
			{
			}
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x164A43C", Offset = "0x164A43C", VA = "0x164A43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE200", Offset = "0x9EE200")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event ButtonEventHandler TouchDownListenersTouchpad
		{
			[Token(Token = "0x60020A5")]
			[Address(RVA = "0x164A52C", Offset = "0x164A52C", VA = "0x164A52C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE210", Offset = "0x9EE210")]
			add
			{
			}
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x164A61C", Offset = "0x164A61C", VA = "0x164A61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE220", Offset = "0x9EE220")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event ButtonEventHandler TouchDownListenersTrigger
		{
			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x164A70C", Offset = "0x164A70C", VA = "0x164A70C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE230", Offset = "0x9EE230")]
			add
			{
			}
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x164A7FC", Offset = "0x164A7FC", VA = "0x164A7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE240", Offset = "0x9EE240")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event ButtonEventHandler TouchUpListenersTouchpad
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x164A8EC", Offset = "0x164A8EC", VA = "0x164A8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE250", Offset = "0x9EE250")]
			add
			{
			}
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x164A9DC", Offset = "0x164A9DC", VA = "0x164A9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE260", Offset = "0x9EE260")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event ButtonEventHandler TouchUpListenersTrigger
		{
			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x164AACC", Offset = "0x164AACC", VA = "0x164AACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE270", Offset = "0x9EE270")]
			add
			{
			}
			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x164ABBC", Offset = "0x164ABBC", VA = "0x164ABBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE280", Offset = "0x9EE280")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event ConnectionEventHandler ConnectionStatusListeners
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x164ACC0", Offset = "0x164ACC0", VA = "0x164ACC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE2B0", Offset = "0x9EE2B0")]
			add
			{
			}
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x164ADB0", Offset = "0x164ADB0", VA = "0x164ADB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE2C0", Offset = "0x9EE2C0")]
			remove
			{
			}
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x1648D1C", Offset = "0x1648D1C", VA = "0x1648D1C")]
		public Device(WVR_DeviceType dt)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x1649254", Offset = "0x1649254", VA = "0x1649254")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE2D0", Offset = "0x9EE2D0")]
		private IEnumerator PollingConnectionStatus()
		{
			return null;
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x164AECC", Offset = "0x164AECC", VA = "0x164AECC")]
		public bool GetPress(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x16492C8", Offset = "0x16492C8", VA = "0x16492C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE334", Offset = "0x9EE334")]
		private IEnumerator PollingPressState_Menu()
		{
			return null;
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x164933C", Offset = "0x164933C", VA = "0x164933C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE398", Offset = "0x9EE398")]
		private IEnumerator PollingPressState_Grip()
		{
			return null;
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x16493B0", Offset = "0x16493B0", VA = "0x16493B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE3FC", Offset = "0x9EE3FC")]
		private IEnumerator PollingPressState_Touchpad()
		{
			return null;
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1649424", Offset = "0x1649424", VA = "0x1649424")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE460", Offset = "0x9EE460")]
		private IEnumerator PollingPressState_Trigger()
		{
			return null;
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x164B0CC", Offset = "0x164B0CC", VA = "0x164B0CC")]
		public bool GetTouch(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1649498", Offset = "0x1649498", VA = "0x1649498")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE4C4", Offset = "0x9EE4C4")]
		private IEnumerator PollingTouchState_Touchpad()
		{
			return null;
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x164950C", Offset = "0x164950C", VA = "0x164950C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE528", Offset = "0x9EE528")]
		private IEnumerator PollingTouchState_Trigger()
		{
			return null;
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x164B1F4", Offset = "0x164B1F4", VA = "0x164B1F4")]
		public Vector2 GetAxis(WVR_InputId _id)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x164B418", Offset = "0x164B418", VA = "0x164B418")]
		public void TriggerHapticPulse(ushort _durationMicroSec = 500, WVR_InputId _id = WVR_InputId.WVR_InputId_16)
		{
		}
	}

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ControllerListener instance;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Device[] devices;

	[Token(Token = "0x1700008E")]
	public static WaveVR_ControllerListener Instance
	{
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x16487C4", Offset = "0x16487C4", VA = "0x16487C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x1648974", Offset = "0x1648974", VA = "0x1648974")]
	public Device ChangeRole(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x1648EB4", Offset = "0x1648EB4", VA = "0x1648EB4")]
	public Device Input(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x1648F40", Offset = "0x1648F40", VA = "0x1648F40")]
	public Device Input(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x1648FC8", Offset = "0x1648FC8", VA = "0x1648FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x16491D8", Offset = "0x16491D8", VA = "0x16491D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x16491DC", Offset = "0x16491DC", VA = "0x16491DC")]
	public WaveVR_ControllerListener()
	{
	}
}
[Token(Token = "0x20001B6")]
public class WaveVR_ControllerLoader : MonoBehaviour
{
	[Token(Token = "0x20004C2")]
	public enum ControllerHand
	{
		[Token(Token = "0x40019F9")]
		Dominant,
		[Token(Token = "0x40019FA")]
		Non_Dominant
	}

	[Token(Token = "0x20004C3")]
	public enum CComponent
	{
		[Token(Token = "0x40019FC")]
		One_Bone,
		[Token(Token = "0x40019FD")]
		Multi_Component
	}

	[Token(Token = "0x20004C4")]
	public enum CTrackingSpace
	{
		[Token(Token = "0x40019FF")]
		REAL_POSITION_ONLY,
		[Token(Token = "0x4001A00")]
		FAKE_POSITION_ONLY,
		[Token(Token = "0x4001A01")]
		AUTO_POSITION_ONLY,
		[Token(Token = "0x4001A02")]
		ROTATION_ONLY,
		[Token(Token = "0x4001A03")]
		ROTATION_AND_REAL_POSITION,
		[Token(Token = "0x4001A04")]
		ROTATION_AND_FAKE_POSITION,
		[Token(Token = "0x4001A05")]
		ROTATION_AND_AUTO_POSITION,
		[Token(Token = "0x4001A06")]
		CTS_SYSTEM
	}

	[Token(Token = "0x20004C5")]
	public enum ControllerType
	{
		[Token(Token = "0x4001A08")]
		ControllerType_None,
		[Token(Token = "0x4001A09")]
		ControllerType_Generic,
		[Token(Token = "0x4001A0A")]
		ControllerType_Resources,
		[Token(Token = "0x4001A0B")]
		ControllerType_AssetBundles,
		[Token(Token = "0x4001A0C")]
		ControllerType_AdaptiveController
	}

	[Token(Token = "0x20004C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0024", Offset = "0x9E0024")]
	private sealed class <checkRenderModelAndDelete>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_ControllerLoader <>4__this;

		[Token(Token = "0x170002FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x16554C0", Offset = "0x16554C0", VA = "0x16554C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x1655530", Offset = "0x1655530", VA = "0x1655530", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x16541B0", Offset = "0x16541B0", VA = "0x16541B0")]
		[DebuggerHidden]
		public <checkRenderModelAndDelete>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x165544C", Offset = "0x165544C", VA = "0x165544C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x1655450", Offset = "0x1655450", VA = "0x1655450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x16554C8", Offset = "0x16554C8", VA = "0x16554C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3D2C", Offset = "0x9E3D2C")]
	public ControllerHand WhichHand;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CComponent ControllerComponents;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool TrackPosition;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool FollowHead;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool TrackRotation;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3D64", Offset = "0x9E3D64")]
	public bool overwriteIndicatorSettings;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool showIndicator;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hideIndicatorByRoll;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool basedOnEmitter;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3D9C", Offset = "0x9E3D9C")]
	public float showIndicatorAngle;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3DB8", Offset = "0x9E3DB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3DB8", Offset = "0x9E3DB8")]
	public float lineLength;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3E14", Offset = "0x9E3E14")]
	public float lineStartWidth;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3E34", Offset = "0x9E3E34")]
	public float lineEndWidth;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color lineColor;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3E54", Offset = "0x9E3E54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3E54", Offset = "0x9E3E54")]
	public float textCharacterSize;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3EB0", Offset = "0x9E3EB0")]
	public float zhCharactarSize;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3ED0", Offset = "0x9E3ED0")]
	public int textFontSize;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color textColor;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3EF0", Offset = "0x9E3EF0")]
	public bool useIndicatorSystemConfig;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<ButtonIndication> buttonIndicationList;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3F28", Offset = "0x9E3F28")]
	public bool adaptiveLoading;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool enableEmitter;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool sendEvent;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3F60", Offset = "0x9E3F60")]
	public bool enableButtonEffect;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool useEffectSystemConfig;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color32 buttonEffectColor;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3F98", Offset = "0x9E3F98")]
	public bool ShowBeam;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool useBeamSystemConfig;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public bool updateEveryFrame;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float StartWidth;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float EndWidth;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float StartOffset;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float EndOffset;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color32 StartColor;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Color32 EndColor;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool useDefaultMaterial;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material customMat;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3FD0", Offset = "0x9E3FD0")]
	public bool showPointer;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool useCtrPointerSystemConfig;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool blink;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	public bool UseDefaultTexture;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Texture2D customTexture;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float PointerOuterDiameterMin;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private ControllerType controllerType;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject controllerPrefab;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject originalControllerPrefab;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string controllerFileName;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string controllerModelFoler;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string genericControllerFileName;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<AssetBundle> loadedAssetBundle;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string renderModelNamePath;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool connected;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string renderModelName;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private IntPtr ptrParameterName;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private IntPtr ptrResult;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool isChecking;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private WaitForSeconds wfs;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private WaveVR_ControllerInstanceManager CtrInstanceMgr;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int ControllerIdx;

	[Token(Token = "0x4000CFF")]
	private const string VRACTIVITY_CLASSNAME = "com.htc.vr.unity.WVRUnityVRActivity";

	[Token(Token = "0x4000D00")]
	private const string FILEUTILS_CLASSNAME = "com.htc.vr.unity.FileUtils";

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject eventSystem;

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x164D840", Offset = "0x164D840", VA = "0x164D840")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x164DA7C", Offset = "0x164DA7C", VA = "0x164DA7C")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x164DCB8", Offset = "0x164DCB8", VA = "0x164DCB8")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x164DEF4", Offset = "0x164DEF4", VA = "0x164DEF4")]
	private void checkAndCreateCIM()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x164E0B8", Offset = "0x164E0B8", VA = "0x164E0B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x164E1E4", Offset = "0x164E1E4", VA = "0x164E1E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x164E2D8", Offset = "0x164E2D8", VA = "0x164E2D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x164E434", Offset = "0x164E434", VA = "0x164E434")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x164F4A8", Offset = "0x164F4A8", VA = "0x164F4A8")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x164F7BC", Offset = "0x164F7BC", VA = "0x164F7BC")]
	private void onDeviceRoleChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x164E33C", Offset = "0x164E33C", VA = "0x164E33C")]
	private void removeControllerFromMgr(string funcName)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x164E66C", Offset = "0x164E66C", VA = "0x164E66C")]
	private void onLoadController(WVR_DeviceType type)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x164FF40", Offset = "0x164FF40", VA = "0x164FF40")]
	private bool loadMeshAndImageByDevice(string renderModelNamePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x1650464", Offset = "0x1650464", VA = "0x1650464")]
	private bool tryLoadModelFromRuntime(string renderModelNamePath, string modelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x16533E4", Offset = "0x16533E4", VA = "0x16533E4")]
	private bool verifyControllerPrefab(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x164FBDC", Offset = "0x164FBDC", VA = "0x164FBDC")]
	private bool deployZIPFile(int deviceIndex, string renderModelUnzipFolder)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x16502A4", Offset = "0x16502A4", VA = "0x16502A4")]
	private int checkAssetBundlesVersion(string version)
	{
		return default(int);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x1650AF8", Offset = "0x1650AF8", VA = "0x1650AF8")]
	private GameObject loadGenericControllerModelFromPackage(string tmpGeneric)
	{
		return null;
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x1650C48", Offset = "0x1650C48", VA = "0x1650C48")]
	private void SetControllerOptions(GameObject controller_prefab)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x165384C", Offset = "0x165384C", VA = "0x165384C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x16541AC", Offset = "0x16541AC", VA = "0x16541AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x164F434", Offset = "0x164F434", VA = "0x164F434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA7D4", Offset = "0x9EA7D4")]
	private IEnumerator checkRenderModelAndDelete()
	{
		return null;
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x16538C8", Offset = "0x16538C8", VA = "0x16538C8")]
	private bool DeleteControllerWhenDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x164E5D0", Offset = "0x164E5D0", VA = "0x164E5D0")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x16522D8", Offset = "0x16522D8", VA = "0x16522D8")]
	private void SetControllerPointerParameters(GameObject ctrlr)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x16541DC", Offset = "0x16541DC", VA = "0x16541DC")]
	private void UpdateStartColor(string color_string)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x1654418", Offset = "0x1654418", VA = "0x1654418")]
	private void UpdateEndColor(string color_string)
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x1654654", Offset = "0x1654654", VA = "0x1654654")]
	private void ReadJsonValues_Beam()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x1650DBC", Offset = "0x1650DBC", VA = "0x1650DBC")]
	private void PresetAdaptiveControllerParameters(GameObject ctrPrefab)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x1653148", Offset = "0x1653148", VA = "0x1653148")]
	private void setEventSystemParameter()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x1652B14", Offset = "0x1652B14", VA = "0x1652B14")]
	private void ApplyIndicatorParameters()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x1654A6C", Offset = "0x1654A6C", VA = "0x1654A6C")]
	private void addbuttonIndicationList()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x16551E4", Offset = "0x16551E4", VA = "0x16551E4")]
	public WaveVR_ControllerLoader()
	{
	}
}
[Token(Token = "0x20001B7")]
public class WaveVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x20004C7")]
	public enum CIndex
	{
		[Token(Token = "0x4001A11")]
		invalid = -1,
		[Token(Token = "0x4001A12")]
		Dominant,
		[Token(Token = "0x4001A13")]
		NonDominant
	}

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Dominant;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NonDominant;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] ControllerObjects;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] ControllerConnected;

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x1655538", Offset = "0x1655538", VA = "0x1655538")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x16555D8", Offset = "0x16555D8", VA = "0x16555D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x16556E0", Offset = "0x16556E0", VA = "0x16556E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x1655BE8", Offset = "0x1655BE8", VA = "0x1655BE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x1655CDC", Offset = "0x1655CDC", VA = "0x1655CDC")]
	private void BroadcastToObjects(CIndex index)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x16558D4", Offset = "0x16558D4", VA = "0x16558D4")]
	private void checkConnection()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x1655EDC", Offset = "0x1655EDC", VA = "0x1655EDC")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x1656158", Offset = "0x1656158", VA = "0x1656158")]
	private void onDeviceRoleChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x16561AC", Offset = "0x16561AC", VA = "0x16561AC")]
	public WaveVR_ControllerManager()
	{
	}
}
[Token(Token = "0x20001B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DEDC8", Offset = "0x9DEDC8")]
public class WaveVR_Distortion : MonoBehaviour
{
	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x1288DCC", Offset = "0x1288DCC", VA = "0x1288DCC")]
	public WaveVR_Distortion()
	{
	}
}
[Token(Token = "0x20001B9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DEE2C", Offset = "0x9DEE2C")]
public class WaveVR_FPS : MonoBehaviour
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text textField;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x128AF60", Offset = "0x128AF60", VA = "0x128AF60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x128AFB8", Offset = "0x128AFB8", VA = "0x128AFB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x128B13C", Offset = "0x128B13C", VA = "0x128B13C")]
	public WaveVR_FPS()
	{
	}
}
[Token(Token = "0x20001BA")]
public class WaveVR_IMEManager
{
	[Token(Token = "0x20004C8")]
	public class InputResult
	{
		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int mId;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string mContent;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int mErrorCode;

		[Token(Token = "0x170002FC")]
		public string InputContent
		{
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x128C984", Offset = "0x128C984", VA = "0x128C984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FD")]
		public int ErrorCode
		{
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x128C98C", Offset = "0x128C98C", VA = "0x128C98C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FE")]
		public int Id
		{
			[Token(Token = "0x60020C6")]
			[Address(RVA = "0x128C994", Offset = "0x128C994", VA = "0x128C994")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x128C940", Offset = "0x128C940", VA = "0x128C940")]
		public InputResult(int id, string content, int errorCode)
		{
		}
	}

	[Token(Token = "0x20004C9")]
	public class IMEParameter
	{
		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int type;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mode;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string exist;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cursor;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int selectStart;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int selectEnd;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double[] pos;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double[] rot;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int width;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int height;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int shadow;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string locale;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string title;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int buttonId;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int extraInt;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string extraString;

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x128C574", Offset = "0x128C574", VA = "0x128C574")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, int selectStart, int selectEnd, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int extraInt, string extraString, int buttonId)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x128C66C", Offset = "0x128C66C", VA = "0x128C66C")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, int selectStart, int selectEnd, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x128C748", Offset = "0x128C748", VA = "0x128C748")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x128C810", Offset = "0x128C810", VA = "0x128C810")]
		public IMEParameter(int id, int type, int mode, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x128C8B0", Offset = "0x128C8B0", VA = "0x128C8B0")]
		public IMEParameter(int id, int type, int mode, double[] pos, double[] rot, int width, int height, int shadow, int buttonId)
		{
		}
	}

	[Token(Token = "0x20004CA")]
	public delegate void inputCompleteCallback(InputResult results);

	[Token(Token = "0x20004CB")]
	private class RequestCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x128C228", Offset = "0x128C228", VA = "0x128C228")]
		internal RequestCompleteHandler()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x128C99C", Offset = "0x128C99C", VA = "0x128C99C")]
		public void onInputCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000D0A")]
	private const string IME_MANAGER_CLASSNAME = "com.htc.vr.ime.client.IMEManager";

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject imeManager;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_IMEManager mInstance;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inited;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static inputCompleteCallback mCallback;

	[Token(Token = "0x1700008F")]
	public static WaveVR_IMEManager instance
	{
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x128B14C", Offset = "0x128B14C", VA = "0x128B14C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x128B214", Offset = "0x128B214", VA = "0x128B214")]
	private AndroidJavaObject javaArrayFromCS(string[] values)
	{
		return null;
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x128B5F8", Offset = "0x128B5F8", VA = "0x128B5F8")]
	private AndroidJavaObject javaIMEParameterFromCS(IMEParameter parameter)
	{
		return null;
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x128BC9C", Offset = "0x128BC9C", VA = "0x128BC9C")]
	private void initializeJavaObject()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x128BEB4", Offset = "0x128BEB4", VA = "0x128BEB4")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x128BFBC", Offset = "0x128BFBC", VA = "0x128BFBC")]
	public void showKeyboard(IMEParameter parameter, inputCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x128C2BC", Offset = "0x128C2BC", VA = "0x128C2BC")]
	public void hideKeyboard()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x128C404", Offset = "0x128C404", VA = "0x128C404")]
	public int getKeyboardState()
	{
		return default(int);
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x128B20C", Offset = "0x128B20C", VA = "0x128B20C")]
	public WaveVR_IMEManager()
	{
	}
}
[Token(Token = "0x20001BB")]
public class WaveVR_IMEManagerWrapper
{
	[Token(Token = "0x20004CC")]
	public enum Locale
	{
		[Token(Token = "0x4001A29")]
		en_US,
		[Token(Token = "0x4001A2A")]
		zh_CN
	}

	[Token(Token = "0x20004CD")]
	public enum Action
	{
		[Token(Token = "0x4001A2C")]
		Done,
		[Token(Token = "0x4001A2D")]
		Enter,
		[Token(Token = "0x4001A2E")]
		Search,
		[Token(Token = "0x4001A2F")]
		Go,
		[Token(Token = "0x4001A30")]
		Send,
		[Token(Token = "0x4001A31")]
		Next,
		[Token(Token = "0x4001A32")]
		Submit
	}

	[Token(Token = "0x20004CE")]
	public delegate void InputDoneCallback(InputResult results);

	[Token(Token = "0x20004CF")]
	public class InputResult
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mContent;

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x128DBEC", Offset = "0x128DBEC", VA = "0x128DBEC")]
		public InputResult(string content)
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x128E41C", Offset = "0x128E41C", VA = "0x128E41C")]
		public string GetContent()
		{
			return null;
		}
	}

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int VERSION_ID;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static WaveVR_IMEManager mIMEManager;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static WaveVR_IMEManagerWrapper mInstance;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WaveVR_IMEManager.IMEParameter mParameter;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static InputDoneCallback mCallback;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int CONTROLLER_BUTTON_DEFAULT;

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x128D3D0", Offset = "0x128D3D0", VA = "0x128D3D0")]
	private WaveVR_IMEManagerWrapper()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x128D568", Offset = "0x128D568", VA = "0x128D568")]
	public static WaveVR_IMEManagerWrapper GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x128D728", Offset = "0x128D728", VA = "0x128D728")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x128D758", Offset = "0x128D758", VA = "0x128D758")]
	public void SetTitle(string title)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x128D788", Offset = "0x128D788", VA = "0x128D788")]
	public void SetLocale(Locale locale)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x128D8C4", Offset = "0x128D8C4", VA = "0x128D8C4")]
	public void SetCallback(InputDoneCallback callback)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x128D930", Offset = "0x128D930", VA = "0x128D930")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x128D9EC", Offset = "0x128D9EC", VA = "0x128D9EC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x128DA64", Offset = "0x128DA64", VA = "0x128DA64")]
	public void SetAction(Action action)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x128D3F8", Offset = "0x128D3F8", VA = "0x128D3F8")]
	public void InitParameter()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x128DAFC", Offset = "0x128DAFC", VA = "0x128DAFC")]
	private void inputDoneCallback(WaveVR_IMEManager.InputResult results)
	{
	}
}
[Token(Token = "0x20001BC")]
public class WaveVR_Init : MonoBehaviour
{
	[Token(Token = "0x4000D16")]
	private const string LOG_TAG = "WaveVR_Init";

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_Init _instance;

	[Token(Token = "0x17000090")]
	public static WaveVR_Init Instance
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x128E424", Offset = "0x128E424", VA = "0x128E424")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x128E5A0", Offset = "0x128E5A0", VA = "0x128E5A0")]
	private void signalSurfaceState(string msg)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x128E844", Offset = "0x128E844", VA = "0x128E844")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x128E970", Offset = "0x128E970", VA = "0x128E970")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x128EB2C", Offset = "0x128EB2C", VA = "0x128EB2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x12906D0", Offset = "0x12906D0", VA = "0x12906D0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x128EB70", Offset = "0x128EB70", VA = "0x128EB70")]
	private void processVREvent(WVR_Event_t vrEvent)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1290EFC", Offset = "0x1290EFC", VA = "0x1290EFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x1290F98", Offset = "0x1290F98", VA = "0x1290F98")]
	public WaveVR_Init()
	{
	}
}
[Token(Token = "0x20001BD")]
public class WaveVR_PermissionManager
{
	[Token(Token = "0x20004D0")]
	public class RequestResult
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mPermission;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mGranted;

		[Token(Token = "0x170002FF")]
		public string PermissionName
		{
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x1295BB4", Offset = "0x1295BB4", VA = "0x1295BB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public bool Granted
		{
			[Token(Token = "0x60020DA")]
			[Address(RVA = "0x1295BBC", Offset = "0x1295BBC", VA = "0x1295BBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x1295440", Offset = "0x1295440", VA = "0x1295440")]
		public RequestResult(string name, bool granted)
		{
		}
	}

	[Token(Token = "0x20004D1")]
	public delegate void requestCompleteCallback(List<RequestResult> results);

	[Token(Token = "0x20004D2")]
	private class RequestCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x12949F4", Offset = "0x12949F4", VA = "0x12949F4")]
		internal RequestCompleteHandler()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1294ED0", Offset = "0x1294ED0", VA = "0x1294ED0")]
		public void onRequestCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000D19")]
	private const string PERMISSION_MANAGER_CLASSNAME = "com.htc.vr.permission.client.PermissionManager";

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject permissionsManager;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_PermissionManager mInstance;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static requestCompleteCallback mCallback;

	[Token(Token = "0x17000091")]
	public static WaveVR_PermissionManager instance
	{
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1293CD8", Offset = "0x1293CD8", VA = "0x1293CD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1293DA0", Offset = "0x1293DA0", VA = "0x1293DA0")]
	private AndroidJavaObject javaArrayFromCS(string[] values)
	{
		return null;
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1294184", Offset = "0x1294184", VA = "0x1294184")]
	private void initializeJavaObject()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x129439C", Offset = "0x129439C", VA = "0x129439C")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x129449C", Offset = "0x129449C", VA = "0x129449C")]
	public void requestPermissions(string[] permissions, requestCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x1294A88", Offset = "0x1294A88", VA = "0x1294A88")]
	public bool isPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x1294BF0", Offset = "0x1294BF0", VA = "0x1294BF0")]
	public bool shouldGrantPermission(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x1294D58", Offset = "0x1294D58", VA = "0x1294D58")]
	public bool showDialogOnScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x1293D98", Offset = "0x1293D98", VA = "0x1293D98")]
	public WaveVR_PermissionManager()
	{
	}
}
[Token(Token = "0x20001BE")]
public class WaveVR_PointerCameraTracker : MonoBehaviour
{
	[Token(Token = "0x4000D1D")]
	private const string LOG_TAG = "WaveVR_PointerCameraTracker";

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject reticleObject;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WaveVR_Controller.EDeviceType type;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_ControllerPointer reticle;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pointer_location;

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x1295C04", Offset = "0x1295C04", VA = "0x1295C04")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x1295C78", Offset = "0x1295C78", VA = "0x1295C78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x1295D18", Offset = "0x1295D18", VA = "0x1295D18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x1296054", Offset = "0x1296054", VA = "0x1296054")]
	public void setDeviceType(WaveVR_Controller.EDeviceType value)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x129605C", Offset = "0x129605C", VA = "0x129605C")]
	public WaveVR_PointerCameraTracker()
	{
	}
}
[Token(Token = "0x20001BF")]
public class WaveVR_Render : MonoBehaviour
{
	[Token(Token = "0x20004D3")]
	public enum StereoRenderingPath
	{
		[Token(Token = "0x4001A37")]
		MultiPass = 0,
		[Token(Token = "0x4001A38")]
		SinglePass = 1,
		[Token(Token = "0x4001A39")]
		Auto = 1
	}

	[Token(Token = "0x20004D4")]
	public delegate void RenderCallback(WaveVR_Render render);

	[Token(Token = "0x20004D5")]
	public delegate void RenderCallbackWithEye(WaveVR_Render render, WVR_Eye eye);

	[Token(Token = "0x20004D6")]
	public delegate void RenderCallbackWithEyeAndCamera(WaveVR_Render render, WVR_Eye eye, WaveVR_Camera wvrCamera);

	[Token(Token = "0x20004D7")]
	public class RenderThreadSynchronizer
	{
		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTexture mutable;

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x18273E4", Offset = "0x18273E4", VA = "0x18273E4")]
		public RenderThreadSynchronizer()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1826B0C", Offset = "0x1826B0C", VA = "0x1826B0C")]
		public void sync()
		{
		}
	}

	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0034", Offset = "0x9E0034")]
	private sealed class <RenderLoop>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <tim>5__2;

		[Token(Token = "0x17000301")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x18271B8", Offset = "0x18271B8", VA = "0x18271B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x1827228", Offset = "0x1827228", VA = "0x1827228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x1825E74", Offset = "0x1825E74", VA = "0x1825E74")]
		[DebuggerHidden]
		public <RenderLoop>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x1825EA0", Offset = "0x1825EA0", VA = "0x1825EA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x1825EA4", Offset = "0x1825EA4", VA = "0x1825EA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x18271C0", Offset = "0x18271C0", VA = "0x18271C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0044", Offset = "0x9E0044")]
	private sealed class <>c__DisplayClass112_0
	{
		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x18245F0", Offset = "0x18245F0", VA = "0x18245F0")]
		public <>c__DisplayClass112_0()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x18245F8", Offset = "0x18245F8", VA = "0x18245F8")]
		internal void <CreateCenterCamera>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1824DB0", Offset = "0x1824DB0", VA = "0x1824DB0")]
		internal void <CreateCenterCamera>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0054", Offset = "0x9E0054")]
	private sealed class <>c__DisplayClass113_0
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x18255B4", Offset = "0x18255B4", VA = "0x18255B4")]
		public <>c__DisplayClass113_0()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x18255BC", Offset = "0x18255BC", VA = "0x18255BC")]
		internal void <CreateEyeBoth>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x18255F4", Offset = "0x18255F4", VA = "0x18255F4")]
		internal void <CreateEyeBoth>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0064", Offset = "0x9E0064")]
	private sealed class <>c__DisplayClass114_0
	{
		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_Eye eye;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1825638", Offset = "0x1825638", VA = "0x1825638")]
		public <>c__DisplayClass114_0()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1825640", Offset = "0x1825640", VA = "0x1825640")]
		internal void <CreateEye>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x1825684", Offset = "0x1825684", VA = "0x1825684")]
		internal void <CreateEye>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0074", Offset = "0x9E0074")]
	private sealed class <>c__DisplayClass117_0
	{
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render head;

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x18256D0", Offset = "0x18256D0", VA = "0x18256D0")]
		public <>c__DisplayClass117_0()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x18256D8", Offset = "0x18256D8", VA = "0x18256D8")]
		internal void <Expand>b__0(RenderCallback a)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x1825E40", Offset = "0x1825E40", VA = "0x1825E40")]
		internal void <Expand>b__1(RenderCallback a)
		{
		}
	}

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_Render instance;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4008", Offset = "0x9E4008")]
	public float ipd;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int targetFPS;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool surfaceChanged;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool isNeedTimeout;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool isGraphicInitialized;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool isSetActiveSceneChangedCB;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4040", Offset = "0x9E4040")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4050", Offset = "0x9E4050")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4060", Offset = "0x9E4060")]
	private float[] <projRawL>k__BackingField;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4070", Offset = "0x9E4070")]
	private float[] <projRawR>k__BackingField;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaveVR_Utils.RigidTransform[] _eyes;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4080", Offset = "0x9E4080")]
	public bool configurationChanged;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E40B8", Offset = "0x9E40B8")]
	[SerializeField]
	private StereoRenderingPath PreferredStereoRenderingPath;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4104", Offset = "0x9E4104")]
	private bool <IsSinglePass>k__BackingField;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RenderCallback beforeRenderExpand;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderCallbackWithEye beforeEyeExpand;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderCallbackWithEyeAndCamera afterEyeExpand;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RenderCallback afterRenderExpand;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RenderCallback onConfigurationChanged;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RenderCallback onSDKGraphicReady;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RenderCallback onFirstFrame;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RenderCallbackWithEyeAndCamera beforeRenderEye;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RenderCallbackWithEyeAndCamera afterRenderEye;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RenderThreadSynchronizer synchronizer;

	[Token(Token = "0x4000D3C")]
	private const string OBJ_NAME_EYE_CENTER = "Eye Center";

	[Token(Token = "0x4000D3D")]
	private const string OBJ_NAME_LEFT_EYE = "Eye Left";

	[Token(Token = "0x4000D3E")]
	private const string OBJ_NAME_RIGHT_EYE = "Eye Right";

	[Token(Token = "0x4000D3F")]
	private const string OBJ_NAME_BOTH_EYES = "Eye Both";

	[Token(Token = "0x4000D40")]
	private const string OBJ_NAME_EAR = "Ear";

	[Token(Token = "0x4000D41")]
	private const string OBJ_NAME_DISTORTION = "Distortion";

	[Token(Token = "0x4000D42")]
	private const string OBJ_NAME_RETICLE = "Reticle";

	[Token(Token = "0x4000D43")]
	private const string OBJ_NAME_LOADING = "Loading";

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public WaveVR_Camera centerWVRCamera;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WaveVR_Camera lefteye;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public WaveVR_Camera righteye;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public WaveVR_Camera botheyes;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public WaveVR_Distortion distortion;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject loadingCanvas;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject ear;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4114", Offset = "0x9E4114")]
	private TextureManager <textureManager>k__BackingField;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int globalOrigin;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int globalPreferredStereoRenderingPath;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4124", Offset = "0x9E4124")]
	private ColorSpace <QSColorSpace>k__BackingField;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public WVR_PoseOriginModel _origin;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine renderLooperCoroutine;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WaitForEndOfFrame cachedWaitForEndOfFrame;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool previousInputFocus;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4134", Offset = "0x9E4134")]
	public bool needTimeControl;

	[Token(Token = "0x17000092")]
	public static WaveVR_Render Instance
	{
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x12840C0", Offset = "0x12840C0", VA = "0x12840C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000093")]
	public bool IsGraphicReady
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x129B6D8", Offset = "0x129B6D8", VA = "0x129B6D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000094")]
	public float sceneWidth
	{
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x129B740", Offset = "0x129B740", VA = "0x129B740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA838", Offset = "0x9EA838")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x129B748", Offset = "0x129B748", VA = "0x129B748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA848", Offset = "0x9EA848")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public float sceneHeight
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x129B750", Offset = "0x129B750", VA = "0x129B750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA858", Offset = "0x9EA858")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x129B758", Offset = "0x129B758", VA = "0x129B758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA868", Offset = "0x9EA868")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float[] projRawL
	{
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x129B760", Offset = "0x129B760", VA = "0x129B760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA878", Offset = "0x9EA878")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x129B768", Offset = "0x129B768", VA = "0x129B768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA888", Offset = "0x9EA888")]
		private set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float[] projRawR
	{
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x129B770", Offset = "0x129B770", VA = "0x129B770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA898", Offset = "0x9EA898")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x129B778", Offset = "0x129B778", VA = "0x129B778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA8A8", Offset = "0x9EA8A8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public WaveVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x129B780", Offset = "0x129B780", VA = "0x129B780")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x129B788", Offset = "0x129B788", VA = "0x129B788")]
		private set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public StereoRenderingPath acturalStereoRenderingPath
	{
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x129B790", Offset = "0x129B790", VA = "0x129B790")]
		get
		{
			return default(StereoRenderingPath);
		}
	}

	[Token(Token = "0x1700009A")]
	public bool IsSinglePass
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x129B798", Offset = "0x129B798", VA = "0x129B798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA8B8", Offset = "0x9EA8B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x129B7A0", Offset = "0x129B7A0", VA = "0x129B7A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA8C8", Offset = "0x9EA8C8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public bool isExpanded
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x129B7AC", Offset = "0x129B7AC", VA = "0x129B7AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009C")]
	public Camera centerCamera
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x129BA18", Offset = "0x129BA18", VA = "0x129BA18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	public TextureManager textureManager
	{
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x129BAB8", Offset = "0x129BAB8", VA = "0x129BAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA8D8", Offset = "0x9EA8D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x129BAC0", Offset = "0x129BAC0", VA = "0x129BAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA8E8", Offset = "0x9EA8E8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	[HideInInspector]
	public ColorSpace QSColorSpace
	{
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x129BAC8", Offset = "0x129BAC8", VA = "0x129BAC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA8F8", Offset = "0x9EA8F8")]
		get
		{
			return default(ColorSpace);
		}
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x129BAD0", Offset = "0x129BAD0", VA = "0x129BAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA908", Offset = "0x9EA908")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public WVR_PoseOriginModel origin
	{
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x129BAD8", Offset = "0x129BAD8", VA = "0x129BAD8")]
		get
		{
			return default(WVR_PoseOriginModel);
		}
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x129BAE0", Offset = "0x129BAE0", VA = "0x129BAE0")]
		set
		{
		}
	}

	[Token(Token = "0x6000C9D")]
	public T GetComponentFromChildren<T>(string name)
	{
		return (T)null;
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x129CECC", Offset = "0x129CECC", VA = "0x129CECC")]
	public static void InitializeGraphic([Optional] RenderThreadSynchronizer synchronizer)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x129BAE8", Offset = "0x129BAE8", VA = "0x129BAE8")]
	public void OnIpdChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x129CF50", Offset = "0x129CF50", VA = "0x129CF50")]
	public static bool IsVRSinglePassBuildTimeSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x129CF58", Offset = "0x129CF58", VA = "0x129CF58")]
	private bool checkVRSinglePassSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x129D6D0", Offset = "0x129D6D0", VA = "0x129D6D0")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x129D780", Offset = "0x129D780", VA = "0x129D780")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x129DCAC", Offset = "0x129DCAC", VA = "0x129DCAC")]
	private void enableRenderLoop(bool start)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x129DD90", Offset = "0x129DD90", VA = "0x129DD90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x129E0E4", Offset = "0x129E0E4", VA = "0x129E0E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x129E430", Offset = "0x129E430", VA = "0x129E430")]
	private static void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x128E604", Offset = "0x128E604", VA = "0x128E604")]
	public static void signalSurfaceState(string msg)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x129F478", Offset = "0x129F478", VA = "0x129F478")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x129F744", Offset = "0x129F744", VA = "0x129F744")]
	public int SetQualityLevel(int level, bool applyExpensiveChanges = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x129F7F0", Offset = "0x129F7F0", VA = "0x129F7F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x129F88C", Offset = "0x129F88C", VA = "0x129F88C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x129F910", Offset = "0x129F910", VA = "0x129F910")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x129FDD0", Offset = "0x129FDD0", VA = "0x129FDD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x129DD1C", Offset = "0x129DD1C", VA = "0x129DD1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA918", Offset = "0x9EA918")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x129FFA8", Offset = "0x129FFA8", VA = "0x129FFA8")]
	private void RenderEyeBoth(WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x12A0450", Offset = "0x12A0450", VA = "0x12A0450")]
	private void RenderEye(WaveVR_Camera wvrCamera, WVR_Eye eye)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x12A07A0", Offset = "0x12A07A0", VA = "0x12A07A0")]
	private static void AddRaycaster(GameObject obj)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x12A09D4", Offset = "0x12A09D4", VA = "0x12A09D4")]
	private WaveVR_Camera CreateCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x12A1344", Offset = "0x12A1344", VA = "0x12A1344")]
	private WaveVR_Camera CreateEyeBoth()
	{
		return null;
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x12A202C", Offset = "0x12A202C", VA = "0x12A202C")]
	private WaveVR_Camera CreateEye(WVR_Eye eye)
	{
		return null;
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x12A2A7C", Offset = "0x12A2A7C", VA = "0x12A2A7C")]
	private void createLoadingBlack()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x129DFE8", Offset = "0x129DFE8", VA = "0x129DFE8")]
	private void setLoadingCanvas(bool enabled)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x12908DC", Offset = "0x12908DC", VA = "0x12908DC")]
	public static void Expand(WaveVR_Render head)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x12A2EF4", Offset = "0x12A2EF4", VA = "0x12A2EF4")]
	public static void Collapse(WaveVR_Render head)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x12A2978", Offset = "0x12A2978", VA = "0x12A2978")]
	private float GetFieldOfView(float[] projRaw)
	{
		return default(float);
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x12A335C", Offset = "0x12A335C", VA = "0x12A335C")]
	private static float[] GetEditorProjectionRaw(float fov, float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x12A1E3C", Offset = "0x12A1E3C", VA = "0x12A1E3C")]
	private static Matrix4x4 GetProjection(float[] projRaw, float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x12A3528", Offset = "0x12A3528", VA = "0x12A3528")]
	public static Matrix4x4 MakeProjection(float l, float r, float t, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x12A36D8", Offset = "0x12A36D8", VA = "0x12A36D8")]
	private void TimeControl()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x12A02DC", Offset = "0x12A02DC", VA = "0x12A02DC")]
	public void SafeExecuteRenderEyeCallback(RenderCallbackWithEyeAndCamera multi, WVR_Eye eye, WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x12A398C", Offset = "0x12A398C", VA = "0x12A398C")]
	public WaveVR_Render()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x12A3C44", Offset = "0x12A3C44", VA = "0x12A3C44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA97C", Offset = "0x9EA97C")]
	private void <Start>b__98_0(RenderCallback a)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x12A3C7C", Offset = "0x12A3C7C", VA = "0x12A3C7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA98C", Offset = "0x9EA98C")]
	private void <RenderLoop>b__108_0(RenderCallback a)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x12A3CB4", Offset = "0x12A3CB4", VA = "0x12A3CB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA99C", Offset = "0x9EA99C")]
	private void <RenderLoop>b__108_1(RenderCallback a)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x12A3CEC", Offset = "0x12A3CEC", VA = "0x12A3CEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA9AC", Offset = "0x9EA9AC")]
	private void <RenderLoop>b__108_2(RenderCallback a)
	{
	}
}
[Token(Token = "0x20001C0")]
public class WaveVR_RenderMask : MonoBehaviour
{
	[Token(Token = "0x20004DD")]
	private class Data
	{
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_Eye eye;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Camera wvrCamera;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh mesh;

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1827B30", Offset = "0x1827B30", VA = "0x1827B30")]
		public Data()
		{
		}
	}

	[Token(Token = "0x20004DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0084", Offset = "0x9E0084")]
	private sealed class <Initialization>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderMask <>4__this;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaveVR_Render <render>5__2;

		[Token(Token = "0x17000303")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002105")]
			[Address(RVA = "0x182A1F0", Offset = "0x182A1F0", VA = "0x182A1F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0x182A260", Offset = "0x182A260", VA = "0x182A260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x1828DD4", Offset = "0x1828DD4", VA = "0x1828DD4")]
		[DebuggerHidden]
		public <Initialization>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x1829DF0", Offset = "0x1829DF0", VA = "0x1829DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1829DF4", Offset = "0x1829DF4", VA = "0x1829DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x182A1F8", Offset = "0x182A1F8", VA = "0x182A1F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Data> data;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isGraphicReady;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isCameraReady;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader renderMaskShader;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material renderMaskMaterial;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh renderMaskMeshLeft;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh renderMaskMeshRight;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh renderMaskMeshBoth;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color32 color;

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x1827494", Offset = "0x1827494", VA = "0x1827494")]
	private bool CheckCameras()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x182762C", Offset = "0x182762C", VA = "0x182762C")]
	private bool CheckCommandBuffers()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x1827748", Offset = "0x1827748", VA = "0x1827748")]
	private void PrepareCameras(WaveVR_Render render)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x1827B64", Offset = "0x1827B64", VA = "0x1827B64")]
	private void MyPreCull(Camera cam)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x1828380", Offset = "0x1828380", VA = "0x1828380")]
	private void MyPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x1828720", Offset = "0x1828720", VA = "0x1828720")]
	private void OnConfigurationChanged(WaveVR_Render render)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x1828724", Offset = "0x1828724", VA = "0x1828724")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x18288D0", Offset = "0x18288D0", VA = "0x18288D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x1828D60", Offset = "0x1828D60", VA = "0x1828D60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA9BC", Offset = "0x9EA9BC")]
	private IEnumerator Initialization()
	{
		return null;
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x1828E00", Offset = "0x1828E00", VA = "0x1828E00")]
	public void SetMaskColor(Color32 c)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x1828EF8", Offset = "0x1828EF8", VA = "0x1828EF8")]
	private Mesh GetStencilMesh(WVR_Eye eye)
	{
		return null;
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x182989C", Offset = "0x182989C", VA = "0x182989C")]
	private Mesh GetEyeBothMesh(Mesh l, Mesh r)
	{
		return null;
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x1827B98", Offset = "0x1827B98", VA = "0x1827B98")]
	private void createMaskCommandBuffer()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x18286C0", Offset = "0x18286C0", VA = "0x18286C0")]
	private void addRenderMaskCommandBuffer(Data d)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x1828520", Offset = "0x1828520", VA = "0x1828520")]
	private void removeRenderMaskCommandBuffer(Data d)
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x1828CE8", Offset = "0x1828CE8", VA = "0x1828CE8")]
	private void cleanData()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x1829D10", Offset = "0x1829D10", VA = "0x1829D10")]
	public WaveVR_RenderMask()
	{
	}
}
[Token(Token = "0x20001C1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DEE90", Offset = "0x9DEE90")]
public class WaveVR_Reticle : MonoBehaviour
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ListenToDevice;

	[Token(Token = "0x4000D5F")]
	private const string LOG_TAG = "WaveVR_Reticle";

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int reticleSegments;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float reticleGrowthSpeed;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color reticleColor;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool colorFlickerPerSecond;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool deepeningColorRotation;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int rotationSpeed;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reticleInnerDiameter;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float reticleOuterDiameter;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float interactObjInnerDiameter;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float interactObjOuterDiameter;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float kReticleDistanceMax;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material materialComp;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh mesh;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float reticleDistanceInMeters;

	[Token(Token = "0x4000D6F")]
	private const float kReticleDistanceMin = 1f;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float reticleInnerAngle;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float reticleOuterAngle;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float kReticleMinInnerAngle;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float kReticleMinOuterAngle;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float kReticleGrowthInnerAngle;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float kReticleGrowthOuterAngle;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color colorFactor;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float colorFlickerTime;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float progressTime;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isTriggerProgress;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int rotSpeedLimit;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool enabledReticle;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool meshIsCreated;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int internalRotationSpeed;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int colorIter;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] colorRotation;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int[] rotSpeedBound;

	[Token(Token = "0x4000D81")]
	private const float reticleInnerDiameterMin = 0f;

	[Token(Token = "0x4000D82")]
	private const float reticleInnerDiameterMax = 0.0002f;

	[Token(Token = "0x4000D83")]
	private const float reticleOuterDiameterMin = 0.005f;

	[Token(Token = "0x4000D84")]
	private const float reticleOuterDiameterMax = 0.01f;

	[Token(Token = "0x4000D85")]
	private const float interactObjInnerDiameterMin = 0.015f;

	[Token(Token = "0x4000D86")]
	private const float interactObjInnerDiameterMax = 0.022f;

	[Token(Token = "0x4000D87")]
	private const float interactObjOuterDiameterMin = 0.026f;

	[Token(Token = "0x4000D88")]
	private const float interactObjOuterDiameterMax = 0.035f;

	[Token(Token = "0x4000D89")]
	private const float kReticleDistanceValidateMax = 10f;

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x1834C04", Offset = "0x1834C04", VA = "0x1834C04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x18366C0", Offset = "0x18366C0", VA = "0x18366C0")]
	private void setReticleAngle()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x18367AC", Offset = "0x18367AC", VA = "0x18367AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x18365C8", Offset = "0x18365C8", VA = "0x18365C8")]
	private void initialReticle()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x1836684", Offset = "0x1836684", VA = "0x1836684")]
	private void removeReticle()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x1837538", Offset = "0x1837538", VA = "0x1837538")]
	private void CreateGazePointer()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x1837294", Offset = "0x1837294", VA = "0x1837294")]
	private void UpdateRotSpeedBound(int speedSetting)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1837974", Offset = "0x1837974", VA = "0x1837974")]
	public void ShowReticle()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1837980", Offset = "0x1837980", VA = "0x1837980")]
	public void RemoveReticle()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1837988", Offset = "0x1837988", VA = "0x1837988")]
	public void SetColorFlicker(bool switchOn)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x1837994", Offset = "0x1837994", VA = "0x1837994")]
	public bool GetColorFlicker()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x183799C", Offset = "0x183799C", VA = "0x183799C")]
	public void OnGazeEnter(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x1837AA0", Offset = "0x1837AA0", VA = "0x1837AA0")]
	public void OnGazeStay(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x1837AA8", Offset = "0x1837AA8", VA = "0x1837AA8")]
	public void OnGazeExit(Camera camera, GameObject target)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x1837ABC", Offset = "0x1837ABC", VA = "0x1837ABC")]
	public void OnGazeTriggerStart(Camera camera)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x1837AC0", Offset = "0x1837AC0", VA = "0x1837AC0")]
	public void OnGazeTriggerEnd(Camera camera)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x1837AC4", Offset = "0x1837AC4", VA = "0x1837AC4")]
	public void GetPointerRadius(out float innerRadius, out float outerRadius)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x1837B78", Offset = "0x1837B78", VA = "0x1837B78")]
	public void setProgressBarTime(float time)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x1837B80", Offset = "0x1837B80", VA = "0x1837B80")]
	public float getReticleCurrentDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x1837B88", Offset = "0x1837B88", VA = "0x1837B88")]
	public void triggerProgressBar(bool switchOn)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x18379A4", Offset = "0x18379A4", VA = "0x18379A4")]
	private void SetGazeTarget(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x1837C44", Offset = "0x1837C44", VA = "0x1837C44")]
	public void SetReticleColor(Color reticle_color)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x1834C60", Offset = "0x1834C60", VA = "0x1834C60")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x183842C", Offset = "0x183842C", VA = "0x183842C")]
	private static bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x1837CB8", Offset = "0x1837CB8", VA = "0x1837CB8")]
	private static bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x1837E9C", Offset = "0x1837E9C", VA = "0x1837E9C")]
	private static bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1836510", Offset = "0x1836510", VA = "0x1836510")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x183809C", Offset = "0x183809C", VA = "0x183809C")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x1838614", Offset = "0x1838614", VA = "0x1838614")]
	public WaveVR_Reticle()
	{
	}
}
[Token(Token = "0x20001C2")]
public class WaveVR_Screenshot
{
	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x18386AC", Offset = "0x18386AC", VA = "0x18386AC")]
	private static void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x183874C", Offset = "0x183874C", VA = "0x183874C")]
	public static bool requestScreenshot(WVR_ScreenshotMode mode, string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x1838B20", Offset = "0x1838B20", VA = "0x1838B20")]
	public WaveVR_Screenshot()
	{
	}
}
[Token(Token = "0x20001C3")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DEEF4", Offset = "0x9DEEF4")]
public class WaveVR_TrackedButtons : MonoBehaviour
{
	[Token(Token = "0x20004DF")]
	public struct ClickedEventArgs
	{
		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceType device;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint flags;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 axis;
	}

	[Token(Token = "0x20004E0")]
	public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);

	[Token(Token = "0x4000D8B")]
	public const string LOG_TAG = "WaveVR_TrackedButtons";

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong Input_Mask_Menu;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ulong Input_Mask_Grip;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ulong Input_Mask_DPad_Left;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ulong Input_Mask_DPad_Up;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ulong Input_Mask_DPad_Right;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static ulong Input_Mask_DPad_Down;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static ulong Input_Mask_Volume_Up;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static ulong Input_Mask_Volume_Down;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static ulong Input_Mask_Hmd_Enter;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static ulong Input_Mask_Touchpad;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static ulong Input_Mask_Trigger;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static ulong Input_Mask_DigitalTrigger;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool triggerPressed;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool menuPressed;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool padPressed;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool gripPressed;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool padTouched;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool hmdEnterPressed;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private uint inputMask;

	[Token(Token = "0x14000016")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x183D4E0", Offset = "0x183D4E0", VA = "0x183D4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA20", Offset = "0x9EAA20")]
		add
		{
		}
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x183D5CC", Offset = "0x183D5CC", VA = "0x183D5CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA30", Offset = "0x9EAA30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x183D6B8", Offset = "0x183D6B8", VA = "0x183D6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA40", Offset = "0x9EAA40")]
		add
		{
		}
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x183D7A4", Offset = "0x183D7A4", VA = "0x183D7A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA50", Offset = "0x9EAA50")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x183D890", Offset = "0x183D890", VA = "0x183D890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA60", Offset = "0x9EAA60")]
		add
		{
		}
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x183D97C", Offset = "0x183D97C", VA = "0x183D97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA70", Offset = "0x9EAA70")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x183DA68", Offset = "0x183DA68", VA = "0x183DA68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA80", Offset = "0x9EAA80")]
		add
		{
		}
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x183DB54", Offset = "0x183DB54", VA = "0x183DB54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA90", Offset = "0x9EAA90")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x183DC40", Offset = "0x183DC40", VA = "0x183DC40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAA0", Offset = "0x9EAAA0")]
		add
		{
		}
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x183DD2C", Offset = "0x183DD2C", VA = "0x183DD2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAB0", Offset = "0x9EAAB0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x183DE18", Offset = "0x183DE18", VA = "0x183DE18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAC0", Offset = "0x9EAAC0")]
		add
		{
		}
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x183DF04", Offset = "0x183DF04", VA = "0x183DF04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAD0", Offset = "0x9EAAD0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x183DFF0", Offset = "0x183DFF0", VA = "0x183DFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAE0", Offset = "0x9EAAE0")]
		add
		{
		}
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x183E0DC", Offset = "0x183E0DC", VA = "0x183E0DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAF0", Offset = "0x9EAAF0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x183E1C8", Offset = "0x183E1C8", VA = "0x183E1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB00", Offset = "0x9EAB00")]
		add
		{
		}
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x183E2B4", Offset = "0x183E2B4", VA = "0x183E2B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB10", Offset = "0x9EAB10")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x183E3A0", Offset = "0x183E3A0", VA = "0x183E3A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB20", Offset = "0x9EAB20")]
		add
		{
		}
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x183E48C", Offset = "0x183E48C", VA = "0x183E48C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB30", Offset = "0x9EAB30")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x183E578", Offset = "0x183E578", VA = "0x183E578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB40", Offset = "0x9EAB40")]
		add
		{
		}
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x183E664", Offset = "0x183E664", VA = "0x183E664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB50", Offset = "0x9EAB50")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event ClickedEventHandler HmdEnterClicked
	{
		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x183E750", Offset = "0x183E750", VA = "0x183E750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB60", Offset = "0x9EAB60")]
		add
		{
		}
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x183E83C", Offset = "0x183E83C", VA = "0x183E83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB70", Offset = "0x9EAB70")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event ClickedEventHandler HmdEnterUnclicked
	{
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x183E928", Offset = "0x183E928", VA = "0x183E928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB80", Offset = "0x9EAB80")]
		add
		{
		}
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x183EA14", Offset = "0x183EA14", VA = "0x183EA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB90", Offset = "0x9EAB90")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x183EB00", Offset = "0x183EB00", VA = "0x183EB00", Slot = "4")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x183F378", Offset = "0x183F378", VA = "0x183F378", Slot = "5")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x183F430", Offset = "0x183F430", VA = "0x183F430", Slot = "6")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x183F4E8", Offset = "0x183F4E8", VA = "0x183F4E8", Slot = "7")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x183F5A0", Offset = "0x183F5A0", VA = "0x183F5A0", Slot = "8")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x183F658", Offset = "0x183F658", VA = "0x183F658", Slot = "9")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x183F710", Offset = "0x183F710", VA = "0x183F710", Slot = "10")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x183F7C8", Offset = "0x183F7C8", VA = "0x183F7C8", Slot = "11")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x183F880", Offset = "0x183F880", VA = "0x183F880", Slot = "12")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x183F938", Offset = "0x183F938", VA = "0x183F938", Slot = "13")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x183F9F0", Offset = "0x183F9F0", VA = "0x183F9F0", Slot = "14")]
	public virtual void OnHmdEnterClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x183FAA8", Offset = "0x183FAA8", VA = "0x183FAA8", Slot = "15")]
	public virtual void OnHmdEnterUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x183FB60", Offset = "0x183FB60", VA = "0x183FB60")]
	private Vector2 GetAxis(WVR_AnalogState_t[] analogArray, WVR_InputId _id, WVR_AnalogType aType, int _count)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1840188", Offset = "0x1840188", VA = "0x1840188")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x18407BC", Offset = "0x18407BC", VA = "0x18407BC")]
	public WaveVR_TrackedButtons()
	{
	}
}
[Token(Token = "0x20001C4")]
public struct FBXInfo_t
{
	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public WVR_Matrix4f_t matrix;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint verticeCount;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public uint normalCount;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public uint uvCount;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public uint indiceCount;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntPtr meshName;
}
[Token(Token = "0x20001C5")]
public struct MeshInfo_t
{
	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3[] _vectice;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3[] _normal;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2[] _uv;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] _indice;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _active;
}
[Token(Token = "0x20001C6")]
public struct StencilMesh_t
{
	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertCount;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertData;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint triCount;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexData;
}
[Token(Token = "0x20001C7")]
public static class WaveVR_Utils
{
	[Token(Token = "0x20004E1")]
	public enum DegreeField
	{
		[Token(Token = "0x4001A54")]
		DOF3,
		[Token(Token = "0x4001A55")]
		DOF6
	}

	[Token(Token = "0x20004E2")]
	public enum WVR_PerfLevel
	{
		[Token(Token = "0x4001A57")]
		System,
		[Token(Token = "0x4001A58")]
		Minimum,
		[Token(Token = "0x4001A59")]
		Medium,
		[Token(Token = "0x4001A5A")]
		Maximum
	}

	[Token(Token = "0x20004E3")]
	public struct WVR_ButtonState_t
	{
		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong BtnPressed;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong BtnTouched;
	}

	[Token(Token = "0x20004E4")]
	public class OEMConfig
	{
		[Token(Token = "0x20005C1")]
		public class OEMConfigCallback : AndroidJavaProxy
		{
			[Token(Token = "0x600244A")]
			[Address(RVA = "0x184371C", Offset = "0x184371C", VA = "0x184371C")]
			internal OEMConfigCallback()
			{
			}

			[Token(Token = "0x600244B")]
			[Address(RVA = "0x18437B0", Offset = "0x18437B0", VA = "0x18437B0")]
			public void onConfigChanged()
			{
			}
		}

		[Token(Token = "0x4001A5D")]
		private const string OEM_CONFIG_CLASSNAME = "com.htc.vr.unity.WVRUnityVRActivity";

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject mOEMConfig;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OEMConfigCallback mOEMCallback;

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x1843224", Offset = "0x1843224", VA = "0x1843224")]
		private static void initAJC()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1837C50", Offset = "0x1837C50", VA = "0x1837C50")]
		public static string getControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x182C11C", Offset = "0x182C11C", VA = "0x182C11C")]
		public static string getBatteryConfig()
		{
			return null;
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x184344C", Offset = "0x184344C", VA = "0x184344C")]
		private static string getOEMConfigByKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x18436A0", Offset = "0x18436A0", VA = "0x18436A0")]
		public OEMConfig()
		{
		}
	}

	[Token(Token = "0x20004E5")]
	public class Event
	{
		[Token(Token = "0x20005C2")]
		public delegate void Handler(params object[] args);

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DEVICE_CONNECTED;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string NEW_POSES;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string AFTER_NEW_POSES;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string ALL_VREVENT;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string BATTERY_STATUS_UPDATE;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string CONTROLLER_MODEL_LOADED;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string CONTROLLER_MODEL_UNLOADED;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string PRE_CULL_LEFT;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string PRE_CULL_RIGHT;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string SWIPE_EVENT;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string SYSTEMFOCUS_CHANGED;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string INTERACTION_MODE_CHANGED;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string ADAPTIVE_CONTROLLER_READY;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string RENDER_CONFIGURATION_CHANGED;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string DEVICE_ROLE_CHANGED;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string DS_ASSETS_NOT_FOUND;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string OEM_CONFIG_CHANGED;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E892C", Offset = "0x9E892C")]
		public static string PRE_RENDER_OBJECT_LEFT;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E8964", Offset = "0x9E8964")]
		public static string PRE_RENDER_OBJECT_RIGHT;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E899C", Offset = "0x9E899C")]
		public static string PRE_RENDER_LEFT;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E89D4", Offset = "0x9E89D4")]
		public static string PRE_RENDER_RIGHT;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E8A0C", Offset = "0x9E8A0C")]
		public static string RENDER_OBJECT_LEFT;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E8A44", Offset = "0x9E8A44")]
		public static string RENDER_OBJECT_RIGHT;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static Dictionary<string, Handler> listeners;

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x182B8BC", Offset = "0x182B8BC", VA = "0x182B8BC")]
		public static void Listen(string message, Handler action)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x182BC88", Offset = "0x182BC88", VA = "0x182BC88")]
		public static void Remove(string message, Handler action)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1826E38", Offset = "0x1826E38", VA = "0x1826E38")]
		public static void Send(string message, params object[] args)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1842FB8", Offset = "0x1842FB8", VA = "0x1842FB8")]
		public Event()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004E6")]
	public struct RigidTransform
	{
		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000305")]
		public static RigidTransform identity
		{
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x1843D74", Offset = "0x1843D74", VA = "0x1843D74")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xAA88B8", Offset = "0xAA88B8", VA = "0xAA88B8")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xAA88CC", Offset = "0xAA88CC", VA = "0xAA88CC")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xAA88D4", Offset = "0xAA88D4", VA = "0xAA88D4")]
		public RigidTransform(WVR_Matrix4f_t pose)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x182FBF0", Offset = "0x182FBF0", VA = "0x182FBF0")]
		public static Matrix4x4 toMatrix44(WVR_Matrix4f_t pose)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xAA8918", Offset = "0xAA8918", VA = "0xAA8918")]
		public void update(WVR_Matrix4f_t pose)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xAA895C", Offset = "0xAA895C", VA = "0xAA895C")]
		public void update(Vector3 position, Quaternion orientation)
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xAA8970", Offset = "0xAA8970", VA = "0xAA8970", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xAA8978", Offset = "0xAA8978", VA = "0xAA8978", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x18442D0", Offset = "0x18442D0", VA = "0x18442D0")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1844408", Offset = "0x1844408", VA = "0x1844408")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1844540", Offset = "0x1844540", VA = "0x1844540")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xAA89B4", Offset = "0xAA89B4", VA = "0xAA89B4")]
		public void Inverse()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xAA89BC", Offset = "0xAA89BC", VA = "0xAA89BC")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xAA89C4", Offset = "0xAA89C4", VA = "0xAA89C4")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x1844904", Offset = "0x1844904", VA = "0x1844904")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x20004E7")]
	public class Assimp
	{
		[PreserveSig]
		[Token(Token = "0x6002127")]
		[Address(RVA = "0x182E240", Offset = "0x182E240", VA = "0x182E240")]
		public static extern bool OpenMesh(string filename, ref uint sessiionid, IntPtr errorCode, bool merge);

		[PreserveSig]
		[Token(Token = "0x6002128")]
		[Address(RVA = "0x1833574", Offset = "0x1833574", VA = "0x1833574")]
		public static extern bool getSectionCount(uint sessiionid, ref uint sectionCount);

		[PreserveSig]
		[Token(Token = "0x6002129")]
		[Address(RVA = "0x183362C", Offset = "0x183362C", VA = "0x183362C")]
		public static extern bool getMeshData(uint sessiionid, [In][Out] FBXInfo_t[] infoArray);

		[PreserveSig]
		[Token(Token = "0x600212A")]
		[Address(RVA = "0x18336EC", Offset = "0x18336EC", VA = "0x18336EC")]
		public static extern bool getSectionData(uint sessiionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active);

		[PreserveSig]
		[Token(Token = "0x600212B")]
		[Address(RVA = "0x182BBE8", Offset = "0x182BBE8", VA = "0x182BBE8")]
		public static extern void releaseMesh(uint sessiionid);

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x184287C", Offset = "0x184287C", VA = "0x184287C")]
		public Assimp()
		{
		}
	}

	[Token(Token = "0x20004E8")]
	public class Trace
	{
		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1826CBC", Offset = "0x1826CBC", VA = "0x1826CBC")]
		public static void BeginSection(string sectionName, bool inRenderThread = true)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x1827134", Offset = "0x1827134", VA = "0x1827134")]
		public static void EndSection(bool inRenderThread = true)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1844908", Offset = "0x1844908", VA = "0x1844908")]
		public Trace()
		{
		}
	}

	[Token(Token = "0x20004E9")]
	private delegate void RenderEventDelegate(int e);

	[Token(Token = "0x20004EA")]
	public enum EngineThreadID
	{
		[Token(Token = "0x4001A7B")]
		JAVA_THREAD,
		[Token(Token = "0x4001A7C")]
		GAME_THREAD,
		[Token(Token = "0x4001A7D")]
		RENDER_THREAD,
		[Token(Token = "0x4001A7E")]
		WORKER1_THREAD,
		[Token(Token = "0x4001A7F")]
		WORKER2_THREAD
	}

	[Token(Token = "0x20004EB")]
	public enum EngineEventID
	{
		[Token(Token = "0x4001A81")]
		ENGINE_EVENT_ID_BEGIN = 40960,
		[Token(Token = "0x4001A82")]
		HMD_CREATE,
		[Token(Token = "0x4001A83")]
		HMD_INITIAILZED,
		[Token(Token = "0x4001A84")]
		HMD_RESUME,
		[Token(Token = "0x4001A85")]
		HMD_PAUSE,
		[Token(Token = "0x4001A86")]
		HMD_TERMINATED,
		[Token(Token = "0x4001A87")]
		FIRST_FRAME,
		[Token(Token = "0x4001A88")]
		FRAME_START,
		[Token(Token = "0x4001A89")]
		FRAME_END,
		[Token(Token = "0x4001A8A")]
		UNITY_AWAKE,
		[Token(Token = "0x4001A8B")]
		UNITY_ENABLE,
		[Token(Token = "0x4001A8C")]
		UNITY_DISABLE,
		[Token(Token = "0x4001A8D")]
		UNITY_START,
		[Token(Token = "0x4001A8E")]
		UNITY_DESTROY,
		[Token(Token = "0x4001A8F")]
		UNITY_APPLICATION_RESUME,
		[Token(Token = "0x4001A90")]
		UNITY_APPLICATION_PAUSE,
		[Token(Token = "0x4001A91")]
		UNITY_APPLICATION_QUIT,
		[Token(Token = "0x4001A92")]
		ENGINE_EVENT_ID_END
	}

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string LOG_TAG;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E422C", Offset = "0x9E422C")]
	public static string DEVICE_CONNECTED;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E4264", Offset = "0x9E4264")]
	public static string NEW_POSES;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E429C", Offset = "0x9E429C")]
	public static string AFTER_NEW_POSES;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Queue TraceSessionNameQueue;

	[Token(Token = "0x4000DC0")]
	public const int k_nRenderEventID_SubmitL = 1;

	[Token(Token = "0x4000DC1")]
	public const int k_nRenderEventID_SubmitR = 2;

	[Token(Token = "0x4000DC2")]
	public const int k_nRenderEventID_SubmitBoth = 3;

	[Token(Token = "0x4000DC3")]
	public const int k_nRenderEventID_GraphicInitial = 8;

	[Token(Token = "0x4000DC4")]
	public const int k_nRenderEventID_GraphicShutdown = 9;

	[Token(Token = "0x4000DC5")]
	public const int k_nRenderEventID_RenderEyeL = 256;

	[Token(Token = "0x4000DC6")]
	public const int k_nRenderEventID_RenderEyeR = 257;

	[Token(Token = "0x4000DC7")]
	public const int k_nRenderEventID_RenderEyeEndL = 258;

	[Token(Token = "0x4000DC8")]
	public const int k_nRenderEventID_RenderEyeEndR = 259;

	[Token(Token = "0x4000DC9")]
	public const int k_nRenderEventID_RenderEyeBoth = 273;

	[Token(Token = "0x4000DCA")]
	public const int k_nRenderEventID_RenderEyeEndBoth = 274;

	[Token(Token = "0x4000DCB")]
	public const int RENDEREVENTID_INIT_GRAPHIC = 0;

	[Token(Token = "0x4000DCC")]
	public const int RENDEREVENTID_SHUTDOWN_GRAPHIC = 1;

	[Token(Token = "0x4000DCD")]
	public const int RENDEREVENTID_Systrace_BeginSession = 4;

	[Token(Token = "0x4000DCE")]
	public const int RENDEREVENTID_Systrace_EndSession = 5;

	[Token(Token = "0x4000DCF")]
	public const int RENDEREVENTID_StartCamera = 21;

	[Token(Token = "0x4000DD0")]
	public const int RENDEREVENTID_StopCamera = 22;

	[Token(Token = "0x4000DD1")]
	public const int RENDEREVENTID_UpdateCamera = 23;

	[Token(Token = "0x4000DD2")]
	public const int RENDEREVENTID_RenderMaskLeft = 30;

	[Token(Token = "0x4000DD3")]
	public const int RENDEREVENTID_RenderMaskRight = 31;

	[Token(Token = "0x4000DD4")]
	public const int RENDEREVENTID_SinglePassPrepare = 90;

	[Token(Token = "0x4000DD5")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing2x = 92;

	[Token(Token = "0x4000DD6")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing4x = 94;

	[Token(Token = "0x4000DD7")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing8x = 98;

	[Token(Token = "0x4000DD8")]
	public const int RENDEREVENTID_SinglePassBeforeForwardOpaque = 86;

	[Token(Token = "0x4000DD9")]
	public const int RENDEREVENTID_SinglePassPostRender = 87;

	[Token(Token = "0x4000DDA")]
	public const int RENDEREVENTID_EditorEmptyOperation = 65536;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static RenderEventDelegate RenderEventHandle;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr RenderEventHandlePtr;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static RenderEventDelegate SetRenderTextureHandle;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr SetRenderTextureHandlePtr;

	[Token(Token = "0x6000D29")]
	public static void SafeExecuteAllDelegate<T>(Delegate multi, Action<T> invoker, bool throws = false)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1841234", Offset = "0x1841234", VA = "0x1841234")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x182FE0C", Offset = "0x182FE0C", VA = "0x182FE0C")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x18412F0", Offset = "0x18412F0", VA = "0x18412F0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EABB0", Offset = "0x9EABB0")]
	public static Quaternion GetRotation2(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x182FDD0", Offset = "0x182FDD0", VA = "0x182FDD0")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x1830084", Offset = "0x1830084", VA = "0x1830084")]
	public static Vector3 GetScale(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x1841330", Offset = "0x1841330", VA = "0x1841330")]
	public static void notifyActivityUnityStarted()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x1841418", Offset = "0x1841418", VA = "0x1841418")]
	public static extern IntPtr GetRenderEventFunc();

	[PreserveSig]
	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x18414A8", Offset = "0x18414A8", VA = "0x18414A8")]
	public static extern void NativeRenderEvent(int eventID);

	[PreserveSig]
	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x1841548", Offset = "0x1841548", VA = "0x1841548")]
	public static extern void SetColorSpace(int colorspace);

	[PreserveSig]
	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x18415E8", Offset = "0x18415E8", VA = "0x18415E8")]
	public static extern void SetCurrentRenderTexture(int id);

	[PreserveSig]
	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x1841688", Offset = "0x1841688", VA = "0x1841688")]
	public static extern void SetSubmitOptionalArgument([Out] WVR_PoseState_t[] poses, int submit_extend_flag);

	[PreserveSig]
	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x1841800", Offset = "0x1841800", VA = "0x1841800")]
	public static extern void NativeProcessEngineEvent(uint tID, uint eventID);

	[PreserveSig]
	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x18418AC", Offset = "0x18418AC", VA = "0x18418AC")]
	public static extern int IsSinglePassSupported();

	[PreserveSig]
	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x184193C", Offset = "0x184193C", VA = "0x184193C")]
	public static extern IntPtr PrepareSinglePassTexture(int antiAliasing, int width, int height);

	[PreserveSig]
	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x18419F4", Offset = "0x18419F4", VA = "0x18419F4")]
	public static extern void SinglePassBeforeForwardOpaque();

	[PreserveSig]
	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x1841A84", Offset = "0x1841A84", VA = "0x1841A84")]
	public static extern void SinglePassPostRender();

	[PreserveSig]
	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x1841B14", Offset = "0x1841B14", VA = "0x1841B14")]
	private static extern void TraceBeginSection(string name);

	[PreserveSig]
	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x1841BBC", Offset = "0x1841BBC", VA = "0x1841BBC")]
	private static extern void TraceEndSection();

	[PreserveSig]
	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x1826B3C", Offset = "0x1826B3C", VA = "0x1826B3C")]
	public static extern bool WVR_IsATWActive();

	[PreserveSig]
	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x1841C4C", Offset = "0x1841C4C", VA = "0x1841C4C")]
	public static extern int WVR_GetNumberOfTextures();

	[PreserveSig]
	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x1841CDC", Offset = "0x1841CDC", VA = "0x1841CDC")]
	public static extern IntPtr WVR_StoreRenderTextures(IntPtr[] texturesIDs, int size, bool eEye);

	[PreserveSig]
	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x1841D9C", Offset = "0x1841D9C", VA = "0x1841D9C")]
	public static extern uint WVR_GetAvailableTextureID(IntPtr queue);

	[PreserveSig]
	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x1841E3C", Offset = "0x1841E3C", VA = "0x1841E3C")]
	public static extern bool WVR_IsPresentedOnExternal();

	[PreserveSig]
	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x1841ED4", Offset = "0x1841ED4", VA = "0x1841ED4")]
	public static extern int WVR_LoadCriteriaData(string criteriaData);

	[PreserveSig]
	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x1841F8C", Offset = "0x1841F8C", VA = "0x1841F8C")]
	public static extern int WVR_StartPerformanceTest(string sceneID);

	[PreserveSig]
	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x1842044", Offset = "0x1842044", VA = "0x1842044")]
	public static extern int WVR_EndPerformanceTest(StringBuilder pReport, uint ReportSize);

	[PreserveSig]
	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x1842118", Offset = "0x1842118", VA = "0x1842118")]
	public static extern uint WVR_GetPerformanceReportSize();

	[PreserveSig]
	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x18421A8", Offset = "0x18421A8", VA = "0x18421A8")]
	public static extern bool WVR_SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[PreserveSig]
	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x18297A4", Offset = "0x18297A4", VA = "0x18297A4")]
	public static extern void WVR_GetStencilMesh(WVR_Eye eEye, ref uint vertexCount, ref uint triangleCount, uint floatArrayCount, [In][Out] float[] vertexData, uint intArrayCount, [In][Out] int[] indexData);

	[PreserveSig]
	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x1842260", Offset = "0x1842260", VA = "0x1842260")]
	public static extern void WVR_SetFocusedController(WVR_DeviceType focusController);

	[PreserveSig]
	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x1842300", Offset = "0x1842300", VA = "0x1842300")]
	public static extern WVR_DeviceType WVR_GetFocusedController();

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x1840960", Offset = "0x1840960", VA = "0x1840960")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EAC1C", Offset = "0x9EAC1C")]
	private static void RenderEvent(int eventId)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x18411D0", Offset = "0x18411D0", VA = "0x18411D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EAC80", Offset = "0x9EAC80")]
	private static void SetRenderTextureRenderThread(int textureId)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x1842390", Offset = "0x1842390", VA = "0x1842390")]
	public static void SetRenderTexture(IntPtr textureId)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x18423F8", Offset = "0x18423F8", VA = "0x18423F8")]
	public static void SetRenderTextureWithDepth(IntPtr textureId, IntPtr depthId)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x1826BD4", Offset = "0x1826BD4", VA = "0x1826BD4")]
	public static void SendRenderEvent(int eventId)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x184249C", Offset = "0x184249C", VA = "0x184249C")]
	public static void SendRenderEventNative(int eventId)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x1842508", Offset = "0x1842508", VA = "0x1842508")]
	public static void SendRenderEventAndData(CommandBuffer cmd, int eventId, IntPtr data)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x18425A4", Offset = "0x18425A4", VA = "0x18425A4")]
	public static void SendRenderEvent(CommandBuffer cmd, int eventId)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x1826C48", Offset = "0x1826C48", VA = "0x1826C48")]
	public static void IssueEngineEvent(EngineEventID eventID)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x1842638", Offset = "0x1842638", VA = "0x1842638")]
	public static void IssueEngineEvent(EngineThreadID tID, EngineEventID eventID)
	{
	}
}
[Token(Token = "0x20001C8")]
public class XWeaponTrailDemo : MonoBehaviour
{
	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation SwordAnimation;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XWeaponTrail ProTrailDistort;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XWeaponTrail ProTrailShort;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XWeaponTrail ProTraillong;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XWeaponTrail SimpleTrail;

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x1844910", Offset = "0x1844910", VA = "0x1844910")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x1844998", Offset = "0x1844998", VA = "0x1844998")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x1844E30", Offset = "0x1844E30", VA = "0x1844E30")]
	public XWeaponTrailDemo()
	{
	}
}
namespace Xft
{
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DEF3C", Offset = "0x9DEF3C")]
	public class Spline
	{
		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SplineControlPoint> mControlPoints;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SplineControlPoint> mSegments;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Granularity;

		[Token(Token = "0x170000A0")]
		public SplineControlPoint Item
		{
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x1844E38", Offset = "0x1844E38", VA = "0x1844E38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		public List<SplineControlPoint> Segments
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x1844EE4", Offset = "0x1844EE4", VA = "0x1844EE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		public List<SplineControlPoint> ControlPoints
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x1844EEC", Offset = "0x1844EEC", VA = "0x1844EEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1844EF4", Offset = "0x1844EF4", VA = "0x1844EF4")]
		public SplineControlPoint NextControlPoint(SplineControlPoint controlpoint)
		{
			return null;
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x1844FD0", Offset = "0x1844FD0", VA = "0x1844FD0")]
		public SplineControlPoint PreviousControlPoint(SplineControlPoint controlpoint)
		{
			return null;
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x184508C", Offset = "0x184508C", VA = "0x184508C")]
		public Vector3 NextPosition(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x18450C4", Offset = "0x18450C4", VA = "0x18450C4")]
		public Vector3 PreviousPosition(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x18450FC", Offset = "0x18450FC", VA = "0x18450FC")]
		public Vector3 PreviousNormal(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1845134", Offset = "0x1845134", VA = "0x1845134")]
		public Vector3 NextNormal(SplineControlPoint controlpoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x184516C", Offset = "0x184516C", VA = "0x184516C")]
		public SplineControlPoint LenToSegment(float t, out float localF)
		{
			return null;
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x184539C", Offset = "0x184539C", VA = "0x184539C")]
		public static Vector3 CatmulRom(Vector3 T0, Vector3 P0, Vector3 P1, Vector3 T1, float f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1845524", Offset = "0x1845524", VA = "0x1845524")]
		public Vector3 InterpolateByLen(float tl)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x184567C", Offset = "0x184567C", VA = "0x184567C")]
		public Vector3 InterpolateNormalByLen(float tl)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x18457C8", Offset = "0x18457C8", VA = "0x18457C8")]
		public SplineControlPoint AddControlPoint(Vector3 pos, Vector3 up)
		{
			return null;
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1845924", Offset = "0x1845924", VA = "0x1845924")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1845984", Offset = "0x1845984", VA = "0x1845984")]
		private void RefreshDistance()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x1845BCC", Offset = "0x1845BCC", VA = "0x1845BCC")]
		public void RefreshSpline()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1845D80", Offset = "0x1845D80", VA = "0x1845D80")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class SplineControlPoint
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Normal;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ControlPointIndex;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int SegmentIndex;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Dist;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Spline mSpline;

		[Token(Token = "0x170000A3")]
		public SplineControlPoint NextControlPoint
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0x1845E18", Offset = "0x1845E18", VA = "0x1845E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		public SplineControlPoint PreviousControlPoint
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x1845E4C", Offset = "0x1845E4C", VA = "0x1845E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		public Vector3 NextPosition
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0x1845E80", Offset = "0x1845E80", VA = "0x1845E80")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000A6")]
		public Vector3 PreviousPosition
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x1845EB4", Offset = "0x1845EB4", VA = "0x1845EB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000A7")]
		public Vector3 NextNormal
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0x1845EE8", Offset = "0x1845EE8", VA = "0x1845EE8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000A8")]
		public Vector3 PreviousNormal
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x1845F1C", Offset = "0x1845F1C", VA = "0x1845F1C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000A9")]
		public bool IsValid
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x1845D64", Offset = "0x1845D64", VA = "0x1845D64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1845F50", Offset = "0x1845F50", VA = "0x1845F50")]
		private Vector3 GetNext2Position()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1845F78", Offset = "0x1845F78", VA = "0x1845F78")]
		private Vector3 GetNext2Normal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x1845574", Offset = "0x1845574", VA = "0x1845574")]
		public Vector3 Interpolate(float localF)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x18456CC", Offset = "0x18456CC", VA = "0x18456CC")]
		public Vector3 InterpolateNormal(float localF)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1845914", Offset = "0x1845914", VA = "0x1845914")]
		public void Init(Spline owner)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1845904", Offset = "0x1845904", VA = "0x1845904")]
		public SplineControlPoint()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class VertexPool
	{
		[Token(Token = "0x20004EC")]
		public class VertexSegment
		{
			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int VertStart;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int IndexStart;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int VertCount;

			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int IndexCount;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexPool Pool;

			[Token(Token = "0x6002134")]
			[Address(RVA = "0x1846B94", Offset = "0x1846B94", VA = "0x1846B94")]
			public VertexSegment(int start, int count, int istart, int icount, VertexPool pool)
			{
			}

			[Token(Token = "0x6002135")]
			[Address(RVA = "0x1846E68", Offset = "0x1846E68", VA = "0x1846E68")]
			public void ClearIndices()
			{
			}
		}

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] Vertices;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] Indices;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2[] UVs;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] Colors;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IndiceChanged;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool ColorChanged;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool UVChanged;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool VertChanged;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool UV2Changed;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int VertexTotal;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int VertexUsed;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int IndexTotal;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected int IndexUsed;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool FirstUpdate;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		protected bool VertCountChanged;

		[Token(Token = "0x4000DFC")]
		public const int BlockSize = 108;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float BoundsScheduleTime;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float ElapsedTime;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected XWeaponTrail _owner;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected MeshFilter _meshFilter;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Mesh _mesh2d;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Material _material;

		[Token(Token = "0x170000AA")]
		public Mesh MyMesh
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x1845FB0", Offset = "0x1845FB0", VA = "0x1845FB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x18460D4", Offset = "0x18460D4", VA = "0x18460D4")]
		public void RecalculateBounds()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1846104", Offset = "0x1846104", VA = "0x1846104")]
		private void CreateMeshObj(XWeaponTrail owner, Material material)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x184662C", Offset = "0x184662C", VA = "0x184662C")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1846708", Offset = "0x1846708", VA = "0x1846708")]
		public VertexPool(Material material, XWeaponTrail owner)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x184689C", Offset = "0x184689C", VA = "0x184689C")]
		public VertexSegment GetVertices(int vcount, int icount)
		{
			return null;
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x18467E4", Offset = "0x18467E4", VA = "0x18467E4")]
		protected void InitArrays()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x18469E8", Offset = "0x18469E8", VA = "0x18469E8")]
		public void EnlargeArrays(int count, int icount)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1846BE8", Offset = "0x1846BE8", VA = "0x1846BE8")]
		public void LateUpdate()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class XWeaponTrail : MonoBehaviour
	{
		[Token(Token = "0x20004ED")]
		public class Element
		{
			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 PointStart;

			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 PointEnd;

			[Token(Token = "0x17000306")]
			public Vector3 Pos
			{
				[Token(Token = "0x6002136")]
				[Address(RVA = "0x1FF7DDC", Offset = "0x1FF7DDC", VA = "0x1FF7DDC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6002137")]
			[Address(RVA = "0x1FF92BC", Offset = "0x1FF92BC", VA = "0x1FF92BC")]
			public Element(Vector3 start, Vector3 end)
			{
			}

			[Token(Token = "0x6002138")]
			[Address(RVA = "0x1FF93FC", Offset = "0x1FF93FC", VA = "0x1FF93FC")]
			public Element()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		public class ElementPool
		{
			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Stack<Element> _stack;

			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8A7C", Offset = "0x9E8A7C")]
			private int <CountAll>k__BackingField;

			[Token(Token = "0x17000307")]
			public int CountAll
			{
				[Token(Token = "0x6002139")]
				[Address(RVA = "0x1FF9460", Offset = "0x1FF9460", VA = "0x1FF9460")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE67C", Offset = "0x9EE67C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600213A")]
				[Address(RVA = "0x1FF9468", Offset = "0x1FF9468", VA = "0x1FF9468")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE68C", Offset = "0x9EE68C")]
				private set
				{
				}
			}

			[Token(Token = "0x17000308")]
			public int CountActive
			{
				[Token(Token = "0x600213B")]
				[Address(RVA = "0x1FF9470", Offset = "0x1FF9470", VA = "0x1FF9470")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000309")]
			public int CountInactive
			{
				[Token(Token = "0x600213C")]
				[Address(RVA = "0x1FF9494", Offset = "0x1FF9494", VA = "0x1FF9494")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600213D")]
			[Address(RVA = "0x1FF7588", Offset = "0x1FF7588", VA = "0x1FF7588")]
			public ElementPool(int preCount)
			{
			}

			[Token(Token = "0x600213E")]
			[Address(RVA = "0x1FF9100", Offset = "0x1FF9100", VA = "0x1FF9100")]
			public Element Get()
			{
				return null;
			}

			[Token(Token = "0x600213F")]
			[Address(RVA = "0x1FF91C0", Offset = "0x1FF91C0", VA = "0x1FF91C0")]
			public void Release(Element element)
			{
			}
		}

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Version;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseWith2D;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SortingLayerName;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int SortingOrder;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform PointStart;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform PointEnd;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int MaxFrame;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int Granularity;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Fps;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color MyColor;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material MyMaterial;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float mTrailWidth;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Element mHeadElem;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected List<Element> mSnapshotList;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected ElementPool mElemPool;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Spline mSpline;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float mFadeT;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected bool mIsFading;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float mFadeTime;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float mElapsedTime;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float mFadeElapsedime;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected GameObject mMeshObj;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected VertexPool mVertexPool;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected VertexPool.VertexSegment mVertexSegment;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool mInited;

		[Token(Token = "0x170000AB")]
		public float UpdateInterval
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x1FF731C", Offset = "0x1FF731C", VA = "0x1FF731C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AC")]
		public Vector3 CurHeadPos
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0x1FF732C", Offset = "0x1FF732C", VA = "0x1FF732C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000AD")]
		public float TrailWidth
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0x1FF741C", Offset = "0x1FF741C", VA = "0x1FF741C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1FF7424", Offset = "0x1FF7424", VA = "0x1FF7424")]
		public void Init()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1FF7A78", Offset = "0x1FF7A78", VA = "0x1FF7A78")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1FF8618", Offset = "0x1FF8618", VA = "0x1FF8618")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1FF8650", Offset = "0x1FF8650", VA = "0x1FF8650")]
		public void StopSmoothly(float fadeTime)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1FF8660", Offset = "0x1FF8660", VA = "0x1FF8660")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1FF8A78", Offset = "0x1FF8A78", VA = "0x1FF8A78")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1FF8AB4", Offset = "0x1FF8AB4", VA = "0x1FF8AB4")]
		private void OnLevelWasLoaded(int level)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x1FF8ABC", Offset = "0x1FF8ABC", VA = "0x1FF8ABC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1FF8AD8", Offset = "0x1FF8AD8", VA = "0x1FF8AD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x1FF8AE0", Offset = "0x1FF8AE0", VA = "0x1FF8AE0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1FF78D0", Offset = "0x1FF78D0", VA = "0x1FF78D0")]
		private void InitSpline()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1FF7E88", Offset = "0x1FF7E88", VA = "0x1FF7E88")]
		private void RefreshSpline()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1FF80E4", Offset = "0x1FF80E4", VA = "0x1FF80E4")]
		private void UpdateVertex()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1FF8D10", Offset = "0x1FF8D10", VA = "0x1FF8D10")]
		private void UpdateIndices()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1FF86F0", Offset = "0x1FF86F0", VA = "0x1FF86F0")]
		private void UpdateHeadElem()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1FF8A08", Offset = "0x1FF8A08", VA = "0x1FF8A08")]
		private void UpdateFade()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1FF8810", Offset = "0x1FF8810", VA = "0x1FF8810")]
		private void RecordCurElem()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1FF7718", Offset = "0x1FF7718", VA = "0x1FF7718")]
		private void InitOriginalElements()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1FF7670", Offset = "0x1FF7670", VA = "0x1FF7670")]
		private void InitMeshObj()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1FF931C", Offset = "0x1FF931C", VA = "0x1FF931C")]
		public XWeaponTrail()
		{
		}
	}
}
namespace WaveVR_Log
{
	[Token(Token = "0x20001CD")]
	public class Log
	{
		[Token(Token = "0x20004EF")]
		public class EnterAndExit : IDisposable
		{
			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string tag;

			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string message;

			[Token(Token = "0x4001A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string enter;

			[Token(Token = "0x4001A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string exit;

			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool logInEditor;

			[Token(Token = "0x6002140")]
			[Address(RVA = "0x1293880", Offset = "0x1293880", VA = "0x1293880")]
			public EnterAndExit(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002141")]
			[Address(RVA = "0x1293BD0", Offset = "0x1293BD0", VA = "0x1293BD0", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20004F0")]
		public class PeriodLog
		{
			[Token(Token = "0x20005C3")]
			public delegate string StringProcessDelegate();

			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float interval;

			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float lastTime;

			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool print;

			[Token(Token = "0x6002142")]
			[Address(RVA = "0x1293B90", Offset = "0x1293B90", VA = "0x1293B90")]
			public PeriodLog()
			{
			}

			[Token(Token = "0x6002143")]
			[Address(RVA = "0x1293C54", Offset = "0x1293C54", VA = "0x1293C54")]
			public void check()
			{
			}

			[Token(Token = "0x6002144")]
			[Address(RVA = "0x1281604", Offset = "0x1281604", VA = "0x1281604")]
			public void d(string tag, string message, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002145")]
			[Address(RVA = "0x127E5A4", Offset = "0x127E5A4", VA = "0x127E5A4")]
			public void d(string tag, StringProcessDelegate strDelegate, bool logInEditor = false)
			{
			}
		}

		[Token(Token = "0x4000E1C")]
		private const int ANDROID_LOG_VERBOSE = 2;

		[Token(Token = "0x4000E1D")]
		private const int ANDROID_LOG_DEBUG = 3;

		[Token(Token = "0x4000E1E")]
		private const int ANDROID_LOG_INFO = 4;

		[Token(Token = "0x4000E1F")]
		private const int ANDROID_LOG_WARN = 5;

		[Token(Token = "0x4000E20")]
		private const int ANDROID_LOG_ERROR = 6;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PeriodLog gpl;

		[PreserveSig]
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x12936F8", Offset = "0x12936F8", VA = "0x12936F8")]
		internal static extern int __android_log_print(int prio, string tag, string fmt, IntPtr ptr);

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x127E404", Offset = "0x127E404", VA = "0x127E404")]
		public static void d(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1281AB0", Offset = "0x1281AB0", VA = "0x1281AB0")]
		public static void i(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x128CBE0", Offset = "0x128CBE0", VA = "0x128CBE0")]
		public static void w(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1280208", Offset = "0x1280208", VA = "0x1280208")]
		public static void e(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x12937EC", Offset = "0x12937EC", VA = "0x12937EC")]
		public static EnterAndExit ee(string message, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x129394C", Offset = "0x129394C", VA = "0x129394C")]
		public static EnterAndExit ee(string tag, string message, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x12939DC", Offset = "0x12939DC", VA = "0x12939DC")]
		public static EnterAndExit ee(string tag, string postfixEnter, string postfixExit, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1293A70", Offset = "0x1293A70", VA = "0x1293A70")]
		public static EnterAndExit ee(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1293B00", Offset = "0x1293B00", VA = "0x1293B00")]
		public Log()
		{
		}
	}
}
namespace wvr.render
{
	[Token(Token = "0x20001CE")]
	public class WaveVR_FoveatedRendering : MonoBehaviour
	{
		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0094", Offset = "0x9E0094")]
		private sealed class <SetEnableCoroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveVR_FoveatedRendering <>4__this;

			[Token(Token = "0x1700030A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002149")]
				[Address(RVA = "0x1FFF75C", Offset = "0x1FFF75C", VA = "0x1FFF75C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600214B")]
				[Address(RVA = "0x1FFF7CC", Offset = "0x1FFF7CC", VA = "0x1FFF7CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002146")]
			[Address(RVA = "0x1FFE9F8", Offset = "0x1FFE9F8", VA = "0x1FFE9F8")]
			[DebuggerHidden]
			public <SetEnableCoroutine>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6002147")]
			[Address(RVA = "0x1FFF494", Offset = "0x1FFF494", VA = "0x1FFF494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002148")]
			[Address(RVA = "0x1FFF498", Offset = "0x1FFF498", VA = "0x1FFF498", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600214A")]
			[Address(RVA = "0x1FFF764", Offset = "0x1FFF764", VA = "0x1FFF764", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string TAG;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string StaticTrackedObjectName;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E42D4", Offset = "0x9E42D4")]
		private static WaveVR_FoveatedRendering <Instance>k__BackingField;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool useValuesInInspector;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E42E4", Offset = "0x9E42E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E42E4", Offset = "0x9E42E4")]
		[SerializeField]
		private float leftClearVisionFOV;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E434C", Offset = "0x9E434C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E434C", Offset = "0x9E434C")]
		[SerializeField]
		private float rightClearVisionFOV;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E43B4", Offset = "0x9E43B4")]
		[SerializeField]
		private WVR_PeripheralQuality leftPeripheralQuality;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4400", Offset = "0x9E4400")]
		[SerializeField]
		private WVR_PeripheralQuality rightPeripheralQuality;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E444C", Offset = "0x9E444C")]
		[SerializeField]
		private Vector3 staticFocalPoint;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool isEnabled;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4498", Offset = "0x9E4498")]
		[SerializeField]
		private GameObject trackedObject;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject staticTrackedObject;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E44E4", Offset = "0x9E44E4")]
		private Vector2 <LeftNDCSpace>k__BackingField;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E44F4", Offset = "0x9E44F4")]
		private Vector2 <RightNDCSpace>k__BackingField;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isDirty;

		[Token(Token = "0x170000AE")]
		public static WaveVR_FoveatedRendering Instance
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x1FFDEF8", Offset = "0x1FFDEF8", VA = "0x1FFDEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EACE4", Offset = "0x9EACE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x1FFDF60", Offset = "0x1FFDF60", VA = "0x1FFDF60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EACF4", Offset = "0x9EACF4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public float LeftClearVisionFOV
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x1FFDFCC", Offset = "0x1FFDFCC", VA = "0x1FFDFCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x1FFDFD4", Offset = "0x1FFDFD4", VA = "0x1FFDFD4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public float RightClearVisionFOV
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x1FFE064", Offset = "0x1FFE064", VA = "0x1FFE064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x1FFE06C", Offset = "0x1FFE06C", VA = "0x1FFE06C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public WVR_PeripheralQuality LeftPeripheralQuality
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x1FFE0FC", Offset = "0x1FFE0FC", VA = "0x1FFE0FC")]
			get
			{
				return default(WVR_PeripheralQuality);
			}
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x1FFE104", Offset = "0x1FFE104", VA = "0x1FFE104")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public WVR_PeripheralQuality RightPeripheralQuality
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x1FFE114", Offset = "0x1FFE114", VA = "0x1FFE114")]
			get
			{
				return default(WVR_PeripheralQuality);
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x1FFE11C", Offset = "0x1FFE11C", VA = "0x1FFE11C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public Vector3 StaticFocalPoint
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x1FFE12C", Offset = "0x1FFE12C", VA = "0x1FFE12C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x1FFE138", Offset = "0x1FFE138", VA = "0x1FFE138")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public GameObject TrackedObject
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x1FFE14C", Offset = "0x1FFE14C", VA = "0x1FFE14C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x1FFE154", Offset = "0x1FFE154", VA = "0x1FFE154")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public Vector2 LeftNDCSpace
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x1FFE164", Offset = "0x1FFE164", VA = "0x1FFE164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD04", Offset = "0x9EAD04")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x1FFE16C", Offset = "0x1FFE16C", VA = "0x1FFE16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD14", Offset = "0x9EAD14")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public Vector2 RightNDCSpace
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x1FFE174", Offset = "0x1FFE174", VA = "0x1FFE174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD24", Offset = "0x9EAD24")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x1FFE17C", Offset = "0x1FFE17C", VA = "0x1FFE17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD34", Offset = "0x9EAD34")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x1FFE184", Offset = "0x1FFE184", VA = "0x1FFE184")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1FFE6B8", Offset = "0x1FFE6B8", VA = "0x1FFE6B8")]
		private void ValidateFOV(float fov)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1FFE760", Offset = "0x1FFE760", VA = "0x1FFE760")]
		private void ValidateQuality(WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1FFE7EC", Offset = "0x1FFE7EC", VA = "0x1FFE7EC")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1FFE824", Offset = "0x1FFE824", VA = "0x1FFE824")]
		public void Set(WVR_Eye eye, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1FFE93C", Offset = "0x1FFE93C", VA = "0x1FFE93C")]
		public void Set(float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1FFE984", Offset = "0x1FFE984", VA = "0x1FFE984")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EAD44", Offset = "0x9EAD44")]
		private IEnumerator SetEnableCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1FFEA24", Offset = "0x1FFEA24", VA = "0x1FFEA24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1FFEAB4", Offset = "0x1FFEAB4", VA = "0x1FFEAB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1FFEBE8", Offset = "0x1FFEBE8", VA = "0x1FFEBE8")]
		private void CreateTrackedObject(WaveVR_Render render)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1FFEE44", Offset = "0x1FFEE44", VA = "0x1FFEE44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1FFE1F8", Offset = "0x1FFE1F8", VA = "0x1FFE1F8")]
		private void doUpdate()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1FFEE54", Offset = "0x1FFEE54", VA = "0x1FFEE54")]
		public static Vector2 WorldToNDC_GL(Camera camera, Vector3 worldPoint)
		{
			return default(Vector2);
		}

		[PreserveSig]
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1FFF15C", Offset = "0x1FFF15C", VA = "0x1FFF15C")]
		private static extern void SetFoveatedRenderingParameter(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, int peripheralQuality);

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1FFEFF4", Offset = "0x1FFEFF4", VA = "0x1FFEFF4")]
		private static void SetFoveatedRenderingParameterCheck(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1FFF234", Offset = "0x1FFF234", VA = "0x1FFF234")]
		public static void SetFoveatedRenderingParameter(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1FFF2E0", Offset = "0x1FFF2E0", VA = "0x1FFF2E0")]
		public static void SetFoveatedRenderingParameter(WVR_Eye eye, Vector2 ndcSpace, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1FFF394", Offset = "0x1FFF394", VA = "0x1FFF394")]
		public WaveVR_FoveatedRendering()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public struct TextureConfig
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int w;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int h;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int depth;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RenderTextureFormat format;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useMipMap;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int anisoLevel;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FilterMode filterMode;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextureWrapMode wrapMode;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int antiAliasing;
	}
	[Token(Token = "0x20001D0")]
	public class EyeConfig
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4504", Offset = "0x9E4504")]
		private bool <isBoth>k__BackingField;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4514", Offset = "0x9E4514")]
		private bool <isLeft>k__BackingField;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4524", Offset = "0x9E4524")]
		private bool <isRight>k__BackingField;

		[Token(Token = "0x170000B7")]
		public bool isBoth
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x1FFC414", Offset = "0x1FFC414", VA = "0x1FFC414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EADA8", Offset = "0x9EADA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x1FFC400", Offset = "0x1FFC400", VA = "0x1FFC400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EADB8", Offset = "0x9EADB8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public bool isLeft
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x1FFC40C", Offset = "0x1FFC40C", VA = "0x1FFC40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EADC8", Offset = "0x9EADC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x1FFC3E8", Offset = "0x1FFC3E8", VA = "0x1FFC3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EADD8", Offset = "0x9EADD8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public bool isRight
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x1FFC41C", Offset = "0x1FFC41C", VA = "0x1FFC41C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EADE8", Offset = "0x9EADE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x1FFC3F4", Offset = "0x1FFC3F4", VA = "0x1FFC3F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EADF8", Offset = "0x9EADF8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1FFC390", Offset = "0x1FFC390", VA = "0x1FFC390")]
		public EyeConfig(WVR_Eye eye)
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public abstract class TexturePool<T> : EyeConfig where T : class
	{
		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr queue;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<IntPtr, T> textures;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<IntPtr, IntPtr> depthes;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4534", Offset = "0x9E4534")]
		private int <size>k__BackingField;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4544", Offset = "0x9E4544")]
		private T <currentRt>k__BackingField;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4554", Offset = "0x9E4554")]
		private IntPtr <currentPtr>k__BackingField;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4564", Offset = "0x9E4564")]
		private IntPtr <currentDepthPtr>k__BackingField;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4574", Offset = "0x9E4574")]
		private bool <isReleased>k__BackingField;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr[] keyArray;

		[Token(Token = "0x170000BA")]
		public int size
		{
			[Token(Token = "0x6000DCE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE08", Offset = "0x9EAE08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DCF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE18", Offset = "0x9EAE18")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public T currentRt
		{
			[Token(Token = "0x6000DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE28", Offset = "0x9EAE28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE38", Offset = "0x9EAE38")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public IntPtr currentPtr
		{
			[Token(Token = "0x6000DD2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE48", Offset = "0x9EAE48")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6000DD3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE58", Offset = "0x9EAE58")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public IntPtr currentDepthPtr
		{
			[Token(Token = "0x6000DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE68", Offset = "0x9EAE68")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6000DD5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE78", Offset = "0x9EAE78")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public bool isReleased
		{
			[Token(Token = "0x6000DD6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE88", Offset = "0x9EAE88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAE98", Offset = "0x9EAE98")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DD8")]
		protected abstract T CreateTexture(TextureConfig cfg);

		[Token(Token = "0x6000DD9")]
		protected abstract IntPtr GetNativePtr(T rt);

		[Token(Token = "0x6000DDA")]
		protected abstract IntPtr GetNativeDepthBufferPtr(T rt);

		[Token(Token = "0x6000DDB")]
		protected abstract void ReleaseTexture(T rt);

		[Token(Token = "0x6000DDC")]
		public TexturePool(TextureConfig cfg, int size, WVR_Eye eye)
		{
		}

		[Token(Token = "0x6000DDD")]
		~TexturePool()
		{
		}

		[Token(Token = "0x6000DDE")]
		private T GetRenderTextureByPtr(IntPtr ptr)
		{
			return null;
		}

		[Token(Token = "0x6000DDF")]
		private IntPtr GetDepthByPtr(IntPtr ptr)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DE0")]
		public void next()
		{
		}

		[Token(Token = "0x6000DE1")]
		public void Release()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class TexturePool2DArray : TexturePool<Texture2DArray>
	{
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x1FFD5C0", Offset = "0x1FFD5C0", VA = "0x1FFD5C0")]
		public TexturePool2DArray(TextureConfig cfg, int size)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x1FFD660", Offset = "0x1FFD660", VA = "0x1FFD660", Slot = "4")]
		protected override Texture2DArray CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1FFD750", Offset = "0x1FFD750", VA = "0x1FFD750", Slot = "5")]
		protected override IntPtr GetNativePtr(Texture2DArray rt)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x1FFD7E8", Offset = "0x1FFD7E8", VA = "0x1FFD7E8", Slot = "6")]
		protected override IntPtr GetNativeDepthBufferPtr(Texture2DArray rt)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1FFD828", Offset = "0x1FFD828", VA = "0x1FFD828", Slot = "7")]
		protected override void ReleaseTexture(Texture2DArray rt)
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class TexturePoolRenderTexture2DArray : TexturePool<RenderTexture>
	{
		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x1FFD0B4", Offset = "0x1FFD0B4", VA = "0x1FFD0B4")]
		public TexturePoolRenderTexture2DArray(TextureConfig cfg, int size)
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x1FFDB6C", Offset = "0x1FFDB6C", VA = "0x1FFDB6C", Slot = "4")]
		protected override RenderTexture CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x1FFDD34", Offset = "0x1FFDD34", VA = "0x1FFDD34", Slot = "5")]
		protected override IntPtr GetNativePtr(RenderTexture rt)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1FFDDCC", Offset = "0x1FFDDCC", VA = "0x1FFDDCC", Slot = "6")]
		protected override IntPtr GetNativeDepthBufferPtr(RenderTexture rt)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x1FFDE64", Offset = "0x1FFDE64", VA = "0x1FFDE64", Slot = "7")]
		protected override void ReleaseTexture(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class TexturePoolRenderTexture : TexturePool<RenderTexture>
	{
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x1FFD154", Offset = "0x1FFD154", VA = "0x1FFD154")]
		public TexturePoolRenderTexture(TextureConfig cfg, int size, WVR_Eye eye)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x1FFD82C", Offset = "0x1FFD82C", VA = "0x1FFD82C", Slot = "4")]
		protected override RenderTexture CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x1FFD9A8", Offset = "0x1FFD9A8", VA = "0x1FFD9A8", Slot = "5")]
		protected override IntPtr GetNativePtr(RenderTexture rt)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x1FFDA40", Offset = "0x1FFDA40", VA = "0x1FFDA40", Slot = "6")]
		protected override IntPtr GetNativeDepthBufferPtr(RenderTexture rt)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x1FFDAD8", Offset = "0x1FFDAD8", VA = "0x1FFDAD8", Slot = "7")]
		protected override void ReleaseTexture(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class TextureManager
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int poolSize;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4584", Offset = "0x9E4584")]
		private bool <IsSinglePass>k__BackingField;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4594", Offset = "0x9E4594")]
		private bool <AllowAntiAliasing>k__BackingField;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E45A4", Offset = "0x9E45A4")]
		private TexturePoolRenderTexture <left>k__BackingField;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E45B4", Offset = "0x9E45B4")]
		private TexturePoolRenderTexture <right>k__BackingField;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E45C4", Offset = "0x9E45C4")]
		private TexturePoolRenderTexture2DArray <both>k__BackingField;

		[Token(Token = "0x170000BF")]
		public bool IsSinglePass
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x1FFC424", Offset = "0x1FFC424", VA = "0x1FFC424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAEA8", Offset = "0x9EAEA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x1FFC42C", Offset = "0x1FFC42C", VA = "0x1FFC42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAEB8", Offset = "0x9EAEB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool AllowAntiAliasing
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x1FFC438", Offset = "0x1FFC438", VA = "0x1FFC438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAEC8", Offset = "0x9EAEC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x1FFC440", Offset = "0x1FFC440", VA = "0x1FFC440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAED8", Offset = "0x9EAED8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public TexturePoolRenderTexture left
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x1FFC44C", Offset = "0x1FFC44C", VA = "0x1FFC44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAEE8", Offset = "0x9EAEE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x1FFC454", Offset = "0x1FFC454", VA = "0x1FFC454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAEF8", Offset = "0x9EAEF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public TexturePoolRenderTexture right
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x1FFC45C", Offset = "0x1FFC45C", VA = "0x1FFC45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAF08", Offset = "0x9EAF08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x1FFC464", Offset = "0x1FFC464", VA = "0x1FFC464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAF18", Offset = "0x9EAF18")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public TexturePoolRenderTexture2DArray both
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x1FFC46C", Offset = "0x1FFC46C", VA = "0x1FFC46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAF28", Offset = "0x9EAF28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x1FFC474", Offset = "0x1FFC474", VA = "0x1FFC474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAF38", Offset = "0x9EAF38")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x1FFC47C", Offset = "0x1FFC47C", VA = "0x1FFC47C")]
		public TextureManager(bool isSinglePass, bool allowAntiAliasing)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x1FFCE60", Offset = "0x1FFCE60", VA = "0x1FFCE60")]
		public void ReleaseTexturePools()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x1FFC7E4", Offset = "0x1FFC7E4", VA = "0x1FFC7E4")]
		public void reset()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x1FFD004", Offset = "0x1FFD004", VA = "0x1FFD004")]
		public bool validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x1FFD200", Offset = "0x1FFD200", VA = "0x1FFD200")]
		public void Next()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x1FFD2C0", Offset = "0x1FFD2C0", VA = "0x1FFD2C0")]
		public IntPtr GetNativePtr(WVR_Eye eye)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x1FFD36C", Offset = "0x1FFD36C", VA = "0x1FFD36C")]
		public IntPtr GetNativePtrLR(bool isLeftEye)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1FFD3E4", Offset = "0x1FFD3E4", VA = "0x1FFD3E4")]
		public IntPtr GetNativePtrBoth()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1FFD444", Offset = "0x1FFD444", VA = "0x1FFD444")]
		public Texture GetRenderTexture(WVR_Eye eye)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1FFD4E8", Offset = "0x1FFD4E8", VA = "0x1FFD4E8")]
		public RenderTexture GetRenderTextureBoth()
		{
			return null;
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1FFD548", Offset = "0x1FFD548", VA = "0x1FFD548")]
		public RenderTexture GetRenderTextureLR(bool isLeftEye)
		{
			return null;
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x20001D6")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4000E4D")]
		Array = 1,
		[Token(Token = "0x4000E4E")]
		Object = 2,
		[Token(Token = "0x4000E4F")]
		String = 3,
		[Token(Token = "0x4000E50")]
		Number = 4,
		[Token(Token = "0x4000E51")]
		NullValue = 5,
		[Token(Token = "0x4000E52")]
		Boolean = 6,
		[Token(Token = "0x4000E53")]
		None = 7,
		[Token(Token = "0x4000E54")]
		Custom = 255
	}
	[Token(Token = "0x20001D7")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4000E56")]
		Compact,
		[Token(Token = "0x4000E57")]
		Indent
	}
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DEF74", Offset = "0x9DEF74")]
	public abstract class JSONNode
	{
		[Token(Token = "0x20004F2")]
		public struct Enumerator
		{
			[Token(Token = "0x20005C4")]
			private enum Type
			{
				[Token(Token = "0x4001E90")]
				None,
				[Token(Token = "0x4001E91")]
				Array,
				[Token(Token = "0x4001E92")]
				Object
			}

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x1700030C")]
			public bool IsValid
			{
				[Token(Token = "0x600214C")]
				[Address(RVA = "0xA8A490", Offset = "0xA8A490", VA = "0xA8A490")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700030D")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x600214F")]
				[Address(RVA = "0xA8A524", Offset = "0xA8A524", VA = "0xA8A524")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x600214D")]
			[Address(RVA = "0xA8A4A0", Offset = "0xA8A4A0", VA = "0xA8A4A0")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x600214E")]
			[Address(RVA = "0xA8A4E0", Offset = "0xA8A4E0", VA = "0xA8A4E0")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002150")]
			[Address(RVA = "0xA8A52C", Offset = "0xA8A52C", VA = "0xA8A52C")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004F3")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x1700030E")]
			public JSONNode Current
			{
				[Token(Token = "0x6002154")]
				[Address(RVA = "0xA8A73C", Offset = "0xA8A73C", VA = "0xA8A73C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002151")]
			[Address(RVA = "0xA8A694", Offset = "0xA8A694", VA = "0xA8A694")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002152")]
			[Address(RVA = "0xA8A6D8", Offset = "0xA8A6D8", VA = "0xA8A6D8")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002153")]
			[Address(RVA = "0xA8A720", Offset = "0xA8A720", VA = "0xA8A720")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002155")]
			[Address(RVA = "0xA8A744", Offset = "0xA8A744", VA = "0xA8A744")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002156")]
			[Address(RVA = "0xA8A74C", Offset = "0xA8A74C", VA = "0xA8A74C")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x20004F4")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x1700030F")]
			public JSONNode Current
			{
				[Token(Token = "0x600215A")]
				[Address(RVA = "0xA8A628", Offset = "0xA8A628", VA = "0xA8A628")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002157")]
			[Address(RVA = "0xA8A580", Offset = "0xA8A580", VA = "0xA8A580")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002158")]
			[Address(RVA = "0xA8A5C4", Offset = "0xA8A5C4", VA = "0xA8A5C4")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002159")]
			[Address(RVA = "0xA8A60C", Offset = "0xA8A60C", VA = "0xA8A60C")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x600215B")]
			[Address(RVA = "0xA8A630", Offset = "0xA8A630", VA = "0xA8A630")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600215C")]
			[Address(RVA = "0xA8A638", Offset = "0xA8A638", VA = "0xA8A638")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x20004F5")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private JSONNode m_Node;

			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x17000310")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x600215E")]
				[Address(RVA = "0xC2647C", Offset = "0xC2647C", VA = "0xC2647C", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600215F")]
				[Address(RVA = "0xC26484", Offset = "0xC26484", VA = "0xC26484", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600215D")]
			[Address(RVA = "0xC24660", Offset = "0xC24660", VA = "0xC24660")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6002160")]
			[Address(RVA = "0xC264F0", Offset = "0xC264F0", VA = "0xC264F0", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002161")]
			[Address(RVA = "0xC264F8", Offset = "0xC264F8", VA = "0xC264F8", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002162")]
			[Address(RVA = "0xC26518", Offset = "0xC26518", VA = "0xC26518", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002163")]
			[Address(RVA = "0xC2657C", Offset = "0xC2657C", VA = "0xC2657C", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002164")]
			[Address(RVA = "0xC26630", Offset = "0xC26630", VA = "0xC26630", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E00A4", Offset = "0x9E00A4")]
		private sealed class <get_Children>d__39 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000312")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002168")]
				[Address(RVA = "0xC25908", Offset = "0xC25908", VA = "0xC25908", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000313")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600216A")]
				[Address(RVA = "0xC25978", Offset = "0xC25978", VA = "0xC25978", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002165")]
			[Address(RVA = "0xC243D0", Offset = "0xC243D0", VA = "0xC243D0")]
			[DebuggerHidden]
			public <get_Children>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6002166")]
			[Address(RVA = "0xC258EC", Offset = "0xC258EC", VA = "0xC258EC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002167")]
			[Address(RVA = "0xC258F0", Offset = "0xC258F0", VA = "0xC258F0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002169")]
			[Address(RVA = "0xC25910", Offset = "0xC25910", VA = "0xC25910", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600216B")]
			[Address(RVA = "0xC25980", Offset = "0xC25980", VA = "0xC25980", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600216C")]
			[Address(RVA = "0xC25A18", Offset = "0xC25A18", VA = "0xC25A18", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E00B4", Offset = "0x9E00B4")]
		private sealed class <get_DeepChildren>d__41 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000314")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002172")]
				[Address(RVA = "0xC26050", Offset = "0xC26050", VA = "0xC26050", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000315")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002174")]
				[Address(RVA = "0xC260C0", Offset = "0xC260C0", VA = "0xC260C0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600216D")]
			[Address(RVA = "0xC2448C", Offset = "0xC2448C", VA = "0xC2448C")]
			[DebuggerHidden]
			public <get_DeepChildren>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x600216E")]
			[Address(RVA = "0xC25A1C", Offset = "0xC25A1C", VA = "0xC25A1C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600216F")]
			[Address(RVA = "0xC25C14", Offset = "0xC25C14", VA = "0xC25C14", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002170")]
			[Address(RVA = "0xC25B54", Offset = "0xC25B54", VA = "0xC25B54")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002171")]
			[Address(RVA = "0xC25A94", Offset = "0xC25A94", VA = "0xC25A94")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002173")]
			[Address(RVA = "0xC26058", Offset = "0xC26058", VA = "0xC26058", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002175")]
			[Address(RVA = "0xC260C8", Offset = "0xC260C8", VA = "0xC260C8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002176")]
			[Address(RVA = "0xC26178", Offset = "0xC26178", VA = "0xC26178", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x4000E59")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x170000C4")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6000E06")]
			get;
		}

		[Token(Token = "0x170000C5")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xC24230", Offset = "0xC24230", VA = "0xC24230", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xC24238", Offset = "0xC24238", VA = "0xC24238", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xC2423C", Offset = "0xC2423C", VA = "0xC2423C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xC24244", Offset = "0xC24244", VA = "0xC24244", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public virtual string Value
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xC24248", Offset = "0xC24248", VA = "0xC24248", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xC24290", Offset = "0xC24290", VA = "0xC24290", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public virtual int Count
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xC24294", Offset = "0xC24294", VA = "0xC24294", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C9")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xC2429C", Offset = "0xC2429C", VA = "0xC2429C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CA")]
		public virtual bool IsString
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xC242A4", Offset = "0xC242A4", VA = "0xC242A4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CB")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xC242AC", Offset = "0xC242AC", VA = "0xC242AC", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CC")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xC242B4", Offset = "0xC242B4", VA = "0xC242B4", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CD")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xC242BC", Offset = "0xC242BC", VA = "0xC242BC", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CE")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xC242C4", Offset = "0xC242C4", VA = "0xC242C4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CF")]
		public virtual bool Inline
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xC242CC", Offset = "0xC242CC", VA = "0xC242CC", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xC242D4", Offset = "0xC242D4", VA = "0xC242D4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xC24360", Offset = "0xC24360", VA = "0xC24360", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EAF48", Offset = "0x9EAF48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xC24408", Offset = "0xC24408", VA = "0xC24408")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EAFAC", Offset = "0x9EAFAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xC24600", Offset = "0xC24600", VA = "0xC24600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0xC2472C", Offset = "0xC2472C", VA = "0xC2472C")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x170000D4")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xC2478C", Offset = "0xC2478C", VA = "0xC2478C")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x170000D5")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0xC247EC", Offset = "0xC247EC", VA = "0xC247EC", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xC24890", Offset = "0xC24890", VA = "0xC24890", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xC248D0", Offset = "0xC248D0", VA = "0xC248D0", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xC248F4", Offset = "0xC248F4", VA = "0xC248F4", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0xC2490C", Offset = "0xC2490C", VA = "0xC2490C", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xC24930", Offset = "0xC24930", VA = "0xC24930", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xC24944", Offset = "0xC24944", VA = "0xC24944", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xC24A0C", Offset = "0xC24A0C", VA = "0xC24A0C", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0xC24A90", Offset = "0xC24A90", VA = "0xC24A90", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0xC24B10", Offset = "0xC24B10", VA = "0xC24B10", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xC251F4", Offset = "0xC251F4", VA = "0xC251F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xC242D8", Offset = "0xC242D8", VA = "0xC242D8", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xC242DC", Offset = "0xC242DC", VA = "0xC242DC", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xC24348", Offset = "0xC24348", VA = "0xC24348", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xC24350", Offset = "0xC24350", VA = "0xC24350", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xC24358", Offset = "0xC24358", VA = "0xC24358", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xC244C4", Offset = "0xC244C4", VA = "0xC244C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xC2455C", Offset = "0xC2455C", VA = "0xC2455C", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6000E1F")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6000E20")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xC24B90", Offset = "0xC24B90", VA = "0xC24B90")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xC24C6C", Offset = "0xC24C6C", VA = "0xC24C6C")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xC24D04", Offset = "0xC24D04", VA = "0xC24D04")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xC24D6C", Offset = "0xC24D6C", VA = "0xC24D6C")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xC24E08", Offset = "0xC24E08", VA = "0xC24E08")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xC24E70", Offset = "0xC24E70", VA = "0xC24E70")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xC24F0C", Offset = "0xC24F0C", VA = "0xC24F0C")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xC24F6C", Offset = "0xC24F6C", VA = "0xC24F6C")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xC25008", Offset = "0xC25008", VA = "0xC25008")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xC25068", Offset = "0xC25068", VA = "0xC25068")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xC25104", Offset = "0xC25104", VA = "0xC25104")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xC228B4", Offset = "0xC228B4", VA = "0xC228B4")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xC25160", Offset = "0xC25160", VA = "0xC25160")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xC251E0", Offset = "0xC251E0", VA = "0xC251E0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xC251EC", Offset = "0xC251EC", VA = "0xC251EC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xC252D0", Offset = "0xC252D0", VA = "0xC252D0")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xC256E4", Offset = "0xC256E4", VA = "0xC256E4")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xC21E10", Offset = "0xC21E10", VA = "0xC21E10")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xC231D0", Offset = "0xC231D0", VA = "0xC231D0")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DEFAC", Offset = "0x9DEFAC")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E00C4", Offset = "0x9E00C4")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000316")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600217B")]
				[Address(RVA = "0xC233C0", Offset = "0xC233C0", VA = "0xC233C0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000317")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600217D")]
				[Address(RVA = "0xC23430", Offset = "0xC23430", VA = "0xC23430", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002177")]
			[Address(RVA = "0xC22F0C", Offset = "0xC22F0C", VA = "0xC22F0C")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002178")]
			[Address(RVA = "0xC231D8", Offset = "0xC231D8", VA = "0xC231D8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002179")]
			[Address(RVA = "0xC2324C", Offset = "0xC2324C", VA = "0xC2324C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600217A")]
			[Address(RVA = "0xC231F4", Offset = "0xC231F4", VA = "0xC231F4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600217C")]
			[Address(RVA = "0xC233C8", Offset = "0xC233C8", VA = "0xC233C8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600217E")]
			[Address(RVA = "0xC23438", Offset = "0xC23438", VA = "0xC23438", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600217F")]
			[Address(RVA = "0xC234E8", Offset = "0xC234E8", VA = "0xC234E8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170000DC")]
		public override bool Inline
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xC22540", Offset = "0xC22540", VA = "0xC22540", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xC22548", Offset = "0xC22548", VA = "0xC22548", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xC22554", Offset = "0xC22554", VA = "0xC22554", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000DE")]
		public override bool IsArray
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xC2255C", Offset = "0xC2255C", VA = "0xC2255C", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DF")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xC22638", Offset = "0xC22638", VA = "0xC22638", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xC22780", Offset = "0xC22780", VA = "0xC22780", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xC22AE4", Offset = "0xC22AE4", VA = "0xC22AE4", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xC22B44", Offset = "0xC22B44", VA = "0xC22B44", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public override int Count
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xC22C0C", Offset = "0xC22C0C", VA = "0xC22C0C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E2")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0xC22E88", Offset = "0xC22E88", VA = "0xC22E88", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB010", Offset = "0x9EB010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xC22564", Offset = "0xC22564", VA = "0xC22564", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xC22C6C", Offset = "0xC22C6C", VA = "0xC22C6C", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xC22D34", Offset = "0xC22D34", VA = "0xC22D34", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xC22E10", Offset = "0xC22E10", VA = "0xC22E10", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xC22F44", Offset = "0xC22F44", VA = "0xC22F44", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xC23140", Offset = "0xC23140", VA = "0xC23140")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DEFE4", Offset = "0x9DEFE4")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E00D4", Offset = "0x9E00D4")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6002180")]
			[Address(RVA = "0xC27884", Offset = "0xC27884", VA = "0xC27884")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002181")]
			[Address(RVA = "0xC27CF0", Offset = "0xC27CF0", VA = "0xC27CF0")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E00E4", Offset = "0x9E00E4")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000318")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002186")]
				[Address(RVA = "0xC27FA4", Offset = "0xC27FA4", VA = "0xC27FA4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002188")]
				[Address(RVA = "0xC28014", Offset = "0xC28014", VA = "0xC28014", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002182")]
			[Address(RVA = "0xC27910", Offset = "0xC27910", VA = "0xC27910")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002183")]
			[Address(RVA = "0xC27D8C", Offset = "0xC27D8C", VA = "0xC27D8C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002184")]
			[Address(RVA = "0xC27E00", Offset = "0xC27E00", VA = "0xC27E00", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002185")]
			[Address(RVA = "0xC27DA8", Offset = "0xC27DA8", VA = "0xC27DA8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0xC27FAC", Offset = "0xC27FAC", VA = "0xC27FAC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002189")]
			[Address(RVA = "0xC2801C", Offset = "0xC2801C", VA = "0xC2801C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600218A")]
			[Address(RVA = "0xC280CC", Offset = "0xC280CC", VA = "0xC280CC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170000E3")]
		public override bool Inline
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xC26E28", Offset = "0xC26E28", VA = "0xC26E28", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xC26E30", Offset = "0xC26E30", VA = "0xC26E30", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xC26E3C", Offset = "0xC26E3C", VA = "0xC26E3C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000E5")]
		public override bool IsObject
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xC26E44", Offset = "0xC26E44", VA = "0xC26E44", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E6")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xC26EF0", Offset = "0xC26EF0", VA = "0xC26EF0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0xC26FC0", Offset = "0xC26FC0", VA = "0xC26FC0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0xC270EC", Offset = "0xC270EC", VA = "0xC270EC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0xC271B0", Offset = "0xC271B0", VA = "0xC271B0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public override int Count
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0xC272FC", Offset = "0xC272FC", VA = "0xC272FC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E9")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xC2788C", Offset = "0xC2788C", VA = "0xC2788C", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB074", Offset = "0x9EB074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xC26E4C", Offset = "0xC26E4C", VA = "0xC26E4C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xC2735C", Offset = "0xC2735C", VA = "0xC2735C", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xC274F8", Offset = "0xC274F8", VA = "0xC274F8", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xC275D0", Offset = "0xC275D0", VA = "0xC275D0", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xC276D0", Offset = "0xC276D0", VA = "0xC276D0", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xC27948", Offset = "0xC27948", VA = "0xC27948", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xC23B0C", Offset = "0xC23B0C", VA = "0xC23B0C")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170000EA")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0xC280D0", Offset = "0xC280D0", VA = "0xC280D0", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000EB")]
		public override bool IsString
		{
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0xC280D8", Offset = "0xC280D8", VA = "0xC280D8", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public override string Value
		{
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xC28100", Offset = "0xC28100", VA = "0xC28100", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0xC28108", Offset = "0xC28108", VA = "0xC28108", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xC280E0", Offset = "0xC280E0", VA = "0xC280E0", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xC24BF0", Offset = "0xC24BF0", VA = "0xC24BF0")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xC28110", Offset = "0xC28110", VA = "0xC28110", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xC281E4", Offset = "0xC281E4", VA = "0xC281E4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xC28300", Offset = "0xC28300", VA = "0xC28300", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001DC")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x170000ED")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xC26A10", Offset = "0xC26A10", VA = "0xC26A10", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000EE")]
		public override bool IsNumber
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xC26A18", Offset = "0xC26A18", VA = "0xC26A18", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		public override string Value
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xC26A40", Offset = "0xC26A40", VA = "0xC26A40", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0xC26A4C", Offset = "0xC26A4C", VA = "0xC26A4C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public override double AsDouble
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xC26AD8", Offset = "0xC26AD8", VA = "0xC26AD8", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xC26AE0", Offset = "0xC26AE0", VA = "0xC26AE0", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xC26A20", Offset = "0xC26A20", VA = "0xC26A20", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xC23D80", Offset = "0xC23D80", VA = "0xC23D80")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xC26AE8", Offset = "0xC26AE8", VA = "0xC26AE8")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xC26B70", Offset = "0xC26B70", VA = "0xC26B70", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xC26BB0", Offset = "0xC26BB0", VA = "0xC26BB0")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xC26CE0", Offset = "0xC26CE0", VA = "0xC26CE0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xC26E1C", Offset = "0xC26E1C", VA = "0xC26E1C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001DD")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x170000F1")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xC234EC", Offset = "0xC234EC", VA = "0xC234EC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000F2")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6000E7B")]
			[Address(RVA = "0xC234F4", Offset = "0xC234F4", VA = "0xC234F4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F3")]
		public override string Value
		{
			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0xC2351C", Offset = "0xC2351C", VA = "0xC2351C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xC23528", Offset = "0xC23528", VA = "0xC23528", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public override bool AsBool
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0xC235B4", Offset = "0xC235B4", VA = "0xC235B4", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0xC235BC", Offset = "0xC235BC", VA = "0xC235BC", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xC234FC", Offset = "0xC234FC", VA = "0xC234FC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xC235C8", Offset = "0xC235C8", VA = "0xC235C8")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xC23648", Offset = "0xC23648", VA = "0xC23648")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xC236D0", Offset = "0xC236D0", VA = "0xC236D0", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xC23754", Offset = "0xC23754", VA = "0xC23754", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xC237DC", Offset = "0xC237DC", VA = "0xC237DC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001DE")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x170000F5")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xC26814", Offset = "0xC26814", VA = "0xC26814", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000F6")]
		public override bool IsNull
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xC2681C", Offset = "0xC2681C", VA = "0xC2681C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F7")]
		public override string Value
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xC26844", Offset = "0xC26844", VA = "0xC26844", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xC2688C", Offset = "0xC2688C", VA = "0xC2688C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public override bool AsBool
		{
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xC26890", Offset = "0xC26890", VA = "0xC26890", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xC26898", Offset = "0xC26898", VA = "0xC26898", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xC22A44", Offset = "0xC22A44", VA = "0xC22A44")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xC267AC", Offset = "0xC267AC", VA = "0xC267AC")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xC26824", Offset = "0xC26824", VA = "0xC26824", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xC2689C", Offset = "0xC2689C", VA = "0xC2689C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xC26938", Offset = "0xC26938", VA = "0xC26938", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xC26940", Offset = "0xC26940", VA = "0xC26940", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF01C", Offset = "0x9DF01C")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170000F9")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0xC237E8", Offset = "0xC237E8", VA = "0xC237E8", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000FA")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xC23914", Offset = "0xC23914", VA = "0xC23914", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xC23974", Offset = "0xC23974", VA = "0xC23974", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xC23A04", Offset = "0xC23A04", VA = "0xC23A04", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xC23A74", Offset = "0xC23A74", VA = "0xC23A74", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public override int AsInt
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0xC23D14", Offset = "0xC23D14", VA = "0xC23D14", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0xC23DFC", Offset = "0xC23DFC", VA = "0xC23DFC", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public override float AsFloat
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xC23E6C", Offset = "0xC23E6C", VA = "0xC23E6C", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xC23ED8", Offset = "0xC23ED8", VA = "0xC23ED8", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public override double AsDouble
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xC23F48", Offset = "0xC23F48", VA = "0xC23F48", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0xC23FB4", Offset = "0xC23FB4", VA = "0xC23FB4", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public override bool AsBool
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xC24024", Offset = "0xC24024", VA = "0xC24024", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0xC24090", Offset = "0xC24090", VA = "0xC24090", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xC24100", Offset = "0xC24100", VA = "0xC24100", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0xC24168", Offset = "0xC24168", VA = "0xC24168", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xC237F0", Offset = "0xC237F0", VA = "0xC237F0", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xC22704", Offset = "0xC22704", VA = "0xC22704")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xC23810", Offset = "0xC23810", VA = "0xC23810")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xC23890", Offset = "0xC23890", VA = "0xC23890")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xC23B9C", Offset = "0xC23B9C", VA = "0xC23B9C", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xC23C2C", Offset = "0xC23C2C", VA = "0xC23C2C", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xC23CC4", Offset = "0xC23CC4", VA = "0xC23CC4")]
		public static bool operator ==(SimpleJSON.JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xC23CDC", Offset = "0xC23CDC", VA = "0xC23CDC")]
		public static bool operator !=(SimpleJSON.JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xC23CF4", Offset = "0xC23CF4", VA = "0xC23CF4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xC23D0C", Offset = "0xC23D0C", VA = "0xC23D0C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xC241D0", Offset = "0xC241D0", VA = "0xC241D0", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public static class JSON
	{
		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xC21DAC", Offset = "0xC21DAC", VA = "0xC21DAC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x20001E1")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xC1634C", Offset = "0xC1634C", VA = "0xC1634C")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xC16418", Offset = "0xC16418", VA = "0xC16418")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xC16930", Offset = "0xC16930", VA = "0xC16930")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xC16A40", Offset = "0xC16A40", VA = "0xC16A40")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x20001E2")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E00F4", Offset = "0x9E00F4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x600218B")]
			[Address(RVA = "0x123D2A8", Offset = "0x123D2A8", VA = "0x123D2A8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600218C")]
			[Address(RVA = "0x123D400", Offset = "0x123D400", VA = "0x123D400")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0104", Offset = "0x9E0104")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x1700031A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002190")]
				[Address(RVA = "0x123D4A4", Offset = "0x123D4A4", VA = "0x123D4A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002192")]
				[Address(RVA = "0x123D514", Offset = "0x123D514", VA = "0x123D514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600218D")]
			[Address(RVA = "0x123D34C", Offset = "0x123D34C", VA = "0x123D34C")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600218E")]
			[Address(RVA = "0x123D434", Offset = "0x123D434", VA = "0x123D434", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600218F")]
			[Address(RVA = "0x123D438", Offset = "0x123D438", VA = "0x123D438", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002191")]
			[Address(RVA = "0x123D4AC", Offset = "0x123D4AC", VA = "0x123D4AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0114", Offset = "0x9E0114")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x1700031C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002196")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002198")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002193")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002194")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002195")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002197")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0124", Offset = "0x9E0124")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4001ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x1700031E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600219C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600219E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002199")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600219A")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600219B")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600219D")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0134", Offset = "0x9E0134")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x17000320")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021A2")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000321")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021A4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600219F")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60021A0")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021A1")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021A3")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0144", Offset = "0x9E0144")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000322")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021A8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000323")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021AA")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021A5")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60021A6")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021A7")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021A9")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x123CCC8", Offset = "0x123CCC8", VA = "0x123CCC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x123CDDC", Offset = "0x123CDDC", VA = "0x123CDDC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x123CF84", Offset = "0x123CF84", VA = "0x123CF84")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x123D08C", Offset = "0x123D08C", VA = "0x123D08C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x123D0F4", Offset = "0x123D0F4", VA = "0x123D0F4")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x123D2B0", Offset = "0x123D2B0", VA = "0x123D2B0")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6000EB9")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6000EBA")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6000EBB")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6000EBC")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x123D2D8", Offset = "0x123D2D8", VA = "0x123D2D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB0D8", Offset = "0x9EB0D8")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB13C", Offset = "0x9EB13C")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6000EBF")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB1A0", Offset = "0x9EB1A0")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB204", Offset = "0x9EB204")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6000EC1")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB268", Offset = "0x9EB268")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x123D378", Offset = "0x123D378", VA = "0x123D378")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public enum Locale
	{
		[Token(Token = "0x4000E69")]
		US,
		[Token(Token = "0x4000E6A")]
		DE,
		[Token(Token = "0x4000E6B")]
		JP,
		[Token(Token = "0x4000E6C")]
		KR,
		[Token(Token = "0x4000E6D")]
		RU,
		[Token(Token = "0x4000E6E")]
		CN,
		[Token(Token = "0x4000E6F")]
		TW,
		[Token(Token = "0x4000E70")]
		FR
	}
	[Token(Token = "0x20001E4")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x20001E5")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20001E6")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x20001E7")]
	public class Leaderboard
	{
		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E45E4", Offset = "0x9E45E4")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E45F4", Offset = "0x9E45F4")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4604", Offset = "0x9E4604")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x17000102")]
		public int Rank
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x123CCB0", Offset = "0x123CCB0", VA = "0x123CCB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB2CC", Offset = "0x9EB2CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x123CB00", Offset = "0x123CB00", VA = "0x123CB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB2DC", Offset = "0x9EB2DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public int Score
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x123CCB8", Offset = "0x123CCB8", VA = "0x123CCB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB2EC", Offset = "0x9EB2EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x123CB08", Offset = "0x123CB08", VA = "0x123CB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB2FC", Offset = "0x9EB2FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public string UserName
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x123CCC0", Offset = "0x123CCC0", VA = "0x123CCC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB30C", Offset = "0x9EB30C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x123CAF8", Offset = "0x123CAF8", VA = "0x123CAF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB31C", Offset = "0x9EB31C")]
			set
			{
			}
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x123CAF0", Offset = "0x123CAF0", VA = "0x123CAF0")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x2000501")]
		public enum Platform
		{
			[Token(Token = "0x4001ADE")]
			Windows,
			[Token(Token = "0x4001ADF")]
			Android
		}

		[Token(Token = "0x2000502")]
		public enum TransactionType
		{
			[Token(Token = "0x4001AE1")]
			Unknown,
			[Token(Token = "0x4001AE2")]
			Paid,
			[Token(Token = "0x4001AE3")]
			Redeem,
			[Token(Token = "0x4001AE4")]
			FreeTrial
		}

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4614", Offset = "0x9E4614")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4624", Offset = "0x9E4624")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x17000105")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x123E7D0", Offset = "0x123E7D0", VA = "0x123E7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB32C", Offset = "0x9EB32C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x123E7E8", Offset = "0x123E7E8", VA = "0x123E7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB33C", Offset = "0x9EB33C")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public TransactionType Type
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x123E7F0", Offset = "0x123E7F0", VA = "0x123E7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB34C", Offset = "0x9EB34C")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x123E7D8", Offset = "0x123E7D8", VA = "0x123E7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB35C", Offset = "0x9EB35C")]
			set
			{
			}
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x123E758", Offset = "0x123E758", VA = "0x123E758")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class Api
	{
		[Token(Token = "0x2000503")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x60021AB")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x60021AC")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x122E360", Offset = "0x122E360", VA = "0x122E360")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x122D41C", Offset = "0x122D41C", VA = "0x122D41C")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x122D31C", Offset = "0x122D31C", VA = "0x122D31C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB36C", Offset = "0x9EB36C")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x122DB48", Offset = "0x122DB48", VA = "0x122DB48")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x122D39C", Offset = "0x122D39C", VA = "0x122D39C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB3D0", Offset = "0x9EB3D0")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x122DE78", Offset = "0x122DE78", VA = "0x122DE78")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x122E0D8", Offset = "0x122E0D8", VA = "0x122E0D8")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x122E1F4", Offset = "0x122E1F4", VA = "0x122E1F4")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class User
	{
		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x123EB90", Offset = "0x123EB90", VA = "0x123EB90")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB434", Offset = "0x9EB434")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x123EBF8", Offset = "0x123EBF8", VA = "0x123EBF8")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x123ED50", Offset = "0x123ED50", VA = "0x123ED50")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x123ED84", Offset = "0x123ED84", VA = "0x123ED84")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x123EDB8", Offset = "0x123EDB8", VA = "0x123EDB8")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x123EDEC", Offset = "0x123EDEC", VA = "0x123EDEC")]
		public User()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class UserStats
	{
		[Token(Token = "0x2000504")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4001AE6")]
			GlobalData,
			[Token(Token = "0x4001AE7")]
			GlobalDataAroundUser,
			[Token(Token = "0x4001AE8")]
			LocalData,
			[Token(Token = "0x4001AE9")]
			LocalDataAroundUser
		}

		[Token(Token = "0x2000505")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4001AEB")]
			AllTime,
			[Token(Token = "0x4001AEC")]
			Daily,
			[Token(Token = "0x4001AED")]
			Weekly,
			[Token(Token = "0x4001AEE")]
			Monthly
		}

		[Token(Token = "0x2000506")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4001AF0")]
			None,
			[Token(Token = "0x4001AF1")]
			Ascending,
			[Token(Token = "0x4001AF2")]
			Descending
		}

		[Token(Token = "0x2000507")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4001AF4")]
			None,
			[Token(Token = "0x4001AF5")]
			Numeric,
			[Token(Token = "0x4001AF6")]
			TimeSeconds,
			[Token(Token = "0x4001AF7")]
			TimeMilliSeconds
		}

		[Token(Token = "0x2000508")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4001AF9")]
			None,
			[Token(Token = "0x4001AFA")]
			KeepBest,
			[Token(Token = "0x4001AFB")]
			ForceUpdate
		}

		[Token(Token = "0x2000509")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4001AFD")]
			Name,
			[Token(Token = "0x4001AFE")]
			Desc,
			[Token(Token = "0x4001AFF")]
			Hidden
		}

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x123EDF4", Offset = "0x123EDF4", VA = "0x123EDF4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB498", Offset = "0x9EB498")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x123EFFC", Offset = "0x123EFFC", VA = "0x123EFFC")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x123EE5C", Offset = "0x123EE5C", VA = "0x123EE5C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB4FC", Offset = "0x9EB4FC")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x123F154", Offset = "0x123F154", VA = "0x123F154")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x123F2AC", Offset = "0x123F2AC", VA = "0x123F2AC")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x123F2B0", Offset = "0x123F2B0", VA = "0x123F2B0")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x123F2B4", Offset = "0x123F2B4", VA = "0x123F2B4")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x123F2B8", Offset = "0x123F2B8", VA = "0x123F2B8")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x123EEC4", Offset = "0x123EEC4", VA = "0x123EEC4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB560", Offset = "0x9EB560")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x123F2BC", Offset = "0x123F2BC", VA = "0x123F2BC")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x123F414", Offset = "0x123F414", VA = "0x123F414")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x123F418", Offset = "0x123F418", VA = "0x123F418")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x123F41C", Offset = "0x123F41C", VA = "0x123F41C")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x123F420", Offset = "0x123F420", VA = "0x123F420")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x123F424", Offset = "0x123F424", VA = "0x123F424")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x123F428", Offset = "0x123F428", VA = "0x123F428")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x123F42C", Offset = "0x123F42C", VA = "0x123F42C")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x123EF2C", Offset = "0x123EF2C", VA = "0x123EF2C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB5C4", Offset = "0x9EB5C4")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x123F430", Offset = "0x123F430", VA = "0x123F430")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x123EF94", Offset = "0x123EF94", VA = "0x123EF94")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB628", Offset = "0x9EB628")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x123F5C8", Offset = "0x123F5C8", VA = "0x123F5C8")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x123F738", Offset = "0x123F738", VA = "0x123F738")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x123F73C", Offset = "0x123F73C", VA = "0x123F73C")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x123F740", Offset = "0x123F740", VA = "0x123F740")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x123F744", Offset = "0x123F744", VA = "0x123F744")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x123F748", Offset = "0x123F748", VA = "0x123F748")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x122E370", Offset = "0x122E370", VA = "0x122E370")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class IAPurchase
	{
		[Token(Token = "0x200050A")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x1230160", Offset = "0x1230160", VA = "0x1230160")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x12301CC", Offset = "0x12301CC", VA = "0x12301CC")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x1232780", Offset = "0x1232780", VA = "0x1232780", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x12304B8", Offset = "0x12304B8", VA = "0x12304B8")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x1232CC4", Offset = "0x1232CC4", VA = "0x1232CC4", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x1230A4C", Offset = "0x1230A4C", VA = "0x1230A4C")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x1233208", Offset = "0x1233208", VA = "0x1233208", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x1230D28", Offset = "0x1230D28", VA = "0x1230D28")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x12338F4", Offset = "0x12338F4", VA = "0x12338F4", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x1230FF4", Offset = "0x1230FF4", VA = "0x1230FF4")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x12344D8", Offset = "0x12344D8", VA = "0x12344D8", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x123126C", Offset = "0x123126C", VA = "0x123126C")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x60021BA")]
			[Address(RVA = "0x1235694", Offset = "0x1235694", VA = "0x1235694", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021BB")]
			[Address(RVA = "0x123153C", Offset = "0x123153C", VA = "0x123153C")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60021BC")]
			[Address(RVA = "0x1235D84", Offset = "0x1235D84", VA = "0x1235D84", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x1231A44", Offset = "0x1231A44", VA = "0x1231A44")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x60021BE")]
			[Address(RVA = "0x12362AC", Offset = "0x12362AC", VA = "0x12362AC", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x1231D20", Offset = "0x1231D20", VA = "0x1231D20")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x60021C0")]
			[Address(RVA = "0x12367D4", Offset = "0x12367D4", VA = "0x12367D4", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021C1")]
			[Address(RVA = "0x1231FFC", Offset = "0x1231FFC", VA = "0x1231FFC")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60021C2")]
			[Address(RVA = "0x1236F88", Offset = "0x1236F88", VA = "0x1236F88", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x12322C8", Offset = "0x12322C8", VA = "0x12322C8")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x1237530", Offset = "0x1237530", VA = "0x1237530", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x1232550", Offset = "0x1232550", VA = "0x1232550")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x1237AD0", Offset = "0x1237AD0", VA = "0x1237AD0", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x200050B")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x60021C7")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x60021C8")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x60021C9")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x60021CA")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x60021CB")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x60021CC")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x60021CD")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x60021CE")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x60021CF")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x60021D0")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x60021D1")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x60021D2")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x1232778", Offset = "0x1232778", VA = "0x1232778")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x200050C")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x1237F48", Offset = "0x1237F48", VA = "0x1237F48", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x1237F4C", Offset = "0x1237F4C", VA = "0x1237F4C", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x1237F50", Offset = "0x1237F50", VA = "0x1237F50", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60021D7")]
			[Address(RVA = "0x1237F54", Offset = "0x1237F54", VA = "0x1237F54", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x1237F58", Offset = "0x1237F58", VA = "0x1237F58", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x1237F5C", Offset = "0x1237F5C", VA = "0x1237F5C", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x1237F60", Offset = "0x1237F60", VA = "0x1237F60", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60021DB")]
			[Address(RVA = "0x1237F64", Offset = "0x1237F64", VA = "0x1237F64", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60021DC")]
			[Address(RVA = "0x1237F68", Offset = "0x1237F68", VA = "0x1237F68", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60021DD")]
			[Address(RVA = "0x1237F6C", Offset = "0x1237F6C", VA = "0x1237F6C", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x1237F70", Offset = "0x1237F70", VA = "0x1237F70", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x1237F74", Offset = "0x1237F74", VA = "0x1237F74", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60021E0")]
			[Address(RVA = "0x1237F78", Offset = "0x1237F78", VA = "0x1237F78", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60021E1")]
			[Address(RVA = "0x1237F7C", Offset = "0x1237F7C", VA = "0x1237F7C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x200050D")]
		public class QueryResponse
		{
			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8A8C", Offset = "0x9E8A8C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8A9C", Offset = "0x9E8A9C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8AAC", Offset = "0x9E8AAC")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8ABC", Offset = "0x9E8ABC")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8ACC", Offset = "0x9E8ACC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8ADC", Offset = "0x9E8ADC")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000324")]
			public string order_id
			{
				[Token(Token = "0x60021E2")]
				[Address(RVA = "0x1237F9C", Offset = "0x1237F9C", VA = "0x1237F9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEA3C", Offset = "0x9EEA3C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021E3")]
				[Address(RVA = "0x12344B0", Offset = "0x12344B0", VA = "0x12344B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEA4C", Offset = "0x9EEA4C")]
				set
				{
				}
			}

			[Token(Token = "0x17000325")]
			public string purchase_id
			{
				[Token(Token = "0x60021E4")]
				[Address(RVA = "0x1237FA4", Offset = "0x1237FA4", VA = "0x1237FA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEA5C", Offset = "0x9EEA5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021E5")]
				[Address(RVA = "0x12344A8", Offset = "0x12344A8", VA = "0x12344A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEA6C", Offset = "0x9EEA6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000326")]
			public string status
			{
				[Token(Token = "0x60021E6")]
				[Address(RVA = "0x1237FAC", Offset = "0x1237FAC", VA = "0x1237FAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEA7C", Offset = "0x9EEA7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021E7")]
				[Address(RVA = "0x12344D0", Offset = "0x12344D0", VA = "0x12344D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEA8C", Offset = "0x9EEA8C")]
				set
				{
				}
			}

			[Token(Token = "0x17000327")]
			public string price
			{
				[Token(Token = "0x60021E8")]
				[Address(RVA = "0x1237FB4", Offset = "0x1237FB4", VA = "0x1237FB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEA9C", Offset = "0x9EEA9C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021E9")]
				[Address(RVA = "0x12344B8", Offset = "0x12344B8", VA = "0x12344B8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEAAC", Offset = "0x9EEAAC")]
				set
				{
				}
			}

			[Token(Token = "0x17000328")]
			public string currency
			{
				[Token(Token = "0x60021EA")]
				[Address(RVA = "0x1237FBC", Offset = "0x1237FBC", VA = "0x1237FBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEABC", Offset = "0x9EEABC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021EB")]
				[Address(RVA = "0x12344C0", Offset = "0x12344C0", VA = "0x12344C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEACC", Offset = "0x9EEACC")]
				set
				{
				}
			}

			[Token(Token = "0x17000329")]
			public long paid_timestamp
			{
				[Token(Token = "0x60021EC")]
				[Address(RVA = "0x1237FC4", Offset = "0x1237FC4", VA = "0x1237FC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEADC", Offset = "0x9EEADC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60021ED")]
				[Address(RVA = "0x12344C8", Offset = "0x12344C8", VA = "0x12344C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEAEC", Offset = "0x9EEAEC")]
				set
				{
				}
			}

			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x12344A0", Offset = "0x12344A0", VA = "0x12344A0")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x200050E")]
		public class QueryResponse2
		{
			[Token(Token = "0x4001B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8AEC", Offset = "0x9E8AEC")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8AFC", Offset = "0x9E8AFC")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B0C", Offset = "0x9E8B0C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B1C", Offset = "0x9E8B1C")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B2C", Offset = "0x9E8B2C")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B3C", Offset = "0x9E8B3C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B4C", Offset = "0x9E8B4C")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700032A")]
			public string order_id
			{
				[Token(Token = "0x60021EF")]
				[Address(RVA = "0x1237FCC", Offset = "0x1237FCC", VA = "0x1237FCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEAFC", Offset = "0x9EEAFC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021F0")]
				[Address(RVA = "0x1235654", Offset = "0x1235654", VA = "0x1235654")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB0C", Offset = "0x9EEB0C")]
				set
				{
				}
			}

			[Token(Token = "0x1700032B")]
			public string app_id
			{
				[Token(Token = "0x60021F1")]
				[Address(RVA = "0x1237FD4", Offset = "0x1237FD4", VA = "0x1237FD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB1C", Offset = "0x9EEB1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021F2")]
				[Address(RVA = "0x123563C", Offset = "0x123563C", VA = "0x123563C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB2C", Offset = "0x9EEB2C")]
				set
				{
				}
			}

			[Token(Token = "0x1700032C")]
			public string purchase_id
			{
				[Token(Token = "0x60021F3")]
				[Address(RVA = "0x1237FDC", Offset = "0x1237FDC", VA = "0x1237FDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB3C", Offset = "0x9EEB3C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021F4")]
				[Address(RVA = "0x123564C", Offset = "0x123564C", VA = "0x123564C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB4C", Offset = "0x9EEB4C")]
				set
				{
				}
			}

			[Token(Token = "0x1700032D")]
			public string user_data
			{
				[Token(Token = "0x60021F5")]
				[Address(RVA = "0x1237FE4", Offset = "0x1237FE4", VA = "0x1237FE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB5C", Offset = "0x9EEB5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021F6")]
				[Address(RVA = "0x1235664", Offset = "0x1235664", VA = "0x1235664")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB6C", Offset = "0x9EEB6C")]
				set
				{
				}
			}

			[Token(Token = "0x1700032E")]
			public string price
			{
				[Token(Token = "0x60021F7")]
				[Address(RVA = "0x1237FEC", Offset = "0x1237FEC", VA = "0x1237FEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB7C", Offset = "0x9EEB7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021F8")]
				[Address(RVA = "0x123565C", Offset = "0x123565C", VA = "0x123565C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB8C", Offset = "0x9EEB8C")]
				set
				{
				}
			}

			[Token(Token = "0x1700032F")]
			public string currency
			{
				[Token(Token = "0x60021F9")]
				[Address(RVA = "0x1237FF4", Offset = "0x1237FF4", VA = "0x1237FF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEB9C", Offset = "0x9EEB9C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60021FA")]
				[Address(RVA = "0x1235644", Offset = "0x1235644", VA = "0x1235644")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBAC", Offset = "0x9EEBAC")]
				set
				{
				}
			}

			[Token(Token = "0x17000330")]
			public long paid_timestamp
			{
				[Token(Token = "0x60021FB")]
				[Address(RVA = "0x1237FFC", Offset = "0x1237FFC", VA = "0x1237FFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBBC", Offset = "0x9EEBBC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60021FC")]
				[Address(RVA = "0x123566C", Offset = "0x123566C", VA = "0x123566C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBCC", Offset = "0x9EEBCC")]
				set
				{
				}
			}

			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x1235634", Offset = "0x1235634", VA = "0x1235634")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x200050F")]
		public class QueryListResponse
		{
			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B5C", Offset = "0x9E8B5C")]
			private int <total>k__BackingField;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B6C", Offset = "0x9E8B6C")]
			private int <from>k__BackingField;

			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B7C", Offset = "0x9E8B7C")]
			private int <to>k__BackingField;

			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000331")]
			public int total
			{
				[Token(Token = "0x60021FE")]
				[Address(RVA = "0x1237F84", Offset = "0x1237F84", VA = "0x1237F84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBDC", Offset = "0x9EEBDC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60021FF")]
				[Address(RVA = "0x123567C", Offset = "0x123567C", VA = "0x123567C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBEC", Offset = "0x9EEBEC")]
				set
				{
				}
			}

			[Token(Token = "0x17000332")]
			public int from
			{
				[Token(Token = "0x6002200")]
				[Address(RVA = "0x1237F8C", Offset = "0x1237F8C", VA = "0x1237F8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBFC", Offset = "0x9EEBFC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002201")]
				[Address(RVA = "0x1235684", Offset = "0x1235684", VA = "0x1235684")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC0C", Offset = "0x9EEC0C")]
				set
				{
				}
			}

			[Token(Token = "0x17000333")]
			public int to
			{
				[Token(Token = "0x6002202")]
				[Address(RVA = "0x1237F94", Offset = "0x1237F94", VA = "0x1237F94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC1C", Offset = "0x9EEC1C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002203")]
				[Address(RVA = "0x123568C", Offset = "0x123568C", VA = "0x123568C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC2C", Offset = "0x9EEC2C")]
				set
				{
				}
			}

			[Token(Token = "0x6002204")]
			[Address(RVA = "0x1235674", Offset = "0x1235674", VA = "0x1235674")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000510")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B8C", Offset = "0x9E8B8C")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4001B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B9C", Offset = "0x9E8B9C")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4001B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8BAC", Offset = "0x9E8BAC")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000334")]
			public long create_time
			{
				[Token(Token = "0x6002205")]
				[Address(RVA = "0x123806C", Offset = "0x123806C", VA = "0x123806C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC3C", Offset = "0x9EEC3C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002206")]
				[Address(RVA = "0x1238074", Offset = "0x1238074", VA = "0x1238074")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC4C", Offset = "0x9EEC4C")]
				set
				{
				}
			}

			[Token(Token = "0x17000335")]
			public string payment_method
			{
				[Token(Token = "0x6002207")]
				[Address(RVA = "0x123807C", Offset = "0x123807C", VA = "0x123807C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC5C", Offset = "0x9EEC5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002208")]
				[Address(RVA = "0x1238084", Offset = "0x1238084", VA = "0x1238084")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC6C", Offset = "0x9EEC6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000336")]
			public string status
			{
				[Token(Token = "0x6002209")]
				[Address(RVA = "0x123808C", Offset = "0x123808C", VA = "0x123808C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC7C", Offset = "0x9EEC7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600220A")]
				[Address(RVA = "0x1238094", Offset = "0x1238094", VA = "0x1238094")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC8C", Offset = "0x9EEC8C")]
				set
				{
				}
			}

			[Token(Token = "0x600220B")]
			[Address(RVA = "0x123809C", Offset = "0x123809C", VA = "0x123809C")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000511")]
		public class StatusDetail
		{
			[Token(Token = "0x4001B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8BBC", Offset = "0x9E8BBC")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4001B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8BCC", Offset = "0x9E8BCC")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4001B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8BDC", Offset = "0x9E8BDC")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000337")]
			public long date_next_charge
			{
				[Token(Token = "0x600220C")]
				[Address(RVA = "0x1238034", Offset = "0x1238034", VA = "0x1238034")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC9C", Offset = "0x9EEC9C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600220D")]
				[Address(RVA = "0x123803C", Offset = "0x123803C", VA = "0x123803C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EECAC", Offset = "0x9EECAC")]
				set
				{
				}
			}

			[Token(Token = "0x17000338")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x600220E")]
				[Address(RVA = "0x1238044", Offset = "0x1238044", VA = "0x1238044")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EECBC", Offset = "0x9EECBC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600220F")]
				[Address(RVA = "0x123804C", Offset = "0x123804C", VA = "0x123804C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EECCC", Offset = "0x9EECCC")]
				set
				{
				}
			}

			[Token(Token = "0x17000339")]
			public string cancel_reason
			{
				[Token(Token = "0x6002210")]
				[Address(RVA = "0x1238054", Offset = "0x1238054", VA = "0x1238054")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EECDC", Offset = "0x9EECDC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002211")]
				[Address(RVA = "0x123805C", Offset = "0x123805C", VA = "0x123805C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EECEC", Offset = "0x9EECEC")]
				set
				{
				}
			}

			[Token(Token = "0x6002212")]
			[Address(RVA = "0x1238064", Offset = "0x1238064", VA = "0x1238064")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000512")]
		public class TimePeriod
		{
			[Token(Token = "0x4001B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8BEC", Offset = "0x9E8BEC")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4001B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8BFC", Offset = "0x9E8BFC")]
			private int <value>k__BackingField;

			[Token(Token = "0x1700033A")]
			public string time_type
			{
				[Token(Token = "0x6002213")]
				[Address(RVA = "0x123817C", Offset = "0x123817C", VA = "0x123817C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EECFC", Offset = "0x9EECFC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002214")]
				[Address(RVA = "0x1238184", Offset = "0x1238184", VA = "0x1238184")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED0C", Offset = "0x9EED0C")]
				set
				{
				}
			}

			[Token(Token = "0x1700033B")]
			public int value
			{
				[Token(Token = "0x6002215")]
				[Address(RVA = "0x123818C", Offset = "0x123818C", VA = "0x123818C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED1C", Offset = "0x9EED1C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002216")]
				[Address(RVA = "0x1238194", Offset = "0x1238194", VA = "0x1238194")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED2C", Offset = "0x9EED2C")]
				set
				{
				}
			}

			[Token(Token = "0x6002217")]
			[Address(RVA = "0x123819C", Offset = "0x123819C", VA = "0x123819C")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000513")]
		public class Subscription
		{
			[Token(Token = "0x4001B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C0C", Offset = "0x9E8C0C")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C1C", Offset = "0x9E8C1C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C2C", Offset = "0x9E8C2C")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C3C", Offset = "0x9E8C3C")]
			private string <price>k__BackingField;

			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C4C", Offset = "0x9E8C4C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C5C", Offset = "0x9E8C5C")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C6C", Offset = "0x9E8C6C")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C7C", Offset = "0x9E8C7C")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C8C", Offset = "0x9E8C8C")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C9C", Offset = "0x9E8C9C")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CAC", Offset = "0x9E8CAC")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CBC", Offset = "0x9E8CBC")]
			private string <status>k__BackingField;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CCC", Offset = "0x9E8CCC")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x1700033C")]
			public string app_id
			{
				[Token(Token = "0x6002218")]
				[Address(RVA = "0x12380A4", Offset = "0x12380A4", VA = "0x12380A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED3C", Offset = "0x9EED3C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002219")]
				[Address(RVA = "0x12380AC", Offset = "0x12380AC", VA = "0x12380AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED4C", Offset = "0x9EED4C")]
				set
				{
				}
			}

			[Token(Token = "0x1700033D")]
			public string order_id
			{
				[Token(Token = "0x600221A")]
				[Address(RVA = "0x12380B4", Offset = "0x12380B4", VA = "0x12380B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED5C", Offset = "0x9EED5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600221B")]
				[Address(RVA = "0x12380BC", Offset = "0x12380BC", VA = "0x12380BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED6C", Offset = "0x9EED6C")]
				set
				{
				}
			}

			[Token(Token = "0x1700033E")]
			public string subscription_id
			{
				[Token(Token = "0x600221C")]
				[Address(RVA = "0x12380C4", Offset = "0x12380C4", VA = "0x12380C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED7C", Offset = "0x9EED7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600221D")]
				[Address(RVA = "0x12380CC", Offset = "0x12380CC", VA = "0x12380CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED8C", Offset = "0x9EED8C")]
				set
				{
				}
			}

			[Token(Token = "0x1700033F")]
			public string price
			{
				[Token(Token = "0x600221E")]
				[Address(RVA = "0x12380D4", Offset = "0x12380D4", VA = "0x12380D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED9C", Offset = "0x9EED9C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600221F")]
				[Address(RVA = "0x12380DC", Offset = "0x12380DC", VA = "0x12380DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEDAC", Offset = "0x9EEDAC")]
				set
				{
				}
			}

			[Token(Token = "0x17000340")]
			public string currency
			{
				[Token(Token = "0x6002220")]
				[Address(RVA = "0x12380E4", Offset = "0x12380E4", VA = "0x12380E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEDBC", Offset = "0x9EEDBC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002221")]
				[Address(RVA = "0x12380EC", Offset = "0x12380EC", VA = "0x12380EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEDCC", Offset = "0x9EEDCC")]
				set
				{
				}
			}

			[Token(Token = "0x17000341")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x6002222")]
				[Address(RVA = "0x12380F4", Offset = "0x12380F4", VA = "0x12380F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEDDC", Offset = "0x9EEDDC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002223")]
				[Address(RVA = "0x12380FC", Offset = "0x12380FC", VA = "0x12380FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEDEC", Offset = "0x9EEDEC")]
				set
				{
				}
			}

			[Token(Token = "0x17000342")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6002224")]
				[Address(RVA = "0x1238104", Offset = "0x1238104", VA = "0x1238104")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEDFC", Offset = "0x9EEDFC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002225")]
				[Address(RVA = "0x123810C", Offset = "0x123810C", VA = "0x123810C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE0C", Offset = "0x9EEE0C")]
				set
				{
				}
			}

			[Token(Token = "0x17000343")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6002226")]
				[Address(RVA = "0x1238114", Offset = "0x1238114", VA = "0x1238114")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE1C", Offset = "0x9EEE1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002227")]
				[Address(RVA = "0x123811C", Offset = "0x123811C", VA = "0x123811C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE2C", Offset = "0x9EEE2C")]
				set
				{
				}
			}

			[Token(Token = "0x17000344")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6002228")]
				[Address(RVA = "0x1238124", Offset = "0x1238124", VA = "0x1238124")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE3C", Offset = "0x9EEE3C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002229")]
				[Address(RVA = "0x123812C", Offset = "0x123812C", VA = "0x123812C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE4C", Offset = "0x9EEE4C")]
				set
				{
				}
			}

			[Token(Token = "0x17000345")]
			public string plan_id
			{
				[Token(Token = "0x600222A")]
				[Address(RVA = "0x1238134", Offset = "0x1238134", VA = "0x1238134")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE5C", Offset = "0x9EEE5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600222B")]
				[Address(RVA = "0x123813C", Offset = "0x123813C", VA = "0x123813C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE6C", Offset = "0x9EEE6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000346")]
			public string plan_name
			{
				[Token(Token = "0x600222C")]
				[Address(RVA = "0x1238144", Offset = "0x1238144", VA = "0x1238144")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE7C", Offset = "0x9EEE7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600222D")]
				[Address(RVA = "0x123814C", Offset = "0x123814C", VA = "0x123814C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE8C", Offset = "0x9EEE8C")]
				set
				{
				}
			}

			[Token(Token = "0x17000347")]
			public string status
			{
				[Token(Token = "0x600222E")]
				[Address(RVA = "0x1238154", Offset = "0x1238154", VA = "0x1238154")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEE9C", Offset = "0x9EEE9C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600222F")]
				[Address(RVA = "0x123815C", Offset = "0x123815C", VA = "0x123815C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEEAC", Offset = "0x9EEEAC")]
				set
				{
				}
			}

			[Token(Token = "0x17000348")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6002230")]
				[Address(RVA = "0x1238164", Offset = "0x1238164", VA = "0x1238164")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEEBC", Offset = "0x9EEEBC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002231")]
				[Address(RVA = "0x123816C", Offset = "0x123816C", VA = "0x123816C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEECC", Offset = "0x9EEECC")]
				set
				{
				}
			}

			[Token(Token = "0x6002232")]
			[Address(RVA = "0x1238174", Offset = "0x1238174", VA = "0x1238174")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x2000514")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CDC", Offset = "0x9E8CDC")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CEC", Offset = "0x9E8CEC")]
			private string <message>k__BackingField;

			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CFC", Offset = "0x9E8CFC")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000349")]
			public int statusCode
			{
				[Token(Token = "0x6002233")]
				[Address(RVA = "0x1238004", Offset = "0x1238004", VA = "0x1238004")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEEDC", Offset = "0x9EEEDC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002234")]
				[Address(RVA = "0x123800C", Offset = "0x123800C", VA = "0x123800C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEEEC", Offset = "0x9EEEEC")]
				set
				{
				}
			}

			[Token(Token = "0x1700034A")]
			public string message
			{
				[Token(Token = "0x6002235")]
				[Address(RVA = "0x1238014", Offset = "0x1238014", VA = "0x1238014")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEEFC", Offset = "0x9EEEFC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002236")]
				[Address(RVA = "0x123801C", Offset = "0x123801C", VA = "0x123801C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF0C", Offset = "0x9EEF0C")]
				set
				{
				}
			}

			[Token(Token = "0x1700034B")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6002237")]
				[Address(RVA = "0x1237528", Offset = "0x1237528", VA = "0x1237528")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF1C", Offset = "0x9EEF1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002238")]
				[Address(RVA = "0x1238024", Offset = "0x1238024", VA = "0x1238024")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF2C", Offset = "0x9EEF2C")]
				set
				{
				}
			}

			[Token(Token = "0x6002239")]
			[Address(RVA = "0x123802C", Offset = "0x123802C", VA = "0x123802C")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x122F624", Offset = "0x122F624", VA = "0x122F624")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB68C", Offset = "0x9EB68C")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x12300A4", Offset = "0x12300A4", VA = "0x12300A4")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x122F69C", Offset = "0x122F69C", VA = "0x122F69C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB6F0", Offset = "0x9EB6F0")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x12303FC", Offset = "0x12303FC", VA = "0x12303FC")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x122F714", Offset = "0x122F714", VA = "0x122F714")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB754", Offset = "0x9EB754")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x12306D8", Offset = "0x12306D8", VA = "0x12306D8")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x122F78C", Offset = "0x122F78C", VA = "0x122F78C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB7B8", Offset = "0x9EB7B8")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1230990", Offset = "0x1230990", VA = "0x1230990")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x122F804", Offset = "0x122F804", VA = "0x122F804")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB81C", Offset = "0x9EB81C")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1230C6C", Offset = "0x1230C6C", VA = "0x1230C6C")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x122F87C", Offset = "0x122F87C", VA = "0x122F87C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB880", Offset = "0x9EB880")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1230F48", Offset = "0x1230F48", VA = "0x1230F48")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x122F8F4", Offset = "0x122F8F4", VA = "0x122F8F4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB8E4", Offset = "0x9EB8E4")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x12311C0", Offset = "0x12311C0", VA = "0x12311C0")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x122F96C", Offset = "0x122F96C", VA = "0x122F96C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB948", Offset = "0x9EB948")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1231438", Offset = "0x1231438", VA = "0x1231438")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x122F9E4", Offset = "0x122F9E4", VA = "0x122F9E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EB9AC", Offset = "0x9EB9AC")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1231988", Offset = "0x1231988", VA = "0x1231988")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x122FA5C", Offset = "0x122FA5C", VA = "0x122FA5C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EBA10", Offset = "0x9EBA10")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1231C64", Offset = "0x1231C64", VA = "0x1231C64")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x122FAD4", Offset = "0x122FAD4", VA = "0x122FAD4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EBA74", Offset = "0x9EBA74")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x1231F40", Offset = "0x1231F40", VA = "0x1231F40")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x122FB4C", Offset = "0x122FB4C", VA = "0x122FB4C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EBAD8", Offset = "0x9EBAD8")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x123221C", Offset = "0x123221C", VA = "0x123221C")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x122FBC4", Offset = "0x122FBC4", VA = "0x122FBC4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EBB3C", Offset = "0x9EBB3C")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1232494", Offset = "0x1232494", VA = "0x1232494")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x1232770", Offset = "0x1232770", VA = "0x1232770")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class DLC
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x122EA04", Offset = "0x122EA04", VA = "0x122EA04")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class Subscription
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x123E444", Offset = "0x123E444", VA = "0x123E444")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EBBA0", Offset = "0x9EBBA0")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x123E4BC", Offset = "0x123E4BC", VA = "0x123E4BC")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x123E614", Offset = "0x123E614", VA = "0x123E614")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x123E7E0", Offset = "0x123E7E0", VA = "0x123E7E0")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class Deeplink
	{
		[Token(Token = "0x2000515")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x600223A")]
			public abstract void OnSuccess();

			[Token(Token = "0x600223B")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x600223C")]
			[Address(RVA = "0x122F61C", Offset = "0x122F61C", VA = "0x122F61C")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4000E95")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x122EA0C", Offset = "0x122EA0C", VA = "0x122EA0C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EBC04", Offset = "0x9EBC04")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x122EA74", Offset = "0x122EA74", VA = "0x122EA74")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x122ECD4", Offset = "0x122ECD4", VA = "0x122ECD4")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x122EF7C", Offset = "0x122EF7C", VA = "0x122EF7C")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x122F030", Offset = "0x122F030", VA = "0x122F030")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x122F274", Offset = "0x122F274", VA = "0x122F274")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x122F51C", Offset = "0x122F51C", VA = "0x122F51C")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x122F614", Offset = "0x122F614", VA = "0x122F614")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	internal class Token
	{
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x123E7F8", Offset = "0x123E7F8", VA = "0x123E7F8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EBC68", Offset = "0x9EBC68")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x123E8D8", Offset = "0x123E8D8", VA = "0x123E8D8")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x123E860", Offset = "0x123E860", VA = "0x123E860")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EBCCC", Offset = "0x9EBCCC")]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x123EA30", Offset = "0x123EA30", VA = "0x123EA30")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x123EB88", Offset = "0x123EB88", VA = "0x123EB88")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9DF054", Offset = "0x9DF054")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9DF068", Offset = "0x9DF068")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9DF07C", Offset = "0x9DF07C")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9DF090", Offset = "0x9DF090")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x20001F6")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4000E9E")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4000E9F")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4000EA0")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4000EA1")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x20001F7")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4000EA3")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4000EA4")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4000EA5")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4000EA6")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x20001F8")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4000EA8")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4000EA9")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4000EAA")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x20001F9")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4000EAC")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4000EAD")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4000EAE")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4000EAF")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x20001FA")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4000EB1")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4000EB2")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4000EB3")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x20001FB")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4000EB5")]
		UNKNOWN,
		[Token(Token = "0x4000EB6")]
		PAID,
		[Token(Token = "0x4000EB7")]
		REDEEM,
		[Token(Token = "0x4000EB8")]
		FREEE_TRIAL
	}
	[Token(Token = "0x20001FC")]
	internal enum ELocale
	{
		[Token(Token = "0x4000EBA")]
		k_ELocaleUS,
		[Token(Token = "0x4000EBB")]
		k_ELocaleDE,
		[Token(Token = "0x4000EBC")]
		k_ELocaleJP,
		[Token(Token = "0x4000EBD")]
		k_ELocaleKR,
		[Token(Token = "0x4000EBE")]
		k_ELocaleRU,
		[Token(Token = "0x4000EBF")]
		k_ELocaleCN,
		[Token(Token = "0x4000EC0")]
		k_ELocaleTW,
		[Token(Token = "0x4000EC1")]
		k_ELocaleFR
	}
	[Token(Token = "0x20001FD")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4000EC3")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4000EC4")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4000EC5")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x20001FE")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9DF0A4", Offset = "0x9DF0A4")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000200")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000201")]
	internal class Api
	{
		[Token(Token = "0x2000516")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x600223D")]
			[Address(RVA = "0x1238FD4", Offset = "0x1238FD4", VA = "0x1238FD4")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x600223E")]
			[Address(RVA = "0x1239064", Offset = "0x1239064", VA = "0x1239064")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x600223F")]
			[Address(RVA = "0x12392B0", Offset = "0x12392B0", VA = "0x12392B0")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x122DCC8", Offset = "0x122DCC8", VA = "0x122DCC8")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x122DFC8", Offset = "0x122DFC8", VA = "0x122DFC8")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x122E16C", Offset = "0x122E16C", VA = "0x122E16C")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x122D514", Offset = "0x122D514", VA = "0x122D514")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x123905C", Offset = "0x123905C", VA = "0x123905C")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000202")]
	internal class User
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x123AD0C", Offset = "0x123AD0C", VA = "0x123AD0C")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x123AE68", Offset = "0x123AE68", VA = "0x123AE68")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x123AF5C", Offset = "0x123AF5C", VA = "0x123AF5C")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x123B050", Offset = "0x123B050", VA = "0x123B050")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x123B144", Offset = "0x123B144", VA = "0x123B144")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000203")]
	internal class UserStats
	{
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x123B14C", Offset = "0x123B14C", VA = "0x123B14C")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x123B2A8", Offset = "0x123B2A8", VA = "0x123B2A8")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x123B404", Offset = "0x123B404", VA = "0x123B404")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x123B560", Offset = "0x123B560", VA = "0x123B560")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x123B6C0", Offset = "0x123B6C0", VA = "0x123B6C0")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x123B828", Offset = "0x123B828", VA = "0x123B828")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x123B988", Offset = "0x123B988", VA = "0x123B988")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x123BAF0", Offset = "0x123BAF0", VA = "0x123BAF0")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x123BBDC", Offset = "0x123BBDC", VA = "0x123BBDC")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x123BCC8", Offset = "0x123BCC8", VA = "0x123BCC8")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x123BDB4", Offset = "0x123BDB4", VA = "0x123BDB4")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x123BEA0", Offset = "0x123BEA0", VA = "0x123BEA0")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x123C000", Offset = "0x123C000", VA = "0x123C000")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x123C1C0", Offset = "0x123C1C0", VA = "0x123C1C0")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x123C2AC", Offset = "0x123C2AC", VA = "0x123C2AC")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x123C600", Offset = "0x123C600", VA = "0x123C600")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x123C824", Offset = "0x123C824", VA = "0x123C824")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x123CB10", Offset = "0x123CB10", VA = "0x123CB10")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x123CB98", Offset = "0x123CB98", VA = "0x123CB98")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x123CC20", Offset = "0x123CC20", VA = "0x123CC20")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x123CCA8", Offset = "0x123CCA8", VA = "0x123CCA8")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000204")]
	internal class Deeplink
	{
		[Token(Token = "0x2000517")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6002240")]
			[Address(RVA = "0x12394D0", Offset = "0x12394D0", VA = "0x12394D0")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6002241")]
			[Address(RVA = "0x1239560", Offset = "0x1239560", VA = "0x1239560")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6002242")]
			[Address(RVA = "0x12395EC", Offset = "0x12395EC", VA = "0x12395EC")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x122EBCC", Offset = "0x122EBCC", VA = "0x122EBCC")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x122ED88", Offset = "0x122ED88", VA = "0x122ED88")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x122F0CC", Offset = "0x122F0CC", VA = "0x122F0CC")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x122F328", Offset = "0x122F328", VA = "0x122F328")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x122F520", Offset = "0x122F520", VA = "0x122F520")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x1239558", Offset = "0x1239558", VA = "0x1239558")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000205")]
	internal class IAPurchase
	{
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x1230254", Offset = "0x1230254", VA = "0x1230254")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x1230530", Offset = "0x1230530", VA = "0x1230530")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x123079C", Offset = "0x123079C", VA = "0x123079C")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x1230AC4", Offset = "0x1230AC4", VA = "0x1230AC4")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x1230DA0", Offset = "0x1230DA0", VA = "0x1230DA0")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x123106C", Offset = "0x123106C", VA = "0x123106C")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x12312E4", Offset = "0x12312E4", VA = "0x12312E4")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x12315B4", Offset = "0x12315B4", VA = "0x12315B4")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x1231ABC", Offset = "0x1231ABC", VA = "0x1231ABC")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x1231D98", Offset = "0x1231D98", VA = "0x1231D98")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x1232074", Offset = "0x1232074", VA = "0x1232074")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1232340", Offset = "0x1232340", VA = "0x1232340")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x12325C8", Offset = "0x12325C8", VA = "0x12325C8")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1239FD8", Offset = "0x1239FD8", VA = "0x1239FD8")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000206")]
	internal class Subscription
	{
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x123A6F4", Offset = "0x123A6F4", VA = "0x123A6F4")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x123A850", Offset = "0x123A850", VA = "0x123A850")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x123A8D8", Offset = "0x123A8D8", VA = "0x123A8D8")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x123A960", Offset = "0x123A960", VA = "0x123A960")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x123AA44", Offset = "0x123AA44", VA = "0x123AA44")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000207")]
	internal class Token
	{
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x123AA4C", Offset = "0x123AA4C", VA = "0x123AA4C")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x123ABA8", Offset = "0x123ABA8", VA = "0x123ABA8")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x123AD04", Offset = "0x123AD04", VA = "0x123AD04")]
		public Token()
		{
		}
	}
	[Token(Token = "0x2000208")]
	internal class Android
	{
		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000107")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x1238694", Offset = "0x1238694", VA = "0x1238694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x1238724", Offset = "0x1238724", VA = "0x1238724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x123878C", Offset = "0x123878C", VA = "0x123878C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x12381A4", Offset = "0x12381A4", VA = "0x12381A4")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x123825C", Offset = "0x123825C", VA = "0x123825C")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1238310", Offset = "0x1238310", VA = "0x1238310")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x12383C4", Offset = "0x12383C4", VA = "0x12383C4")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1238478", Offset = "0x1238478", VA = "0x1238478")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x123852C", Offset = "0x123852C", VA = "0x123852C")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x12385E0", Offset = "0x12385E0", VA = "0x12385E0")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1238790", Offset = "0x1238790", VA = "0x1238790")]
		public Android()
		{
		}
	}
	[Token(Token = "0x2000209")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1238798", Offset = "0x1238798", VA = "0x1238798")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x1238820", Offset = "0x1238820", VA = "0x1238820")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x12388A8", Offset = "0x12388A8", VA = "0x12388A8")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1238930", Offset = "0x1238930", VA = "0x1238930")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x200020A")]
	internal class Session
	{
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x122E368", Offset = "0x122E368", VA = "0x122E368")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x200020B")]
	public class Logger
	{
		[Token(Token = "0x4000ED6")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x122E378", Offset = "0x122E378", VA = "0x122E378")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x122E78C", Offset = "0x122E78C", VA = "0x122E78C")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x122E448", Offset = "0x122E448", VA = "0x122E448")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x122E828", Offset = "0x122E828", VA = "0x122E828")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x122E9A8", Offset = "0x122E9A8", VA = "0x122E9A8")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x200020C")]
	public enum JsonType
	{
		[Token(Token = "0x4000EDB")]
		None,
		[Token(Token = "0x4000EDC")]
		Object,
		[Token(Token = "0x4000EDD")]
		Array,
		[Token(Token = "0x4000EDE")]
		String,
		[Token(Token = "0x4000EDF")]
		Int,
		[Token(Token = "0x4000EE0")]
		Long,
		[Token(Token = "0x4000EE1")]
		Double,
		[Token(Token = "0x4000EE2")]
		Boolean
	}
	[Token(Token = "0x200020D")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x1700010A")]
		bool IsArray
		{
			[Token(Token = "0x6000F97")]
			get;
		}

		[Token(Token = "0x1700010B")]
		bool IsBoolean
		{
			[Token(Token = "0x6000F98")]
			get;
		}

		[Token(Token = "0x1700010C")]
		bool IsDouble
		{
			[Token(Token = "0x6000F99")]
			get;
		}

		[Token(Token = "0x1700010D")]
		bool IsInt
		{
			[Token(Token = "0x6000F9A")]
			get;
		}

		[Token(Token = "0x1700010E")]
		bool IsLong
		{
			[Token(Token = "0x6000F9B")]
			get;
		}

		[Token(Token = "0x1700010F")]
		bool IsObject
		{
			[Token(Token = "0x6000F9C")]
			get;
		}

		[Token(Token = "0x17000110")]
		bool IsString
		{
			[Token(Token = "0x6000F9D")]
			get;
		}

		[Token(Token = "0x6000F9E")]
		bool GetBoolean();

		[Token(Token = "0x6000F9F")]
		double GetDouble();

		[Token(Token = "0x6000FA0")]
		int GetInt();

		[Token(Token = "0x6000FA1")]
		JsonType GetJsonType();

		[Token(Token = "0x6000FA2")]
		long GetLong();

		[Token(Token = "0x6000FA3")]
		string GetString();

		[Token(Token = "0x6000FA4")]
		void SetBoolean(bool val);

		[Token(Token = "0x6000FA5")]
		void SetDouble(double val);

		[Token(Token = "0x6000FA6")]
		void SetInt(int val);

		[Token(Token = "0x6000FA7")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x6000FA8")]
		void SetLong(long val);

		[Token(Token = "0x6000FA9")]
		void SetString(string val);

		[Token(Token = "0x6000FAA")]
		string ToJson();

		[Token(Token = "0x6000FAB")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF0B8", Offset = "0x9DF0B8")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x17000111")]
		public int Count
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xF7AAF4", Offset = "0xF7AAF4", VA = "0xF7AAF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000112")]
		public bool IsArray
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xF7ACD0", Offset = "0xF7ACD0", VA = "0xF7ACD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000113")]
		public bool IsBoolean
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xF7ACE0", Offset = "0xF7ACE0", VA = "0xF7ACE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public bool IsDouble
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xF7ACF0", Offset = "0xF7ACF0", VA = "0xF7ACF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		public bool IsInt
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0xF7AD00", Offset = "0xF7AD00", VA = "0xF7AD00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000116")]
		public bool IsLong
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0xF7AD10", Offset = "0xF7AD10", VA = "0xF7AD10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000117")]
		public bool IsObject
		{
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0xF7AD20", Offset = "0xF7AD20", VA = "0xF7AD20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		public bool IsString
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0xF7AD30", Offset = "0xF7AD30", VA = "0xF7AD30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000119")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0xF7AD40", Offset = "0xF7AD40", VA = "0xF7AD40", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700011A")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xF7AD44", Offset = "0xF7AD44", VA = "0xF7AD44", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0xF7AE00", Offset = "0xF7AE00", VA = "0xF7AE00", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6000FB7")]
			[Address(RVA = "0xF7AEBC", Offset = "0xF7AEBC", VA = "0xF7AEBC", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011D")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0xF7B0EC", Offset = "0xF7B0EC", VA = "0xF7B0EC", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011E")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0xF7B1A8", Offset = "0xF7B1A8", VA = "0xF7B1A8", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0xF7B574", Offset = "0xF7B574", VA = "0xF7B574", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0xF7B940", Offset = "0xF7B940", VA = "0xF7B940", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000121")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0xF7B950", Offset = "0xF7B950", VA = "0xF7B950", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000122")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0xF7B960", Offset = "0xF7B960", VA = "0xF7B960", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000123")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xF7B970", Offset = "0xF7B970", VA = "0xF7B970", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000124")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0xF7B980", Offset = "0xF7B980", VA = "0xF7B980", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000125")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0xF7B990", Offset = "0xF7B990", VA = "0xF7B990", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000126")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0xF7B9A0", Offset = "0xF7B9A0", VA = "0xF7B9A0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000127")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0xF7B9B0", Offset = "0xF7B9B0", VA = "0xF7B9B0", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000128")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0xF7BBB4", Offset = "0xF7BBB4", VA = "0xF7BBB4", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0xF7BC70", Offset = "0xF7BC70", VA = "0xF7BC70", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0xF7BD38", Offset = "0xF7BD38", VA = "0xF7BD38", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xF7C2E8", Offset = "0xF7C2E8", VA = "0xF7C2E8", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xF7C3E0", Offset = "0xF7C3E0", VA = "0xF7C3E0", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0xF7C62C", Offset = "0xF7C62C", VA = "0xF7C62C", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0xF7C6F4", Offset = "0xF7C6F4", VA = "0xF7C6F4", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public JsonData Item
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0xF7CA14", Offset = "0xF7CA14", VA = "0xF7CA14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0xF7BF00", Offset = "0xF7BF00", VA = "0xF7BF00")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public JsonData Item
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xF7CAE0", Offset = "0xF7CAE0", VA = "0xF7CAE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xF7C738", Offset = "0xF7C738", VA = "0xF7C738")]
			set
			{
			}
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xF7CC64", Offset = "0xF7CC64", VA = "0xF7CC64")]
		public JsonData()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xF7CC6C", Offset = "0xF7CC6C", VA = "0xF7CC6C")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xF7CCA4", Offset = "0xF7CCA4", VA = "0xF7CCA4")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xF7CCE0", Offset = "0xF7CCE0", VA = "0xF7CCE0")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xF7CD14", Offset = "0xF7CD14", VA = "0xF7CD14")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xF7CD48", Offset = "0xF7CD48", VA = "0xF7CD48")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xF7CF24", Offset = "0xF7CF24", VA = "0xF7CF24")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xF7CF58", Offset = "0xF7CF58", VA = "0xF7CF58")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xF7CFC8", Offset = "0xF7CFC8", VA = "0xF7CFC8")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xF7D03C", Offset = "0xF7D03C", VA = "0xF7D03C")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xF7D0A8", Offset = "0xF7D0A8", VA = "0xF7D0A8")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xF7D114", Offset = "0xF7D114", VA = "0xF7D114")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xF7D180", Offset = "0xF7D180", VA = "0xF7D180")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xF7D220", Offset = "0xF7D220", VA = "0xF7D220")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xF7D2C0", Offset = "0xF7D2C0", VA = "0xF7D2C0")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xF7D360", Offset = "0xF7D360", VA = "0xF7D360")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xF7D400", Offset = "0xF7D400", VA = "0xF7D400")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xF7D4A0", Offset = "0xF7D4A0", VA = "0xF7D4A0", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xF7D570", Offset = "0xF7D570", VA = "0xF7D570", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xF7D76C", Offset = "0xF7D76C", VA = "0xF7D76C", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xF7D8AC", Offset = "0xF7D8AC", VA = "0xF7D8AC", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xF7D978", Offset = "0xF7D978", VA = "0xF7D978", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xF7DA20", Offset = "0xF7DA20", VA = "0xF7DA20", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xF7DD30", Offset = "0xF7DD30", VA = "0xF7DD30", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xF7DDE8", Offset = "0xF7DDE8", VA = "0xF7DDE8", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xF7DE7C", Offset = "0xF7DE7C", VA = "0xF7DE7C", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xF7DF10", Offset = "0xF7DF10", VA = "0xF7DF10", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xF7DFA4", Offset = "0xF7DFA4", VA = "0xF7DFA4", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xF7E038", Offset = "0xF7E038", VA = "0xF7E038", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xF7E0CC", Offset = "0xF7E0CC", VA = "0xF7E0CC", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xF7E0E4", Offset = "0xF7E0E4", VA = "0xF7E0E4", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xF7E0F8", Offset = "0xF7E0F8", VA = "0xF7E0F8", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xF7E10C", Offset = "0xF7E10C", VA = "0xF7E10C", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xF7E120", Offset = "0xF7E120", VA = "0xF7E120", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xF7E130", Offset = "0xF7E130", VA = "0xF7E130", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xF7E1F8", Offset = "0xF7E1F8", VA = "0xF7E1F8", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xF7E270", Offset = "0xF7E270", VA = "0xF7E270", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xF7E350", Offset = "0xF7E350", VA = "0xF7E350", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xF7E414", Offset = "0xF7E414", VA = "0xF7E414", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xF7E4E0", Offset = "0xF7E4E0", VA = "0xF7E4E0", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xF7E5AC", Offset = "0xF7E5AC", VA = "0xF7E5AC", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xF7E688", Offset = "0xF7E688", VA = "0xF7E688", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xF7E75C", Offset = "0xF7E75C", VA = "0xF7E75C", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xF7E830", Offset = "0xF7E830", VA = "0xF7E830", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xF7E948", Offset = "0xF7E948", VA = "0xF7E948", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xF7EAD8", Offset = "0xF7EAD8", VA = "0xF7EAD8", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xF7ABB0", Offset = "0xF7ABB0", VA = "0xF7ABB0")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xF7AF78", Offset = "0xF7AF78", VA = "0xF7AF78")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xF7BA6C", Offset = "0xF7BA6C", VA = "0xF7BA6C")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xF7BE64", Offset = "0xF7BE64", VA = "0xF7BE64")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xF7ECD4", Offset = "0xF7ECD4", VA = "0xF7ECD4")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xF7E274", Offset = "0xF7E274", VA = "0xF7E274")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xF80388", Offset = "0xF80388", VA = "0xF80388")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xF804A4", Offset = "0xF804A4", VA = "0xF804A4", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xF805C8", Offset = "0xF805C8", VA = "0xF805C8", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xF805D0", Offset = "0xF805D0", VA = "0xF805D0", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xF7E134", Offset = "0xF7E134", VA = "0xF7E134")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xF7E1FC", Offset = "0xF7E1FC", VA = "0xF7E1FC")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xF807AC", Offset = "0xF807AC", VA = "0xF807AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200020F")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x1700012E")]
		public object Current
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0xF8F510", Offset = "0xF8F510", VA = "0xF8F510", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0xF8F57C", Offset = "0xF8F57C", VA = "0xF8F57C", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x17000130")]
		public object Key
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xF8F690", Offset = "0xF8F690", VA = "0xF8F690", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		public object Value
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xF8F770", Offset = "0xF8F770", VA = "0xF8F770", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xF7E91C", Offset = "0xF7E91C", VA = "0xF7E91C")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xF8F850", Offset = "0xF8F850", VA = "0xF8F850", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xF8F904", Offset = "0xF8F904", VA = "0xF8F904", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0xF8088C", Offset = "0xF8088C", VA = "0xF8088C")]
		public JsonException()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xF80894", Offset = "0xF80894", VA = "0xF80894")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xF80924", Offset = "0xF80924", VA = "0xF80924")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xF809C4", Offset = "0xF809C4", VA = "0xF809C4")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xF80A54", Offset = "0xF80A54", VA = "0xF80A54")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xF80AF4", Offset = "0xF80AF4", VA = "0xF80AF4")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xF80AFC", Offset = "0xF80AFC", VA = "0xF80AFC")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000211")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000212")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x17000132")]
		public Type ElementType
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0xA8F4D0", Offset = "0xA8F4D0", VA = "0xA8F4D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xA8F4D8", Offset = "0xA8F4D8", VA = "0xA8F4D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public bool IsArray
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xA8F4E0", Offset = "0xA8F4E0", VA = "0xA8F4E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xA8F4E8", Offset = "0xA8F4E8", VA = "0xA8F4E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public bool IsList
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xA8F4F4", Offset = "0xA8F4F4", VA = "0xA8F4F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xA8F4FC", Offset = "0xA8F4FC", VA = "0xA8F4FC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000213")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x17000135")]
		public Type ElementType
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xA8F554", Offset = "0xA8F554", VA = "0xA8F554")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xA8F55C", Offset = "0xA8F55C", VA = "0xA8F55C")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public bool IsDictionary
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xA8F564", Offset = "0xA8F564", VA = "0xA8F564")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001020")]
			[Address(RVA = "0xA8F56C", Offset = "0xA8F56C", VA = "0xA8F56C")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0xA8F578", Offset = "0xA8F578", VA = "0xA8F578")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001022")]
			[Address(RVA = "0xA8F580", Offset = "0xA8F580", VA = "0xA8F580")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000214")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000215")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x2000216")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x2000217")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x2000218")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x2000219")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0154", Offset = "0x9E0154")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6002244")]
			[Address(RVA = "0xF89160", Offset = "0xF89160", VA = "0xF89160")]
			public <>c()
			{
			}

			[Token(Token = "0x6002245")]
			[Address(RVA = "0xF89168", Offset = "0xF89168", VA = "0xF89168")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002246")]
			[Address(RVA = "0xF8920C", Offset = "0xF8920C", VA = "0xF8920C")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002247")]
			[Address(RVA = "0xF892B0", Offset = "0xF892B0", VA = "0xF892B0")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002248")]
			[Address(RVA = "0xF89388", Offset = "0xF89388", VA = "0xF89388")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002249")]
			[Address(RVA = "0xF894E8", Offset = "0xF894E8", VA = "0xF894E8")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600224A")]
			[Address(RVA = "0xF8958C", Offset = "0xF8958C", VA = "0xF8958C")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600224B")]
			[Address(RVA = "0xF89630", Offset = "0xF89630", VA = "0xF89630")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600224C")]
			[Address(RVA = "0xF896D4", Offset = "0xF896D4", VA = "0xF896D4")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600224D")]
			[Address(RVA = "0xF89778", Offset = "0xF89778", VA = "0xF89778")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600224E")]
			[Address(RVA = "0xF897EC", Offset = "0xF897EC", VA = "0xF897EC")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600224F")]
			[Address(RVA = "0xF89864", Offset = "0xF89864", VA = "0xF89864")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6002250")]
			[Address(RVA = "0xF89908", Offset = "0xF89908", VA = "0xF89908")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6002251")]
			[Address(RVA = "0xF899AC", Offset = "0xF899AC", VA = "0xF899AC")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6002252")]
			[Address(RVA = "0xF89A50", Offset = "0xF89A50", VA = "0xF89A50")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6002253")]
			[Address(RVA = "0xF89AF4", Offset = "0xF89AF4", VA = "0xF89AF4")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6002254")]
			[Address(RVA = "0xF89B98", Offset = "0xF89B98", VA = "0xF89B98")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6002255")]
			[Address(RVA = "0xF89C3C", Offset = "0xF89C3C", VA = "0xF89C3C")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6002256")]
			[Address(RVA = "0xF89CDC", Offset = "0xF89CDC", VA = "0xF89CDC")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6002257")]
			[Address(RVA = "0xF89D80", Offset = "0xF89D80", VA = "0xF89D80")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6002258")]
			[Address(RVA = "0xF89E20", Offset = "0xF89E20", VA = "0xF89E20")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6002259")]
			[Address(RVA = "0xF89EC4", Offset = "0xF89EC4", VA = "0xF89EC4")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x600225A")]
			[Address(RVA = "0xF89F68", Offset = "0xF89F68", VA = "0xF89F68")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x600225B")]
			[Address(RVA = "0xF8A064", Offset = "0xF8A064", VA = "0xF8A064")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x600225C")]
			[Address(RVA = "0xF8A194", Offset = "0xF8A194", VA = "0xF8A194")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x600225D")]
			[Address(RVA = "0xF8A1F0", Offset = "0xF8A1F0", VA = "0xF8A1F0")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x600225E")]
			[Address(RVA = "0xF8A24C", Offset = "0xF8A24C", VA = "0xF8A24C")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0164", Offset = "0x9E0164")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x600225F")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002260")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0174", Offset = "0x9E0174")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6002261")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002262")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xF80B04", Offset = "0xF80B04", VA = "0xF80B04")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xF829D0", Offset = "0xF829D0", VA = "0xF829D0")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xF82EA8", Offset = "0xF82EA8", VA = "0xF82EA8")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xF83668", Offset = "0xF83668", VA = "0xF83668")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xF83BD0", Offset = "0xF83BD0", VA = "0xF83BD0")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xF8449C", Offset = "0xF8449C", VA = "0xF8449C")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xF85DA8", Offset = "0xF85DA8", VA = "0xF85DA8")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xF80E5C", Offset = "0xF80E5C", VA = "0xF80E5C")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xF81C8C", Offset = "0xF81C8C", VA = "0xF81C8C")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xF86928", Offset = "0xF86928", VA = "0xF86928")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xF86B8C", Offset = "0xF86B8C", VA = "0xF86B8C")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xF88614", Offset = "0xF88614", VA = "0xF88614")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xF88880", Offset = "0xF88880", VA = "0xF88880")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xF888FC", Offset = "0xF888FC", VA = "0xF888FC")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xF88B04", Offset = "0xF88B04", VA = "0xF88B04")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xF88CB0", Offset = "0xF88CB0", VA = "0xF88CB0")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6001047")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6001048")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6001049")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xF88A90", Offset = "0xF88A90", VA = "0xF88A90")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xF88E34", Offset = "0xF88E34", VA = "0xF88E34")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x600104C")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x600104D")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xF88F3C", Offset = "0xF88F3C", VA = "0xF88F3C")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xF89018", Offset = "0xF89018", VA = "0xF89018")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xF890F4", Offset = "0xF890F4", VA = "0xF890F4")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public enum JsonToken
	{
		[Token(Token = "0x4000F08")]
		None,
		[Token(Token = "0x4000F09")]
		ObjectStart,
		[Token(Token = "0x4000F0A")]
		PropertyName,
		[Token(Token = "0x4000F0B")]
		ObjectEnd,
		[Token(Token = "0x4000F0C")]
		ArrayStart,
		[Token(Token = "0x4000F0D")]
		ArrayEnd,
		[Token(Token = "0x4000F0E")]
		Int,
		[Token(Token = "0x4000F0F")]
		Long,
		[Token(Token = "0x4000F10")]
		Double,
		[Token(Token = "0x4000F11")]
		String,
		[Token(Token = "0x4000F12")]
		Boolean,
		[Token(Token = "0x4000F13")]
		Null
	}
	[Token(Token = "0x200021B")]
	public class JsonReader
	{
		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x17000138")]
		public bool AllowComments
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0xF8A2A8", Offset = "0xF8A2A8", VA = "0xF8A2A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001052")]
			[Address(RVA = "0xF8A2DC", Offset = "0xF8A2DC", VA = "0xF8A2DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0xF8A31C", Offset = "0xF8A31C", VA = "0xF8A31C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001054")]
			[Address(RVA = "0xF8A350", Offset = "0xF8A350", VA = "0xF8A350")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0xF8A390", Offset = "0xF8A390", VA = "0xF8A390")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		public bool EndOfJson
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0xF8A398", Offset = "0xF8A398", VA = "0xF8A398")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013C")]
		public JsonToken Token
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0xF85CD0", Offset = "0xF85CD0", VA = "0xF85CD0")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x1700013D")]
		public object Value
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xF85CD8", Offset = "0xF85CD8", VA = "0xF85CD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xF8A3A0", Offset = "0xF8A3A0", VA = "0xF8A3A0")]
		static JsonReader()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xF88EC4", Offset = "0xF88EC4", VA = "0xF88EC4")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xF88CA8", Offset = "0xF88CA8", VA = "0xF88CA8")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xF8AB98", Offset = "0xF8AB98", VA = "0xF8AB98")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xF8A3A4", Offset = "0xF8A3A4", VA = "0xF8A3A4")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xF8AED0", Offset = "0xF8AED0", VA = "0xF8AED0")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xF8ADBC", Offset = "0xF8ADBC", VA = "0xF8ADBC")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xF8B040", Offset = "0xF8B040", VA = "0xF8B040")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xF8B1DC", Offset = "0xF8B1DC", VA = "0xF8B1DC")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xF8B394", Offset = "0xF8B394", VA = "0xF8B394")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xF8B68C", Offset = "0xF8B68C", VA = "0xF8B68C")]
		public void Close()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xF8582C", Offset = "0xF8582C", VA = "0xF8582C")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021C")]
	internal enum Condition
	{
		[Token(Token = "0x4000F23")]
		InArray,
		[Token(Token = "0x4000F24")]
		InObject,
		[Token(Token = "0x4000F25")]
		NotAProperty,
		[Token(Token = "0x4000F26")]
		Property,
		[Token(Token = "0x4000F27")]
		Value
	}
	[Token(Token = "0x200021D")]
	internal class WriterContext
	{
		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xF8BB48", Offset = "0xF8BB48", VA = "0xF8BB48")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class JsonWriter
	{
		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x1700013E")]
		public int IndentValue
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0xF8B6EC", Offset = "0xF8B6EC", VA = "0xF8B6EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001067")]
			[Address(RVA = "0xF8B6F4", Offset = "0xF8B6F4", VA = "0xF8B6F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0xF8B708", Offset = "0xF8B708", VA = "0xF8B708")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xF8B710", Offset = "0xF8B710", VA = "0xF8B710")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0xF88528", Offset = "0xF88528", VA = "0xF88528")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public bool Validate
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0xF807A4", Offset = "0xF807A4", VA = "0xF807A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xF80798", Offset = "0xF80798", VA = "0xF80798")]
			set
			{
			}
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xF8B71C", Offset = "0xF8B71C", VA = "0xF8B71C")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xF80DC0", Offset = "0xF80DC0", VA = "0xF80DC0")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xF8B850", Offset = "0xF8B850", VA = "0xF8B850")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xF806F0", Offset = "0xF806F0", VA = "0xF806F0")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xF8B8C4", Offset = "0xF8B8C4", VA = "0xF8B8C4")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xF8B774", Offset = "0xF8B774", VA = "0xF8B774")]
		private void Init()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xF8BB50", Offset = "0xF8BB50", VA = "0xF8BB50")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xF8BC00", Offset = "0xF8BC00", VA = "0xF8BC00")]
		private void Indent()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xF8BC18", Offset = "0xF8BC18", VA = "0xF8BC18")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xF8BCCC", Offset = "0xF8BCCC", VA = "0xF8BCCC")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xF8BCD4", Offset = "0xF8BCD4", VA = "0xF8BCD4")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xF8BDA0", Offset = "0xF8BDA0", VA = "0xF8BDA0")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xF8C120", Offset = "0xF8C120", VA = "0xF8C120")]
		private void Unindent()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xF8C138", Offset = "0xF8C138", VA = "0xF8C138", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xF88794", Offset = "0xF88794", VA = "0xF88794")]
		public void Reset()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xF7FA14", Offset = "0xF7FA14", VA = "0xF7FA14")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xF893FC", Offset = "0xF893FC", VA = "0xF893FC")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xF7FAC0", Offset = "0xF7FAC0", VA = "0xF7FAC0")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xF7FC20", Offset = "0xF7FC20", VA = "0xF7FC20")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xF7FD04", Offset = "0xF7FD04", VA = "0xF7FD04")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xF7F974", Offset = "0xF7F974", VA = "0xF7F974")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xF88530", Offset = "0xF88530", VA = "0xF88530")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xF7FECC", Offset = "0xF7FECC", VA = "0xF7FECC")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xF7FDE8", Offset = "0xF7FDE8", VA = "0xF7FDE8")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xF80278", Offset = "0xF80278", VA = "0xF80278")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xF7FFDC", Offset = "0xF7FFDC", VA = "0xF7FFDC")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xF800C0", Offset = "0xF800C0", VA = "0xF800C0")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x200021F")]
	internal class FsmContext
	{
		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xF7A35C", Offset = "0xF7A35C", VA = "0xF7A35C")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000220")]
	internal class Lexer
	{
		[Token(Token = "0x200051B")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x17000142")]
		public bool AllowComments
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0xF8A2D4", Offset = "0xF8A2D4", VA = "0xF8A2D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600108A")]
			[Address(RVA = "0xF8A310", Offset = "0xF8A310", VA = "0xF8A310")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0xF8A348", Offset = "0xF8A348", VA = "0xF8A348")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600108C")]
			[Address(RVA = "0xF8A384", Offset = "0xF8A384", VA = "0xF8A384")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public bool EndOfInput
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xF8B684", Offset = "0xF8B684", VA = "0xF8B684")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000145")]
		public int Token
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0xF8B6E4", Offset = "0xF8B6E4", VA = "0xF8B6E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000146")]
		public string StringValue
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0xF8B38C", Offset = "0xF8B38C", VA = "0xF8B38C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xF8C1A8", Offset = "0xF8C1A8", VA = "0xF8C1A8")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xF8ACF4", Offset = "0xF8ACF4", VA = "0xF8ACF4")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xF8CE58", Offset = "0xF8CE58", VA = "0xF8CE58")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xF8C1AC", Offset = "0xF8C1AC", VA = "0xF8C1AC")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xF8CEE4", Offset = "0xF8CEE4", VA = "0xF8CEE4")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xF8CFE4", Offset = "0xF8CFE4", VA = "0xF8CFE4")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xF8D338", Offset = "0xF8D338", VA = "0xF8D338")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xF8D488", Offset = "0xF8D488", VA = "0xF8D488")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xF8D6E8", Offset = "0xF8D6E8", VA = "0xF8D6E8")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xF8D8B8", Offset = "0xF8D8B8", VA = "0xF8D8B8")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xF8D9A4", Offset = "0xF8D9A4", VA = "0xF8D9A4")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xF8DBA8", Offset = "0xF8DBA8", VA = "0xF8DBA8")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xF8DCB8", Offset = "0xF8DCB8", VA = "0xF8DCB8")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xF8DE50", Offset = "0xF8DE50", VA = "0xF8DE50")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xF8DED0", Offset = "0xF8DED0", VA = "0xF8DED0")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xF8DF50", Offset = "0xF8DF50", VA = "0xF8DF50")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xF8DFD0", Offset = "0xF8DFD0", VA = "0xF8DFD0")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xF8E050", Offset = "0xF8E050", VA = "0xF8E050")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xF8E0D0", Offset = "0xF8E0D0", VA = "0xF8E0D0")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xF8E150", Offset = "0xF8E150", VA = "0xF8E150")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xF8E1D0", Offset = "0xF8E1D0", VA = "0xF8E1D0")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xF8E250", Offset = "0xF8E250", VA = "0xF8E250")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xF8E2D0", Offset = "0xF8E2D0", VA = "0xF8E2D0")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xF8E350", Offset = "0xF8E350", VA = "0xF8E350")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xF8E460", Offset = "0xF8E460", VA = "0xF8E460")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xF8E4E0", Offset = "0xF8E4E0", VA = "0xF8E4E0")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xF8E674", Offset = "0xF8E674", VA = "0xF8E674")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xF8E934", Offset = "0xF8E934", VA = "0xF8E934")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xF8EA44", Offset = "0xF8EA44", VA = "0xF8EA44")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xF8EADC", Offset = "0xF8EADC", VA = "0xF8EADC")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xF8EB6C", Offset = "0xF8EB6C", VA = "0xF8EB6C")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xF8EBEC", Offset = "0xF8EBEC", VA = "0xF8EBEC")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xF8EC6C", Offset = "0xF8EC6C", VA = "0xF8EC6C")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xF8D300", Offset = "0xF8D300", VA = "0xF8D300")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xF8ED10", Offset = "0xF8ED10", VA = "0xF8ED10")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xF8B414", Offset = "0xF8B414", VA = "0xF8B414")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xF8D6DC", Offset = "0xF8D6DC", VA = "0xF8D6DC")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000221")]
	internal enum ParserToken
	{
		[Token(Token = "0x4000F4B")]
		None = 65536,
		[Token(Token = "0x4000F4C")]
		Number,
		[Token(Token = "0x4000F4D")]
		True,
		[Token(Token = "0x4000F4E")]
		False,
		[Token(Token = "0x4000F4F")]
		Null,
		[Token(Token = "0x4000F50")]
		CharSeq,
		[Token(Token = "0x4000F51")]
		Char,
		[Token(Token = "0x4000F52")]
		Text,
		[Token(Token = "0x4000F53")]
		Object,
		[Token(Token = "0x4000F54")]
		ObjectPrime,
		[Token(Token = "0x4000F55")]
		Pair,
		[Token(Token = "0x4000F56")]
		PairRest,
		[Token(Token = "0x4000F57")]
		Array,
		[Token(Token = "0x4000F58")]
		ArrayPrime,
		[Token(Token = "0x4000F59")]
		Value,
		[Token(Token = "0x4000F5A")]
		ValueRest,
		[Token(Token = "0x4000F5B")]
		String,
		[Token(Token = "0x4000F5C")]
		End,
		[Token(Token = "0x4000F5D")]
		Epsilon
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x2000222")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x200051C")]
		public class ListIndices
		{
			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x6002267")]
			[Address(RVA = "0x109DA4C", Offset = "0x109DA4C", VA = "0x109DA4C")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200051D")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x6002268")]
			[Address(RVA = "0x109DC68", Offset = "0x109DC68", VA = "0x109DC68")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0x109DD28", Offset = "0x109DD28", VA = "0x109DD28")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x200051E")]
		public class UniqueVertex
		{
			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x4001B55")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x600226A")]
			[Address(RVA = "0x109DDE0", Offset = "0x109DDE0", VA = "0x109DDE0", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0x109DEB4", Offset = "0x109DEB4", VA = "0x109DEB4", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x600226C")]
			[Address(RVA = "0x109DAC0", Offset = "0x109DAC0", VA = "0x109DAC0")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x600226D")]
			[Address(RVA = "0x109DF14", Offset = "0x109DF14", VA = "0x109DF14")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600226E")]
			[Address(RVA = "0x109DFC4", Offset = "0x109DFC4", VA = "0x109DFC4")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x600226F")]
			[Address(RVA = "0x109DFFC", Offset = "0x109DFFC", VA = "0x109DFFC")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002270")]
			[Address(RVA = "0x109DEC8", Offset = "0x109DEC8", VA = "0x109DEC8")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x6002271")]
			[Address(RVA = "0x109E040", Offset = "0x109E040", VA = "0x109E040")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x6002272")]
			[Address(RVA = "0x109DFA0", Offset = "0x109DFA0", VA = "0x109DFA0")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x200051F")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x1700034C")]
			public int FaceIndex
			{
				[Token(Token = "0x6002273")]
				[Address(RVA = "0x109DD18", Offset = "0x109DD18", VA = "0x109DD18")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700034D")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x6002274")]
				[Address(RVA = "0x109DD20", Offset = "0x109DD20", VA = "0x109DD20")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002275")]
			[Address(RVA = "0x109DB10", Offset = "0x109DB10", VA = "0x109DB10")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x2000520")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x1700034E")]
			public int UniqueIndex
			{
				[Token(Token = "0x6002276")]
				[Address(RVA = "0x109DBB8", Offset = "0x109DBB8", VA = "0x109DBB8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002277")]
			[Address(RVA = "0x109DBC0", Offset = "0x109DBC0", VA = "0x109DBC0")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x6002278")]
			[Address(RVA = "0x109DB48", Offset = "0x109DB48", VA = "0x109DB48")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x17000147")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x109D288", Offset = "0x109D288", VA = "0x109D288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x109D290", Offset = "0x109D290", VA = "0x109D290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x109D298", Offset = "0x109D298", VA = "0x109D298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x109D2A0", Offset = "0x109D2A0", VA = "0x109D2A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x109D2A8", Offset = "0x109D2A8", VA = "0x109D2A8")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x109DD10", Offset = "0x109DD10", VA = "0x109DD10")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class RelevanceSphere
	{
		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_v3Position;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x109E0D8", Offset = "0x109E0D8", VA = "0x109E0D8")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x109E154", Offset = "0x109E154", VA = "0x109E154")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x2000521")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x2000522")]
		private class Triangle
		{
			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x1700034F")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x600227D")]
				[Address(RVA = "0x10A21C8", Offset = "0x10A21C8", VA = "0x10A21C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			public bool HasUVData
			{
				[Token(Token = "0x600227E")]
				[Address(RVA = "0x109FA38", Offset = "0x109FA38", VA = "0x109FA38")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000351")]
			public int[] IndicesUV
			{
				[Token(Token = "0x600227F")]
				[Address(RVA = "0x10A5358", Offset = "0x10A5358", VA = "0x10A5358")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			public Vector3 Normal
			{
				[Token(Token = "0x6002280")]
				[Address(RVA = "0x109F8D0", Offset = "0x109F8D0", VA = "0x109F8D0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000353")]
			public int[] Indices
			{
				[Token(Token = "0x6002281")]
				[Address(RVA = "0x10A5360", Offset = "0x10A5360", VA = "0x10A5360")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002282")]
			[Address(RVA = "0x10A1970", Offset = "0x10A1970", VA = "0x10A1970")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0x10A08A8", Offset = "0x10A08A8", VA = "0x10A08A8")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0x109F7FC", Offset = "0x109F7FC", VA = "0x109F7FC")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0x10A613C", Offset = "0x10A613C", VA = "0x10A613C")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x6002286")]
			[Address(RVA = "0x109FA40", Offset = "0x109FA40", VA = "0x109FA40")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0x10A6460", Offset = "0x10A6460", VA = "0x10A6460")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6002288")]
			[Address(RVA = "0x10A078C", Offset = "0x10A078C", VA = "0x10A078C")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0x10A64B4", Offset = "0x10A64B4", VA = "0x10A64B4")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x600228A")]
			[Address(RVA = "0x10A0BB0", Offset = "0x10A0BB0", VA = "0x10A0BB0")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x2000523")]
		private class TriangleList
		{
			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x600228B")]
			[Address(RVA = "0x10A3CDC", Offset = "0x10A3CDC", VA = "0x10A3CDC")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x2000524")]
		private class Vertex
		{
			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_v3Position;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x600228C")]
			[Address(RVA = "0x10A1580", Offset = "0x10A1580", VA = "0x10A1580")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0x10A0638", Offset = "0x10A0638", VA = "0x10A0638")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x600228E")]
			[Address(RVA = "0x10A6330", Offset = "0x10A6330", VA = "0x10A6330")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x600228F")]
			[Address(RVA = "0x109F8DC", Offset = "0x109F8DC", VA = "0x109F8DC")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000525")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x6002290")]
			[Address(RVA = "0x10A67C4", Offset = "0x10A67C4", VA = "0x10A67C4", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0x10A695C", Offset = "0x10A695C", VA = "0x10A695C", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x6002292")]
			[Address(RVA = "0x10A5350", Offset = "0x10A5350", VA = "0x10A5350")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x2000526")]
		private class VertexDataHash
		{
			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _v3Normal;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x17000354")]
			public Vector3 Vertex
			{
				[Token(Token = "0x6002293")]
				[Address(RVA = "0x10A5458", Offset = "0x10A5458", VA = "0x10A5458")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000355")]
			public Vector3 Normal
			{
				[Token(Token = "0x6002294")]
				[Address(RVA = "0x10A6514", Offset = "0x10A6514", VA = "0x10A6514")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000356")]
			public Vector2 UV1
			{
				[Token(Token = "0x6002295")]
				[Address(RVA = "0x10A6520", Offset = "0x10A6520", VA = "0x10A6520")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000357")]
			public Vector2 UV2
			{
				[Token(Token = "0x6002296")]
				[Address(RVA = "0x10A6528", Offset = "0x10A6528", VA = "0x10A6528")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000358")]
			public Color32 Color
			{
				[Token(Token = "0x6002297")]
				[Address(RVA = "0x10A6530", Offset = "0x10A6530", VA = "0x10A6530")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x6002298")]
			[Address(RVA = "0x10A5368", Offset = "0x10A5368", VA = "0x10A5368")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x6002299")]
			[Address(RVA = "0x10A6538", Offset = "0x10A6538", VA = "0x10A6538", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600229A")]
			[Address(RVA = "0x10A6714", Offset = "0x10A6714", VA = "0x10A6714", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x600229B")]
			[Address(RVA = "0x10A6748", Offset = "0x10A6748", VA = "0x10A6748")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0x10A6780", Offset = "0x10A6780", VA = "0x10A6780")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0184", Offset = "0x9E0184")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x17000359")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022A0")]
				[Address(RVA = "0x10A6008", Offset = "0x10A6008", VA = "0x10A6008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A2")]
				[Address(RVA = "0x10A6078", Offset = "0x10A6078", VA = "0x10A6078", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600229D")]
			[Address(RVA = "0x109E490", Offset = "0x109E490", VA = "0x109E490")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600229E")]
			[Address(RVA = "0x10A54DC", Offset = "0x10A54DC", VA = "0x10A54DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600229F")]
			[Address(RVA = "0x10A54E0", Offset = "0x10A54E0", VA = "0x10A54E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x10A6010", Offset = "0x10A6010", VA = "0x10A6010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0194", Offset = "0x9E0194")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh meshOut;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject gameObject;

			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022A6")]
				[Address(RVA = "0x10A3D50", Offset = "0x10A3D50", VA = "0x10A3D50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A8")]
				[Address(RVA = "0x10A3DC0", Offset = "0x10A3DC0", VA = "0x10A3DC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x109E4BC", Offset = "0x109E4BC", VA = "0x109E4BC")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x10A2F94", Offset = "0x10A2F94", VA = "0x10A2F94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x10A2F98", Offset = "0x10A2F98", VA = "0x10A2F98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x10A3D58", Offset = "0x10A3D58", VA = "0x10A3D58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E01A4", Offset = "0x9E01A4")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x1700035D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022AC")]
				[Address(RVA = "0x10A5464", Offset = "0x10A5464", VA = "0x10A5464", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022AE")]
				[Address(RVA = "0x10A54D4", Offset = "0x10A54D4", VA = "0x10A54D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x109F1F4", Offset = "0x109F1F4", VA = "0x109F1F4")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60022AA")]
			[Address(RVA = "0x10A3DC8", Offset = "0x10A3DC8", VA = "0x10A3DC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0x10A3DCC", Offset = "0x10A3DCC", VA = "0x10A3DCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x10A546C", Offset = "0x10A546C", VA = "0x10A546C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E01B4", Offset = "0x9E01B4")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x4001BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B2")]
				[Address(RVA = "0x10A2F1C", Offset = "0x10A2F1C", VA = "0x10A2F1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B4")]
				[Address(RVA = "0x10A2F8C", Offset = "0x10A2F8C", VA = "0x10A2F8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x109FFE4", Offset = "0x109FFE4", VA = "0x109FFE4")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x10A2454", Offset = "0x10A2454", VA = "0x10A2454", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x10A2458", Offset = "0x10A2458", VA = "0x10A2458", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x10A2F24", Offset = "0x10A2F24", VA = "0x10A2F24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4674", Offset = "0x9E4674")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4684", Offset = "0x9E4684")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x4000F6A")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_meshOriginal;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x1700014B")]
		public static bool Cancelled
		{
			[Token(Token = "0x60010BD")]
			[Address(RVA = "0x109E280", Offset = "0x109E280", VA = "0x109E280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD30", Offset = "0x9EBD30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x109E2E8", Offset = "0x109E2E8", VA = "0x109E2E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD40", Offset = "0x9EBD40")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0x109E358", Offset = "0x109E358", VA = "0x109E358")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x109E3C0", Offset = "0x109E3C0", VA = "0x109E3C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x109E42C", Offset = "0x109E42C", VA = "0x109E42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD50", Offset = "0x9EBD50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x109E434", Offset = "0x109E434", VA = "0x109E434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD60", Offset = "0x9EBD60")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x109E440", Offset = "0x109E440", VA = "0x109E440")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x109E448", Offset = "0x109E448", VA = "0x109E448")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public bool UseCurvature
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x109E454", Offset = "0x109E454", VA = "0x109E454")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x109E45C", Offset = "0x109E45C", VA = "0x109E45C")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public bool ProtectTexture
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x109E468", Offset = "0x109E468", VA = "0x109E468")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x109E470", Offset = "0x109E470", VA = "0x109E470")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public bool LockBorder
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x109E47C", Offset = "0x109E47C", VA = "0x109E47C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x109E484", Offset = "0x109E484", VA = "0x109E484")]
			set
			{
			}
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x1095508", Offset = "0x1095508", VA = "0x1095508")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBD70", Offset = "0x9EBD70")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1095610", Offset = "0x1095610", VA = "0x1095610")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBDD4", Offset = "0x9EBDD4")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1095608", Offset = "0x1095608", VA = "0x1095608")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x109E4E8", Offset = "0x109E4E8", VA = "0x109E4E8")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x109E544", Offset = "0x109E544", VA = "0x109E544")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x109F0F4", Offset = "0x109F0F4", VA = "0x109F0F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBE38", Offset = "0x9EBE38")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x109F220", Offset = "0x109F220", VA = "0x109F220")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x109F2C8", Offset = "0x109F2C8", VA = "0x109F2C8")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x109FB48", Offset = "0x109FB48", VA = "0x109FB48")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x109FF04", Offset = "0x109FF04", VA = "0x109FF04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBE9C", Offset = "0x9EBE9C")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x10A0010", Offset = "0x10A0010", VA = "0x10A0010")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x10A13A0", Offset = "0x10A13A0", VA = "0x10A13A0")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x10A16C0", Offset = "0x10A16C0", VA = "0x10A16C0")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x10A1EC8", Offset = "0x10A1EC8", VA = "0x10A1EC8")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x10A21D0", Offset = "0x10A21D0", VA = "0x10A21D0")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x10A2294", Offset = "0x10A2294", VA = "0x10A2294")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x10A0FB4", Offset = "0x10A0FB4", VA = "0x10A0FB4")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x10A1198", Offset = "0x10A1198", VA = "0x10A1198")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x10A2380", Offset = "0x10A2380", VA = "0x10A2380")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x10A21D4", Offset = "0x10A21D4", VA = "0x10A21D4")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x10A2434", Offset = "0x10A2434", VA = "0x10A2434")]
		public Simplifier()
		{
		}
	}
}
namespace UltimateFracturing
{
	[Token(Token = "0x2000225")]
	public static class ConcaveColliderInterface
	{
		[Token(Token = "0x200052B")]
		private struct SConvexDecompositionInfoInOut
		{
			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint uMaxHullVertices;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint uMaxHulls;

			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float fPrecision;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float fBackFaceDistanceFactor;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint uLegacyDepth;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public uint uNormalizeInputMesh;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint uUseFastVersion;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public uint uTriangleCount;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public uint uVertexCount;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int nHullsOut;
		}

		[Token(Token = "0x200052C")]
		private struct SConvexDecompositionHullInfo
		{
			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nVertexCount;

			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int nTriangleCount;
		}

		[Token(Token = "0x200052D")]
		public delegate void LogDelegate(string message);

		[PreserveSig]
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xB936F8", Offset = "0xB936F8", VA = "0xB936F8")]
		private static extern void DllInit(bool bUseMultithreading);

		[PreserveSig]
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xB93794", Offset = "0xB93794", VA = "0xB93794")]
		private static extern void DllClose();

		[PreserveSig]
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xB93820", Offset = "0xB93820", VA = "0xB93820")]
		private static extern void SetLogFunctionPointer(IntPtr pfnUnity3DLog);

		[PreserveSig]
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xB938BC", Offset = "0xB938BC", VA = "0xB938BC")]
		private static extern void SetProgressFunctionPointer(IntPtr pfnUnity3DProgress);

		[PreserveSig]
		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xB93958", Offset = "0xB93958", VA = "0xB93958")]
		private static extern void CancelConvexDecomposition();

		[PreserveSig]
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xB939E4", Offset = "0xB939E4", VA = "0xB939E4")]
		private static extern bool DoConvexDecomposition(ref SConvexDecompositionInfoInOut infoInOut, Vector3[] pfVertices, int[] puIndices);

		[PreserveSig]
		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xB93AB0", Offset = "0xB93AB0", VA = "0xB93AB0")]
		private static extern bool GetHullInfo(uint uHullIndex, ref SConvexDecompositionHullInfo infoOut);

		[PreserveSig]
		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xB93B64", Offset = "0xB93B64", VA = "0xB93B64")]
		private static extern bool FillHullMeshData(uint uHullIndex, ref float pfVolumeOut, int[] pnIndicesOut, Vector3[] pfVerticesOut);

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xB93C40", Offset = "0xB93C40", VA = "0xB93C40")]
		public static int ComputeHull(GameObject gameObject, FracturedObject fracturedObject)
		{
			return default(int);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xB93E54", Offset = "0xB93E54", VA = "0xB93E54")]
		private static bool ComputeHull(GameObject gameObject, FracturedObject.ECCAlgorithm eAlgorithm, int nMaxHulls, int nMaxHullVertices, int nLegacySteps, bool bVerbose, out int nTotalTrianglesOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xB94740", Offset = "0xB94740", VA = "0xB94740")]
		private static void Log(string message)
		{
		}
	}
	[Token(Token = "0x2000226")]
	public static class Fracturer
	{
		[Token(Token = "0x200052E")]
		private class FracturingStats
		{
			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nChunkCount;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int nTotalChunks;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int nSplitCount;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool bCancelFracturing;

			[Token(Token = "0x60022B9")]
			[Address(RVA = "0x108F39C", Offset = "0x108F39C", VA = "0x108F39C")]
			public FracturingStats()
			{
			}
		}

		[Token(Token = "0x200052F")]
		private class VoronoiCell
		{
			[Token(Token = "0x20005C5")]
			public class Face
			{
				[Token(Token = "0x4001E93")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Plane plane;

				[Token(Token = "0x4001E94")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Matrix4x4 mtxPlane;

				[Token(Token = "0x4001E95")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				public int nAdjacentCell;

				[Token(Token = "0x6002454")]
				[Address(RVA = "0x1090A24", Offset = "0x1090A24", VA = "0x1090A24")]
				public Face(Plane plane, Matrix4x4 mtxPlane, int nAdjacentCell)
				{
				}
			}

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nIndex;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int x;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int y;

			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int z;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 v3Center;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 v3Min;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 v3Max;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Face> listCellFaces;

			[Token(Token = "0x60022BA")]
			[Address(RVA = "0x1090958", Offset = "0x1090958", VA = "0x1090958")]
			public VoronoiCell(int nIndex, int x, int y, int z)
			{
			}
		}

		[Token(Token = "0x2000530")]
		private class VoronoiPointDistance
		{
			[Token(Token = "0x20005C6")]
			public class IncreasingDistanceComparer : IComparer<VoronoiPointDistance>
			{
				[Token(Token = "0x6002455")]
				[Address(RVA = "0x1090B80", Offset = "0x1090B80", VA = "0x1090B80", Slot = "4")]
				public int Compare(VoronoiPointDistance a, VoronoiPointDistance b)
				{
					return default(int);
				}

				[Token(Token = "0x6002456")]
				[Address(RVA = "0x1090BD8", Offset = "0x1090BD8", VA = "0x1090BD8")]
				public IncreasingDistanceComparer()
				{
				}
			}

			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nIndex;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float fDistanceSqr;

			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x1090B44", Offset = "0x1090B44", VA = "0x1090B44")]
			public VoronoiPointDistance(int nIndex, float fDistanceSqr)
			{
			}
		}

		[Token(Token = "0x2000531")]
		public struct VoronoiCellKey
		{
			[Token(Token = "0x20005C7")]
			public class EqualityComparer : IEqualityComparer<VoronoiCellKey>
			{
				[Token(Token = "0x6002457")]
				[Address(RVA = "0x1090AA0", Offset = "0x1090AA0", VA = "0x1090AA0", Slot = "4")]
				public bool Equals(VoronoiCellKey x, VoronoiCellKey y)
				{
					return default(bool);
				}

				[Token(Token = "0x6002458")]
				[Address(RVA = "0x1090AD0", Offset = "0x1090AD0", VA = "0x1090AD0", Slot = "5")]
				public int GetHashCode(VoronoiCellKey x)
				{
					return default(int);
				}

				[Token(Token = "0x6002459")]
				[Address(RVA = "0x1090B3C", Offset = "0x1090B3C", VA = "0x1090B3C")]
				public EqualityComparer()
				{
				}
			}

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4001BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;

			[Token(Token = "0x60022BC")]
			[Address(RVA = "0xA954B8", Offset = "0xA954B8", VA = "0xA954B8")]
			public VoronoiCellKey(int x, int y, int z)
			{
			}
		}

		[Token(Token = "0x2000532")]
		private class VoronoiThreadData
		{
			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<VoronoiCell> listVoronoiCells;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshData meshDataCube;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MeshData> listMeshDatasObject;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MeshData> listMeshDatasChunks;

			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpaceTreeNode spaceTree;

			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FracturedObject fracturedComponent;

			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int nCurrentCell;

			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int nTotalCells;

			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int nCellsProcessed;

			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public ProgressDelegate progress;

			[Token(Token = "0x60022BD")]
			[Address(RVA = "0x1090BE0", Offset = "0x1090BE0", VA = "0x1090BE0")]
			public VoronoiThreadData()
			{
			}
		}

		[Token(Token = "0x2000533")]
		public delegate void ProgressDelegate(string strTitle, string message, float fT);

		[Token(Token = "0x2000534")]
		private class SpaceTreeNode
		{
			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private SpaceTreeNode nodeOneSide;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private SpaceTreeNode nodeOtherSide;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int nLevel;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int nSplitsX;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int nSplitsY;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int nSplitsZ;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 v3Min;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 v3Max;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<MeshData> listMeshDatasSpace;

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x108FC40", Offset = "0x108FC40", VA = "0x108FC40")]
			public SpaceTreeNode()
			{
			}

			[Token(Token = "0x60022C3")]
			[Address(RVA = "0x108FCBC", Offset = "0x108FCBC", VA = "0x108FCBC")]
			public bool ContainsCompletely(Vector3 v3Min, Vector3 v3Max)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x108FD2C", Offset = "0x108FD2C", VA = "0x108FD2C")]
			public static List<MeshData> GetSmallestPossibleMeshData(SpaceTreeNode root, Vector3 v3Min, Vector3 v3Max)
			{
				return null;
			}

			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x108FE24", Offset = "0x108FE24", VA = "0x108FE24")]
			public static SpaceTreeNode BuildSpaceTree(MeshData meshDataIn, int nSubdivisionLevels, FracturedObject fracturedComponent, [Optional] ProgressDelegate progress)
			{
				return null;
			}
		}

		[Token(Token = "0x2000535")]
		public class SplitOptions
		{
			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static SplitOptions Default;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool bForceNoProgressInfo;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool bForceNoIslandGeneration;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool bForceNoChunkConnectionInfo;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool bForceNoIslandConnectionInfo;

			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool bForceNoCap;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool bForceCapVertexSoup;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
			public bool bIgnoreNegativeSide;

			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
			public bool bVerticesAreLocal;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int nForceMeshConnectivityHash;

			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x10908B8", Offset = "0x10908B8", VA = "0x10908B8")]
			public SplitOptions()
			{
			}
		}

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FracturingStats s_FracturingStats;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VoronoiThreadData s_VoronoiThreadData;

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xB95180", Offset = "0xB95180", VA = "0xB95180")]
		public static void CancelFracturing()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xB9529C", Offset = "0xB9529C", VA = "0xB9529C")]
		public static bool IsFracturingCancelled()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xB953CC", Offset = "0xB953CC", VA = "0xB953CC")]
		public static bool FractureToChunks(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xB95BB4", Offset = "0xB95BB4", VA = "0xB95BB4")]
		private static Mesh CopyMesh(MeshFilter meshfIn)
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xB96118", Offset = "0xB96118", VA = "0xB96118")]
		private static bool FractureToChunksBSP(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xB980A0", Offset = "0xB980A0", VA = "0xB980A0")]
		private static bool FractureToChunksVoronoi(FracturedObject fracturedComponent, bool bPositionOnSourceAndHideOriginal, out List<GameObject> listGameObjectsOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xBA939C", Offset = "0xBA939C", VA = "0xBA939C")]
		public static void ThreadVoronoiComputePlaneDependencies()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xBAA468", Offset = "0xBAA468", VA = "0xBAA468")]
		public static void ThreadVoronoiComputeCells()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xB9B6C4", Offset = "0xB9B6C4", VA = "0xB9B6C4")]
		public static List<MeshData> ComputeMeshDataIslands(MeshData meshDataIn, bool bVerticesAreLocal, FracturedObject fracturedComponent, ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xBA873C", Offset = "0xBA873C", VA = "0xBA873C")]
		public static void ComputeChunkColliders(FracturedObject fracturedComponent, ProgressDelegate progress)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xBABB8C", Offset = "0xBABB8C", VA = "0xBABB8C")]
		public static void DeleteChunkColliders(FracturedObject fracturedComponent)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xB9D334", Offset = "0xB9D334", VA = "0xB9D334")]
		private static Matrix4x4 GetRandomPlaneSplitMatrix(MeshData meshDataIn, FracturedObject fracturedComponent, out int nSplitAxisPerformed)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xBA7D70", Offset = "0xBA7D70", VA = "0xBA7D70")]
		private static GameObject CreateNewSplitGameObject(GameObject gameObjectIn, FracturedObject fracturedComponent, string strName, bool bTransformVerticesBackToLocal, MeshData meshData)
		{
			return null;
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xBAB6F8", Offset = "0xBAB6F8", VA = "0xBAB6F8")]
		private static int CreateMeshConnectivityVoronoiHash(int nCell1, int nCell2)
		{
			return default(int);
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xBA839C", Offset = "0xBA839C", VA = "0xBA839C")]
		private static void ComputeChunkConnections(FracturedObject fracturedObject, List<GameObject> listGameObjects, List<MeshData> listMeshDatas, [Optional] ProgressDelegate progress)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xBAB798", Offset = "0xBAB798", VA = "0xBAB798")]
		private static void RemoveEmptySubmeshes(FracturedChunk fracturedChunk)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xBABEE0", Offset = "0xBABEE0", VA = "0xBABEE0")]
		public static bool SplitMeshUsingPlane(GameObject gameObjectIn, FracturedObject fracturedComponent, SplitOptions splitOptions, Plane splitPlane, Vector3 rightVec, out List<GameObject> listGameObjectsPosOut, out List<GameObject> listGameObjectsNegOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xBACAB8", Offset = "0xBACAB8", VA = "0xBACAB8")]
		private static GameObject CreateNewSplitGameObjectHalfbrick(GameObject gameObjectIn, FracturedObject fracturedComponent, string strName, bool bTransformVerticesBackToLocal, MeshData meshData)
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xB9DDF0", Offset = "0xB9DDF0", VA = "0xB9DDF0")]
		private static bool SplitMeshUsingPlane(MeshData meshDataIn, FracturedObject fracturedComponent, SplitOptions splitOptions, Vector3 v3PlaneNormal, Vector3 v3PlaneRight, Vector3 v3PlanePoint, out List<MeshData> listMeshDatasPosOut, out List<MeshData> listMeshDatasNegOut, [Optional] ProgressDelegate progress)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xB9C02C", Offset = "0xB9C02C", VA = "0xB9C02C")]
		private static bool ComputeIslandsMeshDataConnectivity(FracturedObject fracturedComponent, bool bVerticesAreLocal, MeshData meshData1, MeshData meshData2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xBB0460", Offset = "0xBB0460", VA = "0xBB0460")]
		public static bool IntersectEdges2D(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4)
		{
			return default(bool);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xBB069C", Offset = "0xBB069C", VA = "0xBB069C")]
		private static float CrossProduct2D(Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xBAE174", Offset = "0xBAE174", VA = "0xBAE174")]
		private static void TriangulateConstrainedDelaunay(List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay, bool bForceVertexSoup, FracturedObject fracturedComponent, bool bConnectivityPostprocess, MeshFaceConnectivity faceConnectivityPos, MeshFaceConnectivity faceConnectivityNeg, MeshDataConnectivity meshConnectivityPos, MeshDataConnectivity meshConnectivityNeg, int nForceMeshConnectivityHash, int nSplitCloseSubMesh, Matrix4x4 mtxPlane, Matrix4x4 mtxToLocalPos, Matrix4x4 mtxToLocalNeg, Vector3 v3CenterPos, Vector3 v3CenterNeg, List<int>[] aListIndicesPosInOut, List<VertexData> listVertexDataPosInOut, List<int>[] aListIndicesNegInOut, List<VertexData> listVertexDataNegInOut)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xBB06AC", Offset = "0xBB06AC", VA = "0xBB06AC")]
		private static void CreateIndexedMesh(IList<DelaunayTriangle> listTriangles, List<Vector3> listVerticesOut, List<int> listIndicesOut, Matrix4x4 mtxTransform, bool bTransform)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xBB0DA0", Offset = "0xBB0DA0", VA = "0xBB0DA0")]
		private static void Triangulate(List<Vector3> listVertices, List<int> listIndices, FracturedObject fracturedComponent, List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay, bool bConnectivityPostprocess, MeshFaceConnectivity faceConnectivityPos, MeshFaceConnectivity faceConnectivityNeg, MeshDataConnectivity meshConnectivityPos, MeshDataConnectivity meshConnectivityNeg, int nForceMeshConnectivityHash, int nSplitCloseSubMesh, Matrix4x4 mtxPlane, Matrix4x4 mtxToLocalPos, Matrix4x4 mtxToLocalNeg, Vector3 v3CenterPos, Vector3 v3CenterNeg, List<int>[] aListIndicesPosInOut, List<VertexData> listVertexDataPosInOut, List<int>[] aListIndicesNegInOut, List<VertexData> listVertexDataNegInOut)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xBB2054", Offset = "0xBB2054", VA = "0xBB2054")]
		private static int ComputeVertexHash(Vector3 v3Vertex, List<List<Vector3>> listlistPointsConstrainedDelaunay, List<List<int>> listlistHashValuesConstrainedDelaunay)
		{
			return default(int);
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xBAD16C", Offset = "0xBAD16C", VA = "0xBAD16C")]
		private static bool AddCapEdge(Dictionary<EdgeKeyByHash, CapEdge> dicCapEdges, int nVertexHash1, int nVertexHash2, Vector3 v3Vertex1, Vector3 v3Vertex2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xBAD2B0", Offset = "0xBAD2B0", VA = "0xBAD2B0")]
		private static bool ResolveCap(Dictionary<EdgeKeyByHash, CapEdge> dicCapEdges, List<List<Vector3>> listlistResolvedCapVertices, List<List<int>> listlistResolvedCapHashValues, FracturedObject fracturedComponent)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000227")]
	public class DieTimer : MonoBehaviour
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SecondsToDie;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float OffscreenLifeTime;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_fTimer;

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xB94F0C", Offset = "0xB94F0C", VA = "0xB94F0C")]
		private void Start()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xB94F14", Offset = "0xB94F14", VA = "0xB94F14")]
		private void Update()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xB94FC8", Offset = "0xB94FC8", VA = "0xB94FC8")]
		public DieTimer()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public static class Parameters
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float EPSILONDISTANCEPLANE;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float EPSILONDISTANCEVERTEX;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float EPSILONCAPPRECISIONMIN;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float EPSILONCROSSPRODUCT;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float EPSILONINSIDETRIANGLE;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int VERTICESSPACESUBDIVISION;
	}
	[Token(Token = "0x2000229")]
	public class VertexData
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nVertexHash;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 v3Vertex;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 v3Normal;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector4 v4Tangent;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color32 color32;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 v2Mapping1;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 v2Mapping2;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool bHasNormal;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool bHasTangent;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool bHasColor32;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool bHasMapping1;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool bHasMapping2;

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1093200", Offset = "0x1093200", VA = "0x1093200")]
		public VertexData(int nVertexHash)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x109CAAC", Offset = "0x109CAAC", VA = "0x109CAAC")]
		public VertexData(int nVertexHash, Vector3 v3Vertex, Vector3 v3Normal, Vector3 v4Tangent, Color32 color32, Vector2 v2Mapping1, Vector2 v2Mapping2, bool bHasNormal, bool bHasTangent, bool bHasColor32, bool bHasMapping1, bool bHasMapping2)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x109844C", Offset = "0x109844C", VA = "0x109844C")]
		public VertexData Copy()
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x109CC3C", Offset = "0x109CC3C", VA = "0x109CC3C")]
		public static VertexData Lerp(int nVertexHash, VertexData vd1, VertexData vd2, float fT)
		{
			return null;
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x109CFE0", Offset = "0x109CFE0", VA = "0x109CFE0")]
		public static bool ClipAgainstPlane(VertexData[] aVertexDataInput, int nIndexA, int nIndexB, Vector3 v3A, Vector3 v3B, Plane planeSplit, ref VertexData clippedVertexDataOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x10921D0", Offset = "0x10921D0", VA = "0x10921D0")]
		public static VertexData[] BuildVertexDataArray(Mesh mesh, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld)
		{
			return null;
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1094E98", Offset = "0x1094E98", VA = "0x1094E98")]
		public static void SetMeshDataFromVertexDataArraySimple(MeshFilter meshFilter, MeshData meshData, bool bTransformVertexToLocal, int maxFaces, int[] faces, out int[] newFaces)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1094074", Offset = "0x1094074", VA = "0x1094074")]
		public static void SetMeshDataFromVertexDataArray(MeshFilter meshFilter, MeshData meshData, bool bTransformVertexToLocal)
		{
		}
	}
	[Token(Token = "0x200022A")]
	public struct EdgeKeyByIndex
	{
		[Token(Token = "0x2000536")]
		public class EqualityComparer : IEqualityComparer<EdgeKeyByIndex>
		{
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0xB950F8", Offset = "0xB950F8", VA = "0xB950F8", Slot = "4")]
			public bool Equals(EdgeKeyByIndex x, EdgeKeyByIndex y)
			{
				return default(bool);
			}

			[Token(Token = "0x60022C9")]
			[Address(RVA = "0xB95130", Offset = "0xB95130", VA = "0xB95130", Slot = "5")]
			public int GetHashCode(EdgeKeyByIndex x)
			{
				return default(int);
			}

			[Token(Token = "0x60022CA")]
			[Address(RVA = "0xB95178", Offset = "0xB95178", VA = "0xB95178")]
			public EqualityComparer()
			{
			}
		}

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nIndexA;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nIndexB;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xA89E6C", Offset = "0xA89E6C", VA = "0xA89E6C")]
		public EdgeKeyByIndex(int nIndexA, int nIndexB)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xA89E74", Offset = "0xA89E74", VA = "0xA89E74")]
		public void Set(int nIndexA, int nIndexB)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xA89E7C", Offset = "0xA89E7C", VA = "0xA89E7C")]
		public bool CompareTo(int nIndexA, int nIndexB)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200022B")]
	public struct EdgeKeyByHash
	{
		[Token(Token = "0x2000537")]
		public class EqualityComparer : IEqualityComparer<EdgeKeyByHash>
		{
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0xB95024", Offset = "0xB95024", VA = "0xB95024", Slot = "4")]
			public bool Equals(EdgeKeyByHash x, EdgeKeyByHash y)
			{
				return default(bool);
			}

			[Token(Token = "0x60022CC")]
			[Address(RVA = "0xB9505C", Offset = "0xB9505C", VA = "0xB9505C", Slot = "5")]
			public int GetHashCode(EdgeKeyByHash x)
			{
				return default(int);
			}

			[Token(Token = "0x60022CD")]
			[Address(RVA = "0xB950A4", Offset = "0xB950A4", VA = "0xB950A4")]
			public EqualityComparer()
			{
			}
		}

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nHashA;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nHashB;

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xA89E20", Offset = "0xA89E20", VA = "0xA89E20")]
		public EdgeKeyByHash(int nHashA, int nHashB)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xA89E28", Offset = "0xA89E28", VA = "0xA89E28")]
		public void Set(int nHashA, int nHashB)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xA89E30", Offset = "0xA89E30", VA = "0xA89E30")]
		public bool CompareTo(int nHashA, int nHashB)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200022C")]
	public struct ClippedEdge
	{
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int nOldIndexA;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int nOldIndexB;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int nNewIndexA;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int nNewIndexB;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nClippedIndex;

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xA89DA4", Offset = "0xA89DA4", VA = "0xA89DA4")]
		public ClippedEdge(int nOldIndexA, int nOldIndexB, int nNewIndexA, int nNewIndexB, int nClippedIndex)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xA89DB4", Offset = "0xA89DB4", VA = "0xA89DB4")]
		public int GetFirstIndex(int nOldIndexA)
		{
			return default(int);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xA89DD0", Offset = "0xA89DD0", VA = "0xA89DD0")]
		public int GetSecondIndex(int nOldIndexB)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200022D")]
	public struct CapEdge
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 v1;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 v2;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int nHash1;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int nHash2;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fLength;

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xA89D34", Offset = "0xA89D34", VA = "0xA89D34")]
		public CapEdge(int nHash1, int nHash2, Vector3 v1, Vector3 v2, float fLength)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xA89D4C", Offset = "0xA89D4C", VA = "0xA89D4C")]
		public int SharesVertex1Of(CapEdge edge)
		{
			return default(int);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xA89D78", Offset = "0xA89D78", VA = "0xA89D78")]
		public int SharesVertex2Of(CapEdge edge)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200022E")]
	public class MeshFaceConnectivity
	{
		[Token(Token = "0x2000538")]
		public struct EdgeData
		{
			[Token(Token = "0x20005C8")]
			public struct SideData
			{
				[Token(Token = "0x4001E96")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int nFace;

				[Token(Token = "0x4001E97")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public int nSubMesh;

				[Token(Token = "0x4001E98")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public int nSubMeshFace;

				[Token(Token = "0x4001E99")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public int nEdgePos;

				[Token(Token = "0x4001E9A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int nVertexDataV1;

				[Token(Token = "0x4001E9B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int nVertexDataV2;

				[Token(Token = "0x600245A")]
				[Address(RVA = "0xA9557C", Offset = "0xA9557C", VA = "0xA9557C")]
				public SideData(int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, int nVertexDataV1, int nVertexDataV2)
				{
				}
			}

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nEdgeIndex;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private int nVertex1Hash;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int nVertex2Hash;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 v1;

			[Token(Token = "0x4001BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 v2;

			[Token(Token = "0x4001BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<SideData> listSides;

			[Token(Token = "0x60022CE")]
			[Address(RVA = "0xA95518", Offset = "0xA95518", VA = "0xA95518")]
			public EdgeData(int nEdgeIndex, int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, Vector3 v1, Vector3 v2, int nVertex1Hash, int nVertex2Hash, int nVertexDataV1, int nVertexDataV2)
			{
			}

			[Token(Token = "0x60022CF")]
			[Address(RVA = "0xA95530", Offset = "0xA95530", VA = "0xA95530")]
			public bool Compare(int nVertex1Hash, int nVertex2Hash)
			{
				return default(bool);
			}

			[Token(Token = "0x60022D0")]
			[Address(RVA = "0xA9556C", Offset = "0xA9556C", VA = "0xA9556C")]
			public void AddSideData(int nFace, int nSubMesh, int nSubMeshFace, int nEdgePos, int nVertexDataV1, int nVertexDataV2)
			{
			}

			[Token(Token = "0x60022D1")]
			[Address(RVA = "0xA95574", Offset = "0xA95574", VA = "0xA95574")]
			public bool HasMoreThanOneSide()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000539")]
		public class TriangleData
		{
			[Token(Token = "0x4001BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int nSubMesh;

			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int nTriangle;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] anEdges;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int>[] alistNeighborSubMeshes;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<int>[] alistNeighborTriangles;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool bVisited;

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x109A80C", Offset = "0x109A80C", VA = "0x109A80C")]
			public TriangleData(int nSubMesh, int nTriangle)
			{
			}
		}

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TriangleData> listTriangles;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<EdgeData> listEdges;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> listEdgeIndices;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<EdgeKeyByHash, EdgeData> dicEdges;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int nEdgeCount;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> dicSubMeshTriangleCount;

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1099378", Offset = "0x1099378", VA = "0x1099378")]
		public MeshFaceConnectivity()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x10994B8", Offset = "0x10994B8", VA = "0x10994B8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x10995B0", Offset = "0x10995B0", VA = "0x10995B0")]
		public void ResetVisited()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1099670", Offset = "0x1099670", VA = "0x1099670")]
		public void AddEdge(int nSubMesh, Vector3 v1, Vector3 v2, int nVertex1Hash, int nVertex2Hash, int nVertexDataIndex1, int nVertexDataIndex2)
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class MeshDataConnectivity
	{
		[Token(Token = "0x200053A")]
		public struct Face
		{
			[Token(Token = "0x20005C9")]
			public class EqualityComparer : IEqualityComparer<Face>
			{
				[Token(Token = "0x600245B")]
				[Address(RVA = "0x1099310", Offset = "0x1099310", VA = "0x1099310", Slot = "4")]
				public bool Equals(Face x, Face y)
				{
					return default(bool);
				}

				[Token(Token = "0x600245C")]
				[Address(RVA = "0x1099330", Offset = "0x1099330", VA = "0x1099330", Slot = "5")]
				public int GetHashCode(Face x)
				{
					return default(int);
				}

				[Token(Token = "0x600245D")]
				[Address(RVA = "0x1098BC0", Offset = "0x1098BC0", VA = "0x1098BC0")]
				public EqualityComparer()
				{
				}
			}

			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int nSubMesh;

			[Token(Token = "0x4001BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int nFaceIndex;

			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xA954C4", Offset = "0xA954C4", VA = "0xA954C4")]
			public Face(int nSubMesh, int nFaceIndex)
			{
			}
		}

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int s_CurrentSharedFaceHash;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<int, List<Face>> dicHash2FaceList;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Face, List<int>> dicFace2HashList;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Face, bool> dicFace2IsClipped;

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1090D24", Offset = "0x1090D24", VA = "0x1090D24")]
		public MeshDataConnectivity()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1093650", Offset = "0x1093650", VA = "0x1093650")]
		public MeshDataConnectivity GetDeepCopy()
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1098BC8", Offset = "0x1098BC8", VA = "0x1098BC8")]
		public void NotifyNewClippedFace(MeshData meshDataSource, int nSourceSubMesh, int nSourceFaceIndex, int nDestSubMesh, int nDestFaceIndex)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1098FEC", Offset = "0x1098FEC", VA = "0x1098FEC")]
		public static int GetNewHash()
		{
			return default(int);
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x109911C", Offset = "0x109911C", VA = "0x109911C")]
		public void NotifyNewCapFace(int nHash, int nSubMesh, int nFaceIndex)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1098020", Offset = "0x1098020", VA = "0x1098020")]
		public void NotifyRemappedFace(MeshDataConnectivity source, int nSourceSubMesh, int nSourceFaceIndex, int nDestSubMesh, int nDestFaceIndex)
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class MeshData
	{
		[Token(Token = "0x200053B")]
		public class IncreasingSizeComparer : IComparer<MeshData>
		{
			[Token(Token = "0x4001BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int nSplitAxis;

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x10988CC", Offset = "0x10988CC", VA = "0x10988CC")]
			public IncreasingSizeComparer(int nSplitAxis)
			{
			}

			[Token(Token = "0x60022D5")]
			[Address(RVA = "0x10988F8", Offset = "0x10988F8", VA = "0x10988F8", Slot = "4")]
			public int Compare(MeshData a, MeshData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200053C")]
		public class DecreasingSizeComparer : IComparer<MeshData>
		{
			[Token(Token = "0x4001BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int nSplitAxis;

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x10985D8", Offset = "0x10985D8", VA = "0x10985D8")]
			public DecreasingSizeComparer(int nSplitAxis)
			{
			}

			[Token(Token = "0x60022D7")]
			[Address(RVA = "0x1098604", Offset = "0x1098604", VA = "0x1098604", Slot = "4")]
			public int Compare(MeshData a, MeshData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nSubMeshCount;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[][] aaIndices;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int nSplitCloseSubMesh;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VertexData[] aVertexData;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 v3Position;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion qRotation;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 v3Scale;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 v3Min;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 v3Max;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int nCurrentVertexHash;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material[] aMaterials;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public MeshDataConnectivity meshDataConnectivity;

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1090C7C", Offset = "0x1090C7C", VA = "0x1090C7C")]
		private MeshData()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x1090E28", Offset = "0x1090E28", VA = "0x1090E28")]
		public MeshData(Material[] aMaterials, List<int>[] alistIndices, List<VertexData> listVertexData, int nSplitCloseSubMesh, Vector3 v3Position, Quaternion qRotation, Vector3 v3Scale, Matrix4x4 mtxTransformVertices, bool bUseTransform, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1091DB4", Offset = "0x1091DB4", VA = "0x1091DB4")]
		public MeshData(Transform transform, Mesh mesh, Material[] aMaterials, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld, int nSplitCloseSubMesh, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1091EF4", Offset = "0x1091EF4", VA = "0x1091EF4")]
		public MeshData(Vector3 v3Position, Quaternion qRotation, Vector3 v3Scale, Mesh mesh, Material[] aMaterials, Matrix4x4 mtxLocalToWorld, bool bTransformVerticesToWorld, int nSplitCloseSubMesh, bool bBuildVertexHashData)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1092C2C", Offset = "0x1092C2C", VA = "0x1092C2C")]
		public static MeshData CreateBoxMeshData(Vector3 v3Pos, Quaternion qRot, Vector3 v3Scale, Vector3 v3Min, Vector3 v3Max)
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1093320", Offset = "0x1093320", VA = "0x1093320")]
		public MeshData GetDeepCopy()
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1093E14", Offset = "0x1093E14", VA = "0x1093E14")]
		public bool FillMeshFilter(MeshFilter meshFilter, bool bTransformVerticesToLocal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x10948C4", Offset = "0x10948C4", VA = "0x10948C4")]
		public bool FillMeshFilterForConvexHull(MeshFilter meshFilter, bool bTransformVerticesToLocal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1091208", Offset = "0x1091208", VA = "0x1091208")]
		public static void ComputeMinMax(IEnumerable<VertexData> VertexData, ref Vector3 v3Min, ref Vector3 v3Max)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x109157C", Offset = "0x109157C", VA = "0x109157C")]
		private void BuildVertexHashData()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1095714", Offset = "0x1095714", VA = "0x1095714")]
		public bool GetSharedFacesArea(FracturedObject fracturedComponent, MeshData meshData2, out float fSharedArea)
		{
			return default(bool);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1096380", Offset = "0x1096380", VA = "0x1096380")]
		private static bool Face2InsideFace1(FracturedObject fracturedComponent, MeshData meshData1, MeshData meshData2, MeshDataConnectivity.Face face1, MeshDataConnectivity.Face face2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x109705C", Offset = "0x109705C", VA = "0x109705C")]
		public static List<MeshData> PostProcessConnectivity(MeshData meshDataSource, MeshFaceConnectivity connectivity, MeshDataConnectivity meshConnectivity, List<int>[] alistIndices, List<VertexData> listVertexData, int nSplitCloseSubMesh, int nCurrentVertexHash, bool bTransformToLocal)
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1097F60", Offset = "0x1097F60", VA = "0x1097F60")]
		private static bool StillHasFacesToProcess(List<int>[] alistFacesRemaining)
		{
			return default(bool);
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1097854", Offset = "0x1097854", VA = "0x1097854")]
		private static void LookForClosedObjectRecursive(MeshFaceConnectivity connectivity, MeshDataConnectivity meshConnectivity, int nSubMeshStart, int nFaceSubMeshStart, List<int>[] alistIndicesIn, List<VertexData> listVertexDataIn, List<int>[] alistFacesRemainingInOut, int[] aLinearFaceIndexStart, List<int>[] alistIndicesOut, List<VertexData> listVertexDataOut, Dictionary<int, int> dicVertexRemap, MeshDataConnectivity meshConnectivityOut)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000231")]
	public class SupportPlane
	{
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool GUIExpanded;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string GUIName;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool GUIShowInScene;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 v3PlanePosition;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion qPlaneRotation;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 v3PlaneScale;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Mesh planeMesh;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FracturedObject fracturedObject;

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x109AB50", Offset = "0x109AB50", VA = "0x109AB50")]
		public SupportPlane(FracturedObject fracturedObject)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x109B60C", Offset = "0x109B60C", VA = "0x109B60C")]
		public Matrix4x4 GetLocalMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x109B6E4", Offset = "0x109B6E4", VA = "0x109B6E4")]
		public Vector3[] GetBoundingBoxSegments(Bounds bounds)
		{
			return null;
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x109BCD0", Offset = "0x109BCD0", VA = "0x109BCD0")]
		public bool IntersectsWith(GameObject otherGameObject, bool bBelowIsAlsoValid = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x109C7E0", Offset = "0x109C7E0", VA = "0x109C7E0")]
		private static bool TestSegmentVsPlane(Vector3 v1, Vector3 v2, Plane plane, Matrix4x4 mtxToPlaneLocal, float fLimitRight, float fLimitUp, float fLimitForward)
		{
			return default(bool);
		}
	}
}
namespace Poly2Tri
{
	[Token(Token = "0x2000232")]
	public static class P2T
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TriangulationAlgorithm _defaultAlgorithm;

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x18FAD6C", Offset = "0x18FAD6C", VA = "0x18FAD6C")]
		public static void Triangulate(PolygonSet ps)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x18FB034", Offset = "0x18FB034", VA = "0x18FB034")]
		public static void Triangulate(Polygon p)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x18FB12C", Offset = "0x18FB12C", VA = "0x18FB12C")]
		public static void Triangulate(ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x18FB19C", Offset = "0x18FB19C", VA = "0x18FB19C")]
		public static void Triangulate(PointSet ps)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x18FB20C", Offset = "0x18FB20C", VA = "0x18FB20C")]
		public static TriangulationContext CreateContext(TriangulationAlgorithm algorithm)
		{
			return null;
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x18FB0A4", Offset = "0x18FB0A4", VA = "0x18FB0A4")]
		public static void Triangulate(TriangulationAlgorithm algorithm, ITriangulatable t)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x18FB264", Offset = "0x18FB264", VA = "0x18FB264")]
		public static void Triangulate(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x18FB354", Offset = "0x18FB354", VA = "0x18FB354")]
		public static void Warmup()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class DelaunayTriangle
	{
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FixedArray3<TriangulationPoint> Points;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FixedArray3<DelaunayTriangle> Neighbors;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FixedBitArray3 mEdgeIsConstrained;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public FixedBitArray3 EdgeIsDelaunay;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E48C4", Offset = "0x9E48C4")]
		private bool <IsInterior>k__BackingField;

		[Token(Token = "0x17000152")]
		public FixedBitArray3 EdgeIsConstrained
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x18F746C", Offset = "0x18F746C", VA = "0x18F746C")]
			get
			{
				return default(FixedBitArray3);
			}
		}

		[Token(Token = "0x17000153")]
		public bool IsInterior
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x18F7450", Offset = "0x18F7450", VA = "0x18F7450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF00", Offset = "0x9EBF00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x18F7458", Offset = "0x18F7458", VA = "0x18F7458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF10", Offset = "0x9EBF10")]
			set
			{
			}
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x18F792C", Offset = "0x18F792C", VA = "0x18F792C")]
		public DelaunayTriangle(TriangulationPoint p1, TriangulationPoint p2, TriangulationPoint p3)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x18F85B8", Offset = "0x18F85B8", VA = "0x18F85B8")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x18F8668", Offset = "0x18F8668", VA = "0x18F8668")]
		public int IndexCWFrom(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x18F86A0", Offset = "0x18F86A0", VA = "0x18F86A0")]
		public int IndexCCWFrom(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x18F86D8", Offset = "0x18F86D8", VA = "0x18F86D8")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x18F8738", Offset = "0x18F8738", VA = "0x18F8738")]
		private void MarkNeighbor(TriangulationPoint p1, TriangulationPoint p2, DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x18F88FC", Offset = "0x18F88FC", VA = "0x18F88FC")]
		public void MarkNeighbor(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x18F8B14", Offset = "0x18F8B14", VA = "0x18F8B14")]
		public void ClearNeighbors()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x18F8B98", Offset = "0x18F8B98", VA = "0x18F8B98")]
		public void ClearNeighbor(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x18F8C88", Offset = "0x18F8C88", VA = "0x18F8C88")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x18F8D54", Offset = "0x18F8D54", VA = "0x18F8D54")]
		public TriangulationPoint OppositePoint(DelaunayTriangle t, TriangulationPoint p)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x18F8DA0", Offset = "0x18F8DA0", VA = "0x18F8DA0")]
		public DelaunayTriangle NeighborCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x18F8E3C", Offset = "0x18F8E3C", VA = "0x18F8E3C")]
		public DelaunayTriangle NeighborCCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x18F8ED8", Offset = "0x18F8ED8", VA = "0x18F8ED8")]
		public DelaunayTriangle NeighborAcrossFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x18F8F54", Offset = "0x18F8F54", VA = "0x18F8F54")]
		public TriangulationPoint PointCCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x18F7AFC", Offset = "0x18F7AFC", VA = "0x18F7AFC")]
		public TriangulationPoint PointCWFrom(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x18F8FE4", Offset = "0x18F8FE4", VA = "0x18F8FE4")]
		private void RotateCW()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x18F90AC", Offset = "0x18F90AC", VA = "0x18F90AC")]
		public void Legalize(TriangulationPoint oPoint, TriangulationPoint nPoint)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x18F914C", Offset = "0x18F914C", VA = "0x18F914C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x18F938C", Offset = "0x18F938C", VA = "0x18F938C")]
		public void MarkNeighborEdges()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x18F9518", Offset = "0x18F9518", VA = "0x18F9518")]
		public void MarkEdge(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x18F962C", Offset = "0x18F962C", VA = "0x18F962C")]
		public void MarkEdge(List<DelaunayTriangle> tList)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x18F9814", Offset = "0x18F9814", VA = "0x18F9814")]
		public void MarkConstrainedEdge(int index)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x18F98DC", Offset = "0x18F98DC", VA = "0x18F98DC")]
		public void MarkConstrainedEdge(DTSweepConstraint edge)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x18F94D4", Offset = "0x18F94D4", VA = "0x18F94D4")]
		public void MarkConstrainedEdge(TriangulationPoint p, TriangulationPoint q)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x18F99CC", Offset = "0x18F99CC", VA = "0x18F99CC")]
		public double Area()
		{
			return default(double);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x18F9B24", Offset = "0x18F9B24", VA = "0x18F9B24")]
		public TriangulationPoint Centroid()
		{
			return null;
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x18F880C", Offset = "0x18F880C", VA = "0x18F880C")]
		public int EdgeIndex(TriangulationPoint p1, TriangulationPoint p2)
		{
			return default(int);
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x18F9CE8", Offset = "0x18F9CE8", VA = "0x18F9CE8")]
		public bool GetConstrainedEdgeCCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x18F9D44", Offset = "0x18F9D44", VA = "0x18F9D44")]
		public bool GetConstrainedEdgeCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x18F9DA0", Offset = "0x18F9DA0", VA = "0x18F9DA0")]
		public bool GetConstrainedEdgeAcross(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x18F9DDC", Offset = "0x18F9DDC", VA = "0x18F9DDC")]
		protected void SetConstrainedEdge(int idx, bool ce)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x18F9DE8", Offset = "0x18F9DE8", VA = "0x18F9DE8")]
		public void SetConstrainedEdgeCCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x18F9E38", Offset = "0x18F9E38", VA = "0x18F9E38")]
		public void SetConstrainedEdgeCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x18F9E88", Offset = "0x18F9E88", VA = "0x18F9E88")]
		public void SetConstrainedEdgeAcross(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x18F9EBC", Offset = "0x18F9EBC", VA = "0x18F9EBC")]
		public bool GetDelaunayEdgeCCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x18F9F04", Offset = "0x18F9F04", VA = "0x18F9F04")]
		public bool GetDelaunayEdgeCW(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x18F9F4C", Offset = "0x18F9F4C", VA = "0x18F9F4C")]
		public bool GetDelaunayEdgeAcross(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x18F9F74", Offset = "0x18F9F74", VA = "0x18F9F74")]
		public void SetDelaunayEdgeCCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x18F9FC4", Offset = "0x18F9FC4", VA = "0x18F9FC4")]
		public void SetDelaunayEdgeCW(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x18FA014", Offset = "0x18FA014", VA = "0x18FA014")]
		public void SetDelaunayEdgeAcross(TriangulationPoint p, bool ce)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x18FA044", Offset = "0x18FA044", VA = "0x18FA044")]
		public bool GetEdge(int idx, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x18FA404", Offset = "0x18FA404", VA = "0x18FA404")]
		public bool GetEdgeCCW(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x18FA454", Offset = "0x18FA454", VA = "0x18FA454")]
		public bool GetEdgeCW(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x18FA4A4", Offset = "0x18FA4A4", VA = "0x18FA4A4")]
		public bool GetEdgeAcross(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000234")]
	public class AdvancingFront
	{
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode Head;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode Tail;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AdvancingFrontNode Search;

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xCBF920", Offset = "0xCBF920", VA = "0xCBF920")]
		public AdvancingFront(AdvancingFrontNode head, AdvancingFrontNode tail)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xCBF95C", Offset = "0xCBF95C", VA = "0xCBF95C")]
		public void AddNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xCBF960", Offset = "0xCBF960", VA = "0xCBF960")]
		public void RemoveNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xCBF964", Offset = "0xCBF964", VA = "0xCBF964", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xCBFAD8", Offset = "0xCBFAD8", VA = "0xCBFAD8")]
		private AdvancingFrontNode FindSearchNode(double x)
		{
			return null;
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xCBFAE0", Offset = "0xCBFAE0", VA = "0xCBFAE0")]
		public AdvancingFrontNode LocateNode(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xCBFB20", Offset = "0xCBFB20", VA = "0xCBFB20")]
		private AdvancingFrontNode LocateNode(double x)
		{
			return null;
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xCBFBA4", Offset = "0xCBFBA4", VA = "0xCBFBA4")]
		public AdvancingFrontNode LocatePoint(TriangulationPoint point)
		{
			return null;
		}
	}
	[Token(Token = "0x2000235")]
	public class AdvancingFrontNode
	{
		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode Next;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode Prev;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double Value;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangulationPoint Point;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DelaunayTriangle Triangle;

		[Token(Token = "0x17000154")]
		public bool HasNext
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0xCBFD6C", Offset = "0xCBFD6C", VA = "0xCBFD6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000155")]
		public bool HasPrev
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0xCBFD7C", Offset = "0xCBFD7C", VA = "0xCBFD7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xCBFD20", Offset = "0xCBFD20", VA = "0xCBFD20")]
		public AdvancingFrontNode(TriangulationPoint point)
		{
		}
	}
	[Token(Token = "0x2000236")]
	public static class DTSweep
	{
		[Token(Token = "0x4000FC9")]
		private const double PI_div2 = Math.PI / 2.0;

		[Token(Token = "0x4000FCA")]
		private const double PI_3div4 = Math.PI * 3.0 / 4.0;

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xCC4EEC", Offset = "0xCC4EEC", VA = "0xCC4EEC")]
		public static void Triangulate(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xCC4FD0", Offset = "0xCC4FD0", VA = "0xCC4FD0")]
		private static void Sweep(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xCC5258", Offset = "0xCC5258", VA = "0xCC5258")]
		private static void FixupConstrainedEdges(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xCC5590", Offset = "0xCC5590", VA = "0xCC5590")]
		private static void FinalizationConvexHull(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xCC60A0", Offset = "0xCC60A0", VA = "0xCC60A0")]
		private static void TurnAdvancingFrontConvex(DTSweepContext tcx, AdvancingFrontNode b, AdvancingFrontNode c)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xCC549C", Offset = "0xCC549C", VA = "0xCC549C")]
		private static void FinalizationPolygon(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xCC68B4", Offset = "0xCC68B4", VA = "0xCC68B4")]
		private static void FinalizationConstraints(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xCC5C04", Offset = "0xCC5C04", VA = "0xCC5C04")]
		private static AdvancingFrontNode PointEvent(DTSweepContext tcx, TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xCC6988", Offset = "0xCC6988", VA = "0xCC6988")]
		private static AdvancingFrontNode NewFrontTriangle(DTSweepContext tcx, TriangulationPoint point, AdvancingFrontNode node)
		{
			return null;
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xCC5D90", Offset = "0xCC5D90", VA = "0xCC5D90")]
		private static void EdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xCC70A0", Offset = "0xCC70A0", VA = "0xCC70A0")]
		private static void FillEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xCC7750", Offset = "0xCC7750", VA = "0xCC7750")]
		private static void FillRightConcaveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xCC78A4", Offset = "0xCC78A4", VA = "0xCC78A4")]
		private static void FillRightConvexEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xCC7A08", Offset = "0xCC7A08", VA = "0xCC7A08")]
		private static void FillRightBelowEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xCC7454", Offset = "0xCC7454", VA = "0xCC7454")]
		private static void FillRightAboveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xCC7B88", Offset = "0xCC7B88", VA = "0xCC7B88")]
		private static void FillLeftConvexEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xCC7CE4", Offset = "0xCC7CE4", VA = "0xCC7CE4")]
		private static void FillLeftConcaveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xCC7E30", Offset = "0xCC7E30", VA = "0xCC7E30")]
		private static void FillLeftBelowEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xCC75D4", Offset = "0xCC75D4", VA = "0xCC75D4")]
		private static void FillLeftAboveEdgeEvent(DTSweepContext tcx, DTSweepConstraint edge, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xCC6FB4", Offset = "0xCC6FB4", VA = "0xCC6FB4")]
		private static bool IsEdgeSideOfTriangle(DelaunayTriangle triangle, TriangulationPoint ep, TriangulationPoint eq)
		{
			return default(bool);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xCC7114", Offset = "0xCC7114", VA = "0xCC7114")]
		private static void EdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle triangle, TriangulationPoint point)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xCC7FAC", Offset = "0xCC7FAC", VA = "0xCC7FAC")]
		private static void FlipEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle t, TriangulationPoint p)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xCC8564", Offset = "0xCC8564", VA = "0xCC8564")]
		private static bool NextFlipPoint(TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle ot, TriangulationPoint op, out TriangulationPoint newP)
		{
			return default(bool);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xCC840C", Offset = "0xCC840C", VA = "0xCC840C")]
		private static DelaunayTriangle NextFlipTriangle(DTSweepContext tcx, Orientation o, DelaunayTriangle t, DelaunayTriangle ot, TriangulationPoint p, TriangulationPoint op)
		{
			return null;
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xCC8680", Offset = "0xCC8680", VA = "0xCC8680")]
		private static void FlipScanEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle flipTriangle, DelaunayTriangle t, TriangulationPoint p)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xCC6B64", Offset = "0xCC6B64", VA = "0xCC6B64")]
		private static void FillAdvancingFront(DTSweepContext tcx, AdvancingFrontNode n)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xCC8BF4", Offset = "0xCC8BF4", VA = "0xCC8BF4")]
		private static void FillBasin(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xCC9078", Offset = "0xCC9078", VA = "0xCC9078")]
		private static void FillBasinReq(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xCC9290", Offset = "0xCC9290", VA = "0xCC9290")]
		private static bool IsShallow(DTSweepContext tcx, AdvancingFrontNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xCC88DC", Offset = "0xCC88DC", VA = "0xCC88DC")]
		private static double HoleAngle(AdvancingFrontNode node)
		{
			return default(double);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xCC8A9C", Offset = "0xCC8A9C", VA = "0xCC8A9C")]
		private static double BasinAngle(AdvancingFrontNode node)
		{
			return default(double);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xCC6700", Offset = "0xCC6700", VA = "0xCC6700")]
		private static void Fill(DTSweepContext tcx, AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xCC6C8C", Offset = "0xCC6C8C", VA = "0xCC6C8C")]
		private static bool Legalize(DTSweepContext tcx, DelaunayTriangle t)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xCC6204", Offset = "0xCC6204", VA = "0xCC6204")]
		private static void RotateTrianglePair(DelaunayTriangle t, TriangulationPoint p, DelaunayTriangle ot, TriangulationPoint op)
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class DTSweepBasin
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AdvancingFrontNode leftNode;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancingFrontNode bottomNode;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancingFrontNode rightNode;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double width;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool leftHighest;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x18F6DB8", Offset = "0x18F6DB8", VA = "0x18F6DB8")]
		public DTSweepBasin()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class DTSweepConstraint : TriangulationConstraint
	{
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x18F6DC0", Offset = "0x18F6DC0", VA = "0x18F6DC0")]
		public DTSweepConstraint(TriangulationPoint p1, TriangulationPoint p2)
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class DTSweepContext : TriangulationContext
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float ALPHA;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AdvancingFront Front;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E48D4", Offset = "0x9E48D4")]
		private TriangulationPoint <Head>k__BackingField;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E48E4", Offset = "0x9E48E4")]
		private TriangulationPoint <Tail>k__BackingField;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DTSweepBasin Basin;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DTSweepEdgeEvent EdgeEvent;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DTSweepPointComparator _comparator;

		[Token(Token = "0x17000156")]
		public TriangulationPoint Head
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x18F7024", Offset = "0x18F7024", VA = "0x18F7024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF20", Offset = "0x9EBF20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x18F702C", Offset = "0x18F702C", VA = "0x18F702C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF30", Offset = "0x9EBF30")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public TriangulationPoint Tail
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x18F7034", Offset = "0x18F7034", VA = "0x18F7034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF40", Offset = "0x9EBF40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x18F703C", Offset = "0x18F703C", VA = "0x18F703C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF50", Offset = "0x9EBF50")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public override TriangulationAlgorithm Algorithm
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0x18F7044", Offset = "0x18F7044", VA = "0x18F7044", Slot = "4")]
			get
			{
				return default(TriangulationAlgorithm);
			}
		}

		[Token(Token = "0x17000159")]
		public override bool IsDebugEnabled
		{
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0x18F71B8", Offset = "0x18F71B8", VA = "0x18F71B8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x18F71C8", Offset = "0x18F71C8", VA = "0x18F71C8", Slot = "9")]
			protected set
			{
			}
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x18F704C", Offset = "0x18F704C", VA = "0x18F704C")]
		public DTSweepContext()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x18F7294", Offset = "0x18F7294", VA = "0x18F7294")]
		public void RemoveFromList(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x18F7304", Offset = "0x18F7304", VA = "0x18F7304")]
		public void MeshClean(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x18F7308", Offset = "0x18F7308", VA = "0x18F7308")]
		private void MeshCleanReq(DelaunayTriangle triangle)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x18F7524", Offset = "0x18F7524", VA = "0x18F7524", Slot = "7")]
		public override void Clear()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x18F7608", Offset = "0x18F7608", VA = "0x18F7608")]
		public void AddNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x18F7640", Offset = "0x18F7640", VA = "0x18F7640")]
		public void RemoveNode(AdvancingFrontNode node)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x18F7678", Offset = "0x18F7678", VA = "0x18F7678")]
		public AdvancingFrontNode LocateNode(TriangulationPoint point)
		{
			return null;
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x18F76B0", Offset = "0x18F76B0", VA = "0x18F76B0")]
		public void CreateAdvancingFront()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x18F79D8", Offset = "0x18F79D8", VA = "0x18F79D8")]
		public void MapTriangleToNodes(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x18F7B8C", Offset = "0x18F7B8C", VA = "0x18F7B8C", Slot = "5")]
		public override void PrepareTriangulation(ITriangulatable t)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x18F8090", Offset = "0x18F8090", VA = "0x18F8090")]
		public void FinalizeTriangulation()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x18F817C", Offset = "0x18F817C", VA = "0x18F817C", Slot = "6")]
		public override TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b)
		{
			return null;
		}
	}
	[Token(Token = "0x200023A")]
	public class DTSweepDebugContext : TriangulationDebugContext
	{
		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DelaunayTriangle _primaryTriangle;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DelaunayTriangle _secondaryTriangle;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangulationPoint _activePoint;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AdvancingFrontNode _activeNode;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DTSweepConstraint _activeConstraint;

		[Token(Token = "0x1700015A")]
		public DelaunayTriangle PrimaryTriangle
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x18F81EC", Offset = "0x18F81EC", VA = "0x18F81EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0x18F81F4", Offset = "0x18F81F4", VA = "0x18F81F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public DelaunayTriangle SecondaryTriangle
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0x18F8264", Offset = "0x18F8264", VA = "0x18F8264")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0x18F826C", Offset = "0x18F826C", VA = "0x18F826C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public TriangulationPoint ActivePoint
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x18F82D8", Offset = "0x18F82D8", VA = "0x18F82D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x18F82E0", Offset = "0x18F82E0", VA = "0x18F82E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public AdvancingFrontNode ActiveNode
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x18F834C", Offset = "0x18F834C", VA = "0x18F834C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x18F8354", Offset = "0x18F8354", VA = "0x18F8354")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public DTSweepConstraint ActiveConstraint
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x18F83C0", Offset = "0x18F83C0", VA = "0x18F83C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x18F83C8", Offset = "0x18F83C8", VA = "0x18F83C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public bool IsDebugContext
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x18F8460", Offset = "0x18F8460", VA = "0x18F8460")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x18F7254", Offset = "0x18F7254", VA = "0x18F7254")]
		public DTSweepDebugContext(DTSweepContext tcx)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x18F8468", Offset = "0x18F8468", VA = "0x18F8468", Slot = "4")]
		public override void Clear()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class DTSweepEdgeEvent
	{
		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DTSweepConstraint ConstrainedEdge;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Right;

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x18F710C", Offset = "0x18F710C", VA = "0x18F710C")]
		public DTSweepEdgeEvent()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class DTSweepPointComparator : IComparer<TriangulationPoint>
	{
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x18F84B8", Offset = "0x18F84B8", VA = "0x18F84B8", Slot = "4")]
		public int Compare(TriangulationPoint p1, TriangulationPoint p2)
		{
			return default(int);
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x18F7114", Offset = "0x18F7114", VA = "0x18F7114")]
		public DTSweepPointComparator()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class PointOnEdgeException : NotImplementedException
	{
		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public readonly TriangulationPoint A;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly TriangulationPoint B;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly TriangulationPoint C;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x19013A8", Offset = "0x19013A8", VA = "0x19013A8")]
		public PointOnEdgeException(string message, TriangulationPoint a, TriangulationPoint b, TriangulationPoint c)
		{
		}
	}
	[Token(Token = "0x200023E")]
	public interface ITriangulatable
	{
		[Token(Token = "0x17000160")]
		IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x60011CD")]
			get;
		}

		[Token(Token = "0x17000161")]
		TriangulationMode TriangulationMode
		{
			[Token(Token = "0x60011CE")]
			get;
		}

		[Token(Token = "0x17000162")]
		string FileName
		{
			[Token(Token = "0x60011CF")]
			get;
			[Token(Token = "0x60011D0")]
			set;
		}

		[Token(Token = "0x17000163")]
		bool DisplayFlipX
		{
			[Token(Token = "0x60011D1")]
			get;
			[Token(Token = "0x60011D2")]
			set;
		}

		[Token(Token = "0x17000164")]
		bool DisplayFlipY
		{
			[Token(Token = "0x60011D3")]
			get;
			[Token(Token = "0x60011D4")]
			set;
		}

		[Token(Token = "0x17000165")]
		float DisplayRotate
		{
			[Token(Token = "0x60011D5")]
			get;
			[Token(Token = "0x60011D6")]
			set;
		}

		[Token(Token = "0x17000166")]
		double Precision
		{
			[Token(Token = "0x60011D7")]
			get;
			[Token(Token = "0x60011D8")]
			set;
		}

		[Token(Token = "0x17000167")]
		double MinX
		{
			[Token(Token = "0x60011D9")]
			get;
		}

		[Token(Token = "0x17000168")]
		double MaxX
		{
			[Token(Token = "0x60011DA")]
			get;
		}

		[Token(Token = "0x17000169")]
		double MinY
		{
			[Token(Token = "0x60011DB")]
			get;
		}

		[Token(Token = "0x1700016A")]
		double MaxY
		{
			[Token(Token = "0x60011DC")]
			get;
		}

		[Token(Token = "0x1700016B")]
		Rect2D Bounds
		{
			[Token(Token = "0x60011DD")]
			get;
		}

		[Token(Token = "0x60011DE")]
		void Prepare(TriangulationContext tcx);

		[Token(Token = "0x60011DF")]
		void AddTriangle(DelaunayTriangle t);

		[Token(Token = "0x60011E0")]
		void AddTriangles(IEnumerable<DelaunayTriangle> list);

		[Token(Token = "0x60011E1")]
		void ClearTriangles();
	}
	[Token(Token = "0x200023F")]
	public enum Orientation
	{
		[Token(Token = "0x4000FE2")]
		CW,
		[Token(Token = "0x4000FE3")]
		CCW,
		[Token(Token = "0x4000FE4")]
		Collinear
	}
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF0F0", Offset = "0x9DF0F0")]
	public class Contour : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Contour> mHoles;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ITriangulatable mParent;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mName;

		[Token(Token = "0x1700016C")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0xCC1460", Offset = "0xCC1460", VA = "0xCC1460", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0xCC34FC", Offset = "0xCC34FC", VA = "0xCC34FC", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public string Name
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xCC3574", Offset = "0xCC3574", VA = "0xCC3574")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xCC15C8", Offset = "0xCC15C8", VA = "0xCC15C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xCC357C", Offset = "0xCC357C", VA = "0xCC357C", Slot = "27")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xCC35F0", Offset = "0xCC35F0", VA = "0xCC35F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0xCC35F4", Offset = "0xCC35F4", VA = "0xCC35F4", Slot = "28")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x17000170")]
		public string FileName
		{
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0xCC36AC", Offset = "0xCC36AC", VA = "0xCC36AC", Slot = "29")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0xCC3764", Offset = "0xCC3764", VA = "0xCC3764", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0xCC3768", Offset = "0xCC3768", VA = "0xCC3768", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0xCC3820", Offset = "0xCC3820", VA = "0xCC3820", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0xCC3824", Offset = "0xCC3824", VA = "0xCC3824", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0xCC38DC", Offset = "0xCC38DC", VA = "0xCC38DC", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public float DisplayRotate
		{
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0xCC38E0", Offset = "0xCC38E0", VA = "0xCC38E0", Slot = "35")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xCC3998", Offset = "0xCC3998", VA = "0xCC3998", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public double Precision
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xCC399C", Offset = "0xCC399C", VA = "0xCC399C", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xCC3A54", Offset = "0xCC3A54", VA = "0xCC3A54", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public double MinX
		{
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xCC3A58", Offset = "0xCC3A58", VA = "0xCC3A58", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000176")]
		public double MaxX
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xCC3A88", Offset = "0xCC3A88", VA = "0xCC3A88", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000177")]
		public double MinY
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0xCC3AB8", Offset = "0xCC3AB8", VA = "0xCC3AB8", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000178")]
		public double MaxY
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xCC3AE8", Offset = "0xCC3AE8", VA = "0xCC3AE8", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000179")]
		public Rect2D Bounds
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xCC3B18", Offset = "0xCC3B18", VA = "0xCC3B18", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xCC1514", Offset = "0xCC1514", VA = "0xCC1514")]
		public Contour(ITriangulatable parent)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xCC1390", Offset = "0xCC1390", VA = "0xCC1390")]
		public Contour(ITriangulatable parent, IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xCC3DEC", Offset = "0xCC3DEC", VA = "0xCC3DEC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xCC3E54", Offset = "0xCC3E54", VA = "0xCC3E54", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xCC3EBC", Offset = "0xCC3EBC", VA = "0xCC3EBC", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xCC3F2C", Offset = "0xCC3F2C", VA = "0xCC3F2C", Slot = "56")]
		public void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xCC3F44", Offset = "0xCC3F44", VA = "0xCC3F44", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xCC40DC", Offset = "0xCC40DC", VA = "0xCC40DC", Slot = "22")]
		public override void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xCC3B20", Offset = "0xCC3B20", VA = "0xCC3B20")]
		public void AddRange(IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xCC45C0", Offset = "0xCC45C0", VA = "0xCC45C0", Slot = "52")]
		public void Insert(int idx, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xCC45E0", Offset = "0xCC45E0", VA = "0xCC45E0", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xCC45F0", Offset = "0xCC45F0", VA = "0xCC45F0", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xCC4660", Offset = "0xCC4660", VA = "0xCC4660", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xCC4830", Offset = "0xCC4830", VA = "0xCC4830")]
		protected void AddHole(Contour c)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xCC1850", Offset = "0xCC1850", VA = "0xCC1850")]
		public int GetNumHoles(bool parentIsHole)
		{
			return default(int);
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xCC48B0", Offset = "0xCC48B0", VA = "0xCC48B0")]
		public int GetNumHoles()
		{
			return default(int);
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xCC4910", Offset = "0xCC4910", VA = "0xCC4910")]
		public Contour GetHole(int idx)
		{
			return null;
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xCC1BC0", Offset = "0xCC1BC0", VA = "0xCC1BC0")]
		public void GetActualHoles(bool parentIsHole, ref List<Contour> holes)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xCC49BC", Offset = "0xCC49BC", VA = "0xCC49BC")]
		public List<Contour>.Enumerator GetHoleEnumerator()
		{
			return default(List<Contour>.Enumerator);
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xCC3144", Offset = "0xCC3144", VA = "0xCC3144")]
		public void InitializeHoles(ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xCC1E68", Offset = "0xCC1E68", VA = "0xCC1E68")]
		public static void InitializeHoles(List<Contour> holes, ITriangulatable parent, ConstrainedPointSet cps)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xCC4A30", Offset = "0xCC4A30", VA = "0xCC4A30", Slot = "44")]
		public void Prepare(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xCC4AA4", Offset = "0xCC4AA4", VA = "0xCC4AA4", Slot = "45")]
		public void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xCC4B18", Offset = "0xCC4B18", VA = "0xCC4B18", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xCC4B8C", Offset = "0xCC4B8C", VA = "0xCC4B8C", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xCC4C00", Offset = "0xCC4C00", VA = "0xCC4C00")]
		public Point2D FindPointInContour()
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xCC4D8C", Offset = "0xCC4D8C", VA = "0xCC4D8C")]
		public bool IsPointInsideContour(Point2D p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF128", Offset = "0x9DF128")]
	public class Polygon : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<uint, TriangulationPoint> mPointMap;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<DelaunayTriangle> mTriangles;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E48F4", Offset = "0x9E48F4")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4904", Offset = "0x9E4904")]
		private bool <DisplayFlipX>k__BackingField;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4914", Offset = "0x9E4914")]
		private bool <DisplayFlipY>k__BackingField;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4924", Offset = "0x9E4924")]
		private float <DisplayRotate>k__BackingField;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double mPrecision;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<Polygon> mHoles;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<TriangulationPoint> mSteinerPoints;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected PolygonPoint _last;

		[Token(Token = "0x1700017A")]
		public IList<TriangulationPoint> Points
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0x1902E4C", Offset = "0x1902E4C", VA = "0x1902E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0x1902E50", Offset = "0x1902E50", VA = "0x1902E50", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x1902E58", Offset = "0x1902E58", VA = "0x1902E58", Slot = "28")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x1700017D")]
		public string FileName
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0x1902E60", Offset = "0x1902E60", VA = "0x1902E60", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF60", Offset = "0x9EBF60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001217")]
			[Address(RVA = "0x1902E68", Offset = "0x1902E68", VA = "0x1902E68", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF70", Offset = "0x9EBF70")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x1902E70", Offset = "0x1902E70", VA = "0x1902E70", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF80", Offset = "0x9EBF80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x1902E78", Offset = "0x1902E78", VA = "0x1902E78", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF90", Offset = "0x9EBF90")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x1902E84", Offset = "0x1902E84", VA = "0x1902E84", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBFA0", Offset = "0x9EBFA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x1902E8C", Offset = "0x1902E8C", VA = "0x1902E8C", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBFB0", Offset = "0x9EBFB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public float DisplayRotate
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0x1902E98", Offset = "0x1902E98", VA = "0x1902E98", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBFC0", Offset = "0x9EBFC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600121D")]
			[Address(RVA = "0x1902EA0", Offset = "0x1902EA0", VA = "0x1902EA0", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBFD0", Offset = "0x9EBFD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public double Precision
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x1902EA8", Offset = "0x1902EA8", VA = "0x1902EA8", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x1902EB0", Offset = "0x1902EB0", VA = "0x1902EB0", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public double MinX
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x1902EB8", Offset = "0x1902EB8", VA = "0x1902EB8", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000183")]
		public double MaxX
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x1902EE4", Offset = "0x1902EE4", VA = "0x1902EE4", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000184")]
		public double MinY
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x1902F10", Offset = "0x1902F10", VA = "0x1902F10", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000185")]
		public double MaxY
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x1902F3C", Offset = "0x1902F3C", VA = "0x1902F3C", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000186")]
		public Rect2D Bounds
		{
			[Token(Token = "0x6001224")]
			[Address(RVA = "0x1902F68", Offset = "0x1902F68", VA = "0x1902F68", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0x1902F70", Offset = "0x1902F70", VA = "0x1902F70", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001226")]
			[Address(RVA = "0x1903024", Offset = "0x1903024", VA = "0x1903024", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public IList<Polygon> Holes
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0x190309C", Offset = "0x190309C", VA = "0x190309C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x19030A4", Offset = "0x19030A4", VA = "0x19030A4")]
		public Polygon(IList<PolygonPoint> points)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1903508", Offset = "0x1903508", VA = "0x1903508")]
		public Polygon(IEnumerable<PolygonPoint> points)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x19035A4", Offset = "0x19035A4", VA = "0x19035A4")]
		public Polygon(params PolygonPoint[] points)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x19035A8", Offset = "0x19035A8", VA = "0x19035A8", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1903618", Offset = "0x1903618", VA = "0x1903618", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1903688", Offset = "0x1903688", VA = "0x1903688", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x19036A0", Offset = "0x19036A0", VA = "0x19036A0", Slot = "56")]
		public void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x19036B8", Offset = "0x19036B8", VA = "0x19036B8")]
		public void Add(PolygonPoint p)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x19036D0", Offset = "0x19036D0", VA = "0x19036D0", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1903248", Offset = "0x1903248", VA = "0x1903248")]
		public void AddRange(IList<PolygonPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x190387C", Offset = "0x190387C", VA = "0x190387C")]
		public void AddRange(IList<TriangulationPoint> points, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1903B3C", Offset = "0x1903B3C", VA = "0x1903B3C", Slot = "52")]
		public void Insert(int idx, TriangulationPoint p)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1903B5C", Offset = "0x1903B5C", VA = "0x1903B5C", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1903B60", Offset = "0x1903B60", VA = "0x1903B60")]
		public void RemovePoint(PolygonPoint p)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1903DBC", Offset = "0x1903DBC", VA = "0x1903DBC", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1903E2C", Offset = "0x1903E2C", VA = "0x1903E2C", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1903FF8", Offset = "0x1903FF8", VA = "0x1903FF8")]
		public void AddSteinerPoint(TriangulationPoint point)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1904094", Offset = "0x1904094", VA = "0x1904094")]
		public void AddSteinerPoints(List<TriangulationPoint> points)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1904130", Offset = "0x1904130", VA = "0x1904130")]
		public void ClearSteinerPoints()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1904190", Offset = "0x1904190", VA = "0x1904190")]
		public void AddHole(Polygon poly)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x190422C", Offset = "0x190422C", VA = "0x190422C", Slot = "45")]
		public void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x190429C", Offset = "0x190429C", VA = "0x190429C", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x190430C", Offset = "0x190430C", VA = "0x190430C", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x190436C", Offset = "0x190436C", VA = "0x190436C")]
		public bool IsPointInside(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x190474C", Offset = "0x190474C", VA = "0x190474C", Slot = "44")]
		public void Prepare(TriangulationContext tcx)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class PolygonPoint : TriangulationPoint
	{
		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4934", Offset = "0x9E4934")]
		private PolygonPoint <Next>k__BackingField;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4944", Offset = "0x9E4944")]
		private PolygonPoint <Previous>k__BackingField;

		[Token(Token = "0x17000189")]
		public PolygonPoint Next
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x190386C", Offset = "0x190386C", VA = "0x190386C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBFE0", Offset = "0x9EBFE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x1903874", Offset = "0x1903874", VA = "0x1903874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBFF0", Offset = "0x9EBFF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public PolygonPoint Previous
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0x1903DB4", Offset = "0x1903DB4", VA = "0x1903DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC000", Offset = "0x9EC000")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001245")]
			[Address(RVA = "0x1903864", Offset = "0x1903864", VA = "0x1903864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC010", Offset = "0x9EC010")]
			set
			{
			}
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1904E84", Offset = "0x1904E84", VA = "0x1904E84")]
		public PolygonPoint(double x, double y)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1906370", Offset = "0x1906370", VA = "0x1906370")]
		public static Point2D ToBasePoint(PolygonPoint p)
		{
			return null;
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1906374", Offset = "0x1906374", VA = "0x1906374")]
		public static TriangulationPoint ToTriangulationPoint(PolygonPoint p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000243")]
	public class PolygonSet
	{
		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Polygon> _polygons;

		[Token(Token = "0x1700018B")]
		public IEnumerable<Polygon> Polygons
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x18FB02C", Offset = "0x18FB02C", VA = "0x18FB02C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1906378", Offset = "0x1906378", VA = "0x1906378")]
		public PolygonSet()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x19063E8", Offset = "0x19063E8", VA = "0x19063E8")]
		public PolygonSet(Polygon poly)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x190648C", Offset = "0x190648C", VA = "0x190648C")]
		public void Add(Polygon p)
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class PolygonUtil
	{
		[Token(Token = "0x200053D")]
		public enum PolyUnionError
		{
			[Token(Token = "0x4001BF6")]
			None,
			[Token(Token = "0x4001BF7")]
			NoIntersections,
			[Token(Token = "0x4001BF8")]
			Poly1InsidePoly2,
			[Token(Token = "0x4001BF9")]
			InfiniteLoop
		}

		[Token(Token = "0x200053E")]
		[Flags]
		public enum PolyOperation : uint
		{
			[Token(Token = "0x4001BFB")]
			None = 0u,
			[Token(Token = "0x4001BFC")]
			Union = 1u,
			[Token(Token = "0x4001BFD")]
			Intersect = 2u,
			[Token(Token = "0x4001BFE")]
			Subtract = 4u
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x19064FC", Offset = "0x19064FC", VA = "0x19064FC")]
		public static Point2DList.WindingOrderType CalculateWindingOrder(IList<Point2D> l)
		{
			return default(Point2DList.WindingOrderType);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x19068E0", Offset = "0x19068E0", VA = "0x19068E0")]
		public static bool PolygonsAreSame2D(IList<Point2D> poly1, IList<Point2D> poly2)
		{
			return default(bool);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1904370", Offset = "0x1904370", VA = "0x1904370")]
		public static bool PointInPolygon2D(IList<Point2D> polygon, Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1906D80", Offset = "0x1906D80", VA = "0x1906D80")]
		public static bool PolygonsIntersect2D(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x1907304", Offset = "0x1907304", VA = "0x1907304")]
		public bool PolygonContainsPolygon(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1907320", Offset = "0x1907320", VA = "0x1907320")]
		public static bool PolygonContainsPolygon(IList<Point2D> poly1, Rect2D boundRect1, IList<Point2D> poly2, Rect2D boundRect2, bool runIntersectionTest)
		{
			return default(bool);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x19075E4", Offset = "0x19075E4", VA = "0x19075E4")]
		public static void ClipPolygonToEdge2D(Point2D edgeBegin, Point2D edgeEnd, IList<Point2D> poly, out List<Point2D> outPoly)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x1908460", Offset = "0x1908460", VA = "0x1908460")]
		public static void ClipPolygonToPolygon(IList<Point2D> poly, IList<Point2D> clipPoly, out List<Point2D> outPoly)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x190879C", Offset = "0x190879C", VA = "0x190879C")]
		public static PolyUnionError PolygonUnion(Point2DList polygon1, Point2DList polygon2, out Point2DList union)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x1908878", Offset = "0x1908878", VA = "0x1908878")]
		protected static void PolygonUnionInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x1908DEC", Offset = "0x1908DEC", VA = "0x1908DEC")]
		public static PolyUnionError PolygonIntersect(Point2DList polygon1, Point2DList polygon2, out Point2DList intersectOut)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1908EC8", Offset = "0x1908EC8", VA = "0x1908EC8")]
		protected static void PolygonIntersectInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x19094CC", Offset = "0x19094CC", VA = "0x19094CC")]
		public static PolyUnionError PolygonSubtract(Point2DList polygon1, Point2DList polygon2, out Point2DList subtract)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x19095A8", Offset = "0x19095A8", VA = "0x19095A8")]
		public static void PolygonSubtractInternal(PolygonOperationContext ctx)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1909C68", Offset = "0x1909C68", VA = "0x1909C68")]
		public static PolyUnionError PolygonOperation(PolyOperation operations, Point2DList polygon1, Point2DList polygon2, out Dictionary<uint, Point2DList> results)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1909D28", Offset = "0x1909D28", VA = "0x1909D28")]
		public static PolyUnionError PolygonOperation(PolygonOperationContext ctx)
		{
			return default(PolyUnionError);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1909D8C", Offset = "0x1909D8C", VA = "0x1909D8C")]
		public static List<Point2DList> SplitComplexPolygon(Point2DList verts, double epsilon)
		{
			return null;
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x190B710", Offset = "0x190B710", VA = "0x190B710")]
		private static List<Point2DList> SplitComplexPolygonCleanup(IList<Point2D> orig)
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x190BDE0", Offset = "0x190BDE0", VA = "0x190BDE0")]
		public PolygonUtil()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class EdgeIntersectInfo
	{
		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4954", Offset = "0x9E4954")]
		private Edge <EdgeOne>k__BackingField;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4964", Offset = "0x9E4964")]
		private Edge <EdgeTwo>k__BackingField;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4974", Offset = "0x9E4974")]
		private Point2D <IntersectionPoint>k__BackingField;

		[Token(Token = "0x1700018C")]
		public Edge EdgeOne
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0x18FA5AC", Offset = "0x18FA5AC", VA = "0x18FA5AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC020", Offset = "0x9EC020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x18FA594", Offset = "0x18FA594", VA = "0x18FA594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC030", Offset = "0x9EC030")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public Edge EdgeTwo
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0x18FA5B4", Offset = "0x18FA5B4", VA = "0x18FA5B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC040", Offset = "0x9EC040")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x18FA59C", Offset = "0x18FA59C", VA = "0x18FA59C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC050", Offset = "0x9EC050")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public Point2D IntersectionPoint
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x18FA5BC", Offset = "0x18FA5BC", VA = "0x18FA5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC060", Offset = "0x9EC060")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x18FA5A4", Offset = "0x18FA5A4", VA = "0x18FA5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC070", Offset = "0x9EC070")]
			private set
			{
			}
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x18FA554", Offset = "0x18FA554", VA = "0x18FA554")]
		public EdgeIntersectInfo(Edge edgeOne, Edge edgeTwo, Point2D intersectionPoint)
		{
		}
	}
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF160", Offset = "0x9DF160")]
	public class SplitComplexPolygonNode
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<SplitComplexPolygonNode> mConnected;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Point2D mPosition;

		[Token(Token = "0x1700018F")]
		public int NumConnected
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0x190B580", Offset = "0x190B580", VA = "0x190B580")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000190")]
		public Point2D Position
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x190B03C", Offset = "0x190B03C", VA = "0x190B03C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001268")]
			[Address(RVA = "0x190CA84", Offset = "0x190CA84", VA = "0x190CA84")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public SplitComplexPolygonNode Item
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x190AF94", Offset = "0x190AF94", VA = "0x190AF94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x190CA8C", Offset = "0x190CA8C", VA = "0x190CA8C")]
		public SplitComplexPolygonNode()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x190AE54", Offset = "0x190AE54", VA = "0x190AE54")]
		public SplitComplexPolygonNode(Point2D pos)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x190CAFC", Offset = "0x190CAFC", VA = "0x190CAFC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x190CBE0", Offset = "0x190CBE0", VA = "0x190CBE0")]
		public bool Equals(SplitComplexPolygonNode pn)
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x190CC04", Offset = "0x190CC04", VA = "0x190CC04", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x190B004", Offset = "0x190B004", VA = "0x190B004")]
		public static bool operator ==(SplitComplexPolygonNode lhs, SplitComplexPolygonNode rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x190B5E0", Offset = "0x190B5E0", VA = "0x190B5E0")]
		public static bool operator !=(SplitComplexPolygonNode lhs, SplitComplexPolygonNode rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x190CC0C", Offset = "0x190CC0C", VA = "0x190CC0C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x190CDCC", Offset = "0x190CDCC", VA = "0x190CDCC")]
		private bool IsRighter(double sinA, double cosA, double sinB, double cosB)
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x190CE0C", Offset = "0x190CE0C", VA = "0x190CE0C")]
		private int remainder(int x, int modulus)
		{
			return default(int);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x190AED8", Offset = "0x190AED8", VA = "0x190AED8")]
		public void AddConnection(SplitComplexPolygonNode toMe)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x190B510", Offset = "0x190B510", VA = "0x190B510")]
		public void RemoveConnection(SplitComplexPolygonNode fromMe)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x190CE24", Offset = "0x190CE24", VA = "0x190CE24")]
		private void RemoveConnectionByIndex(int index)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x190B62C", Offset = "0x190B62C", VA = "0x190B62C")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x190CED4", Offset = "0x190CED4", VA = "0x190CED4")]
		private bool IsConnectedTo(SplitComplexPolygonNode me)
		{
			return default(bool);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x190BA84", Offset = "0x190BA84", VA = "0x190BA84")]
		public SplitComplexPolygonNode GetRightestConnection(SplitComplexPolygonNode incoming)
		{
			return null;
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x190B68C", Offset = "0x190B68C", VA = "0x190B68C")]
		public SplitComplexPolygonNode GetRightestConnection(Point2D incomingDir)
		{
			return null;
		}
	}
	[Token(Token = "0x2000247")]
	public class PolygonOperationContext
	{
		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PolygonUtil.PolyOperation mOperations;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Point2DList mOriginalPolygon1;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Point2DList mOriginalPolygon2;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Point2DList mPoly1;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Point2DList mPoly2;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<EdgeIntersectInfo> mIntersections;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int mStartingIndex;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PolygonUtil.PolyUnionError mError;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> mPoly1VectorAngles;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<int> mPoly2VectorAngles;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<uint, Point2DList> mOutput;

		[Token(Token = "0x17000192")]
		public Point2DList Union
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x19051E8", Offset = "0x19051E8", VA = "0x19051E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public Point2DList Intersect
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x19052B0", Offset = "0x19052B0", VA = "0x19052B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public Point2DList Subtract
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x1905378", Offset = "0x1905378", VA = "0x1905378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x1905440", Offset = "0x1905440", VA = "0x1905440")]
		public PolygonOperationContext()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x19054B0", Offset = "0x19054B0", VA = "0x19054B0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1905540", Offset = "0x1905540", VA = "0x1905540")]
		public bool Init(PolygonUtil.PolyOperation operations, Point2DList polygon1, Point2DList polygon2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1905DA0", Offset = "0x1905DA0", VA = "0x1905DA0")]
		private bool VerticesIntersect(Point2DList polygon1, Point2DList polygon2, out List<EdgeIntersectInfo> intersections)
		{
			return default(bool);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x19060E4", Offset = "0x19060E4", VA = "0x19060E4")]
		public bool PointInPolygonAngle(Point2D point, Point2DList polygon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1906218", Offset = "0x1906218", VA = "0x1906218")]
		public double VectorAngle(Point2D p1, Point2D p2)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000248")]
	public class ConstrainedPointSet : PointSet
	{
		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<uint, TriangulationConstraint> mConstraintMap;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Contour> mHoles;

		[Token(Token = "0x17000195")]
		public override TriangulationMode TriangulationMode
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0xCBFD8C", Offset = "0xCBFD8C", VA = "0xCBFD8C", Slot = "61")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xCBFD94", Offset = "0xCBFD94", VA = "0xCBFD94")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xCC01D0", Offset = "0xCC01D0", VA = "0xCC01D0")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds, List<TriangulationConstraint> constraints)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xCC04D4", Offset = "0xCC04D4", VA = "0xCC04D4")]
		public ConstrainedPointSet(List<TriangulationPoint> bounds, int[] indices)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xCBFE44", Offset = "0xCBFE44", VA = "0xCBFE44")]
		protected void AddBoundaryConstraints()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xCC0938", Offset = "0xCC0938", VA = "0xCC0938", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xCC09D4", Offset = "0xCC09D4", VA = "0xCC09D4", Slot = "62")]
		public override void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xCC09E4", Offset = "0xCC09E4", VA = "0xCC09E4", Slot = "63")]
		public override bool AddRange(List<TriangulationPoint> points)
		{
			return default(bool);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xCC0B14", Offset = "0xCC0B14", VA = "0xCC0B14")]
		public bool AddHole(List<TriangulationPoint> points, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xCC0290", Offset = "0xCC0290", VA = "0xCC0290")]
		public bool AddConstraints(List<TriangulationConstraint> constraints)
		{
			return default(bool);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xCC06E8", Offset = "0xCC06E8", VA = "0xCC06E8")]
		public bool AddConstraint(TriangulationConstraint tc)
		{
			return default(bool);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xCC15D0", Offset = "0xCC15D0", VA = "0xCC15D0")]
		public bool TryGetConstraint(uint constraintCode, out TriangulationConstraint tc)
		{
			return default(bool);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xCC1648", Offset = "0xCC1648", VA = "0xCC1648")]
		public int GetNumConstraints()
		{
			return default(int);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xCC16A8", Offset = "0xCC16A8", VA = "0xCC16A8")]
		public Dictionary<uint, TriangulationConstraint>.Enumerator GetConstraintEnumerator()
		{
			return default(Dictionary<uint, TriangulationConstraint>.Enumerator);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xCC171C", Offset = "0xCC171C", VA = "0xCC171C")]
		public int GetNumHoles()
		{
			return default(int);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xCC1998", Offset = "0xCC1998", VA = "0xCC1998")]
		public Contour GetHole(int idx)
		{
			return null;
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xCC1A44", Offset = "0xCC1A44", VA = "0xCC1A44")]
		public int GetActualHoles(out List<Contour> holes)
		{
			return default(int);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xCC1D30", Offset = "0xCC1D30", VA = "0xCC1D30")]
		protected void InitializeHoles()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xCC3280", Offset = "0xCC3280", VA = "0xCC3280", Slot = "65")]
		public override bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xCC32A8", Offset = "0xCC32A8", VA = "0xCC32A8", Slot = "66")]
		public override void Prepare(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xCC342C", Offset = "0xCC342C", VA = "0xCC342C", Slot = "64")]
		public override void AddTriangle(DelaunayTriangle t)
		{
		}
	}
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF198", Offset = "0x9DF198")]
	public class PointSet : Point2DList, ITriangulatable, IEnumerable<TriangulationPoint>, IEnumerable, IList<TriangulationPoint>, ICollection<TriangulationPoint>
	{
		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<uint, TriangulationPoint> mPointMap;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4984", Offset = "0x9E4984")]
		private IList<DelaunayTriangle> <Triangles>k__BackingField;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4994", Offset = "0x9E4994")]
		private string <FileName>k__BackingField;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E49A4", Offset = "0x9E49A4")]
		private bool <DisplayFlipX>k__BackingField;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E49B4", Offset = "0x9E49B4")]
		private bool <DisplayFlipY>k__BackingField;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E49C4", Offset = "0x9E49C4")]
		private float <DisplayRotate>k__BackingField;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected double mPrecision;

		[Token(Token = "0x17000196")]
		public IList<TriangulationPoint> Points
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0x19013E8", Offset = "0x19013E8", VA = "0x19013E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x19013EC", Offset = "0x19013EC", VA = "0x19013EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public IList<DelaunayTriangle> Triangles
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x19013F0", Offset = "0x19013F0", VA = "0x19013F0", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC080", Offset = "0x9EC080")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x19013F8", Offset = "0x19013F8", VA = "0x19013F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC090", Offset = "0x9EC090")]
			private set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public string FileName
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x1901400", Offset = "0x1901400", VA = "0x1901400", Slot = "29")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0A0", Offset = "0x9EC0A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x1901408", Offset = "0x1901408", VA = "0x1901408", Slot = "30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0B0", Offset = "0x9EC0B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public bool DisplayFlipX
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x1901410", Offset = "0x1901410", VA = "0x1901410", Slot = "31")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0C0", Offset = "0x9EC0C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x1901418", Offset = "0x1901418", VA = "0x1901418", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0D0", Offset = "0x9EC0D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public bool DisplayFlipY
		{
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x1901424", Offset = "0x1901424", VA = "0x1901424", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0E0", Offset = "0x9EC0E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x190142C", Offset = "0x190142C", VA = "0x190142C", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0F0", Offset = "0x9EC0F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public float DisplayRotate
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x1901438", Offset = "0x1901438", VA = "0x1901438", Slot = "35")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC100", Offset = "0x9EC100")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x1901440", Offset = "0x1901440", VA = "0x1901440", Slot = "36")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC110", Offset = "0x9EC110")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public double Precision
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x1901448", Offset = "0x1901448", VA = "0x1901448", Slot = "37")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x1901450", Offset = "0x1901450", VA = "0x1901450", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public double MinX
		{
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0x1901458", Offset = "0x1901458", VA = "0x1901458", Slot = "39")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700019E")]
		public double MaxX
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x190148C", Offset = "0x190148C", VA = "0x190148C", Slot = "40")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700019F")]
		public double MinY
		{
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0x19014C0", Offset = "0x19014C0", VA = "0x19014C0", Slot = "41")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001A0")]
		public double MaxY
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x19014F4", Offset = "0x19014F4", VA = "0x19014F4", Slot = "42")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001A1")]
		public Rect2D Bounds
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0x1901528", Offset = "0x1901528", VA = "0x1901528", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public virtual TriangulationMode TriangulationMode
		{
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0x1901530", Offset = "0x1901530", VA = "0x1901530", Slot = "61")]
			get
			{
				return default(TriangulationMode);
			}
		}

		[Token(Token = "0x170001A3")]
		public new TriangulationPoint Item
		{
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0x1901538", Offset = "0x1901538", VA = "0x1901538", Slot = "49")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x19015EC", Offset = "0x19015EC", VA = "0x19015EC", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1901664", Offset = "0x1901664", VA = "0x1901664")]
		public PointSet(List<TriangulationPoint> bounds)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1901988", Offset = "0x1901988", VA = "0x1901988", Slot = "48")]
		private IEnumerator<TriangulationPoint> System.Collections.Generic.IEnumerable<Poly2Tri.TriangulationPoint>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x1901A2C", Offset = "0x1901A2C", VA = "0x1901A2C", Slot = "51")]
		public int IndexOf(TriangulationPoint p)
		{
			return default(int);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1901A9C", Offset = "0x1901A9C", VA = "0x1901A9C", Slot = "19")]
		public override void Add(Point2D p)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1901B34", Offset = "0x1901B34", VA = "0x1901B34", Slot = "62")]
		public virtual void Add(TriangulationPoint p)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x1901B40", Offset = "0x1901B40", VA = "0x1901B40", Slot = "20")]
		protected override void Add(Point2D p, int idx, bool constrainToBounds)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x190185C", Offset = "0x190185C", VA = "0x190185C")]
		protected bool Add(TriangulationPoint p, int idx, bool constrainToBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x1901DF8", Offset = "0x1901DF8", VA = "0x1901DF8", Slot = "22")]
		public override void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x1901F9C", Offset = "0x1901F9C", VA = "0x1901F9C", Slot = "63")]
		public virtual bool AddRange(List<TriangulationPoint> points)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x19020C8", Offset = "0x19020C8", VA = "0x19020C8")]
		public bool TryGetPoint(double x, double y, out TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x190226C", Offset = "0x190226C", VA = "0x190226C", Slot = "52")]
		public void Insert(int idx, TriangulationPoint item)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x19022E4", Offset = "0x19022E4", VA = "0x19022E4", Slot = "24")]
		public override bool Remove(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x1902354", Offset = "0x1902354", VA = "0x1902354", Slot = "60")]
		public bool Remove(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x19023C4", Offset = "0x19023C4", VA = "0x19023C4", Slot = "25")]
		public override void RemoveAt(int idx)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x1902458", Offset = "0x1902458", VA = "0x1902458", Slot = "58")]
		public bool Contains(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x19024C8", Offset = "0x19024C8", VA = "0x19024C8", Slot = "59")]
		public void CopyTo(TriangulationPoint[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x1902694", Offset = "0x1902694", VA = "0x1902694")]
		protected bool ConstrainPointToBounds(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x1901BE8", Offset = "0x1901BE8", VA = "0x1901BE8")]
		protected bool ConstrainPointToBounds(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x190289C", Offset = "0x190289C", VA = "0x190289C", Slot = "64")]
		public virtual void AddTriangle(DelaunayTriangle t)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x1902964", Offset = "0x1902964", VA = "0x1902964", Slot = "46")]
		public void AddTriangles(IEnumerable<DelaunayTriangle> list)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x1902BF8", Offset = "0x1902BF8", VA = "0x1902BF8", Slot = "47")]
		public void ClearTriangles()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x1902CB0", Offset = "0x1902CB0", VA = "0x1902CB0", Slot = "65")]
		public virtual bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1902CB8", Offset = "0x1902CB8", VA = "0x1902CB8", Slot = "66")]
		public virtual void Prepare(TriangulationContext tcx)
		{
		}
	}
	[Token(Token = "0x200024A")]
	public enum TriangulationAlgorithm
	{
		[Token(Token = "0x400100F")]
		DTSweep
	}
	[Token(Token = "0x200024B")]
	public class Edge
	{
		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Point2D mP;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Point2D mQ;

		[Token(Token = "0x170001A4")]
		public Point2D EdgeStart
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x18FA4D4", Offset = "0x18FA4D4", VA = "0x18FA4D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x18FA4DC", Offset = "0x18FA4DC", VA = "0x18FA4DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public Point2D EdgeEnd
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x18FA4E4", Offset = "0x18FA4E4", VA = "0x18FA4E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x18FA4EC", Offset = "0x18FA4EC", VA = "0x18FA4EC")]
			set
			{
			}
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x18FA4F4", Offset = "0x18FA4F4", VA = "0x18FA4F4")]
		public Edge()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x18FA51C", Offset = "0x18FA51C", VA = "0x18FA51C")]
		public Edge(Point2D edgeStart, Point2D edgeEnd)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class TriangulationConstraint : Edge
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint mContraintCode;

		[Token(Token = "0x170001A6")]
		public TriangulationPoint P
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x18F9948", Offset = "0x18F9948", VA = "0x18F9948")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x190CF44", Offset = "0x190CF44", VA = "0x190CF44")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public TriangulationPoint Q
		{
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x18F6F04", Offset = "0x18F6F04", VA = "0x18F6F04")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x190CF9C", Offset = "0x190CF9C", VA = "0x190CF9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public uint ConstraintCode
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x190CFB8", Offset = "0x190CFB8", VA = "0x190CFB8")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x18F6DFC", Offset = "0x18F6DFC", VA = "0x18F6DFC")]
		public TriangulationConstraint(TriangulationPoint p1, TriangulationPoint p2)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x190CFC0", Offset = "0x190CFC0", VA = "0x190CFC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x190CF60", Offset = "0x190CF60", VA = "0x190CF60")]
		public void CalculateContraintCode()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x190D2B4", Offset = "0x190D2B4", VA = "0x190D2B4")]
		public static uint CalculateContraintCode(TriangulationPoint p, TriangulationPoint q)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200024D")]
	public abstract class TriangulationContext
	{
		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E49D4", Offset = "0x9E49D4")]
		private TriangulationDebugContext <DebugContext>k__BackingField;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<DelaunayTriangle> Triangles;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<TriangulationPoint> Points;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E49E4", Offset = "0x9E49E4")]
		private TriangulationMode <TriangulationMode>k__BackingField;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E49F4", Offset = "0x9E49F4")]
		private ITriangulatable <Triangulatable>k__BackingField;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4A04", Offset = "0x9E4A04")]
		private int <StepCount>k__BackingField;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4A14", Offset = "0x9E4A14")]
		private bool <IsDebugEnabled>k__BackingField;

		[Token(Token = "0x170001A9")]
		public TriangulationDebugContext DebugContext
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x18F724C", Offset = "0x18F724C", VA = "0x18F724C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC120", Offset = "0x9EC120")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x18F7280", Offset = "0x18F7280", VA = "0x18F7280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC130", Offset = "0x9EC130")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public TriangulationMode TriangulationMode
		{
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x190D3C0", Offset = "0x190D3C0", VA = "0x190D3C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC140", Offset = "0x9EC140")]
			get
			{
				return default(TriangulationMode);
			}
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0x190D3C8", Offset = "0x190D3C8", VA = "0x190D3C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC150", Offset = "0x9EC150")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public ITriangulatable Triangulatable
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x18F7464", Offset = "0x18F7464", VA = "0x18F7464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC160", Offset = "0x9EC160")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x190D3D0", Offset = "0x190D3D0", VA = "0x190D3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC170", Offset = "0x9EC170")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public int StepCount
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x190D3D8", Offset = "0x190D3D8", VA = "0x190D3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC180", Offset = "0x9EC180")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x190D3E0", Offset = "0x190D3E0", VA = "0x190D3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC190", Offset = "0x9EC190")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public abstract TriangulationAlgorithm Algorithm
		{
			[Token(Token = "0x60012DE")]
			get;
		}

		[Token(Token = "0x170001AE")]
		public virtual bool IsDebugEnabled
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x18F71C0", Offset = "0x18F71C0", VA = "0x18F71C0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1A0", Offset = "0x9EC1A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x18F7288", Offset = "0x18F7288", VA = "0x18F7288", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1B0", Offset = "0x9EC1B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public DTSweepDebugContext DTDebugContext
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x190D3F8", Offset = "0x190D3F8", VA = "0x190D3F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x190D3E8", Offset = "0x190D3E8", VA = "0x190D3E8")]
		public void Done()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x18F7ECC", Offset = "0x18F7ECC", VA = "0x18F7ECC", Slot = "5")]
		public virtual void PrepareTriangulation(ITriangulatable t)
		{
		}

		[Token(Token = "0x60012E0")]
		public abstract TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b);

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x18F8260", Offset = "0x18F8260", VA = "0x18F8260")]
		public void Update(string message)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x18F758C", Offset = "0x18F758C", VA = "0x18F758C", Slot = "7")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x18F711C", Offset = "0x18F711C", VA = "0x18F711C")]
		protected TriangulationContext()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public abstract class TriangulationDebugContext
	{
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected TriangulationContext _tcx;

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x18F8434", Offset = "0x18F8434", VA = "0x18F8434")]
		public TriangulationDebugContext(TriangulationContext tcx)
		{
		}

		[Token(Token = "0x60012E8")]
		public abstract void Clear();
	}
	[Token(Token = "0x200024F")]
	public enum TriangulationMode
	{
		[Token(Token = "0x400101C")]
		Unconstrained,
		[Token(Token = "0x400101D")]
		Constrained,
		[Token(Token = "0x400101E")]
		Polygon
	}
	[Token(Token = "0x2000250")]
	public class TriangulationPoint : Point2D
	{
		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly double kVertexCodeDefaultPrecision;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected uint mVertexCode;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4A24", Offset = "0x9E4A24")]
		private List<DTSweepConstraint> <Edges>k__BackingField;

		[Token(Token = "0x170001B0")]
		public override double X
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x190D47C", Offset = "0x190D47C", VA = "0x190D47C", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60012EA")]
			[Address(RVA = "0x190D484", Offset = "0x190D484", VA = "0x190D484", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public override double Y
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x190D520", Offset = "0x190D520", VA = "0x190D520", Slot = "7")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60012EC")]
			[Address(RVA = "0x190D528", Offset = "0x190D528", VA = "0x190D528", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public uint VertexCode
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x1901DF0", Offset = "0x1901DF0", VA = "0x1901DF0")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001B3")]
		public List<DTSweepConstraint> Edges
		{
			[Token(Token = "0x60012EE")]
			[Address(RVA = "0x190D5C4", Offset = "0x190D5C4", VA = "0x190D5C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1C0", Offset = "0x9EC1C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x190D5CC", Offset = "0x190D5CC", VA = "0x190D5CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1D0", Offset = "0x9EC1D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public bool HasEdges
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x190D5D4", Offset = "0x190D5D4", VA = "0x190D5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x18F8008", Offset = "0x18F8008", VA = "0x18F8008")]
		public TriangulationPoint(double x, double y)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x190D5E4", Offset = "0x190D5E4", VA = "0x190D5E4")]
		public TriangulationPoint(double x, double y, double precision)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x190D684", Offset = "0x190D684", VA = "0x190D684", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x190D700", Offset = "0x190D700", VA = "0x190D700", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x190D708", Offset = "0x190D708", VA = "0x190D708", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x190D7B4", Offset = "0x190D7B4", VA = "0x190D7B4", Slot = "9")]
		public override void Set(double x, double y)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x190218C", Offset = "0x190218C", VA = "0x190218C")]
		public static uint CreateVertexCode(double x, double y, double precision)
		{
			return default(uint);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x18F6F88", Offset = "0x18F6F88", VA = "0x18F6F88")]
		public void AddEdge(DTSweepConstraint e)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x190D85C", Offset = "0x190D85C", VA = "0x190D85C")]
		public bool HasEdge(TriangulationPoint p)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x18FA16C", Offset = "0x18FA16C", VA = "0x18FA16C")]
		public bool GetEdge(TriangulationPoint p, out DTSweepConstraint edge)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x190D884", Offset = "0x190D884", VA = "0x190D884")]
		public static Point2D ToPoint2D(TriangulationPoint p)
		{
			return null;
		}
	}
	[Token(Token = "0x2000251")]
	public class TriangulationPointEnumerator : IEnumerator<TriangulationPoint>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IList<Point2D> mPoints;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int position;

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x190D9C0", Offset = "0x190D9C0", VA = "0x190D9C0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public TriangulationPoint Current
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x190D9C4", Offset = "0x190D9C4", VA = "0x190D9C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x19019F8", Offset = "0x19019F8", VA = "0x19019F8")]
		public TriangulationPointEnumerator(IList<Point2D> points)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x190D8DC", Offset = "0x190D8DC", VA = "0x190D8DC", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x190D9B0", Offset = "0x190D9B0", VA = "0x190D9B0", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x190D9BC", Offset = "0x190D9BC", VA = "0x190D9BC", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class TriangulationPointList : Point2DList
	{
		[Token(Token = "0x6001303")]
		[Address(RVA = "0x190DB54", Offset = "0x190DB54", VA = "0x190DB54")]
		public TriangulationPointList()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class PointGenerator
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RNG;

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1901098", Offset = "0x1901098", VA = "0x1901098")]
		public static List<TriangulationPoint> UniformDistribution(int n, double scale)
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x19011FC", Offset = "0x19011FC", VA = "0x19011FC")]
		public static List<TriangulationPoint> UniformGrid(int n, double scale)
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1901334", Offset = "0x1901334", VA = "0x1901334")]
		public PointGenerator()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class PolygonGenerator
	{
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly System.Random RNG;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static double PI_2;

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1904B3C", Offset = "0x1904B3C", VA = "0x1904B3C")]
		public static Polygon RandomCircleSweep(double scale, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1904F00", Offset = "0x1904F00", VA = "0x1904F00")]
		public static Polygon RandomCircleSweep2(double scale, int vertexCount)
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1905158", Offset = "0x1905158", VA = "0x1905158")]
		public PolygonGenerator()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class TriangulationUtil
	{
		[Token(Token = "0x600130C")]
		[Address(RVA = "0x190DBB8", Offset = "0x190DBB8", VA = "0x190DBB8")]
		public static bool SmartIncircle(Point2D pa, Point2D pb, Point2D pc, Point2D pd)
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x190DD8C", Offset = "0x190DD8C", VA = "0x190DD8C")]
		public static bool InScanArea(Point2D pa, Point2D pb, Point2D pc, Point2D pd)
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x18FF738", Offset = "0x18FF738", VA = "0x18FF738")]
		public static Orientation Orient2d(Point2D pa, Point2D pb, Point2D pc)
		{
			return default(Orientation);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x190DF10", Offset = "0x190DF10", VA = "0x190DF10")]
		public static bool PointInBoundingBox(double xmin, double xmax, double ymin, double ymax, Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x190DFBC", Offset = "0x190DFBC", VA = "0x190DFBC")]
		public static bool PointOnLineSegment2D(Point2D lineStart, Point2D lineEnd, Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x190E0D8", Offset = "0x190E0D8", VA = "0x190E0D8")]
		public static bool PointOnLineSegment2D(double x1, double y1, double x2, double y2, double x, double y, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x190C88C", Offset = "0x190C88C", VA = "0x190C88C")]
		public static bool RectsIntersect(Rect2D r1, Rect2D r2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x190B044", Offset = "0x190B044", VA = "0x190B044")]
		public static bool LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, bool firstIsSegment, bool secondIsSegment, bool coincidentEndPointCollisions, ref Point2D pIntersectionPt, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x18FFCE8", Offset = "0x18FFCE8", VA = "0x18FFCE8")]
		public static bool LinesIntersect2D(Point2D ptStart0, Point2D ptEnd0, Point2D ptStart1, Point2D ptEnd1, ref Point2D pIntersectionPt, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x190E268", Offset = "0x190E268", VA = "0x190E268")]
		public static double LI2DDotProduct(Point2D v0, Point2D v1)
		{
			return default(double);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1908114", Offset = "0x1908114", VA = "0x1908114")]
		public static bool RaysIntersect2D(Point2D ptRayOrigin0, Point2D ptRayVector0, Point2D ptRayOrigin1, Point2D ptRayVector1, ref Point2D ptIntersection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x190E310", Offset = "0x190E310", VA = "0x190E310")]
		public TriangulationUtil()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF1D0", Offset = "0x9DF1D0")]
	public struct FixedArray3<T> : IEnumerable<T>, IEnumerable where T : class
	{
		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E01D4", Offset = "0x9E01D4")]
		private sealed class <Enumerate>d__10 : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FixedArray3<T> <>4__this;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FixedArray3<T> <>3__<>4__this;

			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x17000361")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x60022DB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000362")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022DD")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D8")]
			[DebuggerHidden]
			public <Enumerate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60022D9")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022DA")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022DC")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60022DE")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60022DF")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _0;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _1;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T _2;

		[Token(Token = "0x170001B7")]
		public T Item
		{
			[Token(Token = "0x6001318")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001319")]
			set
			{
			}
		}

		[Token(Token = "0x600131A")]
		public bool Contains(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x600131B")]
		public int IndexOf(T value)
		{
			return default(int);
		}

		[Token(Token = "0x600131C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600131D")]
		public void Clear(T value)
		{
		}

		[Token(Token = "0x600131E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC1E0", Offset = "0x9EC1E0")]
		private IEnumerable<T> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF208", Offset = "0x9DF208")]
	public struct FixedBitArray3 : IEnumerable<bool>, IEnumerable
	{
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E01E4", Offset = "0x9E01E4")]
		private sealed class <Enumerate>d__10 : IEnumerable<bool>, IEnumerable, IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool <>2__current;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public FixedBitArray3 <>4__this;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
			public FixedBitArray3 <>3__<>4__this;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <i>5__2;

			[Token(Token = "0x17000363")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x60022E3")]
				[Address(RVA = "0x18FA8DC", Offset = "0x18FA8DC", VA = "0x18FA8DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000364")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022E5")]
				[Address(RVA = "0x18FA94C", Offset = "0x18FA94C", VA = "0x18FA94C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x18FA768", Offset = "0x18FA768", VA = "0x18FA768")]
			[DebuggerHidden]
			public <Enumerate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x18FA85C", Offset = "0x18FA85C", VA = "0x18FA85C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x18FA860", Offset = "0x18FA860", VA = "0x18FA860", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022E4")]
			[Address(RVA = "0x18FA8E4", Offset = "0x18FA8E4", VA = "0x18FA8E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60022E6")]
			[Address(RVA = "0x18FA9B0", Offset = "0x18FA9B0", VA = "0x18FA9B0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<bool> System.Collections.Generic.IEnumerable<System.Boolean>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60022E7")]
			[Address(RVA = "0x18FAA68", Offset = "0x18FAA68", VA = "0x18FAA68", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool _0;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool _1;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool _2;

		[Token(Token = "0x170001B8")]
		public bool Item
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0xAA9564", Offset = "0xAA9564", VA = "0xAA9564")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001322")]
			[Address(RVA = "0xAA956C", Offset = "0xAA956C", VA = "0xAA956C")]
			set
			{
			}
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xAA9578", Offset = "0xAA9578", VA = "0xAA9578")]
		public bool Contains(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xAA95D0", Offset = "0xAA95D0", VA = "0xAA95D0")]
		public int IndexOf(bool value)
		{
			return default(int);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xAA9624", Offset = "0xAA9624", VA = "0xAA9624")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xAA9630", Offset = "0xAA9630", VA = "0xAA9630")]
		public void Clear(bool value)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xAA963C", Offset = "0xAA963C", VA = "0xAA963C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC244", Offset = "0x9EC244")]
		private IEnumerable<bool> Enumerate()
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xAA9644", Offset = "0xAA9644", VA = "0xAA9644", Slot = "4")]
		public IEnumerator<bool> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xAA964C", Offset = "0xAA964C", VA = "0xAA964C", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000258")]
	public class MathUtil
	{
		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static double EPSILON;

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x18FAA6C", Offset = "0x18FAA6C", VA = "0x18FAA6C")]
		public static bool AreValuesEqual(double val1, double val2)
		{
			return default(bool);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x18FAB00", Offset = "0x18FAB00", VA = "0x18FAB00")]
		public static bool AreValuesEqual(double val1, double val2, double tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x18FAB20", Offset = "0x18FAB20", VA = "0x18FAB20")]
		public static bool IsValueBetween(double val, double min, double max, double tolerance)
		{
			return default(bool);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x18FAB58", Offset = "0x18FAB58", VA = "0x18FAB58")]
		public static double RoundWithPrecision(double f, double precision)
		{
			return default(double);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x18FABE8", Offset = "0x18FABE8", VA = "0x18FABE8")]
		public static double Clamp(double a, double low, double high)
		{
			return default(double);
		}

		[Token(Token = "0x600132F")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x18FAC7C", Offset = "0x18FAC7C", VA = "0x18FAC7C")]
		public static uint Jenkins32Hash(byte[] data, uint nInitialValue)
		{
			return default(uint);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x18FAD04", Offset = "0x18FAD04", VA = "0x18FAD04")]
		public MathUtil()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class Point2D : IComparable<Point2D>
	{
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected double mX;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected double mY;

		[Token(Token = "0x170001B9")]
		public virtual double X
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x18FB35C", Offset = "0x18FB35C", VA = "0x18FB35C", Slot = "5")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x18FB364", Offset = "0x18FB364", VA = "0x18FB364", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public virtual double Y
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x18FB36C", Offset = "0x18FB36C", VA = "0x18FB36C", Slot = "7")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x18FB374", Offset = "0x18FB374", VA = "0x18FB374", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float Xf
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x18FB37C", Offset = "0x18FB37C", VA = "0x18FB37C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BC")]
		public float Yf
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x18FB39C", Offset = "0x18FB39C", VA = "0x18FB39C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x18FB3BC", Offset = "0x18FB3BC", VA = "0x18FB3BC")]
		public Point2D()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x18FB3E4", Offset = "0x18FB3E4", VA = "0x18FB3E4")]
		public Point2D(double x, double y)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x18FB41C", Offset = "0x18FB41C", VA = "0x18FB41C")]
		public Point2D(Point2D p)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x18FB484", Offset = "0x18FB484", VA = "0x18FB484", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x18FB6CC", Offset = "0x18FB6CC", VA = "0x18FB6CC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x18FB6D4", Offset = "0x18FB6D4", VA = "0x18FB6D4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x18FB780", Offset = "0x18FB780", VA = "0x18FB780")]
		public bool Equals(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x18FB788", Offset = "0x18FB788", VA = "0x18FB788")]
		public bool Equals(Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x18FB8B0", Offset = "0x18FB8B0", VA = "0x18FB8B0", Slot = "4")]
		public int CompareTo(Point2D other)
		{
			return default(int);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x18FB9A4", Offset = "0x18FB9A4", VA = "0x18FB9A4", Slot = "9")]
		public virtual void Set(double x, double y)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x18FB9E8", Offset = "0x18FB9E8", VA = "0x18FB9E8", Slot = "10")]
		public virtual void Set(Point2D p)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x18FBA5C", Offset = "0x18FBA5C", VA = "0x18FBA5C")]
		public void Add(Point2D p)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x18FBB08", Offset = "0x18FBB08", VA = "0x18FBB08")]
		public void Add(double scalar)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x18FBB70", Offset = "0x18FBB70", VA = "0x18FBB70")]
		public void Subtract(Point2D p)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x18FBC1C", Offset = "0x18FBC1C", VA = "0x18FBC1C")]
		public void Subtract(double scalar)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x18FBC84", Offset = "0x18FBC84", VA = "0x18FBC84")]
		public void Multiply(Point2D p)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x18FBD30", Offset = "0x18FBD30", VA = "0x18FBD30")]
		public void Multiply(double scalar)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x18FBD98", Offset = "0x18FBD98", VA = "0x18FBD98")]
		public void Divide(Point2D p)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x18FBE44", Offset = "0x18FBE44", VA = "0x18FBE44")]
		public void Divide(double scalar)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x18FBEAC", Offset = "0x18FBEAC", VA = "0x18FBEAC")]
		public void Negate()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x18FBF08", Offset = "0x18FBF08", VA = "0x18FBF08")]
		public double Magnitude()
		{
			return default(double);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x18FBFF8", Offset = "0x18FBFF8", VA = "0x18FBFF8")]
		public double MagnitudeSquared()
		{
			return default(double);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x18FC078", Offset = "0x18FC078", VA = "0x18FC078")]
		public double MagnitudeReciprocal()
		{
			return default(double);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x18FC094", Offset = "0x18FC094", VA = "0x18FC094")]
		public void Normalize()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x18FC0C0", Offset = "0x18FC0C0", VA = "0x18FC0C0")]
		public double Dot(Point2D p)
		{
			return default(double);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x18FC160", Offset = "0x18FC160", VA = "0x18FC160")]
		public double Cross(Point2D p)
		{
			return default(double);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x18FC200", Offset = "0x18FC200", VA = "0x18FC200")]
		public void Clamp(Point2D low, Point2D high)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x18FC368", Offset = "0x18FC368", VA = "0x18FC368")]
		public void Abs()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x18FC418", Offset = "0x18FC418", VA = "0x18FC418")]
		public void Reciprocal()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x18FC4C0", Offset = "0x18FC4C0", VA = "0x18FC4C0")]
		public void Translate(Point2D vector)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x18FC4C4", Offset = "0x18FC4C4", VA = "0x18FC4C4")]
		public void Translate(double x, double y)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x18FC530", Offset = "0x18FC530", VA = "0x18FC530")]
		public void Scale(Point2D vector)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x18FC534", Offset = "0x18FC534", VA = "0x18FC534")]
		public void Scale(double scalar)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x18FC538", Offset = "0x18FC538", VA = "0x18FC538")]
		public void Scale(double x, double y)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x18FC5A4", Offset = "0x18FC5A4", VA = "0x18FC5A4")]
		public void Rotate(double radians)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x18FC68C", Offset = "0x18FC68C", VA = "0x18FC68C")]
		public void RotateDegrees(double degrees)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x18FC6A8", Offset = "0x18FC6A8", VA = "0x18FC6A8")]
		public static double Dot(Point2D lhs, Point2D rhs)
		{
			return default(double);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x18FC750", Offset = "0x18FC750", VA = "0x18FC750")]
		public static double Cross(Point2D lhs, Point2D rhs)
		{
			return default(double);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x18FC7F8", Offset = "0x18FC7F8", VA = "0x18FC7F8")]
		public static Point2D Clamp(Point2D a, Point2D low, Point2D high)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x18FC884", Offset = "0x18FC884", VA = "0x18FC884")]
		public static Point2D Min(Point2D a, Point2D b)
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x18FC9E8", Offset = "0x18FC9E8", VA = "0x18FC9E8")]
		public static Point2D Max(Point2D a, Point2D b)
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x18FCB4C", Offset = "0x18FCB4C", VA = "0x18FCB4C")]
		public static Point2D Abs(Point2D a)
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x18FCC10", Offset = "0x18FCC10", VA = "0x18FCC10")]
		public static Point2D Reciprocal(Point2D a)
		{
			return null;
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x18FCCC8", Offset = "0x18FCCC8", VA = "0x18FCCC8")]
		public static Point2D Perpendicular(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x18FCD88", Offset = "0x18FCD88", VA = "0x18FCD88")]
		public static Point2D Perpendicular(double scalar, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x18FCE48", Offset = "0x18FCE48", VA = "0x18FCE48")]
		public static Point2D operator +(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x18FCECC", Offset = "0x18FCECC", VA = "0x18FCECC")]
		public static Point2D operator +(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x18FCF50", Offset = "0x18FCF50", VA = "0x18FCF50")]
		public static Point2D operator -(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x18FCFD4", Offset = "0x18FCFD4", VA = "0x18FCFD4")]
		public static Point2D operator -(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x18FD058", Offset = "0x18FD058", VA = "0x18FD058")]
		public static Point2D operator *(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x18FD0DC", Offset = "0x18FD0DC", VA = "0x18FD0DC")]
		public static Point2D operator *(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x18FD160", Offset = "0x18FD160", VA = "0x18FD160")]
		public static Point2D operator *(double scalar, Point2D lhs)
		{
			return null;
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x18FD1E4", Offset = "0x18FD1E4", VA = "0x18FD1E4")]
		public static Point2D operator /(Point2D lhs, Point2D rhs)
		{
			return null;
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x18FD268", Offset = "0x18FD268", VA = "0x18FD268")]
		public static Point2D operator /(Point2D lhs, double scalar)
		{
			return null;
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x18FD2EC", Offset = "0x18FD2EC", VA = "0x18FD2EC")]
		public static Point2D operator -(Point2D p)
		{
			return null;
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x18FD360", Offset = "0x18FD360", VA = "0x18FD360")]
		public static bool operator <(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x18FD39C", Offset = "0x18FD39C", VA = "0x18FD39C")]
		public static bool operator >(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x18FD3D8", Offset = "0x18FD3D8", VA = "0x18FD3D8")]
		public static bool operator <=(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x18FD414", Offset = "0x18FD414", VA = "0x18FD414")]
		public static bool operator >=(Point2D lhs, Point2D rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200025A")]
	public class Point2DEnumerator : IEnumerator<Point2D>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IList<Point2D> mPoints;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int position;

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x18FD568", Offset = "0x18FD568", VA = "0x18FD568", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public Point2D Current
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x18FD56C", Offset = "0x18FD56C", VA = "0x18FD56C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x18FD450", Offset = "0x18FD450", VA = "0x18FD450")]
		public Point2DEnumerator(IList<Point2D> points)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x18FD484", Offset = "0x18FD484", VA = "0x18FD484", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x18FD558", Offset = "0x18FD558", VA = "0x18FD558", Slot = "8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x18FD564", Offset = "0x18FD564", VA = "0x18FD564", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF240", Offset = "0x9DF240")]
	public class Point2DList : IEnumerable<Point2D>, IEnumerable, IList<Point2D>, ICollection<Point2D>
	{
		[Token(Token = "0x2000541")]
		public enum WindingOrderType
		{
			[Token(Token = "0x4001C0C")]
			CW = 0,
			[Token(Token = "0x4001C0D")]
			CCW = 1,
			[Token(Token = "0x4001C0E")]
			Unknown = 2,
			[Token(Token = "0x4001C0F")]
			Default = 1
		}

		[Token(Token = "0x2000542")]
		[Flags]
		public enum PolygonError : uint
		{
			[Token(Token = "0x4001C11")]
			None = 0u,
			[Token(Token = "0x4001C12")]
			NotEnoughVertices = 1u,
			[Token(Token = "0x4001C13")]
			NotConvex = 2u,
			[Token(Token = "0x4001C14")]
			NotSimple = 4u,
			[Token(Token = "0x4001C15")]
			AreaTooSmall = 8u,
			[Token(Token = "0x4001C16")]
			SidesTooCloseToParallel = 0x10u,
			[Token(Token = "0x4001C17")]
			TooThin = 0x20u,
			[Token(Token = "0x4001C18")]
			Degenerate = 0x40u,
			[Token(Token = "0x4001C19")]
			Unknown = 0x40000000u
		}

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int kMaxPolygonVertices;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly double kLinearSlop;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly double kAngularSlop;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Point2D> mPoints;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Rect2D mBoundingBox;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected WindingOrderType mWindingOrder;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected double mEpsilon;

		[Token(Token = "0x170001BF")]
		public Rect2D BoundingBox
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x18FD6CC", Offset = "0x18FD6CC", VA = "0x18FD6CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public WindingOrderType WindingOrder
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x18FD6D4", Offset = "0x18FD6D4", VA = "0x18FD6D4")]
			get
			{
				return default(WindingOrderType);
			}
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x18FD6DC", Offset = "0x18FD6DC", VA = "0x18FD6DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public double Epsilon
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x18FD7B0", Offset = "0x18FD7B0", VA = "0x18FD7B0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001C2")]
		public Point2D Item
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x18FD7B8", Offset = "0x18FD7B8", VA = "0x18FD7B8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x18FD828", Offset = "0x18FD828", VA = "0x18FD828", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public int Count
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x18FD8A0", Offset = "0x18FD8A0", VA = "0x18FD8A0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C4")]
		public virtual bool IsReadOnly
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x18FD900", Offset = "0x18FD900", VA = "0x18FD900", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x18FD908", Offset = "0x18FD908", VA = "0x18FD908")]
		public Point2DList()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x18FDA0C", Offset = "0x18FDA0C", VA = "0x18FDA0C")]
		public Point2DList(int capacity)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x18FDB14", Offset = "0x18FDB14", VA = "0x18FDB14")]
		public Point2DList(IList<Point2D> l)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x18FDC84", Offset = "0x18FDC84", VA = "0x18FDC84")]
		public Point2DList(Point2DList l)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x18FDEB4", Offset = "0x18FDEB4", VA = "0x18FDEB4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x18FDFE0", Offset = "0x18FDFE0", VA = "0x18FDFE0", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x18FE074", Offset = "0x18FE074", VA = "0x18FE074", Slot = "4")]
		private IEnumerator<Point2D> System.Collections.Generic.IEnumerable<Poly2Tri.Point2D>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x18FE0E4", Offset = "0x18FE0E4", VA = "0x18FE0E4", Slot = "14")]
		public void Clear()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x18FE1AC", Offset = "0x18FE1AC", VA = "0x18FE1AC", Slot = "8")]
		public int IndexOf(Point2D p)
		{
			return default(int);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x18FE21C", Offset = "0x18FE21C", VA = "0x18FE21C", Slot = "19")]
		public virtual void Add(Point2D p)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x18FE234", Offset = "0x18FE234", VA = "0x18FE234", Slot = "20")]
		protected virtual void Add(Point2D p, int idx, bool bCalcWindingOrderAndEpsilon)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x18FE54C", Offset = "0x18FE54C", VA = "0x18FE54C", Slot = "21")]
		public virtual void AddRange(Point2DList l)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x18FE614", Offset = "0x18FE614", VA = "0x18FE614", Slot = "22")]
		public virtual void AddRange(IEnumerator<Point2D> iter, WindingOrderType windingOrder)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x18FE94C", Offset = "0x18FE94C", VA = "0x18FE94C", Slot = "23")]
		public virtual void Insert(int idx, Point2D item)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x18FE96C", Offset = "0x18FE96C", VA = "0x18FE96C", Slot = "24")]
		public virtual bool Remove(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x18FEB54", Offset = "0x18FEB54", VA = "0x18FEB54", Slot = "25")]
		public virtual void RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x18FEBF0", Offset = "0x18FEBF0", VA = "0x18FEBF0", Slot = "26")]
		public virtual void RemoveRange(int idxStart, int count)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x18FEC98", Offset = "0x18FEC98", VA = "0x18FEC98", Slot = "15")]
		public bool Contains(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x18FED08", Offset = "0x18FED08", VA = "0x18FED08", Slot = "16")]
		public void CopyTo(Point2D[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x18FEA04", Offset = "0x18FEA04", VA = "0x18FEA04")]
		public void CalculateBounds()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x18FE458", Offset = "0x18FE458", VA = "0x18FE458")]
		public double CalculateEpsilon()
		{
			return default(double);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x18FD780", Offset = "0x18FD780", VA = "0x18FD780")]
		public WindingOrderType CalculateWindingOrder()
		{
			return default(WindingOrderType);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x18FEFA4", Offset = "0x18FEFA4", VA = "0x18FEFA4")]
		public int NextIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x18FEFD0", Offset = "0x18FEFD0", VA = "0x18FEFD0")]
		public int PreviousIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x18FEE6C", Offset = "0x18FEE6C", VA = "0x18FEE6C")]
		public double GetSignedArea()
		{
			return default(double);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x18FEFF0", Offset = "0x18FEFF0", VA = "0x18FEFF0")]
		public double GetArea()
		{
			return default(double);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x18FF134", Offset = "0x18FF134", VA = "0x18FF134")]
		public Point2D GetCentroid()
		{
			return null;
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x18FF2AC", Offset = "0x18FF2AC", VA = "0x18FF2AC")]
		public void Translate(Point2D vector)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x18FF31C", Offset = "0x18FF31C", VA = "0x18FF31C")]
		public void Scale(Point2D value)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x18FF38C", Offset = "0x18FF38C", VA = "0x18FF38C")]
		public void Rotate(double radians)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x18FF570", Offset = "0x18FF570", VA = "0x18FF570")]
		public bool IsDegenerate()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x18FF900", Offset = "0x18FF900", VA = "0x18FF900")]
		public bool IsConvex()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x18FFB34", Offset = "0x18FFB34", VA = "0x18FFB34")]
		public bool IsSimple()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x18FFD1C", Offset = "0x18FFD1C", VA = "0x18FFD1C")]
		public PolygonError CheckPolygon()
		{
			return default(PolygonError);
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1900294", Offset = "0x1900294", VA = "0x1900294")]
		public static string GetErrorString(PolygonError error)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x19005A0", Offset = "0x19005A0", VA = "0x19005A0")]
		public void RemoveDuplicateNeighborPoints()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1900730", Offset = "0x1900730", VA = "0x1900730")]
		public void Simplify()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x1900738", Offset = "0x1900738", VA = "0x1900738")]
		public void Simplify(double bias)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x190087C", Offset = "0x190087C", VA = "0x190087C")]
		public void MergeParallelEdges(double tolerance)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x1900F58", Offset = "0x1900F58", VA = "0x1900F58")]
		public void ProjectToAxis(Point2D axis, out double min, out double max)
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class Rect2D
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double mMinX;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double mMaxX;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double mMinY;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double mMaxY;

		[Token(Token = "0x170001C5")]
		public double MinX
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x1901484", Offset = "0x1901484", VA = "0x1901484")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x190BDE8", Offset = "0x190BDE8", VA = "0x190BDE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public double MaxX
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x19014B8", Offset = "0x19014B8", VA = "0x19014B8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x190BDF0", Offset = "0x190BDF0", VA = "0x190BDF0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public double MinY
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0x19014EC", Offset = "0x19014EC", VA = "0x19014EC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x190BDF8", Offset = "0x190BDF8", VA = "0x190BDF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public double MaxY
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x1901520", Offset = "0x1901520", VA = "0x1901520")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x190BE00", Offset = "0x190BE00", VA = "0x190BE00")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public double Left
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x190BE08", Offset = "0x190BE08", VA = "0x190BE08")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x190BE10", Offset = "0x190BE10", VA = "0x190BE10")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public double Right
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x190BE18", Offset = "0x190BE18", VA = "0x190BE18")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x190BE20", Offset = "0x190BE20", VA = "0x190BE20")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public double Top
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x190BE28", Offset = "0x190BE28", VA = "0x190BE28")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x190BE30", Offset = "0x190BE30", VA = "0x190BE30")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public double Bottom
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0x190BE38", Offset = "0x190BE38", VA = "0x190BE38")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x190BE40", Offset = "0x190BE40", VA = "0x190BE40")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public double Width
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x18FEE54", Offset = "0x18FEE54", VA = "0x18FEE54")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001CE")]
		public double Height
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x18FEE60", Offset = "0x18FEE60", VA = "0x18FEE60")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001CF")]
		public bool Empty
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x190BE48", Offset = "0x190BE48", VA = "0x190BE48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x18FD9DC", Offset = "0x18FD9DC", VA = "0x18FD9DC")]
		public Rect2D()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x190BE6C", Offset = "0x190BE6C", VA = "0x190BE6C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x190BE74", Offset = "0x190BE74", VA = "0x190BE74", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x190BF1C", Offset = "0x190BF1C", VA = "0x190BF1C")]
		public bool Equals(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x190BF9C", Offset = "0x190BF9C", VA = "0x190BF9C")]
		public bool Equals(Rect2D r, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x18FE19C", Offset = "0x18FE19C", VA = "0x18FE19C")]
		public void Clear()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x190C0F4", Offset = "0x190C0F4", VA = "0x190C0F4")]
		public void Set(double xmin, double xmax, double ymin, double ymax)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x18FDE28", Offset = "0x18FDE28", VA = "0x18FDE28")]
		public void Set(Rect2D b)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x190C1F0", Offset = "0x190C1F0", VA = "0x190C1F0")]
		public void SetSize(double w, double h)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x190C20C", Offset = "0x190C20C", VA = "0x190C20C")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x190C248", Offset = "0x190C248", VA = "0x190C248")]
		public bool Contains(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x190C2E4", Offset = "0x190C2E4", VA = "0x190C2E4")]
		public bool Contains(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x190C360", Offset = "0x190C360", VA = "0x190C360")]
		public bool ContainsInclusive(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x190C39C", Offset = "0x190C39C", VA = "0x190C39C")]
		public bool ContainsInclusive(double x, double y, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x190C3E8", Offset = "0x190C3E8", VA = "0x190C3E8")]
		public bool ContainsInclusive(Point2D p)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x190C484", Offset = "0x190C484", VA = "0x190C484")]
		public bool ContainsInclusive(Point2D p, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x190C534", Offset = "0x190C534", VA = "0x190C534")]
		public bool ContainsInclusive(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x190C5B0", Offset = "0x190C5B0", VA = "0x190C5B0")]
		public bool ContainsInclusive(Rect2D r, double epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x1907288", Offset = "0x1907288", VA = "0x1907288")]
		public bool Intersects(Rect2D r)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x190C640", Offset = "0x190C640", VA = "0x190C640")]
		public Point2D GetCenter()
		{
			return null;
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x190C6D0", Offset = "0x190C6D0", VA = "0x190C6D0")]
		public bool IsNormalized()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x190C100", Offset = "0x190C100", VA = "0x190C100")]
		public void Normalize()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x18FE334", Offset = "0x18FE334", VA = "0x18FE334")]
		public void AddPoint(Point2D p)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x190C6F4", Offset = "0x190C6F4", VA = "0x190C6F4")]
		public void Inflate(double w, double h)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x190C718", Offset = "0x190C718", VA = "0x190C718")]
		public void Inflate(double left, double top, double right, double bottom)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x190C73C", Offset = "0x190C73C", VA = "0x190C73C")]
		public void Offset(double w, double h)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x190C760", Offset = "0x190C760", VA = "0x190C760")]
		public void SetPosition(double x, double y)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x190C78C", Offset = "0x190C78C", VA = "0x190C78C")]
		public bool Intersection(Rect2D r1, Rect2D r2)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x190C910", Offset = "0x190C910", VA = "0x190C910")]
		public void Union(Rect2D r1, Rect2D r2)
		{
		}
	}
}
namespace Analytics
{
	[Token(Token = "0x200025D")]
	public class AnalyticsQueueFlusher : MonoBehaviour
	{
		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4A34", Offset = "0x9E4A34")]
		public float m_flushTimeout;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_flushTimer;

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xD5C338", Offset = "0xD5C338", VA = "0xD5C338")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xD5C4E4", Offset = "0xD5C4E4", VA = "0xD5C4E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xD5C650", Offset = "0xD5C650", VA = "0xD5C650")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xD5C6BC", Offset = "0xD5C6BC", VA = "0xD5C6BC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xD5C6F0", Offset = "0xD5C6F0", VA = "0xD5C6F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xD5C750", Offset = "0xD5C750", VA = "0xD5C750")]
		private void OnAnalyticEventEmitted()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xD5C688", Offset = "0xD5C688", VA = "0xD5C688")]
		private void FlushNow()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xD5C784", Offset = "0xD5C784", VA = "0xD5C784")]
		public AnalyticsQueueFlusher()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public abstract class AnalyticsService
	{
		[Token(Token = "0x2000543")]
		protected struct PlatformInformation
		{
			[Token(Token = "0x4001C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string vrHeadsetMake;

			[Token(Token = "0x4001C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string vrHeadsetModel;

			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string graphicsDeviceName;

			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string graphicsDeviceVendor;

			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string graphicsDeviceVersion;

			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string graphicsDeviceType;

			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int graphicsMemorySize;

			[Token(Token = "0x4001C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string processorType;

			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int processorCount;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int processorFrequency;

			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int memorySize;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string osVersion;

			[Token(Token = "0x60022E8")]
			[Address(RVA = "0xA8B49C", Offset = "0xA8B49C", VA = "0xA8B49C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_hasCachedPlatformInfo;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlatformInformation m_cachedPlatformInfo;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasCachedPlatformUserID;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string m_cachedPlatformUserID;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4A6C", Offset = "0x9E4A6C")]
		private string <SessionID>k__BackingField;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AnalyticsService s_instance;

		[Token(Token = "0x170001D0")]
		protected PlatformInformation PlatformInfo
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xD5C794", Offset = "0xD5C794", VA = "0xD5C794")]
			get
			{
				return default(PlatformInformation);
			}
		}

		[Token(Token = "0x170001D1")]
		protected string UserID
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xD5C930", Offset = "0xD5C930", VA = "0xD5C930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		protected string PlatformUserID
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xD5C938", Offset = "0xD5C938", VA = "0xD5C938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		protected string SessionID
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xD5CB28", Offset = "0xD5CB28", VA = "0xD5CB28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2A8", Offset = "0x9EC2A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xD5CB30", Offset = "0xD5CB30", VA = "0xD5CB30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2B8", Offset = "0x9EC2B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		protected string GameVersion
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xD5CB38", Offset = "0xD5CB38", VA = "0xD5CB38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000022")]
		public static event Action OnEventEmitted
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xD5C3E8", Offset = "0xD5C3E8", VA = "0xD5C3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2C8", Offset = "0x9EC2C8")]
			add
			{
			}
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xD5C554", Offset = "0xD5C554", VA = "0xD5C554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2D8", Offset = "0x9EC2D8")]
			remove
			{
			}
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xD5CB40", Offset = "0xD5CB40", VA = "0xD5CB40")]
		private static AnalyticsService GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60013EC")]
		public static T BeginTimedEvent<T>() where T : ITimedEvent, new()
		{
			return (T)null;
		}

		[Token(Token = "0x60013ED")]
		public static void EndTimedEvent<T>(T timedEvent) where T : ITimedEvent, new()
		{
		}

		[Token(Token = "0x60013EE")]
		public static void EmitEvent<T>() where T : GenericBase, new()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xD5CBEC", Offset = "0xD5CBEC", VA = "0xD5CBEC")]
		public static void EmitEvent(object evt)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xD5C75C", Offset = "0xD5C75C", VA = "0xD5C75C")]
		public static void FlushQueue()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xD5CC6C", Offset = "0xD5CC6C", VA = "0xD5CC6C")]
		public static void GenerateNewSessionID()
		{
		}

		[Token(Token = "0x60013F2")]
		protected abstract void EmitEventInternal(object evt);

		[Token(Token = "0x60013F3")]
		protected abstract void FlushQueueInternal();

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xD5CC94", Offset = "0xD5CC94", VA = "0xD5CC94", Slot = "6")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xD5CCA4", Offset = "0xD5CCA4", VA = "0xD5CCA4", Slot = "7")]
		protected virtual void GenerateNewSessionIDInternal()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xD5CD7C", Offset = "0xD5CD7C", VA = "0xD5CD7C")]
		protected AnalyticsService()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class AnalyticsServiceNetworkEffects : AnalyticsService
	{
		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NetworkEffects.Analytics.AnalyticsService m_nfxAnalyticsService;

		[Token(Token = "0x170001D5")]
		private string FirebaseAppId
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xD5D374", Offset = "0xD5D374", VA = "0xD5D374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xD5D3BC", Offset = "0xD5D3BC", VA = "0xD5D3BC", Slot = "6")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xD5D4D8", Offset = "0xD5D4D8", VA = "0xD5D4D8")]
		private static void AddParamString(string key, string value, ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xD5D62C", Offset = "0xD5D62C", VA = "0xD5D62C")]
		private static void AddParamInt(string key, int value, ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xD5D780", Offset = "0xD5D780", VA = "0xD5D780")]
		private static void ReflectEventParams(object evt, ICollection<EventParamElement> eventParams)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xD5DFC0", Offset = "0xD5DFC0", VA = "0xD5DFC0")]
		private void AddGenericParamsToEventParams(ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xD5E194", Offset = "0xD5E194", VA = "0xD5E194", Slot = "4")]
		protected override void EmitEventInternal(object evt)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xD5E5E8", Offset = "0xD5E5E8", VA = "0xD5E5E8", Slot = "5")]
		protected override void FlushQueueInternal()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xD5CBE8", Offset = "0xD5CBE8", VA = "0xD5CBE8")]
		public AnalyticsServiceNetworkEffects()
		{
		}
	}
}
namespace Analytics.Events
{
	[Token(Token = "0x2000260")]
	public interface ITimedEvent
	{
		[Token(Token = "0x6001400")]
		void Start(float time);

		[Token(Token = "0x6001401")]
		void End(float time);
	}
	[Serializable]
	[Token(Token = "0x2000261")]
	public class BaseData
	{
		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4A8C", Offset = "0x9E4A8C")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4A8C", Offset = "0x9E4A8C")]
		public string sku;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4AC8", Offset = "0x9E4AC8")]
		public string quality;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4AD8", Offset = "0x9E4AD8")]
		public string theme;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4AE8", Offset = "0x9E4AE8")]
		public int total_games_played;

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xD5E630", Offset = "0xD5E630", VA = "0xD5E630", Slot = "4")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xD5E740", Offset = "0xD5E740", VA = "0xD5E740")]
		public BaseData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000262")]
	public class GenericBase : BaseData
	{
		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4AF8", Offset = "0x9E4AF8")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4AF8", Offset = "0x9E4AF8")]
		public string game_scene;

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xD5ECDC", Offset = "0xD5ECDC", VA = "0xD5ECDC", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xD5E61C", Offset = "0xD5E61C", VA = "0xD5E61C")]
		public GenericBase()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class GenericTimed : GenericBase, ITimedEvent
	{
		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float duration;

		[NonSerialized]
		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		internal float m_startTime;

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xD5EDE0", Offset = "0xD5EDE0", VA = "0xD5EDE0", Slot = "5")]
		public void Start(float time)
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xD5EDE8", Offset = "0xD5EDE8", VA = "0xD5EDE8", Slot = "6")]
		public void End(float time)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xD5E614", Offset = "0xD5E614", VA = "0xD5E614")]
		public GenericTimed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF278", Offset = "0x9DF278")]
	public class BladeChange : GenericBase
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4B34", Offset = "0x9E4B34")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4B34", Offset = "0x9E4B34")]
		public string blade_name;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4B70", Offset = "0x9E4B70")]
		public bool is_left_hand;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xD5E798", Offset = "0xD5E798", VA = "0xD5E798")]
		public BladeChange()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF2B4", Offset = "0x9DF2B4")]
	public class ApplicatonFocusLost : GenericBase
	{
		[Token(Token = "0x600140A")]
		[Address(RVA = "0xD5E628", Offset = "0xD5E628", VA = "0xD5E628")]
		public ApplicatonFocusLost()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF2F0", Offset = "0x9DF2F0")]
	public class ApplicatonFocusGained : GenericBase
	{
		[Token(Token = "0x600140B")]
		[Address(RVA = "0xD5E624", Offset = "0xD5E624", VA = "0xD5E624")]
		public ApplicatonFocusGained()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF32C", Offset = "0x9DF32C")]
	public class ApplicationPaused : GenericBase
	{
		[Token(Token = "0x600140C")]
		[Address(RVA = "0xD5E618", Offset = "0xD5E618", VA = "0xD5E618")]
		public ApplicationPaused()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF368", Offset = "0x9DF368")]
	public class ApplicatonResumed : GenericBase
	{
		[Token(Token = "0x600140D")]
		[Address(RVA = "0xD5E62C", Offset = "0xD5E62C", VA = "0xD5E62C")]
		public ApplicatonResumed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF3A4", Offset = "0x9DF3A4")]
	public class ApplicationLoad : GenericTimed
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4B80", Offset = "0x9E4B80")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4B80", Offset = "0x9E4B80")]
		public string loaded_scene;

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xD5E60C", Offset = "0xD5E60C", VA = "0xD5E60C")]
		public new void Init()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xD5E610", Offset = "0xD5E610", VA = "0xD5E610")]
		public ApplicationLoad()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF3E0", Offset = "0x9DF3E0")]
	public class ApplicationQuit : GenericBase
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0xD5E620", Offset = "0xD5E620", VA = "0xD5E620")]
		public ApplicationQuit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF41C", Offset = "0x9DF41C")]
	public class SceneChange : GenericBase
	{
		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4BBC", Offset = "0x9E4BBC")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4BBC", Offset = "0x9E4BBC")]
		public string previous_scene;

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xD5EDF8", Offset = "0xD5EDF8", VA = "0xD5EDF8")]
		public SceneChange()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026C")]
	public class GamePlayBase : BaseData
	{
		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4BF8", Offset = "0x9E4BF8")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4BF8", Offset = "0x9E4BF8")]
		public string scene;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4C34", Offset = "0x9E4C34")]
		public string blade_name_left;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4C48", Offset = "0x9E4C48")]
		public string blade_name_right;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool is_first;

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xD5E7A8", Offset = "0xD5E7A8", VA = "0xD5E7A8", Slot = "4")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xD5E608", Offset = "0xD5E608", VA = "0xD5E608")]
		public GamePlayBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class GamePlayBaseTimed : GamePlayBase, ITimedEvent
	{
		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float duration;

		[NonSerialized]
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal float m_startTime;

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xD5ECC0", Offset = "0xD5ECC0", VA = "0xD5ECC0", Slot = "5")]
		public void Start(float time)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xD5ECC8", Offset = "0xD5ECC8", VA = "0xD5ECC8", Slot = "6")]
		public void End(float time)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xD5E7A4", Offset = "0xD5E7A4", VA = "0xD5E7A4")]
		public GamePlayBaseTimed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF458", Offset = "0x9DF458")]
	public class GamePlay : GamePlayBaseTimed
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int fruits_served;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int fruits_sliced;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int fruits_sliced_left;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int fruits_sliced_right;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int fruits_skewered;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int bomb_hit;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int objects_juggled;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int banana_frenzy_spawned;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int banana_frenzy_sliced;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int banana_freeze_spawned;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int banana_freeze_sliced;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int banana_double_spawned;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int banana_double_sliced;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int peach_spawned;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int peach_sliced;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int bombs_spawned;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int bombs_deflected;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int enemies_killed;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int enemies_hit;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int score;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4C5C", Offset = "0x9E4C5C")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4C5C", Offset = "0x9E4C5C")]
		public string result;

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xD5E7A0", Offset = "0xD5E7A0", VA = "0xD5E7A0")]
		public GamePlay()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF494", Offset = "0x9DF494")]
	public class GamePause : GamePlayBase
	{
		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "AnalyticLengthAttribute", RVA = "0x9E4C98", Offset = "0x9E4C98")]
		[AttributeAttribute(Name = "AnalyticRequiredAttribute", RVA = "0x9E4C98", Offset = "0x9E4C98")]
		public string reason;

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xD5E79C", Offset = "0xD5E79C", VA = "0xD5E79C")]
		public GamePause()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF4D0", Offset = "0x9DF4D0")]
	public class GameResume : GamePlayBase
	{
		[Token(Token = "0x6001419")]
		[Address(RVA = "0xD5ECD8", Offset = "0xD5ECD8", VA = "0xD5ECD8")]
		public GameResume()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "AnalyticEventTypeAttribute", RVA = "0x9DF50C", Offset = "0x9DF50C")]
	public class AchievementUnlock : GamePlayBase
	{
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string achievement;

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xD5E604", Offset = "0xD5E604", VA = "0xD5E604")]
		public AchievementUnlock()
		{
		}
	}
}
namespace ONSPPropagationInterface
{
	[Token(Token = "0x2000272")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001070")]
		TRIANGLES,
		[Token(Token = "0x4001071")]
		QUADS
	}
	[Token(Token = "0x2000273")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001073")]
		ABSORPTION,
		[Token(Token = "0x4001074")]
		TRANSMISSION,
		[Token(Token = "0x4001075")]
		SCATTERING
	}
	[Token(Token = "0x2000274")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
	[Token(Token = "0x2000275")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400107B")]
		Int8,
		[Token(Token = "0x400107C")]
		UInt8,
		[Token(Token = "0x400107D")]
		Int16,
		[Token(Token = "0x400107E")]
		UInt16,
		[Token(Token = "0x400107F")]
		Int32,
		[Token(Token = "0x4001080")]
		UInt32,
		[Token(Token = "0x4001081")]
		Int64,
		[Token(Token = "0x4001082")]
		UInt64,
		[Token(Token = "0x4001083")]
		Float16,
		[Token(Token = "0x4001084")]
		Float32,
		[Token(Token = "0x4001085")]
		Float64
	}
}
namespace ONSPPropagationInterface.FMOD
{
	[Token(Token = "0x2000276")]
	public class PropIFace
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr context_;

		[Token(Token = "0x4001087")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x170001D6")]
		private static IntPtr context
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0xFBD71C", Offset = "0xFBD71C", VA = "0xFBD71C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600141C")]
		[Address(RVA = "0xFBD7DC", Offset = "0xFBD7DC", VA = "0xFBD7DC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context);

		[PreserveSig]
		[Token(Token = "0x600141D")]
		[Address(RVA = "0xFBD878", Offset = "0xFBD878", VA = "0xFBD878")]
		public static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xFBD924", Offset = "0xFBD924", VA = "0xFBD924")]
		public static int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600141F")]
		[Address(RVA = "0xFBD994", Offset = "0xFBD994", VA = "0xFBD994")]
		public static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xFBDA40", Offset = "0xFBDA40", VA = "0xFBDA40")]
		public static int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001421")]
		[Address(RVA = "0xFBDAA8", Offset = "0xFBDAA8", VA = "0xFBDAA8")]
		public static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xFBDB54", Offset = "0xFBDB54", VA = "0xFBDB54")]
		public static int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001423")]
		[Address(RVA = "0xFBDBBC", Offset = "0xFBDBBC", VA = "0xFBDBBC")]
		public static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xFBDC58", Offset = "0xFBDC58", VA = "0xFBDC58")]
		public static int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001425")]
		[Address(RVA = "0xFBDCBC", Offset = "0xFBDCBC", VA = "0xFBDCBC")]
		public static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xFBDDE4", Offset = "0xFBDDE4", VA = "0xFBDDE4")]
		public static int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001427")]
		[Address(RVA = "0xFBDF04", Offset = "0xFBDF04", VA = "0xFBDF04")]
		public static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xFBDFB8", Offset = "0xFBDFB8", VA = "0xFBDFB8")]
		public static int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001429")]
		[Address(RVA = "0xFBE02C", Offset = "0xFBE02C", VA = "0xFBE02C")]
		public static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xFBE174", Offset = "0xFBE174", VA = "0xFBE174")]
		public static int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600142B")]
		[Address(RVA = "0xFBE1E8", Offset = "0xFBE1E8", VA = "0xFBE1E8")]
		public static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xFBE2B0", Offset = "0xFBE2B0", VA = "0xFBE2B0")]
		public static int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600142D")]
		[Address(RVA = "0xFBE324", Offset = "0xFBE324", VA = "0xFBE324")]
		public static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xFBE3EC", Offset = "0xFBE3EC", VA = "0xFBE3EC")]
		public static int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600142F")]
		[Address(RVA = "0xFBE460", Offset = "0xFBE460", VA = "0xFBE460")]
		public static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xFBE50C", Offset = "0xFBE50C", VA = "0xFBE50C")]
		public static int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001431")]
		[Address(RVA = "0xFBE574", Offset = "0xFBE574", VA = "0xFBE574")]
		public static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xFBE610", Offset = "0xFBE610", VA = "0xFBE610")]
		public static int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001433")]
		[Address(RVA = "0xFBE674", Offset = "0xFBE674", VA = "0xFBE674")]
		public static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xFBE738", Offset = "0xFBE738", VA = "0xFBE738")]
		public static int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001435")]
		[Address(RVA = "0xFBE7C4", Offset = "0xFBE7C4", VA = "0xFBE7C4")]
		public static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xFBE888", Offset = "0xFBE888", VA = "0xFBE888")]
		public static int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001437")]
		[Address(RVA = "0xFBE914", Offset = "0xFBE914", VA = "0xFBE914")]
		public static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xFBE9C0", Offset = "0xFBE9C0", VA = "0xFBE9C0")]
		public static int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xFBEA34", Offset = "0xFBEA34", VA = "0xFBEA34")]
		public PropIFace()
		{
		}
	}
}
namespace ONSPPropagationInterface.Wwise
{
	[Token(Token = "0x2000277")]
	public class PropIFace
	{
		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr context_;

		[Token(Token = "0x4001089")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x170001D7")]
		private static IntPtr context
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0xFBFB20", Offset = "0xFBFB20", VA = "0xFBFB20")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600143C")]
		[Address(RVA = "0xFBFBE0", Offset = "0xFBFBE0", VA = "0xFBFBE0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context);

		[PreserveSig]
		[Token(Token = "0x600143D")]
		[Address(RVA = "0xFBFC7C", Offset = "0xFBFC7C", VA = "0xFBFC7C")]
		public static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xFBFD28", Offset = "0xFBFD28", VA = "0xFBFD28")]
		public static int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600143F")]
		[Address(RVA = "0xFBFD98", Offset = "0xFBFD98", VA = "0xFBFD98")]
		public static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xFBFE44", Offset = "0xFBFE44", VA = "0xFBFE44")]
		public static int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001441")]
		[Address(RVA = "0xFBFEAC", Offset = "0xFBFEAC", VA = "0xFBFEAC")]
		public static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xFBFF58", Offset = "0xFBFF58", VA = "0xFBFF58")]
		public static int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001443")]
		[Address(RVA = "0xFBFFC0", Offset = "0xFBFFC0", VA = "0xFBFFC0")]
		public static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xFC005C", Offset = "0xFC005C", VA = "0xFC005C")]
		public static int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001445")]
		[Address(RVA = "0xFC00C0", Offset = "0xFC00C0", VA = "0xFC00C0")]
		public static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xFC01E8", Offset = "0xFC01E8", VA = "0xFC01E8")]
		public static int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001447")]
		[Address(RVA = "0xFC0308", Offset = "0xFC0308", VA = "0xFC0308")]
		public static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xFC03BC", Offset = "0xFC03BC", VA = "0xFC03BC")]
		public static int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001449")]
		[Address(RVA = "0xFC0430", Offset = "0xFC0430", VA = "0xFC0430")]
		public static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xFC0578", Offset = "0xFC0578", VA = "0xFC0578")]
		public static int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600144B")]
		[Address(RVA = "0xFC05EC", Offset = "0xFC05EC", VA = "0xFC05EC")]
		public static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xFC06B4", Offset = "0xFC06B4", VA = "0xFC06B4")]
		public static int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600144D")]
		[Address(RVA = "0xFC0728", Offset = "0xFC0728", VA = "0xFC0728")]
		public static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xFC07F0", Offset = "0xFC07F0", VA = "0xFC07F0")]
		public static int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600144F")]
		[Address(RVA = "0xFC0864", Offset = "0xFC0864", VA = "0xFC0864")]
		public static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xFC0910", Offset = "0xFC0910", VA = "0xFC0910")]
		public static int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001451")]
		[Address(RVA = "0xFC0978", Offset = "0xFC0978", VA = "0xFC0978")]
		public static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xFC0A14", Offset = "0xFC0A14", VA = "0xFC0A14")]
		public static int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001453")]
		[Address(RVA = "0xFC0A78", Offset = "0xFC0A78", VA = "0xFC0A78")]
		public static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xFC0B3C", Offset = "0xFC0B3C", VA = "0xFC0B3C")]
		public static int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001455")]
		[Address(RVA = "0xFC0BC8", Offset = "0xFC0BC8", VA = "0xFC0BC8")]
		public static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xFC0C8C", Offset = "0xFC0C8C", VA = "0xFC0C8C")]
		public static int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001457")]
		[Address(RVA = "0xFC0D18", Offset = "0xFC0D18", VA = "0xFC0D18")]
		public static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xFC0DC4", Offset = "0xFC0DC4", VA = "0xFC0DC4")]
		public static int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xFC0E38", Offset = "0xFC0E38", VA = "0xFC0E38")]
		public PropIFace()
		{
		}
	}
}
namespace ONSPPropagationInterface.Unity_Native
{
	[Token(Token = "0x2000278")]
	public class PropIFace
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr context_;

		[Token(Token = "0x400108B")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x170001D8")]
		private static IntPtr context
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0xFBEA8C", Offset = "0xFBEA8C", VA = "0xFBEA8C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600145C")]
		[Address(RVA = "0xFBEB4C", Offset = "0xFBEB4C", VA = "0xFBEB4C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context);

		[PreserveSig]
		[Token(Token = "0x600145D")]
		[Address(RVA = "0xFBEBE8", Offset = "0xFBEBE8", VA = "0xFBEBE8")]
		public static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xFBEC94", Offset = "0xFBEC94", VA = "0xFBEC94")]
		public static int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600145F")]
		[Address(RVA = "0xFBED04", Offset = "0xFBED04", VA = "0xFBED04")]
		public static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xFBEDB0", Offset = "0xFBEDB0", VA = "0xFBEDB0")]
		public static int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001461")]
		[Address(RVA = "0xFBEE18", Offset = "0xFBEE18", VA = "0xFBEE18")]
		public static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xFBAA4C", Offset = "0xFBAA4C", VA = "0xFBAA4C")]
		public static int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001463")]
		[Address(RVA = "0xFBEEC0", Offset = "0xFBEEC0", VA = "0xFBEEC0")]
		public static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xFBB380", Offset = "0xFBB380", VA = "0xFBB380")]
		public static int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001465")]
		[Address(RVA = "0xFBEF5C", Offset = "0xFBEF5C", VA = "0xFBEF5C")]
		public static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xFBD4D4", Offset = "0xFBD4D4", VA = "0xFBD4D4")]
		public static int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001467")]
		[Address(RVA = "0xFBF084", Offset = "0xFBF084", VA = "0xFBF084")]
		public static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xFBB200", Offset = "0xFBB200", VA = "0xFBB200")]
		public static int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001469")]
		[Address(RVA = "0xFBF138", Offset = "0xFBF138", VA = "0xFBF138")]
		public static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xFBF280", Offset = "0xFBF280", VA = "0xFBF280")]
		public static int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600146B")]
		[Address(RVA = "0xFBF2F4", Offset = "0xFBF2F4", VA = "0xFBF2F4")]
		public static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xFBF3BC", Offset = "0xFBF3BC", VA = "0xFBF3BC")]
		public static int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600146D")]
		[Address(RVA = "0xFBF430", Offset = "0xFBF430", VA = "0xFBF430")]
		public static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xFBD5F4", Offset = "0xFBD5F4", VA = "0xFBD5F4")]
		public static int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600146F")]
		[Address(RVA = "0xFBF4F8", Offset = "0xFBF4F8", VA = "0xFBF4F8")]
		public static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xFBF5A0", Offset = "0xFBF5A0", VA = "0xFBF5A0")]
		public static int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001471")]
		[Address(RVA = "0xFBF608", Offset = "0xFBF608", VA = "0xFBF608")]
		public static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xFBF6A4", Offset = "0xFBF6A4", VA = "0xFBF6A4")]
		public static int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001473")]
		[Address(RVA = "0xFBF708", Offset = "0xFBF708", VA = "0xFBF708")]
		public static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xFBF7CC", Offset = "0xFBF7CC", VA = "0xFBF7CC")]
		public static int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001475")]
		[Address(RVA = "0xFBF858", Offset = "0xFBF858", VA = "0xFBF858")]
		public static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xFBF91C", Offset = "0xFBF91C", VA = "0xFBF91C")]
		public static int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001477")]
		[Address(RVA = "0xFBF9A8", Offset = "0xFBF9A8", VA = "0xFBF9A8")]
		public static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xFBFA54", Offset = "0xFBFA54", VA = "0xFBFA54")]
		public static int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xFBFAC8", Offset = "0xFBFAC8", VA = "0xFBFAC8")]
		public PropIFace()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000279")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170001D9")]
		public bool Highlight
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xCFF828", Offset = "0xCFF828", VA = "0xCFF828")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600147C")]
			[Address(RVA = "0xCFF830", Offset = "0xCFF830", VA = "0xCFF830")]
			set
			{
			}
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xCFF83C", Offset = "0xCFF83C", VA = "0xCFF83C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xCFFA64", Offset = "0xCFFA64", VA = "0xCFFA64", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xCFFA8C", Offset = "0xCFFA8C", VA = "0xCFFA8C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xCFFAB4", Offset = "0xCFFAB4", VA = "0xCFFAB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xCFF908", Offset = "0xCFF908", VA = "0xCFF908")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xCFFD5C", Offset = "0xCFFD5C", VA = "0xCFFD5C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170001DA")]
		public bool InRange
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0xCFFE58", Offset = "0xCFFE58", VA = "0xCFFE58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001485")]
			[Address(RVA = "0xCFFE60", Offset = "0xCFFE60", VA = "0xCFFE60")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public bool Targeted
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xD00070", Offset = "0xD00070", VA = "0xD00070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001487")]
			[Address(RVA = "0xD00078", Offset = "0xD00078", VA = "0xD00078")]
			set
			{
			}
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xD00084", Offset = "0xD00084", VA = "0xD00084", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xCFFE6C", Offset = "0xCFFE6C", VA = "0xCFFE6C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xD002E4", Offset = "0xD002E4", VA = "0xD002E4")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xD0037C", Offset = "0xD0037C", VA = "0xD0037C")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xD0041C", Offset = "0xD0041C", VA = "0xD0041C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DF548", Offset = "0x9DF548")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_player;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170001DC")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xD00424", Offset = "0xD00424", VA = "0xD00424")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xD0042C", Offset = "0xD0042C", VA = "0xD0042C")]
			set
			{
			}
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xD00448", Offset = "0xD00448", VA = "0xD00448", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xD005F8", Offset = "0xD005F8", VA = "0xD005F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xD010BC", Offset = "0xD010BC", VA = "0xD010BC", Slot = "6")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xD01870", Offset = "0xD01870", VA = "0xD01870", Slot = "7")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xD01CD0", Offset = "0xD01CD0", VA = "0xD01CD0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xD0090C", Offset = "0xD0090C", VA = "0xD0090C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xD01DC8", Offset = "0xD01DC8", VA = "0xD01DC8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xD02258", Offset = "0xD02258", VA = "0xD02258", Slot = "8")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xD02270", Offset = "0xD02270", VA = "0xD02270", Slot = "9")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xD02278", Offset = "0xD02278", VA = "0xD02278")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000544")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001C27")]
			Disabled,
			[Token(Token = "0x4001C28")]
			Enabled,
			[Token(Token = "0x4001C29")]
			Targeted
		}

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xD0272C", Offset = "0xD0272C", VA = "0xD0272C")]
		private void Start()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xD00210", Offset = "0xD00210", VA = "0xD00210")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xD0279C", Offset = "0xD0279C", VA = "0xD0279C")]
		private void Update()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xD027F4", Offset = "0xD027F4", VA = "0xD027F4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xD025B0", Offset = "0xD025B0", VA = "0xD025B0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xD0266C", Offset = "0xD0266C", VA = "0xD0266C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xD02724", Offset = "0xD02724", VA = "0xD02724")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD04430", Offset = "0xD04430", VA = "0xD04430")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD044FC", Offset = "0xD044FC", VA = "0xD044FC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD04508", Offset = "0xD04508", VA = "0xD04508")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD04514", Offset = "0xD04514", VA = "0xD04514")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool museSpherecast;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170001DD")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xD02298", Offset = "0xD02298", VA = "0xD02298")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xD022A0", Offset = "0xD022A0", VA = "0xD022A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xD02358", Offset = "0xD02358", VA = "0xD02358")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0xD02360", Offset = "0xD02360", VA = "0xD02360")]
			set
			{
			}
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD02404", Offset = "0xD02404", VA = "0xD02404")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD02588", Offset = "0xD02588", VA = "0xD02588")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD02598", Offset = "0xD02598", VA = "0xD02598")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD025A8", Offset = "0xD025A8", VA = "0xD025A8")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40010B2")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40010B3")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40010B4")]
		EUDT_None,
		[Token(Token = "0x40010B5")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000281")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0204", Offset = "0x9E0204")]
		private sealed class <WaitforOVROverlay>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000365")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022EC")]
				[Address(RVA = "0xD043B8", Offset = "0xD043B8", VA = "0xD043B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000366")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022EE")]
				[Address(RVA = "0xD04428", Offset = "0xD04428", VA = "0xD04428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022E9")]
			[Address(RVA = "0xD038BC", Offset = "0xD038BC", VA = "0xD038BC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60022EA")]
			[Address(RVA = "0xD040BC", Offset = "0xD040BC", VA = "0xD040BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022EB")]
			[Address(RVA = "0xD040C0", Offset = "0xD040C0", VA = "0xD040C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022ED")]
			[Address(RVA = "0xD043C0", Offset = "0xD043C0", VA = "0xD043C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40010B7")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40010B8")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40010B9")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle overlayRadioButton;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E4DA4", Offset = "0x9E4DA4")]
		public GameObject mainCamera;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiCamera;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EUiDisplayType desiredUiType;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E4DDC", Offset = "0x9E4DDC")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float heightBetweenItems;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int numLevels;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int numLoopsTrigger;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xD027FC", Offset = "0xD027FC", VA = "0xD027FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xD032B8", Offset = "0xD032B8", VA = "0xD032B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xD03414", Offset = "0xD03414", VA = "0xD03414")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xD035A0", Offset = "0xD035A0", VA = "0xD035A0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xD03730", Offset = "0xD03730", VA = "0xD03730")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xD033E8", Offset = "0xD033E8", VA = "0xD033E8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xD03848", Offset = "0xD03848", VA = "0xD03848")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC2E8", Offset = "0x9EC2E8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xD038E8", Offset = "0xD038E8", VA = "0xD038E8")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xD02C28", Offset = "0xD02C28", VA = "0xD02C28")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xD03A4C", Offset = "0xD03A4C", VA = "0xD03A4C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xD03924", Offset = "0xD03924", VA = "0xD03924")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xD03E6C", Offset = "0xD03E6C", VA = "0xD03E6C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xD03F48", Offset = "0xD03F48", VA = "0xD03F48")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xD03FCC", Offset = "0xD03FCC", VA = "0xD03FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC34C", Offset = "0x9EC34C")]
		private void <Start>b__26_0(Toggle t)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xD0401C", Offset = "0xD0401C", VA = "0xD0401C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC35C", Offset = "0x9EC35C")]
		private void <Start>b__26_1(Toggle t)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xD0406C", Offset = "0xD0406C", VA = "0xD0406C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC36C", Offset = "0x9EC36C")]
		private void <Start>b__26_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DF5AC", Offset = "0x9DF5AC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0214", Offset = "0x9E0214")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x1317110", Offset = "0x1317110", VA = "0x1317110")]
			public <>c()
			{
			}

			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x1317118", Offset = "0x1317118", VA = "0x1317118")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010D0")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40010D1")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40010D2")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40010D3")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40010D4")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40010D5")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40010D6")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40010D7")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40010D8")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40010D9")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40010DA")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x13161E4", Offset = "0x13161E4", VA = "0x13161E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x131623C", Offset = "0x131623C", VA = "0x131623C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x13166E4", Offset = "0x13166E4", VA = "0x13166E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x1316804", Offset = "0x1316804", VA = "0x1316804")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x1316BE4", Offset = "0x1316BE4", VA = "0x1316BE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x1316D7C", Offset = "0x1316D7C", VA = "0x1316D7C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x1316F2C", Offset = "0x1316F2C", VA = "0x1316F2C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x13168A0", Offset = "0x13168A0", VA = "0x13168A0")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x1316940", Offset = "0x1316940", VA = "0x1316940")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x13164A8", Offset = "0x13164A8", VA = "0x13164A8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x1317094", Offset = "0x1317094", VA = "0x1317094")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public enum HandPoseId
	{
		[Token(Token = "0x40010ED")]
		Default,
		[Token(Token = "0x40010EE")]
		Generic,
		[Token(Token = "0x40010EF")]
		PingPongBall,
		[Token(Token = "0x40010F0")]
		Controller
	}
	[Token(Token = "0x2000284")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001DF")]
		public bool AllowPointing
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x1317084", Offset = "0x1317084", VA = "0x1317084")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E0")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x131708C", Offset = "0x131708C", VA = "0x131708C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E1")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x131707C", Offset = "0x131707C", VA = "0x131707C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1317154", Offset = "0x1317154", VA = "0x1317154")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x131715C", Offset = "0x131715C", VA = "0x131715C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x1317428", Offset = "0x1317428", VA = "0x1317428")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x1317498", Offset = "0x1317498", VA = "0x1317498")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x13174E8", Offset = "0x13174E8", VA = "0x13174E8")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000286")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x13219CC", Offset = "0x13219CC", VA = "0x13219CC")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x1321A44", Offset = "0x1321A44", VA = "0x1321A44")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x1321AC0", Offset = "0x1321AC0", VA = "0x1321AC0")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x1321B3C", Offset = "0x1321B3C", VA = "0x1321B3C")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x1321B8C", Offset = "0x1321B8C", VA = "0x1321B8C", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public enum AbuseReportType
	{
		[Token(Token = "0x40010F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E4E94", Offset = "0x9E4E94")]
		Unknown,
		[Token(Token = "0x40010FA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E4ECC", Offset = "0x9E4ECC")]
		Object,
		[Token(Token = "0x40010FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E4F04", Offset = "0x9E4F04")]
		User
	}
	[Token(Token = "0x2000288")]
	public enum AchievementType
	{
		[Token(Token = "0x40010FD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E4F3C", Offset = "0x9E4F3C")]
		Unknown,
		[Token(Token = "0x40010FE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E4F74", Offset = "0x9E4F74")]
		Simple,
		[Token(Token = "0x40010FF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E4FAC", Offset = "0x9E4FAC")]
		Bitfield,
		[Token(Token = "0x4001100")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E4FE4", Offset = "0x9E4FE4")]
		Count
	}
	[Token(Token = "0x2000289")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x1CD8D6C", Offset = "0x1CD8D6C", VA = "0x1CD8D6C")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x1CD8EE0", Offset = "0x1CD8EE0", VA = "0x1CD8EE0")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1CD9088", Offset = "0x1CD9088", VA = "0x1CD9088")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1CD9570", Offset = "0x1CD9570", VA = "0x1CD9570")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x1CD9674", Offset = "0x1CD9674", VA = "0x1CD9674")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1CD9354", Offset = "0x1CD9354", VA = "0x1CD9354")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1CD9798", Offset = "0x1CD9798", VA = "0x1CD9798", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public static class Callback
	{
		[Token(Token = "0x2000547")]
		private class RequestCallback
		{
			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x1CFAA4C", Offset = "0x1CFAA4C", VA = "0x1CFAA4C")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x1CFA378", Offset = "0x1CFA378", VA = "0x1CFA378")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x60022F4")]
			[Address(RVA = "0x1CFAA54", Offset = "0x1CFAA54", VA = "0x1CFAA54", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x2000548")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x60022F5")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x60022F6")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x60014DB")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1CFA274", Offset = "0x1CFA274", VA = "0x1CFA274")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x60014DD")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1CFA3A4", Offset = "0x1CFA3A4", VA = "0x1CFA3A4")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1CFA480", Offset = "0x1CFA480", VA = "0x1CFA480")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1CFA730", Offset = "0x1CFA730", VA = "0x1CFA730")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1CFA7CC", Offset = "0x1CFA7CC", VA = "0x1CFA7CC")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x1CFA504", Offset = "0x1CFA504", VA = "0x1CFA504")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1CFAA68", Offset = "0x1CFAA68", VA = "0x1CFAA68")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1CFAAF4", Offset = "0x1CFAAF4", VA = "0x1CFAAF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1CFABF0", Offset = "0x1CFABF0", VA = "0x1CFABF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1CFABFC", Offset = "0x1CFABFC", VA = "0x1CFABFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1CFAC00", Offset = "0x1CFAC00", VA = "0x1CFAC00")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class CAPI
	{
		[Token(Token = "0x2000549")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xAB8DA0", Offset = "0xAB8DA0", VA = "0xAB8DA0")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x60022F8")]
			[Address(RVA = "0xAB8DB8", Offset = "0xAB8DB8", VA = "0xAB8DB8")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x60022F9")]
			[Address(RVA = "0xAB8DD4", Offset = "0xAB8DD4", VA = "0xAB8DD4")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x200054A")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4001C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4001C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x60022FA")]
			[Address(RVA = "0xAB8EA0", Offset = "0xAB8EA0", VA = "0xAB8EA0")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x200054B")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x200054C")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4001C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9E0224", Offset = "0x9E0224")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4001107")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4001109")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1CDABF4", Offset = "0x1CDABF4", VA = "0x1CDABF4")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x1CDADB8", Offset = "0x1CDADB8", VA = "0x1CDADB8")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1CDB450", Offset = "0x1CDB450", VA = "0x1CDB450")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1CDB514", Offset = "0x1CDB514", VA = "0x1CDB514")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x1CDB844", Offset = "0x1CDB844", VA = "0x1CDB844")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1CDB964", Offset = "0x1CDB964", VA = "0x1CDB964")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1CDB9F0", Offset = "0x1CDB9F0", VA = "0x1CDB9F0")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1CDBA60", Offset = "0x1CDBA60", VA = "0x1CDBA60")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1CDBB58", Offset = "0x1CDBB58", VA = "0x1CDBB58")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1CDBBFC", Offset = "0x1CDBBFC", VA = "0x1CDBBFC")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x1CD8E24", Offset = "0x1CD8E24", VA = "0x1CD8E24")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x1CDBD9C", Offset = "0x1CDBD9C", VA = "0x1CDBD9C")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x1CD8FD0", Offset = "0x1CD8FD0", VA = "0x1CD8FD0")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x1CDBE3C", Offset = "0x1CDBE3C", VA = "0x1CDBE3C")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x1CDBF08", Offset = "0x1CDBF08", VA = "0x1CDBF08")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x1CDC034", Offset = "0x1CDC034", VA = "0x1CDC034")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1CDC100", Offset = "0x1CDC100", VA = "0x1CDC100")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x1CDC1CC", Offset = "0x1CDC1CC", VA = "0x1CDC1CC")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x1CDC294", Offset = "0x1CDC294", VA = "0x1CDC294")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x1CDC350", Offset = "0x1CDC350", VA = "0x1CDC350")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x1CDC3B0", Offset = "0x1CDC3B0", VA = "0x1CDC3B0")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x1CDC440", Offset = "0x1CDC440", VA = "0x1CDC440")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x1CDC4D0", Offset = "0x1CDC4D0", VA = "0x1CDC4D0")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001500")]
		[Address(RVA = "0x1CDC570", Offset = "0x1CDC570", VA = "0x1CDC570")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x6001501")]
		[Address(RVA = "0x1CDC610", Offset = "0x1CDC610", VA = "0x1CDC610")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6001502")]
		[Address(RVA = "0x1CDC6A0", Offset = "0x1CDC6A0", VA = "0x1CDC6A0")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6001503")]
		[Address(RVA = "0x1CDC740", Offset = "0x1CDC740", VA = "0x1CDC740")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6001504")]
		[Address(RVA = "0x1CDC7D0", Offset = "0x1CDC7D0", VA = "0x1CDC7D0")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1CDC870", Offset = "0x1CDC870", VA = "0x1CDC870")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1CDC930", Offset = "0x1CDC930", VA = "0x1CDC930")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6001507")]
		[Address(RVA = "0x1CDC9C0", Offset = "0x1CDC9C0", VA = "0x1CDC9C0")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1CDCA60", Offset = "0x1CDCA60", VA = "0x1CDCA60")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6001509")]
		[Address(RVA = "0x1CDCB00", Offset = "0x1CDCB00", VA = "0x1CDCB00")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1CDCBA0", Offset = "0x1CDCBA0", VA = "0x1CDCBA0")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x600150B")]
		[Address(RVA = "0x1CDCC30", Offset = "0x1CDCC30", VA = "0x1CDCC30")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x600150C")]
		[Address(RVA = "0x1CDCCF8", Offset = "0x1CDCCF8", VA = "0x1CDCCF8")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1CDCD88", Offset = "0x1CDCD88", VA = "0x1CDCD88")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x600150E")]
		[Address(RVA = "0x1CDCE2C", Offset = "0x1CDCE2C", VA = "0x1CDCE2C")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1CDCEE0", Offset = "0x1CDCEE0", VA = "0x1CDCEE0")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1CDD260", Offset = "0x1CDD260", VA = "0x1CDD260")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1CD94E0", Offset = "0x1CD94E0", VA = "0x1CD94E0")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x1CDD320", Offset = "0x1CDD320", VA = "0x1CDD320")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001513")]
		[Address(RVA = "0x1CDD418", Offset = "0x1CDD418", VA = "0x1CDD418")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001514")]
		[Address(RVA = "0x1CDD5E0", Offset = "0x1CDD5E0", VA = "0x1CDD5E0")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001515")]
		[Address(RVA = "0x1CDD6A8", Offset = "0x1CDD6A8", VA = "0x1CDD6A8")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1CDD744", Offset = "0x1CDD744", VA = "0x1CDD744")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1CDD7AC", Offset = "0x1CDD7AC", VA = "0x1CDD7AC")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001518")]
		[Address(RVA = "0x1CDD84C", Offset = "0x1CDD84C", VA = "0x1CDD84C")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001519")]
		[Address(RVA = "0x1CDD8EC", Offset = "0x1CDD8EC", VA = "0x1CDD8EC")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1CDD984", Offset = "0x1CDD984", VA = "0x1CDD984")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1CDDA24", Offset = "0x1CDDA24", VA = "0x1CDDA24")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x600151C")]
		[Address(RVA = "0x1CDDAB4", Offset = "0x1CDDAB4", VA = "0x1CDDAB4")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1CDDB54", Offset = "0x1CDDB54", VA = "0x1CDDB54")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1CDDBFC", Offset = "0x1CDDBFC", VA = "0x1CDDBFC")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1CDDC9C", Offset = "0x1CDDC9C", VA = "0x1CDDC9C")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6001520")]
		[Address(RVA = "0x1CDDD2C", Offset = "0x1CDDD2C", VA = "0x1CDDD2C")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001521")]
		[Address(RVA = "0x1CDDE04", Offset = "0x1CDDE04", VA = "0x1CDDE04")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1CDDECC", Offset = "0x1CDDECC", VA = "0x1CDDECC")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1CDDF5C", Offset = "0x1CDDF5C", VA = "0x1CDDF5C")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1CDDFEC", Offset = "0x1CDDFEC", VA = "0x1CDDFEC")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1CDE084", Offset = "0x1CDE084", VA = "0x1CDE084")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1CDE114", Offset = "0x1CDE114", VA = "0x1CDE114")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1CDE1B4", Offset = "0x1CDE1B4", VA = "0x1CDE1B4")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1CDE254", Offset = "0x1CDE254", VA = "0x1CDE254")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1CDE2F4", Offset = "0x1CDE2F4", VA = "0x1CDE2F4")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1CDE384", Offset = "0x1CDE384", VA = "0x1CDE384")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1CDE444", Offset = "0x1CDE444", VA = "0x1CDE444")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1CDE504", Offset = "0x1CDE504", VA = "0x1CDE504")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1CDE5A4", Offset = "0x1CDE5A4", VA = "0x1CDE5A4")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1CDE67C", Offset = "0x1CDE67C", VA = "0x1CDE67C")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1CDE754", Offset = "0x1CDE754", VA = "0x1CDE754")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1CDE7F4", Offset = "0x1CDE7F4", VA = "0x1CDE7F4")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1CDE894", Offset = "0x1CDE894", VA = "0x1CDE894")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1CDE944", Offset = "0x1CDE944", VA = "0x1CDE944")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1CDE9D4", Offset = "0x1CDE9D4", VA = "0x1CDE9D4")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1CDEA64", Offset = "0x1CDEA64", VA = "0x1CDEA64")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1CDEB04", Offset = "0x1CDEB04", VA = "0x1CDEB04")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1CDEBA4", Offset = "0x1CDEBA4", VA = "0x1CDEBA4")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1CDEC44", Offset = "0x1CDEC44", VA = "0x1CDEC44")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1CDECE4", Offset = "0x1CDECE4", VA = "0x1CDECE4")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1CDED84", Offset = "0x1CDED84", VA = "0x1CDED84")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1CDEE3C", Offset = "0x1CDEE3C", VA = "0x1CDEE3C")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1CDEEEC", Offset = "0x1CDEEEC", VA = "0x1CDEEEC")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1CDEFC0", Offset = "0x1CDEFC0", VA = "0x1CDEFC0")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1CDF070", Offset = "0x1CDF070", VA = "0x1CDF070")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1CDF100", Offset = "0x1CDF100", VA = "0x1CDF100")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1CDF190", Offset = "0x1CDF190", VA = "0x1CDF190")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1CDF300", Offset = "0x1CDF300", VA = "0x1CDF300")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x1CDF470", Offset = "0x1CDF470", VA = "0x1CDF470")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1CDF518", Offset = "0x1CDF518", VA = "0x1CDF518")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1CDF5B8", Offset = "0x1CDF5B8", VA = "0x1CDF5B8")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1CDF668", Offset = "0x1CDF668", VA = "0x1CDF668")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1CD91BC", Offset = "0x1CD91BC", VA = "0x1CD91BC")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1CD93A4", Offset = "0x1CD93A4", VA = "0x1CD93A4")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1CDF6F8", Offset = "0x1CDF6F8", VA = "0x1CDF6F8")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1CDF788", Offset = "0x1CDF788", VA = "0x1CDF788")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1CDF818", Offset = "0x1CDF818", VA = "0x1CDF818")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1CDF8C0", Offset = "0x1CDF8C0", VA = "0x1CDF8C0")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1CD99C4", Offset = "0x1CD99C4", VA = "0x1CD99C4")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1CD9B30", Offset = "0x1CD9B30", VA = "0x1CD9B30")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1CD9C9C", Offset = "0x1CD9C9C", VA = "0x1CD9C9C")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1CDF960", Offset = "0x1CDF960", VA = "0x1CDF960")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1CD9E10", Offset = "0x1CD9E10", VA = "0x1CD9E10")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1CD9F7C", Offset = "0x1CD9F7C", VA = "0x1CD9F7C")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1CDA0E8", Offset = "0x1CDA0E8", VA = "0x1CDA0E8")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1CDFA00", Offset = "0x1CDFA00", VA = "0x1CDFA00")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1CDA25C", Offset = "0x1CDA25C", VA = "0x1CDA25C")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1CDA3C8", Offset = "0x1CDA3C8", VA = "0x1CDA3C8")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1CDA534", Offset = "0x1CDA534", VA = "0x1CDA534")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001556")]
		[Address(RVA = "0x1CDFAA0", Offset = "0x1CDFAA0", VA = "0x1CDFAA0")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1CDA6A0", Offset = "0x1CDA6A0", VA = "0x1CDA6A0")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1CDA7FC", Offset = "0x1CDA7FC", VA = "0x1CDA7FC")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001559")]
		[Address(RVA = "0x1CDA968", Offset = "0x1CDA968", VA = "0x1CDA968")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1CDAAD4", Offset = "0x1CDAAD4", VA = "0x1CDAAD4")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600155B")]
		[Address(RVA = "0x1CDFB40", Offset = "0x1CDFB40", VA = "0x1CDFB40")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1CDFBE0", Offset = "0x1CDFBE0", VA = "0x1CDFBE0")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1CDFCB4", Offset = "0x1CDFCB4", VA = "0x1CDFCB4")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x600155E")]
		[Address(RVA = "0x1CDFD64", Offset = "0x1CDFD64", VA = "0x1CDFD64")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x600155F")]
		[Address(RVA = "0x1CDFE34", Offset = "0x1CDFE34", VA = "0x1CDFE34")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6001560")]
		[Address(RVA = "0x1CDFEF4", Offset = "0x1CDFEF4", VA = "0x1CDFEF4")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x1CDFFC4", Offset = "0x1CDFFC4", VA = "0x1CDFFC4")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1CE0098", Offset = "0x1CE0098", VA = "0x1CE0098")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1CE0148", Offset = "0x1CE0148", VA = "0x1CE0148")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001564")]
		[Address(RVA = "0x1CE021C", Offset = "0x1CE021C", VA = "0x1CE021C")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1CE02CC", Offset = "0x1CE02CC", VA = "0x1CE02CC")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001566")]
		[Address(RVA = "0x1CE0374", Offset = "0x1CE0374", VA = "0x1CE0374")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x1CE0414", Offset = "0x1CE0414", VA = "0x1CE0414")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1CE04E8", Offset = "0x1CE04E8", VA = "0x1CE04E8")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x1CE0598", Offset = "0x1CE0598", VA = "0x1CE0598")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600156A")]
		[Address(RVA = "0x1CE0640", Offset = "0x1CE0640", VA = "0x1CE0640")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x1CE06E0", Offset = "0x1CE06E0", VA = "0x1CE06E0")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1CE07B4", Offset = "0x1CE07B4", VA = "0x1CE07B4")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x1CE0864", Offset = "0x1CE0864", VA = "0x1CE0864")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1CE0958", Offset = "0x1CE0958", VA = "0x1CE0958")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1CE0A10", Offset = "0x1CE0A10", VA = "0x1CE0A10")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001570")]
		[Address(RVA = "0x1CE0B04", Offset = "0x1CE0B04", VA = "0x1CE0B04")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1CE0BBC", Offset = "0x1CE0BBC", VA = "0x1CE0BBC")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1CE0CD8", Offset = "0x1CE0CD8", VA = "0x1CE0CD8")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6001573")]
		[Address(RVA = "0x1CE0DC0", Offset = "0x1CE0DC0", VA = "0x1CE0DC0")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6001574")]
		[Address(RVA = "0x1CE0E50", Offset = "0x1CE0E50", VA = "0x1CE0E50")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x1CE0EE0", Offset = "0x1CE0EE0", VA = "0x1CE0EE0")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001576")]
		[Address(RVA = "0x1CE0F88", Offset = "0x1CE0F88", VA = "0x1CE0F88")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x1CE1028", Offset = "0x1CE1028", VA = "0x1CE1028")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1CE10D0", Offset = "0x1CE10D0", VA = "0x1CE10D0")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x1CE116C", Offset = "0x1CE116C", VA = "0x1CE116C")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1CE1214", Offset = "0x1CE1214", VA = "0x1CE1214")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1CE12B4", Offset = "0x1CE12B4", VA = "0x1CE12B4")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600157C")]
		[Address(RVA = "0x1CE1388", Offset = "0x1CE1388", VA = "0x1CE1388")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1CE1438", Offset = "0x1CE1438", VA = "0x1CE1438")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1CE1598", Offset = "0x1CE1598", VA = "0x1CE1598")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x1CE178C", Offset = "0x1CE178C", VA = "0x1CE178C")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1CE1834", Offset = "0x1CE1834", VA = "0x1CE1834")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1CE18D4", Offset = "0x1CE18D4", VA = "0x1CE18D4")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1CE197C", Offset = "0x1CE197C", VA = "0x1CE197C")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1CE1A1C", Offset = "0x1CE1A1C", VA = "0x1CE1A1C")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1CE1B8C", Offset = "0x1CE1B8C", VA = "0x1CE1B8C")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1CE1C1C", Offset = "0x1CE1C1C", VA = "0x1CE1C1C")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1CE1CC4", Offset = "0x1CE1CC4", VA = "0x1CE1CC4")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001587")]
		[Address(RVA = "0x1CE1D64", Offset = "0x1CE1D64", VA = "0x1CE1D64")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1CE1DF4", Offset = "0x1CE1DF4", VA = "0x1CE1DF4")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1CE1E9C", Offset = "0x1CE1E9C", VA = "0x1CE1E9C")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1CE1F3C", Offset = "0x1CE1F3C", VA = "0x1CE1F3C")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1CE200C", Offset = "0x1CE200C", VA = "0x1CE200C")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1CE20D4", Offset = "0x1CE20D4", VA = "0x1CE20D4")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1CE2194", Offset = "0x1CE2194", VA = "0x1CE2194")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1CE224C", Offset = "0x1CE224C", VA = "0x1CE224C")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600158F")]
		[Address(RVA = "0x1CE22EC", Offset = "0x1CE22EC", VA = "0x1CE22EC")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x1CE238C", Offset = "0x1CE238C", VA = "0x1CE238C")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001591")]
		[Address(RVA = "0x1CE2464", Offset = "0x1CE2464", VA = "0x1CE2464")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6001592")]
		[Address(RVA = "0x1CE253C", Offset = "0x1CE253C", VA = "0x1CE253C")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x1CE25CC", Offset = "0x1CE25CC", VA = "0x1CE25CC")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1CE2674", Offset = "0x1CE2674", VA = "0x1CE2674")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6001595")]
		[Address(RVA = "0x1CE2714", Offset = "0x1CE2714", VA = "0x1CE2714")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1CE27A4", Offset = "0x1CE27A4", VA = "0x1CE27A4")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1CE2834", Offset = "0x1CE2834", VA = "0x1CE2834")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001598")]
		[Address(RVA = "0x1CE28C4", Offset = "0x1CE28C4", VA = "0x1CE28C4")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6001599")]
		[Address(RVA = "0x1CE2974", Offset = "0x1CE2974", VA = "0x1CE2974")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x600159A")]
		[Address(RVA = "0x1CE2A04", Offset = "0x1CE2A04", VA = "0x1CE2A04")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1CE2A94", Offset = "0x1CE2A94", VA = "0x1CE2A94")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x600159C")]
		[Address(RVA = "0x1CE2B34", Offset = "0x1CE2B34", VA = "0x1CE2B34")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1CE2BD4", Offset = "0x1CE2BD4", VA = "0x1CE2BD4")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600159E")]
		[Address(RVA = "0x1CE2C8C", Offset = "0x1CE2C8C", VA = "0x1CE2C8C")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x1CE2D3C", Offset = "0x1CE2D3C", VA = "0x1CE2D3C")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x1CE2DF4", Offset = "0x1CE2DF4", VA = "0x1CE2DF4")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x1CE2EA4", Offset = "0x1CE2EA4", VA = "0x1CE2EA4")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x1CE2F78", Offset = "0x1CE2F78", VA = "0x1CE2F78")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x1CE3028", Offset = "0x1CE3028", VA = "0x1CE3028")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1CE30B8", Offset = "0x1CE30B8", VA = "0x1CE30B8")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x1CE3188", Offset = "0x1CE3188", VA = "0x1CE3188")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x1CE3250", Offset = "0x1CE3250", VA = "0x1CE3250")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x1CE3308", Offset = "0x1CE3308", VA = "0x1CE3308")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x1CE33B8", Offset = "0x1CE33B8", VA = "0x1CE33B8")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1CE3478", Offset = "0x1CE3478", VA = "0x1CE3478")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x1CE3530", Offset = "0x1CE3530", VA = "0x1CE3530")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x1CE35E8", Offset = "0x1CE35E8", VA = "0x1CE35E8")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1CE3698", Offset = "0x1CE3698", VA = "0x1CE3698")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1CE3750", Offset = "0x1CE3750", VA = "0x1CE3750")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1CE3800", Offset = "0x1CE3800", VA = "0x1CE3800")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1CE38B8", Offset = "0x1CE38B8", VA = "0x1CE38B8")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x1CE3968", Offset = "0x1CE3968", VA = "0x1CE3968")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x1CE3A18", Offset = "0x1CE3A18", VA = "0x1CE3A18")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x1CE3AC8", Offset = "0x1CE3AC8", VA = "0x1CE3AC8")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1CE3B58", Offset = "0x1CE3B58", VA = "0x1CE3B58")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1CE3C18", Offset = "0x1CE3C18", VA = "0x1CE3C18")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x1CE3CD0", Offset = "0x1CE3CD0", VA = "0x1CE3CD0")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x1CE3D80", Offset = "0x1CE3D80", VA = "0x1CE3D80")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1CE3E38", Offset = "0x1CE3E38", VA = "0x1CE3E38")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x1CE4000", Offset = "0x1CE4000", VA = "0x1CE4000")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1CE40A0", Offset = "0x1CE40A0", VA = "0x1CE40A0")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1CE417C", Offset = "0x1CE417C", VA = "0x1CE417C")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1CE4234", Offset = "0x1CE4234", VA = "0x1CE4234")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1CE42C4", Offset = "0x1CE42C4", VA = "0x1CE42C4")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x1CE4364", Offset = "0x1CE4364", VA = "0x1CE4364")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x1CE43F4", Offset = "0x1CE43F4", VA = "0x1CE43F4")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1CE44A4", Offset = "0x1CE44A4", VA = "0x1CE44A4")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1CE4544", Offset = "0x1CE4544", VA = "0x1CE4544")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1CE45D4", Offset = "0x1CE45D4", VA = "0x1CE45D4")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1CE4674", Offset = "0x1CE4674", VA = "0x1CE4674")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1CE4720", Offset = "0x1CE4720", VA = "0x1CE4720")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1CE47C0", Offset = "0x1CE47C0", VA = "0x1CE47C0")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x1CE4860", Offset = "0x1CE4860", VA = "0x1CE4860")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x1CE4918", Offset = "0x1CE4918", VA = "0x1CE4918")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1CE49D0", Offset = "0x1CE49D0", VA = "0x1CE49D0")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1CE4A70", Offset = "0x1CE4A70", VA = "0x1CE4A70")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1CE4B00", Offset = "0x1CE4B00", VA = "0x1CE4B00")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x1CE4BA0", Offset = "0x1CE4BA0", VA = "0x1CE4BA0")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x1CE4C30", Offset = "0x1CE4C30", VA = "0x1CE4C30")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x1CE4CD0", Offset = "0x1CE4CD0", VA = "0x1CE4CD0")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1CE4D60", Offset = "0x1CE4D60", VA = "0x1CE4D60")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1CE4E00", Offset = "0x1CE4E00", VA = "0x1CE4E00")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1CE4EBC", Offset = "0x1CE4EBC", VA = "0x1CE4EBC")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1CE4F6C", Offset = "0x1CE4F6C", VA = "0x1CE4F6C")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x1CE501C", Offset = "0x1CE501C", VA = "0x1CE501C")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x1CE50CC", Offset = "0x1CE50CC", VA = "0x1CE50CC")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x1CE5180", Offset = "0x1CE5180", VA = "0x1CE5180")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x1CE5220", Offset = "0x1CE5220", VA = "0x1CE5220")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x1CE52C0", Offset = "0x1CE52C0", VA = "0x1CE52C0")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x1CE537C", Offset = "0x1CE537C", VA = "0x1CE537C")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x1CE542C", Offset = "0x1CE542C", VA = "0x1CE542C")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x1CE54E4", Offset = "0x1CE54E4", VA = "0x1CE54E4")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x1CE56A8", Offset = "0x1CE56A8", VA = "0x1CE56A8")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x1CE5758", Offset = "0x1CE5758", VA = "0x1CE5758")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x1CE5808", Offset = "0x1CE5808", VA = "0x1CE5808")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x1CE58B8", Offset = "0x1CE58B8", VA = "0x1CE58B8")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x1CE5958", Offset = "0x1CE5958", VA = "0x1CE5958")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1CE59F8", Offset = "0x1CE59F8", VA = "0x1CE59F8")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1CE5AA0", Offset = "0x1CE5AA0", VA = "0x1CE5AA0")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x1CE5B40", Offset = "0x1CE5B40", VA = "0x1CE5B40")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x1CE5BE0", Offset = "0x1CE5BE0", VA = "0x1CE5BE0")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x1CE5C70", Offset = "0x1CE5C70", VA = "0x1CE5C70")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x1CE5D10", Offset = "0x1CE5D10", VA = "0x1CE5D10")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x1CE5DA0", Offset = "0x1CE5DA0", VA = "0x1CE5DA0")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x1CE5E30", Offset = "0x1CE5E30", VA = "0x1CE5E30")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x1CE5EC0", Offset = "0x1CE5EC0", VA = "0x1CE5EC0")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x1CE5F60", Offset = "0x1CE5F60", VA = "0x1CE5F60")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x1CE6000", Offset = "0x1CE6000", VA = "0x1CE6000")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x1CE6090", Offset = "0x1CE6090", VA = "0x1CE6090")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x1CE6120", Offset = "0x1CE6120", VA = "0x1CE6120")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x1CE61C0", Offset = "0x1CE61C0", VA = "0x1CE61C0")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x1CE6260", Offset = "0x1CE6260", VA = "0x1CE6260")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x1CE6300", Offset = "0x1CE6300", VA = "0x1CE6300")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1CE63A0", Offset = "0x1CE63A0", VA = "0x1CE63A0")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x1CE6450", Offset = "0x1CE6450", VA = "0x1CE6450")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1CE64F0", Offset = "0x1CE64F0", VA = "0x1CE64F0")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1CE6580", Offset = "0x1CE6580", VA = "0x1CE6580")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x1CE6610", Offset = "0x1CE6610", VA = "0x1CE6610")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x1CE66A0", Offset = "0x1CE66A0", VA = "0x1CE66A0")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x1CE6730", Offset = "0x1CE6730", VA = "0x1CE6730")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x1CE67EC", Offset = "0x1CE67EC", VA = "0x1CE67EC")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x1CE689C", Offset = "0x1CE689C", VA = "0x1CE689C")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x1CE6960", Offset = "0x1CE6960", VA = "0x1CE6960")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x1CE6A18", Offset = "0x1CE6A18", VA = "0x1CE6A18")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x1CE6AD8", Offset = "0x1CE6AD8", VA = "0x1CE6AD8")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x1CE6B98", Offset = "0x1CE6B98", VA = "0x1CE6B98")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x1CE6C38", Offset = "0x1CE6C38", VA = "0x1CE6C38")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x1CE6CA0", Offset = "0x1CE6CA0", VA = "0x1CE6CA0")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x1CE6D40", Offset = "0x1CE6D40", VA = "0x1CE6D40")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x1CE6DE0", Offset = "0x1CE6DE0", VA = "0x1CE6DE0")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x1CE6E48", Offset = "0x1CE6E48", VA = "0x1CE6E48")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001600")]
		[Address(RVA = "0x1CE6EE8", Offset = "0x1CE6EE8", VA = "0x1CE6EE8")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001601")]
		[Address(RVA = "0x1CE6F88", Offset = "0x1CE6F88", VA = "0x1CE6F88")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001602")]
		[Address(RVA = "0x1CE7028", Offset = "0x1CE7028", VA = "0x1CE7028")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x1CE70D8", Offset = "0x1CE70D8", VA = "0x1CE70D8")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001604")]
		[Address(RVA = "0x1CE7140", Offset = "0x1CE7140", VA = "0x1CE7140")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001605")]
		[Address(RVA = "0x1CE71E0", Offset = "0x1CE71E0", VA = "0x1CE71E0")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001606")]
		[Address(RVA = "0x1CE7280", Offset = "0x1CE7280", VA = "0x1CE7280")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x1CE7328", Offset = "0x1CE7328", VA = "0x1CE7328")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001608")]
		[Address(RVA = "0x1CE7390", Offset = "0x1CE7390", VA = "0x1CE7390")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001609")]
		[Address(RVA = "0x1CE7430", Offset = "0x1CE7430", VA = "0x1CE7430")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1CE74D0", Offset = "0x1CE74D0", VA = "0x1CE74D0")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x1CE7578", Offset = "0x1CE7578", VA = "0x1CE7578")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600160C")]
		[Address(RVA = "0x1CE75E0", Offset = "0x1CE75E0", VA = "0x1CE75E0")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x1CE7680", Offset = "0x1CE7680", VA = "0x1CE7680")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600160E")]
		[Address(RVA = "0x1CE76E8", Offset = "0x1CE76E8", VA = "0x1CE76E8")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600160F")]
		[Address(RVA = "0x1CE7788", Offset = "0x1CE7788", VA = "0x1CE7788")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x1CE7838", Offset = "0x1CE7838", VA = "0x1CE7838")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001611")]
		[Address(RVA = "0x1CE78A0", Offset = "0x1CE78A0", VA = "0x1CE78A0")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001612")]
		[Address(RVA = "0x1CE7940", Offset = "0x1CE7940", VA = "0x1CE7940")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001613")]
		[Address(RVA = "0x1CE79E0", Offset = "0x1CE79E0", VA = "0x1CE79E0")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001614")]
		[Address(RVA = "0x1CE7A88", Offset = "0x1CE7A88", VA = "0x1CE7A88")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x1CE7B30", Offset = "0x1CE7B30", VA = "0x1CE7B30")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001616")]
		[Address(RVA = "0x1CE7B98", Offset = "0x1CE7B98", VA = "0x1CE7B98")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1CE7C38", Offset = "0x1CE7C38", VA = "0x1CE7C38")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1CE7CD8", Offset = "0x1CE7CD8", VA = "0x1CE7CD8")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x1CE7D78", Offset = "0x1CE7D78", VA = "0x1CE7D78")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600161A")]
		[Address(RVA = "0x1CE7DE0", Offset = "0x1CE7DE0", VA = "0x1CE7DE0")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600161B")]
		[Address(RVA = "0x1CE7E80", Offset = "0x1CE7E80", VA = "0x1CE7E80")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x1CE7F20", Offset = "0x1CE7F20", VA = "0x1CE7F20")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600161D")]
		[Address(RVA = "0x1CE7F88", Offset = "0x1CE7F88", VA = "0x1CE7F88")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600161E")]
		[Address(RVA = "0x1CE8028", Offset = "0x1CE8028", VA = "0x1CE8028")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x1CE80C8", Offset = "0x1CE80C8", VA = "0x1CE80C8")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001620")]
		[Address(RVA = "0x1CE8130", Offset = "0x1CE8130", VA = "0x1CE8130")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x1CE81D0", Offset = "0x1CE81D0", VA = "0x1CE81D0")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001622")]
		[Address(RVA = "0x1CE8238", Offset = "0x1CE8238", VA = "0x1CE8238")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x1CE82D8", Offset = "0x1CE82D8", VA = "0x1CE82D8")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001624")]
		[Address(RVA = "0x1CE8340", Offset = "0x1CE8340", VA = "0x1CE8340")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x1CE83E0", Offset = "0x1CE83E0", VA = "0x1CE83E0")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001626")]
		[Address(RVA = "0x1CE8448", Offset = "0x1CE8448", VA = "0x1CE8448")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1CE84E8", Offset = "0x1CE84E8", VA = "0x1CE84E8")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001628")]
		[Address(RVA = "0x1CE8588", Offset = "0x1CE8588", VA = "0x1CE8588")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001629")]
		[Address(RVA = "0x1CE8638", Offset = "0x1CE8638", VA = "0x1CE8638")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600162A")]
		[Address(RVA = "0x1CE86D8", Offset = "0x1CE86D8", VA = "0x1CE86D8")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600162B")]
		[Address(RVA = "0x1CE8778", Offset = "0x1CE8778", VA = "0x1CE8778")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x1CE8818", Offset = "0x1CE8818", VA = "0x1CE8818")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1CE8880", Offset = "0x1CE8880", VA = "0x1CE8880")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600162E")]
		[Address(RVA = "0x1CE8920", Offset = "0x1CE8920", VA = "0x1CE8920")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1CE89C8", Offset = "0x1CE89C8", VA = "0x1CE89C8")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001630")]
		[Address(RVA = "0x1CE8A68", Offset = "0x1CE8A68", VA = "0x1CE8A68")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1CE8B08", Offset = "0x1CE8B08", VA = "0x1CE8B08")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1CE8B70", Offset = "0x1CE8B70", VA = "0x1CE8B70")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001633")]
		[Address(RVA = "0x1CE8C10", Offset = "0x1CE8C10", VA = "0x1CE8C10")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001634")]
		[Address(RVA = "0x1CE8CB8", Offset = "0x1CE8CB8", VA = "0x1CE8CB8")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1CE8D58", Offset = "0x1CE8D58", VA = "0x1CE8D58")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1CE8DC0", Offset = "0x1CE8DC0", VA = "0x1CE8DC0")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x1CE8E60", Offset = "0x1CE8E60", VA = "0x1CE8E60")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001638")]
		[Address(RVA = "0x1CE8F00", Offset = "0x1CE8F00", VA = "0x1CE8F00")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1CE8FA0", Offset = "0x1CE8FA0", VA = "0x1CE8FA0")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1CE9040", Offset = "0x1CE9040", VA = "0x1CE9040")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600163B")]
		[Address(RVA = "0x1CE90E0", Offset = "0x1CE90E0", VA = "0x1CE90E0")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1CE9188", Offset = "0x1CE9188", VA = "0x1CE9188")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1CE9228", Offset = "0x1CE9228", VA = "0x1CE9228")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x1CE92C8", Offset = "0x1CE92C8", VA = "0x1CE92C8")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600163F")]
		[Address(RVA = "0x1CE9330", Offset = "0x1CE9330", VA = "0x1CE9330")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001640")]
		[Address(RVA = "0x1CE93D0", Offset = "0x1CE93D0", VA = "0x1CE93D0")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001641")]
		[Address(RVA = "0x1CE9470", Offset = "0x1CE9470", VA = "0x1CE9470")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x1CE9510", Offset = "0x1CE9510", VA = "0x1CE9510")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001643")]
		[Address(RVA = "0x1CE9578", Offset = "0x1CE9578", VA = "0x1CE9578")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001644")]
		[Address(RVA = "0x1CE9618", Offset = "0x1CE9618", VA = "0x1CE9618")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001645")]
		[Address(RVA = "0x1CE96C8", Offset = "0x1CE96C8", VA = "0x1CE96C8")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x1CE9768", Offset = "0x1CE9768", VA = "0x1CE9768")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001647")]
		[Address(RVA = "0x1CE97D0", Offset = "0x1CE97D0", VA = "0x1CE97D0")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001648")]
		[Address(RVA = "0x1CE9870", Offset = "0x1CE9870", VA = "0x1CE9870")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001649")]
		[Address(RVA = "0x1CE9910", Offset = "0x1CE9910", VA = "0x1CE9910")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x1CE99B0", Offset = "0x1CE99B0", VA = "0x1CE99B0")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600164B")]
		[Address(RVA = "0x1CE9A18", Offset = "0x1CE9A18", VA = "0x1CE9A18")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x1CE9AB8", Offset = "0x1CE9AB8", VA = "0x1CE9AB8")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600164D")]
		[Address(RVA = "0x1CE9BD4", Offset = "0x1CE9BD4", VA = "0x1CE9BD4")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600164E")]
		[Address(RVA = "0x1CE9B34", Offset = "0x1CE9B34", VA = "0x1CE9B34")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x1CE9C74", Offset = "0x1CE9C74", VA = "0x1CE9C74")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001650")]
		[Address(RVA = "0x1CE9CDC", Offset = "0x1CE9CDC", VA = "0x1CE9CDC")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x1CE9D7C", Offset = "0x1CE9D7C", VA = "0x1CE9D7C")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001652")]
		[Address(RVA = "0x1CE9DE4", Offset = "0x1CE9DE4", VA = "0x1CE9DE4")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001653")]
		[Address(RVA = "0x1CE9E84", Offset = "0x1CE9E84", VA = "0x1CE9E84")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001654")]
		[Address(RVA = "0x1CE9F24", Offset = "0x1CE9F24", VA = "0x1CE9F24")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x1CE9FC4", Offset = "0x1CE9FC4", VA = "0x1CE9FC4")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001656")]
		[Address(RVA = "0x1CEA02C", Offset = "0x1CEA02C", VA = "0x1CEA02C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1CEA0CC", Offset = "0x1CEA0CC", VA = "0x1CEA0CC")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001658")]
		[Address(RVA = "0x1CEA134", Offset = "0x1CEA134", VA = "0x1CEA134")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001659")]
		[Address(RVA = "0x1CEA1D4", Offset = "0x1CEA1D4", VA = "0x1CEA1D4")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600165A")]
		[Address(RVA = "0x1CEA274", Offset = "0x1CEA274", VA = "0x1CEA274")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x1CEA314", Offset = "0x1CEA314", VA = "0x1CEA314")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600165C")]
		[Address(RVA = "0x1CEA37C", Offset = "0x1CEA37C", VA = "0x1CEA37C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600165D")]
		[Address(RVA = "0x1CEA41C", Offset = "0x1CEA41C", VA = "0x1CEA41C")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x1CEA4CC", Offset = "0x1CEA4CC", VA = "0x1CEA4CC")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600165F")]
		[Address(RVA = "0x1CEA534", Offset = "0x1CEA534", VA = "0x1CEA534")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001660")]
		[Address(RVA = "0x1CEA5D4", Offset = "0x1CEA5D4", VA = "0x1CEA5D4")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001661")]
		[Address(RVA = "0x1CEA674", Offset = "0x1CEA674", VA = "0x1CEA674")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x1CEA71C", Offset = "0x1CEA71C", VA = "0x1CEA71C")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001663")]
		[Address(RVA = "0x1CEA784", Offset = "0x1CEA784", VA = "0x1CEA784")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x1CEA824", Offset = "0x1CEA824", VA = "0x1CEA824")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001665")]
		[Address(RVA = "0x1CEA88C", Offset = "0x1CEA88C", VA = "0x1CEA88C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001666")]
		[Address(RVA = "0x1CEA92C", Offset = "0x1CEA92C", VA = "0x1CEA92C")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x1CEA9CC", Offset = "0x1CEA9CC", VA = "0x1CEA9CC")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001668")]
		[Address(RVA = "0x1CEAA34", Offset = "0x1CEAA34", VA = "0x1CEAA34")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x1CEAAD4", Offset = "0x1CEAAD4", VA = "0x1CEAAD4")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x600166A")]
		[Address(RVA = "0x1CEAB90", Offset = "0x1CEAB90", VA = "0x1CEAB90")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x1CDB70C", Offset = "0x1CDB70C", VA = "0x1CDB70C")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600166C")]
		[Address(RVA = "0x1CEAC40", Offset = "0x1CEAC40", VA = "0x1CEAC40")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x600166D")]
		[Address(RVA = "0x1CDB66C", Offset = "0x1CDB66C", VA = "0x1CDB66C")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x1CDB784", Offset = "0x1CDB784", VA = "0x1CDB784")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600166F")]
		[Address(RVA = "0x1CEACF0", Offset = "0x1CEACF0", VA = "0x1CEACF0")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x6001670")]
		[Address(RVA = "0x1CEADA0", Offset = "0x1CEADA0", VA = "0x1CEADA0")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x1CEAE3C", Offset = "0x1CEAE3C", VA = "0x1CEAE3C")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001672")]
		[Address(RVA = "0x1CEAEA4", Offset = "0x1CEAEA4", VA = "0x1CEAEA4")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001673")]
		[Address(RVA = "0x1CEAF44", Offset = "0x1CEAF44", VA = "0x1CEAF44")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x1CEAFE4", Offset = "0x1CEAFE4", VA = "0x1CEAFE4")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001675")]
		[Address(RVA = "0x1CEB04C", Offset = "0x1CEB04C", VA = "0x1CEB04C")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001676")]
		[Address(RVA = "0x1CEB0EC", Offset = "0x1CEB0EC", VA = "0x1CEB0EC")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001677")]
		[Address(RVA = "0x1CEB18C", Offset = "0x1CEB18C", VA = "0x1CEB18C")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001678")]
		[Address(RVA = "0x1CEB22C", Offset = "0x1CEB22C", VA = "0x1CEB22C")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001679")]
		[Address(RVA = "0x1CEB2CC", Offset = "0x1CEB2CC", VA = "0x1CEB2CC")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x1CEB374", Offset = "0x1CEB374", VA = "0x1CEB374")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600167B")]
		[Address(RVA = "0x1CEB3DC", Offset = "0x1CEB3DC", VA = "0x1CEB3DC")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1CEB47C", Offset = "0x1CEB47C", VA = "0x1CEB47C")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600167D")]
		[Address(RVA = "0x1CEB4E4", Offset = "0x1CEB4E4", VA = "0x1CEB4E4")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x1CEB584", Offset = "0x1CEB584", VA = "0x1CEB584")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600167F")]
		[Address(RVA = "0x1CEB5EC", Offset = "0x1CEB5EC", VA = "0x1CEB5EC")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001680")]
		[Address(RVA = "0x1CEB68C", Offset = "0x1CEB68C", VA = "0x1CEB68C")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x1CEB72C", Offset = "0x1CEB72C", VA = "0x1CEB72C")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001682")]
		[Address(RVA = "0x1CEB794", Offset = "0x1CEB794", VA = "0x1CEB794")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1CEB834", Offset = "0x1CEB834", VA = "0x1CEB834")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001684")]
		[Address(RVA = "0x1CEB8E4", Offset = "0x1CEB8E4", VA = "0x1CEB8E4")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x1CEB984", Offset = "0x1CEB984", VA = "0x1CEB984")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001686")]
		[Address(RVA = "0x1CEB9EC", Offset = "0x1CEB9EC", VA = "0x1CEB9EC")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x1CEBA8C", Offset = "0x1CEBA8C", VA = "0x1CEBA8C")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001688")]
		[Address(RVA = "0x1CEBAF4", Offset = "0x1CEBAF4", VA = "0x1CEBAF4")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x1CEBB94", Offset = "0x1CEBB94", VA = "0x1CEBB94")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1CEBBFC", Offset = "0x1CEBBFC", VA = "0x1CEBBFC")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1CEBC9C", Offset = "0x1CEBC9C", VA = "0x1CEBC9C")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1CEBD44", Offset = "0x1CEBD44", VA = "0x1CEBD44")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x1CEBDEC", Offset = "0x1CEBDEC", VA = "0x1CEBDEC")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1CEBE54", Offset = "0x1CEBE54", VA = "0x1CEBE54")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x1CEBEF4", Offset = "0x1CEBEF4", VA = "0x1CEBEF4")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001690")]
		[Address(RVA = "0x1CEBF5C", Offset = "0x1CEBF5C", VA = "0x1CEBF5C")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001691")]
		[Address(RVA = "0x1CEBFFC", Offset = "0x1CEBFFC", VA = "0x1CEBFFC")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001692")]
		[Address(RVA = "0x1CEC09C", Offset = "0x1CEC09C", VA = "0x1CEC09C")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001693")]
		[Address(RVA = "0x1CEC13C", Offset = "0x1CEC13C", VA = "0x1CEC13C")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001694")]
		[Address(RVA = "0x1CEC1DC", Offset = "0x1CEC1DC", VA = "0x1CEC1DC")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1CEC284", Offset = "0x1CEC284", VA = "0x1CEC284")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001696")]
		[Address(RVA = "0x1CEC32C", Offset = "0x1CEC32C", VA = "0x1CEC32C")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001697")]
		[Address(RVA = "0x1CEC3D4", Offset = "0x1CEC3D4", VA = "0x1CEC3D4")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1CEC474", Offset = "0x1CEC474", VA = "0x1CEC474")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001699")]
		[Address(RVA = "0x1CEC51C", Offset = "0x1CEC51C", VA = "0x1CEC51C")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x1CEC5C4", Offset = "0x1CEC5C4", VA = "0x1CEC5C4")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600169B")]
		[Address(RVA = "0x1CEC6E0", Offset = "0x1CEC6E0", VA = "0x1CEC6E0")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600169C")]
		[Address(RVA = "0x1CEC640", Offset = "0x1CEC640", VA = "0x1CEC640")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600169D")]
		[Address(RVA = "0x1CEC780", Offset = "0x1CEC780", VA = "0x1CEC780")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600169E")]
		[Address(RVA = "0x1CEC820", Offset = "0x1CEC820", VA = "0x1CEC820")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x1CEC8C0", Offset = "0x1CEC8C0", VA = "0x1CEC8C0")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x1CEC928", Offset = "0x1CEC928", VA = "0x1CEC928")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1CEC9C8", Offset = "0x1CEC9C8", VA = "0x1CEC9C8")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1CECA68", Offset = "0x1CECA68", VA = "0x1CECA68")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1CECB18", Offset = "0x1CECB18", VA = "0x1CECB18")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x1CECB80", Offset = "0x1CECB80", VA = "0x1CECB80")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x1CECC20", Offset = "0x1CECC20", VA = "0x1CECC20")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x1CECC88", Offset = "0x1CECC88", VA = "0x1CECC88")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x1CECD28", Offset = "0x1CECD28", VA = "0x1CECD28")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x1CECDC8", Offset = "0x1CECDC8", VA = "0x1CECDC8")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1CECE68", Offset = "0x1CECE68", VA = "0x1CECE68")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1CECF10", Offset = "0x1CECF10", VA = "0x1CECF10")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1CECFB8", Offset = "0x1CECFB8", VA = "0x1CECFB8")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x1CED060", Offset = "0x1CED060", VA = "0x1CED060")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1CED0C8", Offset = "0x1CED0C8", VA = "0x1CED0C8")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x1CED168", Offset = "0x1CED168", VA = "0x1CED168")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x1CED208", Offset = "0x1CED208", VA = "0x1CED208")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x1CED270", Offset = "0x1CED270", VA = "0x1CED270")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x1CED310", Offset = "0x1CED310", VA = "0x1CED310")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x1CED3C0", Offset = "0x1CED3C0", VA = "0x1CED3C0")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x1CED460", Offset = "0x1CED460", VA = "0x1CED460")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x1CED508", Offset = "0x1CED508", VA = "0x1CED508")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x1CED5A8", Offset = "0x1CED5A8", VA = "0x1CED5A8")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x1CED650", Offset = "0x1CED650", VA = "0x1CED650")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x1CED6F8", Offset = "0x1CED6F8", VA = "0x1CED6F8")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x1CED7A0", Offset = "0x1CED7A0", VA = "0x1CED7A0")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x1CED840", Offset = "0x1CED840", VA = "0x1CED840")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x1CED8E8", Offset = "0x1CED8E8", VA = "0x1CED8E8")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x1CED988", Offset = "0x1CED988", VA = "0x1CED988")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x1CEDA28", Offset = "0x1CEDA28", VA = "0x1CEDA28")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x1CEDA90", Offset = "0x1CEDA90", VA = "0x1CEDA90")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x1CEDB30", Offset = "0x1CEDB30", VA = "0x1CEDB30")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x1CEDBD0", Offset = "0x1CEDBD0", VA = "0x1CEDBD0")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1CEDC70", Offset = "0x1CEDC70", VA = "0x1CEDC70")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1CEDD18", Offset = "0x1CEDD18", VA = "0x1CEDD18")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x1CEDDB8", Offset = "0x1CEDDB8", VA = "0x1CEDDB8")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x1CEDE58", Offset = "0x1CEDE58", VA = "0x1CEDE58")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x1CEDEF8", Offset = "0x1CEDEF8", VA = "0x1CEDEF8")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x1CEDF60", Offset = "0x1CEDF60", VA = "0x1CEDF60")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x1CEE000", Offset = "0x1CEE000", VA = "0x1CEE000")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x1CEE0B0", Offset = "0x1CEE0B0", VA = "0x1CEE0B0")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x1CEE150", Offset = "0x1CEE150", VA = "0x1CEE150")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x1CEE1F0", Offset = "0x1CEE1F0", VA = "0x1CEE1F0")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x1CEE290", Offset = "0x1CEE290", VA = "0x1CEE290")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x1CEE2F8", Offset = "0x1CEE2F8", VA = "0x1CEE2F8")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x1CEE398", Offset = "0x1CEE398", VA = "0x1CEE398")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x1CEE438", Offset = "0x1CEE438", VA = "0x1CEE438")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x1CEE4E8", Offset = "0x1CEE4E8", VA = "0x1CEE4E8")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x1CEE550", Offset = "0x1CEE550", VA = "0x1CEE550")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x1CEE5F0", Offset = "0x1CEE5F0", VA = "0x1CEE5F0")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x1CEE690", Offset = "0x1CEE690", VA = "0x1CEE690")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x1CEE738", Offset = "0x1CEE738", VA = "0x1CEE738")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x1CEE7D8", Offset = "0x1CEE7D8", VA = "0x1CEE7D8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x1CEE878", Offset = "0x1CEE878", VA = "0x1CEE878")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x1CEE918", Offset = "0x1CEE918", VA = "0x1CEE918")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x1CEE9B8", Offset = "0x1CEE9B8", VA = "0x1CEE9B8")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x1CEEA20", Offset = "0x1CEEA20", VA = "0x1CEEA20")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x1CEEAC0", Offset = "0x1CEEAC0", VA = "0x1CEEAC0")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x1CEEB60", Offset = "0x1CEEB60", VA = "0x1CEEB60")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x1CEEBC8", Offset = "0x1CEEBC8", VA = "0x1CEEBC8")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x1CEEC68", Offset = "0x1CEEC68", VA = "0x1CEEC68")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x1CEED08", Offset = "0x1CEED08", VA = "0x1CEED08")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x1CEEDA8", Offset = "0x1CEEDA8", VA = "0x1CEEDA8")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x1CEEE58", Offset = "0x1CEEE58", VA = "0x1CEEE58")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x1CEEEF8", Offset = "0x1CEEEF8", VA = "0x1CEEEF8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x1CEEF98", Offset = "0x1CEEF98", VA = "0x1CEEF98")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x1CEF038", Offset = "0x1CEF038", VA = "0x1CEF038")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x1CEF0E8", Offset = "0x1CEF0E8", VA = "0x1CEF0E8")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x1CEF188", Offset = "0x1CEF188", VA = "0x1CEF188")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x1CEF228", Offset = "0x1CEF228", VA = "0x1CEF228")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x1CEF2C8", Offset = "0x1CEF2C8", VA = "0x1CEF2C8")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x1CEF330", Offset = "0x1CEF330", VA = "0x1CEF330")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x1CEF3D0", Offset = "0x1CEF3D0", VA = "0x1CEF3D0")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x1CEF470", Offset = "0x1CEF470", VA = "0x1CEF470")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x1CEF510", Offset = "0x1CEF510", VA = "0x1CEF510")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x1CEF5B8", Offset = "0x1CEF5B8", VA = "0x1CEF5B8")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x1CEF668", Offset = "0x1CEF668", VA = "0x1CEF668")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x1CEF708", Offset = "0x1CEF708", VA = "0x1CEF708")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1CEF7A8", Offset = "0x1CEF7A8", VA = "0x1CEF7A8")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x1CEF848", Offset = "0x1CEF848", VA = "0x1CEF848")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x1CEF8E8", Offset = "0x1CEF8E8", VA = "0x1CEF8E8")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x1CEF988", Offset = "0x1CEF988", VA = "0x1CEF988")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x1CEFA28", Offset = "0x1CEFA28", VA = "0x1CEFA28")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x1CEFAC8", Offset = "0x1CEFAC8", VA = "0x1CEFAC8")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x1CEFB68", Offset = "0x1CEFB68", VA = "0x1CEFB68")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x1CEFC08", Offset = "0x1CEFC08", VA = "0x1CEFC08")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x1CEFCA8", Offset = "0x1CEFCA8", VA = "0x1CEFCA8")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x1CEFD48", Offset = "0x1CEFD48", VA = "0x1CEFD48")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x1CEFDE8", Offset = "0x1CEFDE8", VA = "0x1CEFDE8")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x1CEFE88", Offset = "0x1CEFE88", VA = "0x1CEFE88")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x1CEFF28", Offset = "0x1CEFF28", VA = "0x1CEFF28")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x1CEFFC8", Offset = "0x1CEFFC8", VA = "0x1CEFFC8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x1CF0068", Offset = "0x1CF0068", VA = "0x1CF0068")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x1CF0108", Offset = "0x1CF0108", VA = "0x1CF0108")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x1CF01A8", Offset = "0x1CF01A8", VA = "0x1CF01A8")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x1CF0248", Offset = "0x1CF0248", VA = "0x1CF0248")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1CF02E8", Offset = "0x1CF02E8", VA = "0x1CF02E8")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001700")]
		[Address(RVA = "0x1CF0388", Offset = "0x1CF0388", VA = "0x1CF0388")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001701")]
		[Address(RVA = "0x1CF0428", Offset = "0x1CF0428", VA = "0x1CF0428")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001702")]
		[Address(RVA = "0x1CF04C8", Offset = "0x1CF04C8", VA = "0x1CF04C8")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001703")]
		[Address(RVA = "0x1CF0568", Offset = "0x1CF0568", VA = "0x1CF0568")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001704")]
		[Address(RVA = "0x1CF0608", Offset = "0x1CF0608", VA = "0x1CF0608")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001705")]
		[Address(RVA = "0x1CF06A8", Offset = "0x1CF06A8", VA = "0x1CF06A8")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001706")]
		[Address(RVA = "0x1CF0748", Offset = "0x1CF0748", VA = "0x1CF0748")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001707")]
		[Address(RVA = "0x1CF07E8", Offset = "0x1CF07E8", VA = "0x1CF07E8")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001708")]
		[Address(RVA = "0x1CF0888", Offset = "0x1CF0888", VA = "0x1CF0888")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1CF0928", Offset = "0x1CF0928", VA = "0x1CF0928")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600170A")]
		[Address(RVA = "0x1CF09C8", Offset = "0x1CF09C8", VA = "0x1CF09C8")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1CF0A68", Offset = "0x1CF0A68", VA = "0x1CF0A68")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1CF0B08", Offset = "0x1CF0B08", VA = "0x1CF0B08")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1CF0BA8", Offset = "0x1CF0BA8", VA = "0x1CF0BA8")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1CF0C48", Offset = "0x1CF0C48", VA = "0x1CF0C48")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1CF0CE8", Offset = "0x1CF0CE8", VA = "0x1CF0CE8")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001710")]
		[Address(RVA = "0x1CF0D88", Offset = "0x1CF0D88", VA = "0x1CF0D88")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001711")]
		[Address(RVA = "0x1CF0E28", Offset = "0x1CF0E28", VA = "0x1CF0E28")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001712")]
		[Address(RVA = "0x1CF0EC8", Offset = "0x1CF0EC8", VA = "0x1CF0EC8")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001713")]
		[Address(RVA = "0x1CF0F68", Offset = "0x1CF0F68", VA = "0x1CF0F68")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001714")]
		[Address(RVA = "0x1CF1008", Offset = "0x1CF1008", VA = "0x1CF1008")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001715")]
		[Address(RVA = "0x1CF10A8", Offset = "0x1CF10A8", VA = "0x1CF10A8")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001716")]
		[Address(RVA = "0x1CF1148", Offset = "0x1CF1148", VA = "0x1CF1148")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001717")]
		[Address(RVA = "0x1CF11E8", Offset = "0x1CF11E8", VA = "0x1CF11E8")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001718")]
		[Address(RVA = "0x1CF1288", Offset = "0x1CF1288", VA = "0x1CF1288")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001719")]
		[Address(RVA = "0x1CF1328", Offset = "0x1CF1328", VA = "0x1CF1328")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600171A")]
		[Address(RVA = "0x1CF13C8", Offset = "0x1CF13C8", VA = "0x1CF13C8")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600171B")]
		[Address(RVA = "0x1CF1468", Offset = "0x1CF1468", VA = "0x1CF1468")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600171C")]
		[Address(RVA = "0x1CF1508", Offset = "0x1CF1508", VA = "0x1CF1508")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1CF15A8", Offset = "0x1CF15A8", VA = "0x1CF15A8")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1CF1648", Offset = "0x1CF1648", VA = "0x1CF1648")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600171F")]
		[Address(RVA = "0x1CF16E8", Offset = "0x1CF16E8", VA = "0x1CF16E8")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001720")]
		[Address(RVA = "0x1CF1788", Offset = "0x1CF1788", VA = "0x1CF1788")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1CF1828", Offset = "0x1CF1828", VA = "0x1CF1828")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1CF18C8", Offset = "0x1CF18C8", VA = "0x1CF18C8")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1CF1968", Offset = "0x1CF1968", VA = "0x1CF1968")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1CF1A08", Offset = "0x1CF1A08", VA = "0x1CF1A08")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1CF1AA8", Offset = "0x1CF1AA8", VA = "0x1CF1AA8")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1CF1B48", Offset = "0x1CF1B48", VA = "0x1CF1B48")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1CF1BE8", Offset = "0x1CF1BE8", VA = "0x1CF1BE8")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1CF1C88", Offset = "0x1CF1C88", VA = "0x1CF1C88")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1CF1D28", Offset = "0x1CF1D28", VA = "0x1CF1D28")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1CF1D90", Offset = "0x1CF1D90", VA = "0x1CF1D90")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1CF1E30", Offset = "0x1CF1E30", VA = "0x1CF1E30")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600172C")]
		[Address(RVA = "0x1CF1ED0", Offset = "0x1CF1ED0", VA = "0x1CF1ED0")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1CF1F70", Offset = "0x1CF1F70", VA = "0x1CF1F70")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1CF2010", Offset = "0x1CF2010", VA = "0x1CF2010")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1CF20B0", Offset = "0x1CF20B0", VA = "0x1CF20B0")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1CF2150", Offset = "0x1CF2150", VA = "0x1CF2150")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1CF21F0", Offset = "0x1CF21F0", VA = "0x1CF21F0")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001732")]
		[Address(RVA = "0x1CF2290", Offset = "0x1CF2290", VA = "0x1CF2290")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001733")]
		[Address(RVA = "0x1CF2330", Offset = "0x1CF2330", VA = "0x1CF2330")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1CF23D8", Offset = "0x1CF23D8", VA = "0x1CF23D8")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1CF2478", Offset = "0x1CF2478", VA = "0x1CF2478")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001736")]
		[Address(RVA = "0x1CF2518", Offset = "0x1CF2518", VA = "0x1CF2518")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1CF25D8", Offset = "0x1CF25D8", VA = "0x1CF25D8")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1CF2698", Offset = "0x1CF2698", VA = "0x1CF2698")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1CF2758", Offset = "0x1CF2758", VA = "0x1CF2758")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1CF2808", Offset = "0x1CF2808", VA = "0x1CF2808")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1CF28A8", Offset = "0x1CF28A8", VA = "0x1CF28A8")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1CF2948", Offset = "0x1CF2948", VA = "0x1CF2948")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1CF29E8", Offset = "0x1CF29E8", VA = "0x1CF29E8")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1CF2A88", Offset = "0x1CF2A88", VA = "0x1CF2A88")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600173F")]
		[Address(RVA = "0x1CF2B28", Offset = "0x1CF2B28", VA = "0x1CF2B28")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1CF2BC8", Offset = "0x1CF2BC8", VA = "0x1CF2BC8")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1CF2C68", Offset = "0x1CF2C68", VA = "0x1CF2C68")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001742")]
		[Address(RVA = "0x1CF2D08", Offset = "0x1CF2D08", VA = "0x1CF2D08")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1CF2DA8", Offset = "0x1CF2DA8", VA = "0x1CF2DA8")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1CF2E48", Offset = "0x1CF2E48", VA = "0x1CF2E48")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001745")]
		[Address(RVA = "0x1CF2EE8", Offset = "0x1CF2EE8", VA = "0x1CF2EE8")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001746")]
		[Address(RVA = "0x1CF2F88", Offset = "0x1CF2F88", VA = "0x1CF2F88")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001747")]
		[Address(RVA = "0x1CF3028", Offset = "0x1CF3028", VA = "0x1CF3028")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001748")]
		[Address(RVA = "0x1CF30C4", Offset = "0x1CF30C4", VA = "0x1CF30C4")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1CF3164", Offset = "0x1CF3164", VA = "0x1CF3164")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1CF3200", Offset = "0x1CF3200", VA = "0x1CF3200")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1CF3268", Offset = "0x1CF3268", VA = "0x1CF3268")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1CF3308", Offset = "0x1CF3308", VA = "0x1CF3308")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1CF33B8", Offset = "0x1CF33B8", VA = "0x1CF33B8")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1CF3458", Offset = "0x1CF3458", VA = "0x1CF3458")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600174F")]
		[Address(RVA = "0x1CF34F8", Offset = "0x1CF34F8", VA = "0x1CF34F8")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1CF3598", Offset = "0x1CF3598", VA = "0x1CF3598")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1CF3640", Offset = "0x1CF3640", VA = "0x1CF3640")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1CF36E0", Offset = "0x1CF36E0", VA = "0x1CF36E0")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x1CF3780", Offset = "0x1CF3780", VA = "0x1CF3780")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001754")]
		[Address(RVA = "0x1CF37E8", Offset = "0x1CF37E8", VA = "0x1CF37E8")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x1CF3888", Offset = "0x1CF3888", VA = "0x1CF3888")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001756")]
		[Address(RVA = "0x1CF38F0", Offset = "0x1CF38F0", VA = "0x1CF38F0")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x1CF3990", Offset = "0x1CF3990", VA = "0x1CF3990")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001758")]
		[Address(RVA = "0x1CF39F8", Offset = "0x1CF39F8", VA = "0x1CF39F8")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1CF3A98", Offset = "0x1CF3A98", VA = "0x1CF3A98")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600175A")]
		[Address(RVA = "0x1CF3B00", Offset = "0x1CF3B00", VA = "0x1CF3B00")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x1CF3BA0", Offset = "0x1CF3BA0", VA = "0x1CF3BA0")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600175C")]
		[Address(RVA = "0x1CF3C08", Offset = "0x1CF3C08", VA = "0x1CF3C08")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1CF3CA8", Offset = "0x1CF3CA8", VA = "0x1CF3CA8")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600175E")]
		[Address(RVA = "0x1CF3D10", Offset = "0x1CF3D10", VA = "0x1CF3D10")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1CF3DB0", Offset = "0x1CF3DB0", VA = "0x1CF3DB0")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x1CF3E60", Offset = "0x1CF3E60", VA = "0x1CF3E60")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1CF3EC8", Offset = "0x1CF3EC8", VA = "0x1CF3EC8")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1CF3F68", Offset = "0x1CF3F68", VA = "0x1CF3F68")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1CF4008", Offset = "0x1CF4008", VA = "0x1CF4008")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1CF40B0", Offset = "0x1CF40B0", VA = "0x1CF40B0")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001765")]
		[Address(RVA = "0x1CF4118", Offset = "0x1CF4118", VA = "0x1CF4118")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1CF41B8", Offset = "0x1CF41B8", VA = "0x1CF41B8")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1CF4220", Offset = "0x1CF4220", VA = "0x1CF4220")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1CF42C0", Offset = "0x1CF42C0", VA = "0x1CF42C0")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1CF4360", Offset = "0x1CF4360", VA = "0x1CF4360")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600176A")]
		[Address(RVA = "0x1CF43C8", Offset = "0x1CF43C8", VA = "0x1CF43C8")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1CF4468", Offset = "0x1CF4468", VA = "0x1CF4468")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x1CF4518", Offset = "0x1CF4518", VA = "0x1CF4518")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1CF4580", Offset = "0x1CF4580", VA = "0x1CF4580")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600176E")]
		[Address(RVA = "0x1CF4620", Offset = "0x1CF4620", VA = "0x1CF4620")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600176F")]
		[Address(RVA = "0x1CF46C0", Offset = "0x1CF46C0", VA = "0x1CF46C0")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001770")]
		[Address(RVA = "0x1CF4768", Offset = "0x1CF4768", VA = "0x1CF4768")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001771")]
		[Address(RVA = "0x1CF4808", Offset = "0x1CF4808", VA = "0x1CF4808")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1CF48A8", Offset = "0x1CF48A8", VA = "0x1CF48A8")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1CF4910", Offset = "0x1CF4910", VA = "0x1CF4910")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001774")]
		[Address(RVA = "0x1CF49B0", Offset = "0x1CF49B0", VA = "0x1CF49B0")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001775")]
		[Address(RVA = "0x1CF4A50", Offset = "0x1CF4A50", VA = "0x1CF4A50")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001776")]
		[Address(RVA = "0x1CF4AF0", Offset = "0x1CF4AF0", VA = "0x1CF4AF0")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001777")]
		[Address(RVA = "0x1CF4B98", Offset = "0x1CF4B98", VA = "0x1CF4B98")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001778")]
		[Address(RVA = "0x1CF4C38", Offset = "0x1CF4C38", VA = "0x1CF4C38")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001779")]
		[Address(RVA = "0x1CF4CD8", Offset = "0x1CF4CD8", VA = "0x1CF4CD8")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600177A")]
		[Address(RVA = "0x1CF4D78", Offset = "0x1CF4D78", VA = "0x1CF4D78")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1CF4E18", Offset = "0x1CF4E18", VA = "0x1CF4E18")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600177C")]
		[Address(RVA = "0x1CF4E80", Offset = "0x1CF4E80", VA = "0x1CF4E80")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1CF4F20", Offset = "0x1CF4F20", VA = "0x1CF4F20")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1CF4FBC", Offset = "0x1CF4FBC", VA = "0x1CF4FBC")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1CF505C", Offset = "0x1CF505C", VA = "0x1CF505C")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1CF50F8", Offset = "0x1CF50F8", VA = "0x1CF50F8")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1CF5198", Offset = "0x1CF5198", VA = "0x1CF5198")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x1CF5248", Offset = "0x1CF5248", VA = "0x1CF5248")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1CF52B0", Offset = "0x1CF52B0", VA = "0x1CF52B0")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001784")]
		[Address(RVA = "0x1CF5350", Offset = "0x1CF5350", VA = "0x1CF5350")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1CF53F0", Offset = "0x1CF53F0", VA = "0x1CF53F0")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1CF5498", Offset = "0x1CF5498", VA = "0x1CF5498")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001787")]
		[Address(RVA = "0x1CF5538", Offset = "0x1CF5538", VA = "0x1CF5538")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001788")]
		[Address(RVA = "0x1CF55D8", Offset = "0x1CF55D8", VA = "0x1CF55D8")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1CF5678", Offset = "0x1CF5678", VA = "0x1CF5678")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x600178A")]
		[Address(RVA = "0x1CF56E0", Offset = "0x1CF56E0", VA = "0x1CF56E0")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600178B")]
		[Address(RVA = "0x1CF5780", Offset = "0x1CF5780", VA = "0x1CF5780")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x1CF5830", Offset = "0x1CF5830", VA = "0x1CF5830")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600178D")]
		[Address(RVA = "0x1CF5898", Offset = "0x1CF5898", VA = "0x1CF5898")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600178E")]
		[Address(RVA = "0x1CF5938", Offset = "0x1CF5938", VA = "0x1CF5938")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600178F")]
		[Address(RVA = "0x1CF59D8", Offset = "0x1CF59D8", VA = "0x1CF59D8")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001790")]
		[Address(RVA = "0x1CF5A80", Offset = "0x1CF5A80", VA = "0x1CF5A80")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1CF5B20", Offset = "0x1CF5B20", VA = "0x1CF5B20")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1CF5BC0", Offset = "0x1CF5BC0", VA = "0x1CF5BC0")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1CF5C70", Offset = "0x1CF5C70", VA = "0x1CF5C70")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001794")]
		[Address(RVA = "0x1CF5D10", Offset = "0x1CF5D10", VA = "0x1CF5D10")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001795")]
		[Address(RVA = "0x1CF5DB0", Offset = "0x1CF5DB0", VA = "0x1CF5DB0")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001796")]
		[Address(RVA = "0x1CF5E58", Offset = "0x1CF5E58", VA = "0x1CF5E58")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001797")]
		[Address(RVA = "0x1CF5EF8", Offset = "0x1CF5EF8", VA = "0x1CF5EF8")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1CF5F98", Offset = "0x1CF5F98", VA = "0x1CF5F98")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1CF6038", Offset = "0x1CF6038", VA = "0x1CF6038")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600179A")]
		[Address(RVA = "0x1CF60A0", Offset = "0x1CF60A0", VA = "0x1CF60A0")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1CF6140", Offset = "0x1CF6140", VA = "0x1CF6140")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600179C")]
		[Address(RVA = "0x1CF61E0", Offset = "0x1CF61E0", VA = "0x1CF61E0")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1CF6280", Offset = "0x1CF6280", VA = "0x1CF6280")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1CF62E8", Offset = "0x1CF62E8", VA = "0x1CF62E8")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1CF6388", Offset = "0x1CF6388", VA = "0x1CF6388")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x1CF6428", Offset = "0x1CF6428", VA = "0x1CF6428")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x1CF6490", Offset = "0x1CF6490", VA = "0x1CF6490")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x1CF6530", Offset = "0x1CF6530", VA = "0x1CF6530")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x1CF65D0", Offset = "0x1CF65D0", VA = "0x1CF65D0")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x1CF6670", Offset = "0x1CF6670", VA = "0x1CF6670")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x1CF66D8", Offset = "0x1CF66D8", VA = "0x1CF66D8")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x1CF6778", Offset = "0x1CF6778", VA = "0x1CF6778")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1CF6818", Offset = "0x1CF6818", VA = "0x1CF6818")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x1CF68B8", Offset = "0x1CF68B8", VA = "0x1CF68B8")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x1CF6968", Offset = "0x1CF6968", VA = "0x1CF6968")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1CF6A08", Offset = "0x1CF6A08", VA = "0x1CF6A08")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1CF6AA8", Offset = "0x1CF6AA8", VA = "0x1CF6AA8")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x1CF6B10", Offset = "0x1CF6B10", VA = "0x1CF6B10")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1CF6BB0", Offset = "0x1CF6BB0", VA = "0x1CF6BB0")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1CF6C18", Offset = "0x1CF6C18", VA = "0x1CF6C18")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1CF6CB8", Offset = "0x1CF6CB8", VA = "0x1CF6CB8")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x1CF6D20", Offset = "0x1CF6D20", VA = "0x1CF6D20")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1CF6DC0", Offset = "0x1CF6DC0", VA = "0x1CF6DC0")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x1CF6E28", Offset = "0x1CF6E28", VA = "0x1CF6E28")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x1CF6EC8", Offset = "0x1CF6EC8", VA = "0x1CF6EC8")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x1CF6F68", Offset = "0x1CF6F68", VA = "0x1CF6F68")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x1CF6FD0", Offset = "0x1CF6FD0", VA = "0x1CF6FD0")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x1CF7070", Offset = "0x1CF7070", VA = "0x1CF7070")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1CF7110", Offset = "0x1CF7110", VA = "0x1CF7110")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x1CF71B0", Offset = "0x1CF71B0", VA = "0x1CF71B0")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1CF7260", Offset = "0x1CF7260", VA = "0x1CF7260")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1CF72C8", Offset = "0x1CF72C8", VA = "0x1CF72C8")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1CF7368", Offset = "0x1CF7368", VA = "0x1CF7368")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x1CF7408", Offset = "0x1CF7408", VA = "0x1CF7408")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x1CF74B0", Offset = "0x1CF74B0", VA = "0x1CF74B0")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x1CF7560", Offset = "0x1CF7560", VA = "0x1CF7560")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1CF75C8", Offset = "0x1CF75C8", VA = "0x1CF75C8")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x1CF7668", Offset = "0x1CF7668", VA = "0x1CF7668")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1CF7708", Offset = "0x1CF7708", VA = "0x1CF7708")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x1CF77B0", Offset = "0x1CF77B0", VA = "0x1CF77B0")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x1CF7818", Offset = "0x1CF7818", VA = "0x1CF7818")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x1CF78B8", Offset = "0x1CF78B8", VA = "0x1CF78B8")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1CF7960", Offset = "0x1CF7960", VA = "0x1CF7960")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1CF7A00", Offset = "0x1CF7A00", VA = "0x1CF7A00")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1CF7AC0", Offset = "0x1CF7AC0", VA = "0x1CF7AC0")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1CF7B80", Offset = "0x1CF7B80", VA = "0x1CF7B80")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1CF7C40", Offset = "0x1CF7C40", VA = "0x1CF7C40")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1CF7D00", Offset = "0x1CF7D00", VA = "0x1CF7D00")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1CF7DA0", Offset = "0x1CF7DA0", VA = "0x1CF7DA0")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1CF7E30", Offset = "0x1CF7E30", VA = "0x1CF7E30")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1CF7ED0", Offset = "0x1CF7ED0", VA = "0x1CF7ED0")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1CF7F80", Offset = "0x1CF7F80", VA = "0x1CF7F80")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1CD95E4", Offset = "0x1CD95E4", VA = "0x1CD95E4")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1CD9858", Offset = "0x1CD9858", VA = "0x1CD9858")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1CD96EC", Offset = "0x1CD96EC", VA = "0x1CD96EC")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x1CF8030", Offset = "0x1CF8030", VA = "0x1CF8030")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1CF80E0", Offset = "0x1CF80E0", VA = "0x1CF80E0")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1CF8170", Offset = "0x1CF8170", VA = "0x1CF8170")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1CF8210", Offset = "0x1CF8210", VA = "0x1CF8210")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1CF82DC", Offset = "0x1CF82DC", VA = "0x1CF82DC")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1CF8394", Offset = "0x1CF8394", VA = "0x1CF8394")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1CF8434", Offset = "0x1CF8434", VA = "0x1CF8434")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1CF84E4", Offset = "0x1CF84E4", VA = "0x1CF84E4")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1CF8594", Offset = "0x1CF8594", VA = "0x1CF8594")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1CF8644", Offset = "0x1CF8644", VA = "0x1CF8644")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1CF86E4", Offset = "0x1CF86E4", VA = "0x1CF86E4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1CF8798", Offset = "0x1CF8798", VA = "0x1CF8798")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1CF8850", Offset = "0x1CF8850", VA = "0x1CF8850")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1CF890C", Offset = "0x1CF890C", VA = "0x1CF890C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1CF89CC", Offset = "0x1CF89CC", VA = "0x1CF89CC")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1CF8A98", Offset = "0x1CF8A98", VA = "0x1CF8A98")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1CF8B50", Offset = "0x1CF8B50", VA = "0x1CF8B50")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1CF8BF0", Offset = "0x1CF8BF0", VA = "0x1CF8BF0")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1CF8CA0", Offset = "0x1CF8CA0", VA = "0x1CF8CA0")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1CF8D4C", Offset = "0x1CF8D4C", VA = "0x1CF8D4C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1CF8DFC", Offset = "0x1CF8DFC", VA = "0x1CF8DFC")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1CF8E8C", Offset = "0x1CF8E8C", VA = "0x1CF8E8C")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1CF8F2C", Offset = "0x1CF8F2C", VA = "0x1CF8F2C")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1CF8FF8", Offset = "0x1CF8FF8", VA = "0x1CF8FF8")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1CF90B0", Offset = "0x1CF90B0", VA = "0x1CF90B0")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1CF9150", Offset = "0x1CF9150", VA = "0x1CF9150")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1CF9200", Offset = "0x1CF9200", VA = "0x1CF9200")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1CF92B0", Offset = "0x1CF92B0", VA = "0x1CF92B0")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x1CF9360", Offset = "0x1CF9360", VA = "0x1CF9360")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x1CF9410", Offset = "0x1CF9410", VA = "0x1CF9410")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x1CF94C0", Offset = "0x1CF94C0", VA = "0x1CF94C0")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x1CF9570", Offset = "0x1CF9570", VA = "0x1CF9570")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x1CF9600", Offset = "0x1CF9600", VA = "0x1CF9600")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x1CF96A0", Offset = "0x1CF96A0", VA = "0x1CF96A0")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x1CF9750", Offset = "0x1CF9750", VA = "0x1CF9750")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x1CF9800", Offset = "0x1CF9800", VA = "0x1CF9800")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x1CF98A0", Offset = "0x1CF98A0", VA = "0x1CF98A0")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x1CF9950", Offset = "0x1CF9950", VA = "0x1CF9950")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x1CF99E0", Offset = "0x1CF99E0", VA = "0x1CF99E0")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x1CF9A80", Offset = "0x1CF9A80", VA = "0x1CF9A80")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x1CF9B30", Offset = "0x1CF9B30", VA = "0x1CF9B30")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x1CF9BE0", Offset = "0x1CF9BE0", VA = "0x1CF9BE0")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x400110B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E501C", Offset = "0x9E501C")]
		Unknown,
		[Token(Token = "0x400110C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5054", Offset = "0x9E5054")]
		InSync,
		[Token(Token = "0x400110D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E508C", Offset = "0x9E508C")]
		NeedsDownload,
		[Token(Token = "0x400110E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E50C4", Offset = "0x9E50C4")]
		RemoteDownloading,
		[Token(Token = "0x400110F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E50FC", Offset = "0x9E50FC")]
		NeedsUpload,
		[Token(Token = "0x4001110")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5134", Offset = "0x9E5134")]
		LocalUploading,
		[Token(Token = "0x4001111")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E516C", Offset = "0x9E516C")]
		InConflict
	}
	[Token(Token = "0x200028F")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4001113")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E51A4", Offset = "0x9E51A4")]
		Unknown,
		[Token(Token = "0x4001114")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E51DC", Offset = "0x9E51DC")]
		Ok,
		[Token(Token = "0x4001115")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5214", Offset = "0x9E5214")]
		BetterVersionStored,
		[Token(Token = "0x4001116")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E524C", Offset = "0x9E524C")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000290")]
	public interface IMicrophone
	{
		[Token(Token = "0x60017FD")]
		void Start();

		[Token(Token = "0x60017FE")]
		void Stop();

		[Token(Token = "0x60017FF")]
		float[] Update();
	}
	[Token(Token = "0x2000291")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6001800")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6001801")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6001802")]
		void Update();

		[Token(Token = "0x6001803")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000292")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x4001118")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5284", Offset = "0x9E5284")]
		String,
		[Token(Token = "0x4001119")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E52BC", Offset = "0x9E52BC")]
		Int,
		[Token(Token = "0x400111A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E52F4", Offset = "0x9E52F4")]
		Double,
		[Token(Token = "0x400111B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E532C", Offset = "0x9E532C")]
		Unknown
	}
	[Token(Token = "0x2000293")]
	public enum LaunchType
	{
		[Token(Token = "0x400111D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5364", Offset = "0x9E5364")]
		Unknown,
		[Token(Token = "0x400111E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E539C", Offset = "0x9E539C")]
		Normal,
		[Token(Token = "0x400111F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E53D4", Offset = "0x9E53D4")]
		Invite,
		[Token(Token = "0x4001120")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E540C", Offset = "0x9E540C")]
		Coordinated,
		[Token(Token = "0x4001121")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5444", Offset = "0x9E5444")]
		Deeplink
	}
	[Token(Token = "0x2000294")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4001123")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E547C", Offset = "0x9E547C")]
		None,
		[Token(Token = "0x4001124")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E54B4", Offset = "0x9E54B4")]
		Friends,
		[Token(Token = "0x4001125")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E54EC", Offset = "0x9E54EC")]
		Unknown
	}
	[Token(Token = "0x2000295")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4001127")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5524", Offset = "0x9E5524")]
		Top,
		[Token(Token = "0x4001128")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E555C", Offset = "0x9E555C")]
		CenteredOnViewer,
		[Token(Token = "0x4001129")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5594", Offset = "0x9E5594")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x400112A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E55CC", Offset = "0x9E55CC")]
		Unknown
	}
	[Token(Token = "0x2000296")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x400112C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5604", Offset = "0x9E5604")]
		Unknown,
		[Token(Token = "0x400112D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E563C", Offset = "0x9E563C")]
		Public,
		[Token(Token = "0x400112E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5674", Offset = "0x9E5674")]
		Friends,
		[Token(Token = "0x400112F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E56AC", Offset = "0x9E56AC")]
		OnlyMe
	}
	[Token(Token = "0x2000297")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4001131")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E56E4", Offset = "0x9E56E4")]
		Unknown,
		[Token(Token = "0x4001132")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E571C", Offset = "0x9E571C")]
		MicrophoneOn,
		[Token(Token = "0x4001133")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5754", Offset = "0x9E5754")]
		MicrophoneOff
	}
	[Token(Token = "0x2000298")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4001135")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E578C", Offset = "0x9E578C")]
		Success = 1,
		[Token(Token = "0x4001136")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E57C4", Offset = "0x9E57C4")]
		Unknown = 0,
		[Token(Token = "0x4001137")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E57FC", Offset = "0x9E57FC")]
		NoPackageSet = -1,
		[Token(Token = "0x4001138")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5834", Offset = "0x9E5834")]
		NoFbConnect = -2,
		[Token(Token = "0x4001139")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E586C", Offset = "0x9E586C")]
		NoSessionId = -3,
		[Token(Token = "0x400113A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E58A4", Offset = "0x9E58A4")]
		MissingParameters = -4
	}
	[Token(Token = "0x2000299")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x400113C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E58DC", Offset = "0x9E58DC")]
		Required,
		[Token(Token = "0x400113D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5914", Offset = "0x9E5914")]
		High,
		[Token(Token = "0x400113E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E594C", Offset = "0x9E594C")]
		Medium,
		[Token(Token = "0x400113F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5984", Offset = "0x9E5984")]
		Low,
		[Token(Token = "0x4001140")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E59BC", Offset = "0x9E59BC")]
		Unknown
	}
	[Token(Token = "0x200029A")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x1CFE420", Offset = "0x1CFE420", VA = "0x1CFE420")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x1CFE494", Offset = "0x1CFE494", VA = "0x1CFE494")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x1CFE514", Offset = "0x1CFE514", VA = "0x1CFE514")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x1CFE57C", Offset = "0x1CFE57C", VA = "0x1CFE57C")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x1CFE5F4", Offset = "0x1CFE5F4", VA = "0x1CFE5F4")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x1CFE66C", Offset = "0x1CFE66C", VA = "0x1CFE66C")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1CFE6E4", Offset = "0x1CFE6E4", VA = "0x1CFE6E4")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x1CFE74C", Offset = "0x1CFE74C", VA = "0x1CFE74C")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x1CFE7CC", Offset = "0x1CFE7CC", VA = "0x1CFE7CC")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x1CFE854", Offset = "0x1CFE854", VA = "0x1CFE854")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1CFE8D4", Offset = "0x1CFE8D4", VA = "0x1CFE8D4")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1CFE93C", Offset = "0x1CFE93C", VA = "0x1CFE93C")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1CFE9B4", Offset = "0x1CFE9B4", VA = "0x1CFE9B4")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1CFD76C", Offset = "0x1CFD76C", VA = "0x1CFD76C")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1CFEA2C", Offset = "0x1CFEA2C", VA = "0x1CFEA2C", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4001143")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E59F4", Offset = "0x9E59F4")]
		Unknown,
		[Token(Token = "0x4001144")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5A2C", Offset = "0x9E5A2C")]
		Trailing,
		[Token(Token = "0x4001145")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5A64", Offset = "0x9E5A64")]
		Swingy
	}
	[Token(Token = "0x200029C")]
	public enum MediaContentType
	{
		[Token(Token = "0x4001147")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5A9C", Offset = "0x9E5A9C")]
		Unknown,
		[Token(Token = "0x4001148")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5AD4", Offset = "0x9E5AD4")]
		Photo
	}
	[Token(Token = "0x200029D")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x200054E")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170001E2")]
		public T Data
		{
			[Token(Token = "0x6001814")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001813")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001815")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x200029E")]
	public class Message
	{
		[Token(Token = "0x200054F")]
		public delegate void Callback(Message message);

		[Token(Token = "0x2000550")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001C44")]
			Unknown = 0u,
			[Token(Token = "0x4001C45")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001C46")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001C47")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001C48")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001C49")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4001C4A")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4001C4B")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4001C4C")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4001C4D")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4001C4E")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4001C4F")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4001C50")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4001C51")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4001C52")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4001C53")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4001C54")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4001C55")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4001C56")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4001C57")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4001C58")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4001C59")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4001C5A")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4001C5B")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4001C5C")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4001C5D")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4001C5E")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4001C5F")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4001C60")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4001C61")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4001C62")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4001C63")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4001C64")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4001C65")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4001C66")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4001C67")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4001C68")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4001C69")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4001C6A")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4001C6B")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4001C6C")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4001C6D")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4001C6E")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4001C6F")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4001C70")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4001C71")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4001C72")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4001C73")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4001C74")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4001C75")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4001C76")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4001C77")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4001C78")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4001C79")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4001C7A")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4001C7B")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4001C7C")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4001C7D")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4001C7E")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4001C7F")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4001C80")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4001C81")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4001C82")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4001C83")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4001C84")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4001C85")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4001C86")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4001C87")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4001C88")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4001C89")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4001C8A")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4001C8B")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4001C8C")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4001C8D")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4001C8E")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4001C8F")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4001C90")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4001C91")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4001C92")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4001C93")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4001C94")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4001C95")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4001C96")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4001C97")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4001C98")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4001C99")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4001C9A")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4001C9B")]
			Room_Join = 382373641u,
			[Token(Token = "0x4001C9C")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4001C9D")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4001C9E")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4001C9F")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4001CA0")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4001CA1")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4001CA2")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4001CA3")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4001CA4")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4001CA5")]
			User_Get = 1808768583u,
			[Token(Token = "0x4001CA6")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4001CA7")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4001CA8")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4001CA9")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4001CAA")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4001CAB")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4001CAC")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4001CAD")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4001CAE")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4001CAF")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4001CB0")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4001CB1")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4001CB2")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4001CB3")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4001CB4")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4001CB5")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4001CB6")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4001CB7")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4001CB8")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4001CB9")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4001CBA")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4001CBB")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4001CBC")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4001CBD")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4001CBE")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4001CBF")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4001CC0")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4001CC1")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4001CC2")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4001CC3")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4001CC4")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4001CC5")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4001CC6")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x2000551")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5B0C", Offset = "0x9E5B0C")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170001E3")]
		public MessageType Type
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xF566B4", Offset = "0xF566B4", VA = "0xF566B4")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170001E4")]
		public bool IsError
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xF566BC", Offset = "0xF566BC", VA = "0xF566BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E5")]
		public ulong RequestID
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xF566CC", Offset = "0xF566CC", VA = "0xF566CC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001E6")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xF597D8", Offset = "0xF597D8", VA = "0xF597D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC38C", Offset = "0x9EC38C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xF59784", Offset = "0xF59784", VA = "0xF59784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC37C", Offset = "0x9EC37C")]
			set
			{
			}
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xF56434", Offset = "0xF56434", VA = "0xF56434")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xF566AC", Offset = "0xF566AC", VA = "0xF566AC", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xF566D4", Offset = "0xF566D4", VA = "0xF566D4", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xF566DC", Offset = "0xF566DC", VA = "0xF566DC", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xF566E4", Offset = "0xF566E4", VA = "0xF566E4", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xF566EC", Offset = "0xF566EC", VA = "0xF566EC", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xF566F4", Offset = "0xF566F4", VA = "0xF566F4", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xF566FC", Offset = "0xF566FC", VA = "0xF566FC", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xF56704", Offset = "0xF56704", VA = "0xF56704", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xF5670C", Offset = "0xF5670C", VA = "0xF5670C", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xF56714", Offset = "0xF56714", VA = "0xF56714", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xF5671C", Offset = "0xF5671C", VA = "0xF5671C", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xF56724", Offset = "0xF56724", VA = "0xF56724", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xF5672C", Offset = "0xF5672C", VA = "0xF5672C", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xF56734", Offset = "0xF56734", VA = "0xF56734", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xF5673C", Offset = "0xF5673C", VA = "0xF5673C", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xF56744", Offset = "0xF56744", VA = "0xF56744", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xF5674C", Offset = "0xF5674C", VA = "0xF5674C", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xF56754", Offset = "0xF56754", VA = "0xF56754", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xF5675C", Offset = "0xF5675C", VA = "0xF5675C", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xF56764", Offset = "0xF56764", VA = "0xF56764", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xF5676C", Offset = "0xF5676C", VA = "0xF5676C", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xF56774", Offset = "0xF56774", VA = "0xF56774", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xF5677C", Offset = "0xF5677C", VA = "0xF5677C", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xF56784", Offset = "0xF56784", VA = "0xF56784", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xF5678C", Offset = "0xF5678C", VA = "0xF5678C", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xF56794", Offset = "0xF56794", VA = "0xF56794", Slot = "28")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xF5679C", Offset = "0xF5679C", VA = "0xF5679C", Slot = "29")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xF567A4", Offset = "0xF567A4", VA = "0xF567A4", Slot = "30")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xF567AC", Offset = "0xF567AC", VA = "0xF567AC", Slot = "31")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xF567B4", Offset = "0xF567B4", VA = "0xF567B4", Slot = "32")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xF567BC", Offset = "0xF567BC", VA = "0xF567BC", Slot = "33")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xF567C4", Offset = "0xF567C4", VA = "0xF567C4", Slot = "34")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xF567CC", Offset = "0xF567CC", VA = "0xF567CC", Slot = "35")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xF567D4", Offset = "0xF567D4", VA = "0xF567D4", Slot = "36")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xF567DC", Offset = "0xF567DC", VA = "0xF567DC", Slot = "37")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xF567E4", Offset = "0xF567E4", VA = "0xF567E4", Slot = "38")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xF567EC", Offset = "0xF567EC", VA = "0xF567EC", Slot = "39")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xF567F4", Offset = "0xF567F4", VA = "0xF567F4", Slot = "40")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xF567FC", Offset = "0xF567FC", VA = "0xF567FC", Slot = "41")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xF56804", Offset = "0xF56804", VA = "0xF56804", Slot = "42")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xF5680C", Offset = "0xF5680C", VA = "0xF5680C", Slot = "43")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xF56814", Offset = "0xF56814", VA = "0xF56814", Slot = "44")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xF5681C", Offset = "0xF5681C", VA = "0xF5681C", Slot = "45")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xF56824", Offset = "0xF56824", VA = "0xF56824", Slot = "46")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xF5682C", Offset = "0xF5682C", VA = "0xF5682C", Slot = "47")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xF56834", Offset = "0xF56834", VA = "0xF56834", Slot = "48")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xF5683C", Offset = "0xF5683C", VA = "0xF5683C", Slot = "49")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xF56844", Offset = "0xF56844", VA = "0xF56844", Slot = "50")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xF5684C", Offset = "0xF5684C", VA = "0xF5684C", Slot = "51")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xF56854", Offset = "0xF56854", VA = "0xF56854", Slot = "52")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xF5685C", Offset = "0xF5685C", VA = "0xF5685C", Slot = "53")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xF56864", Offset = "0xF56864", VA = "0xF56864", Slot = "54")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xF5686C", Offset = "0xF5686C", VA = "0xF5686C", Slot = "55")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xF56874", Offset = "0xF56874", VA = "0xF56874", Slot = "56")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xF5687C", Offset = "0xF5687C", VA = "0xF5687C", Slot = "57")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xF56884", Offset = "0xF56884", VA = "0xF56884", Slot = "58")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xF5688C", Offset = "0xF5688C", VA = "0xF5688C", Slot = "59")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xF56894", Offset = "0xF56894", VA = "0xF56894", Slot = "60")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xF5689C", Offset = "0xF5689C", VA = "0xF5689C", Slot = "61")]
		public virtual Oculus.Platform.Models.User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xF568A4", Offset = "0xF568A4", VA = "0xF568A4", Slot = "62")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xF568AC", Offset = "0xF568AC", VA = "0xF568AC", Slot = "63")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xF568B4", Offset = "0xF568B4", VA = "0xF568B4", Slot = "64")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xF568BC", Offset = "0xF568BC", VA = "0xF568BC", Slot = "65")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xF568C4", Offset = "0xF568C4", VA = "0xF568C4")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xF596D0", Offset = "0xF596D0", VA = "0xF596D0")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x200029F")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x600185D")]
		[Address(RVA = "0xF5A4EC", Offset = "0xF5A4EC", VA = "0xF5A4EC")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xF5A54C", Offset = "0xF5A54C", VA = "0xF5A54C", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xF5A59C", Offset = "0xF5A59C", VA = "0xF5A59C", Slot = "66")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A0")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6001860")]
		[Address(RVA = "0xF57D00", Offset = "0xF57D00", VA = "0xF57D00")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xF5A6C0", Offset = "0xF5A6C0", VA = "0xF5A6C0", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xF5A710", Offset = "0xF5A710", VA = "0xF5A710", Slot = "66")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A1")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6001863")]
		[Address(RVA = "0xF57D60", Offset = "0xF57D60", VA = "0xF57D60")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xF5A9B4", Offset = "0xF5A9B4", VA = "0xF5A9B4", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xF5AA04", Offset = "0xF5AA04", VA = "0xF5AA04", Slot = "66")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A2")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6001866")]
		[Address(RVA = "0xF57DC0", Offset = "0xF57DC0", VA = "0xF57DC0")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xF5ACA8", Offset = "0xF5ACA8", VA = "0xF5ACA8", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xF5ACF8", Offset = "0xF5ACF8", VA = "0xF5ACF8", Slot = "66")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A3")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6001869")]
		[Address(RVA = "0xF57E20", Offset = "0xF57E20", VA = "0xF57E20")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xF5AE30", Offset = "0xF5AE30", VA = "0xF5AE30", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xF5AE80", Offset = "0xF5AE80", VA = "0xF5AE80", Slot = "66")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A4")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0xF57E80", Offset = "0xF57E80", VA = "0xF57E80")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xF5AFD4", Offset = "0xF5AFD4", VA = "0xF5AFD4", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xF5B024", Offset = "0xF5B024", VA = "0xF5B024", Slot = "66")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A5")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x600186F")]
		[Address(RVA = "0xF57EE0", Offset = "0xF57EE0", VA = "0xF57EE0")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xF5B1DC", Offset = "0xF5B1DC", VA = "0xF5B1DC", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xF5B22C", Offset = "0xF5B22C", VA = "0xF5B22C", Slot = "66")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A6")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6001872")]
		[Address(RVA = "0xF57F40", Offset = "0xF57F40", VA = "0xF57F40")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xF5B4A0", Offset = "0xF5B4A0", VA = "0xF5B4A0", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xF5B4F0", Offset = "0xF5B4F0", VA = "0xF5B4F0", Slot = "66")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A7")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6001875")]
		[Address(RVA = "0xF57FA0", Offset = "0xF57FA0", VA = "0xF57FA0")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xF5B648", Offset = "0xF5B648", VA = "0xF5B648", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xF5B698", Offset = "0xF5B698", VA = "0xF5B698", Slot = "66")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A8")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6001878")]
		[Address(RVA = "0xF58000", Offset = "0xF58000", VA = "0xF58000")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xF5B7F0", Offset = "0xF5B7F0", VA = "0xF5B7F0", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xF5B840", Offset = "0xF5B840", VA = "0xF5B840", Slot = "66")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A9")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x600187B")]
		[Address(RVA = "0xF58060", Offset = "0xF58060", VA = "0xF58060")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xF5B974", Offset = "0xF5B974", VA = "0xF5B974", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xF5B9C4", Offset = "0xF5B9C4", VA = "0xF5B9C4", Slot = "66")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AA")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x600187E")]
		[Address(RVA = "0xF580C0", Offset = "0xF580C0", VA = "0xF580C0")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xF5BB2C", Offset = "0xF5BB2C", VA = "0xF5BB2C", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xF5BB7C", Offset = "0xF5BB7C", VA = "0xF5BB7C", Slot = "66")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AB")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6001881")]
		[Address(RVA = "0xF58120", Offset = "0xF58120", VA = "0xF58120")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xF5BCC0", Offset = "0xF5BCC0", VA = "0xF5BCC0", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xF5BD10", Offset = "0xF5BD10", VA = "0xF5BD10", Slot = "66")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AC")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6001884")]
		[Address(RVA = "0xF5BE34", Offset = "0xF5BE34", VA = "0xF5BE34")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xF5BE94", Offset = "0xF5BE94", VA = "0xF5BE94", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xF5BEE4", Offset = "0xF5BEE4", VA = "0xF5BEE4", Slot = "66")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AD")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6001887")]
		[Address(RVA = "0xF58180", Offset = "0xF58180", VA = "0xF58180")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xF5C158", Offset = "0xF5C158", VA = "0xF5C158", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xF5C1A8", Offset = "0xF5C1A8", VA = "0xF5C1A8", Slot = "66")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AE")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x600188A")]
		[Address(RVA = "0xF581E0", Offset = "0xF581E0", VA = "0xF581E0")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xF5C324", Offset = "0xF5C324", VA = "0xF5C324", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xF5C374", Offset = "0xF5C374", VA = "0xF5C374", Slot = "66")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AF")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x600188D")]
		[Address(RVA = "0xF58240", Offset = "0xF58240", VA = "0xF58240")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xF5C7BC", Offset = "0xF5C7BC", VA = "0xF5C7BC", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xF5C80C", Offset = "0xF5C80C", VA = "0xF5C80C", Slot = "66")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B0")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6001890")]
		[Address(RVA = "0xF582A0", Offset = "0xF582A0", VA = "0xF582A0")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xF5C4C8", Offset = "0xF5C4C8", VA = "0xF5C4C8", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xF5C518", Offset = "0xF5C518", VA = "0xF5C518", Slot = "66")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B1")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6001893")]
		[Address(RVA = "0xF58300", Offset = "0xF58300", VA = "0xF58300")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xF5C9A0", Offset = "0xF5C9A0", VA = "0xF5C9A0", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xF5C9F0", Offset = "0xF5C9F0", VA = "0xF5C9F0", Slot = "66")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B2")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6001896")]
		[Address(RVA = "0xF5CD78", Offset = "0xF5CD78", VA = "0xF5CD78")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xF5CDD8", Offset = "0xF5CDD8", VA = "0xF5CDD8", Slot = "28")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xF5CE28", Offset = "0xF5CE28", VA = "0xF5CE28", Slot = "66")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B3")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6001899")]
		[Address(RVA = "0xF5D09C", Offset = "0xF5D09C", VA = "0xF5D09C")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xF5D0FC", Offset = "0xF5D0FC", VA = "0xF5D0FC", Slot = "29")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xF5D14C", Offset = "0xF5D14C", VA = "0xF5D14C", Slot = "66")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B4")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x600189C")]
		[Address(RVA = "0xF58360", Offset = "0xF58360", VA = "0xF58360")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xF5D288", Offset = "0xF5D288", VA = "0xF5D288", Slot = "30")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xF5D2D8", Offset = "0xF5D2D8", VA = "0xF5D2D8", Slot = "66")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B5")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x600189F")]
		[Address(RVA = "0xF5D414", Offset = "0xF5D414", VA = "0xF5D414")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xF5D474", Offset = "0xF5D474", VA = "0xF5D474", Slot = "31")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xF5D4C4", Offset = "0xF5D4C4", VA = "0xF5D4C4", Slot = "66")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B6")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xF5D5FC", Offset = "0xF5D5FC", VA = "0xF5D5FC")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xF5D65C", Offset = "0xF5D65C", VA = "0xF5D65C", Slot = "32")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xF5D6AC", Offset = "0xF5D6AC", VA = "0xF5D6AC", Slot = "66")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B7")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xF583C0", Offset = "0xF583C0", VA = "0xF583C0")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xF5D8B0", Offset = "0xF5D8B0", VA = "0xF5D8B0", Slot = "34")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xF5D900", Offset = "0xF5D900", VA = "0xF5D900", Slot = "66")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B8")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xF5DBC4", Offset = "0xF5DBC4", VA = "0xF5DBC4")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xF5DC24", Offset = "0xF5DC24", VA = "0xF5DC24", Slot = "35")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xF5DC74", Offset = "0xF5DC74", VA = "0xF5DC74", Slot = "66")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B9")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xF5DEE8", Offset = "0xF5DEE8", VA = "0xF5DEE8")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xF5DF48", Offset = "0xF5DF48", VA = "0xF5DF48", Slot = "36")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xF5DF98", Offset = "0xF5DF98", VA = "0xF5DF98", Slot = "66")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BA")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xF5E0C0", Offset = "0xF5E0C0", VA = "0xF5E0C0")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xF5E120", Offset = "0xF5E120", VA = "0xF5E120", Slot = "37")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xF5E170", Offset = "0xF5E170", VA = "0xF5E170", Slot = "66")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BB")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xF58480", Offset = "0xF58480", VA = "0xF58480")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xF5E294", Offset = "0xF5E294", VA = "0xF5E294", Slot = "38")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xF5E2E4", Offset = "0xF5E2E4", VA = "0xF5E2E4", Slot = "66")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BC")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xF5E458", Offset = "0xF5E458", VA = "0xF5E458")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xF5E4B8", Offset = "0xF5E4B8", VA = "0xF5E4B8", Slot = "39")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xF5E508", Offset = "0xF5E508", VA = "0xF5E508", Slot = "66")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BD")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xF584E0", Offset = "0xF584E0", VA = "0xF584E0")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xF5E64C", Offset = "0xF5E64C", VA = "0xF5E64C", Slot = "40")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xF5E69C", Offset = "0xF5E69C", VA = "0xF5E69C", Slot = "66")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BE")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xF585A0", Offset = "0xF585A0", VA = "0xF585A0")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xF5EA38", Offset = "0xF5EA38", VA = "0xF5EA38", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xF5EA88", Offset = "0xF5EA88", VA = "0xF5EA88", Slot = "66")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BF")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xF58600", Offset = "0xF58600", VA = "0xF58600")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xF5EC70", Offset = "0xF5EC70", VA = "0xF5EC70", Slot = "43")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xF5ECC0", Offset = "0xF5ECC0", VA = "0xF5ECC0", Slot = "66")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C0")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xF58660", Offset = "0xF58660", VA = "0xF58660")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xF5F20C", Offset = "0xF5F20C", VA = "0xF5F20C", Slot = "44")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xF5F25C", Offset = "0xF5F25C", VA = "0xF5F25C", Slot = "66")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C1")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xF586C0", Offset = "0xF586C0", VA = "0xF586C0")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xF5F4FC", Offset = "0xF5F4FC", VA = "0xF5F4FC", Slot = "45")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xF5F54C", Offset = "0xF5F54C", VA = "0xF5F54C", Slot = "66")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C2")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xF5F670", Offset = "0xF5F670", VA = "0xF5F670")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xF5F6D0", Offset = "0xF5F6D0", VA = "0xF5F6D0", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xF5F720", Offset = "0xF5F720", VA = "0xF5F720", Slot = "66")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C3")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xF58720", Offset = "0xF58720", VA = "0xF58720")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xF5FBB0", Offset = "0xF5FBB0", VA = "0xF5FBB0", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xF5FC00", Offset = "0xF5FC00", VA = "0xF5FC00", Slot = "66")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C4")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xF5F9DC", Offset = "0xF5F9DC", VA = "0xF5F9DC")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xF5FA3C", Offset = "0xF5FA3C", VA = "0xF5FA3C", Slot = "47")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xF5FA8C", Offset = "0xF5FA8C", VA = "0xF5FA8C", Slot = "66")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C5")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xF58780", Offset = "0xF58780", VA = "0xF58780")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xF5FC9C", Offset = "0xF5FC9C", VA = "0xF5FC9C", Slot = "48")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xF5FCEC", Offset = "0xF5FCEC", VA = "0xF5FCEC", Slot = "66")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C6")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xF587E0", Offset = "0xF587E0", VA = "0xF587E0")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xF60280", Offset = "0xF60280", VA = "0xF60280", Slot = "49")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xF602D0", Offset = "0xF602D0", VA = "0xF602D0", Slot = "66")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C7")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xF58840", Offset = "0xF58840", VA = "0xF58840")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xF60574", Offset = "0xF60574", VA = "0xF60574", Slot = "50")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xF605C4", Offset = "0xF605C4", VA = "0xF605C4", Slot = "66")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C8")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xF588A0", Offset = "0xF588A0", VA = "0xF588A0")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xF60718", Offset = "0xF60718", VA = "0xF60718", Slot = "51")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xF60768", Offset = "0xF60768", VA = "0xF60768", Slot = "66")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C9")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xF58900", Offset = "0xF58900", VA = "0xF58900")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xF60A0C", Offset = "0xF60A0C", VA = "0xF60A0C", Slot = "52")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xF60A5C", Offset = "0xF60A5C", VA = "0xF60A5C", Slot = "66")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CA")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xF58960", Offset = "0xF58960", VA = "0xF58960")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xF61284", Offset = "0xF61284", VA = "0xF61284", Slot = "52")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xF612D4", Offset = "0xF612D4", VA = "0xF612D4", Slot = "66")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CB")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xF589C0", Offset = "0xF589C0", VA = "0xF589C0")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xF61370", Offset = "0xF61370", VA = "0xF61370", Slot = "52")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xF613C0", Offset = "0xF613C0", VA = "0xF613C0", Slot = "66")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CC")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xF58A20", Offset = "0xF58A20", VA = "0xF58A20")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xF60F90", Offset = "0xF60F90", VA = "0xF60F90", Slot = "55")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xF60FE0", Offset = "0xF60FE0", VA = "0xF60FE0", Slot = "66")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CD")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xF58A80", Offset = "0xF58A80", VA = "0xF58A80")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xF60AF8", Offset = "0xF60AF8", VA = "0xF60AF8", Slot = "53")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xF60B48", Offset = "0xF60B48", VA = "0xF60B48", Slot = "66")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CE")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xF58AE0", Offset = "0xF58AE0", VA = "0xF58AE0")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xF60C9C", Offset = "0xF60C9C", VA = "0xF60C9C", Slot = "54")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xF60CEC", Offset = "0xF60CEC", VA = "0xF60CEC", Slot = "66")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CF")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xF58B40", Offset = "0xF58B40", VA = "0xF58B40")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xF6145C", Offset = "0xF6145C", VA = "0xF6145C", Slot = "56")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xF614AC", Offset = "0xF614AC", VA = "0xF614AC", Slot = "66")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D0")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xF58BA0", Offset = "0xF58BA0", VA = "0xF58BA0")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xF61720", Offset = "0xF61720", VA = "0xF61720", Slot = "57")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xF61770", Offset = "0xF61770", VA = "0xF61770", Slot = "66")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D1")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xF58C00", Offset = "0xF58C00", VA = "0xF58C00")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xF61894", Offset = "0xF61894", VA = "0xF61894", Slot = "58")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xF618E4", Offset = "0xF618E4", VA = "0xF618E4", Slot = "66")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D2")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xF6194C", Offset = "0xF6194C", VA = "0xF6194C")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xF619AC", Offset = "0xF619AC", VA = "0xF619AC", Slot = "59")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xF619FC", Offset = "0xF619FC", VA = "0xF619FC", Slot = "66")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D3")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xF58C60", Offset = "0xF58C60", VA = "0xF58C60")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xF61B34", Offset = "0xF61B34", VA = "0xF61B34", Slot = "60")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xF61B84", Offset = "0xF61B84", VA = "0xF61B84", Slot = "66")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D4")]
	public class MessageWithUser : Message<Oculus.Platform.Models.User>
	{
		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xF58CC0", Offset = "0xF58CC0", VA = "0xF58CC0")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xF61CB8", Offset = "0xF61CB8", VA = "0xF61CB8", Slot = "61")]
		public override Oculus.Platform.Models.User GetUser()
		{
			return null;
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xF61D08", Offset = "0xF61D08", VA = "0xF61D08", Slot = "66")]
		protected override Oculus.Platform.Models.User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D5")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xF58D20", Offset = "0xF58D20", VA = "0xF58D20")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xF61E8C", Offset = "0xF61E8C", VA = "0xF61E8C", Slot = "62")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xF61EDC", Offset = "0xF61EDC", VA = "0xF61EDC", Slot = "66")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D6")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6001902")]
		[Address(RVA = "0xF58D80", Offset = "0xF58D80", VA = "0xF58D80")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xF62180", Offset = "0xF62180", VA = "0xF62180", Slot = "63")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xF621D0", Offset = "0xF621D0", VA = "0xF621D0", Slot = "66")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D7")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6001905")]
		[Address(RVA = "0xF58DE0", Offset = "0xF58DE0", VA = "0xF58DE0")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xF62474", Offset = "0xF62474", VA = "0xF62474", Slot = "64")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xF624C4", Offset = "0xF624C4", VA = "0xF624C4", Slot = "66")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D8")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6001908")]
		[Address(RVA = "0xF625E8", Offset = "0xF625E8", VA = "0xF625E8")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xF62648", Offset = "0xF62648", VA = "0xF62648", Slot = "65")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xF62698", Offset = "0xF62698", VA = "0xF62698", Slot = "66")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D9")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x600190B")]
		[Address(RVA = "0xF58E40", Offset = "0xF58E40", VA = "0xF58E40")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xF5F3B0", Offset = "0xF5F3B0", VA = "0xF5F3B0", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xF5F400", Offset = "0xF5F400", VA = "0xF5F400", Slot = "66")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DA")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x600190E")]
		[Address(RVA = "0xF58EA0", Offset = "0xF58EA0", VA = "0xF58EA0")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xF5FF60", Offset = "0xF5FF60", VA = "0xF5FF60", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xF5FFB0", Offset = "0xF5FFB0", VA = "0xF5FFB0", Slot = "66")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DB")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6001911")]
		[Address(RVA = "0xF58420", Offset = "0xF58420", VA = "0xF58420")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xF5D7E8", Offset = "0xF5D7E8", VA = "0xF5D7E8", Slot = "33")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xF5D838", Offset = "0xF5D838", VA = "0xF5D838", Slot = "66")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002DC")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6001914")]
		[Address(RVA = "0xF58F00", Offset = "0xF58F00", VA = "0xF58F00")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xF5EE3C", Offset = "0xF5EE3C", VA = "0xF5EE3C", Slot = "52")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xF5EE8C", Offset = "0xF5EE8C", VA = "0xF5EE8C", Slot = "66")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DD")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6001917")]
		[Address(RVA = "0xF58540", Offset = "0xF58540", VA = "0xF58540")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xF5E7F4", Offset = "0xF5E7F4", VA = "0xF5E7F4", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xF5E858", Offset = "0xF5E858", VA = "0xF5E858", Slot = "55")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xF5E8BC", Offset = "0xF5E8BC", VA = "0xF5E8BC", Slot = "66")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DE")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x600191B")]
		[Address(RVA = "0xF58F60", Offset = "0xF58F60", VA = "0xF58F60")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xF5CB44", Offset = "0xF5CB44", VA = "0xF5CB44", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xF5CB94", Offset = "0xF5CB94", VA = "0xF5CB94", Slot = "66")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DF")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x600191E")]
		[Address(RVA = "0xF58FC0", Offset = "0xF58FC0", VA = "0xF58FC0")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xF6010C", Offset = "0xF6010C", VA = "0xF6010C", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xF6015C", Offset = "0xF6015C", VA = "0xF6015C", Slot = "66")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E0")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x170001E7")]
		public ulong SenderID
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0xF64554", Offset = "0xF64554", VA = "0xF64554")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001E8")]
		public ulong Size
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0xF645C0", Offset = "0xF645C0", VA = "0xF645C0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001E9")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xF645C8", Offset = "0xF645C8", VA = "0xF645C8")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xF63828", Offset = "0xF63828", VA = "0xF63828")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xF643F4", Offset = "0xF643F4", VA = "0xF643F4")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xF64634", Offset = "0xF64634", VA = "0xF64634", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xF646A8", Offset = "0xF646A8", VA = "0xF646A8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4001151")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5B1C", Offset = "0x9E5B1C")]
		Unknown,
		[Token(Token = "0x4001152")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5B54", Offset = "0x9E5B54")]
		Connected,
		[Token(Token = "0x4001153")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5B8C", Offset = "0x9E5B8C")]
		Timeout,
		[Token(Token = "0x4001154")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5BC4", Offset = "0x9E5BC4")]
		Closed
	}
	[Token(Token = "0x20002E2")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4001156")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5BFC", Offset = "0x9E5BFC")]
		Unknown,
		[Token(Token = "0x4001157")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5C34", Offset = "0x9E5C34")]
		Granted,
		[Token(Token = "0x4001158")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5C6C", Offset = "0x9E5C6C")]
		Denied,
		[Token(Token = "0x4001159")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5CA4", Offset = "0x9E5CA4")]
		Blocked
	}
	[Token(Token = "0x20002E3")]
	public enum PermissionType
	{
		[Token(Token = "0x400115B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5CDC", Offset = "0x9E5CDC")]
		Unknown,
		[Token(Token = "0x400115C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5D14", Offset = "0x9E5D14")]
		Microphone,
		[Token(Token = "0x400115D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5D4C", Offset = "0x9E5D4C")]
		WriteExternalStorage
	}
	[Token(Token = "0x20002E4")]
	public sealed class Core
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x1CD9154", Offset = "0x1CD9154", VA = "0x1CD9154")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1CFB544", Offset = "0x1CFB544", VA = "0x1CFB544")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1CFB5B0", Offset = "0x1CFB5B0", VA = "0x1CFB5B0")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x1CFB7A8", Offset = "0x1CFB7A8", VA = "0x1CFB7A8")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1CFBA5C", Offset = "0x1CFBA5C", VA = "0x1CFBA5C")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1CFB778", Offset = "0x1CFB778", VA = "0x1CFB778")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1CFBD54", Offset = "0x1CFBD54", VA = "0x1CFBD54")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1CD9454", Offset = "0x1CD9454", VA = "0x1CD9454")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E6")]
	public static class Rooms
	{
		[Token(Token = "0x6001931")]
		[Address(RVA = "0xF652A0", Offset = "0xF652A0", VA = "0xF652A0")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xF65564", Offset = "0xF65564", VA = "0xF65564")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EC39C", Offset = "0x9EC39C")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xF655E0", Offset = "0xF655E0", VA = "0xF655E0")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xF656C8", Offset = "0xF656C8", VA = "0xF656C8")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xF657DC", Offset = "0xF657DC", VA = "0xF657DC")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xF658AC", Offset = "0xF658AC", VA = "0xF658AC")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xF65974", Offset = "0xF65974", VA = "0xF65974")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xF65A44", Offset = "0xF65A44", VA = "0xF65A44")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xF65B0C", Offset = "0xF65B0C", VA = "0xF65B0C")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xF65C08", Offset = "0xF65C08", VA = "0xF65C08")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xF65CD0", Offset = "0xF65CD0", VA = "0xF65CD0")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xF65DB0", Offset = "0xF65DB0", VA = "0xF65DB0")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xF65E90", Offset = "0xF65E90", VA = "0xF65E90")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xF65F9C", Offset = "0xF65F9C", VA = "0xF65F9C")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xF66084", Offset = "0xF66084", VA = "0xF66084")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xF6614C", Offset = "0xF6614C", VA = "0xF6614C")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xF6621C", Offset = "0xF6621C", VA = "0xF6621C")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xF662FC", Offset = "0xF662FC", VA = "0xF662FC")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xF663DC", Offset = "0xF663DC", VA = "0xF663DC")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xF664B4", Offset = "0xF664B4", VA = "0xF664B4")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xF65568", Offset = "0xF65568", VA = "0xF65568")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xF66594", Offset = "0xF66594", VA = "0xF66594")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xF6660C", Offset = "0xF6660C", VA = "0xF6660C")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xF66684", Offset = "0xF66684", VA = "0xF66684")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E7")]
	public static class Matchmaking
	{
		[Token(Token = "0x2000552")]
		public class CustomQuery
		{
			[Token(Token = "0x20005CA")]
			public struct Criterion
			{
				[Token(Token = "0x4001E9C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4001E9D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4001E9E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x600245E")]
				[Address(RVA = "0xAB8F4C", Offset = "0xAB8F4C", VA = "0xAB8F4C")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x600230B")]
			[Address(RVA = "0x1CFD1D0", Offset = "0x1CFD1D0", VA = "0x1CFD1D0")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x600230C")]
			[Address(RVA = "0x1CFE408", Offset = "0x1CFE408", VA = "0x1CFE408")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1CFCD74", Offset = "0x1CFCD74", VA = "0x1CFCD74")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1CFD000", Offset = "0x1CFD000", VA = "0x1CFD000")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1CFD0E4", Offset = "0x1CFD0E4", VA = "0x1CFD0E4")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1CFD664", Offset = "0x1CFD664", VA = "0x1CFD664")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1CFD7BC", Offset = "0x1CFD7BC", VA = "0x1CFD7BC")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1CFD890", Offset = "0x1CFD890", VA = "0x1CFD890")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1CFD94C", Offset = "0x1CFD94C", VA = "0x1CFD94C")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1CFDA50", Offset = "0x1CFDA50", VA = "0x1CFDA50")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1CFDB58", Offset = "0x1CFDB58", VA = "0x1CFDB58")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1CFDC3C", Offset = "0x1CFDC3C", VA = "0x1CFDC3C")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1CFDD44", Offset = "0x1CFDD44", VA = "0x1CFDD44")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1CFDE30", Offset = "0x1CFDE30", VA = "0x1CFDE30")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1CFDF38", Offset = "0x1CFDF38", VA = "0x1CFDF38")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1CFE024", Offset = "0x1CFE024", VA = "0x1CFE024")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1CFE12C", Offset = "0x1CFE12C", VA = "0x1CFE12C")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1CFE1F0", Offset = "0x1CFE1F0", VA = "0x1CFE1F0")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1CFE2CC", Offset = "0x1CFE2CC", VA = "0x1CFE2CC")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1CFE390", Offset = "0x1CFE390", VA = "0x1CFE390")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public static class Net
	{
		[Token(Token = "0x600195B")]
		[Address(RVA = "0xF6375C", Offset = "0xF6375C", VA = "0xF6375C")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xF638E8", Offset = "0xF638E8", VA = "0xF638E8")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xF639EC", Offset = "0xF639EC", VA = "0xF639EC")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xF63A8C", Offset = "0xF63A8C", VA = "0xF63A8C")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xF63B2C", Offset = "0xF63B2C", VA = "0xF63B2C")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xF63BCC", Offset = "0xF63BCC", VA = "0xF63BCC")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xF63C70", Offset = "0xF63C70", VA = "0xF63C70")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xF63D6C", Offset = "0xF63D6C", VA = "0xF63D6C")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xF63E08", Offset = "0xF63E08", VA = "0xF63E08")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xF63EA0", Offset = "0xF63EA0", VA = "0xF63EA0")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xF63F70", Offset = "0xF63F70", VA = "0xF63F70")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xF63FE8", Offset = "0xF63FE8", VA = "0xF63FE8")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xF64060", Offset = "0xF64060", VA = "0xF64060")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public static class Leaderboards
	{
		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1CFC5D8", Offset = "0x1CFC5D8", VA = "0x1CFC5D8")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1CFC6D4", Offset = "0x1CFC6D4", VA = "0x1CFC6D4")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x1CFC7D0", Offset = "0x1CFC7D0", VA = "0x1CFC7D0")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1CFC8C4", Offset = "0x1CFC8C4", VA = "0x1CFC8C4")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1CFC9A8", Offset = "0x1CFC9A8", VA = "0x1CFC9A8")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EA")]
	public static class Voip
	{
		[Token(Token = "0x600196D")]
		[Address(RVA = "0xCF9B14", Offset = "0xCF9B14", VA = "0xCF9B14")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xCF9E80", Offset = "0xCF9E80", VA = "0xCF9E80")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xCF9BB4", Offset = "0xCF9BB4", VA = "0xCF9BB4")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xCFB814", Offset = "0xCFB814", VA = "0xCFB814")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xCFB8EC", Offset = "0xCFB8EC", VA = "0xCFB8EC")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xCFB98C", Offset = "0xCFB98C", VA = "0xCFB98C")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xCFBA28", Offset = "0xCFBA28", VA = "0xCFBA28")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xCFBAC4", Offset = "0xCFBAC4", VA = "0xCFBAC4")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xCFBB68", Offset = "0xCFBB68", VA = "0xCFBB68")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xCFBC0C", Offset = "0xCFBC0C", VA = "0xCFBC0C")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xCFBCB0", Offset = "0xCFBCB0", VA = "0xCFBCB0")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xCFBDCC", Offset = "0xCFBDCC", VA = "0xCFBDCC")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xCF995C", Offset = "0xCF995C", VA = "0xCF995C")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xCF99D4", Offset = "0xCF99D4", VA = "0xCF99D4")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xCFBE9C", Offset = "0xCFBE9C", VA = "0xCFBE9C")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public static class Achievements
	{
		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1321C50", Offset = "0x1321C50", VA = "0x1321C50")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1321D30", Offset = "0x1321D30", VA = "0x1321D30")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1321E10", Offset = "0x1321E10", VA = "0x1321E10")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1321ED8", Offset = "0x1321ED8", VA = "0x1321ED8")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1321FA0", Offset = "0x1321FA0", VA = "0x1321FA0")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1322084", Offset = "0x1322084", VA = "0x1322084")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1322168", Offset = "0x1322168", VA = "0x1322168")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1322238", Offset = "0x1322238", VA = "0x1322238")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x1322398", Offset = "0x1322398", VA = "0x1322398")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EC")]
	public static class Application
	{
		[Token(Token = "0x6001985")]
		[Address(RVA = "0x1CD9090", Offset = "0x1CD9090", VA = "0x1CD9090")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x1CD924C", Offset = "0x1CD924C", VA = "0x1CD924C")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x20002ED")]
	public static class AssetFile
	{
		[Token(Token = "0x6001987")]
		[Address(RVA = "0x1CD98F8", Offset = "0x1CD98F8", VA = "0x1CD98F8")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x1CD9A64", Offset = "0x1CD9A64", VA = "0x1CD9A64")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x1CD9BD0", Offset = "0x1CD9BD0", VA = "0x1CD9BD0")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1CD9D44", Offset = "0x1CD9D44", VA = "0x1CD9D44")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x1CD9EB0", Offset = "0x1CD9EB0", VA = "0x1CD9EB0")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x1CDA01C", Offset = "0x1CDA01C", VA = "0x1CDA01C")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x1CDA190", Offset = "0x1CDA190", VA = "0x1CDA190")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x1CDA2FC", Offset = "0x1CDA2FC", VA = "0x1CDA2FC")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1CDA468", Offset = "0x1CDA468", VA = "0x1CDA468")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x1CDA5DC", Offset = "0x1CDA5DC", VA = "0x1CDA5DC")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x1CDA730", Offset = "0x1CDA730", VA = "0x1CDA730")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x1CDA89C", Offset = "0x1CDA89C", VA = "0x1CDA89C")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x1CDAA08", Offset = "0x1CDAA08", VA = "0x1CDAA08")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x1CDAB7C", Offset = "0x1CDAB7C", VA = "0x1CDAB7C")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public static class Avatar
	{
	}
	[Token(Token = "0x20002EF")]
	public static class Cal
	{
	}
	[Token(Token = "0x20002F0")]
	public static class CloudStorage
	{
		[Token(Token = "0x6001995")]
		[Address(RVA = "0x1CFAC10", Offset = "0x1CFAC10", VA = "0x1CFAC10")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x1CFACEC", Offset = "0x1CFACEC", VA = "0x1CFACEC")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x1CFADC8", Offset = "0x1CFADC8", VA = "0x1CFADC8")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x1CFAE94", Offset = "0x1CFAE94", VA = "0x1CFAE94")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x1CFAF70", Offset = "0x1CFAF70", VA = "0x1CFAF70")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x1CFB03C", Offset = "0x1CFB03C", VA = "0x1CFB03C")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x1CFB118", Offset = "0x1CFB118", VA = "0x1CFB118")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x1CFB1FC", Offset = "0x1CFB1FC", VA = "0x1CFB1FC")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x1CFB2E0", Offset = "0x1CFB2E0", VA = "0x1CFB2E0")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x1CFB3F0", Offset = "0x1CFB3F0", VA = "0x1CFB3F0")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F1")]
	public static class CloudStorage2
	{
	}
	[Token(Token = "0x20002F2")]
	public static class Entitlements
	{
		[Token(Token = "0x600199F")]
		[Address(RVA = "0x1CFBD60", Offset = "0x1CFBD60", VA = "0x1CFBD60")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F3")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x20002F4")]
	public static class HTTP
	{
	}
	[Token(Token = "0x20002F5")]
	public static class IAP
	{
		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x1CFBE1C", Offset = "0x1CFBE1C", VA = "0x1CFBE1C")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x1CFBEE0", Offset = "0x1CFBEE0", VA = "0x1CFBEE0")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x1CFBFC0", Offset = "0x1CFBFC0", VA = "0x1CFBFC0")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x1CFC084", Offset = "0x1CFC084", VA = "0x1CFC084")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x1CFC1A0", Offset = "0x1CFC1A0", VA = "0x1CFC1A0")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x1CFC2F4", Offset = "0x1CFC2F4", VA = "0x1CFC2F4")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F6")]
	public static class LanguagePack
	{
		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x1CFC448", Offset = "0x1CFC448", VA = "0x1CFC448")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x1CFC50C", Offset = "0x1CFC50C", VA = "0x1CFC50C")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F7")]
	public static class Livestreaming
	{
		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x1CFCAB0", Offset = "0x1CFCAB0", VA = "0x1CFCAB0")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x1CFCB74", Offset = "0x1CFCB74", VA = "0x1CFCB74")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x1CFCC38", Offset = "0x1CFCC38", VA = "0x1CFCC38")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x1CFCCFC", Offset = "0x1CFCCFC", VA = "0x1CFCCFC")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public static class Media
	{
		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xF5634C", Offset = "0xF5634C", VA = "0xF5634C")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F9")]
	public static class Notifications
	{
		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xF640D8", Offset = "0xF640D8", VA = "0xF640D8")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xF641A0", Offset = "0xF641A0", VA = "0xF641A0")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xF64294", Offset = "0xF64294", VA = "0xF64294")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FA")]
	public static class Parties
	{
		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xF64740", Offset = "0xF64740", VA = "0xF64740")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FB")]
	public static class Users
	{
		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xCFAD38", Offset = "0xCFAD38", VA = "0xCFAD38")]
		public static Request<Oculus.Platform.Models.User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xCFAE08", Offset = "0xCFAE08", VA = "0xCFAE08")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xCE8AE4", Offset = "0xCE8AE4", VA = "0xCE8AE4")]
		public static Request<Oculus.Platform.Models.User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xCFAED0", Offset = "0xCFAED0", VA = "0xCFAED0")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xCFAF98", Offset = "0xCFAF98", VA = "0xCFAF98")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xCFB060", Offset = "0xCFB060", VA = "0xCFB060")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xCFB15C", Offset = "0xCFB15C", VA = "0xCFB15C")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xCFB22C", Offset = "0xCFB22C", VA = "0xCFB22C")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xCFB2F4", Offset = "0xCFB2F4", VA = "0xCFB2F4")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xCFB3BC", Offset = "0xCFB3BC", VA = "0xCFB3BC")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xCFB48C", Offset = "0xCFB48C", VA = "0xCFB48C")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xCFB554", Offset = "0xCFB554", VA = "0xCFB554")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xCFB6B4", Offset = "0xCFB6B4", VA = "0xCFB6B4")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FC")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4001161")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5D84", Offset = "0x9E5D84")]
		Success = 0,
		[Token(Token = "0x4001162")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5DBC", Offset = "0x9E5DBC")]
		Uninitialized = -1,
		[Token(Token = "0x4001163")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5DF4", Offset = "0x9E5DF4")]
		PreLoaded = -2,
		[Token(Token = "0x4001164")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5E2C", Offset = "0x9E5E2C")]
		FileInvalid = -3,
		[Token(Token = "0x4001165")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5E64", Offset = "0x9E5E64")]
		SignatureInvalid = -4,
		[Token(Token = "0x4001166")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5E9C", Offset = "0x9E5E9C")]
		UnableToVerify = -5,
		[Token(Token = "0x4001167")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5ED4", Offset = "0x9E5ED4")]
		VersionMismatch = -6,
		[Token(Token = "0x4001168")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5F0C", Offset = "0x9E5F0C")]
		Unknown = -7,
		[Token(Token = "0x4001169")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5F44", Offset = "0x9E5F44")]
		InvalidCredentials = -8,
		[Token(Token = "0x400116A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E5F7C", Offset = "0x9E5F7C")]
		NotEntitled = -9
	}
	[Token(Token = "0x20002FD")]
	public static class PlatformInternal
	{
		[Token(Token = "0x2000553")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4001CCA")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4001CCB")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4001CCC")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4001CCD")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4001CCE")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4001CCF")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4001CD0")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4001CD1")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4001CD2")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4001CD3")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4001CD4")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4001CD5")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4001CD6")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4001CD7")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4001CD8")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4001CD9")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4001CDA")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4001CDB")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4001CDC")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4001CDD")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4001CDE")]
			Party_Create = 450042703u,
			[Token(Token = "0x4001CDF")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4001CE0")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4001CE1")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4001CE2")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4001CE3")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4001CE4")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4001CE5")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4001CE6")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4001CE7")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4001CE8")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4001CE9")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4001CEA")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4001CEB")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4001CEC")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4001CED")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4001CEE")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4001CEF")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4001CF0")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4001CF1")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4001CF2")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4001CF3")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4001CF4")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4001CF5")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4001CF6")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x2000554")]
		public static class HTTP
		{
			[Token(Token = "0x600230D")]
			[Address(RVA = "0xF64868", Offset = "0xF64868", VA = "0xF64868")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xF64808", Offset = "0xF64808", VA = "0xF64808")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xF59020", Offset = "0xF59020", VA = "0xF59020")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FE")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x170001EA")]
		public static string AppID
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0xF648E0", Offset = "0xF648E0", VA = "0xF648E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xF64A20", Offset = "0xF64A20", VA = "0xF64A20")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public static string MobileAppID
		{
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0xF64A50", Offset = "0xF64A50", VA = "0xF64A50")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0xF64A7C", Offset = "0xF64A7C", VA = "0xF64A7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xF64AAC", Offset = "0xF64AAC", VA = "0xF64AAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xF64AD8", Offset = "0xF64AD8", VA = "0xF64AD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0xF64B0C", Offset = "0xF64B0C", VA = "0xF64B0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xF64B38", Offset = "0xF64B38", VA = "0xF64B38")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xF6490C", Offset = "0xF6490C", VA = "0xF6490C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xF64B6C", Offset = "0xF64B6C", VA = "0xF64B6C")]
			set
			{
			}
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xF64BC0", Offset = "0xF64BC0", VA = "0xF64BC0")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x60019CB")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60019CC")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000300")]
	public class Request
	{
		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5FF4", Offset = "0x9E5FF4")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x170001EF")]
		public ulong RequestID
		{
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0xF64C28", Offset = "0xF64C28", VA = "0xF64C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC3D4", Offset = "0x9EC3D4")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xF64C20", Offset = "0xF64C20", VA = "0xF64C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC3E4", Offset = "0x9EC3E4")]
			set
			{
			}
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xF64268", Offset = "0xF64268", VA = "0xF64268")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xF64C30", Offset = "0xF64C30", VA = "0xF64C30")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xF64CB0", Offset = "0xF64CB0", VA = "0xF64CB0")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000301")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4001172")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6004", Offset = "0x9E6004")]
		Unknown,
		[Token(Token = "0x4001173")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E603C", Offset = "0x9E603C")]
		AreIn,
		[Token(Token = "0x4001174")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6074", Offset = "0x9E6074")]
		AreKicked,
		[Token(Token = "0x4001175")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E60AC", Offset = "0x9E60AC")]
		CanJoin,
		[Token(Token = "0x4001176")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E60E4", Offset = "0x9E60E4")]
		IsFull,
		[Token(Token = "0x4001177")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E611C", Offset = "0x9E611C")]
		NoViewer,
		[Token(Token = "0x4001178")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6154", Offset = "0x9E6154")]
		PolicyPrevents
	}
	[Token(Token = "0x2000302")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x400117A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E618C", Offset = "0x9E618C")]
		None,
		[Token(Token = "0x400117B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E61C4", Offset = "0x9E61C4")]
		Everyone,
		[Token(Token = "0x400117C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E61FC", Offset = "0x9E61FC")]
		FriendsOfMembers,
		[Token(Token = "0x400117D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6234", Offset = "0x9E6234")]
		FriendsOfOwner,
		[Token(Token = "0x400117E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E626C", Offset = "0x9E626C")]
		InvitedUsers,
		[Token(Token = "0x400117F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E62A4", Offset = "0x9E62A4")]
		Unknown
	}
	[Token(Token = "0x2000303")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4001181")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E62DC", Offset = "0x9E62DC")]
		Unknown,
		[Token(Token = "0x4001182")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6314", Offset = "0x9E6314")]
		Lock,
		[Token(Token = "0x4001183")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E634C", Offset = "0x9E634C")]
		Unlock
	}
	[Token(Token = "0x2000304")]
	public class RoomOptions
	{
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xF64D3C", Offset = "0xF64D3C", VA = "0xF64D3C")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xF64DB4", Offset = "0xF64DB4", VA = "0xF64DB4")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xF64E38", Offset = "0xF64E38", VA = "0xF64E38")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xF64EA4", Offset = "0xF64EA4", VA = "0xF64EA4")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xF64F20", Offset = "0xF64F20", VA = "0xF64F20")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xF64F9C", Offset = "0xF64F9C", VA = "0xF64F9C")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xF65018", Offset = "0xF65018", VA = "0xF65018")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xF65094", Offset = "0xF65094", VA = "0xF65094")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xF65110", Offset = "0xF65110", VA = "0xF65110")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xF6518C", Offset = "0xF6518C", VA = "0xF6518C")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xF651DC", Offset = "0xF651DC", VA = "0xF651DC", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public enum RoomType
	{
		[Token(Token = "0x4001186")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6384", Offset = "0x9E6384")]
		Unknown,
		[Token(Token = "0x4001187")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E63BC", Offset = "0x9E63BC")]
		Matchmaking,
		[Token(Token = "0x4001188")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E63F4", Offset = "0x9E63F4")]
		Moderated,
		[Token(Token = "0x4001189")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E642C", Offset = "0x9E642C")]
		Private,
		[Token(Token = "0x400118A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6464", Offset = "0x9E6464")]
		Solo
	}
	[Token(Token = "0x2000306")]
	public enum SdkAccountType
	{
		[Token(Token = "0x400118C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E649C", Offset = "0x9E649C")]
		Unknown,
		[Token(Token = "0x400118D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E64D4", Offset = "0x9E64D4")]
		Oculus,
		[Token(Token = "0x400118E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E650C", Offset = "0x9E650C")]
		FacebookGameroom
	}
	[Token(Token = "0x2000307")]
	public enum SendPolicy
	{
		[Token(Token = "0x4001190")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6544", Offset = "0x9E6544")]
		Unreliable,
		[Token(Token = "0x4001191")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E657C", Offset = "0x9E657C")]
		Reliable,
		[Token(Token = "0x4001192")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E65B4", Offset = "0x9E65B4")]
		Unknown
	}
	[Token(Token = "0x2000308")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4001194")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E65EC", Offset = "0x9E65EC")]
		Unknown,
		[Token(Token = "0x4001195")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6624", Offset = "0x9E6624")]
		Dropbox,
		[Token(Token = "0x4001196")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E665C", Offset = "0x9E665C")]
		Facebook,
		[Token(Token = "0x4001197")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6694", Offset = "0x9E6694")]
		Google,
		[Token(Token = "0x4001198")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E66CC", Offset = "0x9E66CC")]
		Instagram,
		[Token(Token = "0x4001199")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6704", Offset = "0x9E6704")]
		RemoteMedia
	}
	[Token(Token = "0x2000309")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x400119B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E673C", Offset = "0x9E673C")]
		Unknown,
		[Token(Token = "0x400119C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6774", Offset = "0x9E6774")]
		Shared,
		[Token(Token = "0x400119D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E67AC", Offset = "0x9E67AC")]
		Canceled
	}
	[Token(Token = "0x200030A")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9E0238", Offset = "0x9E0238")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xCFA1E0", Offset = "0xCFA1E0", VA = "0xCFA1E0")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xCFA3EC", Offset = "0xCFA3EC", VA = "0xCFA3EC")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x170001F0")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xCFA918", Offset = "0xCFA918", VA = "0xCFA918")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0xCFA968", Offset = "0xCFA968", VA = "0xCFA968")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xCFA96C", Offset = "0xCFA96C", VA = "0xCFA96C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xCFA9BC", Offset = "0xCFA9BC", VA = "0xCFA9BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xCFA39C", Offset = "0xCFA39C", VA = "0xCFA39C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xCFA9C0", Offset = "0xCFA9C0", VA = "0xCFA9C0")]
			set
			{
			}
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xCFA9C4", Offset = "0xCFA9C4", VA = "0xCFA9C4")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x400119F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E67E4", Offset = "0x9E67E4")]
		Unknown,
		[Token(Token = "0x40011A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E681C", Offset = "0x9E681C")]
		Unavailable,
		[Token(Token = "0x40011A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6854", Offset = "0x9E6854")]
		Suppressed,
		[Token(Token = "0x40011A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E688C", Offset = "0x9E688C")]
		Active
	}
	[Token(Token = "0x200030D")]
	public enum TimeWindow
	{
		[Token(Token = "0x40011A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E68C4", Offset = "0x9E68C4")]
		Unknown,
		[Token(Token = "0x40011A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E68FC", Offset = "0x9E68FC")]
		OneHour,
		[Token(Token = "0x40011A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6934", Offset = "0x9E6934")]
		OneDay,
		[Token(Token = "0x40011A7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E696C", Offset = "0x9E696C")]
		OneWeek,
		[Token(Token = "0x40011A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E69A4", Offset = "0x9E69A4")]
		ThirtyDays,
		[Token(Token = "0x40011A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E69DC", Offset = "0x9E69DC")]
		NinetyDays
	}
	[Token(Token = "0x200030E")]
	public class UserOptions
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xCFA9CC", Offset = "0xCFA9CC", VA = "0xCFA9CC")]
		public UserOptions()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xCFAA44", Offset = "0xCFAA44", VA = "0xCFAA44")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xCFAAC0", Offset = "0xCFAAC0", VA = "0xCFAAC0")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xCFAB3C", Offset = "0xCFAB3C", VA = "0xCFAB3C")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xCFABA8", Offset = "0xCFABA8", VA = "0xCFABA8")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xCFAC24", Offset = "0xCFAC24", VA = "0xCFAC24")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xCFAC74", Offset = "0xCFAC74", VA = "0xCFAC74", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public enum UserOrdering
	{
		[Token(Token = "0x40011AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6A14", Offset = "0x9E6A14")]
		Unknown,
		[Token(Token = "0x40011AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6A4C", Offset = "0x9E6A4C")]
		None,
		[Token(Token = "0x40011AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6A84", Offset = "0x9E6A84")]
		PresenceAlphabetical
	}
	[Token(Token = "0x2000310")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40011B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6ABC", Offset = "0x9E6ABC")]
		Unknown,
		[Token(Token = "0x40011B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6AF4", Offset = "0x9E6AF4")]
		Online,
		[Token(Token = "0x40011B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6B2C", Offset = "0x9E6B2C")]
		Offline
	}
	[Token(Token = "0x2000311")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x2000556")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6002312")]
			[Address(RVA = "0xCFC690", Offset = "0xCFC690", VA = "0xCFC690")]
			private void Awake()
			{
			}

			[Token(Token = "0x6002313")]
			[Address(RVA = "0xCFC748", Offset = "0xCFC748", VA = "0xCFC748")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6002314")]
			[Address(RVA = "0xCFCD18", Offset = "0xCFCD18", VA = "0xCFCD18")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170001F3")]
		public ulong senderID
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0xCF9A4C", Offset = "0xCF9A4C", VA = "0xCF9A4C")]
			set
			{
			}
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xCFBF14", Offset = "0xCFBF14", VA = "0xCFBF14")]
		protected void Stop()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xCFBF18", Offset = "0xCFBF18", VA = "0xCFBF18")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xCFBF54", Offset = "0xCFBF54", VA = "0xCFBF54")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xCFC250", Offset = "0xCFC250", VA = "0xCFC250")]
		private void Start()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xCFC280", Offset = "0xCFC280", VA = "0xCFC280", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xCFC2E8", Offset = "0xCFC2E8", VA = "0xCFC2E8")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xCFC370", Offset = "0xCFC370", VA = "0xCFC370")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xCFC684", Offset = "0xCFC684", VA = "0xCFC684")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40011BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6B64", Offset = "0x9E6B64")]
		Unknown,
		[Token(Token = "0x40011BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6B9C", Offset = "0x9E6B9C")]
		B16000,
		[Token(Token = "0x40011BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6BD4", Offset = "0x9E6BD4")]
		B24000,
		[Token(Token = "0x40011BD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6C0C", Offset = "0x9E6C0C")]
		B32000,
		[Token(Token = "0x40011BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6C44", Offset = "0x9E6C44")]
		B64000,
		[Token(Token = "0x40011BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6C7C", Offset = "0x9E6C7C")]
		B96000,
		[Token(Token = "0x40011C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6CB4", Offset = "0x9E6CB4")]
		B128000
	}
	[Token(Token = "0x2000313")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40011C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6CEC", Offset = "0x9E6CEC")]
		Unknown,
		[Token(Token = "0x40011C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6D24", Offset = "0x9E6D24")]
		Enabled,
		[Token(Token = "0x40011C4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6D5C", Offset = "0x9E6D5C")]
		Disabled
	}
	[Token(Token = "0x2000314")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40011C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6D94", Offset = "0x9E6D94")]
		Unknown,
		[Token(Token = "0x40011C7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6DCC", Offset = "0x9E6DCC")]
		Muted,
		[Token(Token = "0x40011C8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6E04", Offset = "0x9E6E04")]
		Unmuted
	}
	[Token(Token = "0x2000315")]
	public class VoipOptions
	{
		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xCFCD20", Offset = "0xCFCD20", VA = "0xCFCD20")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xCFCD98", Offset = "0xCFCD98", VA = "0xCFCD98")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xCFCE14", Offset = "0xCFCE14", VA = "0xCFCE14")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xCFBD7C", Offset = "0xCFBD7C", VA = "0xCFBD7C")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xCFCE90", Offset = "0xCFCE90", VA = "0xCFCE90", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xCFCF54", Offset = "0xCFCF54", VA = "0xCFCF54", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xCFD014", Offset = "0xCFD014", VA = "0xCFD014", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xCFD01C", Offset = "0xCFD01C", VA = "0xCFD01C", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xCFD0BC", Offset = "0xCFD0BC", VA = "0xCFD0BC", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xCFC2E0", Offset = "0xCFC2E0", VA = "0xCFC2E0")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40011CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6E3C", Offset = "0x9E6E3C")]
		Unknown,
		[Token(Token = "0x40011CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6E74", Offset = "0x9E6E74")]
		HZ24000,
		[Token(Token = "0x40011CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6EAC", Offset = "0x9E6EAC")]
		HZ44100,
		[Token(Token = "0x40011CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9E6EE4", Offset = "0x9E6EE4")]
		HZ48000
	}
	[Token(Token = "0x2000318")]
	public class WindowsPlatform
	{
		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9E024C", Offset = "0x9E024C")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xCFD0C0", Offset = "0xCFD0C0", VA = "0xCFD0C0")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xCFD198", Offset = "0xCFD198", VA = "0xCFD198")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xCFD1D8", Offset = "0xCFD1D8", VA = "0xCFD1D8")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xCFD2C4", Offset = "0xCFD2C4", VA = "0xCFD2C4")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xCFD3E0", Offset = "0xCFD3E0", VA = "0xCFD3E0")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x2000319")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xF5A638", Offset = "0xF5A638", VA = "0xF5A638")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class AchievementDefinition
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xF627D0", Offset = "0xF627D0", VA = "0xF627D0")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xF5A7AC", Offset = "0xF5A7AC", VA = "0xF5A7AC")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class AchievementProgress
	{
		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xF62888", Offset = "0xF62888", VA = "0xF62888")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xF5AAA0", Offset = "0xF5AAA0", VA = "0xF5AAA0")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class AchievementUpdate
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xF5AD94", Offset = "0xF5AD94", VA = "0xF5AD94")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xF5AF1C", Offset = "0xF5AF1C", VA = "0xF5AF1C")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class AssetDetails
	{
		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E6F1C", Offset = "0x9E6F1C")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xF5B0C0", Offset = "0xF5B0C0", VA = "0xF5B0C0")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xF5B2C8", Offset = "0xF5B2C8", VA = "0xF5B2C8")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xF5B58C", Offset = "0xF5B58C", VA = "0xF5B58C")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xF5B734", Offset = "0xF5B734", VA = "0xF5B734")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xF5B8DC", Offset = "0xF5B8DC", VA = "0xF5B8DC")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xF5BA60", Offset = "0xF5BA60", VA = "0xF5BA60")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xF5BC18", Offset = "0xF5BC18", VA = "0xF5BC18")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xF5BDAC", Offset = "0xF5BDAC", VA = "0xF5BDAC")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xF629FC", Offset = "0xF629FC", VA = "0xF629FC")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xF5BF80", Offset = "0xF5BF80", VA = "0xF5BF80")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xF5C244", Offset = "0xF5C244", VA = "0xF5C244")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class CloudStorageData
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xF5C410", Offset = "0xF5C410", VA = "0xF5C410")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xF5C8A8", Offset = "0xF5C8A8", VA = "0xF5C8A8")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xF5C5B4", Offset = "0xF5C5B4", VA = "0xF5C5B4")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xF5CA8C", Offset = "0xF5CA8C", VA = "0xF5CA8C")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9DF610", Offset = "0x9DF610")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x170001F4")]
		public int Count
		{
			[Token(Token = "0x6001A1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F5")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001A1D")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F6")]
		public T Item
		{
			[Token(Token = "0x6001A1F")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001A20")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EFDB4", Offset = "0x9EFDB4")]
		public List<T> Data
		{
			[Token(Token = "0x6001A2B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F9")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001A2D")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		public string NextUrl
		{
			[Token(Token = "0x6001A2E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001A2F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A1E")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001A21")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001A22")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A23")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A24")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001A25")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001A26")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001A27")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A28")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001A29")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001A2A")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001A30")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class Error
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xF5666C", Offset = "0xF5666C", VA = "0xF5666C")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xF5CC30", Offset = "0xF5CC30", VA = "0xF5CC30")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class InstalledApplication
	{
		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xF62A94", Offset = "0xF62A94", VA = "0xF62A94")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xF5CEC4", Offset = "0xF5CEC4", VA = "0xF5CEC4")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xF62954", Offset = "0xF62954", VA = "0xF62954")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xF5D1E8", Offset = "0xF5D1E8", VA = "0xF5D1E8")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class LaunchDetails
	{
		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchSource;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E6F54", Offset = "0x9E6F54")]
		public readonly UserList Users;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xF62B5C", Offset = "0xF62B5C", VA = "0xF62B5C")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xF5D374", Offset = "0xF5D374", VA = "0xF5D374")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xF5D560", Offset = "0xF5D560", VA = "0xF5D560")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xF5D748", Offset = "0xF5D748", VA = "0xF5D748")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xF62C68", Offset = "0xF62C68", VA = "0xF62C68")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xF5D99C", Offset = "0xF5D99C", VA = "0xF5D99C")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class LinkedAccount
	{
		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xF62D54", Offset = "0xF62D54", VA = "0xF62D54")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xF5DD10", Offset = "0xF5DD10", VA = "0xF5DD10")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xF5E034", Offset = "0xF5E034", VA = "0xF5E034")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xF5E20C", Offset = "0xF5E20C", VA = "0xF5E20C")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xF5E380", Offset = "0xF5E380", VA = "0xF5E380")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xF5E5A4", Offset = "0xF5E5A4", VA = "0xF5E5A4")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xF5E738", Offset = "0xF5E738", VA = "0xF5E738")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xF62FD4", Offset = "0xF62FD4", VA = "0xF62FD4")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xF62DFC", Offset = "0xF62DFC", VA = "0xF62DFC")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xF5E958", Offset = "0xF5E958", VA = "0xF5E958")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E6F8C", Offset = "0x9E6F8C")]
		public readonly User User;

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xF630A0", Offset = "0xF630A0", VA = "0xF630A0")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xF63184", Offset = "0xF63184", VA = "0xF63184")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E6FC4", Offset = "0x9E6FC4")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xF5EB24", Offset = "0xF5EB24", VA = "0xF5EB24")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xF5ED5C", Offset = "0xF5ED5C", VA = "0xF5ED5C")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly uint WinCount;

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xF5F2F8", Offset = "0xF5F2F8", VA = "0xF5F2F8")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class NetworkingPeer
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6FFC", Offset = "0x9E6FFC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E700C", Offset = "0x9E700C")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170001FC")]
		public ulong ID
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xF6336C", Offset = "0xF6336C", VA = "0xF6336C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC3F4", Offset = "0x9EC3F4")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xF6335C", Offset = "0xF6335C", VA = "0xF6335C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC404", Offset = "0x9EC404")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xF63374", Offset = "0xF63374", VA = "0xF63374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC414", Offset = "0x9EC414")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xF63364", Offset = "0xF63364", VA = "0xF63364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC424", Offset = "0x9EC424")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xF5F4C0", Offset = "0xF5F4C0", VA = "0xF5F4C0")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class OrgScopedID
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xF5F5E8", Offset = "0xF5F5E8", VA = "0xF5F5E8")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class Party
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E701C", Offset = "0x9E701C")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E7054", Offset = "0x9E7054")]
		public readonly User Leader;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E708C", Offset = "0x9E708C")]
		public readonly Room Room;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E70C4", Offset = "0x9E70C4")]
		public readonly UserList Users;

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xF5F7BC", Offset = "0xF5F7BC", VA = "0xF5F7BC")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class PartyID
	{
		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xF5FB28", Offset = "0xF5FB28", VA = "0xF5FB28")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class Pid
	{
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xF6337C", Offset = "0xF6337C", VA = "0xF6337C")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xF5FD88", Offset = "0xF5FD88", VA = "0xF5FD88")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class PingResult
	{
		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E70FC", Offset = "0x9E70FC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170001FE")]
		public ulong ID
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xF6340C", Offset = "0xF6340C", VA = "0xF6340C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC434", Offset = "0x9EC434")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xF63404", Offset = "0xF63404", VA = "0xF63404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC444", Offset = "0x9EC444")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xF63414", Offset = "0xF63414", VA = "0xF63414")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000200")]
		public bool IsTimeout
		{
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xF63490", Offset = "0xF63490", VA = "0xF63490")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xF600CC", Offset = "0xF600CC", VA = "0xF600CC")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class PlatformInitialize
	{
		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xF601F8", Offset = "0xF601F8", VA = "0xF601F8")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class Product
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xF634EC", Offset = "0xF634EC", VA = "0xF634EC")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xF6036C", Offset = "0xF6036C", VA = "0xF6036C")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class Purchase
	{
		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xF60660", Offset = "0xF60660", VA = "0xF60660")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xF60804", Offset = "0xF60804", VA = "0xF60804")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class Room
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E710C", Offset = "0x9E710C")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E7144", Offset = "0x9E7144")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E717C", Offset = "0x9E717C")]
		public readonly User Owner;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly RoomType Type;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E71B4", Offset = "0x9E71B4")]
		public readonly UserList Users;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly uint Version;

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xF5EF28", Offset = "0xF5EF28", VA = "0xF5EF28")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xF6107C", Offset = "0xF6107C", VA = "0xF6107C")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xF60BE4", Offset = "0xF60BE4", VA = "0xF60BE4")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xF60D88", Offset = "0xF60D88", VA = "0xF60D88")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class SdkAccount
	{
		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xF635A4", Offset = "0xF635A4", VA = "0xF635A4")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xF61548", Offset = "0xF61548", VA = "0xF61548")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class ShareMediaResult
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xF6180C", Offset = "0xF6180C", VA = "0xF6180C")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class SystemPermission
	{
		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xF61A98", Offset = "0xF61A98", VA = "0xF61A98")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class SystemVoipState
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xF61C20", Offset = "0xF61C20", VA = "0xF61C20")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class User
	{
		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xF61DA4", Offset = "0xF61DA4", VA = "0xF61DA4")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xF6226C", Offset = "0xF6226C", VA = "0xF6226C")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class UserAndRoom
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E71EC", Offset = "0x9E71EC")]
		public readonly Room Room;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xF6363C", Offset = "0xF6363C", VA = "0xF6363C")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xF61F78", Offset = "0xF61F78", VA = "0xF61F78")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class UserProof
	{
		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xF62560", Offset = "0xF62560", VA = "0xF62560")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class UserReportID
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xF62734", Offset = "0xF62734", VA = "0xF62734")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x2000366")]
	public class P2PManager
	{
		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x17000201")]
		public bool Connected
		{
			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xCF5148", Offset = "0xCF5148", VA = "0xCF5148")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000202")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xCF5924", Offset = "0xCF5924", VA = "0xCF5924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xCF4E3C", Offset = "0xCF4E3C", VA = "0xCF4E3C")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xCF4FA4", Offset = "0xCF4FA4", VA = "0xCF4FA4")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xCF5114", Offset = "0xCF5114", VA = "0xCF5114")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xCF5158", Offset = "0xCF5158", VA = "0xCF5158")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xCF5388", Offset = "0xCF5388", VA = "0xCF5388")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xCF5968", Offset = "0xCF5968", VA = "0xCF5968")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xCF5BB0", Offset = "0xCF5BB0", VA = "0xCF5BB0")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xCF5C58", Offset = "0xCF5C58", VA = "0xCF5C58")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000558")]
		public enum State
		{
			[Token(Token = "0x4001CFA")]
			INITIALIZING,
			[Token(Token = "0x4001CFB")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x4001CFC")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x4001CFD")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x4001CFE")]
			HANGUP
		}

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0260", Offset = "0x9E0260")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x6002319")]
			[Address(RVA = "0xCF7F1C", Offset = "0xCF7F1C", VA = "0xCF7F1C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600231A")]
			[Address(RVA = "0xCF7F30", Offset = "0xCF7F30", VA = "0xCF7F30")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x17000203")]
		public static State CurrentState
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0xCF7130", Offset = "0xCF7130", VA = "0xCF7130")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000204")]
		public static ulong MyID
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0xCF5038", Offset = "0xCF5038", VA = "0xCF5038")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000205")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0xCF71A8", Offset = "0xCF71A8", VA = "0xCF71A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xCF6178", Offset = "0xCF6178", VA = "0xCF6178")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xCF6408", Offset = "0xCF6408", VA = "0xCF6408")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xCF6BD0", Offset = "0xCF6BD0", VA = "0xCF6BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xCF6C6C", Offset = "0xCF6C6C", VA = "0xCF6C6C")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xCF6E20", Offset = "0xCF6E20", VA = "0xCF6E20")]
		private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xCF6F98", Offset = "0xCF6F98", VA = "0xCF6F98")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xCF6D68", Offset = "0xCF6D68", VA = "0xCF6D68")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xCF72CC", Offset = "0xCF72CC", VA = "0xCF72CC")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xCF7410", Offset = "0xCF7410", VA = "0xCF7410")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xCF743C", Offset = "0xCF743C", VA = "0xCF743C")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xCF7444", Offset = "0xCF7444", VA = "0xCF7444")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xCF660C", Offset = "0xCF660C", VA = "0xCF660C")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xCF564C", Offset = "0xCF564C", VA = "0xCF564C")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xCF76F4", Offset = "0xCF76F4", VA = "0xCF76F4")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xCF7F24", Offset = "0xCF7F24", VA = "0xCF7F24")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class RoomManager
	{
		[Token(Token = "0x200055A")]
		public struct Invite
		{
			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x600231B")]
			[Address(RVA = "0xA8B084", Offset = "0xA8B084", VA = "0xA8B084")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Oculus.Platform.Models.User m_remoteUser;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x17000206")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0xCF75FC", Offset = "0xCF75FC", VA = "0xCF75FC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000207")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0xCF7F98", Offset = "0xCF7F98", VA = "0xCF7F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xCF6284", Offset = "0xCF6284", VA = "0xCF6284")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xCF6A48", Offset = "0xCF6A48", VA = "0xCF6A48")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xCF7FFC", Offset = "0xCF7FFC", VA = "0xCF7FFC")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xCF6F70", Offset = "0xCF6F70", VA = "0xCF6F70")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xCF7358", Offset = "0xCF7358", VA = "0xCF7358")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xCF8160", Offset = "0xCF8160", VA = "0xCF8160")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xCF82B0", Offset = "0xCF82B0", VA = "0xCF82B0")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xCF62C4", Offset = "0xCF62C4", VA = "0xCF62C4")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xCF833C", Offset = "0xCF833C", VA = "0xCF833C")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xCF879C", Offset = "0xCF879C", VA = "0xCF879C")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xCF7544", Offset = "0xCF7544", VA = "0xCF7544")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xCF8A34", Offset = "0xCF8A34", VA = "0xCF8A34")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xCF907C", Offset = "0xCF907C", VA = "0xCF907C")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xCF7008", Offset = "0xCF7008", VA = "0xCF7008")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class VoipManager
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x17000209")]
		public bool Connected
		{
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xCF76E4", Offset = "0xCF76E4", VA = "0xCF76E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xCF6B10", Offset = "0xCF6B10", VA = "0xCF6B10")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xCF7614", Offset = "0xCF7614", VA = "0xCF7614")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xCF7080", Offset = "0xCF7080", VA = "0xCF7080")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xCF9C54", Offset = "0xCF9C54", VA = "0xCF9C54")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xCF9F20", Offset = "0xCF9F20", VA = "0xCF9F20")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xCF9720", Offset = "0xCF9720", VA = "0xCF9720")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xCF9954", Offset = "0xCF9954", VA = "0xCF9954")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x200036B")]
	public class AchievementsManager
	{
		[Token(Token = "0x40012C1")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x1700020A")]
		public bool LikesToWin
		{
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0xCE9230", Offset = "0xCE9230", VA = "0xCE9230")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xCE9238", Offset = "0xCE9238", VA = "0xCE9238")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xCE9358", Offset = "0xCE9358", VA = "0xCE9358")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xCE93B4", Offset = "0xCE93B4", VA = "0xCE93B4")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xCE93BC", Offset = "0xCE93BC", VA = "0xCE93BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC454", Offset = "0x9EC454")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xCE8E54", Offset = "0xCE8E54", VA = "0xCE8E54")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xCE91BC", Offset = "0xCE91BC", VA = "0xCE91BC")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xCE9648", Offset = "0xCE9648", VA = "0xCE9648")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xCE9650", Offset = "0xCE9650", VA = "0xCE9650")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xCE993C", Offset = "0xCE993C", VA = "0xCE993C")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x200055B")]
		private enum BasketPhase
		{
			[Token(Token = "0x4001D03")]
			NONE,
			[Token(Token = "0x4001D04")]
			TOP,
			[Token(Token = "0x4001D05")]
			BOTH,
			[Token(Token = "0x4001D06")]
			BOTTOM
		}

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x1700020B")]
		public Player Player
		{
			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0xCE9944", Offset = "0xCE9944", VA = "0xCE9944")]
			set
			{
			}
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xCE994C", Offset = "0xCE994C", VA = "0xCE994C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xCE9A54", Offset = "0xCE9A54", VA = "0xCE9A54")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xCE9C50", Offset = "0xCE9C50", VA = "0xCE9C50")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x40012C5")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xCE9C58", Offset = "0xCE9C58", VA = "0xCE9C58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xCE9D28", Offset = "0xCE9D28", VA = "0xCE9D28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xCE9E8C", Offset = "0xCE9E8C", VA = "0xCE9E8C")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40012CA")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x1700020C")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xCE9F28", Offset = "0xCE9F28", VA = "0xCE9F28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0xCE9F34", Offset = "0xCE9F34", VA = "0xCE9F34")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xCE9F40", Offset = "0xCE9F40", VA = "0xCE9F40")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0xCE9F4C", Offset = "0xCE9F4C", VA = "0xCE9F4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xCE9F58", Offset = "0xCE9F58", VA = "0xCE9F58")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xCE9F64", Offset = "0xCE9F64", VA = "0xCE9F64")]
			set
			{
			}
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xCE9F70", Offset = "0xCE9F70", VA = "0xCE9F70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xCEA108", Offset = "0xCEA108", VA = "0xCEA108")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xCEA4D4", Offset = "0xCEA4D4", VA = "0xCEA4D4")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class LeaderboardManager
	{
		[Token(Token = "0x200055C")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, Oculus.Platform.Models.LeaderboardEntry> entries);

		[Token(Token = "0x200055D")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, Oculus.Platform.Models.LeaderboardEntry> entries);

		[Token(Token = "0x40012CE")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x40012CF")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40012D0")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x40012D1")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, Oculus.Platform.Models.LeaderboardEntry> m_mostWins;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, Oculus.Platform.Models.LeaderboardEntry> m_highScores;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x1700020F")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0xCEA774", Offset = "0xCEA774", VA = "0xCEA774")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xCEB378", Offset = "0xCEB378", VA = "0xCEB378")]
			set
			{
			}
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xCEA4EC", Offset = "0xCEA4EC", VA = "0xCEA4EC")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xCEA554", Offset = "0xCEA554", VA = "0xCEA554")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xCEA77C", Offset = "0xCEA77C", VA = "0xCEA77C")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xCEA664", Offset = "0xCEA664", VA = "0xCEA664")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xCEB380", Offset = "0xCEB380", VA = "0xCEB380")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xCEBED4", Offset = "0xCEBED4", VA = "0xCEBED4")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xCEBF88", Offset = "0xCEBF88", VA = "0xCEBF88")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x17000211")]
		public override uint Score
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0xCEC010", Offset = "0xCEC010", VA = "0xCEC010", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xCEC378", Offset = "0xCEC378", VA = "0xCEC378")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xCEC52C", Offset = "0xCEC52C", VA = "0xCEC52C")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x200055E")]
		private enum State
		{
			[Token(Token = "0x4001D08")]
			UNKNOWN,
			[Token(Token = "0x4001D09")]
			NONE,
			[Token(Token = "0x4001D0A")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4001D0B")]
			PRACTICING,
			[Token(Token = "0x4001D0C")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4001D0D")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4001D0E")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4001D0F")]
			PLAYING_MATCH,
			[Token(Token = "0x4001D10")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x17000212")]
		public float MatchStartTime
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0xCECDF8", Offset = "0xCECDF8", VA = "0xCECDF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xCECE18", Offset = "0xCECE18", VA = "0xCECE18")]
			private set
			{
			}
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xCEC530", Offset = "0xCEC530", VA = "0xCEC530")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xCECB20", Offset = "0xCECB20", VA = "0xCECB20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xCEC7F0", Offset = "0xCEC7F0", VA = "0xCEC7F0")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xCECB44", Offset = "0xCECB44", VA = "0xCECB44")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xCECBF0", Offset = "0xCECBF0", VA = "0xCECBF0")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xCECE20", Offset = "0xCECE20", VA = "0xCECE20")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xCED144", Offset = "0xCED144", VA = "0xCED144")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xCED938", Offset = "0xCED938", VA = "0xCED938")]
		private Player MatchPlayerAddedCallback(int slot, Oculus.Platform.Models.User user)
		{
			return null;
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xCECEFC", Offset = "0xCECEFC", VA = "0xCECEFC")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xCED288", Offset = "0xCED288", VA = "0xCED288")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xCEDCC0", Offset = "0xCEDCC0", VA = "0xCEDCC0")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xCEDCD8", Offset = "0xCEDCD8", VA = "0xCEDCD8")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xCEDE98", Offset = "0xCEDE98", VA = "0xCEDE98")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xCEDEAC", Offset = "0xCEDEAC", VA = "0xCEDEAC")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xCEDFB0", Offset = "0xCEDFB0", VA = "0xCEDFB0")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, Oculus.Platform.Models.LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xCEE5DC", Offset = "0xCEE5DC", VA = "0xCEE5DC")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, Oculus.Platform.Models.LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xCED458", Offset = "0xCED458", VA = "0xCED458")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xCEDA90", Offset = "0xCEDA90", VA = "0xCEDA90")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xCEECD0", Offset = "0xCEECD0", VA = "0xCEECD0")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class MatchmakingManager
	{
		[Token(Token = "0x200055F")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x2000560")]
		public delegate Player OnMatchPlayerAdded(int slot, Oculus.Platform.Models.User user);

		[Token(Token = "0x40012EA")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, Oculus.Platform.Models.User> m_remotePlayers;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x17000213")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xCEEE24", Offset = "0xCEEE24", VA = "0xCEEE24")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xCEC758", Offset = "0xCEC758", VA = "0xCEC758")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xCEEE2C", Offset = "0xCEEE2C", VA = "0xCEEE2C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xCEC770", Offset = "0xCEC770", VA = "0xCEC770")]
			set
			{
			}
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xCEED3C", Offset = "0xCEED3C", VA = "0xCEED3C")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xCEDDB4", Offset = "0xCEDDB4", VA = "0xCEDDB4")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xCEEE34", Offset = "0xCEEE34", VA = "0xCEEE34")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xCEF35C", Offset = "0xCEF35C", VA = "0xCEF35C")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xCEF46C", Offset = "0xCEF46C", VA = "0xCEF46C")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xCEFFEC", Offset = "0xCEFFEC", VA = "0xCEFFEC")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xCED7D0", Offset = "0xCED7D0", VA = "0xCED7D0")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xCEDE70", Offset = "0xCEDE70", VA = "0xCEDE70")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class P2PManager
	{
		[Token(Token = "0x2000561")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x600232C")]
			[Address(RVA = "0xCF1D80", Offset = "0xCF1D80", VA = "0xCF1D80")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x2000562")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x40012F1")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x40012F2")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40012F3")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x40012F4")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x40012F5")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40012F6")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x40012F7")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x40012F8")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x40012F9")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x40012FA")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x40012FB")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x40012FC")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x17000215")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xCF2A90", Offset = "0xCF2A90", VA = "0xCF2A90")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xCEC788", Offset = "0xCEC788", VA = "0xCEC788")]
			set
			{
			}
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xCF0798", Offset = "0xCF0798", VA = "0xCF0798")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xCF0910", Offset = "0xCF0910", VA = "0xCF0910")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xCEFDA8", Offset = "0xCEFDA8", VA = "0xCEFDA8")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xCF0500", Offset = "0xCF0500", VA = "0xCF0500")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xCF1DF0", Offset = "0xCF1DF0", VA = "0xCF1DF0")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xCF2080", Offset = "0xCF2080", VA = "0xCF2080")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xCF2510", Offset = "0xCF2510", VA = "0xCF2510")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xCF0B4C", Offset = "0xCF0B4C", VA = "0xCF0B4C")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xCF29CC", Offset = "0xCF29CC", VA = "0xCF29CC")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xCF27B8", Offset = "0xCF27B8", VA = "0xCF27B8")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xCF1284", Offset = "0xCF1284", VA = "0xCF1284")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xCF2F1C", Offset = "0xCF2F1C", VA = "0xCF2F1C")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xCF12F0", Offset = "0xCF12F0", VA = "0xCF12F0")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xCEC468", Offset = "0xCEC468", VA = "0xCEC468")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xCF3414", Offset = "0xCF3414", VA = "0xCF3414")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xCF193C", Offset = "0xCF193C", VA = "0xCF193C")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xCF1450", Offset = "0xCF1450", VA = "0xCF1450")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xCEC198", Offset = "0xCEC198", VA = "0xCEC198")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xCF187C", Offset = "0xCF187C", VA = "0xCF187C")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xCF317C", Offset = "0xCF317C", VA = "0xCF317C")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xCF31CC", Offset = "0xCF31CC", VA = "0xCF31CC")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xCF3CB8", Offset = "0xCF3CB8", VA = "0xCF3CB8")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xCF2684", Offset = "0xCF2684", VA = "0xCF2684")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xCF272C", Offset = "0xCF272C", VA = "0xCF272C")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xCF2EE8", Offset = "0xCF2EE8", VA = "0xCF2EE8")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xCF3540", Offset = "0xCF3540", VA = "0xCF3540")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xCF3670", Offset = "0xCF3670", VA = "0xCF3670")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xCF3B88", Offset = "0xCF3B88", VA = "0xCF3B88")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xCF3C28", Offset = "0xCF3C28", VA = "0xCF3C28")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xCF34DC", Offset = "0xCF34DC", VA = "0xCF34DC")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xCF3610", Offset = "0xCF3610", VA = "0xCF3610")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000377")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x17000216")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0xCF35E0", Offset = "0xCF35E0", VA = "0xCF35E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xCF3DEC", Offset = "0xCF3DEC", VA = "0xCF3DEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xCF34A0", Offset = "0xCF34A0", VA = "0xCF34A0")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xCF39BC", Offset = "0xCF39BC", VA = "0xCF39BC")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xCF3E5C", Offset = "0xCF3E5C", VA = "0xCF3E5C")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xCF3F98", Offset = "0xCF3F98", VA = "0xCF3F98")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xCF40E8", Offset = "0xCF40E8", VA = "0xCF40E8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xCF4110", Offset = "0xCF4110", VA = "0xCF4110")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xCF4158", Offset = "0xCF4158", VA = "0xCF4158")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x17000217")]
		public bool SendUpdates
		{
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xCF4160", Offset = "0xCF4160", VA = "0xCF4160")]
			set
			{
			}
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xCF416C", Offset = "0xCF416C", VA = "0xCF416C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xCF41DC", Offset = "0xCF41DC", VA = "0xCF41DC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xCF42BC", Offset = "0xCF42BC", VA = "0xCF42BC")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xCF322C", Offset = "0xCF322C", VA = "0xCF322C")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xCF43D4", Offset = "0xCF43D4", VA = "0xCF43D4")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000563")]
		public enum State
		{
			[Token(Token = "0x4001D17")]
			INITIALIZING,
			[Token(Token = "0x4001D18")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4001D19")]
			MATCH_TRANSITION,
			[Token(Token = "0x4001D1A")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x4001D1B")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x17000218")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0xCEC6E8", Offset = "0xCEC6E8", VA = "0xCEC6E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0xCEC130", Offset = "0xCEC130", VA = "0xCEC130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0xCEC790", Offset = "0xCEC790", VA = "0xCEC790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xCEEC68", Offset = "0xCEEC68", VA = "0xCEEC68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		public static State CurrentState
		{
			[Token(Token = "0x6001B29")]
			[Address(RVA = "0xCE9BF0", Offset = "0xCE9BF0", VA = "0xCE9BF0")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x1700021D")]
		public static ulong MyID
		{
			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0xCEAB9C", Offset = "0xCEAB9C", VA = "0xCEAB9C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700021E")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xCED860", Offset = "0xCED860", VA = "0xCED860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xCF43DC", Offset = "0xCF43DC", VA = "0xCF43DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xCF4424", Offset = "0xCF4424", VA = "0xCF4424")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xCF45E0", Offset = "0xCF45E0", VA = "0xCF45E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xCF467C", Offset = "0xCF467C", VA = "0xCF467C")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xCF4758", Offset = "0xCF4758", VA = "0xCF4758")]
		private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xCF0448", Offset = "0xCF0448", VA = "0xCF0448")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xCF4850", Offset = "0xCF4850", VA = "0xCF4850")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xCF4858", Offset = "0xCF4858", VA = "0xCF4858")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xCED078", Offset = "0xCED078", VA = "0xCED078")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xCF488C", Offset = "0xCF488C", VA = "0xCF488C")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x400130F")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x4001310")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x4001311")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x1700021F")]
		public virtual uint Score
		{
			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0xCEC190", Offset = "0xCEC190", VA = "0xCEC190", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0xCEC064", Offset = "0xCEC064", VA = "0xCEC064", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0xCF4894", Offset = "0xCF4894", VA = "0xCF4894")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		protected bool HasBall
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0xCE8EB8", Offset = "0xCE8EB8", VA = "0xCE8EB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xCF489C", Offset = "0xCF489C", VA = "0xCF489C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xCF36FC", Offset = "0xCF36FC", VA = "0xCF36FC")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xCE9140", Offset = "0xCE9140", VA = "0xCE9140")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xCE8F28", Offset = "0xCE8F28", VA = "0xCE8F28")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xCF497C", Offset = "0xCF497C", VA = "0xCF497C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xCE91C0", Offset = "0xCE91C0", VA = "0xCE91C0")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x17000222")]
		public Player Player
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xCEEC08", Offset = "0xCEEC08", VA = "0xCEEC08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public Text NameText
		{
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xCEECC8", Offset = "0xCEECC8", VA = "0xCEECC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xCF4AB8", Offset = "0xCF4AB8", VA = "0xCF4AB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B3B")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xCF4BE8", Offset = "0xCF4BE8", VA = "0xCF4BE8")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Oculus.Platform.Models.User m_user;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x17000224")]
		public Oculus.Platform.Models.User User
		{
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0xCEDA88", Offset = "0xCEDA88", VA = "0xCEDA88")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public ulong ID
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0xCF1D54", Offset = "0xCF1D54", VA = "0xCF1D54")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000226")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0xCF3224", Offset = "0xCF3224", VA = "0xCF3224")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B40")]
			[Address(RVA = "0xCF4BF0", Offset = "0xCF4BF0", VA = "0xCF4BF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public override uint Score
		{
			[Token(Token = "0x6001B41")]
			[Address(RVA = "0xCF4BF8", Offset = "0xCF4BF8", VA = "0xCF4BF8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xCF3CB4", Offset = "0xCF3CB4", VA = "0xCF3CB4")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xCF4BFC", Offset = "0xCF4BFC", VA = "0xCF4BFC")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xCF4C00", Offset = "0xCF4C00", VA = "0xCF4C00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xCF4E34", Offset = "0xCF4E34", VA = "0xCF4E34")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x200037E")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E7384", Offset = "0x9E7384")]
		public int x;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E73C4", Offset = "0x9E73C4")]
		public int y;

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xF6E9BC", Offset = "0xF6E9BC", VA = "0xF6E9BC")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xF6E9C4", Offset = "0xF6E9C4", VA = "0xF6E9C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xF6F44C", Offset = "0xF6F44C", VA = "0xF6F44C")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x2000564")]
		private struct PositionInfo
		{
			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4001329")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x400132A")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x400132B")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xF6F454", Offset = "0xF6F454", VA = "0xF6F454")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xF6F6FC", Offset = "0xF6F6FC", VA = "0xF6F6FC")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xF6F80C", Offset = "0xF6F80C", VA = "0xF6F80C")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xF6F8F0", Offset = "0xF6F8F0", VA = "0xF6F8F0")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xF6F9D4", Offset = "0xF6F9D4", VA = "0xF6F9D4")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xF702BC", Offset = "0xF702BC", VA = "0xF702BC")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xF703E0", Offset = "0xF703E0", VA = "0xF703E0")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xF70664", Offset = "0xF70664", VA = "0xF70664")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xF6FCC8", Offset = "0xF6FCC8", VA = "0xF6FCC8")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xF70834", Offset = "0xF70834", VA = "0xF70834")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xF6FEA0", Offset = "0xF6FEA0", VA = "0xF6FEA0")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xF70888", Offset = "0xF70888", VA = "0xF70888")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x2000565")]
		private enum GameState
		{
			[Token(Token = "0x4001D20")]
			None,
			[Token(Token = "0x4001D21")]
			PracticingMyTurn,
			[Token(Token = "0x4001D22")]
			PracticingAiTurn,
			[Token(Token = "0x4001D23")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4001D24")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xF70950", Offset = "0xF70950", VA = "0xF70950")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xF70AD8", Offset = "0xF70AD8", VA = "0xF70AD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xF70978", Offset = "0xF70978", VA = "0xF70978")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xF710C8", Offset = "0xF710C8", VA = "0xF710C8")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xF70ADC", Offset = "0xF70ADC", VA = "0xF70ADC")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xF719F0", Offset = "0xF719F0", VA = "0xF719F0")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xF713DC", Offset = "0xF713DC", VA = "0xF713DC")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xF71B48", Offset = "0xF71B48", VA = "0xF71B48")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xF71BB0", Offset = "0xF71BB0", VA = "0xF71BB0")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xF71C80", Offset = "0xF71C80", VA = "0xF71C80")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xF71C94", Offset = "0xF71C94", VA = "0xF71C94")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xF6F064", Offset = "0xF6F064", VA = "0xF6F064")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xF6F05C", Offset = "0xF6F05C", VA = "0xF6F05C")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xF6F06C", Offset = "0xF6F06C", VA = "0xF6F06C")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xF6F378", Offset = "0xF6F378", VA = "0xF6F378")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xF71630", Offset = "0xF71630", VA = "0xF71630")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xF7173C", Offset = "0xF7173C", VA = "0xF7173C")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xF71F80", Offset = "0xF71F80", VA = "0xF71F80")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xF71F88", Offset = "0xF71F88", VA = "0xF71F88")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xF70980", Offset = "0xF70980", VA = "0xF70980")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xF70B94", Offset = "0xF70B94", VA = "0xF70B94")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xF72030", Offset = "0xF72030", VA = "0xF72030")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x2000566")]
		public enum Piece
		{
			[Token(Token = "0x4001D26")]
			A,
			[Token(Token = "0x4001D27")]
			B,
			[Token(Token = "0x4001D28")]
			PowerBall
		}

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x17000228")]
		public Piece Type
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xF71D18", Offset = "0xF71D18", VA = "0xF71D18")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x17000229")]
		public BoardPosition Position
		{
			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0xF71D10", Offset = "0xF71D10", VA = "0xF71D10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xF7082C", Offset = "0xF7082C", VA = "0xF7082C")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public GameObject Prefab
		{
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0xF71B1C", Offset = "0xF71B1C", VA = "0xF71B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xF71C58", Offset = "0xF71C58", VA = "0xF71C58")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xF72038", Offset = "0xF72038", VA = "0xF72038")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x400134A")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xF72040", Offset = "0xF72040", VA = "0xF72040")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xF72064", Offset = "0xF72064", VA = "0xF72064")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xF72230", Offset = "0xF72230", VA = "0xF72230")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xF72184", Offset = "0xF72184", VA = "0xF72184")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xF72674", Offset = "0xF72674", VA = "0xF72674")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xF72AA0", Offset = "0xF72AA0", VA = "0xF72AA0")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xF72B58", Offset = "0xF72B58", VA = "0xF72B58")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xF72C54", Offset = "0xF72C54", VA = "0xF72C54")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x2000567")]
		private enum MatchRoomState
		{
			[Token(Token = "0x4001D2A")]
			None,
			[Token(Token = "0x4001D2B")]
			Queued,
			[Token(Token = "0x4001D2C")]
			Configuring,
			[Token(Token = "0x4001D2D")]
			MyTurn,
			[Token(Token = "0x4001D2E")]
			RemoteTurn
		}

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x400134E")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Oculus.Platform.Models.User m_remotePlayer;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x4001352")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xF72C5C", Offset = "0xF72C5C", VA = "0xF72C5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xF72EC4", Offset = "0xF72EC4", VA = "0xF72EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xF72FEC", Offset = "0xF72FEC", VA = "0xF72FEC")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xF711D0", Offset = "0xF711D0", VA = "0xF711D0")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xF73004", Offset = "0xF73004", VA = "0xF73004")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xF72D18", Offset = "0xF72D18", VA = "0xF72D18")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xF7303C", Offset = "0xF7303C", VA = "0xF7303C")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xF7341C", Offset = "0xF7341C", VA = "0xF7341C")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xF735A8", Offset = "0xF735A8", VA = "0xF735A8")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xF73EC0", Offset = "0xF73EC0", VA = "0xF73EC0")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xF73958", Offset = "0xF73958", VA = "0xF73958")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xF74408", Offset = "0xF74408", VA = "0xF74408")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xF71D20", Offset = "0xF71D20", VA = "0xF71D20")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xF7469C", Offset = "0xF7469C", VA = "0xF7469C")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xF743AC", Offset = "0xF743AC", VA = "0xF743AC")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xF746DC", Offset = "0xF746DC", VA = "0xF746DC")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xF747A0", Offset = "0xF747A0", VA = "0xF747A0")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x1700022B")]
		public static ulong MyID
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xCE8CCC", Offset = "0xCE8CCC", VA = "0xCE8CCC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700022C")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xCE8D74", Offset = "0xCE8D74", VA = "0xCE8D74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xCE8774", Offset = "0xCE8774", VA = "0xCE8774")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xCE88B4", Offset = "0xCE88B4", VA = "0xCE88B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xCE8950", Offset = "0xCE8950", VA = "0xCE8950")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xCE8BAC", Offset = "0xCE8BAC", VA = "0xCE8BAC")]
		private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xCE8A2C", Offset = "0xCE8A2C", VA = "0xCE8A2C")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xCE8E4C", Offset = "0xCE8E4C", VA = "0xCE8E4C")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x2000386")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xF69DF0", Offset = "0xF69DF0", VA = "0xF69DF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xF69EF8", Offset = "0xF69EF8", VA = "0xF69EF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xF69FD4", Offset = "0xF69FD4", VA = "0xF69FD4")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xF6BDF4", Offset = "0xF6BDF4", VA = "0xF6BDF4")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xF6BCD8", Offset = "0xF6BCD8", VA = "0xF6BCD8")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xF6BC1C", Offset = "0xF6BC1C", VA = "0xF6BC1C")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xF6BB34", Offset = "0xF6BB34", VA = "0xF6BB34")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xF6BA80", Offset = "0xF6BA80", VA = "0xF6BA80")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xF6B960", Offset = "0xF6B960", VA = "0xF6B960")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xF6B840", Offset = "0xF6B840", VA = "0xF6B840")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xF69E60", Offset = "0xF69E60", VA = "0xF69E60")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xF6B780", Offset = "0xF6B780", VA = "0xF6B780")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xF6A8E8", Offset = "0xF6A8E8", VA = "0xF6A8E8")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xF6A9F4", Offset = "0xF6A9F4", VA = "0xF6A9F4")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xF6AAB0", Offset = "0xF6AAB0", VA = "0xF6AAB0")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xF6ABAC", Offset = "0xF6ABAC", VA = "0xF6ABAC")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xF6ACAC", Offset = "0xF6ACAC", VA = "0xF6ACAC")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xF6ADA8", Offset = "0xF6ADA8", VA = "0xF6ADA8")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xF6AED4", Offset = "0xF6AED4", VA = "0xF6AED4")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xF6AF94", Offset = "0xF6AF94", VA = "0xF6AF94")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xF6B094", Offset = "0xF6B094", VA = "0xF6B094")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xF6B154", Offset = "0xF6B154", VA = "0xF6B154")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xF6B210", Offset = "0xF6B210", VA = "0xF6B210")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xF6B324", Offset = "0xF6B324", VA = "0xF6B324")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xF6B438", Offset = "0xF6B438", VA = "0xF6B438")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xF6BEB4", Offset = "0xF6BEB4", VA = "0xF6BEB4")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xF6BF7C", Offset = "0xF6BF7C", VA = "0xF6BF7C")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xF6C69C", Offset = "0xF6C69C", VA = "0xF6C69C")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xF6CBE0", Offset = "0xF6CBE0", VA = "0xF6CBE0")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xF6CCD4", Offset = "0xF6CCD4", VA = "0xF6CCD4")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xF6CD50", Offset = "0xF6CD50", VA = "0xF6CD50")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xF6D360", Offset = "0xF6D360", VA = "0xF6D360")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xF6D564", Offset = "0xF6D564", VA = "0xF6D564")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xF6D624", Offset = "0xF6D624", VA = "0xF6D624")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xF6D6E4", Offset = "0xF6D6E4", VA = "0xF6D6E4")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xF6D7A4", Offset = "0xF6D7A4", VA = "0xF6D7A4")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xF6DB5C", Offset = "0xF6DB5C", VA = "0xF6DB5C")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xF6DF8C", Offset = "0xF6DF8C", VA = "0xF6DF8C")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xF6E07C", Offset = "0xF6E07C", VA = "0xF6E07C")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xF6E16C", Offset = "0xF6E16C", VA = "0xF6E16C")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xF6E25C", Offset = "0xF6E25C", VA = "0xF6E25C")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xF6E34C", Offset = "0xF6E34C", VA = "0xF6E34C")]
		private void getUserCallback(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xF6E714", Offset = "0xF6E714", VA = "0xF6E714")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xF6E804", Offset = "0xF6E804", VA = "0xF6E804")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xF6E8F4", Offset = "0xF6E8F4", VA = "0xF6E8F4")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xF6E9B4", Offset = "0xF6E9B4", VA = "0xF6E9B4")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x2000387")]
	internal enum states
	{
		[Token(Token = "0x4001359")]
		NOT_INIT,
		[Token(Token = "0x400135A")]
		IDLE,
		[Token(Token = "0x400135B")]
		REQUEST_FIND,
		[Token(Token = "0x400135C")]
		FINDING_ROOM,
		[Token(Token = "0x400135D")]
		REQUEST_CREATE,
		[Token(Token = "0x400135E")]
		REQUEST_JOIN,
		[Token(Token = "0x400135F")]
		REQUEST_LEAVE,
		[Token(Token = "0x4001360")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x4001361")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x2000388")]
	public static class Constants
	{
		[Token(Token = "0x4001362")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4001363")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4001364")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x2000389")]
	public class chatPacket
	{
		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E75B4", Offset = "0x9E75B4")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E75C4", Offset = "0x9E75C4")]
		private string <textString>k__BackingField;

		[Token(Token = "0x1700022D")]
		public int packetID
		{
			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0xF69B5C", Offset = "0xF69B5C", VA = "0xF69B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC464", Offset = "0x9EC464")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0xF69548", Offset = "0xF69548", VA = "0xF69548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC474", Offset = "0x9EC474")]
			set
			{
			}
		}

		[Token(Token = "0x1700022E")]
		public string textString
		{
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0xF69B54", Offset = "0xF69B54", VA = "0xF69B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC484", Offset = "0x9EC484")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0xF69550", Offset = "0xF69550", VA = "0xF69550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC494", Offset = "0x9EC494")]
			set
			{
			}
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xF69558", Offset = "0xF69558", VA = "0xF69558")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xF6987C", Offset = "0xF6987C", VA = "0xF6987C")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xF69540", Offset = "0xF69540", VA = "0xF69540")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Oculus.Platform.Models.User localUser;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Oculus.Platform.Models.User remoteUser;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xF67018", Offset = "0xF67018", VA = "0xF67018")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xF671A4", Offset = "0xF671A4", VA = "0xF671A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xF67288", Offset = "0xF67288", VA = "0xF67288")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xF68788", Offset = "0xF68788", VA = "0xF68788")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xF6710C", Offset = "0xF6710C", VA = "0xF6710C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xF68850", Offset = "0xF68850", VA = "0xF68850")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xF68948", Offset = "0xF68948", VA = "0xF68948")]
		private void init(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xF677A8", Offset = "0xF677A8", VA = "0xF677A8")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xF68A8C", Offset = "0xF68A8C", VA = "0xF68A8C")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xF6792C", Offset = "0xF6792C", VA = "0xF6792C")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xF67D2C", Offset = "0xF67D2C", VA = "0xF67D2C")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xF67EA8", Offset = "0xF67EA8", VA = "0xF67EA8")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xF68BEC", Offset = "0xF68BEC", VA = "0xF68BEC")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xF68D50", Offset = "0xF68D50", VA = "0xF68D50")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xF67BB0", Offset = "0xF67BB0", VA = "0xF67BB0")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xF690B4", Offset = "0xF690B4", VA = "0xF690B4")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xF69190", Offset = "0xF69190", VA = "0xF69190")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xF68234", Offset = "0xF68234", VA = "0xF68234")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xF67608", Offset = "0xF67608", VA = "0xF67608")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xF6834C", Offset = "0xF6834C", VA = "0xF6834C")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xF69B64", Offset = "0xF69B64", VA = "0xF69B64")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xF68480", Offset = "0xF68480", VA = "0xF68480")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xF69C44", Offset = "0xF69C44", VA = "0xF69C44")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xF68594", Offset = "0xF68594", VA = "0xF68594")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xF69D20", Offset = "0xF69D20", VA = "0xF69D20")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xF69DE8", Offset = "0xF69DE8", VA = "0xF69DE8")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x200038B")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000023")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xF667E4", Offset = "0xF667E4", VA = "0xF667E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC4A4", Offset = "0x9EC4A4")]
			add
			{
			}
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xF668E0", Offset = "0xF668E0", VA = "0xF668E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC4B4", Offset = "0x9EC4B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xF669DC", Offset = "0xF669DC", VA = "0xF669DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC4C4", Offset = "0x9EC4C4")]
			add
			{
			}
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xF66ADC", Offset = "0xF66ADC", VA = "0xF66ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC4D4", Offset = "0x9EC4D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xF66BDC", Offset = "0xF66BDC", VA = "0xF66BDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xF66FCC", Offset = "0xF66FCC", VA = "0xF66FCC")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xF66D50", Offset = "0xF66D50", VA = "0xF66D50")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xF67008", Offset = "0xF67008", VA = "0xF67008")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200038C")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001371")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001372")]
		public const string Tab = "    ";

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x131C5CC", Offset = "0x131C5CC", VA = "0x131C5CC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC4E4", Offset = "0x9EC4E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC4E4", Offset = "0x9EC4E4")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x131C654", Offset = "0x131C654", VA = "0x131C654")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC544", Offset = "0x9EC544")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC544", Offset = "0x9EC544")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x131C6EC", Offset = "0x131C6EC", VA = "0x131C6EC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC5A4", Offset = "0x9EC5A4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC5A4", Offset = "0x9EC5A4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x131C774", Offset = "0x131C774", VA = "0x131C774")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC604", Offset = "0x9EC604")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC604", Offset = "0x9EC604")]
		public static void LogError(string logMsg)
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class CAPI
	{
		[Token(Token = "0x4001373")]
		private const string LibFile = "ovravatarloader";

		[PreserveSig]
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x131C7FC", Offset = "0x131C7FC", VA = "0x131C7FC")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[PreserveSig]
		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x131C8AC", Offset = "0x131C8AC", VA = "0x131C8AC")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x131C93C", Offset = "0x131C93C", VA = "0x131C93C")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x131C9CC", Offset = "0x131C9CC", VA = "0x131C9CC")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x131CA6C", Offset = "0x131CA6C", VA = "0x131CA6C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x131CB44", Offset = "0x131CB44", VA = "0x131CB44")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x131CBE4", Offset = "0x131CBE4", VA = "0x131CBE4")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x131CCBC", Offset = "0x131CCBC", VA = "0x131CCBC")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x131CD5C", Offset = "0x131CD5C", VA = "0x131CD5C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x131CDFC", Offset = "0x131CDFC", VA = "0x131CDFC")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x131CE9C", Offset = "0x131CE9C", VA = "0x131CE9C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x131CF3C", Offset = "0x131CF3C", VA = "0x131CF3C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x131CFEC", Offset = "0x131CFEC", VA = "0x131CFEC")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x131D09C", Offset = "0x131D09C", VA = "0x131D09C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x131D14C", Offset = "0x131D14C", VA = "0x131D14C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x131D1EC", Offset = "0x131D1EC", VA = "0x131D1EC")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x131D28C", Offset = "0x131D28C", VA = "0x131D28C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x131D33C", Offset = "0x131D33C", VA = "0x131D33C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x131D3DC", Offset = "0x131D3DC", VA = "0x131D3DC")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x131D4A4", Offset = "0x131D4A4", VA = "0x131D4A4")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x131D4DC", Offset = "0x131D4DC", VA = "0x131D4DC")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x131D59C", Offset = "0x131D59C", VA = "0x131D59C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x131D67C", Offset = "0x131D67C", VA = "0x131D67C")]
		public static extern void ovrAvatarPose_Update3DofHands(IntPtr avatar, IntPtr inputStateLeft, IntPtr inputStateRight, ovrAvatarControllerType type);

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x131D744", Offset = "0x131D744", VA = "0x131D744")]
		public static void ovrAvatarPose_UpdateSDK3DofHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x131DBE4", Offset = "0x131DBE4", VA = "0x131DBE4")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x131D924", Offset = "0x131D924", VA = "0x131D924")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x131D9D4", Offset = "0x131D9D4", VA = "0x131D9D4")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x131DA84", Offset = "0x131DA84", VA = "0x131DA84")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x131DB34", Offset = "0x131DB34", VA = "0x131DB34")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x131DC94", Offset = "0x131DC94", VA = "0x131DC94")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x131DD34", Offset = "0x131DD34", VA = "0x131DD34")]
		public static ovrAvatarComponent ovrAvatarComponent_Get(IntPtr avatar, uint index)
		{
			return default(ovrAvatarComponent);
		}

		[PreserveSig]
		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x131DE38", Offset = "0x131DE38", VA = "0x131DE38")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x131DEE8", Offset = "0x131DEE8", VA = "0x131DEE8")]
		public static ovrAvatarBaseComponent? ovrAvatarPose_GetBaseComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x131E024", Offset = "0x131E024", VA = "0x131E024")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x131E0C4", Offset = "0x131E0C4", VA = "0x131E0C4")]
		public static ovrAvatarBodyComponent? ovrAvatarPose_GetBodyComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x131E21C", Offset = "0x131E21C", VA = "0x131E21C")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x131E2BC", Offset = "0x131E2BC", VA = "0x131E2BC")]
		public static ovrAvatarControllerComponent? ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x131E414", Offset = "0x131E414", VA = "0x131E414")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x131E4B4", Offset = "0x131E4B4", VA = "0x131E4B4")]
		public static ovrAvatarControllerComponent? ovrAvatarPose_GetRightControllerComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x131E60C", Offset = "0x131E60C", VA = "0x131E60C")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x131E6AC", Offset = "0x131E6AC", VA = "0x131E6AC")]
		public static ovrAvatarHandComponent? ovrAvatarPose_GetLeftHandComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x131E804", Offset = "0x131E804", VA = "0x131E804")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x131E8A4", Offset = "0x131E8A4", VA = "0x131E8A4")]
		public static ovrAvatarHandComponent? ovrAvatarPose_GetRightHandComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x131E9FC", Offset = "0x131E9FC", VA = "0x131E9FC")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x131EA9C", Offset = "0x131EA9C", VA = "0x131EA9C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x131EB3C", Offset = "0x131EB3C", VA = "0x131EB3C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x131EBF4", Offset = "0x131EBF4", VA = "0x131EBF4")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x131EC94", Offset = "0x131EC94", VA = "0x131EC94")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x131EE30", Offset = "0x131EE30", VA = "0x131EE30")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x131EF2C", Offset = "0x131EF2C", VA = "0x131EF2C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x131ED90", Offset = "0x131ED90", VA = "0x131ED90")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x131EFCC", Offset = "0x131EFCC", VA = "0x131EFCC")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x131F06C", Offset = "0x131F06C", VA = "0x131F06C")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x131F274", Offset = "0x131F274", VA = "0x131F274")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x131F324", Offset = "0x131F324", VA = "0x131F324")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x131F4B4", Offset = "0x131F4B4", VA = "0x131F4B4")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x131F56C", Offset = "0x131F56C", VA = "0x131F56C")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x131F658", Offset = "0x131F658", VA = "0x131F658")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x131F6F8", Offset = "0x131F6F8", VA = "0x131F6F8")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x131F798", Offset = "0x131F798", VA = "0x131F798")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x131F880", Offset = "0x131F880", VA = "0x131F880")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x131F920", Offset = "0x131F920", VA = "0x131F920")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x131FA08", Offset = "0x131FA08", VA = "0x131FA08")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x131FAA8", Offset = "0x131FAA8", VA = "0x131FAA8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x131FB58", Offset = "0x131FB58", VA = "0x131FB58")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x131FC08", Offset = "0x131FC08", VA = "0x131FC08")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x131FCB8", Offset = "0x131FCB8", VA = "0x131FCB8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x131FD58", Offset = "0x131FD58", VA = "0x131FD58")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x131FE00", Offset = "0x131FE00", VA = "0x131FE00")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x131FEA8", Offset = "0x131FEA8", VA = "0x131FEA8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x131FF48", Offset = "0x131FF48", VA = "0x131FF48")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x131FFE8", Offset = "0x131FFE8", VA = "0x131FFE8")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x13200BC", Offset = "0x13200BC", VA = "0x13200BC")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x132016C", Offset = "0x132016C", VA = "0x132016C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x132020C", Offset = "0x132020C", VA = "0x132020C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x13202AC", Offset = "0x13202AC", VA = "0x13202AC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x132034C", Offset = "0x132034C", VA = "0x132034C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x1320404", Offset = "0x1320404", VA = "0x1320404")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x13204BC", Offset = "0x13204BC", VA = "0x13204BC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1320574", Offset = "0x1320574", VA = "0x1320574")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1320614", Offset = "0x1320614", VA = "0x1320614")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x13206B4", Offset = "0x13206B4", VA = "0x13206B4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x132079C", Offset = "0x132079C", VA = "0x132079C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x132083C", Offset = "0x132083C", VA = "0x132083C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x1320924", Offset = "0x1320924", VA = "0x1320924")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x13209C4", Offset = "0x13209C4", VA = "0x13209C4")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1320B4C", Offset = "0x1320B4C", VA = "0x1320B4C")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1320DB0", Offset = "0x1320DB0", VA = "0x1320DB0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1320AAC", Offset = "0x1320AAC", VA = "0x1320AAC")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x1320E60", Offset = "0x1320E60", VA = "0x1320E60")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1320F00", Offset = "0x1320F00", VA = "0x1320F00")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x1320FB0", Offset = "0x1320FB0", VA = "0x1320FB0")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x1321060", Offset = "0x1321060", VA = "0x1321060")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1321110", Offset = "0x1321110", VA = "0x1321110")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x13211D0", Offset = "0x13211D0", VA = "0x13211D0")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x1321290", Offset = "0x1321290", VA = "0x1321290")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1321350", Offset = "0x1321350", VA = "0x1321350")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x13213F0", Offset = "0x13213F0", VA = "0x13213F0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x1321490", Offset = "0x1321490", VA = "0x1321490")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1321530", Offset = "0x1321530", VA = "0x1321530")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x13215D0", Offset = "0x13215D0", VA = "0x13215D0")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x1321670", Offset = "0x1321670", VA = "0x1321670")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x13217B4", Offset = "0x13217B4", VA = "0x13217B4")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x132186C", Offset = "0x132186C", VA = "0x132186C")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x132190C", Offset = "0x132190C", VA = "0x132190C")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x1321914", Offset = "0x1321914", VA = "0x1321914")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x13219C4", Offset = "0x13219C4", VA = "0x13219C4")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200038E")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x9E75F4", Offset = "0x9E75F4")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x130D3D4", Offset = "0x130D3D4", VA = "0x130D3D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x130D3D8", Offset = "0x130D3D8", VA = "0x130D3D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x130D4E0", Offset = "0x130D4E0", VA = "0x130D4E0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7640", Offset = "0x9E7640")]
		public bool autoRetrigger;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E7678", Offset = "0x9E7678")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E769C", Offset = "0x9E769C")]
		public Transform[] playPositions;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x1302A20", Offset = "0x1302A20", VA = "0x1302A20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x1302B9C", Offset = "0x1302B9C", VA = "0x1302B9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1302E20", Offset = "0x1302E20", VA = "0x1302E20")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x1302BFC", Offset = "0x1302BFC", VA = "0x1302BFC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x1302F88", Offset = "0x1302F88", VA = "0x1302F88")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x130311C", Offset = "0x130311C", VA = "0x130311C")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001381")]
		Default,
		[Token(Token = "0x4001382")]
		Preload,
		[Token(Token = "0x4001383")]
		ManualPreload
	}
	[Token(Token = "0x2000391")]
	public enum Fade
	{
		[Token(Token = "0x4001385")]
		In,
		[Token(Token = "0x4001386")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	public class SoundGroup
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E76D4", Offset = "0x9E76D4")]
		public int maxPlayingSounds;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x130D2B4", Offset = "0x130D2B4", VA = "0x130D2B4")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x130D348", Offset = "0x130D348", VA = "0x130D348")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x130BAA8", Offset = "0x130BAA8", VA = "0x130BAA8")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x130BBE0", Offset = "0x130BBE0", VA = "0x130BBE0")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x130C870", Offset = "0x130C870", VA = "0x130C870")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000393")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000568")]
		public enum Fade
		{
			[Token(Token = "0x4001D30")]
			In,
			[Token(Token = "0x4001D31")]
			Out
		}

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0270", Offset = "0x9E0270")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6002331")]
			[Address(RVA = "0x1308240", Offset = "0x1308240", VA = "0x1308240")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6002332")]
			[Address(RVA = "0x130B3D8", Offset = "0x130B3D8", VA = "0x130B3D8")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0280", Offset = "0x9E0280")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6002334")]
			[Address(RVA = "0x130B33C", Offset = "0x130B33C", VA = "0x130B33C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002335")]
			[Address(RVA = "0x130B344", Offset = "0x130B344", VA = "0x130B344")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7700", Offset = "0x9E7700")]
		public bool makePersistent;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7738", Offset = "0x9E7738")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7770", Offset = "0x9E7770")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E77A8", Offset = "0x9E77A8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E77E0", Offset = "0x9E77E0")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7818", Offset = "0x9E7818")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7850", Offset = "0x9E7850")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7888", Offset = "0x9E7888")]
		public bool verboseLogging;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E78C0", Offset = "0x9E78C0")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E78F8", Offset = "0x9E78F8")]
		public float volumeSoundFX;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7930", Offset = "0x9E7930")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700022F")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0x13031D8", Offset = "0x13031D8", VA = "0x13031D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000230")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x13032BC", Offset = "0x13032BC", VA = "0x13032BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0x1303324", Offset = "0x1303324", VA = "0x1303324")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000232")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x130339C", Offset = "0x130339C", VA = "0x130339C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000233")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x1303414", Offset = "0x1303414", VA = "0x1303414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x130348C", Offset = "0x130348C", VA = "0x130348C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x1303504", Offset = "0x1303504", VA = "0x1303504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x1305B64", Offset = "0x1305B64", VA = "0x1305B64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x130357C", Offset = "0x130357C", VA = "0x130357C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x13037B4", Offset = "0x13037B4", VA = "0x13037B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x1303580", Offset = "0x1303580", VA = "0x1303580")]
		private void Init()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x1304958", Offset = "0x1304958", VA = "0x1304958")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x130390C", Offset = "0x130390C", VA = "0x130390C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x13050EC", Offset = "0x13050EC", VA = "0x13050EC")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x130529C", Offset = "0x130529C", VA = "0x130529C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x1305454", Offset = "0x1305454", VA = "0x1305454")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x130555C", Offset = "0x130555C", VA = "0x130555C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x1305620", Offset = "0x1305620", VA = "0x1305620")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x13040F8", Offset = "0x13040F8", VA = "0x13040F8")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x130495C", Offset = "0x130495C", VA = "0x130495C")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x1305E44", Offset = "0x1305E44", VA = "0x1305E44")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x1305F40", Offset = "0x1305F40", VA = "0x1305F40")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x1306040", Offset = "0x1306040", VA = "0x1306040")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x1305CC4", Offset = "0x1305CC4", VA = "0x1305CC4")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x1306220", Offset = "0x1306220", VA = "0x1306220")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x13063A8", Offset = "0x13063A8", VA = "0x13063A8")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x13065E0", Offset = "0x13065E0", VA = "0x13065E0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x1302EB8", Offset = "0x1302EB8", VA = "0x1302EB8")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x130304C", Offset = "0x130304C", VA = "0x130304C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x13067BC", Offset = "0x13067BC", VA = "0x13067BC")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x13068A0", Offset = "0x13068A0", VA = "0x13068A0")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x130696C", Offset = "0x130696C", VA = "0x130696C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x1306A98", Offset = "0x1306A98", VA = "0x1306A98")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x1306B58", Offset = "0x1306B58", VA = "0x1306B58")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x1306C70", Offset = "0x1306C70", VA = "0x1306C70")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x1307A58", Offset = "0x1307A58", VA = "0x1307A58")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x1308248", Offset = "0x1308248", VA = "0x1308248")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x13083F4", Offset = "0x13083F4", VA = "0x13083F4")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x13095D8", Offset = "0x13095D8", VA = "0x13095D8")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x1306E44", Offset = "0x1306E44", VA = "0x1306E44")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x13096FC", Offset = "0x13096FC", VA = "0x13096FC")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1309810", Offset = "0x1309810", VA = "0x1309810")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1309930", Offset = "0x1309930", VA = "0x1309930")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1309DD8", Offset = "0x1309DD8", VA = "0x1309DD8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x130A028", Offset = "0x130A028", VA = "0x130A028")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x130A154", Offset = "0x130A154", VA = "0x130A154")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x130A344", Offset = "0x130A344", VA = "0x130A344")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x130A420", Offset = "0x130A420", VA = "0x130A420")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x130A570", Offset = "0x130A570", VA = "0x130A570")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x130AA2C", Offset = "0x130AA2C", VA = "0x130AA2C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40013AE")]
		None = -1,
		[Token(Token = "0x40013AF")]
		Reserved,
		[Token(Token = "0x40013B0")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000395")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x130B4D8", Offset = "0x130B4D8", VA = "0x130B4D8")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x130B47C", Offset = "0x130B47C", VA = "0x130B47C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200056B")]
		public enum FadeState
		{
			[Token(Token = "0x4001D36")]
			Null,
			[Token(Token = "0x4001D37")]
			FadingIn,
			[Token(Token = "0x4001D38")]
			FadingOut,
			[Token(Token = "0x4001D39")]
			Ducking
		}

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0290", Offset = "0x9E0290")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000367")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002339")]
				[Address(RVA = "0x130C1A0", Offset = "0x130C1A0", VA = "0x130C1A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000368")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600233B")]
				[Address(RVA = "0x130C210", Offset = "0x130C210", VA = "0x130C210", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002336")]
			[Address(RVA = "0x130BDDC", Offset = "0x130BDDC", VA = "0x130BDDC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6002337")]
			[Address(RVA = "0x130C088", Offset = "0x130C088", VA = "0x130C088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002338")]
			[Address(RVA = "0x130C08C", Offset = "0x130C08C", VA = "0x130C08C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600233A")]
			[Address(RVA = "0x130C1A8", Offset = "0x130C1A8", VA = "0x130C1A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E02A0", Offset = "0x9E02A0")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600233F")]
				[Address(RVA = "0x130C70C", Offset = "0x130C70C", VA = "0x130C70C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002341")]
				[Address(RVA = "0x130C77C", Offset = "0x130C77C", VA = "0x130C77C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600233C")]
			[Address(RVA = "0x130C018", Offset = "0x130C018", VA = "0x130C018")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0x130C568", Offset = "0x130C568", VA = "0x130C568", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600233E")]
			[Address(RVA = "0x130C56C", Offset = "0x130C56C", VA = "0x130C56C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002340")]
			[Address(RVA = "0x130C714", Offset = "0x130C714", VA = "0x130C714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E02B0", Offset = "0x9E02B0")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002345")]
				[Address(RVA = "0x130C4F0", Offset = "0x130C4F0", VA = "0x130C4F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002347")]
				[Address(RVA = "0x130C560", Offset = "0x130C560", VA = "0x130C560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002342")]
			[Address(RVA = "0x130C044", Offset = "0x130C044", VA = "0x130C044")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002343")]
			[Address(RVA = "0x130C218", Offset = "0x130C218", VA = "0x130C218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002344")]
			[Address(RVA = "0x130C21C", Offset = "0x130C21C", VA = "0x130C21C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002346")]
			[Address(RVA = "0x130C4F8", Offset = "0x130C4F8", VA = "0x130C4F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000237")]
		public float volume
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x13095A8", Offset = "0x13095A8", VA = "0x13095A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x130B578", Offset = "0x130B578", VA = "0x130B578")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public float pitch
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x130B5B8", Offset = "0x130B5B8", VA = "0x130B5B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x130B5E8", Offset = "0x130B5E8", VA = "0x130B5E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public AudioClip clip
		{
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x130B628", Offset = "0x130B628", VA = "0x130B628")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x130B658", Offset = "0x130B658", VA = "0x130B658")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public float time
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x130B690", Offset = "0x130B690", VA = "0x130B690")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x1306C30", Offset = "0x1306C30", VA = "0x1306C30")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public float length
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x130B6C0", Offset = "0x130B6C0", VA = "0x130B6C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023C")]
		public bool loop
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x130B798", Offset = "0x130B798", VA = "0x130B798")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x130B7C8", Offset = "0x130B7C8", VA = "0x130B7C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public bool mute
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x130B800", Offset = "0x130B800", VA = "0x130B800")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x130B830", Offset = "0x130B830", VA = "0x130B830")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x130B868", Offset = "0x130B868", VA = "0x130B868")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x130B898", Offset = "0x130B898", VA = "0x130B898")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public bool isPlaying
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x130B8D0", Offset = "0x130B8D0", VA = "0x130B8D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x130B900", Offset = "0x130B900", VA = "0x130B900")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x1309594", Offset = "0x1309594", VA = "0x1309594")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x1309808", Offset = "0x1309808", VA = "0x1309808")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x1309928", Offset = "0x1309928", VA = "0x1309928")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x1305BD4", Offset = "0x1305BD4", VA = "0x1305BD4")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x1305BCC", Offset = "0x1305BCC", VA = "0x1305BCC")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x130A294", Offset = "0x130A294", VA = "0x130A294")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x1305DDC", Offset = "0x1305DDC", VA = "0x1305DDC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x130BB38", Offset = "0x130BB38", VA = "0x130BB38")]
		public void Play()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x130BBA0", Offset = "0x130BBA0", VA = "0x130BBA0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x1305BDC", Offset = "0x1305BDC", VA = "0x1305BDC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x130BC70", Offset = "0x130BC70", VA = "0x130BC70")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x1309CC8", Offset = "0x1309CC8", VA = "0x1309CC8")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x1309F44", Offset = "0x1309F44", VA = "0x1309F44")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x13061D0", Offset = "0x13061D0", VA = "0x13061D0")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x130BCE4", Offset = "0x130BCE4", VA = "0x130BCE4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x130BD10", Offset = "0x130BD10", VA = "0x130BD10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC664", Offset = "0x9EC664")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x130BE08", Offset = "0x130BE08", VA = "0x130BE08")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x13066B8", Offset = "0x13066B8", VA = "0x13066B8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x130673C", Offset = "0x130673C", VA = "0x130673C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x1306534", Offset = "0x1306534", VA = "0x1306534")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x13062F8", Offset = "0x13062F8", VA = "0x13062F8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x130BE80", Offset = "0x130BE80", VA = "0x130BE80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC6C8", Offset = "0x9EC6C8")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x130BF2C", Offset = "0x130BF2C", VA = "0x130BF2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC72C", Offset = "0x9EC72C")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x130C070", Offset = "0x130C070", VA = "0x130C070")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40013C7")]
		Random,
		[Token(Token = "0x40013C8")]
		Sequential
	}
	[Token(Token = "0x2000399")]
	public enum FreqHint
	{
		[Token(Token = "0x40013CA")]
		None,
		[Token(Token = "0x40013CB")]
		Wide,
		[Token(Token = "0x40013CC")]
		Narrow
	}
	[Token(Token = "0x200039A")]
	public enum SoundPriority
	{
		[Token(Token = "0x40013CE")]
		VeryLow = -2,
		[Token(Token = "0x40013CF")]
		Low,
		[Token(Token = "0x40013D0")]
		Default,
		[Token(Token = "0x40013D1")]
		High,
		[Token(Token = "0x40013D2")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200039B")]
	public class OSPProps
	{
		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7A18", Offset = "0x9E7A18")]
		public bool enableSpatialization;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7A50", Offset = "0x9E7A50")]
		public bool useFastOverride;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7A88", Offset = "0x9E7A88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E7A88", Offset = "0x9E7A88")]
		public float gain;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7ADC", Offset = "0x9E7ADC")]
		public bool enableInvSquare;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7B14", Offset = "0x9E7B14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E7B14", Offset = "0x9E7B14")]
		public float volumetric;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7B6C", Offset = "0x9E7B6C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E7B6C", Offset = "0x9E7B6C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x130B4E8", Offset = "0x130B4E8", VA = "0x130B4E8")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039C")]
	public class SoundFX
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7BCC", Offset = "0x9E7BCC")]
		public string name;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7C04", Offset = "0x9E7C04")]
		public SoundFXNext playback;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7C3C", Offset = "0x9E7C3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E7C3C", Offset = "0x9E7C3C")]
		public float volume;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7C90", Offset = "0x9E7C90")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E7C90", Offset = "0x9E7C90")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7CEC", Offset = "0x9E7CEC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E7CEC", Offset = "0x9E7CEC")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7D4C", Offset = "0x9E7D4C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7D84", Offset = "0x9E7D84")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7DBC", Offset = "0x9E7DBC")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7DF4", Offset = "0x9E7DF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E7DF4", Offset = "0x9E7DF4")]
		public float spread;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7E4C", Offset = "0x9E7E4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E7E4C", Offset = "0x9E7E4C")]
		public float pctChanceToPlay;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7EA0", Offset = "0x9E7EA0")]
		public SoundPriority priority;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7ED8", Offset = "0x9E7ED8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E7ED8", Offset = "0x9E7ED8")]
		public Vector2 delay;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7F34", Offset = "0x9E7F34")]
		public bool looping;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7F6C", Offset = "0x9E7F6C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000240")]
		public int Length
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0x130C784", Offset = "0x130C784", VA = "0x130C784")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000241")]
		public bool IsValid
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x130C7B0", Offset = "0x130C7B0", VA = "0x130C7B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000242")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0x130958C", Offset = "0x130958C", VA = "0x130958C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x13050E4", Offset = "0x13050E4", VA = "0x13050E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0x1309490", Offset = "0x1309490", VA = "0x1309490")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000244")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x13094C4", Offset = "0x13094C4", VA = "0x13094C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x130AD64", Offset = "0x130AD64", VA = "0x130AD64")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x1309318", Offset = "0x1309318", VA = "0x1309318")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x13094E8", Offset = "0x13094E8", VA = "0x13094E8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x130949C", Offset = "0x130949C", VA = "0x130949C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x130C890", Offset = "0x130C890", VA = "0x130C890")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x13094DC", Offset = "0x13094DC", VA = "0x13094DC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x130C9E0", Offset = "0x130C9E0", VA = "0x130C9E0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x130CABC", Offset = "0x130CABC", VA = "0x130CABC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x130CBD0", Offset = "0x130CBD0", VA = "0x130CBD0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x130CC5C", Offset = "0x130CC5C", VA = "0x130CC5C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x130CCF0", Offset = "0x130CCF0", VA = "0x130CCF0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x130CD7C", Offset = "0x130CD7C", VA = "0x130CD7C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x130CE08", Offset = "0x130CE08", VA = "0x130CE08")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039D")]
	public class SoundFXRef
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000245")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0x130CE80", Offset = "0x130CE80", VA = "0x130CE80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public string name
		{
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0x130CF74", Offset = "0x130CF74", VA = "0x130CF74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x130CF7C", Offset = "0x130CF7C", VA = "0x130CF7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public int Length
		{
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x130CF84", Offset = "0x130CF84", VA = "0x130CF84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000248")]
		public bool IsValid
		{
			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0x130CFD4", Offset = "0x130CFD4", VA = "0x130CFD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x130CEB0", Offset = "0x130CEB0", VA = "0x130CEB0")]
		private void Init()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x130D014", Offset = "0x130D014", VA = "0x130D014")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x130D054", Offset = "0x130D054", VA = "0x130D054")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x130D09C", Offset = "0x130D09C", VA = "0x130D09C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x1302E30", Offset = "0x1302E30", VA = "0x1302E30")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x130D0EC", Offset = "0x130D0EC", VA = "0x130D0EC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x130D134", Offset = "0x130D134", VA = "0x130D134")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x130D18C", Offset = "0x130D18C", VA = "0x130D18C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x130D1CC", Offset = "0x130D1CC", VA = "0x130D1CC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x130D214", Offset = "0x130D214", VA = "0x130D214")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x130D254", Offset = "0x130D254", VA = "0x130D254")]
		public SoundFXRef()
		{
		}
	}
}
namespace Halfbrick.FNVR.Stats
{
	[Token(Token = "0x200039E")]
	public enum StatsId
	{
		[Token(Token = "0x40013F0")]
		None,
		[Token(Token = "0x40013F1")]
		BestCombo,
		[Token(Token = "0x40013F2")]
		BestModeClassic,
		[Token(Token = "0x40013F3")]
		BestModeArcade,
		[Token(Token = "0x40013F4")]
		BestModeZen,
		[Token(Token = "0x40013F5")]
		BestModeSurvival,
		[Token(Token = "0x40013F6")]
		SlicedBomb,
		[Token(Token = "0x40013F7")]
		SlicedFruit,
		[Token(Token = "0x40013F8")]
		SlicedFruitFreezeMode,
		[Token(Token = "0x40013F9")]
		SlicedFruitPineapple,
		[Token(Token = "0x40013FA")]
		SlicedFruitWatermelonWithSongWord,
		[Token(Token = "0x40013FB")]
		SlicedFruitStrawberryWithButterFlyBlade,
		[Token(Token = "0x40013FC")]
		SkewerdFruit,
		[Token(Token = "0x40013FD")]
		DroppedFruit,
		[Token(Token = "0x40013FE")]
		DestroyedEnemeyBasket,
		[Token(Token = "0x40013FF")]
		PlayedChristmas,
		[Token(Token = "0x4001400")]
		PlayedHalloween
	}
	[Token(Token = "0x200039F")]
	public static class StatsUtility
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<StatsId, string> m_statIdNameLookup;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xBDD3C0", Offset = "0xBDD3C0", VA = "0xBDD3C0")]
		public static StatsId GetBestGameModeStatId(Halfbrick.FNVR.SceneManagement.SceneManager.Scene gameMode)
		{
			return default(StatsId);
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xBE89EC", Offset = "0xBE89EC", VA = "0xBE89EC")]
		public static string GetStatName(StatsId id)
		{
			return null;
		}
	}
}
namespace Halfbrick.FNVR.System
{
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9DF648", Offset = "0x9DF648")]
	public class GameConfig : ScriptableObject
	{
		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E02C0", Offset = "0x9E02C0")]
		private sealed class <GetGameConfigAsync>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<GameConfig> callback;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<GameConfig> <asyncOp>5__2;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600234B")]
				[Address(RVA = "0xBEC130", Offset = "0xBEC130", VA = "0xBEC130", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600234D")]
				[Address(RVA = "0xBEC1A0", Offset = "0xBEC1A0", VA = "0xBEC1A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002348")]
			[Address(RVA = "0xBEBF40", Offset = "0xBEBF40", VA = "0xBEBF40")]
			[DebuggerHidden]
			public <GetGameConfigAsync>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002349")]
			[Address(RVA = "0xBEBF74", Offset = "0xBEBF74", VA = "0xBEBF74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600234A")]
			[Address(RVA = "0xBEBF78", Offset = "0xBEBF78", VA = "0xBEBF78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600234C")]
			[Address(RVA = "0xBEC138", Offset = "0xBEC138", VA = "0xBEC138", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0x9E7FA4", Offset = "0x9E7FA4")]
		[SerializeField]
		private string m_sku;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] m_shaderDisabledFeatures;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_maxShaderLOD;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameConfig m_config;

		[Token(Token = "0x17000249")]
		public string SKU
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xBE980C", Offset = "0xBE980C", VA = "0xBE980C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0xBEBC90", Offset = "0xBEBC90", VA = "0xBEBC90")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public string[] ShaderDisabledFeatures
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xBEBC98", Offset = "0xBEBC98", VA = "0xBEBC98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xBEBCA0", Offset = "0xBEBCA0", VA = "0xBEBCA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public int MaxShaderLOD
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0xBE896C", Offset = "0xBE896C", VA = "0xBE896C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xBEBCA8", Offset = "0xBEBCA8", VA = "0xBEBCA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public static string GameConfigLocation
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xBEBCB0", Offset = "0xBEBCB0", VA = "0xBEBCB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xBEBCF8", Offset = "0xBEBCF8", VA = "0xBEBCF8")]
		public void SetupShaderFeatures()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xBEBECC", Offset = "0xBEBECC", VA = "0xBEBECC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC790", Offset = "0x9EC790")]
		public static IEnumerator GetGameConfigAsync(Action<GameConfig> callback)
		{
			return null;
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xBEBF6C", Offset = "0xBEBF6C", VA = "0xBEBF6C")]
		public GameConfig()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class GameService : MonoBehaviour
	{
		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E02D0", Offset = "0x9E02D0")]
		private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameService <>4__this;

			[Token(Token = "0x1700036F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002351")]
				[Address(RVA = "0xBEC5BC", Offset = "0xBEC5BC", VA = "0xBEC5BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000370")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002353")]
				[Address(RVA = "0xBEC62C", Offset = "0xBEC62C", VA = "0xBEC62C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600234E")]
			[Address(RVA = "0xBEC3F8", Offset = "0xBEC3F8", VA = "0xBEC3F8")]
			[DebuggerHidden]
			public <Start>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0xBEC438", Offset = "0xBEC438", VA = "0xBEC438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002350")]
			[Address(RVA = "0xBEC43C", Offset = "0xBEC43C", VA = "0xBEC43C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002352")]
			[Address(RVA = "0xBEC5C4", Offset = "0xBEC5C4", VA = "0xBEC5C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001406")]
		private const string GameObjectName = "GameService";

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8010", Offset = "0x9E8010")]
		private bool <IsInitialised>k__BackingField;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8020", Offset = "0x9E8020")]
		private GameConfig <GameConfig>k__BackingField;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8030", Offset = "0x9E8030")]
		private InventoryService <InventoryService>k__BackingField;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8040", Offset = "0x9E8040")]
		private TimeService <TimeService>k__BackingField;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameService s_instance;

		[Token(Token = "0x1700024D")]
		public bool IsInitialised
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0xBE73EC", Offset = "0xBE73EC", VA = "0xBE73EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC7F4", Offset = "0x9EC7F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xBEC1A8", Offset = "0xBEC1A8", VA = "0xBEC1A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC804", Offset = "0x9EC804")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public GameConfig GameConfig
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xBE8964", Offset = "0xBE8964", VA = "0xBE8964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC814", Offset = "0x9EC814")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xBEC1B4", Offset = "0xBEC1B4", VA = "0xBEC1B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC824", Offset = "0x9EC824")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public InventoryService InventoryService
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xBE5B94", Offset = "0xBE5B94", VA = "0xBE5B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC834", Offset = "0x9EC834")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xBEC1BC", Offset = "0xBEC1BC", VA = "0xBEC1BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC844", Offset = "0x9EC844")]
			private set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public TimeService TimeService
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xBEC1C4", Offset = "0xBEC1C4", VA = "0xBEC1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC854", Offset = "0x9EC854")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xBEC1CC", Offset = "0xBEC1CC", VA = "0xBEC1CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC864", Offset = "0x9EC864")]
			private set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public static GameService Instance
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xBE52C8", Offset = "0xBE52C8", VA = "0xBE52C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xBEC1D4", Offset = "0xBEC1D4", VA = "0xBEC1D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xBEC240", Offset = "0xBEC240", VA = "0xBEC240")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xBEC384", Offset = "0xBEC384", VA = "0xBEC384")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC874", Offset = "0x9EC874")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xBEC424", Offset = "0xBEC424", VA = "0xBEC424")]
		public GameService()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xBEC430", Offset = "0xBEC430", VA = "0xBEC430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC8D8", Offset = "0x9EC8D8")]
		private void <Start>b__22_0(GameConfig config)
		{
		}
	}
}
namespace Halfbrick.FNVR.System.TimeSystem
{
	[Token(Token = "0x20003A2")]
	public class TimeService : MonoBehaviour
	{
		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E02E0", Offset = "0x9E02E0")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityWebRequest www;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TimeService <>4__this;

			[Token(Token = "0x6002354")]
			[Address(RVA = "0xBEDAA0", Offset = "0xBEDAA0", VA = "0xBEDAA0")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002355")]
			[Address(RVA = "0xBEDAC8", Offset = "0xBEDAC8", VA = "0xBEDAC8")]
			internal void <RequestServerTimeUpdate>b__0(AsyncOperation ops)
			{
			}
		}

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_lastServerTimeUpdateRequest;

		[Token(Token = "0x400140D")]
		private const float m_serverTimeUpdateFrequency = 5f;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_lastServerTimeUpdate;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8050", Offset = "0x9E8050")]
		private bool <HasValidServerTime>k__BackingField;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8060", Offset = "0x9E8060")]
		private long <ServerTimeStampUTC>k__BackingField;

		[Token(Token = "0x17000252")]
		public bool HasValidServerTime
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xBED878", Offset = "0xBED878", VA = "0xBED878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC8E8", Offset = "0x9EC8E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xBED880", Offset = "0xBED880", VA = "0xBED880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC8F8", Offset = "0x9EC8F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public long ServerTimeStampUTC
		{
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xBED88C", Offset = "0xBED88C", VA = "0xBED88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC908", Offset = "0x9EC908")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0xBED894", Offset = "0xBED894", VA = "0xBED894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC918", Offset = "0x9EC918")]
			private set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public DateTime ServerDateTimeUTC
		{
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0xBED89C", Offset = "0xBED89C", VA = "0xBED89C")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xBED934", Offset = "0xBED934", VA = "0xBED934")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xBED93C", Offset = "0xBED93C", VA = "0xBED93C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xBEDA9C", Offset = "0xBEDA9C", VA = "0xBEDA9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xBED940", Offset = "0xBED940", VA = "0xBED940")]
		private void RequestServerTimeUpdate()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xBEDAA8", Offset = "0xBEDAA8", VA = "0xBEDAA8")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xBEDAB4", Offset = "0xBEDAB4", VA = "0xBEDAB4")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xBEDAC0", Offset = "0xBEDAC0", VA = "0xBEDAC0")]
		public TimeService()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Threading
{
	[Token(Token = "0x20003A3")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E02F0", Offset = "0x9E02F0")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x6002356")]
			[Address(RVA = "0xBED604", Offset = "0xBED604", VA = "0xBED604")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002357")]
			[Address(RVA = "0xBED75C", Offset = "0xBED75C", VA = "0xBED75C")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0300", Offset = "0x9E0300")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x17000371")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600235B")]
				[Address(RVA = "0xBED800", Offset = "0xBED800", VA = "0xBED800", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000372")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600235D")]
				[Address(RVA = "0xBED870", Offset = "0xBED870", VA = "0xBED870", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002358")]
			[Address(RVA = "0xBED6A8", Offset = "0xBED6A8", VA = "0xBED6A8")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0xBED790", Offset = "0xBED790", VA = "0xBED790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600235A")]
			[Address(RVA = "0xBED794", Offset = "0xBED794", VA = "0xBED794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600235C")]
			[Address(RVA = "0xBED808", Offset = "0xBED808", VA = "0xBED808", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0310", Offset = "0x9E0310")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002361")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002363")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600235E")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600235F")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002360")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002362")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0320", Offset = "0x9E0320")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x17000375")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002367")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000376")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002369")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002364")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002365")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002366")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002368")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0330", Offset = "0x9E0330")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4001D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600236D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600236F")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600236A")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600236B")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600236C")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600236E")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0340", Offset = "0x9E0340")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000379")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002373")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002375")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002370")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002371")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002372")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002374")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> m_actions;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher m_instance;

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xBECF04", Offset = "0xBECF04", VA = "0xBECF04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xBED018", Offset = "0xBED018", VA = "0xBED018")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xBED2E0", Offset = "0xBED2E0", VA = "0xBED2E0")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xBED3E8", Offset = "0xBED3E8", VA = "0xBED3E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xBED450", Offset = "0xBED450", VA = "0xBED450")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xBED60C", Offset = "0xBED60C", VA = "0xBED60C")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001D16")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001D17")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6001D18")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6001D19")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xBED634", Offset = "0xBED634", VA = "0xBED634")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC928", Offset = "0x9EC928")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6001D1B")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC98C", Offset = "0x9EC98C")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6001D1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC9F0", Offset = "0x9EC9F0")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6001D1D")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECA54", Offset = "0x9ECA54")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6001D1E")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECAB8", Offset = "0x9ECAB8")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xBED6D4", Offset = "0xBED6D4", VA = "0xBED6D4")]
		public MainThreadDispatcher()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Inventory
{
	[Token(Token = "0x20003A4")]
	public class InventoryService : MonoBehaviour
	{
		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0350", Offset = "0x9E0350")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InventoryService <>4__this;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperationHandle<IList<BladeConfig>> <asyncOperation>5__2;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002379")]
				[Address(RVA = "0xBECE8C", Offset = "0xBECE8C", VA = "0xBECE8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600237B")]
				[Address(RVA = "0xBECEFC", Offset = "0xBECEFC", VA = "0xBECEFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002376")]
			[Address(RVA = "0xBEC8FC", Offset = "0xBEC8FC", VA = "0xBEC8FC")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002377")]
			[Address(RVA = "0xBECC54", Offset = "0xBECC54", VA = "0xBECC54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002378")]
			[Address(RVA = "0xBECC58", Offset = "0xBECC58", VA = "0xBECC58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600237A")]
			[Address(RVA = "0xBECE94", Offset = "0xBECE94", VA = "0xBECE94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8070", Offset = "0x9E8070")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8080", Offset = "0x9E8080")]
		private BladeConfig[] <BladeConfigs>k__BackingField;

		[Token(Token = "0x17000255")]
		public bool IsReady
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xBE619C", Offset = "0xBE619C", VA = "0xBE619C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECB1C", Offset = "0x9ECB1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xBEC63C", Offset = "0xBEC63C", VA = "0xBEC63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECB2C", Offset = "0x9ECB2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public BladeConfig[] BladeConfigs
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xBE5B9C", Offset = "0xBE5B9C", VA = "0xBE5B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECB3C", Offset = "0x9ECB3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D24")]
			[Address(RVA = "0xBEC648", Offset = "0xBEC648", VA = "0xBEC648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECB4C", Offset = "0x9ECB4C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xBEC650", Offset = "0xBEC650", VA = "0xBEC650")]
		public BladeConfig FindBladeConfig(ulong id)
		{
			return null;
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xBEC6E0", Offset = "0xBEC6E0", VA = "0xBEC6E0")]
		public bool IsBladeAvailable(BladeConfig blade)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xBEC70C", Offset = "0xBEC70C", VA = "0xBEC70C")]
		public bool HasBladeBeenSeen(BladeConfig blade)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xBEC7E4", Offset = "0xBEC7E4", VA = "0xBEC7E4")]
		public void SetBladeAsSeen(BladeConfig blade)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xBEC880", Offset = "0xBEC880", VA = "0xBEC880")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xBEC888", Offset = "0xBEC888", VA = "0xBEC888")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECB5C", Offset = "0x9ECB5C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xBEC928", Offset = "0xBEC928", VA = "0xBEC928")]
		public InventoryService()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xBEC930", Offset = "0xBEC930", VA = "0xBEC930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECBC0", Offset = "0x9ECBC0")]
		private void <Start>b__13_0(AsyncOperationHandle<IList<BladeConfig>> result)
		{
		}
	}
}
namespace Halfbrick.FNVR.System.VR
{
	[Token(Token = "0x20003A5")]
	[ExecuteAlways]
	public class HandSkeleton : MonoBehaviour
	{
		[Token(Token = "0x2000579")]
		public enum BlendMode
		{
			[Token(Token = "0x4001D7E")]
			StaticClenched,
			[Token(Token = "0x4001D7F")]
			StaticRelaxed,
			[Token(Token = "0x4001D80")]
			Auto,
			[Token(Token = "0x4001D81")]
			Manual
		}

		[Token(Token = "0x200057A")]
		public struct TransformReference
		{
			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8D0C", Offset = "0x9E8D0C")]
			private HandPose.BoneType <Type>k__BackingField;

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8D1C", Offset = "0x9E8D1C")]
			private Transform <Transform>k__BackingField;

			[Token(Token = "0x1700037D")]
			public HandPose.BoneType Type
			{
				[Token(Token = "0x600237C")]
				[Address(RVA = "0xA8A0FC", Offset = "0xA8A0FC", VA = "0xA8A0FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF51C", Offset = "0x9EF51C")]
				get
				{
					return default(HandPose.BoneType);
				}
				[Token(Token = "0x600237D")]
				[Address(RVA = "0xA8A104", Offset = "0xA8A104", VA = "0xA8A104")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF52C", Offset = "0x9EF52C")]
				set
				{
				}
			}

			[Token(Token = "0x1700037E")]
			public Transform Transform
			{
				[Token(Token = "0x600237E")]
				[Address(RVA = "0xA8A10C", Offset = "0xA8A10C", VA = "0xA8A10C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF53C", Offset = "0x9EF53C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600237F")]
				[Address(RVA = "0xA8A114", Offset = "0xA8A114", VA = "0xA8A114")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF54C", Offset = "0x9EF54C")]
				set
				{
				}
			}
		}

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandPose m_clenchedPose;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandPose m_relaxedPose;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlendMode m_thumbBlend;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BlendMode m_indexBlend;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlendMode m_middleBlend;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlendMode m_ringBlend;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BlendMode m_pinkyBlend;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8090", Offset = "0x9E8090")]
		public float m_wristBlendFactor;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E80A8", Offset = "0x9E80A8")]
		public float m_manualBlendFactor;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Hand.Type m_handType;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_rootBone;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly float[] m_handBlendFactors;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E80C0", Offset = "0x9E80C0")]
		private bool <IsVRHandActive>k__BackingField;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E80D0", Offset = "0x9E80D0")]
		private TransformReference[] <BoneTransforms>k__BackingField;

		[Token(Token = "0x17000257")]
		public bool IsVRHandActive
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xBEDBCC", Offset = "0xBEDBCC", VA = "0xBEDBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECBD0", Offset = "0x9ECBD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0xBEDBD4", Offset = "0xBEDBD4", VA = "0xBEDBD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECBE0", Offset = "0x9ECBE0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public TransformReference[] BoneTransforms
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xBEDBE0", Offset = "0xBEDBE0", VA = "0xBEDBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECBF0", Offset = "0x9ECBF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0xBEDBE8", Offset = "0xBEDBE8", VA = "0xBEDBE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC00", Offset = "0x9ECC00")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xBEDBF0", Offset = "0xBEDBF0", VA = "0xBEDBF0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xBEDCC4", Offset = "0xBEDCC4", VA = "0xBEDCC4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xBEEBA0", Offset = "0xBEEBA0", VA = "0xBEEBA0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xBEE1D0", Offset = "0xBEE1D0", VA = "0xBEE1D0")]
		private Hand.FingerCurls GetFingerCurls()
		{
			return null;
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xBEE3A0", Offset = "0xBEE3A0", VA = "0xBEE3A0")]
		private void BlendPoses()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xBEDBF8", Offset = "0xBEDBF8", VA = "0xBEDBF8")]
		private void GenerateTransforms()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xBEEBAC", Offset = "0xBEEBAC", VA = "0xBEEBAC")]
		private int CountBones(Transform bone)
		{
			return default(int);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xBEEC5C", Offset = "0xBEEC5C", VA = "0xBEEC5C")]
		private void AssignBones(Transform bone, TransformReference[] boneTransforms, ref int currentIndex)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xBEEF08", Offset = "0xBEEF08", VA = "0xBEEF08")]
		public HandSkeleton()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Hands
{
	[Token(Token = "0x20003A6")]
	public class HandPose : ScriptableObject
	{
		[Token(Token = "0x200057B")]
		public enum BoneType
		{
			[Token(Token = "0x4001D85")]
			Wrist,
			[Token(Token = "0x4001D86")]
			Thumb,
			[Token(Token = "0x4001D87")]
			Index,
			[Token(Token = "0x4001D88")]
			Middle,
			[Token(Token = "0x4001D89")]
			Ring,
			[Token(Token = "0x4001D8A")]
			Pinky
		}

		[Serializable]
		[Token(Token = "0x200057C")]
		public struct BoneTransform
		{
			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BoneType m_type;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 m_positions;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion m_rotations;
		}

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoneTransform[] m_boneTransforms;

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xBEC634", Offset = "0xBEC634", VA = "0xBEC634")]
		public HandPose()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.FX
{
	[Token(Token = "0x20003A7")]
	public class EnvironmentAwareParticleEmitterControl : ParticleEmitterControl
	{
		[Token(Token = "0x200057D")]
		public enum DayNightFilter
		{
			[Token(Token = "0x4001D8F")]
			Any,
			[Token(Token = "0x4001D90")]
			Day,
			[Token(Token = "0x4001D91")]
			Night
		}

		[Token(Token = "0x200057E")]
		public enum WeatherFilter
		{
			[Token(Token = "0x4001D93")]
			Any,
			[Token(Token = "0x4001D94")]
			Active,
			[Token(Token = "0x4001D95")]
			Deactive
		}

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E80E0", Offset = "0x9E80E0")]
		public DayNightFilter m_dayNight;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WeatherFilter m_snow;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WeatherFilter m_rain;

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xBEB5A0", Offset = "0xBEB5A0", VA = "0xBEB5A0", Slot = "4")]
		public override void StartEmission()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xBEB858", Offset = "0xBEB858", VA = "0xBEB858")]
		public EnvironmentAwareParticleEmitterControl()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class EnvironmentAwareSoundControl : MonoBehaviour
	{
		[Token(Token = "0x200057F")]
		public enum DayNightFilter
		{
			[Token(Token = "0x4001D97")]
			Any,
			[Token(Token = "0x4001D98")]
			Day,
			[Token(Token = "0x4001D99")]
			Night
		}

		[Token(Token = "0x2000580")]
		public enum WeatherFilter
		{
			[Token(Token = "0x4001D9B")]
			Any,
			[Token(Token = "0x4001D9C")]
			Active,
			[Token(Token = "0x4001D9D")]
			Deactive
		}

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E8118", Offset = "0x9E8118")]
		public DayNightFilter m_dayNight;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public WeatherFilter m_snow;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeatherFilter m_rain;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioPlayer m_audioPlayer;

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xBEB868", Offset = "0xBEB868", VA = "0xBEB868")]
		public void PlaySound(float fadeInSeconds = 0f)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xBEBB18", Offset = "0xBEBB18", VA = "0xBEBB18")]
		public void StopSound(float fadeOutSeconds = 0f)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xBEBB5C", Offset = "0xBEBB5C", VA = "0xBEBB5C", Slot = "4")]
		public virtual void StopSoundAndDeactivate(float fadeOutSeconds = 0f)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xBEBBA0", Offset = "0xBEBBA0", VA = "0xBEBBA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xBEBBF8", Offset = "0xBEBBF8", VA = "0xBEBBF8")]
		public EnvironmentAwareSoundControl()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class ParticleEmitterControl : MonoBehaviour
	{
		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem m_system;

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xBEBC00", Offset = "0xBEBC00", VA = "0xBEBC00")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xBEB824", Offset = "0xBEB824", VA = "0xBEB824", Slot = "4")]
		public virtual void StartEmission()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xBEBC58", Offset = "0xBEBC58", VA = "0xBEBC58", Slot = "5")]
		public virtual void StopEmission()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xBEB860", Offset = "0xBEB860", VA = "0xBEB860")]
		public ParticleEmitterControl()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Environment
{
	[Token(Token = "0x20003AA")]
	[ExecuteAlways]
	public class DynamicEnvironmentManager : EnvironmentManager
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AzureSkyController m_skyController;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AzureSkyProfile m_snowWeatherProfile;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private WeatherBlender m_weatherBlender;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_snowMeltSpeed;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8190", Offset = "0x9E8190")]
		[SerializeField]
		private float m_drySpeed;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_currentSnowOverrideFactor;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_snowAmount;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_wetness;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_isDay;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator m_weatherAnimator;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E81D0", Offset = "0x9E81D0")]
		[SerializeField]
		private float[] m_startupTimes;

		[Token(Token = "0x17000259")]
		public override bool IsDay
		{
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0xBEA0C8", Offset = "0xBEA0C8", VA = "0xBEA0C8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025A")]
		public override bool IsSnowing
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xBEA0D0", Offset = "0xBEA0D0", VA = "0xBEA0D0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025B")]
		public override bool IsRaining
		{
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0xBEA104", Offset = "0xBEA104", VA = "0xBEA104", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025C")]
		public override float Wetness
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xBEA138", Offset = "0xBEA138", VA = "0xBEA138", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025D")]
		public override float SnowAmount
		{
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xBEA140", Offset = "0xBEA140", VA = "0xBEA140", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xBE6D54", Offset = "0xBE6D54", VA = "0xBE6D54")]
		internal void ForceWeather(string weatherState)
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xBE6C74", Offset = "0xBE6C74", VA = "0xBE6C74")]
		internal void SeyDayNightMode(bool day)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xBEA148", Offset = "0xBEA148", VA = "0xBEA148", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xBEA36C", Offset = "0xBEA36C", VA = "0xBEA36C", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xBEA75C", Offset = "0xBEA75C", VA = "0xBEA75C")]
		public DynamicEnvironmentManager()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class EnvironmentChangeTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent m_onDayActivated;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onNightActivated;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_previousDayNightState;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onSnowActivated;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent m_onSnowDeactivated;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_previousSnowState;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent m_onRainActivated;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onRainDeactivated;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_previousRainState;

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xBEA7C0", Offset = "0xBEA7C0", VA = "0xBEA7C0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xBEAA1C", Offset = "0xBEAA1C", VA = "0xBEAA1C")]
		public EnvironmentChangeTrigger()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public abstract class EnvironmentManager : MonoBehaviour
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8274", Offset = "0x9E8274")]
		[SerializeField]
		protected float m_snowOverrideFactor;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E82B4", Offset = "0x9E82B4")]
		[SerializeField]
		private float m_maxWetnessSpecular;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_currentSnowAmount;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_currentWetness;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_currentDayNightState;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E82F4", Offset = "0x9E82F4")]
		private static EnvironmentManager <Instance>k__BackingField;

		[Token(Token = "0x1700025E")]
		public static EnvironmentManager Instance
		{
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xBD81D0", Offset = "0xBD81D0", VA = "0xBD81D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC10", Offset = "0x9ECC10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xBEAA34", Offset = "0xBEAA34", VA = "0xBEAA34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC20", Offset = "0x9ECC20")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public float SnowOverrideFactor
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xBEAA88", Offset = "0xBEAA88", VA = "0xBEAA88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xBD8220", Offset = "0xBD8220", VA = "0xBD8220")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public abstract bool IsDay
		{
			[Token(Token = "0x6001D56")]
			get;
		}

		[Token(Token = "0x17000261")]
		public abstract bool IsSnowing
		{
			[Token(Token = "0x6001D57")]
			get;
		}

		[Token(Token = "0x17000262")]
		public abstract bool IsRaining
		{
			[Token(Token = "0x6001D58")]
			get;
		}

		[Token(Token = "0x17000263")]
		public abstract float Wetness
		{
			[Token(Token = "0x6001D59")]
			get;
		}

		[Token(Token = "0x17000264")]
		public abstract float SnowAmount
		{
			[Token(Token = "0x6001D5A")]
			get;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xBEA248", Offset = "0xBEA248", VA = "0xBEA248", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xBEA600", Offset = "0xBEA600", VA = "0xBEA600", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xBEA79C", Offset = "0xBEA79C", VA = "0xBEA79C")]
		protected EnvironmentManager()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	[ExecuteAlways]
	public class StaticEnvironmentManager : EnvironmentManager
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_isDay;

		[Token(Token = "0x17000265")]
		public override bool IsDay
		{
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xBEAA90", Offset = "0xBEAA90", VA = "0xBEAA90", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000266")]
		public override bool IsSnowing
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0xBEAA98", Offset = "0xBEAA98", VA = "0xBEAA98", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000267")]
		public override bool IsRaining
		{
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xBEAABC", Offset = "0xBEAABC", VA = "0xBEAABC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000268")]
		public override float Wetness
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xBEAAC4", Offset = "0xBEAAC4", VA = "0xBEAAC4", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000269")]
		public override float SnowAmount
		{
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0xBEAACC", Offset = "0xBEAACC", VA = "0xBEAACC", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xBEAAD4", Offset = "0xBEAAD4", VA = "0xBEAAD4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xBEAAD8", Offset = "0xBEAAD8", VA = "0xBEAAD8", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xBEAADC", Offset = "0xBEAADC", VA = "0xBEAADC")]
		public StaticEnvironmentManager()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class WeatherBlender : MonoBehaviour
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AzureSkyController m_skyController;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator m_weatherStates;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AzureSkyProfile m_overridingProfile;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_overridingProfileFactor;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WeightedDayProfile[] m_singleProfileBlend;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WeightedDayProfile[] m_dualProfileBlend;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WeightedDayProfile[] m_trippleProfileBlend;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8324", Offset = "0x9E8324")]
		private AzureSkyProfile <PrevProfile>k__BackingField;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8334", Offset = "0x9E8334")]
		private AzureSkyProfile <CurrentProfile>k__BackingField;

		[Token(Token = "0x1700026A")]
		public AzureSkyProfile PrevProfile
		{
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xBEAB00", Offset = "0xBEAB00", VA = "0xBEAB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC30", Offset = "0x9ECC30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xBEAB08", Offset = "0xBEAB08", VA = "0xBEAB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC40", Offset = "0x9ECC40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public AzureSkyProfile CurrentProfile
		{
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xBEAB10", Offset = "0xBEAB10", VA = "0xBEAB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC50", Offset = "0x9ECC50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xBEAB18", Offset = "0xBEAB18", VA = "0xBEAB18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC60", Offset = "0x9ECC60")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xBEA5E4", Offset = "0xBEA5E4", VA = "0xBEA5E4")]
		public void Override(AzureSkyProfile overridingProfile, float lerpFactor)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xBEAB20", Offset = "0xBEAB20", VA = "0xBEAB20")]
		public void SwitchProfile(AzureSkyProfile profile)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xBEAB2C", Offset = "0xBEAB2C", VA = "0xBEAB2C")]
		public void PlayThunderEffect()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xBEAB5C", Offset = "0xBEAB5C", VA = "0xBEAB5C")]
		private void BlendProfiles(AzureSkyProfile fromProfile, AzureSkyProfile toProfile, float lerpFactor)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xBEAF4C", Offset = "0xBEAF4C", VA = "0xBEAF4C")]
		private void UseProfile(AzureSkyProfile profile)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xBEB130", Offset = "0xBEB130", VA = "0xBEB130")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xBEB188", Offset = "0xBEB188", VA = "0xBEB188")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xBEB298", Offset = "0xBEB298", VA = "0xBEB298")]
		public WeatherBlender()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class WeatherState : StateMachineBehaviour
	{
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AzureSkyProfile m_profile;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_minDuration;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_maxDuration;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8344", Offset = "0x9E8344")]
		public float m_lightningChance;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_lightningDelay;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_lightningTimer;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_duration;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isExiting;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WeatherBlender m_blender;

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xBEB318", Offset = "0xBEB318", VA = "0xBEB318", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xBEB438", Offset = "0xBEB438", VA = "0xBEB438", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xBEB58C", Offset = "0xBEB58C", VA = "0xBEB58C", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xBEB590", Offset = "0xBEB590", VA = "0xBEB590")]
		public WeatherState()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.Blades
{
	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9DF6E8", Offset = "0x9DF6E8")]
	public class BladeConfig : AssetVariation<AssetReference, Blade>
	{
		[Serializable]
		[Token(Token = "0x2000581")]
		public class UnlockProcessor : SerializableCallback<bool>
		{
			[Token(Token = "0x6002380")]
			[Address(RVA = "0xBEA068", Offset = "0xBEA068", VA = "0xBEA068")]
			public UnlockProcessor()
			{
			}
		}

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0360", Offset = "0x9E0360")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject prefab;

			[Token(Token = "0x6002381")]
			[Address(RVA = "0xBE9C5C", Offset = "0xBE9C5C", VA = "0xBE9C5C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002382")]
			[Address(RVA = "0xBE9C64", Offset = "0xBE9C64", VA = "0xBE9C64")]
			internal void <LoadAssetAsyncInternal>b__0(GameObject result)
			{
			}
		}

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0370", Offset = "0x9E0370")]
		private sealed class <LoadAssetAsyncInternal>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetReference assetOverride;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Blade> callback;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass17_0 <>8__1;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002386")]
				[Address(RVA = "0xBE9FF0", Offset = "0xBE9FF0", VA = "0xBE9FF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002388")]
				[Address(RVA = "0xBEA060", Offset = "0xBEA060", VA = "0xBEA060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002383")]
			[Address(RVA = "0xBE9AB0", Offset = "0xBE9AB0", VA = "0xBE9AB0")]
			[DebuggerHidden]
			public <LoadAssetAsyncInternal>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002384")]
			[Address(RVA = "0xBE9EA8", Offset = "0xBE9EA8", VA = "0xBE9EA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002385")]
			[Address(RVA = "0xBE9EAC", Offset = "0xBE9EAC", VA = "0xBE9EAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0xBE9FF8", Offset = "0xBE9FF8", VA = "0xBE9FF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0380", Offset = "0x9E0380")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Blade bladePrefab;

			[Token(Token = "0x6002389")]
			[Address(RVA = "0xBE9C6C", Offset = "0xBE9C6C", VA = "0xBE9C6C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600238A")]
			[Address(RVA = "0xBE9C74", Offset = "0xBE9C74", VA = "0xBE9C74")]
			internal void <LoadAndInstantiateAssetAsync>b__0(Blade result)
			{
			}
		}

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0390", Offset = "0x9E0390")]
		private sealed class <LoadAndInstantiateAssetAsync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BladeConfig <>4__this;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MonoBehaviour owner;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass18_0 <>8__1;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Blade> callback;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600238E")]
				[Address(RVA = "0xBE9E30", Offset = "0xBE9E30", VA = "0xBE9E30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002390")]
				[Address(RVA = "0xBE9EA0", Offset = "0xBE9EA0", VA = "0xBE9EA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600238B")]
			[Address(RVA = "0xBE9ADC", Offset = "0xBE9ADC", VA = "0xBE9ADC")]
			[DebuggerHidden]
			public <LoadAndInstantiateAssetAsync>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600238C")]
			[Address(RVA = "0xBE9C7C", Offset = "0xBE9C7C", VA = "0xBE9C7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600238D")]
			[Address(RVA = "0xBE9C80", Offset = "0xBE9C80", VA = "0xBE9C80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600238F")]
			[Address(RVA = "0xBE9E38", Offset = "0xBE9E38", VA = "0xBE9E38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected OverrideAddressable[] m_overrides;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E836C", Offset = "0x9E836C")]
		private string m_name;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BladeId m_itemId;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_unlockAchievement;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_titleStringId;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_descriptionStringId;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ulong DEFAULT_BLADE_ID;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E83C8", Offset = "0x9E83C8")]
		private ulong <Id>k__BackingField;

		[Token(Token = "0x1700026C")]
		public string Name
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xBDAFE0", Offset = "0xBDAFE0", VA = "0xBDAFE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		public ulong Id
		{
			[Token(Token = "0x6001D78")]
			[Address(RVA = "0xBE982C", Offset = "0xBE982C", VA = "0xBE982C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC70", Offset = "0x9ECC70")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xBE9834", Offset = "0xBE9834", VA = "0xBE9834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECC80", Offset = "0x9ECC80")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xBE9824", Offset = "0xBE9824", VA = "0xBE9824", Slot = "4")]
		protected override Override<AssetReference>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xBE983C", Offset = "0xBE983C", VA = "0xBE983C")]
		public void Init(GameConfig config)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xBE5BAC", Offset = "0xBE5BAC", VA = "0xBE5BAC")]
		public bool IsUnlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xBE9A18", Offset = "0xBE9A18", VA = "0xBE9A18", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECC90", Offset = "0x9ECC90")]
		protected override IEnumerator LoadAssetAsyncInternal(AssetReference assetOverride, Action<Blade> callback)
		{
			return null;
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xBE542C", Offset = "0xBE542C", VA = "0xBE542C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECCF4", Offset = "0x9ECCF4")]
		public IEnumerator LoadAndInstantiateAssetAsync(MonoBehaviour owner, Action<Blade> callback)
		{
			return null;
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xBE9B08", Offset = "0xBE9B08", VA = "0xBE9B08")]
		private void Instantiate(Blade bladePrefab, Action<Blade> callback)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xBE9C08", Offset = "0xBE9C08", VA = "0xBE9C08")]
		public BladeConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B1")]
	public class BladeId
	{
		[Serializable]
		[Token(Token = "0x2000586")]
		private class Override
		{
			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0x9E8D2C", Offset = "0x9E8D2C")]
			public string m_sku;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong m_value;

			[Token(Token = "0x6002391")]
			[Address(RVA = "0xBEA0C0", Offset = "0xBEA0C0", VA = "0xBEA0C0")]
			public Override()
			{
			}
		}

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ulong m_value;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Override[] m_overrides;

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xBE9884", Offset = "0xBE9884", VA = "0xBE9884")]
		public ulong ResolveId(GameConfig gameConfig)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xBEA0B8", Offset = "0xBEA0B8", VA = "0xBEA0B8")]
		public BladeId()
		{
		}
	}
}
namespace Halfbrick.FNVR.System.AssetManagement
{
	[Token(Token = "0x20003B2")]
	public static class AddressableUtils
	{
		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E03A0", Offset = "0x9E03A0")]
		private sealed class <LoadAddressablePrefab>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetReference addressableAsset;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<GameObject> callback;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperationHandle<GameObject> <asyncOperation>5__2;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002395")]
				[Address(RVA = "0xBE912C", Offset = "0xBE912C", VA = "0xBE912C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002397")]
				[Address(RVA = "0xBE919C", Offset = "0xBE919C", VA = "0xBE919C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002392")]
			[Address(RVA = "0xBE8FAC", Offset = "0xBE8FAC", VA = "0xBE8FAC")]
			[DebuggerHidden]
			public <LoadAddressablePrefab>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002393")]
			[Address(RVA = "0xBE8FD8", Offset = "0xBE8FD8", VA = "0xBE8FD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002394")]
			[Address(RVA = "0xBE8FDC", Offset = "0xBE8FDC", VA = "0xBE8FDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002396")]
			[Address(RVA = "0xBE9134", Offset = "0xBE9134", VA = "0xBE9134", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xBE8F14", Offset = "0xBE8F14", VA = "0xBE8F14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECD58", Offset = "0x9ECD58")]
		public static IEnumerator LoadAddressablePrefab(AssetReference addressableAsset, Action<GameObject> callback)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003B3")]
	public class Override<T> where T : class
	{
		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E83F8", Offset = "0x9E83F8")]
		public T m_assetVariant;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0x9E8430", Offset = "0x9E8430")]
		public string m_sku;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0x9E8468", Offset = "0x9E8468")]
		public string m_theme;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0x9E84A0", Offset = "0x9E84A0")]
		public string m_quality;

		[Token(Token = "0x6001D84")]
		public Override()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B4")]
	public class OverrideAddressable : Override<AssetReference>
	{
		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xBE9410", Offset = "0xBE9410", VA = "0xBE9410")]
		public OverrideAddressable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B5")]
	public class OverridePrefab : Override<GameObject>
	{
		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xBE9460", Offset = "0xBE9460", VA = "0xBE9460")]
		public OverridePrefab()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public abstract class AssetVariation<AssetType, LoadedAssetType> : ScriptableObject where AssetType : class where LoadedAssetType : class
	{
		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E03B0", Offset = "0x9E03B0")]
		private sealed class <LoadAssetAsync>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MonoBehaviour owner;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetVariation<AssetType, LoadedAssetType> <>4__this;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<LoadedAssetType> callback;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600239B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600239D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002398")]
			[DebuggerHidden]
			public <LoadAssetAsync>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002399")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600239A")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600239C")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E84D8", Offset = "0x9E84D8")]
		[SerializeField]
		private AssetType m_defaultAsset;

		[Token(Token = "0x6001D87")]
		protected abstract Override<AssetType>[] GetOverrides();

		[Token(Token = "0x6001D88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECDBC", Offset = "0x9ECDBC")]
		public virtual IEnumerator LoadAssetAsync(MonoBehaviour owner, Action<LoadedAssetType> callback)
		{
			return null;
		}

		[Token(Token = "0x6001D89")]
		protected abstract IEnumerator LoadAssetAsyncInternal(AssetType assetOverride, Action<LoadedAssetType> callback);

		[Token(Token = "0x6001D8A")]
		private AssetType GetMatchedOverride()
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		protected AssetVariation()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9DF758", Offset = "0x9DF758")]
	public class AssetVariationAddressable : AssetVariation<AssetReference, GameObject>
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected OverrideAddressable[] m_overrides;

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xBE91A4", Offset = "0xBE91A4", VA = "0xBE91A4", Slot = "4")]
		protected override Override<AssetReference>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xBE91AC", Offset = "0xBE91AC", VA = "0xBE91AC", Slot = "6")]
		protected override IEnumerator LoadAssetAsyncInternal(AssetReference addressableAsset, Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xBE91B8", Offset = "0xBE91B8", VA = "0xBE91B8")]
		public AssetVariationAddressable()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9DF7C8", Offset = "0x9DF7C8")]
	public class AssetVariationPrefab : AssetVariation<GameObject, GameObject>
	{
		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E03C0", Offset = "0x9E03C0")]
		private sealed class <LoadAssetAsyncInternal>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<GameObject> callback;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject prefab;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023A1")]
				[Address(RVA = "0xBE9398", Offset = "0xBE9398", VA = "0xBE9398", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A3")]
				[Address(RVA = "0xBE9408", Offset = "0xBE9408", VA = "0xBE9408", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600239E")]
			[Address(RVA = "0xBE92A8", Offset = "0xBE92A8", VA = "0xBE92A8")]
			[DebuggerHidden]
			public <LoadAssetAsyncInternal>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600239F")]
			[Address(RVA = "0xBE9324", Offset = "0xBE9324", VA = "0xBE9324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A0")]
			[Address(RVA = "0xBE9328", Offset = "0xBE9328", VA = "0xBE9328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xBE93A0", Offset = "0xBE93A0", VA = "0xBE93A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected OverridePrefab[] m_overrides;

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xBE9208", Offset = "0xBE9208", VA = "0xBE9208", Slot = "4")]
		protected override Override<GameObject>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xBE9210", Offset = "0xBE9210", VA = "0xBE9210", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECE20", Offset = "0x9ECE20")]
		protected override IEnumerator LoadAssetAsyncInternal(GameObject prefab, Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xBE92D4", Offset = "0xBE92D4", VA = "0xBE92D4")]
		public AssetVariationPrefab()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9DF838", Offset = "0x9DF838")]
	public class ValueVariation : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200058A")]
		private class Override
		{
			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_value;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0x9E8D64", Offset = "0x9E8D64")]
			public string m_sku;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0x9E8D9C", Offset = "0x9E8D9C")]
			public string m_theme;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0x9E8DD4", Offset = "0x9E8DD4")]
			public string m_quality;

			[Token(Token = "0x60023A4")]
			[Address(RVA = "0xBE981C", Offset = "0xBE981C", VA = "0xBE981C")]
			public Override()
			{
			}
		}

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_value;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Override[] m_overrides;

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xBE94B0", Offset = "0xBE94B0", VA = "0xBE94B0")]
		public string GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xBE9814", Offset = "0xBE9814", VA = "0xBE9814")]
		public ValueVariation()
		{
		}
	}
}
namespace Halfbrick.FNVR.Achievments
{
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9DF8A8", Offset = "0x9DF8A8")]
	public class AchievementsData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200058B")]
		public class AchievementData
		{
			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_achievementId;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_titleId;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string m_DescriptionId;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StatsId m_statId;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int m_statMinValue;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int m_statMaxValue;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Sprite m_lockedImgae;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Sprite m_unlockedImgae;

			[Token(Token = "0x60023A5")]
			[Address(RVA = "0xBE4600", Offset = "0xBE4600", VA = "0xBE4600")]
			public AchievementData()
			{
			}
		}

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AchievementData[] m_achievements;

		[Token(Token = "0x1700026E")]
		public AchievementData[] Achievements
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xBE4558", Offset = "0xBE4558", VA = "0xBE4558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xBE4560", Offset = "0xBE4560", VA = "0xBE4560")]
		public AchievementData GetAchievementById(string id)
		{
			return null;
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xBE45F8", Offset = "0xBE45F8", VA = "0xBE45F8")]
		public AchievementsData()
		{
		}
	}
}
namespace Halfbrick.FNVR.SceneManagement
{
	[Token(Token = "0x20003BB")]
	public class SceneManager : MonoSingleton<SceneManager>
	{
		[Token(Token = "0x200058C")]
		public enum Scene
		{
			[Token(Token = "0x4001DC8")]
			MAIN_MENU,
			[Token(Token = "0x4001DC9")]
			CLASSIC_MODE,
			[Token(Token = "0x4001DCA")]
			ZEN_MODE,
			[Token(Token = "0x4001DCB")]
			ARCADE_MODE,
			[Token(Token = "0x4001DCC")]
			SURVIVAL_MODE,
			[Token(Token = "0x4001DCD")]
			BLADES_MENU,
			[Token(Token = "0x4001DCE")]
			ACHIEVEMENT_MENU
		}

		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E03D0", Offset = "0x9E03D0")]
		private sealed class <Start>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneManager <>4__this;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023A9")]
				[Address(RVA = "0xBE8974", Offset = "0xBE8974", VA = "0xBE8974", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023AB")]
				[Address(RVA = "0xBE89E4", Offset = "0xBE89E4", VA = "0xBE89E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A6")]
			[Address(RVA = "0xBE71D8", Offset = "0xBE71D8", VA = "0xBE71D8")]
			[DebuggerHidden]
			public <Start>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x60023A7")]
			[Address(RVA = "0xBE8620", Offset = "0xBE8620", VA = "0xBE8620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0xBE8624", Offset = "0xBE8624", VA = "0xBE8624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023AA")]
			[Address(RVA = "0xBE897C", Offset = "0xBE897C", VA = "0xBE897C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetVariationAddressable m_systemSet;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetVariationPrefab m_mainMenu;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_classicMode;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_survivalMode;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_zenMode;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AssetVariationPrefab m_arcadeMode;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject m_bladesMenu;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_achievementMenu;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AssetVariationPrefab m_settingSign;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject m_currentScene;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject m_fruitGuts;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ObjectPooler m_fruitPooler;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ObjectPooler m_bombPooler;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ObjectPooler m_specialPooler;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ObjectPooler m_fruitHalvesPooler;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ObjectPooler m_effectsPooler;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ObjectPooler m_powerupBananaPooler;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ProfileManager m_profileManagerPrefab;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public CannonSpawnFX m_cannonFX;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float m_minHeight;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_maxHeight;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_transitioning;

		[NonSerialized]
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_headHeight;

		[NonSerialized]
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_frame;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FestiveEvent m_eventPrefab;

		[NonSerialized]
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public FestiveEvent m_event;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_fpsFrameCount;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_fpsNextUpdate;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_fpsUpdateRate;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8584", Offset = "0x9E8584")]
		private float <FPS>k__BackingField;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8594", Offset = "0x9E8594")]
		private Scene <CurrentScene>k__BackingField;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E85A4", Offset = "0x9E85A4")]
		private VRSet <SystemSet>k__BackingField;

		[Token(Token = "0x1700026F")]
		public float FPS
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0xBE7024", Offset = "0xBE7024", VA = "0xBE7024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEA4", Offset = "0x9ECEA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xBE702C", Offset = "0xBE702C", VA = "0xBE702C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEB4", Offset = "0x9ECEB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public Scene CurrentScene
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xBDD3B8", Offset = "0xBDD3B8", VA = "0xBDD3B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEC4", Offset = "0x9ECEC4")]
			get
			{
				return default(Scene);
			}
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xBE7034", Offset = "0xBE7034", VA = "0xBE7034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECED4", Offset = "0x9ECED4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public GameObject SpawnAnchor
		{
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xBE703C", Offset = "0xBE703C", VA = "0xBE703C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		public VRSet SystemSet
		{
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0xBE4370", Offset = "0xBE4370", VA = "0xBE4370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEE4", Offset = "0x9ECEE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0xBE7044", Offset = "0xBE7044", VA = "0xBE7044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEF4", Offset = "0x9ECEF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public GameObject Head
		{
			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0xBE704C", Offset = "0xBE704C", VA = "0xBE704C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000025")]
		public static event Action<Scene> OnSetupScene
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xBE6E2C", Offset = "0xBE6E2C", VA = "0xBE6E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECE84", Offset = "0x9ECE84")]
			add
			{
			}
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xBE6F28", Offset = "0xBE6F28", VA = "0xBE6F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECE94", Offset = "0x9ECE94")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xBD9494", Offset = "0xBD9494", VA = "0xBD9494")]
		public bool AttemptToGenerateSlicesThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xBE7078", Offset = "0xBE7078", VA = "0xBE7078")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xBE7164", Offset = "0xBE7164", VA = "0xBE7164")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECF04", Offset = "0x9ECF04")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xBE7204", Offset = "0xBE7204", VA = "0xBE7204")]
		public bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xBE720C", Offset = "0xBE720C", VA = "0xBE720C")]
		private void SetupHeadHeight()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xBE72E4", Offset = "0xBE72E4", VA = "0xBE72E4")]
		private void SendFirstAppOpen()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xBE72E8", Offset = "0xBE72E8", VA = "0xBE72E8")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xBE73F4", Offset = "0xBE73F4", VA = "0xBE73F4")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xBE74F8", Offset = "0xBE74F8", VA = "0xBE74F8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xBE7540", Offset = "0xBE7540", VA = "0xBE7540")]
		public void SpawnCannonFX(float delta)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xBE7584", Offset = "0xBE7584", VA = "0xBE7584")]
		public void LoadScene(Scene scene)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xBE7918", Offset = "0xBE7918", VA = "0xBE7918")]
		private void InstantiateScene(GameObject scene, string audio)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xBE7A6C", Offset = "0xBE7A6C", VA = "0xBE7A6C")]
		private void SetupScene()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xBE78A0", Offset = "0xBE78A0", VA = "0xBE78A0")]
		private void OnFadeOutComplete(Fader.State state)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xBE80C4", Offset = "0xBE80C4", VA = "0xBE80C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xBE8144", Offset = "0xBE8144", VA = "0xBE8144")]
		private void UpdateFrameRateDetails()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xBE7D1C", Offset = "0xBE7D1C", VA = "0xBE7D1C")]
		public void CleanupTheDead()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xBE81AC", Offset = "0xBE81AC", VA = "0xBE81AC")]
		public SceneManager()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xBE8240", Offset = "0xBE8240", VA = "0xBE8240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF68", Offset = "0x9ECF68")]
		private void <Start>b__51_0(GameObject result)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xBE82FC", Offset = "0xBE82FC", VA = "0xBE82FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF78", Offset = "0x9ECF78")]
		private void <SetupScene>b__61_0(GameObject prefab)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xBE83C8", Offset = "0xBE83C8", VA = "0xBE83C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF88", Offset = "0x9ECF88")]
		private void <SetupScene>b__61_2(GameObject signPrefab)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xBE85C0", Offset = "0xBE85C0", VA = "0xBE85C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF98", Offset = "0x9ECF98")]
		private void <SetupScene>b__61_1(GameObject prefab)
		{
		}
	}
}
namespace Halfbrick.FNVR.Framework
{
	[Token(Token = "0x20003BC")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xBE6D94", Offset = "0xBE6D94", VA = "0xBE6D94")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class VariationAttribute : PropertyAttribute
	{
		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_configPath;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VariationConfig m_config;

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xBE6D9C", Offset = "0xBE6D9C", VA = "0xBE6D9C")]
		public VariationAttribute(string configPath)
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9DF918", Offset = "0x9DF918")]
	public class VariationConfig : ScriptableObject
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_variationList;

		[Token(Token = "0x17000274")]
		public string[] VariationList
		{
			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0xBE6E1C", Offset = "0xBE6E1C", VA = "0xBE6E1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xBE6E24", Offset = "0xBE6E24", VA = "0xBE6E24")]
		public VariationConfig()
		{
		}
	}
}
namespace Halfbrick.FNVR.Debugging.Console
{
	[Token(Token = "0x20003BF")]
	public class DebugConsole : MonoBehaviour
	{
		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E03E0", Offset = "0x9E03E0")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DebugConsoleContext.ActionItem action;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DebugConsole <>4__this;

			[Token(Token = "0x60023AC")]
			[Address(RVA = "0xBE4A14", Offset = "0xBE4A14", VA = "0xBE4A14")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60023AD")]
			[Address(RVA = "0xBE4A2C", Offset = "0xBE4A2C", VA = "0xBE4A2C")]
			internal void <SetContext>b__0()
			{
			}
		}

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_debugItemPrefab;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PauseScreen m_pauseScreen;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DebugConsoleContext m_currentContext;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DebugConsoleContext.ActionItem[] m_currentActions;

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xBE4608", Offset = "0xBE4608", VA = "0xBE4608")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xBE468C", Offset = "0xBE468C", VA = "0xBE468C")]
		public void SetContext(DebugConsoleContext context)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xBE4A24", Offset = "0xBE4A24", VA = "0xBE4A24")]
		public DebugConsole()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class DebugContextEnd : DebugConsoleContext
	{
		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xBE5D8C", Offset = "0xBE5D8C", VA = "0xBE5D8C", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xBE5D94", Offset = "0xBE5D94", VA = "0xBE5D94")]
		public DebugContextEnd()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public abstract class DebugConsoleContext
	{
		[Token(Token = "0x200058F")]
		public struct ActionItem
		{
			[Token(Token = "0x20005CB")]
			public delegate DebugConsoleContext OnAction();

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8E0C", Offset = "0x9E8E0C")]
			private string <Title>k__BackingField;

			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8E1C", Offset = "0x9E8E1C")]
			private OnAction <Callback>k__BackingField;

			[Token(Token = "0x1700038B")]
			public string Title
			{
				[Token(Token = "0x60023AE")]
				[Address(RVA = "0xA8A090", Offset = "0xA8A090", VA = "0xA8A090")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF73C", Offset = "0x9EF73C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023AF")]
				[Address(RVA = "0xA8A098", Offset = "0xA8A098", VA = "0xA8A098")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF74C", Offset = "0x9EF74C")]
				set
				{
				}
			}

			[Token(Token = "0x1700038C")]
			public OnAction Callback
			{
				[Token(Token = "0x60023B0")]
				[Address(RVA = "0xA8A0A0", Offset = "0xA8A0A0", VA = "0xA8A0A0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF75C", Offset = "0x9EF75C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023B1")]
				[Address(RVA = "0xA8A0A8", Offset = "0xA8A0A8", VA = "0xA8A0A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF76C", Offset = "0x9EF76C")]
				set
				{
				}
			}
		}

		[Token(Token = "0x6001DC0")]
		public abstract ActionItem[] GetActions();

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xBE4EB0", Offset = "0xBE4EB0", VA = "0xBE4EB0")]
		protected DebugConsoleContext()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class DebugConsoleItem : MonoBehaviour
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI m_text;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button m_button;

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xBE4F18", Offset = "0xBE4F18", VA = "0xBE4F18")]
		public DebugConsoleItem()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class DebugContextBladeAssignMenu : DebugConsoleContext
	{
		[Serializable]
		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E03F0", Offset = "0x9E03F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ActionItem.OnAction <>9__4_3;

			[Token(Token = "0x60023B3")]
			[Address(RVA = "0xBE5688", Offset = "0xBE5688", VA = "0xBE5688")]
			public <>c()
			{
			}

			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xBE5690", Offset = "0xBE5690", VA = "0xBE5690")]
			internal DebugConsoleContext <GetActions>b__4_3()
			{
				return null;
			}
		}

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0400", Offset = "0x9E0400")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int assignMode;

			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xBE52C0", Offset = "0xBE52C0", VA = "0xBE52C0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xBE56EC", Offset = "0xBE56EC", VA = "0xBE56EC")]
			internal void <AssignBlade>b__0(Blade result)
			{
			}
		}

		[Token(Token = "0x4001497")]
		private const short ASSIGN_LEFT = 1;

		[Token(Token = "0x4001498")]
		private const short ASSIGN_RIGHT = 2;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BladeConfig m_config;

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xBE4F20", Offset = "0xBE4F20", VA = "0xBE4F20")]
		public DebugContextBladeAssignMenu(BladeConfig config)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xBE4F4C", Offset = "0xBE4F4C", VA = "0xBE4F4C", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xBE51A8", Offset = "0xBE51A8", VA = "0xBE51A8")]
		private void AssignBlade(int assignMode)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xBE54D8", Offset = "0xBE54D8", VA = "0xBE54D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECFA8", Offset = "0x9ECFA8")]
		private DebugConsoleContext <GetActions>b__4_0()
		{
			return null;
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xBE554C", Offset = "0xBE554C", VA = "0xBE554C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECFB8", Offset = "0x9ECFB8")]
		private DebugConsoleContext <GetActions>b__4_1()
		{
			return null;
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xBE55B8", Offset = "0xBE55B8", VA = "0xBE55B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECFC8", Offset = "0x9ECFC8")]
		private DebugConsoleContext <GetActions>b__4_2()
		{
			return null;
		}
	}
	[Token(Token = "0x20003C4")]
	public class DebugContextBladesMenu : DebugConsoleContext
	{
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0410", Offset = "0x9E0410")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BladeConfig config;

			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xBE5BA4", Offset = "0xBE5BA4", VA = "0xBE5BA4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60023B8")]
			[Address(RVA = "0xBE5D24", Offset = "0xBE5D24", VA = "0xBE5D24")]
			internal DebugConsoleContext <GetActions>b__0()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0420", Offset = "0x9E0420")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ActionItem.OnAction <>9__0_1;

			[Token(Token = "0x60023BA")]
			[Address(RVA = "0xBE5CC0", Offset = "0xBE5CC0", VA = "0xBE5CC0")]
			public <>c()
			{
			}

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0xBE5CC8", Offset = "0xBE5CC8", VA = "0xBE5CC8")]
			internal DebugConsoleContext <GetActions>b__0_1()
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xBE5870", Offset = "0xBE5870", VA = "0xBE5870", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xBE5544", Offset = "0xBE5544", VA = "0xBE5544")]
		public DebugContextBladesMenu()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class DebugContextMainMenu : DebugConsoleContext
	{
		[Serializable]
		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0430", Offset = "0x9E0430")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ActionItem.OnAction <>9__0_0;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ActionItem.OnAction <>9__0_1;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ActionItem.OnAction <>9__0_2;

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0xBE6208", Offset = "0xBE6208", VA = "0xBE6208")]
			public <>c()
			{
			}

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0xBE6210", Offset = "0xBE6210", VA = "0xBE6210")]
			internal DebugConsoleContext <GetActions>b__0_0()
			{
				return null;
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0xBE6674", Offset = "0xBE6674", VA = "0xBE6674")]
			internal DebugConsoleContext <GetActions>b__0_1()
			{
				return null;
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0xBE66D0", Offset = "0xBE66D0", VA = "0xBE66D0")]
			internal DebugConsoleContext <GetActions>b__0_2()
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xBE5D9C", Offset = "0xBE5D9C", VA = "0xBE5D9C", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xBE4684", Offset = "0xBE4684", VA = "0xBE4684")]
		public DebugContextMainMenu()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class DebugContextWeatherSystemMenu : DebugConsoleContext
	{
		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0440", Offset = "0x9E0440")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DynamicEnvironmentManager dynamicEnvironmentManager;

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0xBE6B64", Offset = "0xBE6B64", VA = "0xBE6B64")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0xBE6C3C", Offset = "0xBE6C3C", VA = "0xBE6C3C")]
			internal DebugConsoleContext <GetActions>b__0()
			{
				return null;
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xBE6CCC", Offset = "0xBE6CCC", VA = "0xBE6CCC")]
			internal DebugConsoleContext <GetActions>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0450", Offset = "0x9E0450")]
		private sealed class <>c__DisplayClass1_1
		{
			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string weatherState;

			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass1_0 CS$<>8__locals1;

			[Token(Token = "0x60023C4")]
			[Address(RVA = "0xBE6B6C", Offset = "0xBE6B6C", VA = "0xBE6B6C")]
			public <>c__DisplayClass1_1()
			{
			}

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0xBE6D04", Offset = "0xBE6D04", VA = "0xBE6D04")]
			internal DebugConsoleContext <GetActions>b__2()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0460", Offset = "0x9E0460")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ActionItem.OnAction <>9__1_3;

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0xBE6BD8", Offset = "0xBE6BD8", VA = "0xBE6BD8")]
			public <>c()
			{
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0xBE6BE0", Offset = "0xBE6BE0", VA = "0xBE6BE0")]
			internal DebugConsoleContext <GetActions>b__1_3()
			{
				return null;
			}
		}

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string[] m_weatherStates;

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xBE672C", Offset = "0xBE672C", VA = "0xBE672C", Slot = "4")]
		public override ActionItem[] GetActions()
		{
			return null;
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xBE6268", Offset = "0xBE6268", VA = "0xBE6268")]
		public DebugContextWeatherSystemMenu()
		{
		}
	}
}
namespace Halfbrick.Analytics
{
	[Token(Token = "0x20003C7")]
	public class SettingsValuesAsset : ISettingsValuesAsset
	{
		[Token(Token = "0x17000275")]
		public override string ApiKey
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xBE4470", Offset = "0xBE4470", VA = "0xBE4470", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		public override string ServerUrl
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0xBE44B8", Offset = "0xBE44B8", VA = "0xBE44B8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		public override string SkuName
		{
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0xBE4500", Offset = "0xBE4500", VA = "0xBE4500", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public override bool TestMode
		{
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xBE4548", Offset = "0xBE4548", VA = "0xBE4548", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xBE4550", Offset = "0xBE4550", VA = "0xBE4550")]
		public SettingsValuesAsset()
		{
		}
	}
}
namespace UnityEngine.AzureSky
{
	[Token(Token = "0x20003C8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9DF988", Offset = "0x9DF988")]
	public class AzureSkyController : MonoBehaviour
	{
		[Token(Token = "0x2000598")]
		public static class Uniforms
		{
			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly int _CullMode;

			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal static readonly int _SunTexture;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly int _MoonTexture;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal static readonly int _CloudNoise;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly int _StarfieldTexture;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal static readonly int _StarNoiseTexture;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly int _Kr;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal static readonly int _Km;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly int _Scattering;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal static readonly int _NightIntensity;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly int _RayleighColor;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal static readonly int _MieColor;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly int _SunDiskIntensity;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal static readonly int _SunDiskColor;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly int _Exposure;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal static readonly int _Pi316;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly int _Pi14;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal static readonly int _Pi;

			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly int _LightSpeed;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal static readonly int _MieDepth;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly int _SunSize;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			internal static readonly int _MoonSize;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly int _SunDirection;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal static readonly int _MoonDirection;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly int _UpMatrix;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			internal static readonly int _MoonMatrix;

			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly int _SunMatrix;

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			internal static readonly int _RelativeSunMatrix;

			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly int _StarMatrix;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			internal static readonly int _NoiseMatrix;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			internal static readonly int _Br;

			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			internal static readonly int _Bm;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			internal static readonly int _MieG;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			internal static readonly int _SunsetColorMode;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			internal static readonly int _MoonColor;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			internal static readonly int _MoonBrightColor;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			internal static readonly int _MoonBrightRange;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			internal static readonly int _MoonEmission;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			internal static readonly int _StarfieldColorBalance;

			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			internal static readonly int _StarfieldIntensity;

			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			internal static readonly int _MilkyWayIntensity;

			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			internal static readonly int _FogScale;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			internal static readonly int _FogBlend;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			internal static readonly int _FogDensity;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			internal static readonly int _FogDistance;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			internal static readonly int _HeightFogBlend;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			internal static readonly int _HeightFogDensity;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			internal static readonly int _HeightFogDistance;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			internal static readonly int _HeightFogStart;

			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			internal static readonly int _HeightFogEnd;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			internal static readonly int _DynamicCloudLayer1Altitude;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			internal static readonly int _DynamicCloudLayer1Direction;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			internal static readonly int _DynamicCloudLayer1Speed;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			internal static readonly int _DynamicCloudLayer1Density;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			internal static readonly int _DynamicCloudLayer1Color1;

			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			internal static readonly int _DynamicCloudLayer1Color2;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			internal static readonly int _StaticCloudTextureSource;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			internal static readonly int _StaticCloudTextureDestination;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			internal static readonly int _StaticCloudColor;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			internal static readonly int _StaticCloudScattering;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			internal static readonly int _StaticCloudExtinction;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			internal static readonly int _StaticCloudPower;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			internal static readonly int _StaticCloudIntensity;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			internal static readonly int _StaticCloudRotationSpeed;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			internal static readonly int _WeatherTransitionTime;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			internal static readonly int _RainColor;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			internal static readonly int _SnowColor;
		}

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E0470", Offset = "0x9E0470")]
		private sealed class <PlayThunderAudioClip>d__154 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AzureSkyController <>4__this;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int element;

			[Token(Token = "0x1700038D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023CD")]
				[Address(RVA = "0x1220090", Offset = "0x1220090", VA = "0x1220090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023CF")]
				[Address(RVA = "0x1220100", Offset = "0x1220100", VA = "0x1220100", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x121FF10", Offset = "0x121FF10", VA = "0x121FF10")]
			[DebuggerHidden]
			public <PlayThunderAudioClip>d__154(int <>1__state)
			{
			}

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x121FF3C", Offset = "0x121FF3C", VA = "0x121FF3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x121FF40", Offset = "0x121FF40", VA = "0x121FF40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x1220098", Offset = "0x1220098", VA = "0x1220098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform sunTransform;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform moonTransform;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform lightTransform;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Light thunderDirectionalLight;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D moonTexture;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D sunTexture;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D cloudNoise;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Cubemap starfieldTexture;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Cubemap starNoiseTexture;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material skyMaterial;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material rainMaterial;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material snowMaterial;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ParticleSystem rainParticle;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ParticleSystem snowParticle;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public WindZone windZone;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AzureSkySoundFX soundFX;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform skydome;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ReflectionProbe reflectionProbe;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DateTime m_date;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_dayOfYear;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AzureSkyProfile m_getCalendarProfile;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Matrix4x4 m_starfieldMatrix;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Matrix4x4 m_noiseMatrix;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float m_noiseMatrixRotation;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Quaternion m_noiseRotation;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float m_timeSinceLastProbeUpdate;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float m_timelineCurveTime;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float m_timelineGradientTime;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float m_sunCurveTime;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float m_sunGradientTime;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float m_moonCurveTime;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float m_moonGradientTime;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float m_timeProgression;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Vector3 m_sunRealisticPosition;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 m_moonRealisticPosition;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Quaternion m_sunSimplePosition;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 m_sunLocalDirection;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Vector3 m_moonLocalDirection;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public List<AzureSkyThunder> thunderList;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float thunderLightIntensity;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float thunderCloudIntensity;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float m_thunderLightingTime;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float m_thunderLightingSpeed;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float m_thunderLightingIntensity;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int m_thunderIndex;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool m_thunderIsLighting;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public AzureSkyProfile[] calendarProfileList;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private WeightedDayProfile[] m_weightedProfiles;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public AzureSkyProfile calendarDayProfile;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private AzureSkyProfile nextCalendarDayProfile;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public AzureSkyTimeOfDayComponent timeOfDay;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public AzureSkyOptionsComponent options;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float kr;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public float km;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float rayleigh;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public float mie;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float nightIntensity;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float scattering;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float sunDiskIntensity;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public float exposure;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Color mieColor;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public Color rayleighColor;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Color sunDiskColor;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Vector3 m_lambda;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public float N;

		[Token(Token = "0x40014DC")]
		private const float m_pi = (float)Math.PI;

		[Token(Token = "0x40014DD")]
		private const float m_n = 1.00029f;

		[Token(Token = "0x40014DE")]
		private const float m_pn = 0.035f;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private Vector3 m_K;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public Color moonColor;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		public Color moonBrightColor;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		public float moonBrightRange;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public float moonEmission;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public float starsScintillation;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public float starfieldIntensity;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public float milkyWayIntensity;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public float fogScale;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public float fogBlend;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public float fogDensity;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public float fogDistance;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public float heightFogBlend;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public float heightFogDensity;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public float heightFogDistance;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		public float heightFogStart;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public float heightFogEnd;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		public float dynamicCloudLayer1Altitude;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public float dynamicCloudLayer1Direction;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		public float dynamicCloudLayer1Speed;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public Color dynamicCloudLayer1Color1;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public Color dynamicCloudLayer1Color2;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public float dynamicCloudLayer1Density;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Texture2D staticCloudTextureSource;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Texture2D staticCloudTextureDestination;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public Color staticCloudColor;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float staticCloudScattering;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public float staticCloudExtinction;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public float staticCloudPower;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public float staticCloudIntensity;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public float staticCloudRotationSpeed;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private float m_cloudRotationSpeed;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public float lightIntensity;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public Color lightColor;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float ambientIntensity;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public Color ambientSkyColor;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public Color ambientEquatorColor;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public Color ambientGroundColor;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public float reflectionIntensity;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private Light m_lightComponent;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private float m_sunElevation;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		public Color rainColor;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		public Color snowColor;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		public float rainIntensity;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public float snowIntensity;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		public float windSpeed;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public float windDirection;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		public float rainLightVolume;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public float rainMediumVolume;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		public float rainHeavyVolume;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		public float windLightVolume;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		public float windMediumVolume;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		public float windHeavyVolume;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public float wetness;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public float snowAmount;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public float covarage;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		public Color outputColor1;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		public Color outputColor2;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		public Color outputColor3;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private ParticleSystem.EmissionModule m_rainEmission;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		private ParticleSystem.EmissionModule m_snowEmission;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private float m_maxRainEmission;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
		private float m_maxSnowEmission;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private Vector3 m_windRotation;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		private float m_maxWindSpeed;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		public List<CurveOutput> curveOuputList;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		public List<GradientOutput> gradientOuputList;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private bool m_isDaytime;

		[Token(Token = "0x17000279")]
		public bool IsDaytime
		{
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x10A74AC", Offset = "0x10A74AC", VA = "0x10A74AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x10A74B4", Offset = "0x10A74B4", VA = "0x10A74B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x10A87E4", Offset = "0x10A87E4", VA = "0x10A87E4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x10A8830", Offset = "0x10A8830", VA = "0x10A8830")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x10ABAE8", Offset = "0x10ABAE8", VA = "0x10ABAE8")]
		private Vector3 GetBetaRay()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x10ABC38", Offset = "0x10ABC38", VA = "0x10ABC38")]
		private Vector3 GetBetaMie()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x10ABD18", Offset = "0x10ABD18", VA = "0x10ABD18")]
		private float GetCurveValue(AnimationCurve[] curveTarget, int curveMode)
		{
			return default(float);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x10ABE1C", Offset = "0x10ABE1C", VA = "0x10ABE1C")]
		public float GetCurveOutput(int element)
		{
			return default(float);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x10AC018", Offset = "0x10AC018", VA = "0x10AC018")]
		private Color GetGradientValue(Gradient[] gradientTarget, int curveMode)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x10AC11C", Offset = "0x10AC11C", VA = "0x10AC11C")]
		public Color GetGradientOutput(int element)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x10AA2C0", Offset = "0x10AA2C0", VA = "0x10AA2C0")]
		public AzureSkyProfile GetCalendarDayProfile()
		{
			return null;
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x10AC318", Offset = "0x10AC318", VA = "0x10AC318")]
		public AzureSkyProfile GetNextCalendarDayProfile()
		{
			return null;
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x10AC498", Offset = "0x10AC498", VA = "0x10AC498")]
		public void SetWeatherProfile(WeightedDayProfile[] weightedProfile)
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x10AA3FC", Offset = "0x10AA3FC", VA = "0x10AA3FC")]
		private void BlendWeatherProfiles(WeightedDayProfile[] profiles)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x10A8770", Offset = "0x10A8770", VA = "0x10A8770")]
		public void UpdateProfiles()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x10AA1F8", Offset = "0x10AA1F8", VA = "0x10AA1F8")]
		private void SoundPlayController(float volume, AudioSource sound)
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x10AC7B8", Offset = "0x10AC7B8", VA = "0x10AC7B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECFD8", Offset = "0x9ECFD8")]
		private IEnumerator PlayThunderAudioClip(int element, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x10AC870", Offset = "0x10AC870", VA = "0x10AC870")]
		public void PlayThunderEffect(int element)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x10ACAD8", Offset = "0x10ACAD8", VA = "0x10ACAD8")]
		public void PlayThunderEffectRandom()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x10A78CC", Offset = "0x10A78CC", VA = "0x10A78CC")]
		private void InitializeShaderUniforms()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x10A7B58", Offset = "0x10A7B58", VA = "0x10A7B58")]
		private void UpdateShaderUniforms()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x10AC720", Offset = "0x10AC720", VA = "0x10AC720")]
		private void SetStaticCloudTexture(Texture2D source, Texture2D destination)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x10A7694", Offset = "0x10A7694", VA = "0x10A7694")]
		public void ConfigureShaders()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x10ACD74", Offset = "0x10ACD74", VA = "0x10ACD74")]
		public void SetParticlesActive(bool value)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x10A8640", Offset = "0x10A8640", VA = "0x10A8640")]
		public void SetParticlesActive(int value)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x10ACE9C", Offset = "0x10ACE9C", VA = "0x10ACE9C")]
		public AzureSkyController()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	[ImageEffectAllowedInSceneView]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9DF9D4", Offset = "0x9DF9D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9DF9D4", Offset = "0x9DF9D4")]
	public class AzureSkyFogScattering : MonoBehaviour
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material fogScatteringMaterial;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_camera;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] m_frustumCorners;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rect m_rect;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Matrix4x4 m_frustumCornersArray;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public LayerMask excludeLayers;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public CameraClearFlags clearFlags;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject m_tmpCam;

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x1221204", Offset = "0x1221204", VA = "0x1221204")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x1221278", Offset = "0x1221278", VA = "0x1221278")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x12217CC", Offset = "0x12217CC", VA = "0x12217CC")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x1221CA8", Offset = "0x1221CA8", VA = "0x1221CA8")]
		public AzureSkyFogScattering()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9DFA7C", Offset = "0x9DFA7C")]
	public class AzureSkyProfile : ScriptableObject
	{
		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AzureSkyScatteringComponent scattering;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AzureSkyDeepSpaceComponent deepSpace;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AzureSkyFogScatteringComponent fogScattering;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AzureSkyCloudsComponent clouds;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AzureSkyLightingComponent lighting;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AzureSkyWeatherComponent weather;

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x1223240", Offset = "0x1223240", VA = "0x1223240")]
		public AzureSkyProfile()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CB")]
	public class AzureEditorSettings
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool showTimeOfDayTab;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool showReferencesTab;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool showClimateTab;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool showOptionsTab;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool showOutputTab;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool showScatteringTab;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool showDeepSpaceTab;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool showFogScatteringTab;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showCloudsTab;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool showLightingTab;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool showWeatherTab;

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x10A6990", Offset = "0x10A6990", VA = "0x10A6990")]
		public AzureEditorSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CC")]
	public class AzureSkyCloudsComponent
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float dynamicCloudLayer1Altitude;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float dynamicCloudLayer1Direction;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float dynamicCloudLayer1Speed;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dynamicCloudLayer1GradientColor1Index;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient[] dynamicCloudLayer1GradientColor1;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int dynamicCloudLayer1GradientColor2Index;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient[] dynamicCloudLayer1GradientColor2;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int dynamicCloudLayer1DensityCurveIndex;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve[] dynamicCloudLayer1DensityCurve;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int fastIndexes;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture2D staticCloudTexture;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int staticCloudColorIndex;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Gradient[] staticCloudColor;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int staticCloudScatteringCurveIndex;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve[] staticCloudScatteringCurve;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int staticCloudExtinctionCurveIndex;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve[] staticCloudExtinctionCurve;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int staticCloudPowerCurveIndex;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve[] staticCloudPowerCurve;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int staticCloudIntensityCurveIndex;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve[] staticCloudIntensityCurve;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float staticCloudRotationSpeed;

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x10A69A0", Offset = "0x10A69A0", VA = "0x10A69A0")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x10A69C8", Offset = "0x10A69C8", VA = "0x10A69C8")]
		public AzureSkyCloudsComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CD")]
	public class AzureSkyDeepSpaceComponent
	{
		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int moonColorGradientIndex;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient[] moonColorGradientColor;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int moonBrightColorGradientIndex;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient[] moonBrightColorGradientColor;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int moonBrightRangeCurveIndex;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve[] moonBrightRangeCurve;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int moonEmissionCurveIndex;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve[] moonEmissionCurve;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float starsScintillation;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int starfieldIntensityCurveIndex;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve[] starfieldIntensityCurve;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int milkyWayIntensityCurveIndex;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve[] milkyWayIntensityCurve;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int fastIndexes;

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x12209A4", Offset = "0x12209A4", VA = "0x12209A4")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x12209C4", Offset = "0x12209C4", VA = "0x12209C4")]
		public AzureSkyDeepSpaceComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CE")]
	public class AzureSkyFogScatteringComponent
	{
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fogScale;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int fogBlendCurveIndex;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve[] fogBlendCurve;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int fogDensityCurveIndex;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve[] fogDensityCurve;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fogDistanceCurveIndex;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve[] fogDistanceCurve;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int heightFogBlendCurveIndex;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve[] heightFogBlendCurve;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int heightFogDensityCurveIndex;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve[] heightFogDensityCurve;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int heightFogDistanceCurveIndex;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve[] heightFogDistanceCurve;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int heightFogStartCurveIndex;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve[] heightFogStartCurve;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int heightFogEndCurveIndex;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve[] heightFogEndCurve;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int fastIndexes;

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x1221D60", Offset = "0x1221D60", VA = "0x1221D60")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x1221D88", Offset = "0x1221D88", VA = "0x1221D88")]
		public AzureSkyFogScatteringComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CF")]
	public class AzureSkyLightingComponent
	{
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int directionalLightIntensityCurveIndex;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve[] directionalLightIntensityCurve;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int directionalLightGradientColorIndex;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient[] directionalLightGradientColor;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ambientIntensityCurveIndex;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve[] ambientIntensityCurve;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int ambientSkyGradientColorIndex;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient[] ambientSkyGradientColor;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int equatorGradientColorIndex;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Gradient[] equatorGradientColor;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int groundGradientColorIndex;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Gradient[] groundGradientColor;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int reflectionIntensityCurveIndex;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve[] reflectionIntensityCurve;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int fastIndexes;

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x122288C", Offset = "0x122288C", VA = "0x122288C")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x12228B0", Offset = "0x12228B0", VA = "0x12228B0")]
		public AzureSkyLightingComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D0")]
	public class AzureSkyOptionsComponent
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool startAtCurrentTime;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool startAtCurrentDate;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool followMainCamera;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool applyDayChangeTransition;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float dayChangeTransitionTime;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float planetRadius;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lightSpeed;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float mieDepth;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sunSize;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float moonSize;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 starfieldPosition;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 starfieldColor;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int particlesMode;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool keepWeatherUpdate;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int cloudMode;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int repeatMode;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int sunsetColorMode;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int wavelengthMode;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int shaderMode;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int useReflectionProbe;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int reflectionProbeRefreshMode;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float reflectionProbeUpdateTime;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool reflectionProbeUpdateAtFirstFrame;

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x1223200", Offset = "0x1223200", VA = "0x1223200")]
		public AzureSkyOptionsComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D1")]
	public class CurveOutput
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int curveIndex;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve[] curveOutput;

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x1227314", Offset = "0x1227314", VA = "0x1227314")]
		public CurveOutput()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D2")]
	public class GradientOutput
	{
		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int gradientIndex;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient[] gradientOutput;

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x12274BC", Offset = "0x12274BC", VA = "0x12274BC")]
		public GradientOutput()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D3")]
	public class AzureSkyScatteringComponent
	{
		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 lambda;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float N;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float kr;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float km;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int rayleighCurveIndex;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] rayleighCurve;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int mieCurveIndex;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve[] mieCurve;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int nightIntensityCurveIndex;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve[] nightIntensityCurve;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int rayleighGradientIndex;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Gradient[] rayleighGradientColor;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int mieGradientIndex;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Gradient[] mieGradientColor;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int sunDiskGradientIndex;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Gradient[] sunDiskGradientColor;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int scatteringCurveIndex;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AnimationCurve[] scatteringCurve;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int sunDiskIntensityCurveIndex;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve[] sunDiskIntensityCurve;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int exposureCurveIndex;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationCurve[] exposureCurve;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int fastIndexes;

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x1225208", Offset = "0x1225208", VA = "0x1225208")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x1223334", Offset = "0x1223334", VA = "0x1223334")]
		public AzureSkyScatteringComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D4")]
	public class AzureSkySoundFX : MonoBehaviour
	{
		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource rainLight;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource rainMedium;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource rainHeavy;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource windLight;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource windMedium;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource windHeavy;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource thunder;

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x1225234", Offset = "0x1225234", VA = "0x1225234")]
		public AzureSkySoundFX()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D5")]
	public struct AzureSkyThunder
	{
		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioClip audioClip;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float audioDelay;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve lightingCurve;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lightingSpeed;
	}
	[Serializable]
	[Token(Token = "0x20003D6")]
	public class AzureSkyTimeOfDayComponent
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selectableDayInt;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int dayOfYear;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] selectableDayList;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hour;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int day;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int month;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int year;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int dayInMonth;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float utc;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float latitude;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float longitude;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int timeMode;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float dayCycle;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool setTimeByCurve;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float hourByCurve;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve dayCycleCurve;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float lst;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_radians;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_radLatitude;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_sinLatitude;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_cosLatitude;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector2 m_hourAndMinutes;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_date;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private DateTime m_dateTime;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_daysInMonth;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int m_dayOfWeek;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_fixLeapYear;

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x122523C", Offset = "0x122523C", VA = "0x122523C")]
		public void UpdateCalendar(string[] dayList)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x1225498", Offset = "0x1225498", VA = "0x1225498")]
		public int GetDayOfWeek()
		{
			return default(int);
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x12254E0", Offset = "0x12254E0", VA = "0x12254E0")]
		public int GetDayOfWeek(int dayNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x122552C", Offset = "0x122552C", VA = "0x122552C")]
		public int GetDayOfYear()
		{
			return default(int);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x12255C0", Offset = "0x12255C0", VA = "0x12255C0")]
		public bool IsLeapYear()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x122562C", Offset = "0x122562C", VA = "0x122562C")]
		public Vector2 GetTime()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x1225700", Offset = "0x1225700", VA = "0x1225700")]
		public Vector3 GetDate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x1225720", Offset = "0x1225720", VA = "0x1225720")]
		public float GetSystemTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x12257CC", Offset = "0x12257CC", VA = "0x12257CC")]
		public void ApplySystemTime()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x1225888", Offset = "0x1225888", VA = "0x1225888")]
		public void ApplySystemDate()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x1225948", Offset = "0x1225948", VA = "0x1225948")]
		public void StartNextDay(int repeatMode)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x12259BC", Offset = "0x12259BC", VA = "0x12259BC")]
		public void JumpToNextDay(bool keepTime = true)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1225A14", Offset = "0x1225A14", VA = "0x1225A14")]
		public void GotoDate(int month, int day, int year)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x1225A20", Offset = "0x1225A20", VA = "0x1225A20")]
		public void GotoTime(int hours, int minutes)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x1225A40", Offset = "0x1225A40", VA = "0x1225A40")]
		public float GetDayLength()
		{
			return default(float);
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1225A60", Offset = "0x1225A60", VA = "0x1225A60")]
		public void CalculateTimeByCurve()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x1225AAC", Offset = "0x1225AAC", VA = "0x1225AAC")]
		public float SetSimpleSunPosition()
		{
			return default(float);
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x1225AF0", Offset = "0x1225AF0", VA = "0x1225AF0")]
		public Quaternion SetSimpleMoonPosition(Transform sun)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x1225BDC", Offset = "0x1225BDC", VA = "0x1225BDC")]
		public Vector3 SetRealisticSunPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x1225FE8", Offset = "0x1225FE8", VA = "0x1225FE8")]
		public Vector3 SetRealisticMoonPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x122644C", Offset = "0x122644C", VA = "0x122644C")]
		public AzureSkyTimeOfDayComponent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D7")]
	public struct WeatherProfile
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AzureSkyProfile Profile;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float TransitionTime;
	}
	[Token(Token = "0x20003D8")]
	public struct WeightedDayProfile
	{
		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AzureSkyProfile profile;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float weight;

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xA9CADC", Offset = "0xA9CADC", VA = "0xA9CADC")]
		public WeightedDayProfile(AzureSkyProfile profile, float weight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D9")]
	public class AzureSkyWeatherComponent
	{
		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int weatherRainGradientColorIndex;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient[] weatherRainGradientColor;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int weatherSnowGradientColorIndex;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient[] weatherSnowGradientColor;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int weatherRainIntensityCurveIndex;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve[] weatherRainIntensityCurve;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int weatherSnowIntensityCurveIndex;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve[] weatherSnowIntensityCurve;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int weatherWindSpeedCurveIndex;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve[] weatherWindSpeedCurve;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int weatherWindDirectionCurveIndex;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve[] weatherWindDirectionCurve;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int weatherThunderLightIntensityCurveIndex;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve[] weatherThunderLightIntensityCurve;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int weatherThunderCloudIntensityCurveIndex;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve[] weatherThunderCloudIntensityCurve;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float weatherRainLightVolume;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float weatherRainMediumVolume;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float weatherRainHeavyVolume;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float weatherWindLightVolume;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float weatherWindMediumVolume;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float weatherWindHeavyVolume;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int weatherWetnessCurveIndex;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationCurve[] weatherWetnessCurve;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int weatherSnowAmountCurveIndex;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AnimationCurve[] weatherSnowAmountCurve;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int weatherCovarageCurveIndex;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AnimationCurve[] weatherCovarageCurve;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int weatherOutputColor1Index;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Gradient[] weatherOutputColor1GradientColor;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int weatherOutputColor2Index;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Gradient[] weatherOutputColor2GradientColor;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int weatherOutputColor3Index;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Gradient[] weatherOutputColor3GradientColor;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public int fastIndexes;

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x12272D4", Offset = "0x12272D4", VA = "0x12272D4")]
		public void FastIndexesChange()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x1223F9C", Offset = "0x1223F9C", VA = "0x1223F9C")]
		public AzureSkyWeatherComponent()
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x20003DA")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xB8D4C0", Offset = "0xB8D4C0", VA = "0xB8D4C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xB8D530", Offset = "0xB8D530", VA = "0xB8D530")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xB8D5C8", Offset = "0xB8D5C8", VA = "0xB8D5C8")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xB8D538", Offset = "0xB8D538", VA = "0xB8D538")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xB8D5D0", Offset = "0xB8D5D0", VA = "0xB8D5D0")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x20003DB")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xB8CE38", Offset = "0xB8CE38", VA = "0xB8CE38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xB8CEC4", Offset = "0xB8CEC4", VA = "0xB8CEC4")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xB8CED4", Offset = "0xB8CED4", VA = "0xB8CED4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xB8CF44", Offset = "0xB8CF44", VA = "0xB8CF44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xB8CFF4", Offset = "0xB8CFF4", VA = "0xB8CFF4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xB8D208", Offset = "0xB8D208", VA = "0xB8D208")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xB8D210", Offset = "0xB8D210", VA = "0xB8D210")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xB8D4AC", Offset = "0xB8D4AC", VA = "0xB8D4AC")]
		public ForceShieldShootBall()
		{
		}
	}
}
