using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Security;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Security.Principal;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using ATiStudios.Animations;
using ATiStudios.ColorCatalog;
using ATiStudios.Core;
using ATiStudios.Core.Audio;
using ATiStudios.Core.ChatBot;
using ATiStudios.Core.InputSystem.Components.Interfaces;
using ATiStudios.Core.InputSystem.Components.UI;
using ATiStudios.Core.InputSystem.Components.UI.Selectables;
using ATiStudios.Core.InputSystem.Components.WorldObjects;
using ATiStudios.Core.InputSystem.Controller;
using ATiStudios.Core.InputSystem.EventSystemHandlers;
using ATiStudios.Core.Localization;
using ATiStudios.Core.Ranges;
using ATiStudios.Core.SceneManager;
using ATiStudios.Core.UI.FlowView;
using ATiStudios.Core.UI.Popups;
using ATiStudios.Core.UserPreferences.Base;
using ATiStudios.Database;
using ATiStudios.Debugger;
using ATiStudios.Foundation;
using ATiStudios.Foundation.Achievements;
using ATiStudios.Foundation.AssetBundles;
using ATiStudios.Foundation.Leaderboard;
using ATiStudios.Foundation.Lesson;
using ATiStudios.Foundation.Lesson.Quiz;
using ATiStudios.Foundation.Models.Output;
using ATiStudios.Foundation.Networking;
using ATiStudios.Foundation.Objects;
using ATiStudios.Foundation.RatingPoints;
using ATiStudios.Mondly.Animations;
using ATiStudios.MondlyVR;
using ATiStudios.MondlyVR.Chapters.Scripts;
using ATiStudios.MondlyVR.Cutscenes;
using ATiStudios.MondlyVR.DifficultySystem;
using ATiStudios.MondlyVR.Leaderboard;
using ATiStudios.MondlyVR.Models;
using ATiStudios.MondlyVR.MultiplayerPhoton.Scripts;
using ATiStudios.MondlyVR.Popups;
using ATiStudios.MondlyVR.Popups.RatingStarAnimationController;
using ATiStudios.MondlyVR.RatingPoints;
using ATiStudios.MondlyVR.SceneManager;
using ATiStudios.MondlyVR.Storyline;
using ATiStudios.MondlyVR.Tutorial;
using ATiStudios.MondlyVR.UI;
using ATiStudios.MondlyVR.UI.Panels;
using ATiStudios.MondlyVR.UI.Selectables;
using ATiStudios.SpeechRecognition;
using ATiStudios.SpeechSynthesizing;
using ATiStudios.VR;
using ATiStudios.VR.Characters;
using ATiStudios.VR.InputSystem.Controller;
using ATiStudios.VR.InputSystem.InputModule;
using ATiStudios.VR.InputSystem.Raycaster;
using ATiStudios.VR.InputSystem.Visuals;
using ATiStudios.VR.Panels;
using ATiStudios.VR.Popups;
using ATiStudios.VR.SceneManager;
using ATiStudios.VR.UI;
using ATiStudios.VR.UserPreferences;
using ATiStudios.VoiceRecorder;
using CrazyMinnow.SALSA;
using CurvedUI;
using DG.Tweening;
using ExitGames.Client.Photon;
using ExitGames.Client.Photon.LoadBalancing;
using ExitGames.Client.Photon.Voice;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Newtonsoft.Json.Linq;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using POpusCodec.Enums;
using Photon;
using RootMotion.FinalIK;
using SQLite.Attribute;
using SWS;
using Sirenix.Serialization;
using SocketIO;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using WebSocketSharp;
using WebSocketSharp.Net;
using WebSocketSharp.Net.Security;
using WebSocketSharp.Net.WebSockets;

[assembly: AssemblyVersion("1.0.2.28289")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E1010", Offset = "0x9E1010")]
internal sealed class <>f__AnonymousType0<<Text>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x9E3A64", Offset = "0x9E3A64")]
	private readonly <Text>j__TPar <Text>i__Field;

	[Token(Token = "0x17000001")]
	public <Text>j__TPar Text
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<Text>j__TPar)null;
		}
	}

	[Token(Token = "0x6000002")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<Text>j__TPar Text)
	{
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class Banknote : UnityEngine.MonoBehaviour, IStorylineActor
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x17000002")]
	public string Name
	{
		[Token(Token = "0x6000007")]
		[Address(RVA = "0xCF97BC", Offset = "0xCF97BC", VA = "0xCF97BC", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000008")]
		[Address(RVA = "0xCF97C4", Offset = "0xCF97C4", VA = "0xCF97C4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCF9764", Offset = "0xCF9764", VA = "0xCF9764")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xCF97CC", Offset = "0xCF97CC", VA = "0xCF97CC")]
	public void Continue()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xCF9834", Offset = "0xCF9834", VA = "0xCF9834")]
	public void Pause()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xCF989C", Offset = "0xCF989C", VA = "0xCF989C")]
	public void PlayAnimation(string animationName)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xCF98D4", Offset = "0xCF98D4", VA = "0xCF98D4")]
	public void Resume()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xCF993C", Offset = "0xCF993C", VA = "0xCF993C")]
	public void StartActor()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xCF99A4", Offset = "0xCF99A4", VA = "0xCF99A4")]
	public void Stop()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xCF9A0C", Offset = "0xCF9A0C", VA = "0xCF9A0C")]
	public Banknote()
	{
	}
}
[Token(Token = "0x2000004")]
public class WaterSprayEffectController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem _particles;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xC41D78", Offset = "0xC41D78", VA = "0xC41D78")]
	public void StartEffect()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xC41DD8", Offset = "0xC41DD8", VA = "0xC41DD8")]
	public void StopEffect()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xC41E38", Offset = "0xC41E38", VA = "0xC41E38")]
	public WaterSprayEffectController()
	{
	}
}
[Token(Token = "0x2000005")]
public class EarthRotate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float EarthSpeed;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xC51680", Offset = "0xC51680", VA = "0xC51680")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xC51684", Offset = "0xC51684", VA = "0xC51684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xC517A0", Offset = "0xC517A0", VA = "0xC517A0")]
	public EarthRotate()
	{
	}
}
[Token(Token = "0x2000006")]
public class BeltSpawner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3A88", Offset = "0x9E3A88")]
	public GameObject[] asteroidPrefabs;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int asteroidDensity;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int seed;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float innerRadius;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float outerRadius;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float height;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool rotatingClockwise;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rockParent;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 rockOffsetPosition;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Elipse path;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3AC0", Offset = "0x9E3AC0")]
	public float minRotationSpeed;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxRotationSpeed;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 localPosition;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 worldPosition;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 asteroidScale;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float randomRadius;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float randomRadian;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float x;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float y;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float z;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float randomScale;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float minScale;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float maxScale;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xCF9A14", Offset = "0xCF9A14", VA = "0xCF9A14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xCFA0A0", Offset = "0xCFA0A0", VA = "0xCFA0A0")]
	public BeltSpawner()
	{
	}
}
[Serializable]
[Token(Token = "0x2000007")]
public class Elipse
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float xAxis;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float yAxis;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xC517B4", Offset = "0xC517B4", VA = "0xC517B4")]
	public Elipse(float xAxis, float yAxis)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xC517EC", Offset = "0xC517EC", VA = "0xC517EC")]
	public Vector2 Evaluate(float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xC518A4", Offset = "0xC518A4", VA = "0xC518A4")]
	public float GetPerimeter()
	{
		return default(float);
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1020", Offset = "0x9E1020")]
public class ElipseRenderer : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3AF8", Offset = "0x9E3AF8")]
	public int segments;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Elipse elipse;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xC5195C", Offset = "0xC5195C", VA = "0xC5195C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xC519B8", Offset = "0xC519B8", VA = "0xC519B8")]
	private void CalculateElipse()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xC51B78", Offset = "0xC51B78", VA = "0xC51B78")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xC51C0C", Offset = "0xC51C0C", VA = "0xC51C0C")]
	public ElipseRenderer()
	{
	}
}
[Token(Token = "0x2000009")]
public class OrbitMotion : BaseMonoBehaviour
{
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E26FC", Offset = "0x9E26FC")]
	private sealed class <AnimateOrbit>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OrbitMotion <>4__this;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <progressPerSecond>5__2;

		[Token(Token = "0x17000422")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0xD22498", Offset = "0xD22498", VA = "0xD22498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000423")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0xD22508", Offset = "0xD22508", VA = "0xD22508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xD221A4", Offset = "0xD221A4", VA = "0xD221A4")]
		[DebuggerHidden]
		public <AnimateOrbit>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xD2239C", Offset = "0xD2239C", VA = "0xD2239C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xD223A0", Offset = "0xD223A0", VA = "0xD223A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xD224A0", Offset = "0xD224A0", VA = "0xD224A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E270C", Offset = "0x9E270C")]
	private sealed class <MoveToPosition>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OrbitMotion <>4__this;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeToReach;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <remainingProgress>5__2;

		[Token(Token = "0x17000424")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xD22730", Offset = "0xD22730", VA = "0xD22730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xD227A0", Offset = "0xD227A0", VA = "0xD227A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xD22268", Offset = "0xD22268", VA = "0xD22268")]
		[DebuggerHidden]
		public <MoveToPosition>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xD22510", Offset = "0xD22510", VA = "0xD22510", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xD22514", Offset = "0xD22514", VA = "0xD22514", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xD22738", Offset = "0xD22738", VA = "0xD22738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform orbitingObject;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Elipse path;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float progress;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float period;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool orbitActive;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float yPos;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isDone;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _enableCount;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine _routineAnimateOrbit;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xD21EA4", Offset = "0xD21EA4", VA = "0xD21EA4", Slot = "10")]
	protected override void EnableComponent()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xD21F6C", Offset = "0xD21F6C", VA = "0xD21F6C", Slot = "12")]
	protected override void StartComponent()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xD220AC", Offset = "0xD220AC", VA = "0xD220AC", Slot = "15")]
	protected override void DisableComponent()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xD220EC", Offset = "0xD220EC", VA = "0xD220EC")]
	public void SetupOrbitMotion(float xAxis, float yAxis, Transform orbitingObject, float yPos)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xD2201C", Offset = "0xD2201C", VA = "0xD2201C")]
	public void SetObjectPosition()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xD21EF8", Offset = "0xD21EF8", VA = "0xD21EF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9A6C", Offset = "0x9E9A6C")]
	public IEnumerator AnimateOrbit()
	{
		return null;
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xD221D0", Offset = "0xD221D0", VA = "0xD221D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9AD0", Offset = "0x9E9AD0")]
	public IEnumerator MoveToPosition(float timeToReach)
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xD22294", Offset = "0xD22294", VA = "0xD22294")]
	private static bool RoughlyEqual(float a, float b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xD22318", Offset = "0xD22318", VA = "0xD22318")]
	public OrbitMotion()
	{
	}
}
[Token(Token = "0x200000A")]
public class RotateScript : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float planetSpeedRotation;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xC047B8", Offset = "0xC047B8", VA = "0xC047B8")]
	public void SetupRotateScript(float planetSpeedRotation)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xC047C0", Offset = "0xC047C0", VA = "0xC047C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xC048B0", Offset = "0xC048B0", VA = "0xC048B0")]
	public RotateScript()
	{
	}
}
[Token(Token = "0x200000B")]
public class SatelliteRotation : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject motherPlanet;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float orbitDistance;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float orbitDegreesPerSec;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xC0CB88", Offset = "0xC0CB88", VA = "0xC0CB88")]
	private void Update()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xC0CE18", Offset = "0xC0CE18", VA = "0xC0CE18")]
	public SatelliteRotation()
	{
	}
}
[Token(Token = "0x200000C")]
public class SolarExplosionTap : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] particles;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.ShapeModule[] shapes;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isClicked;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xC373F8", Offset = "0xC373F8", VA = "0xC373F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xC37510", Offset = "0xC37510", VA = "0xC37510")]
	public void SolarExplosion()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xC375DC", Offset = "0xC375DC", VA = "0xC375DC")]
	public SolarExplosionTap()
	{
	}
}
[Token(Token = "0x200000D")]
public class SolarSystemTap : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OrbitMotion[] motionScripts;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isClicked;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToReach;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int numberOfPlanets;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[CanBeNull]
	private Coroutine _routineMoveInLine;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xC37654", Offset = "0xC37654", VA = "0xC37654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xC376AC", Offset = "0xC376AC", VA = "0xC376AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xC37744", Offset = "0xC37744", VA = "0xC37744")]
	public void AllignPlanets()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xC378E0", Offset = "0xC378E0", VA = "0xC378E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xC3798C", Offset = "0xC3798C", VA = "0xC3798C")]
	public SolarSystemTap()
	{
	}
}
[Token(Token = "0x200000E")]
public class HoldCart : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FullBodyBipedIK ik;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightHandTarget;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandTarget;

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xC5F994", Offset = "0xC5F994", VA = "0xC5F994")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xC5FD0C", Offset = "0xC5FD0C", VA = "0xC5FD0C")]
	public void ChangeRightHandTarget(Transform target)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xC5FD14", Offset = "0xC5FD14", VA = "0xC5FD14")]
	public void ChangeLeftHandTarget(Transform target)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xC5FD1C", Offset = "0xC5FD1C", VA = "0xC5FD1C")]
	public HoldCart()
	{
	}
}
[Token(Token = "0x200000F")]
public class HoldStearingWheel : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FullBodyBipedIK ik;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightHandTarget;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandTarget;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xC5FD24", Offset = "0xC5FD24", VA = "0xC5FD24")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xC60010", Offset = "0xC60010", VA = "0xC60010")]
	public HoldStearingWheel()
	{
	}
}
[Token(Token = "0x2000010")]
public class SALSA_Template_EventControllerSubscriber : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string componentEventName;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xC04D04", Offset = "0xC04D04", VA = "0xC04D04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xC04E18", Offset = "0xC04E18", VA = "0xC04E18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xC04F2C", Offset = "0xC04F2C", VA = "0xC04F2C")]
	private void OnAnimationStarting(object sender, EventController.EventControllerNotificationArgs e)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xC04FF0", Offset = "0xC04FF0", VA = "0xC04FF0")]
	private void OnAnimationON(object sender, EventController.EventControllerNotificationArgs e)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xC050B4", Offset = "0xC050B4", VA = "0xC050B4")]
	private void OnAnimationEnding(object sender, EventController.EventControllerNotificationArgs e)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xC05178", Offset = "0xC05178", VA = "0xC05178")]
	private void OnAnimationOFF(object sender, EventController.EventControllerNotificationArgs e)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xC0523C", Offset = "0xC0523C", VA = "0xC0523C")]
	public SALSA_Template_EventControllerSubscriber()
	{
	}
}
[Token(Token = "0x2000011")]
public class SALSA_Template_SalsaEventSubscriber : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Salsa salsa;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xC05244", Offset = "0xC05244", VA = "0xC05244")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xC052F8", Offset = "0xC052F8", VA = "0xC052F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xC053AC", Offset = "0xC053AC", VA = "0xC053AC")]
	private void OnStoppedSalsaing(object sender, Salsa.SalsaNotificationArgs e)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xC054B8", Offset = "0xC054B8", VA = "0xC054B8")]
	private void OnStartedSalsaing(object sender, Salsa.SalsaNotificationArgs e)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xC055C4", Offset = "0xC055C4", VA = "0xC055C4")]
	public SALSA_Template_SalsaEventSubscriber()
	{
	}
}
[Token(Token = "0x2000012")]
public class SALSA_Template_SalsaVisemeTriggerEventSubscriber : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Salsa salsaInstance;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xC055CC", Offset = "0xC055CC", VA = "0xC055CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xC05648", Offset = "0xC05648", VA = "0xC05648")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xC056C4", Offset = "0xC056C4", VA = "0xC056C4")]
	private void SalsaOnVisemeTriggered(object sender, Salsa.SalsaNotificationArgs e)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xC057C4", Offset = "0xC057C4", VA = "0xC057C4")]
	public SALSA_Template_SalsaVisemeTriggerEventSubscriber()
	{
	}
}
[Token(Token = "0x2000013")]
public class ObjectRotator : BaseMonoBehaviour
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float _speedMultiplier;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD3E410", Offset = "0xD3E410", VA = "0xD3E410")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD3E510", Offset = "0xD3E510", VA = "0xD3E510")]
	public ObjectRotator()
	{
	}
}
[Token(Token = "0x2000014")]
public class Clock : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002D4")]
	public enum TimeRegion
	{
		[Token(Token = "0x4001104")]
		LocalTime,
		[Token(Token = "0x4001105")]
		LondonTime,
		[Token(Token = "0x4001106")]
		ParisTime,
		[Token(Token = "0x4001107")]
		NewYorkTime
	}

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3B44", Offset = "0x9E3B44")]
	public int minutes;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hour;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int second;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3B7C", Offset = "0x9E3B7C")]
	public TimeRegion timeRegion;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3BB4", Offset = "0x9E3BB4")]
	public GameObject pointerSeconds;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pointerMinutes;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pointerHours;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3BEC", Offset = "0x9E3BEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E3BEC", Offset = "0x9E3BEC")]
	public float clockSpeed;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int seconds;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float msecs;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xCFE334", Offset = "0xCFE334", VA = "0xCFE334")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xCFE588", Offset = "0xCFE588", VA = "0xCFE588")]
	private void Update()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xCFE798", Offset = "0xCFE798", VA = "0xCFE798")]
	public Clock()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1084", Offset = "0x9E1084")]
public class SoftFlicker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minIntensity;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxIntensity;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float random;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xC2F908", Offset = "0xC2F908", VA = "0xC2F908")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xC2F93C", Offset = "0xC2F93C", VA = "0xC2F93C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xC2FA10", Offset = "0xC2FA10", VA = "0xC2FA10")]
	public SoftFlicker()
	{
	}
}
[Token(Token = "0x2000016")]
public class tazo_UVScroller : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int targetMaterialSlot;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer myrender;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedY;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedX;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeWentX;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeWentY;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1DC5218", Offset = "0x1DC5218", VA = "0x1DC5218")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1DC5270", Offset = "0x1DC5270", VA = "0x1DC5270")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1DC5354", Offset = "0x1DC5354", VA = "0x1DC5354")]
	public tazo_UVScroller()
	{
	}
}
[Token(Token = "0x2000017")]
public class Key : UnityEngine.MonoBehaviour, IStorylineActor
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x17000003")]
	public string Name
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xB6BDEC", Offset = "0xB6BDEC", VA = "0xB6BDEC", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xB6BDF4", Offset = "0xB6BDF4", VA = "0xB6BDF4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB6BD94", Offset = "0xB6BD94", VA = "0xB6BD94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xB6BDFC", Offset = "0xB6BDFC", VA = "0xB6BDFC")]
	public void Continue()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xB6BE64", Offset = "0xB6BE64", VA = "0xB6BE64")]
	public void Pause()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xB6BECC", Offset = "0xB6BECC", VA = "0xB6BECC")]
	public void PlayAnimation(string animationName)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB6BF04", Offset = "0xB6BF04", VA = "0xB6BF04")]
	public void Resume()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB6BF6C", Offset = "0xB6BF6C", VA = "0xB6BF6C")]
	public void StartActor()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB6BFD4", Offset = "0xB6BFD4", VA = "0xB6BFD4")]
	public void Stop()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB6C03C", Offset = "0xB6C03C", VA = "0xB6C03C")]
	public Key()
	{
	}
}
[Token(Token = "0x2000018")]
public class Map : UnityEngine.MonoBehaviour, IStorylineActor
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x17000004")]
	public string Name
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0xB74640", Offset = "0xB74640", VA = "0xB74640", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000062")]
		[Address(RVA = "0xB74648", Offset = "0xB74648", VA = "0xB74648", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB745E8", Offset = "0xB745E8", VA = "0xB745E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB74650", Offset = "0xB74650", VA = "0xB74650")]
	public void Continue()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB746B8", Offset = "0xB746B8", VA = "0xB746B8")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB74720", Offset = "0xB74720", VA = "0xB74720")]
	public void PlayAnimation(string animationName)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB74758", Offset = "0xB74758", VA = "0xB74758")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB747C0", Offset = "0xB747C0", VA = "0xB747C0")]
	public void StartActor()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB74828", Offset = "0xB74828", VA = "0xB74828")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xB74890", Offset = "0xB74890", VA = "0xB74890")]
	public Map()
	{
	}
}
[Token(Token = "0x2000019")]
public class Ticket : UnityEngine.MonoBehaviour, IStorylineActor
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x17000005")]
	public string Name
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0xC3E76C", Offset = "0xC3E76C", VA = "0xC3E76C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006C")]
		[Address(RVA = "0xC3E774", Offset = "0xC3E774", VA = "0xC3E774", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xC3E714", Offset = "0xC3E714", VA = "0xC3E714")]
	private void Start()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xC3E77C", Offset = "0xC3E77C", VA = "0xC3E77C")]
	public void Continue()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xC3E7E4", Offset = "0xC3E7E4", VA = "0xC3E7E4")]
	public void Pause()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xC3E84C", Offset = "0xC3E84C", VA = "0xC3E84C")]
	public void PlayAnimation(string animationName)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xC3E884", Offset = "0xC3E884", VA = "0xC3E884")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xC3E8EC", Offset = "0xC3E8EC", VA = "0xC3E8EC")]
	public void StartActor()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xC3E954", Offset = "0xC3E954", VA = "0xC3E954")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xC3E9BC", Offset = "0xC3E9BC", VA = "0xC3E9BC")]
	public Ticket()
	{
	}
}
[Token(Token = "0x200001A")]
public class CUI_CameraRotationOnButtonHeld : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xCFAB18", Offset = "0xCFAB18", VA = "0xCFAB18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xCFAB44", Offset = "0xCFAB44", VA = "0xCFAB44")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x200001B")]
public class CUI_MoveAlong : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000076")]
	[Address(RVA = "0xCFAB5C", Offset = "0xCFAB5C", VA = "0xCFAB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xCFAB60", Offset = "0xCFAB60", VA = "0xCFAB60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xCFAF00", Offset = "0xCFAF00", VA = "0xCFAF00")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x200001C")]
public class CUI_MoveHeartbeat : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xCFAF08", Offset = "0xCFAF08", VA = "0xCFAF08")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xCFAFC8", Offset = "0xCFAFC8", VA = "0xCFAFC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xCFB16C", Offset = "0xCFB16C", VA = "0xCFB16C")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x200001D")]
public class CUI_rotation_anim : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xCFB280", Offset = "0xCFB280", VA = "0xCFB280")]
	private void Start()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xCFB284", Offset = "0xCFB284", VA = "0xCFB284")]
	private void Update()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xCFB4DC", Offset = "0xCFB4DC", VA = "0xCFB4DC")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x200001E")]
public class CUI_ShowParentCoordinates : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600007F")]
	[Address(RVA = "0xCFB17C", Offset = "0xCFB17C", VA = "0xCFB17C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xCFB274", Offset = "0xCFB274", VA = "0xCFB274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xCFB278", Offset = "0xCFB278", VA = "0xCFB278")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x200001F")]
public class CUI_touchpad : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xCFB4E4", Offset = "0xCFB4E4", VA = "0xCFB4E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xCFB558", Offset = "0xCFB558", VA = "0xCFB558")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xCFB654", Offset = "0xCFB654", VA = "0xCFB654")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x2000020")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x20002D5")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4001109")]
		MOUSE = 0,
		[Token(Token = "0x400110A")]
		GAZE = 1,
		[Token(Token = "0x400110B")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x400110C")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x400110D")]
		STEAMVR = 4,
		[Token(Token = "0x400110E")]
		OCULUSVR = 5,
		[Token(Token = "0x400110F")]
		GOOGLEVR = 7
	}

	[Token(Token = "0x20002D6")]
	public enum Hand
	{
		[Token(Token = "0x4001111")]
		Both,
		[Token(Token = "0x4001112")]
		Right,
		[Token(Token = "0x4001113")]
		Left
	}

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject currentDragging;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float gazeTimerProgress;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Ray customControllerRay;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float dragThreshold;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool pressedDown;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool pressedLastFrame;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x17000006")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0xC4AF3C", Offset = "0xC4AF3C", VA = "0xC4AF3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600008F")]
		[Address(RVA = "0xC49EC8", Offset = "0xC49EC8", VA = "0xC49EC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xC4B038", Offset = "0xC4B038", VA = "0xC4B038")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x6000091")]
		[Address(RVA = "0xC4B0BC", Offset = "0xC4B0BC", VA = "0xC4B0BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3D94", Offset = "0x9F3D94")]
	public static bool CustromControllerButtonDown
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0xC4B158", Offset = "0xC4B158", VA = "0xC4B158")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000093")]
		[Address(RVA = "0xC4B1C8", Offset = "0xC4B1C8", VA = "0xC4B1C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0xC4B240", Offset = "0xC4B240", VA = "0xC4B240")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000095")]
		[Address(RVA = "0xC4B2B0", Offset = "0xC4B2B0", VA = "0xC4B2B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0xC4B328", Offset = "0xC4B328", VA = "0xC4B328")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000097")]
		[Address(RVA = "0xC4B334", Offset = "0xC4B334", VA = "0xC4B334")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0xC4B348", Offset = "0xC4B348", VA = "0xC4B348")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700000C")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x6000099")]
		[Address(RVA = "0xC4B3DC", Offset = "0xC4B3DC", VA = "0xC4B3DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600009A")]
		[Address(RVA = "0xC4B3E4", Offset = "0xC4B3E4", VA = "0xC4B3E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x600009B")]
		[Address(RVA = "0xC4B3EC", Offset = "0xC4B3EC", VA = "0xC4B3EC")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x600009C")]
		[Address(RVA = "0xC4B45C", Offset = "0xC4B45C", VA = "0xC4B45C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x600009D")]
		[Address(RVA = "0xC4B50C", Offset = "0xC4B50C", VA = "0xC4B50C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public Hand UsedHand
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0xC4B514", Offset = "0xC4B514", VA = "0xC4B514")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0xC4B51C", Offset = "0xC4B51C", VA = "0xC4B51C")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xC4B524", Offset = "0xC4B524", VA = "0xC4B524")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xC4B52C", Offset = "0xC4B52C", VA = "0xC4B52C")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float GazeClickTimer
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xC4B538", Offset = "0xC4B538", VA = "0xC4B538")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xC4B540", Offset = "0xC4B540", VA = "0xC4B540")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xC4B5C0", Offset = "0xC4B5C0", VA = "0xC4B5C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xC4B5C8", Offset = "0xC4B5C8", VA = "0xC4B5C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xC4B648", Offset = "0xC4B648", VA = "0xC4B648")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000014")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xC4B650", Offset = "0xC4B650", VA = "0xC4B650")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xC4B658", Offset = "0xC4B658", VA = "0xC4B658")]
		set
		{
		}
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xC49DE8", Offset = "0xC49DE8", VA = "0xC49DE8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xC49F34", Offset = "0xC49F34", VA = "0xC49F34", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xC49F70", Offset = "0xC49F70", VA = "0xC49F70", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xC4A22C", Offset = "0xC4A22C", VA = "0xC4A22C", Slot = "31")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xC4A2AC", Offset = "0xC4A2AC", VA = "0xC4A2AC", Slot = "32")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xC4A53C", Offset = "0xC4A53C", VA = "0xC4A53C", Slot = "33")]
	protected virtual void ProcessDownRelease(PointerEventData eventData, bool down, bool released)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xC4AF34", Offset = "0xC4AF34", VA = "0xC4AF34", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xC4AF38", Offset = "0xC4AF38", VA = "0xC4AF38", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x600008D")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xC4B660", Offset = "0xC4B660", VA = "0xC4B660")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E10F8", Offset = "0x9E10F8")]
public class EFullBodyIK : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _shouldLerp;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _toValue;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _duration;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FullBodyBipedIK fullBodyIK;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xC51394", Offset = "0xC51394", VA = "0xC51394")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xC513EC", Offset = "0xC513EC", VA = "0xC513EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xC51644", Offset = "0xC51644", VA = "0xC51644")]
	public void LerpWeightToZero(float duration)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xC51658", Offset = "0xC51658", VA = "0xC51658")]
	public void LerpWeightToOne(float duration)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xC51670", Offset = "0xC51670", VA = "0xC51670")]
	public EFullBodyIK()
	{
	}
}
[Token(Token = "0x2000022")]
[DisallowMultipleComponent]
public class Outline : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	public enum Mode
	{
		[Token(Token = "0x4001115")]
		OutlineAll,
		[Token(Token = "0x4001116")]
		OutlineVisible,
		[Token(Token = "0x4001117")]
		OutlineHidden,
		[Token(Token = "0x4001118")]
		OutlineAndSilhouette,
		[Token(Token = "0x4001119")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x20002D8")]
	private class ListVector3
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xD240A8", Offset = "0xD240A8", VA = "0xD240A8")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E271C", Offset = "0x9E271C")]
	private sealed class <>c
	{
		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xD24238", Offset = "0xD24238", VA = "0xD24238")]
		public <>c()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xD24240", Offset = "0xD24240", VA = "0xD24240")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xD242D0", Offset = "0xD242D0", VA = "0xD242D0")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E3D0C", Offset = "0x9E3D0C")]
	private float outlineWidth;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3D4C", Offset = "0x9E3D4C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E3D4C", Offset = "0x9E3D4C")]
	private bool precomputeOutline;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x17000015")]
	public Mode OutlineMode
	{
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xD227A8", Offset = "0xD227A8", VA = "0xD227A8")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xD227B0", Offset = "0xD227B0", VA = "0xD227B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public Color OutlineColor
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xD227C0", Offset = "0xD227C0", VA = "0xD227C0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xD227CC", Offset = "0xD227CC", VA = "0xD227CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public float OutlineWidth
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xD227E0", Offset = "0xD227E0", VA = "0xD227E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xD227E8", Offset = "0xD227E8", VA = "0xD227E8")]
		set
		{
		}
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xD227F8", Offset = "0xD227F8", VA = "0xD227F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xD22CA4", Offset = "0xD22CA4", VA = "0xD22CA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xD22E10", Offset = "0xD22E10", VA = "0xD22E10")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xD23158", Offset = "0xD23158", VA = "0xD23158")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xD233DC", Offset = "0xD233DC", VA = "0xD233DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xD23548", Offset = "0xD23548", VA = "0xD23548")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xD22F74", Offset = "0xD22F74", VA = "0xD22F74")]
	private void Bake()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xD22934", Offset = "0xD22934", VA = "0xD22934")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xD235C0", Offset = "0xD235C0", VA = "0xD235C0")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xD2316C", Offset = "0xD2316C", VA = "0xD2316C")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xD240B0", Offset = "0xD240B0", VA = "0xD240B0")]
	public Outline()
	{
	}
}
[Token(Token = "0x2000023")]
public class RotateUntilLoad : BaseMonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E272C", Offset = "0x9E272C")]
	private struct <StartComponent>d__2 : IAsyncStateMachine
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RotateUntilLoad <>4__this;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object <>u__1;

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xA83A40", Offset = "0xA83A40", VA = "0xA83A40", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xA83A48", Offset = "0xA83A48", VA = "0xA83A48", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OvrAvatar _avatar;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RoundedLoadingImage _roundedLoadingImage;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xC048C0", Offset = "0xC048C0", VA = "0xC048C0", Slot = "12")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9E9B34", Offset = "0x9E9B34")]
	protected override void StartComponent()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xC04988", Offset = "0xC04988", VA = "0xC04988")]
	public RotateUntilLoad()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xC04990", Offset = "0xC04990", VA = "0xC04990")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9B98", Offset = "0x9E9B98")]
	private bool <StartComponent>b__2_0()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xC049BC", Offset = "0xC049BC", VA = "0xC049BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9BA8", Offset = "0x9E9BA8")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000024")]
public class PopupButton : VRButton
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[CanBeNull]
	[SerializeField]
	private Graphic _buttonText;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	private Color _color;

	[Token(Token = "0x17000018")]
	public Graphic ButtonText
	{
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xBFEEF0", Offset = "0xBFEEF0", VA = "0xBFEEF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xBFEEF8", Offset = "0xBFEEF8", VA = "0xBFEEF8", Slot = "53")]
	public override void TransitionForState(TransitionState state)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xBFF070", Offset = "0xBFF070", VA = "0xBFF070")]
	public PopupButton()
	{
	}
}
[Token(Token = "0x2000025")]
public static class ConsoleProDebug
{
	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xCFEC80", Offset = "0xCFEC80", VA = "0xCFEC80")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xCFEC84", Offset = "0xCFEC84", VA = "0xCFEC84")]
	public static void LogToFilter(string inLog, string inFilterName)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xCFED28", Offset = "0xCFED28", VA = "0xCFED28")]
	public static void Watch(string inName, string inValue)
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E116C", Offset = "0x9E116C")]
public class FastList<T>
{
	[Token(Token = "0x20002DB")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E273C", Offset = "0x9E273C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000426")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001905")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000427")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001907")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001902")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001903")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001904")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001906")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000019")]
	public int Count
	{
		[Token(Token = "0x60000CE")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000CF")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public T Item
	{
		[Token(Token = "0x60000D0")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60000D1")]
		set
		{
		}
	}

	[Token(Token = "0x60000CC")]
	public FastList()
	{
	}

	[Token(Token = "0x60000CD")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60000D2")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60000D3")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60000D4")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60000D5")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60000D6")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D7")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60000D8")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D9")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60000DA")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DB")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60000DC")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60000DD")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000DF")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9BE0", Offset = "0x9E9BE0")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60000E1")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E2")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60000E3")]
	private void Trim()
	{
	}

	[Token(Token = "0x60000E4")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000E5")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000027")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xC61208", Offset = "0xC61208", VA = "0xC61208")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000028")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xC611DC", Offset = "0xC611DC", VA = "0xC611DC")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xD7813C", Offset = "0xD7813C", VA = "0xD7813C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xD78268", Offset = "0xD78268", VA = "0xD78268")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xD785C4", Offset = "0xD785C4", VA = "0xD785C4")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xD78784", Offset = "0xD78784", VA = "0xD78784", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xD787B4", Offset = "0xD787B4", VA = "0xD787B4")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200002A")]
public class PoseEditHelper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xBFF0DC", Offset = "0xBFF0DC", VA = "0xBFF0DC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xBFF168", Offset = "0xBFF168", VA = "0xBFF168")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xBFF32C", Offset = "0xBFF32C", VA = "0xBFF32C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200002B")]
public class GazeTargetSpawner : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700001B")]
	public bool IsVisible
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xC5B854", Offset = "0xC5B854", VA = "0xC5B854")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xC5B85C", Offset = "0xC5B85C", VA = "0xC5B85C")]
		set
		{
		}
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xC5B9B8", Offset = "0xC5B9B8", VA = "0xC5B9B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xC5BC80", Offset = "0xC5BC80", VA = "0xC5BC80")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xC5BC88", Offset = "0xC5BC88", VA = "0xC5BC88")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200002C")]
public class RemoteLoopbackManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002DD")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xC01EA0", Offset = "0xC01EA0", VA = "0xC01EA0")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002DE")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E993C", Offset = "0x9E993C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9954", Offset = "0x9E9954")]
		public float FakeLatencyMin;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E996C", Offset = "0x9E996C")]
		public float LatencyWeight;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9984", Offset = "0x9E9984")]
		public int MaxSamples;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xC01EA8", Offset = "0xC01EA8", VA = "0xC01EA8")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xC020B4", Offset = "0xC020B4", VA = "0xC020B4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xC01384", Offset = "0xC01384", VA = "0xC01384")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xC01520", Offset = "0xC01520", VA = "0xC01520")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xC018F8", Offset = "0xC018F8", VA = "0xC018F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xC01840", Offset = "0xC01840", VA = "0xC01840")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xC01BD8", Offset = "0xC01BD8", VA = "0xC01BD8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xC02028", Offset = "0xC02028", VA = "0xC02028")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200002D")]
public class GazeTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xC5B484", Offset = "0xC5B484", VA = "0xC5B484")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xC5B4F4", Offset = "0xC5B4F4", VA = "0xC5B4F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xC5B6A0", Offset = "0xC5B6A0", VA = "0xC5B6A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xC5B718", Offset = "0xC5B718", VA = "0xC5B718")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xC5B538", Offset = "0xC5B538", VA = "0xC5B538")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xC5B7EC", Offset = "0xC5B7EC", VA = "0xC5B7EC")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xC5B84C", Offset = "0xC5B84C", VA = "0xC5B84C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class AvatarLayer
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xCF975C", Offset = "0xCF975C", VA = "0xCF975C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class PacketRecordSettings
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xD79FB4", Offset = "0xD79FB4", VA = "0xD79FB4")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatar : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002DF")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xD2811C", Offset = "0xD2811C", VA = "0xD2811C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20002E0")]
	public enum HandType
	{
		[Token(Token = "0x4001131")]
		Right,
		[Token(Token = "0x4001132")]
		Left,
		[Token(Token = "0x4001133")]
		Max
	}

	[Token(Token = "0x20002E1")]
	public enum HandJoint
	{
		[Token(Token = "0x4001135")]
		HandBase,
		[Token(Token = "0x4001136")]
		IndexBase,
		[Token(Token = "0x4001137")]
		IndexTip,
		[Token(Token = "0x4001138")]
		ThumbBase,
		[Token(Token = "0x4001139")]
		ThumbTip,
		[Token(Token = "0x400113A")]
		Max
	}

	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E274C", Offset = "0x9E274C")]
	private sealed class <WaitForMouthAudioSource>d__138 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000428")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xD2AAEC", Offset = "0xD2AAEC", VA = "0xD2AAEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000429")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001911")]
			[Address(RVA = "0xD2AB5C", Offset = "0xD2AB5C", VA = "0xD2AB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xD2A428", Offset = "0xD2A428", VA = "0xD2A428")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__138(int <>1__state)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xD2A888", Offset = "0xD2A888", VA = "0xD2A888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xD2A88C", Offset = "0xD2A88C", VA = "0xD2A88C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xD2AAF4", Offset = "0xD2AAF4", VA = "0xD2AAF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool IsInitialized;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3EA4", Offset = "0x9E3EA4")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string oculusUserID;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3EDC", Offset = "0x9E3EDC")]
	public bool EnableBody;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool EnableHands;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool EnableBase;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool EnableExpressive;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3F14", Offset = "0x9E3F14")]
	public bool RecordPackets;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3F4C", Offset = "0x9E3F4C")]
	public bool StartWithControllers;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E3F84", Offset = "0x9E3F84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E3F84", Offset = "0x9E3F84")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E3FF4", Offset = "0x9E3FF4")]
	private bool CombineMeshes;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E402C", Offset = "0x9E402C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E4064", Offset = "0x9E4064")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader EyeLens;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Shader ControllerShader;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E409C", Offset = "0x9E409C")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E40D4", Offset = "0x9E40D4")]
	public bool EnableLaughter;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float[] visemes;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private AudioSource audioSource;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool showLeftController;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool showRightController;

	[Token(Token = "0x40000DC")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000DE")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000DF")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000E0")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000E1")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000E2")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xD2432C", Offset = "0xD2432C", VA = "0xD2432C")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xD24810", Offset = "0xD24810", VA = "0xD24810")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xD2489C", Offset = "0xD2489C", VA = "0xD2489C")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xD2491C", Offset = "0xD2491C", VA = "0xD2491C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xD24A64", Offset = "0xD24A64", VA = "0xD24A64")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xD24B6C", Offset = "0xD24B6C", VA = "0xD24B6C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xD24C68", Offset = "0xD24C68", VA = "0xD24C68")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xD24E6C", Offset = "0xD24E6C", VA = "0xD24E6C")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xD24F34", Offset = "0xD24F34", VA = "0xD24F34")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xD24FB8", Offset = "0xD24FB8", VA = "0xD24FB8")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xD25144", Offset = "0xD25144", VA = "0xD25144")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xD2522C", Offset = "0xD2522C", VA = "0xD2522C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xD25358", Offset = "0xD25358", VA = "0xD25358")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xD253B8", Offset = "0xD253B8", VA = "0xD253B8")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000112")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xD25858", Offset = "0xD25858", VA = "0xD25858")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xD25BD4", Offset = "0xD25BD4", VA = "0xD25BD4")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xD25D78", Offset = "0xD25D78", VA = "0xD25D78")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xD2608C", Offset = "0xD2608C", VA = "0xD2608C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xD26180", Offset = "0xD26180", VA = "0xD26180")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xD2680C", Offset = "0xD2680C", VA = "0xD2680C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xD26B40", Offset = "0xD26B40", VA = "0xD26B40")]
	private void Update()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xD27754", Offset = "0xD27754", VA = "0xD27754")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xD2779C", Offset = "0xD2779C", VA = "0xD2779C")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xD26434", Offset = "0xD26434", VA = "0xD26434")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xD264D0", Offset = "0xD264D0", VA = "0xD264D0")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xD277CC", Offset = "0xD277CC", VA = "0xD277CC")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xD26F1C", Offset = "0xD26F1C", VA = "0xD26F1C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xD27A94", Offset = "0xD27A94", VA = "0xD27A94")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xD2783C", Offset = "0xD2783C", VA = "0xD2783C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xD28198", Offset = "0xD28198", VA = "0xD28198")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xD2863C", Offset = "0xD2863C", VA = "0xD2863C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xD28A60", Offset = "0xD28A60", VA = "0xD28A60")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xD28BAC", Offset = "0xD28BAC", VA = "0xD28BAC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xD28DEC", Offset = "0xD28DEC", VA = "0xD28DEC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xD270F4", Offset = "0xD270F4", VA = "0xD270F4")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xD28EE8", Offset = "0xD28EE8", VA = "0xD28EE8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xD26F2C", Offset = "0xD26F2C", VA = "0xD26F2C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xD28FE0", Offset = "0xD28FE0", VA = "0xD28FE0")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xD296C8", Offset = "0xD296C8", VA = "0xD296C8")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xD29CE8", Offset = "0xD29CE8", VA = "0xD29CE8")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xD29D68", Offset = "0xD29D68", VA = "0xD29D68")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xD29DEC", Offset = "0xD29DEC", VA = "0xD29DEC")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xD275D4", Offset = "0xD275D4", VA = "0xD275D4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xD2909C", Offset = "0xD2909C", VA = "0xD2909C")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xD2A3B4", Offset = "0xD2A3B4", VA = "0xD2A3B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9C44", Offset = "0x9E9C44")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xD2A454", Offset = "0xD2A454", VA = "0xD2A454")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xD2A1D4", Offset = "0xD2A1D4", VA = "0xD2A1D4")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xD2A524", Offset = "0xD2A524", VA = "0xD2A524")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xD2A618", Offset = "0xD2A618", VA = "0xD2A618")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xD29EC4", Offset = "0xD29EC4", VA = "0xD29EC4")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xD2A70C", Offset = "0xD2A70C", VA = "0xD2A70C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000031")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xD2AB64", Offset = "0xD2AB64", VA = "0xD2AB64")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000032")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xD2AC14", Offset = "0xD2AC14", VA = "0xD2AC14")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xD2C418", Offset = "0xD2C418", VA = "0xD2C418")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xD2BF44", Offset = "0xD2BF44", VA = "0xD2BF44")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xD2BCE0", Offset = "0xD2BCE0", VA = "0xD2BCE0")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xD2BDB8", Offset = "0xD2BDB8", VA = "0xD2BDB8")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xD2C738", Offset = "0xD2C738", VA = "0xD2C738")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000033")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000FF")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xD2CF08", Offset = "0xD2CF08", VA = "0xD2CF08")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xD2D1BC", Offset = "0xD2D1BC", VA = "0xD2D1BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xD2D754", Offset = "0xD2D754", VA = "0xD2D754")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xD288F0", Offset = "0xD288F0", VA = "0xD288F0")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xD2D850", Offset = "0xD2D850", VA = "0xD2D850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xD2D978", Offset = "0xD2D978", VA = "0xD2D978")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xD2D9DC", Offset = "0xD2D9DC", VA = "0xD2D9DC")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xD2D2E4", Offset = "0xD2D2E4", VA = "0xD2D2E4")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xD2D9E4", Offset = "0xD2D9E4", VA = "0xD2D9E4")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xD2DA84", Offset = "0xD2DA84", VA = "0xD2DA84")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xD2E5A4", Offset = "0xD2E5A4", VA = "0xD2E5A4")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xD2D7B8", Offset = "0xD2D7B8", VA = "0xD2D7B8")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class OvrAvatarDriver : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002E3")]
	public enum PacketMode
	{
		[Token(Token = "0x400113F")]
		SDK,
		[Token(Token = "0x4001140")]
		Unity
	}

	[Token(Token = "0x20002E4")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xD30064", Offset = "0xD30064", VA = "0xD30064")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20002E5")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xD27D58", Offset = "0xD27D58", VA = "0xD27D58")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xD27D48", Offset = "0xD27D48", VA = "0xD27D48")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600014D")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xD2FFB8", Offset = "0xD2FFB8", VA = "0xD2FFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xD2656C", Offset = "0xD2656C", VA = "0xD2656C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xD3004C", Offset = "0xD3004C", VA = "0xD3004C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xD30054", Offset = "0xD30054", VA = "0xD30054")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000038")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xD301BC", Offset = "0xD301BC", VA = "0xD301BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xD30334", Offset = "0xD30334", VA = "0xD30334")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000039")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xD303A0", Offset = "0xD303A0", VA = "0xD303A0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xD304CC", Offset = "0xD304CC", VA = "0xD304CC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xD30828", Offset = "0xD30828", VA = "0xD30828")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xD30A5C", Offset = "0xD30A5C", VA = "0xD30A5C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xD30A88", Offset = "0xD30A88", VA = "0xD30A88")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200003A")]
public class OvrAvatarMaterialManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002E6")]
	public enum TextureType
	{
		[Token(Token = "0x4001151")]
		DiffuseTextures,
		[Token(Token = "0x4001152")]
		NormalMaps,
		[Token(Token = "0x4001153")]
		RoughnessMaps,
		[Token(Token = "0x4001154")]
		Count
	}

	[Token(Token = "0x20002E7")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20002E8")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20002E9")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20002EA")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xD71FAC", Offset = "0xD71FAC", VA = "0xD71FAC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E275C", Offset = "0x9E275C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700042A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001918")]
			[Address(RVA = "0xD33EA4", Offset = "0xD33EA4", VA = "0xD33EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xD33F14", Offset = "0xD33F14", VA = "0xD33F14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xD33100", Offset = "0xD33100", VA = "0xD33100")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xD3358C", Offset = "0xD3358C", VA = "0xD3358C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xD33590", Offset = "0xD33590", VA = "0xD33590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xD33EAC", Offset = "0xD33EAC", VA = "0xD33EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000133")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000134")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000135")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000136")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xD30B38", Offset = "0xD30B38", VA = "0xD30B38")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xD30D00", Offset = "0xD30D00", VA = "0xD30D00")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD30D3C", Offset = "0xD30D3C", VA = "0xD30D3C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xD31888", Offset = "0xD31888", VA = "0xD31888")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xD31908", Offset = "0xD31908", VA = "0xD31908")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xD30DD0", Offset = "0xD30DD0", VA = "0xD30DD0")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xD31970", Offset = "0xD31970", VA = "0xD31970")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xD314C4", Offset = "0xD314C4", VA = "0xD314C4")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xD31AAC", Offset = "0xD31AAC", VA = "0xD31AAC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xD31E48", Offset = "0xD31E48", VA = "0xD31E48")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xD31F78", Offset = "0xD31F78", VA = "0xD31F78")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xD31FB0", Offset = "0xD31FB0", VA = "0xD31FB0")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xD317F0", Offset = "0xD317F0", VA = "0xD317F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9CA8", Offset = "0x9E9CA8")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xD3312C", Offset = "0xD3312C", VA = "0xD3312C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200003B")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700001C")]
	public float Duration
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0xD71FB4", Offset = "0xD71FB4", VA = "0xD71FB4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001D")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0xD72054", Offset = "0xD72054", VA = "0xD72054")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xD72104", Offset = "0xD72104", VA = "0xD72104")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xD721C8", Offset = "0xD721C8", VA = "0xD721C8")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xD72318", Offset = "0xD72318", VA = "0xD72318")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xD723F4", Offset = "0xD723F4", VA = "0xD723F4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xD724D4", Offset = "0xD724D4", VA = "0xD724D4")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xD72708", Offset = "0xD72708", VA = "0xD72708")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xD72988", Offset = "0xD72988", VA = "0xD72988")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200003C")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000171")]
	[Address(RVA = "0xCFA590", Offset = "0xCFA590", VA = "0xCFA590")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xCFA6B4", Offset = "0xCFA6B4", VA = "0xCFA6B4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xCFA940", Offset = "0xCFA940", VA = "0xCFA940")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xCFA768", Offset = "0xCFA768", VA = "0xCFA768")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xCFA844", Offset = "0xCFA844", VA = "0xCFA844")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200003D")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000176")]
	[Address(RVA = "0xCFA100", Offset = "0xCFA100", VA = "0xCFA100")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xCFA524", Offset = "0xCFA524", VA = "0xCFA524")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xCFA2A8", Offset = "0xCFA2A8", VA = "0xCFA2A8")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xCFA33C", Offset = "0xCFA33C", VA = "0xCFA33C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xCFA400", Offset = "0xCFA400", VA = "0xCFA400")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200003E")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400013E")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400013F")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xD72BD4", Offset = "0xD72BD4", VA = "0xD72BD4")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xD72C68", Offset = "0xD72C68", VA = "0xD72C68", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xD72C84", Offset = "0xD72C84", VA = "0xD72C84")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xD72E88", Offset = "0xD72E88", VA = "0xD72E88")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xD730D4", Offset = "0xD730D4", VA = "0xD730D4")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarRenderComponent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xD7314C", Offset = "0xD7314C", VA = "0xD7314C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xD73294", Offset = "0xD73294", VA = "0xD73294")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xD73760", Offset = "0xD73760", VA = "0xD73760")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xD73B14", Offset = "0xD73B14", VA = "0xD73B14")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xD73C18", Offset = "0xD73C18", VA = "0xD73C18")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000040")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000148")]
	Body = 1,
	[Token(Token = "0x4000149")]
	Hands = 2,
	[Token(Token = "0x400014A")]
	Base = 4,
	[Token(Token = "0x400014B")]
	BodyTilt = 0x10,
	[Token(Token = "0x400014C")]
	Expressive = 0x20,
	[Token(Token = "0x400014D")]
	All = -1
}
[Token(Token = "0x2000041")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400014F")]
	AvatarSpecification,
	[Token(Token = "0x4000150")]
	AssetLoaded,
	[Token(Token = "0x4000151")]
	Count
}
[Token(Token = "0x2000042")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000043")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000044")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000157")]
	Mesh,
	[Token(Token = "0x4000158")]
	Texture,
	[Token(Token = "0x4000159")]
	Pose,
	[Token(Token = "0x400015A")]
	Material,
	[Token(Token = "0x400015B")]
	CombinedMesh,
	[Token(Token = "0x400015C")]
	PBSMaterial,
	[Token(Token = "0x400015D")]
	FailedLoad,
	[Token(Token = "0x400015E")]
	Count
}
[Token(Token = "0x2000045")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004A")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000193")]
	RGB24,
	[Token(Token = "0x4000194")]
	DXT1,
	[Token(Token = "0x4000195")]
	DXT5,
	[Token(Token = "0x4000196")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000197")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000198")]
	Count
}
[Token(Token = "0x200004B")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200004C")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001A0")]
	SkinnedMeshRender,
	[Token(Token = "0x40001A1")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001A2")]
	ProjectorRender,
	[Token(Token = "0x40001A3")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001A4")]
	Count
}
[Token(Token = "0x200004D")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001A6")]
	Unknown,
	[Token(Token = "0x40001A7")]
	Default,
	[Token(Token = "0x40001A8")]
	Verbose,
	[Token(Token = "0x40001A9")]
	Debug,
	[Token(Token = "0x40001AA")]
	Info,
	[Token(Token = "0x40001AB")]
	Warn,
	[Token(Token = "0x40001AC")]
	Error,
	[Token(Token = "0x40001AD")]
	Fatal,
	[Token(Token = "0x40001AE")]
	Silent
}
[Token(Token = "0x200004E")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200004F")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001B3")]
	One = 1,
	[Token(Token = "0x40001B4")]
	Two = 2,
	[Token(Token = "0x40001B5")]
	Three = 4,
	[Token(Token = "0x40001B6")]
	Joystick = 8
}
[Token(Token = "0x2000050")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001B8")]
	One = 1,
	[Token(Token = "0x40001B9")]
	Two = 2,
	[Token(Token = "0x40001BA")]
	Joystick = 4,
	[Token(Token = "0x40001BB")]
	ThumbRest = 8,
	[Token(Token = "0x40001BC")]
	Index = 0x10,
	[Token(Token = "0x40001BD")]
	Pointing = 0x40,
	[Token(Token = "0x40001BE")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000051")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000053")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000054")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000056")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000057")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000059")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001DE")]
	Add,
	[Token(Token = "0x40001DF")]
	Multiply,
	[Token(Token = "0x40001E0")]
	Count
}
[Token(Token = "0x200005A")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001E2")]
	Color,
	[Token(Token = "0x40001E3")]
	Texture,
	[Token(Token = "0x40001E4")]
	TextureSingleChannel,
	[Token(Token = "0x40001E5")]
	Parallax,
	[Token(Token = "0x40001E6")]
	Count
}
[Token(Token = "0x200005B")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001E8")]
	None,
	[Token(Token = "0x40001E9")]
	Positional,
	[Token(Token = "0x40001EA")]
	ViewReflection,
	[Token(Token = "0x40001EB")]
	Fresnel,
	[Token(Token = "0x40001EC")]
	Pulse,
	[Token(Token = "0x40001ED")]
	Count
}
[Token(Token = "0x200005C")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001EF")]
	Touch,
	[Token(Token = "0x40001F0")]
	Malibu,
	[Token(Token = "0x40001F1")]
	Go,
	[Token(Token = "0x40001F2")]
	Quest,
	[Token(Token = "0x40001F3")]
	Count
}
[Token(Token = "0x200005D")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001F5")]
	Lowest = 1,
	[Token(Token = "0x40001F6")]
	Medium = 3,
	[Token(Token = "0x40001F7")]
	Highest = 5
}
[Token(Token = "0x200005E")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001F9")]
	Unknown = -1,
	[Token(Token = "0x40001FA")]
	One,
	[Token(Token = "0x40001FB")]
	Two
}
[Token(Token = "0x200005F")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x12014C8", Offset = "0x12014C8", VA = "0x12014C8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xA9661C", Offset = "0xA9661C", VA = "0xA9661C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA96624", Offset = "0xA96624", VA = "0xA96624", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000060")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x12017F8", Offset = "0x12017F8", VA = "0x12017F8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xA968C4", Offset = "0xA968C4", VA = "0xA968C4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xA968CC", Offset = "0xA968CC", VA = "0xA968CC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000061")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1200B70", Offset = "0x1200B70", VA = "0x1200B70")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xA96364", Offset = "0xA96364", VA = "0xA96364", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xA9636C", Offset = "0xA9636C", VA = "0xA9636C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000062")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1DC4ABC", Offset = "0x1DC4ABC", VA = "0x1DC4ABC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xAB7148", Offset = "0xAB7148", VA = "0xAB7148", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xAB7150", Offset = "0xAB7150", VA = "0xAB7150", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000063")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xD2AB6C", Offset = "0xD2AB6C", VA = "0xD2AB6C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000064")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000065")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000230")]
	FirstPerson = 1,
	[Token(Token = "0x4000231")]
	ThirdPerson = 2,
	[Token(Token = "0x4000232")]
	SelfOccluding = 4
}
[Token(Token = "0x2000066")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000067")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000068")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006A")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000248")]
	Default,
	[Token(Token = "0x4000249")]
	GripSphere,
	[Token(Token = "0x400024A")]
	GripCube,
	[Token(Token = "0x400024B")]
	Count
}
[Token(Token = "0x200006B")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400024D")]
	Body,
	[Token(Token = "0x400024E")]
	Clothing,
	[Token(Token = "0x400024F")]
	Eyewear,
	[Token(Token = "0x4000250")]
	Hair,
	[Token(Token = "0x4000251")]
	Beard,
	[Token(Token = "0x4000252")]
	Count
}
[Token(Token = "0x200006C")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200006D")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200006E")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200006F")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000070")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400025C")]
	AvatarHead,
	[Token(Token = "0x400025D")]
	AvatarHand,
	[Token(Token = "0x400025E")]
	Object,
	[Token(Token = "0x400025F")]
	ObjectStatic,
	[Token(Token = "0x4000260")]
	Count
}
[Token(Token = "0x2000071")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000072")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000073")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000074")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000075")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400026C")]
	Point,
	[Token(Token = "0x400026D")]
	Direction,
	[Token(Token = "0x400026E")]
	Spot,
	[Token(Token = "0x400026F")]
	Count
}
[Token(Token = "0x2000076")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000077")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000078")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000079")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200007A")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000285")]
	None = 0u,
	[Token(Token = "0x4000286")]
	GazeTarget = 1u,
	[Token(Token = "0x4000287")]
	Any = uint.MaxValue
}
[Token(Token = "0x200007B")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200007C")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200007D")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200007E")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200007F")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000080")]
public class OvrAvatarSDKManager : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002EC")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xA85118", Offset = "0xA85118", VA = "0xA85118")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400029C")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700001E")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xD734F8", Offset = "0xD734F8", VA = "0xD734F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xD73C28", Offset = "0xD73C28", VA = "0xD73C28")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xD73E50", Offset = "0xD73E50", VA = "0xD73E50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xD73EC4", Offset = "0xD73EC4", VA = "0xD73EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xD74848", Offset = "0xD74848", VA = "0xD74848")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xD748B4", Offset = "0xD748B4", VA = "0xD748B4")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xD74920", Offset = "0xD74920", VA = "0xD74920")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xD74990", Offset = "0xD74990", VA = "0xD74990")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xD74A00", Offset = "0xD74A00", VA = "0xD74A00")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xD74644", Offset = "0xD74644", VA = "0xD74644")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xD74B24", Offset = "0xD74B24", VA = "0xD74B24")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xD74C60", Offset = "0xD74C60", VA = "0xD74C60")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xD736D8", Offset = "0xD736D8", VA = "0xD736D8")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xD74D5C", Offset = "0xD74D5C", VA = "0xD74D5C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xD73E28", Offset = "0xD73E28", VA = "0xD73E28")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xD74E60", Offset = "0xD74E60", VA = "0xD74E60")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xD74EE4", Offset = "0xD74EE4", VA = "0xD74EE4")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000081")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700001F")]
	public static string AppID
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xD74E08", Offset = "0xD74E08", VA = "0xD74E08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xD7503C", Offset = "0xD7503C", VA = "0xD7503C")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public static string MobileAppID
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xD74E34", Offset = "0xD74E34", VA = "0xD74E34")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xD7506C", Offset = "0xD7506C", VA = "0xD7506C")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xD74F28", Offset = "0xD74F28", VA = "0xD74F28")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xD7509C", Offset = "0xD7509C", VA = "0xD7509C")]
		set
		{
		}
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xD750F0", Offset = "0xD750F0", VA = "0xD750F0")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000082")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xD778DC", Offset = "0xD778DC", VA = "0xD778DC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xD77BC8", Offset = "0xD77BC8", VA = "0xD77BC8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xD77A30", Offset = "0xD77A30", VA = "0xD77A30")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xD77E14", Offset = "0xD77E14", VA = "0xD77E14")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000083")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xD77E24", Offset = "0xD77E24", VA = "0xD77E24")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xD77F74", Offset = "0xD77F74", VA = "0xD77F74")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xD7812C", Offset = "0xD7812C", VA = "0xD7812C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000084")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002AB")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002AC")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002AD")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xD75148", Offset = "0xD75148", VA = "0xD75148")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xD7690C", Offset = "0xD7690C", VA = "0xD7690C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xD76B58", Offset = "0xD76B58", VA = "0xD76B58")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xD75A1C", Offset = "0xD75A1C", VA = "0xD75A1C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xD755E4", Offset = "0xD755E4", VA = "0xD755E4")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xD757F8", Offset = "0xD757F8", VA = "0xD757F8")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xD778CC", Offset = "0xD778CC", VA = "0xD778CC")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000085")]
public class OvrAvatarTextureCopyManager : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002ED")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20002EE")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xA85190", Offset = "0xA85190", VA = "0xA85190")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20002EF")]
	public struct TextureSet
	{
		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xA85238", Offset = "0xA85238", VA = "0xA85238")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E276C", Offset = "0x9E276C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700042C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001921")]
			[Address(RVA = "0xD79D50", Offset = "0xD79D50", VA = "0xD79D50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0xD79DC0", Offset = "0xD79DC0", VA = "0xD79DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xD794F0", Offset = "0xD794F0", VA = "0xD794F0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xD79728", Offset = "0xD79728", VA = "0xD79728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xD7972C", Offset = "0xD7972C", VA = "0xD7972C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xD79D58", Offset = "0xD79D58", VA = "0xD79D58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002B1")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002B2")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002B5")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002B6")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002B7")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002B8")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002B9")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002BA")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002BB")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xD7886C", Offset = "0xD7886C", VA = "0xD7886C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xD78D34", Offset = "0xD78D34", VA = "0xD78D34")]
	public void Update()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xD78F6C", Offset = "0xD78F6C", VA = "0xD78F6C")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xD78FCC", Offset = "0xD78FCC", VA = "0xD78FCC")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xD78EDC", Offset = "0xD78EDC", VA = "0xD78EDC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xD79164", Offset = "0xD79164", VA = "0xD79164")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xD7937C", Offset = "0xD7937C", VA = "0xD7937C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xD7942C", Offset = "0xD7942C", VA = "0xD7942C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9DAC", Offset = "0x9E9DAC")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xD74AA4", Offset = "0xD74AA4", VA = "0xD74AA4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD7951C", Offset = "0xD7951C", VA = "0xD7951C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000086")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD79DC8", Offset = "0xD79DC8", VA = "0xD79DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD79F44", Offset = "0xD79F44", VA = "0xD79F44")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000087")]
public class EnableSwitch : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60001D8")]
	public bool SetActive<T>(int target) where T : UnityEngine.MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xC51C1C", Offset = "0xC51C1C", VA = "0xC51C1C")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000088")]
public class LipSyncDemo_Control : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E412C", Offset = "0x9E412C")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4164", Offset = "0x9E4164")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E419C", Offset = "0x9E419C")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB6CA10", Offset = "0xB6CA10", VA = "0xB6CA10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB6CA14", Offset = "0xB6CA14", VA = "0xB6CA14")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xB6CA94", Offset = "0xB6CA94", VA = "0xB6CA94")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB6CD08", Offset = "0xB6CD08", VA = "0xB6CD08")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000089")]
public class LipSyncDemo_SetCurrentTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB6CD30", Offset = "0xB6CD30", VA = "0xB6CD30")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB6CE74", Offset = "0xB6CE74", VA = "0xB6CE74")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB6D190", Offset = "0xB6D190", VA = "0xB6D190")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB6D5B4", Offset = "0xB6D5B4", VA = "0xB6D5B4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB6D604", Offset = "0xB6D604", VA = "0xB6D604")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200008A")]
public class OVRLipSyncDebugConsole : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000022")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xD3963C", Offset = "0xD3963C", VA = "0xD3963C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD39918", Offset = "0xD39918", VA = "0xD39918")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD39A54", Offset = "0xD39A54", VA = "0xD39A54")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xD39988", Offset = "0xD39988", VA = "0xD39988")]
	public void Init()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xD3748C", Offset = "0xD3748C", VA = "0xD3748C")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xD39BF0", Offset = "0xD39BF0", VA = "0xD39BF0")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xD3741C", Offset = "0xD3741C", VA = "0xD3741C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xD37540", Offset = "0xD37540", VA = "0xD37540")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xD39AEC", Offset = "0xD39AEC", VA = "0xD39AEC")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xD39C98", Offset = "0xD39C98", VA = "0xD39C98")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xD39CDC", Offset = "0xD39CDC", VA = "0xD39CDC")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD39F20", Offset = "0xD39F20", VA = "0xD39F20")]
	private void Prune()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xD39CEC", Offset = "0xD39CEC", VA = "0xD39CEC")]
	private void Display()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xD3A000", Offset = "0xD3A000", VA = "0xD3A000")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x200008B")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD3ABC8", Offset = "0xD3ABC8", VA = "0xD3ABC8")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x200008C")]
public static class OVRTouchpad
{
	[Token(Token = "0x20002F1")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001187")]
		SingleTap,
		[Token(Token = "0x4001188")]
		DoubleTap,
		[Token(Token = "0x4001189")]
		Left,
		[Token(Token = "0x400118A")]
		Right,
		[Token(Token = "0x400118B")]
		Up,
		[Token(Token = "0x400118C")]
		Down
	}

	[Token(Token = "0x20002F2")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD361D0", Offset = "0xD361D0", VA = "0xD361D0")]
	public static void Create()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD3DE48", Offset = "0xD3DE48", VA = "0xD3DE48")]
	public static void Update()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xD3E17C", Offset = "0xD3E17C", VA = "0xD3E17C")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xD3DFB8", Offset = "0xD3DFB8", VA = "0xD3DFB8")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xD36F6C", Offset = "0xD36F6C", VA = "0xD36F6C")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200008D")]
public sealed class OVRTouchpadHelper : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xD3E230", Offset = "0xD3E230", VA = "0xD3E230")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xD3E2AC", Offset = "0xD3E2AC", VA = "0xD3E2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xD3E344", Offset = "0xD3E344", VA = "0xD3E344")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xD3E3A0", Offset = "0xD3E3A0", VA = "0xD3E3A0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xD3E404", Offset = "0xD3E404", VA = "0xD3E404")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xD3E408", Offset = "0xD3E408", VA = "0xD3E408")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200008E")]
public class OVRLipSync : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002F3")]
	public enum Result
	{
		[Token(Token = "0x400118E")]
		Success = 0,
		[Token(Token = "0x400118F")]
		Unknown = -2200,
		[Token(Token = "0x4001190")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001191")]
		InvalidParam = -2202,
		[Token(Token = "0x4001192")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001193")]
		MissingDLL = -2204,
		[Token(Token = "0x4001194")]
		BadVersion = -2205,
		[Token(Token = "0x4001195")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20002F4")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001197")]
		S16_Mono,
		[Token(Token = "0x4001198")]
		S16_Stereo,
		[Token(Token = "0x4001199")]
		F32_Mono,
		[Token(Token = "0x400119A")]
		F32_Stereo
	}

	[Token(Token = "0x20002F5")]
	public enum Viseme
	{
		[Token(Token = "0x400119C")]
		sil,
		[Token(Token = "0x400119D")]
		PP,
		[Token(Token = "0x400119E")]
		FF,
		[Token(Token = "0x400119F")]
		TH,
		[Token(Token = "0x40011A0")]
		DD,
		[Token(Token = "0x40011A1")]
		kk,
		[Token(Token = "0x40011A2")]
		CH,
		[Token(Token = "0x40011A3")]
		SS,
		[Token(Token = "0x40011A4")]
		nn,
		[Token(Token = "0x40011A5")]
		RR,
		[Token(Token = "0x40011A6")]
		aa,
		[Token(Token = "0x40011A7")]
		E,
		[Token(Token = "0x40011A8")]
		ih,
		[Token(Token = "0x40011A9")]
		oh,
		[Token(Token = "0x40011AA")]
		ou
	}

	[Token(Token = "0x20002F6")]
	public enum Signals
	{
		[Token(Token = "0x40011AC")]
		VisemeOn,
		[Token(Token = "0x40011AD")]
		VisemeOff,
		[Token(Token = "0x40011AE")]
		VisemeAmount,
		[Token(Token = "0x40011AF")]
		VisemeSmoothing,
		[Token(Token = "0x40011B0")]
		LaughterAmount
	}

	[Token(Token = "0x20002F7")]
	public enum ContextProviders
	{
		[Token(Token = "0x40011B2")]
		Original,
		[Token(Token = "0x40011B3")]
		Enhanced,
		[Token(Token = "0x40011B4")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20002F8")]
	public class Frame
	{
		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xD36C80", Offset = "0xD36C80", VA = "0xD36C80")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xD36D20", Offset = "0xD36D20", VA = "0xD36D20")]
		public void Reset()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xD36DB0", Offset = "0xD36DB0", VA = "0xD36DB0")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002D6")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xD35770", Offset = "0xD35770", VA = "0xD35770")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000200")]
	[Address(RVA = "0xD3581C", Offset = "0xD3581C", VA = "0xD3581C")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000201")]
	[Address(RVA = "0xD358A8", Offset = "0xD358A8", VA = "0xD358A8")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000202")]
	[Address(RVA = "0xD35958", Offset = "0xD35958", VA = "0xD35958")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000203")]
	[Address(RVA = "0xD35A1C", Offset = "0xD35A1C", VA = "0xD35A1C")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000204")]
	[Address(RVA = "0xD35B04", Offset = "0xD35B04", VA = "0xD35B04")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000205")]
	[Address(RVA = "0xD35BA0", Offset = "0xD35BA0", VA = "0xD35BA0")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000206")]
	[Address(RVA = "0xD35C3C", Offset = "0xD35C3C", VA = "0xD35C3C")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000207")]
	[Address(RVA = "0xD35D00", Offset = "0xD35D00", VA = "0xD35D00")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xD35E18", Offset = "0xD35E18", VA = "0xD35E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xD361D4", Offset = "0xD361D4", VA = "0xD361D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xD36098", Offset = "0xD36098", VA = "0xD36098")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xD362B4", Offset = "0xD362B4", VA = "0xD362B4")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xD363C8", Offset = "0xD363C8", VA = "0xD363C8")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xD36030", Offset = "0xD36030", VA = "0xD36030")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xD36438", Offset = "0xD36438", VA = "0xD36438")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xD3651C", Offset = "0xD3651C", VA = "0xD3651C")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xD36608", Offset = "0xD36608", VA = "0xD36608")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xD3669C", Offset = "0xD3669C", VA = "0xD3669C")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xD36730", Offset = "0xD36730", VA = "0xD36730")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xD367F4", Offset = "0xD367F4", VA = "0xD367F4")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xD369AC", Offset = "0xD369AC", VA = "0xD369AC")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xD36B5C", Offset = "0xD36B5C", VA = "0xD36B5C")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1214", Offset = "0x9E1214")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E41D4", Offset = "0x9E41D4")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E420C", Offset = "0x9E420C")]
	public bool enableTouchInput;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4244", Offset = "0x9E4244")]
	public bool audioLoopback;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E427C", Offset = "0x9E427C")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E42B4", Offset = "0x9E42B4")]
	public bool showVisemes;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E42EC", Offset = "0x9E42EC")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4324", Offset = "0x9E4324")]
	public bool skipAudioSource;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E435C", Offset = "0x9E435C")]
	public float gain;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xD36E38", Offset = "0xD36E38", VA = "0xD36E38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xD37038", Offset = "0xD37038", VA = "0xD37038")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xD375C4", Offset = "0xD375C4", VA = "0xD375C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xD378D8", Offset = "0xD378D8", VA = "0xD378D8")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xD37978", Offset = "0xD37978", VA = "0xD37978")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xD37A1C", Offset = "0xD37A1C", VA = "0xD37A1C")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xD37B58", Offset = "0xD37B58", VA = "0xD37B58")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xD37C8C", Offset = "0xD37C8C", VA = "0xD37C8C")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xD37D70", Offset = "0xD37D70", VA = "0xD37D70")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xD37614", Offset = "0xD37614", VA = "0xD37614")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xD37348", Offset = "0xD37348", VA = "0xD37348")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xD37D80", Offset = "0xD37D80", VA = "0xD37D80")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xD37EAC", Offset = "0xD37EAC", VA = "0xD37EAC")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1278", Offset = "0x9E1278")]
public class OVRLipSyncContextBase : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4394", Offset = "0x9E4394")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E43CC", Offset = "0x9E43CC")]
	public bool enableAcceleration;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000023")]
	public int Smoothing
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xD3802C", Offset = "0xD3802C", VA = "0xD3802C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xD37F40", Offset = "0xD37F40", VA = "0xD37F40")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public uint Context
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xD37B50", Offset = "0xD37B50", VA = "0xD37B50")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000025")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0xD3760C", Offset = "0xD3760C", VA = "0xD3760C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xD38034", Offset = "0xD38034", VA = "0xD38034")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xD381CC", Offset = "0xD381CC", VA = "0xD381CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xD382F0", Offset = "0xD382F0", VA = "0xD382F0")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xD382F8", Offset = "0xD382F8", VA = "0xD382F8")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xD383EC", Offset = "0xD383EC", VA = "0xD383EC")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xD384B4", Offset = "0xD384B4", VA = "0xD384B4")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xD37ED0", Offset = "0xD37ED0", VA = "0xD37ED0")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000091")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E12DC", Offset = "0x9E12DC")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4404", Offset = "0x9E4404")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xD38534", Offset = "0xD38534", VA = "0xD38534")]
	private void Update()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xD38740", Offset = "0xD38740", VA = "0xD38740")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000092")]
public class OVRLipSyncContextMorphTarget : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E443C", Offset = "0x9E443C")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4474", Offset = "0x9E4474")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E44AC", Offset = "0x9E44AC")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E44E4", Offset = "0x9E44E4")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E451C", Offset = "0x9E451C")]
	public KeyCode laughterKey;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4554", Offset = "0x9E4554")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E458C", Offset = "0x9E458C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E458C", Offset = "0x9E458C")]
	public float laughterThreshold;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E45E0", Offset = "0x9E45E0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E45E0", Offset = "0x9E45E0")]
	public float laughterMultiplier;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E4634", Offset = "0x9E4634")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4634", Offset = "0x9E4634")]
	public int smoothAmount;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xD38744", Offset = "0xD38744", VA = "0xD38744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xD38894", Offset = "0xD38894", VA = "0xD38894")]
	private void Update()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xD38C10", Offset = "0xD38C10", VA = "0xD38C10")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xD389C8", Offset = "0xD389C8", VA = "0xD389C8")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xD38B0C", Offset = "0xD38B0C", VA = "0xD38B0C")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xD38CF4", Offset = "0xD38CF4", VA = "0xD38CF4")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xD38E18", Offset = "0xD38E18", VA = "0xD38E18")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xD38E94", Offset = "0xD38E94", VA = "0xD38E94")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000093")]
public class OVRLipSyncContextTextureFlip : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E468C", Offset = "0x9E468C")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x9E468C", Offset = "0x9E468C")]
	public Texture[] Textures;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E4808", Offset = "0x9E4808")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4808", Offset = "0x9E4808")]
	public int smoothAmount;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xD38F8C", Offset = "0xD38F8C", VA = "0xD38F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xD390EC", Offset = "0xD390EC", VA = "0xD390EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xD39390", Offset = "0xD39390", VA = "0xD39390")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD39590", Offset = "0xD39590", VA = "0xD39590")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1340", Offset = "0x9E1340")]
public class OVRLipSyncMicInput : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	public enum micActivation
	{
		[Token(Token = "0x40011BA")]
		HoldToSpeak,
		[Token(Token = "0x40011BB")]
		PushToSpeak,
		[Token(Token = "0x40011BC")]
		ConstantSpeak
	}

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4860", Offset = "0x9E4860")]
	public AudioSource audioSource;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4898", Offset = "0x9E4898")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E48D0", Offset = "0x9E48D0")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E4908", Offset = "0x9E4908")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4908", Offset = "0x9E4908")]
	private float micInputVolume;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4970", Offset = "0x9E4970")]
	private int micFrequency;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E49BC", Offset = "0x9E49BC")]
	public micActivation micControl;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E49F4", Offset = "0x9E49F4")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4A2C", Offset = "0x9E4A2C")]
	public string selectedDevice;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000026")]
	public float MicFrequency
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0xD3A074", Offset = "0xD3A074", VA = "0xD3A074")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xD3A080", Offset = "0xD3A080", VA = "0xD3A080")]
		set
		{
		}
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xD3A10C", Offset = "0xD3A10C", VA = "0xD3A10C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xD3A1CC", Offset = "0xD3A1CC", VA = "0xD3A1CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xD3A22C", Offset = "0xD3A22C", VA = "0xD3A22C")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xD3A398", Offset = "0xD3A398", VA = "0xD3A398")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xD3A850", Offset = "0xD3A850", VA = "0xD3A850")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xD3A864", Offset = "0xD3A864", VA = "0xD3A864")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD3A87C", Offset = "0xD3A87C", VA = "0xD3A87C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xD3A880", Offset = "0xD3A880", VA = "0xD3A880")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xD3A8F8", Offset = "0xD3A8F8", VA = "0xD3A8F8")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xD3A2D0", Offset = "0xD3A2D0", VA = "0xD3A2D0")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD3A688", Offset = "0xD3A688", VA = "0xD3A688")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD3A508", Offset = "0xD3A508", VA = "0xD3A508")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xD3AB20", Offset = "0xD3AB20", VA = "0xD3AB20")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xD3AB28", Offset = "0xD3AB28", VA = "0xD3AB28")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000095")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xD38648", Offset = "0xD38648", VA = "0xD38648")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xD3AB58", Offset = "0xD3AB58", VA = "0xD3AB58")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000096")]
public class DebugUIBuilder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	public delegate void OnClick();

	[Token(Token = "0x20002FB")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20002FC")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20002FD")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E277C", Offset = "0x9E277C")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xC4E604", Offset = "0xC4E604", VA = "0xC4E604")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xC4F23C", Offset = "0xC4F23C", VA = "0xC4F23C")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E278C", Offset = "0x9E278C")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xC4E908", Offset = "0xC4E908", VA = "0xC4E908")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xC4F484", Offset = "0xC4F484", VA = "0xC4F484")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E279C", Offset = "0x9E279C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xC4EB54", Offset = "0xC4EB54", VA = "0xC4EB54")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xC4F70C", Offset = "0xC4F70C", VA = "0xC4F70C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E27AC", Offset = "0x9E27AC")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xC4ED28", Offset = "0xC4ED28", VA = "0xC4ED28")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xC4FAF0", Offset = "0xC4FAF0", VA = "0xC4FAF0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E27BC", Offset = "0x9E27BC")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xC4F004", Offset = "0xC4F004", VA = "0xC4F004")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xC4FB20", Offset = "0xC4FB20", VA = "0xC4FB20")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400030A")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400030B")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400030C")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400031A")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400031B")]
	private const float marginH = 16f;

	[Token(Token = "0x400031C")]
	private const float marginV = 16f;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xC4D088", Offset = "0xC4D088", VA = "0xC4D088")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xC4D5B0", Offset = "0xC4D5B0", VA = "0xC4D5B0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xC4DDBC", Offset = "0xC4DDBC", VA = "0xC4DDBC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xC4DABC", Offset = "0xC4DABC", VA = "0xC4DABC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xC4DFB0", Offset = "0xC4DFB0", VA = "0xC4DFB0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xC4E36C", Offset = "0xC4E36C", VA = "0xC4E36C")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xC4E60C", Offset = "0xC4E60C", VA = "0xC4E60C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xC4E714", Offset = "0xC4E714", VA = "0xC4E714")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xC4E910", Offset = "0xC4E910", VA = "0xC4E910")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xC4E9AC", Offset = "0xC4E9AC", VA = "0xC4E9AC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xC4EB5C", Offset = "0xC4EB5C", VA = "0xC4EB5C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xC4ED30", Offset = "0xC4ED30", VA = "0xC4ED30")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xC4F00C", Offset = "0xC4F00C", VA = "0xC4F00C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xC4F10C", Offset = "0xC4F10C", VA = "0xC4F10C")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xC4F1CC", Offset = "0xC4F1CC", VA = "0xC4F1CC")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000097")]
public class HandedInputSelector : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xC5EEB0", Offset = "0xC5EEB0", VA = "0xC5EEB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xC5EF38", Offset = "0xC5EF38", VA = "0xC5EF38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xC5EFB8", Offset = "0xC5EFB8", VA = "0xC5EFB8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xC5F028", Offset = "0xC5F028", VA = "0xC5F028")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000098")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000303")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40011C6")]
		On,
		[Token(Token = "0x40011C7")]
		Off,
		[Token(Token = "0x40011C8")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000027")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xB6C0A0", Offset = "0xB6C0A0", VA = "0xB6C0A0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xB6C044", Offset = "0xB6C044", VA = "0xB6C044")]
		set
		{
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xB6C0A8", Offset = "0xB6C0A8", VA = "0xB6C0A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xB6C100", Offset = "0xB6C100", VA = "0xB6C100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xB6C220", Offset = "0xB6C220", VA = "0xB6C220", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xB6C23C", Offset = "0xB6C23C", VA = "0xB6C23C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xB6C2B4", Offset = "0xB6C2B4", VA = "0xB6C2B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xB6C598", Offset = "0xB6C598", VA = "0xB6C598")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xB6C6F4", Offset = "0xB6C6F4", VA = "0xB6C6F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xB6C790", Offset = "0xB6C790", VA = "0xB6C790")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xB6C874", Offset = "0xB6C874", VA = "0xB6C874")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xB6C934", Offset = "0xB6C934", VA = "0xB6C934")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xB6CA00", Offset = "0xB6CA00", VA = "0xB6CA00")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000099")]
public class CharacterCameraConstraint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000330")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000331")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000332")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4B14", Offset = "0x9E4B14")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4B4C", Offset = "0x9E4B4C")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4B84", Offset = "0x9E4B84")]
	public float HeightOffset;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4BBC", Offset = "0x9E4BBC")]
	public float MinimumHeight;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4BF4", Offset = "0x9E4BF4")]
	public float MaximumHeight;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xCFC2C8", Offset = "0xCFC2C8", VA = "0xCFC2C8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xCFC2D0", Offset = "0xCFC2D0", VA = "0xCFC2D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xCFC340", Offset = "0xCFC340", VA = "0xCFC340")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xCFC3D0", Offset = "0xCFC3D0", VA = "0xCFC3D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xCFC460", Offset = "0xCFC460", VA = "0xCFC460")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xCFC898", Offset = "0xCFC898", VA = "0xCFC898")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xCFCBFC", Offset = "0xCFCBFC", VA = "0xCFCBFC")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200009A")]
public class LocomotionController : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xB7070C", Offset = "0xB7070C", VA = "0xB7070C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xB707B8", Offset = "0xB707B8", VA = "0xB707B8")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200009B")]
public class LocomotionTeleport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000304")]
	public enum States
	{
		[Token(Token = "0x40011CA")]
		Ready,
		[Token(Token = "0x40011CB")]
		Aim,
		[Token(Token = "0x40011CC")]
		CancelAim,
		[Token(Token = "0x40011CD")]
		PreTeleport,
		[Token(Token = "0x40011CE")]
		CancelTeleport,
		[Token(Token = "0x40011CF")]
		Teleporting,
		[Token(Token = "0x40011D0")]
		PostTeleport
	}

	[Token(Token = "0x2000305")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40011D2")]
		None,
		[Token(Token = "0x40011D3")]
		Aim,
		[Token(Token = "0x40011D4")]
		PreTeleport,
		[Token(Token = "0x40011D5")]
		Teleport
	}

	[Token(Token = "0x2000306")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40011D7")]
		Point,
		[Token(Token = "0x40011D8")]
		Sphere,
		[Token(Token = "0x40011D9")]
		Capsule
	}

	[Token(Token = "0x2000307")]
	public class AimData
	{
		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E999C", Offset = "0x9E999C")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700042E")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0xB74184", Offset = "0xB74184", VA = "0xB74184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1B8C", Offset = "0x9F1B8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001947")]
			[Address(RVA = "0xB7417C", Offset = "0xB7417C", VA = "0xB7417C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1B9C", Offset = "0x9F1B9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xB74108", Offset = "0xB74108", VA = "0xB74108")]
		public AimData()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xB7418C", Offset = "0xB7418C", VA = "0xB7418C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E27CC", Offset = "0x9E27CC")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700042F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xB73EE4", Offset = "0xB73EE4", VA = "0xB73EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000430")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0xB73F54", Offset = "0xB73F54", VA = "0xB73F54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xB72000", Offset = "0xB72000", VA = "0xB72000")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0xB73D78", Offset = "0xB73D78", VA = "0xB73D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xB73D7C", Offset = "0xB73D7C", VA = "0xB73D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xB73EEC", Offset = "0xB73EEC", VA = "0xB73EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E27DC", Offset = "0x9E27DC")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000431")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0xB736B4", Offset = "0xB736B4", VA = "0xB736B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000432")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001954")]
			[Address(RVA = "0xB73724", Offset = "0xB73724", VA = "0xB73724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xB72504", Offset = "0xB72504", VA = "0xB72504")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xB734E8", Offset = "0xB734E8", VA = "0xB734E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xB734EC", Offset = "0xB734EC", VA = "0xB734EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xB736BC", Offset = "0xB736BC", VA = "0xB736BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E27EC", Offset = "0x9E27EC")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000433")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xB73808", Offset = "0xB73808", VA = "0xB73808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000434")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0xB73878", Offset = "0xB73878", VA = "0xB73878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xB726F4", Offset = "0xB726F4", VA = "0xB726F4")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xB7372C", Offset = "0xB7372C", VA = "0xB7372C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xB73730", Offset = "0xB73730", VA = "0xB73730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xB73810", Offset = "0xB73810", VA = "0xB73810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E27FC", Offset = "0x9E27FC")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000435")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xB73D00", Offset = "0xB73D00", VA = "0xB73D00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001960")]
			[Address(RVA = "0xB73D70", Offset = "0xB73D70", VA = "0xB73D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xB728E4", Offset = "0xB728E4", VA = "0xB728E4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xB73BB4", Offset = "0xB73BB4", VA = "0xB73BB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xB73BB8", Offset = "0xB73BB8", VA = "0xB73BB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xB73D08", Offset = "0xB73D08", VA = "0xB73D08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E280C", Offset = "0x9E280C")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000437")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0xB7395C", Offset = "0xB7395C", VA = "0xB7395C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000438")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xB739CC", Offset = "0xB739CC", VA = "0xB739CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xB72AD4", Offset = "0xB72AD4", VA = "0xB72AD4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xB73880", Offset = "0xB73880", VA = "0xB73880", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xB73884", Offset = "0xB73884", VA = "0xB73884", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xB73964", Offset = "0xB73964", VA = "0xB73964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E281C", Offset = "0x9E281C")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000439")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0xB74090", Offset = "0xB74090", VA = "0xB74090", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0xB74100", Offset = "0xB74100", VA = "0xB74100", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xB72CC4", Offset = "0xB72CC4", VA = "0xB72CC4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xB73F5C", Offset = "0xB73F5C", VA = "0xB73F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xB73F60", Offset = "0xB73F60", VA = "0xB73F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xB74098", Offset = "0xB74098", VA = "0xB74098", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E282C", Offset = "0x9E282C")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700043B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0xB73B3C", Offset = "0xB73B3C", VA = "0xB73B3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001972")]
			[Address(RVA = "0xB73BAC", Offset = "0xB73BAC", VA = "0xB73BAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xB72EB4", Offset = "0xB72EB4", VA = "0xB72EB4")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xB739D4", Offset = "0xB739D4", VA = "0xB739D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xB739D8", Offset = "0xB739D8", VA = "0xB739D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xB73B44", Offset = "0xB73B44", VA = "0xB73B44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4C2C", Offset = "0x9E4C2C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4C64", Offset = "0x9E4C64")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4C9C", Offset = "0x9E4C9C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4CD4", Offset = "0x9E4CD4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4D0C", Offset = "0x9E4D0C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4D44", Offset = "0x9E4D44")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4D7C", Offset = "0x9E4D7C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4DB4", Offset = "0x9E4DB4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4DEC", Offset = "0x9E4DEC")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4DFC", Offset = "0x9E4DFC")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4E34", Offset = "0x9E4E34")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E4E7C", Offset = "0x9E4E7C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4E8C", Offset = "0x9E4E8C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4EC4", Offset = "0x9E4EC4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4EFC", Offset = "0x9E4EFC")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E4F34", Offset = "0x9E4F34")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000028")]
	public States CurrentState
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xB71418", Offset = "0xB71418", VA = "0xB71418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E10", Offset = "0x9E9E10")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xB71420", Offset = "0xB71420", VA = "0xB71420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E20", Offset = "0x9E9E20")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xB71658", Offset = "0xB71658", VA = "0xB71658")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700002A")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xB71698", Offset = "0xB71698", VA = "0xB71698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E50", Offset = "0x9E9E50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xB716A0", Offset = "0xB716A0", VA = "0xB716A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E60", Offset = "0x9E9E60")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xB71428", Offset = "0xB71428", VA = "0xB71428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E30", Offset = "0x9E9E30")]
		add
		{
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xB714D0", Offset = "0xB714D0", VA = "0xB714D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9E40", Offset = "0x9E9E40")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xB71EB0", Offset = "0xB71EB0", VA = "0xB71EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9EA8", Offset = "0x9E9EA8")]
		add
		{
		}
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xB71F58", Offset = "0xB71F58", VA = "0xB71F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9EB8", Offset = "0x9E9EB8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xB7202C", Offset = "0xB7202C", VA = "0xB7202C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9F2C", Offset = "0x9E9F2C")]
		add
		{
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xB720D4", Offset = "0xB720D4", VA = "0xB720D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9F3C", Offset = "0x9E9F3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xB7217C", Offset = "0xB7217C", VA = "0xB7217C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9F4C", Offset = "0x9E9F4C")]
		add
		{
		}
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xB72224", Offset = "0xB72224", VA = "0xB72224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9F5C", Offset = "0x9E9F5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xB72340", Offset = "0xB72340", VA = "0xB72340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9F6C", Offset = "0x9E9F6C")]
		add
		{
		}
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xB723E8", Offset = "0xB723E8", VA = "0xB723E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9F7C", Offset = "0x9E9F7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xB72530", Offset = "0xB72530", VA = "0xB72530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9FF0", Offset = "0x9E9FF0")]
		add
		{
		}
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xB725D8", Offset = "0xB725D8", VA = "0xB725D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA000", Offset = "0x9EA000")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xB72720", Offset = "0xB72720", VA = "0xB72720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA074", Offset = "0x9EA074")]
		add
		{
		}
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xB727C8", Offset = "0xB727C8", VA = "0xB727C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA084", Offset = "0x9EA084")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xB72910", Offset = "0xB72910", VA = "0xB72910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA0F8", Offset = "0x9EA0F8")]
		add
		{
		}
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xB729B8", Offset = "0xB729B8", VA = "0xB729B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA108", Offset = "0x9EA108")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xB72B00", Offset = "0xB72B00", VA = "0xB72B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA17C", Offset = "0x9EA17C")]
		add
		{
		}
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xB72BA8", Offset = "0xB72BA8", VA = "0xB72BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA18C", Offset = "0x9EA18C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xB72CF0", Offset = "0xB72CF0", VA = "0xB72CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA200", Offset = "0x9EA200")]
		add
		{
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xB72D98", Offset = "0xB72D98", VA = "0xB72D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA210", Offset = "0x9EA210")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xB72EE0", Offset = "0xB72EE0", VA = "0xB72EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA284", Offset = "0x9EA284")]
		add
		{
		}
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xB72F88", Offset = "0xB72F88", VA = "0xB72F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA294", Offset = "0x9EA294")]
		remove
		{
		}
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xB71030", Offset = "0xB71030", VA = "0xB71030")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xB71054", Offset = "0xB71054", VA = "0xB71054")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xB71578", Offset = "0xB71578", VA = "0xB71578")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xB716A8", Offset = "0xB716A8", VA = "0xB716A8")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xB71A50", Offset = "0xB71A50", VA = "0xB71A50")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9E9E70", Offset = "0x9E9E70")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xB71B08", Offset = "0xB71B08", VA = "0xB71B08")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xB71C30", Offset = "0xB71C30", VA = "0xB71C30")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xB71C60", Offset = "0xB71C60", VA = "0xB71C60")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xB71D2C", Offset = "0xB71D2C", VA = "0xB71D2C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xB71DA8", Offset = "0xB71DA8", VA = "0xB71DA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xB71E04", Offset = "0xB71E04", VA = "0xB71E04", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xB71EA8", Offset = "0xB71EA8", VA = "0xB71EA8", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xB71E34", Offset = "0xB71E34", VA = "0xB71E34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9EC8", Offset = "0x9E9EC8")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xB722CC", Offset = "0xB722CC", VA = "0xB722CC")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xB72490", Offset = "0xB72490", VA = "0xB72490")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9E9F8C", Offset = "0x9E9F8C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xB72680", Offset = "0xB72680", VA = "0xB72680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA010", Offset = "0x9EA010")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xB72870", Offset = "0xB72870", VA = "0xB72870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA094", Offset = "0x9EA094")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xB72A60", Offset = "0xB72A60", VA = "0xB72A60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA118", Offset = "0x9EA118")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xB72C50", Offset = "0xB72C50", VA = "0xB72C50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA19C", Offset = "0x9EA19C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB72E40", Offset = "0xB72E40", VA = "0xB72E40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA220", Offset = "0x9EA220")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xB73030", Offset = "0xB73030", VA = "0xB73030")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xB731D4", Offset = "0xB731D4", VA = "0xB731D4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xB7322C", Offset = "0xB7322C", VA = "0xB7322C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xB73348", Offset = "0xB73348", VA = "0xB73348")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xB734D8", Offset = "0xB734D8", VA = "0xB734D8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200009C")]
public class SimpleCapsuleWithStickMovement : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xC0D960", Offset = "0xC0D960", VA = "0xC0D960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA2A4", Offset = "0x9EA2A4")]
		add
		{
		}
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xC0DA08", Offset = "0xC0DA08", VA = "0xC0DA08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA2B4", Offset = "0x9EA2B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xC0DAB0", Offset = "0xC0DAB0", VA = "0xC0DAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA2C4", Offset = "0x9EA2C4")]
		add
		{
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xC0DB58", Offset = "0xC0DB58", VA = "0xC0DB58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA2D4", Offset = "0x9EA2D4")]
		remove
		{
		}
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xC0DC00", Offset = "0xC0DC00", VA = "0xC0DC00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xC0DCA8", Offset = "0xC0DCA8", VA = "0xC0DCA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xC0DCAC", Offset = "0xC0DCAC", VA = "0xC0DCAC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xC0DD20", Offset = "0xC0DD20", VA = "0xC0DD20")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xC0DF28", Offset = "0xC0DF28", VA = "0xC0DF28")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xC0E250", Offset = "0xC0E250", VA = "0xC0E250")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xC0E470", Offset = "0xC0E470", VA = "0xC0E470")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200009D")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xC38E10", Offset = "0xC38E10", VA = "0xC38E10", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xC38EB0", Offset = "0xC38EB0", VA = "0xC38EB0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002B9")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xC38F8C", Offset = "0xC38F8C", VA = "0xC38F8C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E502C", Offset = "0x9E502C")]
	public float Range;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xC38F9C", Offset = "0xC38F9C", VA = "0xC38F9C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xC3914C", Offset = "0xC3914C", VA = "0xC3914C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5064", Offset = "0x9E5064")]
	public float Range;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E509C", Offset = "0x9E509C")]
	public float MinimumElevation;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E50D4", Offset = "0x9E50D4")]
	public float Gravity;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E510C", Offset = "0x9E510C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E510C", Offset = "0x9E510C")]
	public float AimVelocity;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5168", Offset = "0x9E5168")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E5168", Offset = "0x9E5168")]
	public float AimStep;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xC3915C", Offset = "0xC3915C", VA = "0xC3915C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xC393C0", Offset = "0xC393C0", VA = "0xC393C0")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E51C0", Offset = "0x9E51C0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xC393D4", Offset = "0xC393D4", VA = "0xC393D4")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xC394B8", Offset = "0xC394B8", VA = "0xC394B8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xC39504", Offset = "0xC39504", VA = "0xC39504")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xC39550", Offset = "0xC39550", VA = "0xC39550")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xC39604", Offset = "0xC39604", VA = "0xC39604", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xC396A4", Offset = "0xC396A4", VA = "0xC396A4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xC39740", Offset = "0xC39740", VA = "0xC39740")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportDestination : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E51F8", Offset = "0x9E51F8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5208", Offset = "0x9E5208")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5240", Offset = "0x9E5240")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5278", Offset = "0x9E5278")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002B")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xC398FC", Offset = "0xC398FC", VA = "0xC398FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA2E4", Offset = "0x9EA2E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xC39904", Offset = "0xC39904", VA = "0xC39904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA2F4", Offset = "0x9EA2F4")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xC39B14", Offset = "0xC39B14", VA = "0xC39B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA304", Offset = "0x9EA304")]
		add
		{
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xC39BBC", Offset = "0xC39BBC", VA = "0xC39BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA314", Offset = "0x9EA314")]
		remove
		{
		}
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xC39910", Offset = "0xC39910", VA = "0xC39910")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xC399A0", Offset = "0xC399A0", VA = "0xC399A0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xC39ABC", Offset = "0xC39ABC", VA = "0xC39ABC")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xC39B10", Offset = "0xC39B10", VA = "0xC39B10")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xC39C64", Offset = "0xC39C64", VA = "0xC39C64")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xC39CCC", Offset = "0xC39CCC", VA = "0xC39CCC")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xC39D04", Offset = "0xC39D04", VA = "0xC39D04", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000A2")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200030F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E283C", Offset = "0x9E283C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700043D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001976")]
			[Address(RVA = "0xC3A55C", Offset = "0xC3A55C", VA = "0xC3A55C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001978")]
			[Address(RVA = "0xC3A5CC", Offset = "0xC3A5CC", VA = "0xC3A5CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xC3A274", Offset = "0xC3A274", VA = "0xC3A274")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xC3A4C0", Offset = "0xC3A4C0", VA = "0xC3A4C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xC3A4C4", Offset = "0xC3A4C4", VA = "0xC3A4C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xC3A564", Offset = "0xC3A564", VA = "0xC3A564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E284C", Offset = "0x9E284C")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700043F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0xC3A448", Offset = "0xC3A448", VA = "0xC3A448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000440")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0xC3A4B8", Offset = "0xC3A4B8", VA = "0xC3A4B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xC3A314", Offset = "0xC3A314", VA = "0xC3A314")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xC3A398", Offset = "0xC3A398", VA = "0xC3A398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xC3A39C", Offset = "0xC3A39C", VA = "0xC3A39C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xC3A450", Offset = "0xC3A450", VA = "0xC3A450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xC39FE0", Offset = "0xC39FE0", VA = "0xC39FE0")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xC3A08C", Offset = "0xC3A08C", VA = "0xC3A08C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xC3A110", Offset = "0xC3A110", VA = "0xC3A110", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC3A200", Offset = "0xC3A200", VA = "0xC3A200")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA324", Offset = "0x9EA324")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC3A2A0", Offset = "0xC3A2A0", VA = "0xC3A2A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA388", Offset = "0x9EA388")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D6")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002D7")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xC3A340", Offset = "0xC3A340", VA = "0xC3A340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA3EC", Offset = "0x9EA3EC")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xC3A36C", Offset = "0xC3A36C", VA = "0xC3A36C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA3FC", Offset = "0x9EA3FC")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000A3")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E52C0", Offset = "0x9E52C0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E52D0", Offset = "0x9E52D0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5308", Offset = "0x9E5308")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5340", Offset = "0x9E5340")]
	public bool FastTeleport;

	[Token(Token = "0x1700002C")]
	public Transform Pointer
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xC3A5D4", Offset = "0xC3A5D4", VA = "0xC3A5D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA40C", Offset = "0x9EA40C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xC3A5DC", Offset = "0xC3A5DC", VA = "0xC3A5DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA41C", Offset = "0x9EA41C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xC3A5E4", Offset = "0xC3A5E4", VA = "0xC3A5E4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xC3A74C", Offset = "0xC3A74C", VA = "0xC3A74C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xC3A83C", Offset = "0xC3A83C", VA = "0xC3A83C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000311")]
	public enum InputModes
	{
		[Token(Token = "0x40011FB")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40011FC")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40011FD")]
		ThumbstickTeleport,
		[Token(Token = "0x40011FE")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000312")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001200")]
		A,
		[Token(Token = "0x4001201")]
		B,
		[Token(Token = "0x4001202")]
		LeftTrigger,
		[Token(Token = "0x4001203")]
		LeftThumbstick,
		[Token(Token = "0x4001204")]
		RightTrigger,
		[Token(Token = "0x4001205")]
		RightThumbstick,
		[Token(Token = "0x4001206")]
		X,
		[Token(Token = "0x4001207")]
		Y
	}

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5378", Offset = "0x9E5378")]
	public InputModes InputMode;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E53B0", Offset = "0x9E53B0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E53E8", Offset = "0x9E53E8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5420", Offset = "0x9E5420")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xC3A840", Offset = "0xC3A840", VA = "0xC3A840")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xC3A844", Offset = "0xC3A844", VA = "0xC3A844", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xC3ACFC", Offset = "0xC3ACFC", VA = "0xC3ACFC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xC3ADCC", Offset = "0xC3ADCC", VA = "0xC3ADCC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000A5")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000313")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001209")]
		HeadRelative,
		[Token(Token = "0x400120A")]
		ForwardFacing
	}

	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E285C", Offset = "0x9E285C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000441")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0xC3B31C", Offset = "0xC3B31C", VA = "0xC3B31C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000442")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xC3B38C", Offset = "0xC3B38C", VA = "0xC3B38C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xC3B084", Offset = "0xC3B084", VA = "0xC3B084")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xC3B230", Offset = "0xC3B230", VA = "0xC3B230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xC3B234", Offset = "0xC3B234", VA = "0xC3B234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xC3B324", Offset = "0xC3B324", VA = "0xC3B324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xC3AE78", Offset = "0xC3AE78", VA = "0xC3AE78")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xC3AF2C", Offset = "0xC3AF2C", VA = "0xC3AF2C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xC3AF34", Offset = "0xC3AF34", VA = "0xC3AF34", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xC3AFA4", Offset = "0xC3AFA4", VA = "0xC3AFA4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xC3B010", Offset = "0xC3B010", VA = "0xC3B010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA42C", Offset = "0x9EA42C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002E9")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xC3B0B0", Offset = "0xC3B0B0", VA = "0xC3B0B0")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xC3B204", Offset = "0xC3B204", VA = "0xC3B204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA490", Offset = "0x9EA490")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xC3B394", Offset = "0xC3B394", VA = "0xC3B394", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xC3B398", Offset = "0xC3B398", VA = "0xC3B398", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xC3B454", Offset = "0xC3B454", VA = "0xC3B454")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000A7")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5458", Offset = "0x9E5458")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5490", Offset = "0x9E5490")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E54C8", Offset = "0x9E54C8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5500", Offset = "0x9E5500")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xC3B458", Offset = "0xC3B458", VA = "0xC3B458", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xC3B4C8", Offset = "0xC3B4C8", VA = "0xC3B4C8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xC3BA34", Offset = "0xC3BA34", VA = "0xC3BA34")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5538", Offset = "0x9E5538")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5570", Offset = "0x9E5570")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E55A8", Offset = "0x9E55A8")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xC3BA38", Offset = "0xC3BA38", VA = "0xC3BA38", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xC3BA84", Offset = "0xC3BA84", VA = "0xC3BA84", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xC3BF68", Offset = "0xC3BF68", VA = "0xC3BF68")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000A9")]
public class TeleportPoint : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xC3BF78", Offset = "0xC3BF78", VA = "0xC3BF78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xC3BF7C", Offset = "0xC3BF7C", VA = "0xC3BF7C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xC3BF84", Offset = "0xC3BF84", VA = "0xC3BF84")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xC3C080", Offset = "0xC3C080", VA = "0xC3C080")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xC3C0A8", Offset = "0xC3C0A8", VA = "0xC3C0A8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000AA")]
public abstract class TeleportSupport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E55E0", Offset = "0x9E55E0")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002D")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xC38EA8", Offset = "0xC38EA8", VA = "0xC38EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA4A0", Offset = "0x9EA4A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xC3C0C0", Offset = "0xC3C0C0", VA = "0xC3C0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA4B0", Offset = "0x9EA4B0")]
		private set
		{
		}
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xC38E44", Offset = "0xC38E44", VA = "0xC38E44", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xC38F60", Offset = "0xC38F60", VA = "0xC38F60", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xC3C0C8", Offset = "0xC3C0C8", VA = "0xC3C0C8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EA4C0", Offset = "0x9EA4C0")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xC39698", Offset = "0xC39698", VA = "0xC39698", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xC39738", Offset = "0xC39738", VA = "0xC39738", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xC38F94", Offset = "0xC38F94", VA = "0xC38F94")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000AB")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E286C", Offset = "0x9E286C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000443")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xC3C890", Offset = "0xC3C890", VA = "0xC3C890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000444")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xC3C900", Offset = "0xC3C900", VA = "0xC3C900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xC3C34C", Offset = "0xC3C34C", VA = "0xC3C34C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xC3C520", Offset = "0xC3C520", VA = "0xC3C520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xC3C524", Offset = "0xC3C524", VA = "0xC3C524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xC3C898", Offset = "0xC3C898", VA = "0xC3C898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E55F0", Offset = "0x9E55F0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003A7")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xC3C198", Offset = "0xC3C198", VA = "0xC3C198")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xC3C25C", Offset = "0xC3C25C", VA = "0xC3C25C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xC3C29C", Offset = "0xC3C29C", VA = "0xC3C29C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xC3C2D8", Offset = "0xC3C2D8", VA = "0xC3C2D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA4F8", Offset = "0x9EA4F8")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xC3C378", Offset = "0xC3C378", VA = "0xC3C378", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000307")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xC3C3A8", Offset = "0xC3C3A8", VA = "0xC3C3A8", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xC3C4F4", Offset = "0xC3C4F4", VA = "0xC3C4F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA55C", Offset = "0x9EA55C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xC3C908", Offset = "0xC3C908", VA = "0xC3C908")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xC3C968", Offset = "0xC3C968", VA = "0xC3C968", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xC3CB20", Offset = "0xC3CB20", VA = "0xC3CB20", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xC3CC58", Offset = "0xC3CC58", VA = "0xC3CC58")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EA56C", Offset = "0x9EA56C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xC3CC5C", Offset = "0xC3CC5C", VA = "0xC3CC5C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000AD")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5628", Offset = "0x9E5628")]
	public float LOSOffset;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5660", Offset = "0x9E5660")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xC3CC68", Offset = "0xC3CC68", VA = "0xC3CC68", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xC3CF00", Offset = "0xC3CF00", VA = "0xC3CF00")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000AE")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000311")]
	[Address(RVA = "0xC3CF0C", Offset = "0xC3CF0C", VA = "0xC3CF0C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC3D0C4", Offset = "0xC3D0C4", VA = "0xC3D0C4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000AF")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC3D0C8", Offset = "0xC3D0C8", VA = "0xC3D0C8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xC3D170", Offset = "0xC3D170", VA = "0xC3D170", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000315")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xC3D214", Offset = "0xC3D214", VA = "0xC3D214")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000B0")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E287C", Offset = "0x9E287C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000445")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0xC3D5E4", Offset = "0xC3D5E4", VA = "0xC3D5E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000446")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0xC3D654", Offset = "0xC3D654", VA = "0xC3D654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xC3D2BC", Offset = "0xC3D2BC", VA = "0xC3D2BC")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xC3D4A8", Offset = "0xC3D4A8", VA = "0xC3D4A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xC3D4AC", Offset = "0xC3D4AC", VA = "0xC3D4AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xC3D5EC", Offset = "0xC3D5EC", VA = "0xC3D5EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5698", Offset = "0x9E5698")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E5698", Offset = "0x9E5698")]
	public float TransitionDuration;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E56F0", Offset = "0x9E56F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E56F0", Offset = "0x9E56F0")]
	public float TeleportDelay;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E5744", Offset = "0x9E5744")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC3D21C", Offset = "0xC3D21C", VA = "0xC3D21C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC3D248", Offset = "0xC3D248", VA = "0xC3D248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA5A4", Offset = "0x9EA5A4")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC3D2E8", Offset = "0xC3D2E8", VA = "0xC3D2E8")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000B1")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC3D65C", Offset = "0xC3D65C", VA = "0xC3D65C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC3D68C", Offset = "0xC3D68C", VA = "0xC3D68C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000B2")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E288C", Offset = "0x9E288C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000447")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0xC3D954", Offset = "0xC3D954", VA = "0xC3D954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000448")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001996")]
			[Address(RVA = "0xC3D9C4", Offset = "0xC3D9C4", VA = "0xC3D9C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xC3D734", Offset = "0xC3D734", VA = "0xC3D734")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xC3D7A8", Offset = "0xC3D7A8", VA = "0xC3D7A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xC3D7AC", Offset = "0xC3D7AC", VA = "0xC3D7AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xC3D95C", Offset = "0xC3D95C", VA = "0xC3D95C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E577C", Offset = "0x9E577C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E577C", Offset = "0x9E577C")]
	public float TransitionDuration;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC3D694", Offset = "0xC3D694", VA = "0xC3D694", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC3D6C0", Offset = "0xC3D6C0", VA = "0xC3D6C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA608", Offset = "0x9EA608")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC3D760", Offset = "0xC3D760", VA = "0xC3D760")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000B3")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000318")]
	public enum PlabackState
	{
		[Token(Token = "0x400121D")]
		Idle = 1,
		[Token(Token = "0x400121E")]
		Preparing,
		[Token(Token = "0x400121F")]
		Buffering,
		[Token(Token = "0x4001220")]
		Ready,
		[Token(Token = "0x4001221")]
		Ended
	}

	[Token(Token = "0x2000319")]
	public enum StereoMode
	{
		[Token(Token = "0x4001223")]
		Unknown = -1,
		[Token(Token = "0x4001224")]
		Mono,
		[Token(Token = "0x4001225")]
		TopBottom,
		[Token(Token = "0x4001226")]
		LeftRight,
		[Token(Token = "0x4001227")]
		Mesh
	}

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700002E")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xB7A224", Offset = "0xB7A224", VA = "0xB7A224")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002F")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xB7A500", Offset = "0xB7A500", VA = "0xB7A500")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000030")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0xB76DE8", Offset = "0xB76DE8", VA = "0xB76DE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000031")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0xB78614", Offset = "0xB78614", VA = "0xB78614")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000032")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xB7A764", Offset = "0xB7A764", VA = "0xB7A764")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000033")]
	public static long Duration
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xB787F8", Offset = "0xB787F8", VA = "0xB787F8")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000034")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xB7744C", Offset = "0xB7744C", VA = "0xB7744C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000035")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xB77264", Offset = "0xB77264", VA = "0xB77264")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000036")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xB77358", Offset = "0xB77358", VA = "0xB77358")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000037")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xB78704", Offset = "0xB78704", VA = "0xB78704")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xB77D04", Offset = "0xB77D04", VA = "0xB77D04")]
		set
		{
		}
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xB78E98", Offset = "0xB78E98", VA = "0xB78E98")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xB78BC4", Offset = "0xB78BC4", VA = "0xB78BC4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xB77974", Offset = "0xB77974", VA = "0xB77974")]
	public static void Play()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xB77B08", Offset = "0xB77B08", VA = "0xB77B08")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xB789D4", Offset = "0xB789D4", VA = "0xB789D4")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xB790E0", Offset = "0xB790E0", VA = "0xB790E0")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB78408", Offset = "0xB78408", VA = "0xB78408")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000B4")]
public class ButtonDownListener : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xCFA9AC", Offset = "0xCFA9AC", VA = "0xCFA9AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA66C", Offset = "0x9EA66C")]
		add
		{
		}
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xCFAA54", Offset = "0xCFAA54", VA = "0xCFAA54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA67C", Offset = "0x9EA67C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xCFAAFC", Offset = "0xCFAAFC", VA = "0xCFAAFC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xCFAB10", Offset = "0xCFAB10", VA = "0xCFAB10")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000B5")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200031A")]
	public enum ButtonType
	{
		[Token(Token = "0x4001229")]
		Play,
		[Token(Token = "0x400122A")]
		Pause,
		[Token(Token = "0x400122B")]
		FastForward,
		[Token(Token = "0x400122C")]
		Rewind,
		[Token(Token = "0x400122D")]
		SkipForward,
		[Token(Token = "0x400122E")]
		SkipBack,
		[Token(Token = "0x400122F")]
		Stop
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000038")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0xB74898", Offset = "0xB74898", VA = "0xB74898")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000337")]
		[Address(RVA = "0xB748A0", Offset = "0xB748A0", VA = "0xB748A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xB748C4", Offset = "0xB748C4", VA = "0xB748C4", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xB761A0", Offset = "0xB761A0", VA = "0xB761A0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000B6")]
public class MoviePlayerSample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200031B")]
	public enum VideoShape
	{
		[Token(Token = "0x4001231")]
		_360,
		[Token(Token = "0x4001232")]
		_180,
		[Token(Token = "0x4001233")]
		Quad
	}

	[Token(Token = "0x200031C")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001235")]
		Mono,
		[Token(Token = "0x4001236")]
		TopBottom,
		[Token(Token = "0x4001237")]
		LeftRight,
		[Token(Token = "0x4001238")]
		BottomTop
	}

	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E289C", Offset = "0x9E289C")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000449")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600199A")]
			[Address(RVA = "0xB793D0", Offset = "0xB793D0", VA = "0xB793D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0xB79440", Offset = "0xB79440", VA = "0xB79440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xB775B4", Offset = "0xB775B4", VA = "0xB775B4")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xB79234", Offset = "0xB79234", VA = "0xB79234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xB79238", Offset = "0xB79238", VA = "0xB79238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xB793D8", Offset = "0xB793D8", VA = "0xB793D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E28AC", Offset = "0x9E28AC")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xB778C8", Offset = "0xB778C8", VA = "0xB778C8")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xB78DB0", Offset = "0xB78DB0", VA = "0xB78DB0")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5804", Offset = "0x9E5804")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5814", Offset = "0x9E5814")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5824", Offset = "0x9E5824")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000039")]
	public bool IsPlaying
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0xB76B50", Offset = "0xB76B50", VA = "0xB76B50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA68C", Offset = "0x9EA68C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0xB76B58", Offset = "0xB76B58", VA = "0xB76B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA69C", Offset = "0x9EA69C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public long Duration
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xB76B64", Offset = "0xB76B64", VA = "0xB76B64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA6AC", Offset = "0x9EA6AC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xB76B6C", Offset = "0xB76B6C", VA = "0xB76B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA6BC", Offset = "0x9EA6BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xB76B74", Offset = "0xB76B74", VA = "0xB76B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA6CC", Offset = "0x9EA6CC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xB76B7C", Offset = "0xB76B7C", VA = "0xB76B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA6DC", Offset = "0x9EA6DC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xB76B84", Offset = "0xB76B84", VA = "0xB76B84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xB76E50", Offset = "0xB76E50", VA = "0xB76E50")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB76EBC", Offset = "0xB76EBC", VA = "0xB76EBC")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB77540", Offset = "0xB77540", VA = "0xB77540")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA6EC", Offset = "0x9EA6EC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xB775E0", Offset = "0xB775E0", VA = "0xB775E0")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB778D0", Offset = "0xB778D0", VA = "0xB778D0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB77A68", Offset = "0xB77A68", VA = "0xB77A68")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xB77BFC", Offset = "0xB77BFC", VA = "0xB77BFC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xB77E54", Offset = "0xB77E54", VA = "0xB77E54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB788EC", Offset = "0xB788EC", VA = "0xB788EC")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB78B24", Offset = "0xB78B24", VA = "0xB78B24")]
	public void Stop()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB78CB8", Offset = "0xB78CB8", VA = "0xB78CB8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xB78DA0", Offset = "0xB78DA0", VA = "0xB78DA0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000B7")]
public class MoviePlayerSampleControls : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200031F")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001240")]
		Playing,
		[Token(Token = "0x4001241")]
		Paused,
		[Token(Token = "0x4001242")]
		Rewinding,
		[Token(Token = "0x4001243")]
		FastForwarding
	}

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xB79448", Offset = "0xB79448", VA = "0xB79448")]
	private void Start()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xB797C4", Offset = "0xB797C4", VA = "0xB797C4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xB79A28", Offset = "0xB79A28", VA = "0xB79A28")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xB79BEC", Offset = "0xB79BEC", VA = "0xB79BEC")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xB79D3C", Offset = "0xB79D3C", VA = "0xB79D3C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xB79B7C", Offset = "0xB79B7C", VA = "0xB79B7C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xB79E20", Offset = "0xB79E20", VA = "0xB79E20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xB79690", Offset = "0xB79690", VA = "0xB79690")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xB7A214", Offset = "0xB7A214", VA = "0xB7A214")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000B8")]
public static class VectorUtil
{
	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC4197C", Offset = "0xC4197C", VA = "0xC4197C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000B9")]
public class AppDeeplinkUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003F2")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40003F3")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xCF8930", Offset = "0xCF8930", VA = "0xCF8930")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xCF8CD8", Offset = "0xCF8CD8", VA = "0xCF8CD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xCF8F54", Offset = "0xCF8F54", VA = "0xCF8F54")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xCF90B0", Offset = "0xCF90B0", VA = "0xCF90B0")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xCF9210", Offset = "0xCF9210", VA = "0xCF9210")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xCF93AC", Offset = "0xCF93AC", VA = "0xCF93AC")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000BA")]
public class CustomDebugUI : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40003FC")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC4B798", Offset = "0xC4B798", VA = "0xC4B798")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC4B7EC", Offset = "0xC4B7EC", VA = "0xC4B7EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC4B7F0", Offset = "0xC4B7F0", VA = "0xC4B7F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC4B7F4", Offset = "0xC4B7F4", VA = "0xC4B7F4")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC4BA50", Offset = "0xC4BA50", VA = "0xC4BA50")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC4BCA0", Offset = "0xC4BCA0", VA = "0xC4BCA0")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000BB")]
public class DebugUISample : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC4FF30", Offset = "0xC4FF30", VA = "0xC4FF30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC503CC", Offset = "0xC503CC", VA = "0xC503CC")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC50494", Offset = "0xC50494", VA = "0xC50494")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC50750", Offset = "0xC50750", VA = "0xC50750")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC50840", Offset = "0xC50840", VA = "0xC50840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC50934", Offset = "0xC50934", VA = "0xC50934")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xC509A0", Offset = "0xC509A0", VA = "0xC509A0")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xC509A8", Offset = "0xC509A8", VA = "0xC509A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA760", Offset = "0x9EA760")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xC50A04", Offset = "0xC50A04", VA = "0xC50A04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA770", Offset = "0x9EA770")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xC50A60", Offset = "0xC50A60", VA = "0xC50A60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA780", Offset = "0x9EA780")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xC50ABC", Offset = "0xC50ABC", VA = "0xC50ABC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA790", Offset = "0x9EA790")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000BC")]
public class HandsActiveChecker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E28BC", Offset = "0x9E28BC")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700044B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xC5F53C", Offset = "0xC5F53C", VA = "0xC5F53C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0xC5F5AC", Offset = "0xC5F5AC", VA = "0xC5F5AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xC5F3C8", Offset = "0xC5F3C8", VA = "0xC5F3C8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xC5F3FC", Offset = "0xC5F3FC", VA = "0xC5F3FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xC5F400", Offset = "0xC5F400", VA = "0xC5F400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xC5F544", Offset = "0xC5F544", VA = "0xC5F544", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xC5F030", Offset = "0xC5F030", VA = "0xC5F030")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xC5F134", Offset = "0xC5F134", VA = "0xC5F134")]
	private void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xC5F0C0", Offset = "0xC5F0C0", VA = "0xC5F0C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EA7A0", Offset = "0x9EA7A0")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xC5F3F4", Offset = "0xC5F3F4", VA = "0xC5F3F4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000BD")]
[ExecuteInEditMode]
public class CharacterCapsule : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E5854", Offset = "0x9E5854")]
	public int SubdivisionsU;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E5870", Offset = "0x9E5870")]
	public int SubdivisionsV;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xCFD3CC", Offset = "0xCFD3CC", VA = "0xCFD3CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xCFE32C", Offset = "0xCFE32C", VA = "0xCFE32C")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000BE")]
public class LocomotionSampleSupport : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700003C")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0xB707C0", Offset = "0xB707C0", VA = "0xB707C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB70820", Offset = "0xB70820", VA = "0xB70820")]
	public void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB70BE0", Offset = "0xB70BE0", VA = "0xB70BE0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB70CDC", Offset = "0xB70CDC", VA = "0xB70CDC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EA804", Offset = "0x9EA804")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000378")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : UnityEngine.MonoBehaviour where TActivate : UnityEngine.MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600037A")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600037B")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600037C")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600037D")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600037E")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600037F")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : UnityEngine.MonoBehaviour where TActivate : UnityEngine.MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB70D44", Offset = "0xB70D44", VA = "0xB70D44")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xB70DA8", Offset = "0xB70DA8", VA = "0xB70DA8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xB70E58", Offset = "0xB70E58", VA = "0xB70E58")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xB71078", Offset = "0xB71078", VA = "0xB71078")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xB71168", Offset = "0xB71168", VA = "0xB71168")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xB70A8C", Offset = "0xB70A8C", VA = "0xB70A8C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xB71250", Offset = "0xB71250", VA = "0xB71250")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xB712E0", Offset = "0xB712E0", VA = "0xB712E0")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB71410", Offset = "0xB71410", VA = "0xB71410")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000BF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E13C4", Offset = "0x9E13C4")]
public class OVROverlayCanvas : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000321")]
	public enum DrawMode
	{
		[Token(Token = "0x4001248")]
		Opaque,
		[Token(Token = "0x4001249")]
		OpaqueWithClip,
		[Token(Token = "0x400124A")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400124B")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700003D")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0xD3C808", Offset = "0xD3C808", VA = "0xD3C808")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000390")]
		[Address(RVA = "0xD3C8A4", Offset = "0xD3C8A4", VA = "0xD3C8A4")]
		set
		{
		}
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xD3ABF4", Offset = "0xD3ABF4", VA = "0xD3ABF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xD3BC7C", Offset = "0xD3BC7C", VA = "0xD3BC7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xD3BD00", Offset = "0xD3BD00", VA = "0xD3BD00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xD3BE14", Offset = "0xD3BE14", VA = "0xD3BE14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xD3BF28", Offset = "0xD3BF28", VA = "0xD3BF28", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xD3C158", Offset = "0xD3C158", VA = "0xD3C158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xD3C9BC", Offset = "0xD3C9BC", VA = "0xD3C9BC")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000C0")]
public class StartMenu : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E28CC", Offset = "0x9E28CC")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xC37BD0", Offset = "0xC37BD0", VA = "0xC37BD0")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xC37CC8", Offset = "0xC37CC8", VA = "0xC37CC8")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xC379EC", Offset = "0xC379EC", VA = "0xC379EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xC37BD8", Offset = "0xC37BD8", VA = "0xC37BD8")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xC37CC0", Offset = "0xC37CC0", VA = "0xC37CC0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000C1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E1428", Offset = "0x9E1428")]
public class MouseLook : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000323")]
	public enum RotationAxes
	{
		[Token(Token = "0x400124F")]
		MouseXAndY,
		[Token(Token = "0x4001250")]
		MouseX,
		[Token(Token = "0x4001251")]
		MouseY
	}

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xB76208", Offset = "0xB76208", VA = "0xB76208")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xB7648C", Offset = "0xB7648C", VA = "0xB7648C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xB76554", Offset = "0xB76554", VA = "0xB76554")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000C2")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000C3")]
public class ONSPReflectionZone : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x18F6084", Offset = "0x18F6084", VA = "0x18F6084")]
	private void Start()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x18F6088", Offset = "0x18F6088", VA = "0x18F6088")]
	private void Update()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x18F608C", Offset = "0x18F608C", VA = "0x18F608C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x18F6218", Offset = "0x18F6218", VA = "0x18F6218")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x18F60E0", Offset = "0x18F60E0", VA = "0x18F60E0")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x18F6174", Offset = "0x18F6174", VA = "0x18F6174")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x18F626C", Offset = "0x18F626C", VA = "0x18F626C")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x18F630C", Offset = "0x18F630C", VA = "0x18F630C")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x18F6498", Offset = "0x18F6498", VA = "0x18F6498")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x18F6624", Offset = "0x18F6624", VA = "0x18F6624")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000C4")]
public class OculusSpatializerUnity : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000324")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000442")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000448")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD1E8E8", Offset = "0xD1E8E8", VA = "0xD1E8E8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xD1E718", Offset = "0xD1E718", VA = "0xD1E718")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9EA83C", Offset = "0x9EA83C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD1E920", Offset = "0xD1E920", VA = "0xD1E920")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xD1EA70", Offset = "0xD1EA70", VA = "0xD1EA70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xD1EB80", Offset = "0xD1EB80", VA = "0xD1EB80")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xD1F808", Offset = "0xD1F808", VA = "0xD1F808")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xD1E9C0", Offset = "0xD1E9C0", VA = "0xD1E9C0")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xD1EAD4", Offset = "0xD1EAD4", VA = "0xD1EAD4")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xD1F4F0", Offset = "0xD1F4F0", VA = "0xD1F4F0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xD1F58C", Offset = "0xD1F58C", VA = "0xD1F58C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xD1F62C", Offset = "0xD1F62C", VA = "0xD1F62C")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xD1F6CC", Offset = "0xD1F6CC", VA = "0xD1F6CC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xD1F768", Offset = "0xD1F768", VA = "0xD1F768")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xD20B70", Offset = "0xD20B70", VA = "0xD20B70")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xD20C34", Offset = "0xD20C34", VA = "0xD20C34")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xD20CF8", Offset = "0xD20CF8", VA = "0xD20CF8")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000C5")]
public class ONSPAmbisonicsNative : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000325")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001253")]
		Uninitialized = -1,
		[Token(Token = "0x4001254")]
		NotEnabled,
		[Token(Token = "0x4001255")]
		Success,
		[Token(Token = "0x4001256")]
		StreamError,
		[Token(Token = "0x4001257")]
		ProcessError,
		[Token(Token = "0x4001258")]
		MaxStatValue
	}

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramAmbiStat;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x18E3338", Offset = "0x18E3338", VA = "0x18E3338")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x18E35A4", Offset = "0x18E35A4", VA = "0x18E35A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x18E3798", Offset = "0x18E3798", VA = "0x18E3798")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000C6")]
public class ONSPAudioSource : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000326")]
	private enum Parameters
	{
		[Token(Token = "0x400125A")]
		P_GAIN,
		[Token(Token = "0x400125B")]
		P_USEINVSQR,
		[Token(Token = "0x400125C")]
		P_NEAR,
		[Token(Token = "0x400125D")]
		P_FAR,
		[Token(Token = "0x400125E")]
		P_RADIUS,
		[Token(Token = "0x400125F")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001260")]
		P_AMBISTAT,
		[Token(Token = "0x4001261")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001262")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001263")]
		P_SENDLEVEL,
		[Token(Token = "0x4001264")]
		P_NUM
	}

	[Token(Token = "0x400044D")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700003E")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x18E3B2C", Offset = "0x18E3B2C", VA = "0x18E3B2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x18E3B34", Offset = "0x18E3B34", VA = "0x18E3B34")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public float Gain
	{
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x18E3B40", Offset = "0x18E3B40", VA = "0x18E3B40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x18E3B48", Offset = "0x18E3B48", VA = "0x18E3B48")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x18E3BCC", Offset = "0x18E3BCC", VA = "0x18E3BCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x18E3BD4", Offset = "0x18E3BD4", VA = "0x18E3BD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public float Near
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x18E3BE0", Offset = "0x18E3BE0", VA = "0x18E3BE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x18E3BE8", Offset = "0x18E3BE8", VA = "0x18E3BE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public float Far
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x18E3C70", Offset = "0x18E3C70", VA = "0x18E3C70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x18E3C78", Offset = "0x18E3C78", VA = "0x18E3C78")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x18E3D00", Offset = "0x18E3D00", VA = "0x18E3D00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x18E3D08", Offset = "0x18E3D08", VA = "0x18E3D08")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public float ReverbSend
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x18E3D90", Offset = "0x18E3D90", VA = "0x18E3D90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x18E3D98", Offset = "0x18E3D98", VA = "0x18E3D98")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x18E3E20", Offset = "0x18E3E20", VA = "0x18E3E20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x18E3E28", Offset = "0x18E3E28", VA = "0x18E3E28")]
		set
		{
		}
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x18E380C", Offset = "0x18E380C", VA = "0x18E380C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9EA8A0", Offset = "0x9EA8A0")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x18E3A30", Offset = "0x18E3A30", VA = "0x18E3A30")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x18E3E34", Offset = "0x18E3E34", VA = "0x18E3E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x18E4034", Offset = "0x18E4034", VA = "0x18E4034")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x18E4038", Offset = "0x18E4038", VA = "0x18E4038")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x18E3EA0", Offset = "0x18E3EA0", VA = "0x18E3EA0")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x18E4118", Offset = "0x18E4118", VA = "0x18E4118")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x18E45EC", Offset = "0x18E45EC", VA = "0x18E45EC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x18E3994", Offset = "0x18E3994", VA = "0x18E3994")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x18E46BC", Offset = "0x18E46BC", VA = "0x18E46BC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ONSPProfiler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000458")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400045A")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x18E46DC", Offset = "0x18E46DC", VA = "0x18E46DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x18E46E8", Offset = "0x18E46E8", VA = "0x18E46E8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x18E47BC", Offset = "0x18E47BC", VA = "0x18E47BC")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x18E4720", Offset = "0x18E4720", VA = "0x18E4720")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x18E4858", Offset = "0x18E4858", VA = "0x18E4858")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ONSPPropagationGeometry : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000327")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000328")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000461")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000046")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x18E77E0", Offset = "0x18E77E0", VA = "0x18E77E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public string filePath
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x18E786C", Offset = "0x18E786C", VA = "0x18E786C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x18E78E4", Offset = "0x18E78E4", VA = "0x18E78E4")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x18E7A5C", Offset = "0x18E7A5C", VA = "0x18E7A5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x18E7A60", Offset = "0x18E7A60", VA = "0x18E7A60")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x18E8010", Offset = "0x18E8010", VA = "0x18E8010")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x18E84E8", Offset = "0x18E84E8", VA = "0x18E84E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x18E864C", Offset = "0x18E864C", VA = "0x18E864C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x18E8E74", Offset = "0x18E8E74", VA = "0x18E8E74")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x18E8EC0", Offset = "0x18E8EC0", VA = "0x18E8EC0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x18EAB08", Offset = "0x18EAB08", VA = "0x18EAB08")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x18EA9BC", Offset = "0x18EA9BC", VA = "0x18EA9BC")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x18E7E24", Offset = "0x18E7E24", VA = "0x18E7E24")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x18E7C44", Offset = "0x18E7C44", VA = "0x18E7C44")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x18EB2E0", Offset = "0x18EB2E0", VA = "0x18EB2E0")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x18EB754", Offset = "0x18EB754", VA = "0x18EB754")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000C9")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000329")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400126B")]
		Int8,
		[Token(Token = "0x400126C")]
		UInt8,
		[Token(Token = "0x400126D")]
		Int16,
		[Token(Token = "0x400126E")]
		UInt16,
		[Token(Token = "0x400126F")]
		Int32,
		[Token(Token = "0x4001270")]
		UInt32,
		[Token(Token = "0x4001271")]
		Int64,
		[Token(Token = "0x4001272")]
		UInt64,
		[Token(Token = "0x4001273")]
		Float16,
		[Token(Token = "0x4001274")]
		Float32,
		[Token(Token = "0x4001275")]
		Float64
	}

	[Token(Token = "0x200032A")]
	public class ClientType
	{
		[Token(Token = "0x4001276")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001277")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001278")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001279")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400127A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400127B")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400127C")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400127D")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x400127E")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x400127F")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001280")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001281")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001282")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001283")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001284")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x18E4D4C", Offset = "0x18E4D4C", VA = "0x18E4D4C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200032B")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60019AC")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60019AD")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60019AE")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60019AF")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60019B0")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60019B1")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60019B2")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60019B3")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60019B4")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60019B5")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60019B6")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60019B7")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60019B8")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60019B9")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60019BA")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200032C")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001285")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700044D")]
		private IntPtr context
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x18E5B4C", Offset = "0x18E5B4C", VA = "0x18E5B4C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x18E5BB0", Offset = "0x18E5BB0", VA = "0x18E5BB0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x18E5C5C", Offset = "0x18E5C5C", VA = "0x18E5C5C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x18E5D08", Offset = "0x18E5D08", VA = "0x18E5D08", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x18E5D2C", Offset = "0x18E5D2C", VA = "0x18E5D2C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x18E5DD8", Offset = "0x18E5DD8", VA = "0x18E5DD8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x18E5DFC", Offset = "0x18E5DFC", VA = "0x18E5DFC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x18E5EA4", Offset = "0x18E5EA4", VA = "0x18E5EA4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x18E5EC8", Offset = "0x18E5EC8", VA = "0x18E5EC8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x18E5F64", Offset = "0x18E5F64", VA = "0x18E5F64", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x18E5F6C", Offset = "0x18E5F6C", VA = "0x18E5F6C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x18E6094", Offset = "0x18E6094", VA = "0x18E6094", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x18E618C", Offset = "0x18E618C", VA = "0x18E618C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x18E6240", Offset = "0x18E6240", VA = "0x18E6240", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x18E624C", Offset = "0x18E624C", VA = "0x18E624C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x18E6394", Offset = "0x18E6394", VA = "0x18E6394", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x18E63A0", Offset = "0x18E63A0", VA = "0x18E63A0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x18E6468", Offset = "0x18E6468", VA = "0x18E6468", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x18E6474", Offset = "0x18E6474", VA = "0x18E6474")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x18E653C", Offset = "0x18E653C", VA = "0x18E653C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x18E6548", Offset = "0x18E6548", VA = "0x18E6548")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x18E6610", Offset = "0x18E6610", VA = "0x18E6610", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x18E661C", Offset = "0x18E661C", VA = "0x18E661C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x18E66C4", Offset = "0x18E66C4", VA = "0x18E66C4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x18E66E8", Offset = "0x18E66E8", VA = "0x18E66E8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x18E6784", Offset = "0x18E6784", VA = "0x18E6784", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x18E678C", Offset = "0x18E678C", VA = "0x18E678C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x18E6850", Offset = "0x18E6850", VA = "0x18E6850", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x18E685C", Offset = "0x18E685C", VA = "0x18E685C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x18E6920", Offset = "0x18E6920", VA = "0x18E6920", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x18E6930", Offset = "0x18E6930", VA = "0x18E6930")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x18E69DC", Offset = "0x18E69DC", VA = "0x18E69DC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x18E4CF8", Offset = "0x18E4CF8", VA = "0x18E4CF8")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200032D")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001287")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700044E")]
		private IntPtr context
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x18E69E8", Offset = "0x18E69E8", VA = "0x18E69E8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x18E4B08", Offset = "0x18E4B08", VA = "0x18E4B08")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x18E6A4C", Offset = "0x18E6A4C", VA = "0x18E6A4C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x18E6AF8", Offset = "0x18E6AF8", VA = "0x18E6AF8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x18E6B1C", Offset = "0x18E6B1C", VA = "0x18E6B1C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x18E6BC8", Offset = "0x18E6BC8", VA = "0x18E6BC8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x18E6BEC", Offset = "0x18E6BEC", VA = "0x18E6BEC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x18E6C98", Offset = "0x18E6C98", VA = "0x18E6C98", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x18E6CBC", Offset = "0x18E6CBC", VA = "0x18E6CBC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x18E6D58", Offset = "0x18E6D58", VA = "0x18E6D58", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x18E6D60", Offset = "0x18E6D60", VA = "0x18E6D60")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x18E6E88", Offset = "0x18E6E88", VA = "0x18E6E88", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x18E6F80", Offset = "0x18E6F80", VA = "0x18E6F80")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x18E7034", Offset = "0x18E7034", VA = "0x18E7034", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x18E7040", Offset = "0x18E7040", VA = "0x18E7040")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x18E7188", Offset = "0x18E7188", VA = "0x18E7188", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x18E7194", Offset = "0x18E7194", VA = "0x18E7194")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x18E725C", Offset = "0x18E725C", VA = "0x18E725C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x18E7268", Offset = "0x18E7268", VA = "0x18E7268")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x18E7330", Offset = "0x18E7330", VA = "0x18E7330", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x18E733C", Offset = "0x18E733C", VA = "0x18E733C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x18E7404", Offset = "0x18E7404", VA = "0x18E7404", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x18E7410", Offset = "0x18E7410", VA = "0x18E7410")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x18E74BC", Offset = "0x18E74BC", VA = "0x18E74BC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x18E74E0", Offset = "0x18E74E0", VA = "0x18E74E0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x18E757C", Offset = "0x18E757C", VA = "0x18E757C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x18E7584", Offset = "0x18E7584", VA = "0x18E7584")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x18E7648", Offset = "0x18E7648", VA = "0x18E7648", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x18E7654", Offset = "0x18E7654", VA = "0x18E7654")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x18E7718", Offset = "0x18E7718", VA = "0x18E7718", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x18E7728", Offset = "0x18E7728", VA = "0x18E7728")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x18E77D4", Offset = "0x18E77D4", VA = "0x18E77D4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x18E4BB4", Offset = "0x18E4BB4", VA = "0x18E4BB4")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200032E")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001289")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700044F")]
		private IntPtr context
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x18E4D54", Offset = "0x18E4D54", VA = "0x18E4D54")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x18E4C00", Offset = "0x18E4C00", VA = "0x18E4C00")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x18E4DB8", Offset = "0x18E4DB8", VA = "0x18E4DB8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x18E4E64", Offset = "0x18E4E64", VA = "0x18E4E64", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x18E4E88", Offset = "0x18E4E88", VA = "0x18E4E88")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x18E4F34", Offset = "0x18E4F34", VA = "0x18E4F34", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x18E4F58", Offset = "0x18E4F58", VA = "0x18E4F58")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x18E5004", Offset = "0x18E5004", VA = "0x18E5004", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x18E5028", Offset = "0x18E5028", VA = "0x18E5028")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x18E50C4", Offset = "0x18E50C4", VA = "0x18E50C4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x18E50CC", Offset = "0x18E50CC", VA = "0x18E50CC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x18E51F4", Offset = "0x18E51F4", VA = "0x18E51F4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x18E52EC", Offset = "0x18E52EC", VA = "0x18E52EC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x18E53A0", Offset = "0x18E53A0", VA = "0x18E53A0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x18E53AC", Offset = "0x18E53AC", VA = "0x18E53AC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x18E54F4", Offset = "0x18E54F4", VA = "0x18E54F4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x18E5500", Offset = "0x18E5500", VA = "0x18E5500")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x18E55C8", Offset = "0x18E55C8", VA = "0x18E55C8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x18E55D4", Offset = "0x18E55D4", VA = "0x18E55D4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x18E569C", Offset = "0x18E569C", VA = "0x18E569C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x18E56A8", Offset = "0x18E56A8", VA = "0x18E56A8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x18E5770", Offset = "0x18E5770", VA = "0x18E5770", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x18E577C", Offset = "0x18E577C", VA = "0x18E577C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x18E5828", Offset = "0x18E5828", VA = "0x18E5828", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x18E584C", Offset = "0x18E584C", VA = "0x18E584C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x18E58E8", Offset = "0x18E58E8", VA = "0x18E58E8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x18E58F0", Offset = "0x18E58F0", VA = "0x18E58F0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x18E59B4", Offset = "0x18E59B4", VA = "0x18E59B4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x18E59C0", Offset = "0x18E59C0", VA = "0x18E59C0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x18E5A84", Offset = "0x18E5A84", VA = "0x18E5A84", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x18E5A94", Offset = "0x18E5A94", VA = "0x18E5A94")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x18E5B40", Offset = "0x18E5B40", VA = "0x18E5B40", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x18E4CAC", Offset = "0x18E4CAC", VA = "0x18E4CAC")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000048")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x18E4868", Offset = "0x18E4868", VA = "0x18E4868")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x18E48D8", Offset = "0x18E48D8", VA = "0x18E48D8")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x18E4D44", Offset = "0x18E4D44", VA = "0x18E4D44")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000CA")]
public sealed class ONSPPropagationMaterial : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200032F")]
	public enum Preset
	{
		[Token(Token = "0x400128C")]
		Custom,
		[Token(Token = "0x400128D")]
		AcousticTile,
		[Token(Token = "0x400128E")]
		Brick,
		[Token(Token = "0x400128F")]
		BrickPainted,
		[Token(Token = "0x4001290")]
		Carpet,
		[Token(Token = "0x4001291")]
		CarpetHeavy,
		[Token(Token = "0x4001292")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001293")]
		CeramicTile,
		[Token(Token = "0x4001294")]
		Concrete,
		[Token(Token = "0x4001295")]
		ConcreteRough,
		[Token(Token = "0x4001296")]
		ConcreteBlock,
		[Token(Token = "0x4001297")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001298")]
		Curtain,
		[Token(Token = "0x4001299")]
		Foliage,
		[Token(Token = "0x400129A")]
		Glass,
		[Token(Token = "0x400129B")]
		GlassHeavy,
		[Token(Token = "0x400129C")]
		Grass,
		[Token(Token = "0x400129D")]
		Gravel,
		[Token(Token = "0x400129E")]
		GypsumBoard,
		[Token(Token = "0x400129F")]
		PlasterOnBrick,
		[Token(Token = "0x40012A0")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40012A1")]
		Soil,
		[Token(Token = "0x40012A2")]
		SoundProof,
		[Token(Token = "0x40012A3")]
		Snow,
		[Token(Token = "0x40012A4")]
		Steel,
		[Token(Token = "0x40012A5")]
		Water,
		[Token(Token = "0x40012A6")]
		WoodThin,
		[Token(Token = "0x40012A7")]
		WoodThick,
		[Token(Token = "0x40012A8")]
		WoodFloor,
		[Token(Token = "0x40012A9")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000330")]
	public sealed class Point
	{
		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x18F58A4", Offset = "0x18F58A4", VA = "0x18F58A4")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x18F59EC", Offset = "0x18F59EC", VA = "0x18F59EC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x18F5A5C", Offset = "0x18F5A5C", VA = "0x18F5A5C")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E28DC", Offset = "0x9E28DC")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3A34", Offset = "0x9E3A34")]
		private sealed class <>c
		{
			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400174A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x400174B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x18F5F44", Offset = "0x18F5F44", VA = "0x18F5F44")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x18F5F4C", Offset = "0x18F5F4C", VA = "0x18F5F4C")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x18F5F78", Offset = "0x18F5F78", VA = "0x18F5F78")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000450")]
		public float Item
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x18F5AC4", Offset = "0x18F5AC4", VA = "0x18F5AC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x18F5974", Offset = "0x18F5974", VA = "0x18F5974")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E597C", Offset = "0x9E597C")]
	public Spectrum absorption;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E59B4", Offset = "0x9E59B4")]
	public Spectrum transmission;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E59EC", Offset = "0x9E59EC")]
	public Spectrum scattering;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000049")]
	public Preset preset
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x18EB82C", Offset = "0x18EB82C", VA = "0x18EB82C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x18EB834", Offset = "0x18EB834", VA = "0x18EB834")]
		set
		{
		}
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x18EB85C", Offset = "0x18EB85C", VA = "0x18EB85C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x18EB16C", Offset = "0x18EB16C", VA = "0x18EB16C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x18EBF1C", Offset = "0x18EBF1C", VA = "0x18EBF1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x18EBF20", Offset = "0x18EBF20", VA = "0x18EBF20")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x18EB860", Offset = "0x18EB860", VA = "0x18EB860")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x18EA828", Offset = "0x18EA828", VA = "0x18EA828")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x18EC004", Offset = "0x18EC004", VA = "0x18EC004")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x18EC598", Offset = "0x18EC598", VA = "0x18EC598")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x18ECB34", Offset = "0x18ECB34", VA = "0x18ECB34")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x18ED0D0", Offset = "0x18ED0D0", VA = "0x18ED0D0")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x18ED670", Offset = "0x18ED670", VA = "0x18ED670")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x18EDC08", Offset = "0x18EDC08", VA = "0x18EDC08")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x18EE1A0", Offset = "0x18EE1A0", VA = "0x18EE1A0")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x18EE740", Offset = "0x18EE740", VA = "0x18EE740")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x18EECE0", Offset = "0x18EECE0", VA = "0x18EECE0")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x18EF27C", Offset = "0x18EF27C", VA = "0x18EF27C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x18EF81C", Offset = "0x18EF81C", VA = "0x18EF81C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x18EFDBC", Offset = "0x18EFDBC", VA = "0x18EFDBC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x18F0354", Offset = "0x18F0354", VA = "0x18F0354")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x18F08EC", Offset = "0x18F08EC", VA = "0x18F08EC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x18F0E84", Offset = "0x18F0E84", VA = "0x18F0E84")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x18F1424", Offset = "0x18F1424", VA = "0x18F1424")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x18F1840", Offset = "0x18F1840", VA = "0x18F1840")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x18F1C54", Offset = "0x18F1C54", VA = "0x18F1C54")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x18F21F4", Offset = "0x18F21F4", VA = "0x18F21F4")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x18F2790", Offset = "0x18F2790", VA = "0x18F2790")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x18F2D2C", Offset = "0x18F2D2C", VA = "0x18F2D2C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x18F3144", Offset = "0x18F3144", VA = "0x18F3144")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x18F32D8", Offset = "0x18F32D8", VA = "0x18F32D8")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x18F36EC", Offset = "0x18F36EC", VA = "0x18F36EC")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x18F3C88", Offset = "0x18F3C88", VA = "0x18F3C88")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x18F4228", Offset = "0x18F4228", VA = "0x18F4228")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x18F47C4", Offset = "0x18F47C4", VA = "0x18F47C4")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x18F4D64", Offset = "0x18F4D64", VA = "0x18F4D64")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x18F5304", Offset = "0x18F5304", VA = "0x18F5304")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x18F58DC", Offset = "0x18F58DC", VA = "0x18F58DC")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000CB")]
public class ONSPPropagationSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x18F5FA4", Offset = "0x18F5FA4", VA = "0x18F5FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x18F6074", Offset = "0x18F6074", VA = "0x18F6074")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000CC")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700004A")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000415")]
		[Address(RVA = "0x18E3880", Offset = "0x18E3880", VA = "0x18E3880")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x18F66AC", Offset = "0x18F66AC", VA = "0x18F66AC")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ONSPVersion : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400046C")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000417")]
	[Address(RVA = "0x18F66BC", Offset = "0x18F66BC", VA = "0x18F66BC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x18F6770", Offset = "0x18F6770", VA = "0x18F6770")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x18F687C", Offset = "0x18F687C", VA = "0x18F687C")]
	private void Start()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x18F6880", Offset = "0x18F6880", VA = "0x18F6880")]
	private void Update()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x18F6884", Offset = "0x18F6884", VA = "0x18F6884")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000CE")]
internal static class CustomTypes
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly byte[] memVector3;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly byte[] memVector2;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly byte[] memQuarternion;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly byte[] memPlayer;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xC4BCA8", Offset = "0xC4BCA8", VA = "0xC4BCA8")]
	internal static void Register()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xC4BF34", Offset = "0xC4BF34", VA = "0xC4BF34")]
	private static short SerializeVector3(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xC4C148", Offset = "0xC4C148", VA = "0xC4C148")]
	private static object DeserializeVector3(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xC4C34C", Offset = "0xC4C34C", VA = "0xC4C34C")]
	private static short SerializeVector2(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xC4C530", Offset = "0xC4C530", VA = "0xC4C530")]
	private static object DeserializeVector2(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xC4C704", Offset = "0xC4C704", VA = "0xC4C704")]
	private static short SerializeQuaternion(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xC4C924", Offset = "0xC4C924", VA = "0xC4C924")]
	private static object DeserializeQuaternion(StreamBuffer inStream, short length)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xC4CB40", Offset = "0xC4CB40", VA = "0xC4CB40")]
	private static short SerializePhotonPlayer(StreamBuffer outStream, object customobject)
	{
		return default(short);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xC4CD70", Offset = "0xC4CD70", VA = "0xC4CD70")]
	private static object DeserializePhotonPlayer(StreamBuffer inStream, short length)
	{
		return null;
	}
}
[Token(Token = "0x20000CF")]
public enum PhotonNetworkingMessage
{
	[Token(Token = "0x4000472")]
	OnConnectedToPhoton,
	[Token(Token = "0x4000473")]
	OnLeftRoom,
	[Token(Token = "0x4000474")]
	OnMasterClientSwitched,
	[Token(Token = "0x4000475")]
	OnPhotonCreateRoomFailed,
	[Token(Token = "0x4000476")]
	OnPhotonJoinRoomFailed,
	[Token(Token = "0x4000477")]
	OnCreatedRoom,
	[Token(Token = "0x4000478")]
	OnJoinedLobby,
	[Token(Token = "0x4000479")]
	OnLeftLobby,
	[Token(Token = "0x400047A")]
	OnDisconnectedFromPhoton,
	[Token(Token = "0x400047B")]
	OnConnectionFail,
	[Token(Token = "0x400047C")]
	OnFailedToConnectToPhoton,
	[Token(Token = "0x400047D")]
	OnReceivedRoomListUpdate,
	[Token(Token = "0x400047E")]
	OnJoinedRoom,
	[Token(Token = "0x400047F")]
	OnPhotonPlayerConnected,
	[Token(Token = "0x4000480")]
	OnPhotonPlayerDisconnected,
	[Token(Token = "0x4000481")]
	OnPhotonRandomJoinFailed,
	[Token(Token = "0x4000482")]
	OnConnectedToMaster,
	[Token(Token = "0x4000483")]
	OnPhotonSerializeView,
	[Token(Token = "0x4000484")]
	OnPhotonInstantiate,
	[Token(Token = "0x4000485")]
	OnPhotonMaxCccuReached,
	[Token(Token = "0x4000486")]
	OnPhotonCustomRoomPropertiesChanged,
	[Token(Token = "0x4000487")]
	OnPhotonPlayerPropertiesChanged,
	[Token(Token = "0x4000488")]
	OnUpdatedFriendList,
	[Token(Token = "0x4000489")]
	OnCustomAuthenticationFailed,
	[Token(Token = "0x400048A")]
	OnCustomAuthenticationResponse,
	[Token(Token = "0x400048B")]
	OnWebRpcResponse,
	[Token(Token = "0x400048C")]
	OnOwnershipRequest,
	[Token(Token = "0x400048D")]
	OnLobbyStatisticsUpdate,
	[Token(Token = "0x400048E")]
	OnPhotonPlayerActivityChanged,
	[Token(Token = "0x400048F")]
	OnOwnershipTransfered
}
[Token(Token = "0x20000D0")]
public enum PhotonLogLevel
{
	[Token(Token = "0x4000491")]
	ErrorsOnly,
	[Token(Token = "0x4000492")]
	Informational,
	[Token(Token = "0x4000493")]
	Full
}
[Token(Token = "0x20000D1")]
public enum PhotonTargets
{
	[Token(Token = "0x4000495")]
	All,
	[Token(Token = "0x4000496")]
	Others,
	[Token(Token = "0x4000497")]
	MasterClient,
	[Token(Token = "0x4000498")]
	AllBuffered,
	[Token(Token = "0x4000499")]
	OthersBuffered,
	[Token(Token = "0x400049A")]
	AllViaServer,
	[Token(Token = "0x400049B")]
	AllBufferedViaServer
}
[Token(Token = "0x20000D2")]
public enum CloudRegionCode
{
	[Token(Token = "0x400049D")]
	eu = 0,
	[Token(Token = "0x400049E")]
	us = 1,
	[Token(Token = "0x400049F")]
	asia = 2,
	[Token(Token = "0x40004A0")]
	jp = 3,
	[Token(Token = "0x40004A1")]
	au = 5,
	[Token(Token = "0x40004A2")]
	usw = 6,
	[Token(Token = "0x40004A3")]
	sa = 7,
	[Token(Token = "0x40004A4")]
	cae = 8,
	[Token(Token = "0x40004A5")]
	kr = 9,
	[Token(Token = "0x40004A6")]
	@in = 10,
	[Token(Token = "0x40004A7")]
	ru = 11,
	[Token(Token = "0x40004A8")]
	rue = 12,
	[Token(Token = "0x40004A9")]
	none = 4
}
[Token(Token = "0x20000D3")]
[Flags]
public enum CloudRegionFlag
{
	[Token(Token = "0x40004AB")]
	eu = 1,
	[Token(Token = "0x40004AC")]
	us = 2,
	[Token(Token = "0x40004AD")]
	asia = 4,
	[Token(Token = "0x40004AE")]
	jp = 8,
	[Token(Token = "0x40004AF")]
	au = 0x10,
	[Token(Token = "0x40004B0")]
	usw = 0x20,
	[Token(Token = "0x40004B1")]
	sa = 0x40,
	[Token(Token = "0x40004B2")]
	cae = 0x80,
	[Token(Token = "0x40004B3")]
	kr = 0x100,
	[Token(Token = "0x40004B4")]
	@in = 0x200,
	[Token(Token = "0x40004B5")]
	ru = 0x400,
	[Token(Token = "0x40004B6")]
	rue = 0x800
}
[Token(Token = "0x20000D4")]
public enum ConnectionState
{
	[Token(Token = "0x40004B8")]
	Disconnected,
	[Token(Token = "0x40004B9")]
	Connecting,
	[Token(Token = "0x40004BA")]
	Connected,
	[Token(Token = "0x40004BB")]
	Disconnecting,
	[Token(Token = "0x40004BC")]
	InitializingApplication
}
[Token(Token = "0x20000D5")]
public enum EncryptionMode
{
	[Token(Token = "0x40004BE")]
	PayloadEncryption = 0,
	[Token(Token = "0x40004BF")]
	DatagramEncryption = 10
}
[Token(Token = "0x20000D6")]
public static class EncryptionDataParameters
{
	[Token(Token = "0x40004C0")]
	public const byte Mode = 0;

	[Token(Token = "0x40004C1")]
	public const byte Secret1 = 1;

	[Token(Token = "0x40004C2")]
	public const byte Secret2 = 2;
}
[Token(Token = "0x20000D7")]
public static class Extensions
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MethodInfo, ParameterInfo[]> ParametersOfMethods;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xC599D8", Offset = "0xC599D8", VA = "0xC599D8")]
	public static ParameterInfo[] GetCachedParemeters(this MethodInfo mo)
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xC59AFC", Offset = "0xC59AFC", VA = "0xC59AFC")]
	public static PhotonView[] GetPhotonViewsInChildren(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xC59B5C", Offset = "0xC59B5C", VA = "0xC59B5C")]
	public static PhotonView GetPhotonView(this GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xC59BB8", Offset = "0xC59BB8", VA = "0xC59BB8")]
	public static bool AlmostEquals(this Vector3 target, Vector3 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xC59C9C", Offset = "0xC59C9C", VA = "0xC59C9C")]
	public static bool AlmostEquals(this Vector2 target, Vector2 second, float sqrMagnitudePrecision)
	{
		return default(bool);
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xC59D60", Offset = "0xC59D60", VA = "0xC59D60")]
	public static bool AlmostEquals(this Quaternion target, Quaternion second, float maxAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xC59E38", Offset = "0xC59E38", VA = "0xC59E38")]
	public static bool AlmostEquals(this float target, float second, float floatDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xC59EC0", Offset = "0xC59EC0", VA = "0xC59EC0")]
	public static void Merge(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xC5A2D8", Offset = "0xC5A2D8", VA = "0xC5A2D8")]
	public static void MergeStringKeys(this IDictionary target, IDictionary addHash)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xC5A70C", Offset = "0xC5A70C", VA = "0xC5A70C")]
	public static string ToStringFull(this IDictionary origin)
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xC5A778", Offset = "0xC5A778", VA = "0xC5A778")]
	public static string ToStringFull(this object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xC5A8E0", Offset = "0xC5A8E0", VA = "0xC5A8E0")]
	public static ExitGames.Client.Photon.Hashtable StripToStringKeys(this IDictionary original)
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xC5ACA0", Offset = "0xC5ACA0", VA = "0xC5ACA0")]
	public static void StripKeysWithNullValues(this IDictionary original)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xC5B1CC", Offset = "0xC5B1CC", VA = "0xC5B1CC")]
	public static bool Contains(this int[] target, int nr)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D8")]
public static class GameObjectExtensions
{
	[Token(Token = "0x6000435")]
	[Address(RVA = "0xC5B450", Offset = "0xC5B450", VA = "0xC5B450")]
	public static bool GetActive(this GameObject target)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D9")]
public class FriendInfo
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5A44", Offset = "0x9E5A44")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5A54", Offset = "0x9E5A54")]
	private bool <IsOnline>k__BackingField;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5A64", Offset = "0x9E5A64")]
	private string <Room>k__BackingField;

	[Token(Token = "0x1700004B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3DCC", Offset = "0x9F3DCC")]
	public string Name
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0xC5B340", Offset = "0xC5B340", VA = "0xC5B340")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004C")]
	public string UserId
	{
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xC5B348", Offset = "0xC5B348", VA = "0xC5B348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA9A4", Offset = "0x9EA9A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000438")]
		[Address(RVA = "0xC5B350", Offset = "0xC5B350", VA = "0xC5B350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA9B4", Offset = "0x9EA9B4")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool IsOnline
	{
		[Token(Token = "0x6000439")]
		[Address(RVA = "0xC5B358", Offset = "0xC5B358", VA = "0xC5B358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA9C4", Offset = "0x9EA9C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600043A")]
		[Address(RVA = "0xC5B360", Offset = "0xC5B360", VA = "0xC5B360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA9D4", Offset = "0x9EA9D4")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public string Room
	{
		[Token(Token = "0x600043B")]
		[Address(RVA = "0xC5B36C", Offset = "0xC5B36C", VA = "0xC5B36C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA9E4", Offset = "0x9EA9E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600043C")]
		[Address(RVA = "0xC5B374", Offset = "0xC5B374", VA = "0xC5B374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EA9F4", Offset = "0x9EA9F4")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public bool IsInRoom
	{
		[Token(Token = "0x600043D")]
		[Address(RVA = "0xC5B37C", Offset = "0xC5B37C", VA = "0xC5B37C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xC5B3A8", Offset = "0xC5B3A8", VA = "0xC5B3A8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xC5B448", Offset = "0xC5B448", VA = "0xC5B448")]
	public FriendInfo()
	{
	}
}
[Token(Token = "0x20000DA")]
internal class LoadBalancingPeer : PhotonPeer
{
	[Token(Token = "0x2000332")]
	private enum RoomOptionBit
	{
		[Token(Token = "0x40012AF")]
		CheckUserOnJoin = 1,
		[Token(Token = "0x40012B0")]
		DeleteCacheOnLeave = 2,
		[Token(Token = "0x40012B1")]
		SuppressRoomEvents = 4,
		[Token(Token = "0x40012B2")]
		PublishUserId = 8,
		[Token(Token = "0x40012B3")]
		DeleteNullProps = 0x10,
		[Token(Token = "0x40012B4")]
		BroadcastPropsChangeToAll = 0x20
	}

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly Dictionary<byte, object> opParameters;

	[Token(Token = "0x17000050")]
	internal bool IsProtocolSecure
	{
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xB6D614", Offset = "0xB6D614", VA = "0xB6D614")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xB6D638", Offset = "0xB6D638", VA = "0xB6D638")]
	public LoadBalancingPeer(ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xB6D6D8", Offset = "0xB6D6D8", VA = "0xB6D6D8")]
	public LoadBalancingPeer(IPhotonPeerListener listener, ConnectionProtocol protocolType)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xB6D760", Offset = "0xB6D760", VA = "0xB6D760", Slot = "19")]
	public virtual bool OpGetRegions(string appId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xB6D81C", Offset = "0xB6D81C", VA = "0xB6D81C", Slot = "20")]
	public virtual bool OpJoinLobby([Optional] TypedLobby lobby)
	{
		return default(bool);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xB6D9E4", Offset = "0xB6D9E4", VA = "0xB6D9E4", Slot = "21")]
	public virtual bool OpLeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xB6DAE8", Offset = "0xB6DAE8", VA = "0xB6DAE8")]
	private void RoomOptionsToOpParameters(Dictionary<byte, object> op, RoomOptions roomOptions)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xB6E02C", Offset = "0xB6E02C", VA = "0xB6E02C", Slot = "22")]
	public virtual bool OpCreateRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xB6E32C", Offset = "0xB6E32C", VA = "0xB6E32C", Slot = "23")]
	public virtual bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xB6E6AC", Offset = "0xB6E6AC", VA = "0xB6E6AC", Slot = "24")]
	public virtual bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xB6EA60", Offset = "0xB6EA60", VA = "0xB6EA60", Slot = "25")]
	public virtual bool OpLeaveRoom(bool becomeInactive)
	{
		return default(bool);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xB6EB4C", Offset = "0xB6EB4C", VA = "0xB6EB4C", Slot = "26")]
	public virtual bool OpGetGameList(TypedLobby lobby, string queryData)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xB6EE60", Offset = "0xB6EE60", VA = "0xB6EE60", Slot = "27")]
	public virtual bool OpFindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xB6EF20", Offset = "0xB6EF20", VA = "0xB6EF20")]
	public bool OpSetCustomPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties)
	{
		return default(bool);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xB6EFB0", Offset = "0xB6EFB0", VA = "0xB6EFB0")]
	protected internal bool OpSetPropertiesOfActor(int actorNr, ExitGames.Client.Photon.Hashtable actorProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xB6F2E8", Offset = "0xB6F2E8", VA = "0xB6F2E8")]
	protected internal void OpSetPropertyOfRoom(byte propCode, object value)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xB6F5E8", Offset = "0xB6F5E8", VA = "0xB6F5E8")]
	public bool OpSetCustomPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, bool broadcast, byte channelId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xB6F3AC", Offset = "0xB6F3AC", VA = "0xB6F3AC")]
	protected internal bool OpSetPropertiesOfRoom(ExitGames.Client.Photon.Hashtable gameProperties, [Optional] ExitGames.Client.Photon.Hashtable expectedProperties, bool webForward = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB6F670", Offset = "0xB6F670", VA = "0xB6F670", Slot = "28")]
	public virtual bool OpAuthenticate(string appId, string appVersion, AuthenticationValues authValues, string regionCode, bool getLobbyStatistics)
	{
		return default(bool);
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xB6FBEC", Offset = "0xB6FBEC", VA = "0xB6FBEC", Slot = "29")]
	public virtual bool OpAuthenticateOnce(string appId, string appVersion, AuthenticationValues authValues, string regionCode, EncryptionMode encryptionMode, ConnectionProtocol expectedProtocol)
	{
		return default(bool);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB7010C", Offset = "0xB7010C", VA = "0xB7010C", Slot = "30")]
	public virtual bool OpChangeGroups(byte[] groupsToRemove, byte[] groupsToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xB702A0", Offset = "0xB702A0", VA = "0xB702A0", Slot = "31")]
	public virtual bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xB70550", Offset = "0xB70550", VA = "0xB70550", Slot = "32")]
	public virtual bool OpSettings(bool receiveLobbyStats)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000DB")]
internal class OpJoinRandomRoomParams
{
	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ExitGames.Client.Photon.Hashtable ExpectedCustomRoomProperties;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte ExpectedMaxPlayers;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public MatchmakingMode MatchingType;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby TypedLobby;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SqlLobbyFilter;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xD21E94", Offset = "0xD21E94", VA = "0xD21E94")]
	public OpJoinRandomRoomParams()
	{
	}
}
[Token(Token = "0x20000DC")]
internal class EnterRoomParams
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string RoomName;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomOptions RoomOptions;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TypedLobby Lobby;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExitGames.Client.Photon.Hashtable PlayerProperties;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool OnGameServer;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool CreateIfNotExists;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool RejoinOnly;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] ExpectedUsers;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xC51C24", Offset = "0xC51C24", VA = "0xC51C24")]
	public EnterRoomParams()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ErrorCode
{
	[Token(Token = "0x40004D6")]
	public const int Ok = 0;

	[Token(Token = "0x40004D7")]
	public const int OperationNotAllowedInCurrentState = -3;

	[Token(Token = "0x40004D8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5A74", Offset = "0x9E5A74")]
	public const int InvalidOperationCode = -2;

	[Token(Token = "0x40004D9")]
	public const int InvalidOperation = -2;

	[Token(Token = "0x40004DA")]
	public const int InternalServerError = -1;

	[Token(Token = "0x40004DB")]
	public const int InvalidAuthentication = 32767;

	[Token(Token = "0x40004DC")]
	public const int GameIdAlreadyExists = 32766;

	[Token(Token = "0x40004DD")]
	public const int GameFull = 32765;

	[Token(Token = "0x40004DE")]
	public const int GameClosed = 32764;

	[Token(Token = "0x40004DF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5AAC", Offset = "0x9E5AAC")]
	public const int AlreadyMatched = 32763;

	[Token(Token = "0x40004E0")]
	public const int ServerFull = 32762;

	[Token(Token = "0x40004E1")]
	public const int UserBlocked = 32761;

	[Token(Token = "0x40004E2")]
	public const int NoRandomMatchFound = 32760;

	[Token(Token = "0x40004E3")]
	public const int GameDoesNotExist = 32758;

	[Token(Token = "0x40004E4")]
	public const int MaxCcuReached = 32757;

	[Token(Token = "0x40004E5")]
	public const int InvalidRegion = 32756;

	[Token(Token = "0x40004E6")]
	public const int CustomAuthenticationFailed = 32755;

	[Token(Token = "0x40004E7")]
	public const int AuthenticationTicketExpired = 32753;

	[Token(Token = "0x40004E8")]
	public const int PluginReportedError = 32752;

	[Token(Token = "0x40004E9")]
	public const int PluginMismatch = 32751;

	[Token(Token = "0x40004EA")]
	public const int JoinFailedPeerAlreadyJoined = 32750;

	[Token(Token = "0x40004EB")]
	public const int JoinFailedFoundInactiveJoiner = 32749;

	[Token(Token = "0x40004EC")]
	public const int JoinFailedWithRejoinerNotFound = 32748;

	[Token(Token = "0x40004ED")]
	public const int JoinFailedFoundExcludedUserId = 32747;

	[Token(Token = "0x40004EE")]
	public const int JoinFailedFoundActiveJoiner = 32746;

	[Token(Token = "0x40004EF")]
	public const int HttpLimitReached = 32745;

	[Token(Token = "0x40004F0")]
	public const int ExternalHttpCallFailed = 32744;

	[Token(Token = "0x40004F1")]
	public const int SlotError = 32742;

	[Token(Token = "0x40004F2")]
	public const int InvalidEncryptionParameters = 32741;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xC51C34", Offset = "0xC51C34", VA = "0xC51C34")]
	public ErrorCode()
	{
	}
}
[Token(Token = "0x20000DE")]
public class ActorProperties
{
	[Token(Token = "0x40004F3")]
	public const byte PlayerName = byte.MaxValue;

	[Token(Token = "0x40004F4")]
	public const byte IsInactive = 254;

	[Token(Token = "0x40004F5")]
	public const byte UserId = 253;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xCF8928", Offset = "0xCF8928", VA = "0xCF8928")]
	public ActorProperties()
	{
	}
}
[Token(Token = "0x20000DF")]
public class GamePropertyKey
{
	[Token(Token = "0x40004F6")]
	public const byte MaxPlayers = byte.MaxValue;

	[Token(Token = "0x40004F7")]
	public const byte IsVisible = 254;

	[Token(Token = "0x40004F8")]
	public const byte IsOpen = 253;

	[Token(Token = "0x40004F9")]
	public const byte PlayerCount = 252;

	[Token(Token = "0x40004FA")]
	public const byte Removed = 251;

	[Token(Token = "0x40004FB")]
	public const byte PropsListedInLobby = 250;

	[Token(Token = "0x40004FC")]
	public const byte CleanupCacheOnLeave = 249;

	[Token(Token = "0x40004FD")]
	public const byte MasterClientId = 248;

	[Token(Token = "0x40004FE")]
	public const byte ExpectedUsers = 247;

	[Token(Token = "0x40004FF")]
	public const byte PlayerTtl = 246;

	[Token(Token = "0x4000500")]
	public const byte EmptyRoomTtl = 245;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xC5B47C", Offset = "0xC5B47C", VA = "0xC5B47C")]
	public GamePropertyKey()
	{
	}
}
[Token(Token = "0x20000E0")]
public class EventCode
{
	[Token(Token = "0x4000501")]
	public const byte GameList = 230;

	[Token(Token = "0x4000502")]
	public const byte GameListUpdate = 229;

	[Token(Token = "0x4000503")]
	public const byte QueueState = 228;

	[Token(Token = "0x4000504")]
	public const byte Match = 227;

	[Token(Token = "0x4000505")]
	public const byte AppStats = 226;

	[Token(Token = "0x4000506")]
	public const byte LobbyStats = 224;

	[Token(Token = "0x4000507")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5AE4", Offset = "0x9E5AE4")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x4000508")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x4000509")]
	public const byte Leave = 254;

	[Token(Token = "0x400050A")]
	public const byte PropertiesChanged = 253;

	[Token(Token = "0x400050B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5B1C", Offset = "0x9E5B1C")]
	public const byte SetProperties = 253;

	[Token(Token = "0x400050C")]
	public const byte ErrorInfo = 251;

	[Token(Token = "0x400050D")]
	public const byte CacheSliceChanged = 250;

	[Token(Token = "0x400050E")]
	public const byte AuthEvent = 223;

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xC52820", Offset = "0xC52820", VA = "0xC52820")]
	public EventCode()
	{
	}
}
[Token(Token = "0x20000E1")]
public class ParameterCode
{
	[Token(Token = "0x400050F")]
	public const byte SuppressRoomEvents = 237;

	[Token(Token = "0x4000510")]
	public const byte EmptyRoomTTL = 236;

	[Token(Token = "0x4000511")]
	public const byte PlayerTTL = 235;

	[Token(Token = "0x4000512")]
	public const byte EventForward = 234;

	[Token(Token = "0x4000513")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5B54", Offset = "0x9E5B54")]
	public const byte IsComingBack = 233;

	[Token(Token = "0x4000514")]
	public const byte IsInactive = 233;

	[Token(Token = "0x4000515")]
	public const byte CheckUserOnJoin = 232;

	[Token(Token = "0x4000516")]
	public const byte ExpectedValues = 231;

	[Token(Token = "0x4000517")]
	public const byte Address = 230;

	[Token(Token = "0x4000518")]
	public const byte PeerCount = 229;

	[Token(Token = "0x4000519")]
	public const byte GameCount = 228;

	[Token(Token = "0x400051A")]
	public const byte MasterPeerCount = 227;

	[Token(Token = "0x400051B")]
	public const byte UserId = 225;

	[Token(Token = "0x400051C")]
	public const byte ApplicationId = 224;

	[Token(Token = "0x400051D")]
	public const byte Position = 223;

	[Token(Token = "0x400051E")]
	public const byte MatchMakingType = 223;

	[Token(Token = "0x400051F")]
	public const byte GameList = 222;

	[Token(Token = "0x4000520")]
	public const byte Secret = 221;

	[Token(Token = "0x4000521")]
	public const byte AppVersion = 220;

	[Token(Token = "0x4000522")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5B8C", Offset = "0x9E5B8C")]
	public const byte AzureNodeInfo = 210;

	[Token(Token = "0x4000523")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5BC4", Offset = "0x9E5BC4")]
	public const byte AzureLocalNodeId = 209;

	[Token(Token = "0x4000524")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5BFC", Offset = "0x9E5BFC")]
	public const byte AzureMasterNodeId = 208;

	[Token(Token = "0x4000525")]
	public const byte RoomName = byte.MaxValue;

	[Token(Token = "0x4000526")]
	public const byte Broadcast = 250;

	[Token(Token = "0x4000527")]
	public const byte ActorList = 252;

	[Token(Token = "0x4000528")]
	public const byte ActorNr = 254;

	[Token(Token = "0x4000529")]
	public const byte PlayerProperties = 249;

	[Token(Token = "0x400052A")]
	public const byte CustomEventContent = 245;

	[Token(Token = "0x400052B")]
	public const byte Data = 245;

	[Token(Token = "0x400052C")]
	public const byte Code = 244;

	[Token(Token = "0x400052D")]
	public const byte GameProperties = 248;

	[Token(Token = "0x400052E")]
	public const byte Properties = 251;

	[Token(Token = "0x400052F")]
	public const byte TargetActorNr = 253;

	[Token(Token = "0x4000530")]
	public const byte ReceiverGroup = 246;

	[Token(Token = "0x4000531")]
	public const byte Cache = 247;

	[Token(Token = "0x4000532")]
	public const byte CleanupCacheOnLeave = 241;

	[Token(Token = "0x4000533")]
	public const byte Group = 240;

	[Token(Token = "0x4000534")]
	public const byte Remove = 239;

	[Token(Token = "0x4000535")]
	public const byte PublishUserId = 239;

	[Token(Token = "0x4000536")]
	public const byte Add = 238;

	[Token(Token = "0x4000537")]
	public const byte Info = 218;

	[Token(Token = "0x4000538")]
	public const byte ClientAuthenticationType = 217;

	[Token(Token = "0x4000539")]
	public const byte ClientAuthenticationParams = 216;

	[Token(Token = "0x400053A")]
	public const byte JoinMode = 215;

	[Token(Token = "0x400053B")]
	public const byte ClientAuthenticationData = 214;

	[Token(Token = "0x400053C")]
	public const byte MasterClientId = 203;

	[Token(Token = "0x400053D")]
	public const byte FindFriendsRequestList = 1;

	[Token(Token = "0x400053E")]
	public const byte FindFriendsResponseOnlineList = 1;

	[Token(Token = "0x400053F")]
	public const byte FindFriendsResponseRoomIdList = 2;

	[Token(Token = "0x4000540")]
	public const byte LobbyName = 213;

	[Token(Token = "0x4000541")]
	public const byte LobbyType = 212;

	[Token(Token = "0x4000542")]
	public const byte LobbyStats = 211;

	[Token(Token = "0x4000543")]
	public const byte Region = 210;

	[Token(Token = "0x4000544")]
	public const byte UriPath = 209;

	[Token(Token = "0x4000545")]
	public const byte WebRpcParameters = 208;

	[Token(Token = "0x4000546")]
	public const byte WebRpcReturnCode = 207;

	[Token(Token = "0x4000547")]
	public const byte WebRpcReturnMessage = 206;

	[Token(Token = "0x4000548")]
	public const byte CacheSliceIndex = 205;

	[Token(Token = "0x4000549")]
	public const byte Plugins = 204;

	[Token(Token = "0x400054A")]
	public const byte NickName = 202;

	[Token(Token = "0x400054B")]
	public const byte PluginName = 201;

	[Token(Token = "0x400054C")]
	public const byte PluginVersion = 200;

	[Token(Token = "0x400054D")]
	public const byte ExpectedProtocol = 195;

	[Token(Token = "0x400054E")]
	public const byte CustomInitData = 194;

	[Token(Token = "0x400054F")]
	public const byte EncryptionMode = 193;

	[Token(Token = "0x4000550")]
	public const byte EncryptionData = 192;

	[Token(Token = "0x4000551")]
	public const byte RoomOptionFlags = 191;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xD79FC8", Offset = "0xD79FC8", VA = "0xD79FC8")]
	public ParameterCode()
	{
	}
}
[Token(Token = "0x20000E2")]
public class OperationCode
{
	[Token(Token = "0x4000552")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5C34", Offset = "0x9E5C34")]
	public const byte ExchangeKeysForEncryption = 250;

	[Token(Token = "0x4000553")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5C6C", Offset = "0x9E5C6C")]
	public const byte Join = byte.MaxValue;

	[Token(Token = "0x4000554")]
	public const byte AuthenticateOnce = 231;

	[Token(Token = "0x4000555")]
	public const byte Authenticate = 230;

	[Token(Token = "0x4000556")]
	public const byte JoinLobby = 229;

	[Token(Token = "0x4000557")]
	public const byte LeaveLobby = 228;

	[Token(Token = "0x4000558")]
	public const byte CreateGame = 227;

	[Token(Token = "0x4000559")]
	public const byte JoinGame = 226;

	[Token(Token = "0x400055A")]
	public const byte JoinRandomGame = 225;

	[Token(Token = "0x400055B")]
	public const byte Leave = 254;

	[Token(Token = "0x400055C")]
	public const byte RaiseEvent = 253;

	[Token(Token = "0x400055D")]
	public const byte SetProperties = 252;

	[Token(Token = "0x400055E")]
	public const byte GetProperties = 251;

	[Token(Token = "0x400055F")]
	public const byte ChangeGroups = 248;

	[Token(Token = "0x4000560")]
	public const byte FindFriends = 222;

	[Token(Token = "0x4000561")]
	public const byte GetLobbyStats = 221;

	[Token(Token = "0x4000562")]
	public const byte GetRegions = 220;

	[Token(Token = "0x4000563")]
	public const byte WebRpc = 219;

	[Token(Token = "0x4000564")]
	public const byte ServerSettings = 218;

	[Token(Token = "0x4000565")]
	public const byte GetGameList = 217;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xD21E9C", Offset = "0xD21E9C", VA = "0xD21E9C")]
	public OperationCode()
	{
	}
}
[Token(Token = "0x20000E3")]
public enum JoinMode : byte
{
	[Token(Token = "0x4000567")]
	Default,
	[Token(Token = "0x4000568")]
	CreateIfNotExists,
	[Token(Token = "0x4000569")]
	JoinOrRejoin,
	[Token(Token = "0x400056A")]
	RejoinOnly
}
[Token(Token = "0x20000E4")]
public enum MatchmakingMode : byte
{
	[Token(Token = "0x400056C")]
	FillRoom,
	[Token(Token = "0x400056D")]
	SerialMatching,
	[Token(Token = "0x400056E")]
	RandomMatching
}
[Token(Token = "0x20000E5")]
public enum ReceiverGroup : byte
{
	[Token(Token = "0x4000570")]
	Others,
	[Token(Token = "0x4000571")]
	All,
	[Token(Token = "0x4000572")]
	MasterClient
}
[Token(Token = "0x20000E6")]
public enum EventCaching : byte
{
	[Token(Token = "0x4000574")]
	DoNotCache = 0,
	[Token(Token = "0x4000575")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5C7C", Offset = "0x9E5C7C")]
	MergeCache = 1,
	[Token(Token = "0x4000576")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5C8C", Offset = "0x9E5C8C")]
	ReplaceCache = 2,
	[Token(Token = "0x4000577")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5C9C", Offset = "0x9E5C9C")]
	RemoveCache = 3,
	[Token(Token = "0x4000578")]
	AddToRoomCache = 4,
	[Token(Token = "0x4000579")]
	AddToRoomCacheGlobal = 5,
	[Token(Token = "0x400057A")]
	RemoveFromRoomCache = 6,
	[Token(Token = "0x400057B")]
	RemoveFromRoomCacheForActorsLeft = 7,
	[Token(Token = "0x400057C")]
	SliceIncreaseIndex = 10,
	[Token(Token = "0x400057D")]
	SliceSetIndex = 11,
	[Token(Token = "0x400057E")]
	SlicePurgeIndex = 12,
	[Token(Token = "0x400057F")]
	SlicePurgeUpToIndex = 13
}
[Token(Token = "0x20000E7")]
[Flags]
public enum PropertyTypeFlag : byte
{
	[Token(Token = "0x4000581")]
	None = 0,
	[Token(Token = "0x4000582")]
	Game = 1,
	[Token(Token = "0x4000583")]
	Actor = 2,
	[Token(Token = "0x4000584")]
	GameAndActor = 3
}
[Token(Token = "0x20000E8")]
public class RoomOptions
{
	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isVisibleField;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isOpenField;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public byte MaxPlayers;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int PlayerTtl;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int EmptyRoomTtl;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool cleanupCacheOnLeaveField;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExitGames.Client.Photon.Hashtable CustomRoomProperties;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] CustomRoomPropertiesForLobby;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] Plugins;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool suppressRoomEventsField;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool publishUserIdField;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool deleteNullPropertiesField;

	[Token(Token = "0x17000051")]
	public bool IsVisible
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xC02CD0", Offset = "0xC02CD0", VA = "0xC02CD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xC046CC", Offset = "0xC046CC", VA = "0xC046CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool IsOpen
	{
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xC02CD8", Offset = "0xC02CD8", VA = "0xC02CD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xC046D8", Offset = "0xC046D8", VA = "0xC046D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public bool CleanupCacheOnLeave
	{
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xC02CE0", Offset = "0xC02CE0", VA = "0xC02CE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xC046E4", Offset = "0xC046E4", VA = "0xC046E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public bool SuppressRoomEvents
	{
		[Token(Token = "0x6000465")]
		[Address(RVA = "0xC046F0", Offset = "0xC046F0", VA = "0xC046F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000055")]
	public bool PublishUserId
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xC046F8", Offset = "0xC046F8", VA = "0xC046F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xC04700", Offset = "0xC04700", VA = "0xC04700")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool DeleteNullProperties
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0xC0470C", Offset = "0xC0470C", VA = "0xC0470C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xC04714", Offset = "0xC04714", VA = "0xC04714")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3E04", Offset = "0x9F3E04")]
	public bool isVisible
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xC04720", Offset = "0xC04720", VA = "0xC04720")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xC04728", Offset = "0xC04728", VA = "0xC04728")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3E3C", Offset = "0x9F3E3C")]
	public bool isOpen
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xC04734", Offset = "0xC04734", VA = "0xC04734")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xC0473C", Offset = "0xC0473C", VA = "0xC0473C")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3E74", Offset = "0x9F3E74")]
	public byte maxPlayers
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xC04748", Offset = "0xC04748", VA = "0xC04748")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600046F")]
		[Address(RVA = "0xC04750", Offset = "0xC04750", VA = "0xC04750")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3EAC", Offset = "0x9F3EAC")]
	public bool cleanupCacheOnLeave
	{
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xC04758", Offset = "0xC04758", VA = "0xC04758")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000471")]
		[Address(RVA = "0xC04760", Offset = "0xC04760", VA = "0xC04760")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3EE4", Offset = "0x9F3EE4")]
	public ExitGames.Client.Photon.Hashtable customRoomProperties
	{
		[Token(Token = "0x6000472")]
		[Address(RVA = "0xC0476C", Offset = "0xC0476C", VA = "0xC0476C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000473")]
		[Address(RVA = "0xC04774", Offset = "0xC04774", VA = "0xC04774")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3F1C", Offset = "0x9F3F1C")]
	public string[] customRoomPropertiesForLobby
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0xC0477C", Offset = "0xC0477C", VA = "0xC0477C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xC04784", Offset = "0xC04784", VA = "0xC04784")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3F54", Offset = "0x9F3F54")]
	public string[] plugins
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xC0478C", Offset = "0xC0478C", VA = "0xC0478C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xC04794", Offset = "0xC04794", VA = "0xC04794")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3F8C", Offset = "0x9F3F8C")]
	public bool suppressRoomEvents
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0xC0479C", Offset = "0xC0479C", VA = "0xC0479C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3FC4", Offset = "0x9F3FC4")]
	public bool publishUserId
	{
		[Token(Token = "0x6000479")]
		[Address(RVA = "0xC047A4", Offset = "0xC047A4", VA = "0xC047A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600047A")]
		[Address(RVA = "0xC047AC", Offset = "0xC047AC", VA = "0xC047AC")]
		set
		{
		}
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC02C38", Offset = "0xC02C38", VA = "0xC02C38")]
	public RoomOptions()
	{
	}
}
[Token(Token = "0x20000E9")]
public class RaiseEventOptions
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RaiseEventOptions Default;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventCaching CachingOption;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte InterestGroup;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] TargetActors;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReceiverGroup Receivers;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte SequenceChannel;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool ForwardToWebhook;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool Encrypt;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC00B20", Offset = "0xC00B20", VA = "0xC00B20")]
	public void Reset()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xC004A8", Offset = "0xC004A8", VA = "0xC004A8")]
	public RaiseEventOptions()
	{
	}
}
[Token(Token = "0x20000EA")]
public enum LobbyType : byte
{
	[Token(Token = "0x400059A")]
	Default = 0,
	[Token(Token = "0x400059B")]
	SqlLobby = 2,
	[Token(Token = "0x400059C")]
	AsyncRandomLobby = 3
}
[Token(Token = "0x20000EB")]
public class TypedLobby
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyType Type;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly TypedLobby Default;

	[Token(Token = "0x17000060")]
	public bool IsDefault
	{
		[Token(Token = "0x600047F")]
		[Address(RVA = "0xC3F4F4", Offset = "0xC3F4F4", VA = "0xC3F4F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xC3F510", Offset = "0xC3F510", VA = "0xC3F510")]
	public TypedLobby()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xC3F578", Offset = "0xC3F578", VA = "0xC3F578")]
	public TypedLobby(string name, LobbyType type)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xC3F5B4", Offset = "0xC3F5B4", VA = "0xC3F5B4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000EC")]
public class TypedLobbyInfo : TypedLobby
{
	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PlayerCount;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RoomCount;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xC3F69C", Offset = "0xC3F69C", VA = "0xC3F69C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xC3F8A4", Offset = "0xC3F8A4", VA = "0xC3F8A4")]
	public TypedLobbyInfo()
	{
	}
}
[Token(Token = "0x20000ED")]
public enum AuthModeOption
{
	[Token(Token = "0x40005A3")]
	Auth,
	[Token(Token = "0x40005A4")]
	AuthOnce,
	[Token(Token = "0x40005A5")]
	AuthOnceWss
}
[Token(Token = "0x20000EE")]
public enum CustomAuthenticationType : byte
{
	[Token(Token = "0x40005A7")]
	Custom = 0,
	[Token(Token = "0x40005A8")]
	Steam = 1,
	[Token(Token = "0x40005A9")]
	Facebook = 2,
	[Token(Token = "0x40005AA")]
	Oculus = 3,
	[Token(Token = "0x40005AB")]
	PlayStation = 4,
	[Token(Token = "0x40005AC")]
	Xbox = 5,
	[Token(Token = "0x40005AD")]
	None = byte.MaxValue
}
[Token(Token = "0x20000EF")]
public class AuthenticationValues
{
	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomAuthenticationType authType;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5CAC", Offset = "0x9E5CAC")]
	private string <AuthGetParameters>k__BackingField;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5CBC", Offset = "0x9E5CBC")]
	private object <AuthPostData>k__BackingField;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5CCC", Offset = "0x9E5CCC")]
	private string <Token>k__BackingField;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5CDC", Offset = "0x9E5CDC")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x17000061")]
	public CustomAuthenticationType AuthType
	{
		[Token(Token = "0x6000486")]
		[Address(RVA = "0xCF93BC", Offset = "0xCF93BC", VA = "0xCF93BC")]
		get
		{
			return default(CustomAuthenticationType);
		}
		[Token(Token = "0x6000487")]
		[Address(RVA = "0xCF93C4", Offset = "0xCF93C4", VA = "0xCF93C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public string AuthGetParameters
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xCF93CC", Offset = "0xCF93CC", VA = "0xCF93CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA04", Offset = "0x9EAA04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000489")]
		[Address(RVA = "0xCF93D4", Offset = "0xCF93D4", VA = "0xCF93D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA14", Offset = "0x9EAA14")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public object AuthPostData
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xCF93DC", Offset = "0xCF93DC", VA = "0xCF93DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA24", Offset = "0x9EAA24")]
		get
		{
			return null;
		}
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xCF93E4", Offset = "0xCF93E4", VA = "0xCF93E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA34", Offset = "0x9EAA34")]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public string Token
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xCF93EC", Offset = "0xCF93EC", VA = "0xCF93EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA44", Offset = "0x9EAA44")]
		get
		{
			return null;
		}
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xCF93F4", Offset = "0xCF93F4", VA = "0xCF93F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA54", Offset = "0x9EAA54")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public string UserId
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0xCF93FC", Offset = "0xCF93FC", VA = "0xCF93FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA64", Offset = "0x9EAA64")]
		get
		{
			return null;
		}
		[Token(Token = "0x600048F")]
		[Address(RVA = "0xCF9404", Offset = "0xCF9404", VA = "0xCF9404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA74", Offset = "0x9EAA74")]
		set
		{
		}
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xCF940C", Offset = "0xCF940C", VA = "0xCF940C")]
	public AuthenticationValues()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xCF941C", Offset = "0xCF941C", VA = "0xCF941C")]
	public AuthenticationValues(string userId)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xCF9450", Offset = "0xCF9450", VA = "0xCF9450", Slot = "4")]
	public virtual void SetAuthPostData(string stringData)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xCF9494", Offset = "0xCF9494", VA = "0xCF9494", Slot = "5")]
	public virtual void SetAuthPostData(byte[] byteData)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xCF949C", Offset = "0xCF949C", VA = "0xCF949C", Slot = "6")]
	public virtual void SetAuthPostData(Dictionary<string, object> dictData)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xCF94A4", Offset = "0xCF94A4", VA = "0xCF94A4", Slot = "7")]
	public virtual void AddAuthParameter(string key, string value)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xCF96C8", Offset = "0xCF96C8", VA = "0xCF96C8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000F0")]
public enum ClientState
{
	[Token(Token = "0x40005B4")]
	Uninitialized,
	[Token(Token = "0x40005B5")]
	PeerCreated,
	[Token(Token = "0x40005B6")]
	Queued,
	[Token(Token = "0x40005B7")]
	Authenticated,
	[Token(Token = "0x40005B8")]
	JoinedLobby,
	[Token(Token = "0x40005B9")]
	DisconnectingFromMasterserver,
	[Token(Token = "0x40005BA")]
	ConnectingToGameserver,
	[Token(Token = "0x40005BB")]
	ConnectedToGameserver,
	[Token(Token = "0x40005BC")]
	Joining,
	[Token(Token = "0x40005BD")]
	Joined,
	[Token(Token = "0x40005BE")]
	Leaving,
	[Token(Token = "0x40005BF")]
	DisconnectingFromGameserver,
	[Token(Token = "0x40005C0")]
	ConnectingToMasterserver,
	[Token(Token = "0x40005C1")]
	QueuedComingFromGameserver,
	[Token(Token = "0x40005C2")]
	Disconnecting,
	[Token(Token = "0x40005C3")]
	Disconnected,
	[Token(Token = "0x40005C4")]
	ConnectedToMaster,
	[Token(Token = "0x40005C5")]
	ConnectingToNameServer,
	[Token(Token = "0x40005C6")]
	ConnectedToNameServer,
	[Token(Token = "0x40005C7")]
	DisconnectingFromNameServer,
	[Token(Token = "0x40005C8")]
	Authenticating
}
[Token(Token = "0x20000F1")]
internal enum JoinType
{
	[Token(Token = "0x40005CA")]
	CreateRoom,
	[Token(Token = "0x40005CB")]
	JoinRoom,
	[Token(Token = "0x40005CC")]
	JoinRandomRoom,
	[Token(Token = "0x40005CD")]
	JoinOrCreateRoom
}
[Token(Token = "0x20000F2")]
public enum DisconnectCause
{
	[Token(Token = "0x40005CF")]
	DisconnectByServerUserLimit = 1042,
	[Token(Token = "0x40005D0")]
	ExceptionOnConnect = 1023,
	[Token(Token = "0x40005D1")]
	DisconnectByServerTimeout = 1041,
	[Token(Token = "0x40005D2")]
	DisconnectByServerLogic = 1043,
	[Token(Token = "0x40005D3")]
	Exception = 1026,
	[Token(Token = "0x40005D4")]
	InvalidAuthentication = 32767,
	[Token(Token = "0x40005D5")]
	MaxCcuReached = 32757,
	[Token(Token = "0x40005D6")]
	InvalidRegion = 32756,
	[Token(Token = "0x40005D7")]
	SecurityExceptionOnConnect = 1022,
	[Token(Token = "0x40005D8")]
	DisconnectByClientTimeout = 1040,
	[Token(Token = "0x40005D9")]
	InternalReceiveException = 1039,
	[Token(Token = "0x40005DA")]
	AuthenticationTicketExpired = 32753
}
[Token(Token = "0x20000F3")]
public enum ServerConnection
{
	[Token(Token = "0x40005DC")]
	MasterServer,
	[Token(Token = "0x40005DD")]
	GameServer,
	[Token(Token = "0x40005DE")]
	NameServer
}
[Token(Token = "0x20000F4")]
internal class NetworkingPeer : LoadBalancingPeer, IPhotonPeerListener
{
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2914", Offset = "0x9E2914")]
	private sealed class <>c__DisplayClass161_0
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CloudRegionCode bestFromPrefs;

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x18E32F4", Offset = "0x18E32F4", VA = "0x18E32F4")]
		public <>c__DisplayClass161_0()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x18E32FC", Offset = "0x18E32FC", VA = "0x18E32FC")]
		internal bool <OnOperationResponse>b__0(Region x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected internal string AppId;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5CEC", Offset = "0x9E5CEC")]
	private AuthenticationValues <AuthValues>k__BackingField;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string tokenCache;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AuthModeOption AuthMode;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public EncryptionMode EncryptionMode;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5CFC", Offset = "0x9E5CFC")]
	private bool <IsUsingNameServer>k__BackingField;

	[Token(Token = "0x40005E5")]
	public const string NameServerHost = "ns.exitgames.com";

	[Token(Token = "0x40005E6")]
	public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D0C", Offset = "0x9E5D0C")]
	private string <MasterServerAddress>k__BackingField;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D1C", Offset = "0x9E5D1C")]
	private string <GameServerAddress>k__BackingField;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D2C", Offset = "0x9E5D2C")]
	private ServerConnection <Server>k__BackingField;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D3C", Offset = "0x9E5D3C")]
	private ClientState <State>k__BackingField;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool IsInitialConnect;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	public bool insideLobby;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D4C", Offset = "0x9E5D4C")]
	private TypedLobby <lobby>k__BackingField;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected internal List<TypedLobbyInfo> LobbyStatistics;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Dictionary<string, RoomInfo> mGameList;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public RoomInfo[] mGameListCopy;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string playername;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool mPlayernameHasToBeUpdated;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Room currentRoom;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D5C", Offset = "0x9E5D5C")]
	private PhotonPlayer <LocalPlayer>k__BackingField;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D6C", Offset = "0x9E5D6C")]
	private int <PlayersOnMasterCount>k__BackingField;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D7C", Offset = "0x9E5D7C")]
	private int <PlayersInRoomsCount>k__BackingField;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D8C", Offset = "0x9E5D8C")]
	private int <RoomsCount>k__BackingField;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private JoinType lastJoinType;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected internal EnterRoomParams enterRoomParamsCache;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool didAuthenticate;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string[] friendListRequested;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int friendListTimestamp;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool isFetchingFriendList;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5D9C", Offset = "0x9E5D9C")]
	private List<Region> <AvailableRegions>k__BackingField;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5DAC", Offset = "0x9E5DAC")]
	private CloudRegionCode <CloudRegion>k__BackingField;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Dictionary<int, PhotonPlayer> mActors;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public PhotonPlayer[] mOtherPlayerListCopy;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public PhotonPlayer[] mPlayerListCopy;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool hasSwitchedMC;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private HashSet<byte> allowedReceivingGroups;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private HashSet<byte> blockSendingGroups;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected internal Dictionary<int, PhotonView> photonViewList;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private readonly PhotonStream readStream;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private readonly PhotonStream pStream;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupReliable;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private readonly Dictionary<int, ExitGames.Client.Photon.Hashtable> dataPerGroupUnreliable;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected internal short currentLevelPrefix;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x202")]
	protected internal bool loadingLevelAndPausedNetwork;

	[Token(Token = "0x400060E")]
	protected internal const string CurrentSceneProperty = "curScn";

	[Token(Token = "0x400060F")]
	protected internal const string CurrentScenePropertyLoadAsync = "curScnLa";

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool UsePrefabCache;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	internal IPunPrefabPool ObjectPool;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Dictionary<Type, List<MethodInfo>> monoRPCMethodsCache;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private readonly Dictionary<string, int> rpcShortcuts;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string OnPhotonInstantiateString;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private string cachedServerAddress;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private string cachedApplicationName;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private ServerConnection cachedServerType;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private UnityEngine.AsyncOperation _AsyncLevelLoadingOperation;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private RaiseEventOptions _levelReloadEventOptions;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private bool _isReconnecting;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Dictionary<int, object[]> tempInstantiationData;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int ObjectsInOneUpdate;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private RaiseEventOptions options;

	[Token(Token = "0x400061F")]
	public const int SyncViewId = 0;

	[Token(Token = "0x4000620")]
	public const int SyncCompressed = 1;

	[Token(Token = "0x4000621")]
	public const int SyncNullValues = 2;

	[Token(Token = "0x4000622")]
	public const int SyncFirstValue = 3;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public bool IsReloadingLevel;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x261")]
	public bool AsynchLevelLoadCall;

	[Token(Token = "0x17000066")]
	protected internal string AppVersion
	{
		[Token(Token = "0x6000497")]
		[Address(RVA = "0xB7B86C", Offset = "0xB7B86C", VA = "0xB7B86C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public AuthenticationValues AuthValues
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xB7B8F4", Offset = "0xB7B8F4", VA = "0xB7B8F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA84", Offset = "0x9EAA84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xB7B8FC", Offset = "0xB7B8FC", VA = "0xB7B8FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAA94", Offset = "0x9EAA94")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	private string TokenForInit
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0xB7B904", Offset = "0xB7B904", VA = "0xB7B904")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public bool IsUsingNameServer
	{
		[Token(Token = "0x600049B")]
		[Address(RVA = "0xB7B924", Offset = "0xB7B924", VA = "0xB7B924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAA4", Offset = "0x9EAAA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xB7B92C", Offset = "0xB7B92C", VA = "0xB7B92C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAB4", Offset = "0x9EAAB4")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public string NameServerAddress
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0xB7B938", Offset = "0xB7B938", VA = "0xB7B938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public string MasterServerAddress
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xB7BAC0", Offset = "0xB7BAC0", VA = "0xB7BAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAC4", Offset = "0x9EAAC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xB7BAC8", Offset = "0xB7BAC8", VA = "0xB7BAC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAD4", Offset = "0x9EAAD4")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public string GameServerAddress
	{
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xB7BAD0", Offset = "0xB7BAD0", VA = "0xB7BAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAE4", Offset = "0x9EAAE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xB7BAD8", Offset = "0xB7BAD8", VA = "0xB7BAD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAAF4", Offset = "0x9EAAF4")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	protected internal ServerConnection Server
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xB7BAE0", Offset = "0xB7BAE0", VA = "0xB7BAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB04", Offset = "0x9EAB04")]
		get
		{
			return default(ServerConnection);
		}
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xB7BAE8", Offset = "0xB7BAE8", VA = "0xB7BAE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB14", Offset = "0x9EAB14")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public ClientState State
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xB7BAF0", Offset = "0xB7BAF0", VA = "0xB7BAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB24", Offset = "0x9EAB24")]
		get
		{
			return default(ClientState);
		}
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xB7BAF8", Offset = "0xB7BAF8", VA = "0xB7BAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB34", Offset = "0x9EAB34")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public TypedLobby lobby
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xB7BB00", Offset = "0xB7BB00", VA = "0xB7BB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB44", Offset = "0x9EAB44")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xB7BB08", Offset = "0xB7BB08", VA = "0xB7BB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB54", Offset = "0x9EAB54")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	private bool requestLobbyStatistics
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xB7BB10", Offset = "0xB7BB10", VA = "0xB7BB10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public string PlayerName
	{
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xB7BB90", Offset = "0xB7BB90", VA = "0xB7BB90")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xB7BB98", Offset = "0xB7BB98", VA = "0xB7BB98")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public Room CurrentRoom
	{
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xB7BC44", Offset = "0xB7BC44", VA = "0xB7BC44")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xB7BDB8", Offset = "0xB7BDB8", VA = "0xB7BDB8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public PhotonPlayer LocalPlayer
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xB7BC3C", Offset = "0xB7BC3C", VA = "0xB7BC3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB64", Offset = "0x9EAB64")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xB7BDC0", Offset = "0xB7BDC0", VA = "0xB7BDC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB74", Offset = "0x9EAB74")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public int PlayersOnMasterCount
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xB7BDC8", Offset = "0xB7BDC8", VA = "0xB7BDC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB84", Offset = "0x9EAB84")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xB7BDD0", Offset = "0xB7BDD0", VA = "0xB7BDD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAB94", Offset = "0x9EAB94")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public int PlayersInRoomsCount
	{
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xB7BDD8", Offset = "0xB7BDD8", VA = "0xB7BDD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EABA4", Offset = "0x9EABA4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xB7BDE0", Offset = "0xB7BDE0", VA = "0xB7BDE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EABB4", Offset = "0x9EABB4")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public int RoomsCount
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xB7BDE8", Offset = "0xB7BDE8", VA = "0xB7BDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EABC4", Offset = "0x9EABC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xB7BDF0", Offset = "0xB7BDF0", VA = "0xB7BDF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EABD4", Offset = "0x9EABD4")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000077")]
	protected internal int FriendListAge
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xB7BDF8", Offset = "0xB7BDF8", VA = "0xB7BDF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000078")]
	public bool IsAuthorizeSecretAvailable
	{
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xB7BE3C", Offset = "0xB7BE3C", VA = "0xB7BE3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000079")]
	public List<Region> AvailableRegions
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xB7BE74", Offset = "0xB7BE74", VA = "0xB7BE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EABE4", Offset = "0x9EABE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xB7BE7C", Offset = "0xB7BE7C", VA = "0xB7BE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EABF4", Offset = "0x9EABF4")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public CloudRegionCode CloudRegion
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xB7BE84", Offset = "0xB7BE84", VA = "0xB7BE84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC04", Offset = "0x9EAC04")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xB7BE8C", Offset = "0xB7BE8C", VA = "0xB7BE8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC14", Offset = "0x9EAC14")]
		protected internal set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public int mMasterClientId
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xB7BE94", Offset = "0xB7BE94", VA = "0xB7BE94")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xB7BF74", Offset = "0xB7BF74", VA = "0xB7BF74")]
		private set
		{
		}
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xB7BFE4", Offset = "0xB7BFE4", VA = "0xB7BFE4")]
	public NetworkingPeer(string playername, ConnectionProtocol connectionProtocol)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xB7B93C", Offset = "0xB7B93C", VA = "0xB7B93C")]
	private string GetNameServerAddress()
	{
		return null;
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xB7C604", Offset = "0xB7C604", VA = "0xB7C604", Slot = "6")]
	public override bool Connect(string serverAddress, string applicationName)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xB7C678", Offset = "0xB7C678", VA = "0xB7C678")]
	public bool ReconnectToMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xB7C95C", Offset = "0xB7C95C", VA = "0xB7C95C")]
	public bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xB7C750", Offset = "0xB7C750", VA = "0xB7C750")]
	public bool Connect(string serverAddress, ServerConnection type)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xB7D0BC", Offset = "0xB7D0BC", VA = "0xB7D0BC")]
	private bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xB7D1D4", Offset = "0xB7D1D4", VA = "0xB7D1D4")]
	public bool ConnectToNameServer()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xB7D328", Offset = "0xB7D328", VA = "0xB7D328")]
	public bool ConnectToRegionMaster(CloudRegionCode region)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xB7CA6C", Offset = "0xB7CA6C", VA = "0xB7CA6C")]
	protected internal void SetupProtocol(ServerConnection serverType)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xB7D63C", Offset = "0xB7D63C", VA = "0xB7D63C", Slot = "8")]
	public override void Disconnect()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xB7D490", Offset = "0xB7D490", VA = "0xB7D490")]
	private bool CallAuthenticate()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xB7D754", Offset = "0xB7D754", VA = "0xB7D754")]
	private void DisconnectToReconnect()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xB7D790", Offset = "0xB7D790", VA = "0xB7D790")]
	public bool GetRegions()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB7D7E4", Offset = "0xB7D7E4", VA = "0xB7D7E4", Slot = "27")]
	public override bool OpFindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB7D804", Offset = "0xB7D804", VA = "0xB7D804")]
	public bool OpCreateGame(EnterRoomParams enterRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xB7D998", Offset = "0xB7D998", VA = "0xB7D998", Slot = "23")]
	public override bool OpJoinRoom(EnterRoomParams opParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xB7DA00", Offset = "0xB7DA00", VA = "0xB7DA00", Slot = "24")]
	public override bool OpJoinRandomRoom(OpJoinRandomRoomParams opJoinRandomRoomParams)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xB7DAB4", Offset = "0xB7DAB4", VA = "0xB7DAB4", Slot = "31")]
	public override bool OpRaiseEvent(byte eventCode, object customEventContent, bool sendReliable, RaiseEventOptions raiseEventOptions)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xB7DB6C", Offset = "0xB7DB6C", VA = "0xB7DB6C")]
	private void ReadoutProperties(ExitGames.Client.Photon.Hashtable gameProperties, ExitGames.Client.Photon.Hashtable pActorProperties, int targetActorNr)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xB7E218", Offset = "0xB7E218", VA = "0xB7E218")]
	private ExitGames.Client.Photon.Hashtable ReadoutPropertiesForActorNr(ExitGames.Client.Photon.Hashtable actorProperties, int actorNr)
	{
		return null;
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xB7E938", Offset = "0xB7E938", VA = "0xB7E938")]
	public void ChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xB7ECF4", Offset = "0xB7ECF4", VA = "0xB7ECF4")]
	private void LeftLobbyCleanup()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xB7EDCC", Offset = "0xB7EDCC", VA = "0xB7EDCC")]
	private void LeftRoomCleanup()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xB7F060", Offset = "0xB7F060", VA = "0xB7F060")]
	protected internal void LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xB7F85C", Offset = "0xB7F85C", VA = "0xB7F85C")]
	private void GameEnteredOnGameServer(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xB7C4D4", Offset = "0xB7C4D4", VA = "0xB7C4D4")]
	private void AddNewPlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xB80474", Offset = "0xB80474", VA = "0xB80474")]
	private void RemovePlayer(int ID, PhotonPlayer player)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xB7EB34", Offset = "0xB7EB34", VA = "0xB7EB34")]
	private void RebuildPlayerListCopies()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xB80514", Offset = "0xB80514", VA = "0xB80514")]
	private void ResetPhotonViewsOnSerialize()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xB80650", Offset = "0xB80650", VA = "0xB80650")]
	private void HandleEventLeave(int actorID, EventData evLeave)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xB80214", Offset = "0xB80214", VA = "0xB80214")]
	private void CheckMasterClient(int leavingPlayerId)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xB80EF8", Offset = "0xB80EF8", VA = "0xB80EF8")]
	protected internal void UpdateMasterClient()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xB8149C", Offset = "0xB8149C", VA = "0xB8149C")]
	private static int ReturnLowestPlayerId(PhotonPlayer[] players, int playerIdToIgnore)
	{
		return default(int);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xB8158C", Offset = "0xB8158C", VA = "0xB8158C")]
	protected internal bool SetMasterClient(int playerId, bool sync)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xB817B8", Offset = "0xB817B8", VA = "0xB817B8")]
	public bool SetMasterClient(int nextMasterId)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xB7E1A0", Offset = "0xB7E1A0", VA = "0xB7E1A0")]
	protected internal PhotonPlayer GetPlayerWithId(int number)
	{
		return null;
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xB7BC80", Offset = "0xB7BC80", VA = "0xB7BC80")]
	private void SendPlayerName()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xB7D87C", Offset = "0xB7D87C", VA = "0xB7D87C")]
	private ExitGames.Client.Photon.Hashtable GetLocalActorProperties()
	{
		return null;
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xB81924", Offset = "0xB81924", VA = "0xB81924", Slot = "33")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xB81AA4", Offset = "0xB81AA4", VA = "0xB81AA4", Slot = "34")]
	public void OnOperationResponse(OperationResponse operationResponse)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xB84AEC", Offset = "0xB84AEC", VA = "0xB84AEC", Slot = "35")]
	public void OnStatusChanged(StatusCode statusCode)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xB85B88", Offset = "0xB85B88", VA = "0xB85B88", Slot = "36")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xB8C3CC", Offset = "0xB8C3CC", VA = "0xB8C3CC")]
	public void OnMessage(object messages)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xB84794", Offset = "0xB84794", VA = "0xB84794")]
	private void SetupEncryption(Dictionary<byte, object> encryptionData)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xB800CC", Offset = "0xB800CC", VA = "0xB800CC")]
	protected internal void UpdatedActorList(int[] actorsInRoom)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xB8C3D0", Offset = "0xB8C3D0", VA = "0xB8C3D0")]
	private void SendVacantViewIds()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xB7E32C", Offset = "0xB7E32C", VA = "0xB7E32C")]
	public static void SendMonoMessage(PhotonNetworkingMessage methodString, params object[] parameters)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xB88734", Offset = "0xB88734", VA = "0xB88734")]
	protected internal void ExecuteRpc(ExitGames.Client.Photon.Hashtable rpcData, int senderID = 0)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xB8C8A4", Offset = "0xB8C8A4", VA = "0xB8C8A4")]
	private bool CheckTypeMatch(ParameterInfo[] methodParameters, Type[] callParameterTypes)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xB8CAD8", Offset = "0xB8CAD8", VA = "0xB8CAD8")]
	internal ExitGames.Client.Photon.Hashtable SendInstantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, int[] viewIDs, object[] data, bool isGlobalObject)
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xB8B370", Offset = "0xB8B370", VA = "0xB8B370")]
	internal GameObject DoInstantiate(ExitGames.Client.Photon.Hashtable evData, PhotonPlayer photonPlayer, GameObject resourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xB8CFB8", Offset = "0xB8CFB8", VA = "0xB8CFB8")]
	private void StoreInstantiationData(int instantiationId, object[] instantiationData)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xB8D0A0", Offset = "0xB8D0A0", VA = "0xB8D0A0")]
	public object[] FetchInstantiationData(int instantiationId)
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xB8D030", Offset = "0xB8D030", VA = "0xB8D030")]
	private void RemoveInstantiationData(int instantiationId)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xB80FFC", Offset = "0xB80FFC", VA = "0xB80FFC")]
	public void DestroyPlayerObjects(int playerId, bool localOnly)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xB8C394", Offset = "0xB8C394", VA = "0xB8C394")]
	public void DestroyAll(bool localOnly)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xB7F3AC", Offset = "0xB7F3AC", VA = "0xB7F3AC")]
	protected internal void RemoveInstantiatedGO(GameObject go, bool localOnly)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xB8D56C", Offset = "0xB8D56C", VA = "0xB8D56C")]
	private void ServerCleanInstantiateAndDestroy(int instantiateId, int creatorId, bool isRuntimeInstantiated)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xB8D2E4", Offset = "0xB8D2E4", VA = "0xB8D2E4")]
	private void SendDestroyOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xB8D480", Offset = "0xB8D480", VA = "0xB8D480")]
	private void SendDestroyOfAll()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xB8D12C", Offset = "0xB8D12C", VA = "0xB8D12C")]
	private void OpRemoveFromServerInstantiationsOfPlayer(int actorNr)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xB8D9EC", Offset = "0xB8D9EC", VA = "0xB8D9EC")]
	protected internal void RequestOwnership(int viewID, int fromOwner)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xB8DD9C", Offset = "0xB8DD9C", VA = "0xB8DD9C")]
	protected internal void TransferOwnership(int viewID, int playerID)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xB8D804", Offset = "0xB8D804", VA = "0xB8D804")]
	public bool LocalCleanPhotonView(PhotonView view)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xB8C6A0", Offset = "0xB8C6A0", VA = "0xB8C6A0")]
	public PhotonView GetPhotonView(int viewID)
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xB8E14C", Offset = "0xB8E14C", VA = "0xB8E14C")]
	public void RegisterPhotonView(PhotonView netView)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xB8D208", Offset = "0xB8D208", VA = "0xB8D208")]
	public void OpCleanRpcBuffer(int actorNumber)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xB8E44C", Offset = "0xB8E44C", VA = "0xB8E44C")]
	public void OpRemoveCompleteCacheOfPlayer(int actorNumber)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xB8D3D0", Offset = "0xB8D3D0", VA = "0xB8D3D0")]
	public void OpRemoveCompleteCache()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xB8E528", Offset = "0xB8E528", VA = "0xB8E528")]
	private void RemoveCacheOfLeftPlayers()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xB8E63C", Offset = "0xB8E63C", VA = "0xB8E63C")]
	public void CleanRpcBufferIfMine(PhotonView view)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xB8D8B4", Offset = "0xB8D8B4", VA = "0xB8D8B4")]
	public void OpCleanRpcBuffer(PhotonView view)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xB8E8C0", Offset = "0xB8E8C0", VA = "0xB8E8C0")]
	public void RemoveRPCsInGroup(int group)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xB8EA20", Offset = "0xB8EA20", VA = "0xB8EA20")]
	public void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xB8EA28", Offset = "0xB8EA28", VA = "0xB8EA28")]
	internal void RPC(PhotonView view, string methodName, PhotonTargets target, PhotonPlayer player, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xB8F7FC", Offset = "0xB8F7FC", VA = "0xB8F7FC")]
	public void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xB8FB0C", Offset = "0xB8FB0C", VA = "0xB8FB0C")]
	public void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xB8FBAC", Offset = "0xB8FBAC", VA = "0xB8FBAC")]
	public void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xB8FCEC", Offset = "0xB8FCEC", VA = "0xB8FCEC")]
	public void NewSceneLoaded()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xB90090", Offset = "0xB90090", VA = "0xB90090")]
	public void RunViewUpdate()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xB910C0", Offset = "0xB910C0", VA = "0xB910C0")]
	private object[] OnSerializeWrite(PhotonView view)
	{
		return null;
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xB8AA38", Offset = "0xB8AA38", VA = "0xB8AA38")]
	private void OnSerializeRead(object[] data, PhotonPlayer sender, int networkTime, short correctPrefix)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xB9149C", Offset = "0xB9149C", VA = "0xB9149C")]
	private object[] DeltaCompressionWrite(object[] previousContent, object[] currentContent)
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xB91820", Offset = "0xB91820", VA = "0xB91820")]
	private object[] DeltaCompressionRead(object[] lastOnSerializeDataReceived, object[] incomingData)
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xB913D4", Offset = "0xB913D4", VA = "0xB913D4")]
	private bool AlmostEquals(object[] lastData, object[] currentContent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xB91A20", Offset = "0xB91A20", VA = "0xB91A20")]
	private bool AlmostEquals(object one, object two)
	{
		return default(bool);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xB91E34", Offset = "0xB91E34", VA = "0xB91E34")]
	protected internal static bool GetMethod(UnityEngine.MonoBehaviour monob, string methodType, out MethodInfo mi)
	{
		return default(bool);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xB7E57C", Offset = "0xB7E57C", VA = "0xB7E57C")]
	protected internal void LoadLevelIfSynced()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xB91FD0", Offset = "0xB91FD0", VA = "0xB91FD0")]
	protected internal void SetLevelInPropsIfSynced(object levelId, bool initiatingCall, bool asyncLoading = false)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xB92538", Offset = "0xB92538", VA = "0xB92538")]
	private void SendLevelReloadEvent()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xB925F4", Offset = "0xB925F4", VA = "0xB925F4")]
	public void SetApp(string appId, string gameVersion)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xB926C8", Offset = "0xB926C8", VA = "0xB926C8")]
	public bool WebRpc(string uriPath, object parameters)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F5")]
public interface IPunObservable
{
	[Token(Token = "0x600051B")]
	void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info);
}
[Token(Token = "0x20000F6")]
public interface IPunCallbacks
{
	[Token(Token = "0x600051C")]
	void OnConnectedToPhoton();

	[Token(Token = "0x600051D")]
	void OnLeftRoom();

	[Token(Token = "0x600051E")]
	void OnMasterClientSwitched(PhotonPlayer newMasterClient);

	[Token(Token = "0x600051F")]
	void OnPhotonCreateRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x6000520")]
	void OnPhotonJoinRoomFailed(object[] codeAndMsg);

	[Token(Token = "0x6000521")]
	void OnCreatedRoom();

	[Token(Token = "0x6000522")]
	void OnJoinedLobby();

	[Token(Token = "0x6000523")]
	void OnLeftLobby();

	[Token(Token = "0x6000524")]
	void OnFailedToConnectToPhoton(DisconnectCause cause);

	[Token(Token = "0x6000525")]
	void OnConnectionFail(DisconnectCause cause);

	[Token(Token = "0x6000526")]
	void OnDisconnectedFromPhoton();

	[Token(Token = "0x6000527")]
	void OnPhotonInstantiate(PhotonMessageInfo info);

	[Token(Token = "0x6000528")]
	void OnReceivedRoomListUpdate();

	[Token(Token = "0x6000529")]
	void OnJoinedRoom();

	[Token(Token = "0x600052A")]
	void OnPhotonPlayerConnected(PhotonPlayer newPlayer);

	[Token(Token = "0x600052B")]
	void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer);

	[Token(Token = "0x600052C")]
	void OnPhotonRandomJoinFailed(object[] codeAndMsg);

	[Token(Token = "0x600052D")]
	void OnConnectedToMaster();

	[Token(Token = "0x600052E")]
	void OnPhotonMaxCccuReached();

	[Token(Token = "0x600052F")]
	void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged);

	[Token(Token = "0x6000530")]
	void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps);

	[Token(Token = "0x6000531")]
	void OnUpdatedFriendList();

	[Token(Token = "0x6000532")]
	void OnCustomAuthenticationFailed(string debugMessage);

	[Token(Token = "0x6000533")]
	void OnCustomAuthenticationResponse(Dictionary<string, object> data);

	[Token(Token = "0x6000534")]
	void OnWebRpcResponse(OperationResponse response);

	[Token(Token = "0x6000535")]
	void OnOwnershipRequest(object[] viewAndPlayer);

	[Token(Token = "0x6000536")]
	void OnLobbyStatisticsUpdate();

	[Token(Token = "0x6000537")]
	void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer);

	[Token(Token = "0x6000538")]
	void OnOwnershipTransfered(object[] viewAndPlayers);
}
[Token(Token = "0x20000F7")]
public interface IPunPrefabPool
{
	[Token(Token = "0x6000539")]
	GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation);

	[Token(Token = "0x600053A")]
	void Destroy(GameObject gameObject);
}
[Token(Token = "0x20000F8")]
public struct PhotonMessageInfo
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly int timeInt;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly PhotonPlayer sender;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly PhotonView photonView;

	[Token(Token = "0x1700007C")]
	public double timestamp
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0xA852A0", Offset = "0xA852A0", VA = "0xA852A0")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xA85294", Offset = "0xA85294", VA = "0xA85294")]
	public PhotonMessageInfo(PhotonPlayer player, int timestamp, PhotonView view)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xA852B8", Offset = "0xA852B8", VA = "0xA852B8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000F9")]
internal class PunEvent
{
	[Token(Token = "0x4000628")]
	public const byte RPC = 200;

	[Token(Token = "0x4000629")]
	public const byte SendSerialize = 201;

	[Token(Token = "0x400062A")]
	public const byte Instantiation = 202;

	[Token(Token = "0x400062B")]
	public const byte CloseConnection = 203;

	[Token(Token = "0x400062C")]
	public const byte Destroy = 204;

	[Token(Token = "0x400062D")]
	public const byte RemoveCachedRPCs = 205;

	[Token(Token = "0x400062E")]
	public const byte SendSerializeReliable = 206;

	[Token(Token = "0x400062F")]
	public const byte DestroyPlayer = 207;

	[Token(Token = "0x4000630")]
	public const byte AssignMaster = 208;

	[Token(Token = "0x4000631")]
	public const byte OwnershipRequest = 209;

	[Token(Token = "0x4000632")]
	public const byte OwnershipTransfer = 210;

	[Token(Token = "0x4000633")]
	public const byte VacantViewIds = 211;

	[Token(Token = "0x4000634")]
	public const byte levelReload = 212;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xBFF334", Offset = "0xBFF334", VA = "0xBFF334")]
	public PunEvent()
	{
	}
}
[Token(Token = "0x20000FA")]
public class PhotonStream
{
	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool write;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<object> writeData;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private object[] readData;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal byte currentItem;

	[Token(Token = "0x1700007D")]
	public bool isWriting
	{
		[Token(Token = "0x6000542")]
		[Address(RVA = "0xD7C884", Offset = "0xD7C884", VA = "0xD7C884")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007E")]
	public bool isReading
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xD8DA00", Offset = "0xD8DA00", VA = "0xD8DA00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	public int Count
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0xD8DA10", Offset = "0xD8DA10", VA = "0xD8DA10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xD8D8F4", Offset = "0xD8D8F4", VA = "0xD8D8F4")]
	public PhotonStream(bool write, object[] incomingData)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xD8D990", Offset = "0xD8D990", VA = "0xD8D990")]
	public void SetReadStream(object[] incomingData, byte pos = 0)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xD8D9A0", Offset = "0xD8D9A0", VA = "0xD8D9A0")]
	internal void ResetWriteStream()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xD7C144", Offset = "0xD7C144", VA = "0xD7C144")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xD7C214", Offset = "0xD7C214", VA = "0xD7C214")]
	public object PeekNext()
	{
		return null;
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xD7BBC4", Offset = "0xD7BBC4", VA = "0xD7BBC4")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xD8DA98", Offset = "0xD8DA98", VA = "0xD8DA98")]
	public object[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xD8DB10", Offset = "0xD8DB10", VA = "0xD8DB10")]
	public void Serialize(ref bool myBool)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xD8DC64", Offset = "0xD8DC64", VA = "0xD8DC64")]
	public void Serialize(ref int myInt)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xD8DDB0", Offset = "0xD8DDB0", VA = "0xD8DDB0")]
	public void Serialize(ref string value)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xD8DEEC", Offset = "0xD8DEEC", VA = "0xD8DEEC")]
	public void Serialize(ref char value)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xD8E038", Offset = "0xD8E038", VA = "0xD8E038")]
	public void Serialize(ref short value)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xD8E184", Offset = "0xD8E184", VA = "0xD8E184")]
	public void Serialize(ref float obj)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xD8E2D0", Offset = "0xD8E2D0", VA = "0xD8E2D0")]
	public void Serialize(ref PhotonPlayer obj)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xD8E444", Offset = "0xD8E444", VA = "0xD8E444")]
	public void Serialize(ref Vector3 obj)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xD8E5A8", Offset = "0xD8E5A8", VA = "0xD8E5A8")]
	public void Serialize(ref Vector2 obj)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xD8E6F4", Offset = "0xD8E6F4", VA = "0xD8E6F4")]
	public void Serialize(ref Quaternion obj)
	{
	}
}
[Token(Token = "0x20000FB")]
public class SceneManagerHelper
{
	[Token(Token = "0x17000080")]
	public static string ActiveSceneName
	{
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xC0CE2C", Offset = "0xC0CE2C", VA = "0xC0CE2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public static int ActiveSceneBuildIndex
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xC0CE5C", Offset = "0xC0CE5C", VA = "0xC0CE5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xC0CE8C", Offset = "0xC0CE8C", VA = "0xC0CE8C")]
	public SceneManagerHelper()
	{
	}
}
[Token(Token = "0x20000FC")]
public class WebRpcResponse
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5DBC", Offset = "0x9E5DBC")]
	private string <Name>k__BackingField;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5DCC", Offset = "0x9E5DCC")]
	private int <ReturnCode>k__BackingField;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5DDC", Offset = "0x9E5DDC")]
	private string <DebugMessage>k__BackingField;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5DEC", Offset = "0x9E5DEC")]
	private Dictionary<string, object> <Parameters>k__BackingField;

	[Token(Token = "0x17000082")]
	public string Name
	{
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xC41E40", Offset = "0xC41E40", VA = "0xC41E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC24", Offset = "0x9EAC24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xC41E48", Offset = "0xC41E48", VA = "0xC41E48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC34", Offset = "0x9EAC34")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public int ReturnCode
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xC41E50", Offset = "0xC41E50", VA = "0xC41E50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC44", Offset = "0x9EAC44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xC41E58", Offset = "0xC41E58", VA = "0xC41E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC54", Offset = "0x9EAC54")]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public string DebugMessage
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xC41E60", Offset = "0xC41E60", VA = "0xC41E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC64", Offset = "0x9EAC64")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xC41E68", Offset = "0xC41E68", VA = "0xC41E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC74", Offset = "0x9EAC74")]
		private set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public Dictionary<string, object> Parameters
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xC41E70", Offset = "0xC41E70", VA = "0xC41E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC84", Offset = "0x9EAC84")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xC41E78", Offset = "0xC41E78", VA = "0xC41E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAC94", Offset = "0x9EAC94")]
		private set
		{
		}
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xC41E80", Offset = "0xC41E80", VA = "0xC41E80")]
	public WebRpcResponse(OperationResponse response)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xC42058", Offset = "0xC42058", VA = "0xC42058")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x20000FD")]
internal class PhotonHandler : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2924", Offset = "0x9E2924")]
	private sealed class <>c
	{
		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction<Scene, LoadSceneMode> <>9__10_0;

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xD7E3C0", Offset = "0xD7E3C0", VA = "0xD7E3C0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xD7E3C8", Offset = "0xD7E3C8", VA = "0xD7E3C8")]
		internal void <Start>b__10_0(Scene scene, LoadSceneMode loadingMode)
		{
		}
	}

	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2934", Offset = "0x9E2934")]
	private sealed class <PingAvailableRegionsCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool connectToBest;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonPingManager <pingManager>5__2;

		[Token(Token = "0x17000451")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xD7F21C", Offset = "0xD7F21C", VA = "0xD7F21C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000452")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xD7F28C", Offset = "0xD7F28C", VA = "0xD7F28C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xD7E324", Offset = "0xD7E324", VA = "0xD7E324")]
		[DebuggerHidden]
		public <PingAvailableRegionsCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xD7E4A8", Offset = "0xD7E4A8", VA = "0xD7E4A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xD7E4AC", Offset = "0xD7E4AC", VA = "0xD7E4AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xD7F224", Offset = "0xD7F224", VA = "0xD7F224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhotonHandler SP;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int updateIntervalOnSerialize;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nextSendTickCount;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nextSendTickCountOnSerialize;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected internal static bool AppQuits;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected internal static Type PingImplementation;

	[Token(Token = "0x4000646")]
	private const string PlayerPrefsKey = "PUNCloudBestRegion";

	[Token(Token = "0x17000086")]
	internal static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x600056B")]
		[Address(RVA = "0xD7E0A8", Offset = "0xD7E0A8", VA = "0xD7E0A8")]
		get
		{
			return default(CloudRegionCode);
		}
		[Token(Token = "0x600056C")]
		[Address(RVA = "0xD7E12C", Offset = "0xD7E12C", VA = "0xD7E12C")]
		set
		{
		}
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xD7CE14", Offset = "0xD7CE14", VA = "0xD7CE14")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xD7D26C", Offset = "0xD7D26C", VA = "0xD7D26C")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xD7D348", Offset = "0xD7D348", VA = "0xD7D348")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xD7D58C", Offset = "0xD7D58C", VA = "0xD7D58C")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xD7D744", Offset = "0xD7D744", VA = "0xD7D744")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xD7D7A0", Offset = "0xD7D7A0", VA = "0xD7D7A0")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xD7DC5C", Offset = "0xD7DC5C", VA = "0xD7DC5C")]
	protected void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xD7DCD8", Offset = "0xD7DCD8", VA = "0xD7DCD8")]
	protected void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xD7D164", Offset = "0xD7D164", VA = "0xD7D164")]
	public static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xD7D3D8", Offset = "0xD7D3D8", VA = "0xD7D3D8")]
	public static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xD7DD6C", Offset = "0xD7DD6C", VA = "0xD7DD6C")]
	public static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xD7E208", Offset = "0xD7E208", VA = "0xD7E208")]
	protected internal static void PingAvailableRegionsAndConnectToBest()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xD7E2AC", Offset = "0xD7E2AC", VA = "0xD7E2AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EACA4", Offset = "0x9EACA4")]
	internal IEnumerator PingAvailableRegionsCoroutine(bool connectToBest)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xD7E350", Offset = "0xD7E350", VA = "0xD7E350")]
	public PhotonHandler()
	{
	}
}
[Token(Token = "0x20000FE")]
public class PhotonLagSimulationGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect WindowRect;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WindowId;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool Visible;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5DFC", Offset = "0x9E5DFC")]
	private PhotonPeer <Peer>k__BackingField;

	[Token(Token = "0x17000087")]
	public PhotonPeer Peer
	{
		[Token(Token = "0x6000571")]
		[Address(RVA = "0xD7F294", Offset = "0xD7F294", VA = "0xD7F294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD08", Offset = "0x9EAD08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000572")]
		[Address(RVA = "0xD7F29C", Offset = "0xD7F29C", VA = "0xD7F29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD18", Offset = "0x9EAD18")]
		set
		{
		}
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xD7F2A4", Offset = "0xD7F2A4", VA = "0xD7F2A4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xD7F314", Offset = "0xD7F314", VA = "0xD7F314")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xD7F40C", Offset = "0xD7F40C", VA = "0xD7F40C")]
	private void NetSimHasNoPeerWindow(int windowId)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xD7F470", Offset = "0xD7F470", VA = "0xD7F470")]
	private void NetSimWindow(int windowId)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xD7F9C4", Offset = "0xD7F9C4", VA = "0xD7F9C4")]
	public PhotonLagSimulationGui()
	{
	}
}
[Token(Token = "0x20000FF")]
public static class PhotonNetwork
{
	[Token(Token = "0x2000336")]
	public delegate void EventCallback(byte eventCode, object content, int senderId);

	[Serializable]
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2944", Offset = "0x9E2944")]
	private sealed class <>c
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xD8A654", Offset = "0xD8A654", VA = "0xD8A654")]
		public <>c()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xD8A65C", Offset = "0xD8A65C", VA = "0xD8A65C")]
		internal int <.cctor>b__152_0()
		{
			return default(int);
		}
	}

	[Token(Token = "0x400064B")]
	public const string versionPUN = "1.92";

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5E0C", Offset = "0x9E5E0C")]
	private static string <gameVersion>k__BackingField;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static readonly PhotonHandler photonMono;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static NetworkingPeer networkingPeer;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly int MAX_VIEW_IDS;

	[Token(Token = "0x4000650")]
	internal const string serverSettingsAssetFile = "PhotonServerSettings";

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ServerSettings PhotonServerSettings;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool InstantiateInRoomOnly;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static PhotonLogLevel logLevel;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5E1C", Offset = "0x9E5E1C")]
	private static List<FriendInfo> <Friends>k__BackingField;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float precisionForVectorSynchronization;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float precisionForQuaternionSynchronization;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float precisionForFloatSynchronization;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static bool UseRpcMonoBehaviourCache;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public static bool UsePrefabCache;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Dictionary<string, GameObject> PrefabCache;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static HashSet<GameObject> SendMonoMessageTargets;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Type SendMonoMessageTargetType;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool StartRpcsAsCoroutine;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private static bool isOfflineMode;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Room offlineModeRoom;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E5E2C", Offset = "0x9E5E2C")]
	public static int maxConnections;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static bool _mAutomaticallySyncScene;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private static bool m_autoCleanUpPlayerObjects;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static int sendInterval;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static int sendIntervalOnSerialize;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static bool m_isMessageQueueRunning;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static Stopwatch startupStopwatch;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float BackgroundTimeout;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5E64", Offset = "0x9E5E64")]
	private static bool <UseAlternativeUdpPorts>k__BackingField;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal static int lastUsedViewSubId;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	internal static int lastUsedViewSubIdStatic;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	internal static List<int> manuallyAllocatedViewIds;

	[Token(Token = "0x17000088")]
	public static string gameVersion
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xD7FAF8", Offset = "0xD7FAF8", VA = "0xD7FAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD28", Offset = "0x9EAD28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xD7FB60", Offset = "0xD7FB60", VA = "0xD7FB60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD38", Offset = "0x9EAD38")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public static string ServerAddress
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xD7FBCC", Offset = "0xD7FBCC", VA = "0xD7FBCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	public static CloudRegionCode CloudRegion
	{
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xD7FC88", Offset = "0xD7FC88", VA = "0xD7FC88")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x1700008B")]
	public static bool connected
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xD7A38C", Offset = "0xD7A38C", VA = "0xD7A38C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008C")]
	public static bool connecting
	{
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xD7FD7C", Offset = "0xD7FD7C", VA = "0xD7FD7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008D")]
	public static bool connectedAndReady
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0xD7FE1C", Offset = "0xD7FE1C", VA = "0xD7FE1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008E")]
	public static ConnectionState connectionState
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xD7FF0C", Offset = "0xD7FF0C", VA = "0xD7FF0C")]
		get
		{
			return default(ConnectionState);
		}
	}

	[Token(Token = "0x1700008F")]
	public static ClientState connectionStateDetailed
	{
		[Token(Token = "0x6000580")]
		[Address(RVA = "0xD7DA84", Offset = "0xD7DA84", VA = "0xD7DA84")]
		get
		{
			return default(ClientState);
		}
	}

	[Token(Token = "0x17000090")]
	public static ServerConnection Server
	{
		[Token(Token = "0x6000581")]
		[Address(RVA = "0xD7EEE0", Offset = "0xD7EEE0", VA = "0xD7EEE0")]
		get
		{
			return default(ServerConnection);
		}
	}

	[Token(Token = "0x17000091")]
	public static AuthenticationValues AuthValues
	{
		[Token(Token = "0x6000582")]
		[Address(RVA = "0xD80000", Offset = "0xD80000", VA = "0xD80000")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000583")]
		[Address(RVA = "0xD800B4", Offset = "0xD800B4", VA = "0xD800B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public static Room room
	{
		[Token(Token = "0x6000584")]
		[Address(RVA = "0xD7A5D4", Offset = "0xD7A5D4", VA = "0xD7A5D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000093")]
	public static PhotonPlayer player
	{
		[Token(Token = "0x6000585")]
		[Address(RVA = "0xD8016C", Offset = "0xD8016C", VA = "0xD8016C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000094")]
	public static PhotonPlayer masterClient
	{
		[Token(Token = "0x6000586")]
		[Address(RVA = "0xD80220", Offset = "0xD80220", VA = "0xD80220")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000095")]
	public static string playerName
	{
		[Token(Token = "0x6000587")]
		[Address(RVA = "0xD80348", Offset = "0xD80348", VA = "0xD80348")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000588")]
		[Address(RVA = "0xD803C4", Offset = "0xD803C4", VA = "0xD803C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public static PhotonPlayer[] playerList
	{
		[Token(Token = "0x6000589")]
		[Address(RVA = "0xD80448", Offset = "0xD80448", VA = "0xD80448")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000097")]
	public static PhotonPlayer[] otherPlayers
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0xD804FC", Offset = "0xD804FC", VA = "0xD804FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public static List<FriendInfo> Friends
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0xD805B0", Offset = "0xD805B0", VA = "0xD805B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD48", Offset = "0x9EAD48")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058C")]
		[Address(RVA = "0xD80618", Offset = "0xD80618", VA = "0xD80618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD58", Offset = "0x9EAD58")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public static int FriendsListAge
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0xD80684", Offset = "0xD80684", VA = "0xD80684")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009A")]
	public static IPunPrefabPool PrefabPool
	{
		[Token(Token = "0x600058E")]
		[Address(RVA = "0xD80738", Offset = "0xD80738", VA = "0xD80738")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058F")]
		[Address(RVA = "0xD807B0", Offset = "0xD807B0", VA = "0xD807B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public static bool offlineMode
	{
		[Token(Token = "0x6000590")]
		[Address(RVA = "0xD7DB8C", Offset = "0xD7DB8C", VA = "0xD7DB8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000591")]
		[Address(RVA = "0xD8082C", Offset = "0xD8082C", VA = "0xD8082C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public static bool automaticallySyncScene
	{
		[Token(Token = "0x6000592")]
		[Address(RVA = "0xD80AA4", Offset = "0xD80AA4", VA = "0xD80AA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000593")]
		[Address(RVA = "0xD80B0C", Offset = "0xD80B0C", VA = "0xD80B0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public static bool autoCleanUpPlayerObjects
	{
		[Token(Token = "0x6000594")]
		[Address(RVA = "0xD80BE8", Offset = "0xD80BE8", VA = "0xD80BE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000595")]
		[Address(RVA = "0xD80C50", Offset = "0xD80C50", VA = "0xD80C50")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public static bool autoJoinLobby
	{
		[Token(Token = "0x6000596")]
		[Address(RVA = "0xD80D1C", Offset = "0xD80D1C", VA = "0xD80D1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000597")]
		[Address(RVA = "0xD80D94", Offset = "0xD80D94", VA = "0xD80D94")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public static bool EnableLobbyStatistics
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0xD80E14", Offset = "0xD80E14", VA = "0xD80E14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000599")]
		[Address(RVA = "0xD80E8C", Offset = "0xD80E8C", VA = "0xD80E8C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public static List<TypedLobbyInfo> LobbyStatistics
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0xD80F0C", Offset = "0xD80F0C", VA = "0xD80F0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xD80F84", Offset = "0xD80F84", VA = "0xD80F84")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public static bool insideLobby
	{
		[Token(Token = "0x600059C")]
		[Address(RVA = "0xD81000", Offset = "0xD81000", VA = "0xD81000")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public static TypedLobby lobby
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0xD81078", Offset = "0xD81078", VA = "0xD81078")]
		get
		{
			return null;
		}
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xD810F4", Offset = "0xD810F4", VA = "0xD810F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public static int sendRate
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xD7D084", Offset = "0xD7D084", VA = "0xD7D084")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xD81178", Offset = "0xD81178", VA = "0xD81178")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public static int sendRateOnSerialize
	{
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xD7D0F4", Offset = "0xD7D0F4", VA = "0xD7D0F4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xD812BC", Offset = "0xD812BC", VA = "0xD812BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public static bool isMessageQueueRunning
	{
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xD7DBF4", Offset = "0xD7DBF4", VA = "0xD7DBF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xD81420", Offset = "0xD81420", VA = "0xD81420")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public static int unreliableCommandsLimit
	{
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xD814EC", Offset = "0xD814EC", VA = "0xD814EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xD81568", Offset = "0xD81568", VA = "0xD81568")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public static double time
	{
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xD815EC", Offset = "0xD815EC", VA = "0xD815EC")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000A8")]
	public static int ServerTimestamp
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xD8165C", Offset = "0xD8165C", VA = "0xD8165C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A9")]
	public static bool isMasterClient
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xD81740", Offset = "0xD81740", VA = "0xD81740")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AA")]
	public static bool inRoom
	{
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xD7A56C", Offset = "0xD7A56C", VA = "0xD7A56C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AB")]
	public static bool isNonMasterClientInRoom
	{
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xD81810", Offset = "0xD81810", VA = "0xD81810")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AC")]
	public static int countOfPlayersOnMaster
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xD818A0", Offset = "0xD818A0", VA = "0xD818A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AD")]
	public static int countOfPlayersInRooms
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xD8191C", Offset = "0xD8191C", VA = "0xD8191C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AE")]
	public static int countOfPlayers
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xD81998", Offset = "0xD81998", VA = "0xD81998")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AF")]
	public static int countOfRooms
	{
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xD81A44", Offset = "0xD81A44", VA = "0xD81A44")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B0")]
	public static bool NetworkStatisticsEnabled
	{
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xD81AC0", Offset = "0xD81AC0", VA = "0xD81AC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xD81B3C", Offset = "0xD81B3C", VA = "0xD81B3C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public static int ResentReliableCommands
	{
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xD81BC0", Offset = "0xD81BC0", VA = "0xD81BC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B2")]
	public static bool CrcCheckEnabled
	{
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xD81C3C", Offset = "0xD81C3C", VA = "0xD81C3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xD81CB8", Offset = "0xD81CB8", VA = "0xD81CB8")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public static int PacketLossByCrcCheck
	{
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xD81E30", Offset = "0xD81E30", VA = "0xD81E30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B4")]
	public static int MaxResendsBeforeDisconnect
	{
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xD81EAC", Offset = "0xD81EAC", VA = "0xD81EAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xD81F24", Offset = "0xD81F24", VA = "0xD81F24")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public static int QuickResends
	{
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xD81FB8", Offset = "0xD81FB8", VA = "0xD81FB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xD8203C", Offset = "0xD8203C", VA = "0xD8203C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public static bool UseAlternativeUdpPorts
	{
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xD820D0", Offset = "0xD820D0", VA = "0xD820D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD68", Offset = "0x9EAD68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xD82138", Offset = "0xD82138", VA = "0xD82138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD78", Offset = "0x9EAD78")]
		set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event EventCallback OnEventCall
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xD821A8", Offset = "0xD821A8", VA = "0xD821A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD88", Offset = "0x9EAD88")]
		add
		{
		}
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xD8229C", Offset = "0xD8229C", VA = "0xD8229C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAD98", Offset = "0x9EAD98")]
		remove
		{
		}
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xD82390", Offset = "0xD82390", VA = "0xD82390")]
	static PhotonNetwork()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xD82868", Offset = "0xD82868", VA = "0xD82868")]
	public static void SwitchToProtocol(ConnectionProtocol cp)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xD828EC", Offset = "0xD828EC", VA = "0xD828EC")]
	public static bool ConnectUsingSettings(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xD832EC", Offset = "0xD832EC", VA = "0xD832EC")]
	public static bool ConnectToMaster(string masterServerAddress, int port, string appID, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xD83698", Offset = "0xD83698", VA = "0xD83698")]
	public static bool Reconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xD839F4", Offset = "0xD839F4", VA = "0xD839F4")]
	public static bool ReconnectAndRejoin()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xD83004", Offset = "0xD83004", VA = "0xD83004")]
	public static bool ConnectToBestCloudServer(string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xD83D80", Offset = "0xD83D80", VA = "0xD83D80")]
	public static bool ConnectToRegion(CloudRegionCode region, string gameVersion)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xD840F0", Offset = "0xD840F0", VA = "0xD840F0")]
	public static void OverrideBestCloudServer(CloudRegionCode region)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xD84154", Offset = "0xD84154", VA = "0xD84154")]
	public static void RefreshCloudServerRating()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xD841C8", Offset = "0xD841C8", VA = "0xD841C8")]
	public static void NetworkStatisticsReset()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xD84244", Offset = "0xD84244", VA = "0xD84244")]
	public static string NetworkStatisticsToString()
	{
		return null;
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xD84320", Offset = "0xD84320", VA = "0xD84320")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EADA8", Offset = "0x9EADA8")]
	public static void InitializeSecurity()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xD84324", Offset = "0xD84324", VA = "0xD84324")]
	private static bool VerifyCanUseNetwork()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xD7D440", Offset = "0xD7D440", VA = "0xD7D440")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xD843C8", Offset = "0xD843C8", VA = "0xD843C8")]
	public static bool FindFriends(string[] friendsToFind)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xD844AC", Offset = "0xD844AC", VA = "0xD844AC")]
	public static bool CreateRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xD847FC", Offset = "0xD847FC", VA = "0xD847FC")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xD8451C", Offset = "0xD8451C", VA = "0xD8451C")]
	public static bool CreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xD84A48", Offset = "0xD84A48", VA = "0xD84A48")]
	public static bool JoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xD84AB0", Offset = "0xD84AB0", VA = "0xD84AB0")]
	public static bool JoinRoom(string roomName, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xD84D18", Offset = "0xD84D18", VA = "0xD84D18")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xD84D98", Offset = "0xD84D98", VA = "0xD84D98")]
	public static bool JoinOrCreateRoom(string roomName, RoomOptions roomOptions, TypedLobby typedLobby, string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xD850E4", Offset = "0xD850E4", VA = "0xD850E4")]
	public static bool JoinRandomRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xD85480", Offset = "0xD85480", VA = "0xD85480")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xD85158", Offset = "0xD85158", VA = "0xD85158")]
	public static bool JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, byte expectedMaxPlayers, MatchmakingMode matchingType, TypedLobby typedLobby, string sqlLobbyFilter, [Optional] string[] expectedUsers)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xD85504", Offset = "0xD85504", VA = "0xD85504")]
	public static bool ReJoinRoom(string roomName)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xD8487C", Offset = "0xD8487C", VA = "0xD8487C")]
	private static void EnterOfflineRoom(string roomName, RoomOptions roomOptions, bool createdRoom)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xD85728", Offset = "0xD85728", VA = "0xD85728")]
	public static bool JoinLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xD85788", Offset = "0xD85788", VA = "0xD85788")]
	public static bool JoinLobby(TypedLobby typedLobby)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xD858E0", Offset = "0xD858E0", VA = "0xD858E0")]
	public static bool LeaveLobby()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xD859B4", Offset = "0xD859B4", VA = "0xD859B4")]
	public static bool LeaveRoom(bool becomeInactive = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xD85C00", Offset = "0xD85C00", VA = "0xD85C00")]
	public static bool GetCustomRoomList(TypedLobby typedLobby, string sqlLobbyFilter)
	{
		return default(bool);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xD85C9C", Offset = "0xD85C9C", VA = "0xD85C9C")]
	public static RoomInfo[] GetRoomList()
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xD85D70", Offset = "0xD85D70", VA = "0xD85D70")]
	public static void SetPlayerCustomProperties(ExitGames.Client.Photon.Hashtable customProperties)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xD86534", Offset = "0xD86534", VA = "0xD86534")]
	public static void RemovePlayerCustomProperties(string[] customPropertiesToDelete)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xD8671C", Offset = "0xD8671C", VA = "0xD8671C")]
	public static bool RaiseEvent(byte eventCode, object eventContent, bool sendReliable, RaiseEventOptions options)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xD86848", Offset = "0xD86848", VA = "0xD86848")]
	public static int AllocateViewID()
	{
		return default(int);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xD86C84", Offset = "0xD86C84", VA = "0xD86C84")]
	public static int AllocateSceneViewID()
	{
		return default(int);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xD868F4", Offset = "0xD868F4", VA = "0xD868F4")]
	private static int AllocateViewID(int ownerId)
	{
		return default(int);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xD86D7C", Offset = "0xD86D7C", VA = "0xD86D7C")]
	private static int[] AllocateSceneViewIDs(int countOfNewViews)
	{
		return null;
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xD86E60", Offset = "0xD86E60", VA = "0xD86E60")]
	public static void UnAllocateViewID(int viewID)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xD87008", Offset = "0xD87008", VA = "0xD87008")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group)
	{
		return null;
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xD870D8", Offset = "0xD870D8", VA = "0xD870D8")]
	public static GameObject Instantiate(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xD87790", Offset = "0xD87790", VA = "0xD87790")]
	public static GameObject InstantiateSceneObject(string prefabName, Vector3 position, Quaternion rotation, byte group, object[] data)
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xD87F54", Offset = "0xD87F54", VA = "0xD87F54")]
	public static int GetPing()
	{
		return default(int);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xD87FD0", Offset = "0xD87FD0", VA = "0xD87FD0")]
	public static void FetchServerTimestamp()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xD88080", Offset = "0xD88080", VA = "0xD88080")]
	public static void SendOutgoingCommands()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xD88128", Offset = "0xD88128", VA = "0xD88128")]
	public static bool CloseConnection(PhotonPlayer kickPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xD88390", Offset = "0xD88390", VA = "0xD88390")]
	public static bool SetMasterClient(PhotonPlayer masterClientPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xD886EC", Offset = "0xD886EC", VA = "0xD886EC")]
	public static void Destroy(PhotonView targetView)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xD88818", Offset = "0xD88818", VA = "0xD88818")]
	public static void Destroy(GameObject targetGo)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xD888B4", Offset = "0xD888B4", VA = "0xD888B4")]
	public static void DestroyPlayerObjects(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xD88984", Offset = "0xD88984", VA = "0xD88984")]
	public static void DestroyPlayerObjects(int targetPlayerId)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xD88B28", Offset = "0xD88B28", VA = "0xD88B28")]
	public static void DestroyAll()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xD88C04", Offset = "0xD88C04", VA = "0xD88C04")]
	public static void RemoveRPCs(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xD88D28", Offset = "0xD88D28", VA = "0xD88D28")]
	public static void RemoveRPCs(PhotonView targetPhotonView)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xD88DD8", Offset = "0xD88DD8", VA = "0xD88DD8")]
	public static void RemoveRPCsInGroup(int targetGroup)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xD88E88", Offset = "0xD88E88", VA = "0xD88E88")]
	internal static void RPC(PhotonView view, string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xD89114", Offset = "0xD89114", VA = "0xD89114")]
	internal static void RPC(PhotonView view, string methodName, PhotonPlayer targetPlayer, bool encrpyt, params object[] parameters)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xD8934C", Offset = "0xD8934C", VA = "0xD8934C")]
	public static void CacheSendMonoMessageTargets(Type type)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xD8941C", Offset = "0xD8941C", VA = "0xD8941C")]
	public static HashSet<GameObject> FindGameObjectsWithComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xD895D8", Offset = "0xD895D8", VA = "0xD895D8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EADE0", Offset = "0x9EADE0")]
	public static void SetReceivingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xD8967C", Offset = "0xD8967C", VA = "0xD8967C")]
	public static void SetInterestGroups(byte group, bool enabled)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xD897B8", Offset = "0xD897B8", VA = "0xD897B8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EAE18", Offset = "0x9EAE18")]
	public static void SetReceivingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xD898EC", Offset = "0xD898EC", VA = "0xD898EC")]
	public static void SetInterestGroups(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xD899B0", Offset = "0xD899B0", VA = "0xD899B0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EAE50", Offset = "0x9EAE50")]
	public static void SetSendingEnabled(int group, bool enabled)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xD89A24", Offset = "0xD89A24", VA = "0xD89A24")]
	public static void SetSendingEnabled(byte group, bool enabled)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xD89AE8", Offset = "0xD89AE8", VA = "0xD89AE8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EAE88", Offset = "0x9EAE88")]
	public static void SetSendingEnabled(int[] enableGroups, int[] disableGroups)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xD89BCC", Offset = "0xD89BCC", VA = "0xD89BCC")]
	public static void SetSendingEnabled(byte[] disableGroups, byte[] enableGroups)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xD89C90", Offset = "0xD89C90", VA = "0xD89C90")]
	public static void SetLevelPrefix(short prefix)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xD89D40", Offset = "0xD89D40", VA = "0xD89D40")]
	public static void LoadLevel(int levelNumber)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xD89E84", Offset = "0xD89E84", VA = "0xD89E84")]
	public static UnityEngine.AsyncOperation LoadLevelAsync(int levelNumber)
	{
		return null;
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xD89FD0", Offset = "0xD89FD0", VA = "0xD89FD0")]
	public static void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xD8A0EC", Offset = "0xD8A0EC", VA = "0xD8A0EC")]
	public static UnityEngine.AsyncOperation LoadLevelAsync(string levelName)
	{
		return null;
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xD8A210", Offset = "0xD8A210", VA = "0xD8A210")]
	public static bool WebRpc(string name, object parameters)
	{
		return default(bool);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xD8A2A4", Offset = "0xD8A2A4", VA = "0xD8A2A4")]
	public static bool CallEvent(byte eventCode, object content, int senderId)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000100")]
public class PhotonPlayer : IComparable<PhotonPlayer>, IComparable<int>, IEquatable<PhotonPlayer>, IEquatable<int>
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int actorID;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string nameField;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5E84", Offset = "0x9E5E84")]
	private string <UserId>k__BackingField;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool IsLocal;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5E94", Offset = "0x9E5E94")]
	private bool <IsInactive>k__BackingField;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5EA4", Offset = "0x9E5EA4")]
	private ExitGames.Client.Photon.Hashtable <CustomProperties>k__BackingField;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public object TagObject;

	[Token(Token = "0x170000B7")]
	public int ID
	{
		[Token(Token = "0x600060B")]
		[Address(RVA = "0xD81808", Offset = "0xD81808", VA = "0xD81808")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B8")]
	public string NickName
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0xD8B63C", Offset = "0xD8B63C", VA = "0xD8B63C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060D")]
		[Address(RVA = "0xD8B644", Offset = "0xD8B644", VA = "0xD8B644")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public string UserId
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0xD8B744", Offset = "0xD8B744", VA = "0xD8B744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAEC0", Offset = "0x9EAEC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060F")]
		[Address(RVA = "0xD8B74C", Offset = "0xD8B74C", VA = "0xD8B74C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAED0", Offset = "0x9EAED0")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public bool IsMasterClient
	{
		[Token(Token = "0x6000610")]
		[Address(RVA = "0xD88300", Offset = "0xD88300", VA = "0xD88300")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BB")]
	public bool IsInactive
	{
		[Token(Token = "0x6000611")]
		[Address(RVA = "0xD8B754", Offset = "0xD8B754", VA = "0xD8B754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAEE0", Offset = "0x9EAEE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000612")]
		[Address(RVA = "0xD8B75C", Offset = "0xD8B75C", VA = "0xD8B75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAEF0", Offset = "0x9EAEF0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x6000613")]
		[Address(RVA = "0xD850DC", Offset = "0xD850DC", VA = "0xD850DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAF00", Offset = "0x9EAF00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000614")]
		[Address(RVA = "0xD86714", Offset = "0xD86714", VA = "0xD86714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAF10", Offset = "0x9EAF10")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public ExitGames.Client.Photon.Hashtable AllProperties
	{
		[Token(Token = "0x6000615")]
		[Address(RVA = "0xD8B768", Offset = "0xD8B768", VA = "0xD8B768")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F3FFC", Offset = "0x9F3FFC")]
	public string name
	{
		[Token(Token = "0x6000628")]
		[Address(RVA = "0xD8C33C", Offset = "0xD8C33C", VA = "0xD8C33C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000629")]
		[Address(RVA = "0xD8C344", Offset = "0xD8C344", VA = "0xD8C344")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F4034", Offset = "0x9F4034")]
	public string userId
	{
		[Token(Token = "0x600062A")]
		[Address(RVA = "0xD8C348", Offset = "0xD8C348", VA = "0xD8C348")]
		get
		{
			return null;
		}
		[Token(Token = "0x600062B")]
		[Address(RVA = "0xD8C350", Offset = "0xD8C350", VA = "0xD8C350")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F406C", Offset = "0x9F406C")]
	public bool isLocal
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0xD8C358", Offset = "0xD8C358", VA = "0xD8C358")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F40A4", Offset = "0x9F40A4")]
	public bool isMasterClient
	{
		[Token(Token = "0x600062D")]
		[Address(RVA = "0xD8C360", Offset = "0xD8C360", VA = "0xD8C360")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F40DC", Offset = "0x9F40DC")]
	public bool isInactive
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0xD8C364", Offset = "0xD8C364", VA = "0xD8C364")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600062F")]
		[Address(RVA = "0xD8C36C", Offset = "0xD8C36C", VA = "0xD8C36C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F4114", Offset = "0x9F4114")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0xD8C378", Offset = "0xD8C378", VA = "0xD8C378")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000631")]
		[Address(RVA = "0xD8C380", Offset = "0xD8C380", VA = "0xD8C380")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F414C", Offset = "0x9F414C")]
	public ExitGames.Client.Photon.Hashtable allProperties
	{
		[Token(Token = "0x6000632")]
		[Address(RVA = "0xD8C388", Offset = "0xD8C388", VA = "0xD8C388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xD8B848", Offset = "0xD8B848", VA = "0xD8B848")]
	public PhotonPlayer(bool isLocal, int actorID, string name)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xD8B8F8", Offset = "0xD8B8F8", VA = "0xD8B8F8")]
	protected internal PhotonPlayer(bool isLocal, int actorID, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xD8B9AC", Offset = "0xD8B9AC", VA = "0xD8B9AC", Slot = "0")]
	public override bool Equals(object p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xD8BA74", Offset = "0xD8BA74", VA = "0xD8BA74", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xD8BA7C", Offset = "0xD8BA7C", VA = "0xD8BA7C")]
	internal void InternalChangeLocalID(int newID)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xD862D8", Offset = "0xD862D8", VA = "0xD862D8")]
	internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xD86020", Offset = "0xD86020", VA = "0xD86020")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xD8BB14", Offset = "0xD8BB14", VA = "0xD8BB14")]
	public static PhotonPlayer Find(int ID)
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xD8BBD0", Offset = "0xD8BBD0", VA = "0xD8BBD0")]
	public PhotonPlayer Get(int id)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xD8BBD8", Offset = "0xD8BBD8", VA = "0xD8BBD8")]
	public PhotonPlayer GetNext()
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xD8BE60", Offset = "0xD8BE60", VA = "0xD8BE60")]
	public PhotonPlayer GetNextFor(PhotonPlayer currentPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xD8BBE0", Offset = "0xD8BBE0", VA = "0xD8BBE0")]
	public PhotonPlayer GetNextFor(int currentPlayerId)
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xD8BE74", Offset = "0xD8BE74", VA = "0xD8BE74", Slot = "4")]
	public int CompareTo(PhotonPlayer other)
	{
		return default(int);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xD8BED0", Offset = "0xD8BED0", VA = "0xD8BED0", Slot = "5")]
	public int CompareTo(int other)
	{
		return default(int);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xD8BF10", Offset = "0xD8BF10", VA = "0xD8BF10", Slot = "6")]
	public bool Equals(PhotonPlayer other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xD8BF70", Offset = "0xD8BF70", VA = "0xD8BF70", Slot = "7")]
	public bool Equals(int other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xD8BFB4", Offset = "0xD8BFB4", VA = "0xD8BFB4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xD8C110", Offset = "0xD8C110", VA = "0xD8C110")]
	public string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x2000101")]
public class PhotonStatsGui : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool statsWindowOn;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool statsOn;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool healthStatsVisible;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool trafficStatsOn;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool buttonsOn;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect statsRect;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int WindowId;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xD8C854", Offset = "0xD8C854", VA = "0xD8C854")]
	public void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xD8C8B8", Offset = "0xD8C8B8", VA = "0xD8C8B8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xD8C908", Offset = "0xD8C908", VA = "0xD8C908")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xD8CA88", Offset = "0xD8CA88", VA = "0xD8CA88")]
	public void TrafficStatsWindow(int windowID)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xD8D874", Offset = "0xD8D874", VA = "0xD8D874")]
	public PhotonStatsGui()
	{
	}
}
[Token(Token = "0x2000102")]
public class PhotonStreamQueue
{
	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int m_SampleRate;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int m_SampleCount;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_ObjectsPerSample;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_LastSampleTime;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_LastFrameCount;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_NextObjectIndex;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<object> m_Objects;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsWriting;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xD7A174", Offset = "0xD7A174", VA = "0xD7A174")]
	public PhotonStreamQueue(int sampleRate)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xD8E848", Offset = "0xD8E848", VA = "0xD8E848")]
	private void BeginWritePackage()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xD7A69C", Offset = "0xD7A69C", VA = "0xD7A69C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xD7B6FC", Offset = "0xD7B6FC", VA = "0xD7B6FC")]
	public void SendNext(object obj)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xD7B7AC", Offset = "0xD7B7AC", VA = "0xD7B7AC")]
	public bool HasQueuedObjects()
	{
		return default(bool);
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xD7B7BC", Offset = "0xD7B7BC", VA = "0xD7B7BC")]
	public object ReceiveNext()
	{
		return null;
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xD7C88C", Offset = "0xD7C88C", VA = "0xD7C88C")]
	public void Serialize(PhotonStream stream)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xD7CA34", Offset = "0xD7CA34", VA = "0xD7CA34")]
	public void Deserialize(PhotonStream stream)
	{
	}
}
[Token(Token = "0x2000103")]
public enum ViewSynchronization
{
	[Token(Token = "0x4000684")]
	Off,
	[Token(Token = "0x4000685")]
	ReliableDeltaCompressed,
	[Token(Token = "0x4000686")]
	Unreliable,
	[Token(Token = "0x4000687")]
	UnreliableOnChange
}
[Token(Token = "0x2000104")]
public enum OnSerializeTransform
{
	[Token(Token = "0x4000689")]
	OnlyPosition,
	[Token(Token = "0x400068A")]
	OnlyRotation,
	[Token(Token = "0x400068B")]
	OnlyScale,
	[Token(Token = "0x400068C")]
	PositionAndRotation,
	[Token(Token = "0x400068D")]
	All
}
[Token(Token = "0x2000105")]
public enum OnSerializeRigidBody
{
	[Token(Token = "0x400068F")]
	OnlyVelocity,
	[Token(Token = "0x4000690")]
	OnlyAngularVelocity,
	[Token(Token = "0x4000691")]
	All
}
[Token(Token = "0x2000106")]
public enum OwnershipOption
{
	[Token(Token = "0x4000693")]
	Fixed,
	[Token(Token = "0x4000694")]
	Takeover,
	[Token(Token = "0x4000695")]
	Request
}
[Token(Token = "0x2000107")]
public class PhotonView : Photon.MonoBehaviour
{
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ownerId;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte group;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	protected internal bool mixedModeIsReliable;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool OwnerShipWasTransfered;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int prefixBackup;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal object[] instantiationDataField;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected internal object[] lastOnSerializeDataSent;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected internal object[] lastOnSerializeDataReceived;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ViewSynchronization synchronization;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public OnSerializeTransform onSerializeTransformOption;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnSerializeRigidBody onSerializeRigidBodyOption;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public OwnershipOption ownershipTransfer;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<UnityEngine.Component> ObservedComponents;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<UnityEngine.Component, MethodInfo> m_OnSerializeMethodInfos;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private int viewIdField;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int instantiationId;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int currentMasterID;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected internal bool didAwake;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	protected internal bool isRuntimeInstantiated;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	protected internal bool removedFromLocalViewList;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal UnityEngine.MonoBehaviour[] RpcMonoBehaviours;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MethodInfo OnSerializeMethodInfo;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool failedToFindOnSerialize;

	[Token(Token = "0x170000C5")]
	public int prefix
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0xBF3070", Offset = "0xBF3070", VA = "0xBF3070")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000641")]
		[Address(RVA = "0xBF3128", Offset = "0xBF3128", VA = "0xBF3128")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public object[] instantiationData
	{
		[Token(Token = "0x6000642")]
		[Address(RVA = "0xBF3130", Offset = "0xBF3130", VA = "0xBF3130")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000643")]
		[Address(RVA = "0xBF31D8", Offset = "0xBF31D8", VA = "0xBF31D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public int viewID
	{
		[Token(Token = "0x6000644")]
		[Address(RVA = "0xBF31E0", Offset = "0xBF31E0", VA = "0xBF31E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000645")]
		[Address(RVA = "0xBF31E8", Offset = "0xBF31E8", VA = "0xBF31E8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public bool isSceneView
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0xBF32D4", Offset = "0xBF32D4", VA = "0xBF32D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C9")]
	public PhotonPlayer owner
	{
		[Token(Token = "0x6000647")]
		[Address(RVA = "0xBF3364", Offset = "0xBF3364", VA = "0xBF3364")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CA")]
	public int OwnerActorNr
	{
		[Token(Token = "0x6000648")]
		[Address(RVA = "0xBF3370", Offset = "0xBF3370", VA = "0xBF3370")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CB")]
	public bool isOwnerActive
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0xBF3378", Offset = "0xBF3378", VA = "0xBF3378")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CC")]
	public int CreatorActorNr
	{
		[Token(Token = "0x600064A")]
		[Address(RVA = "0xBF32F0", Offset = "0xBF32F0", VA = "0xBF32F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000CD")]
	public bool isMine
	{
		[Token(Token = "0x600064B")]
		[Address(RVA = "0xBF0F68", Offset = "0xBF0F68", VA = "0xBF0F68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xBF3430", Offset = "0xBF3430", VA = "0xBF3430")]
	protected internal void Awake()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xBF3500", Offset = "0xBF3500", VA = "0xBF3500")]
	public void RequestOwnership()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xBF3598", Offset = "0xBF3598", VA = "0xBF3598")]
	public void TransferOwnership(PhotonPlayer newOwner)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xBF35D8", Offset = "0xBF35D8", VA = "0xBF35D8")]
	public void TransferOwnership(int newOwnerId)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xBF3678", Offset = "0xBF3678", VA = "0xBF3678")]
	public void OnMasterClientSwitched(PhotonPlayer newMasterClient)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xBF36F8", Offset = "0xBF36F8", VA = "0xBF36F8")]
	protected internal void OnDestroy()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xBF3888", Offset = "0xBF3888", VA = "0xBF3888")]
	public void SerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xBF3E58", Offset = "0xBF3E58", VA = "0xBF3E58")]
	public void DeserializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xBF3F5C", Offset = "0xBF3F5C", VA = "0xBF3F5C")]
	protected internal void DeserializeComponent(UnityEngine.Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xBF398C", Offset = "0xBF398C", VA = "0xBF398C")]
	protected internal void SerializeComponent(UnityEngine.Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xBF46B0", Offset = "0xBF46B0", VA = "0xBF46B0")]
	protected internal void ExecuteComponentOnSerialize(UnityEngine.Component component, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xBF4AB8", Offset = "0xBF4AB8", VA = "0xBF4AB8")]
	public void RefreshRpcMonoBehaviourCache()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xBF4B10", Offset = "0xBF4B10", VA = "0xBF4B10")]
	public void RPC(string methodName, PhotonTargets target, params object[] parameters)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xBF4BA4", Offset = "0xBF4BA4", VA = "0xBF4BA4")]
	public void RpcSecure(string methodName, PhotonTargets target, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xBF4C3C", Offset = "0xBF4C3C", VA = "0xBF4C3C")]
	public void RPC(string methodName, PhotonPlayer targetPlayer, params object[] parameters)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xBF4CD0", Offset = "0xBF4CD0", VA = "0xBF4CD0")]
	public void RpcSecure(string methodName, PhotonPlayer targetPlayer, bool encrypt, params object[] parameters)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xBF4D68", Offset = "0xBF4D68", VA = "0xBF4D68")]
	public static PhotonView Get(UnityEngine.Component component)
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xBF4DC4", Offset = "0xBF4DC4", VA = "0xBF4DC4")]
	public static PhotonView Get(GameObject gameObj)
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xBF4E20", Offset = "0xBF4E20", VA = "0xBF4E20")]
	public static PhotonView Find(int viewID)
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xBF4EA4", Offset = "0xBF4EA4", VA = "0xBF4EA4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xBF5148", Offset = "0xBF5148", VA = "0xBF5148")]
	public PhotonView()
	{
	}
}
[Token(Token = "0x2000108")]
public class PhotonPingManager
{
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2954", Offset = "0x9E2954")]
	private sealed class <PingSocket>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Region region;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PhotonPingManager <>4__this;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PhotonPing <ping>5__2;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <rttSum>5__3;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <replyCount>5__4;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <regionAddress>5__5;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool <overtime>5__7;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch <sw>5__8;

		[Token(Token = "0x17000453")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xD8B5C4", Offset = "0xD8B5C4", VA = "0xD8B5C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000454")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xD8B634", Offset = "0xD8B634", VA = "0xD8B634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xD8A7B0", Offset = "0xD8A7B0", VA = "0xD8A7B0")]
		[DebuggerHidden]
		public <PingSocket>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xD8AAE8", Offset = "0xD8AAE8", VA = "0xD8AAE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xD8AAEC", Offset = "0xD8AAEC", VA = "0xD8AAEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xD8B5CC", Offset = "0xD8B5CC", VA = "0xD8B5CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseNative;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Attempts;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool IgnoreInitialAttempt;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int MaxMilliseconsPerPing;

	[Token(Token = "0x40006B1")]
	private const string wssProtocolString = "wss://";

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int PingsRunning;

	[Token(Token = "0x170000CE")]
	public Region BestRegion
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0xD7F044", Offset = "0xD7F044", VA = "0xD7F044")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CF")]
	public bool Done
	{
		[Token(Token = "0x6000662")]
		[Address(RVA = "0xD7F034", Offset = "0xD7F034", VA = "0xD7F034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xD7EF9C", Offset = "0xD7EF9C", VA = "0xD7EF9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EAF20", Offset = "0x9EAF20")]
	public IEnumerator PingSocket(Region region)
	{
		return null;
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xD8A7DC", Offset = "0xD8A7DC", VA = "0xD8A7DC")]
	public static string ResolveHost(string hostName)
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xD7EF94", Offset = "0xD7EF94", VA = "0xD7EF94")]
	public PhotonPingManager()
	{
	}
}
[Token(Token = "0x2000109")]
public class Room : RoomInfo
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5ED4", Offset = "0x9E5ED4")]
	private string[] <PropertiesListedInLobby>k__BackingField;

	[Token(Token = "0x170000D0")]
	public new string Name
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0xC0213C", Offset = "0xC0213C", VA = "0xC0213C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xC02144", Offset = "0xC02144", VA = "0xC02144")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public new bool IsOpen
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xC0214C", Offset = "0xC0214C", VA = "0xC0214C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xC02154", Offset = "0xC02154", VA = "0xC02154")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public new bool IsVisible
	{
		[Token(Token = "0x600066B")]
		[Address(RVA = "0xC0232C", Offset = "0xC0232C", VA = "0xC0232C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600066C")]
		[Address(RVA = "0xC02334", Offset = "0xC02334", VA = "0xC02334")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public string[] PropertiesListedInLobby
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0xC0250C", Offset = "0xC0250C", VA = "0xC0250C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAF84", Offset = "0x9EAF84")]
		get
		{
			return null;
		}
		[Token(Token = "0x600066E")]
		[Address(RVA = "0xC02514", Offset = "0xC02514", VA = "0xC02514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAF94", Offset = "0x9EAF94")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public bool AutoCleanUp
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0xC0251C", Offset = "0xC0251C", VA = "0xC0251C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D5")]
	public new int MaxPlayers
	{
		[Token(Token = "0x6000670")]
		[Address(RVA = "0xC02524", Offset = "0xC02524", VA = "0xC02524")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000671")]
		[Address(RVA = "0xC0252C", Offset = "0xC0252C", VA = "0xC0252C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public new int PlayerCount
	{
		[Token(Token = "0x6000672")]
		[Address(RVA = "0xBFFF0C", Offset = "0xBFFF0C", VA = "0xBFFF0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D7")]
	public string[] ExpectedUsers
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0xC02770", Offset = "0xC02770", VA = "0xC02770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D8")]
	public int PlayerTtl
	{
		[Token(Token = "0x6000674")]
		[Address(RVA = "0xC02778", Offset = "0xC02778", VA = "0xC02778")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000675")]
		[Address(RVA = "0xC02780", Offset = "0xC02780", VA = "0xC02780")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public int EmptyRoomTtl
	{
		[Token(Token = "0x6000676")]
		[Address(RVA = "0xC028DC", Offset = "0xC028DC", VA = "0xC028DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000677")]
		[Address(RVA = "0xC028E4", Offset = "0xC028E4", VA = "0xC028E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	protected internal int MasterClientId
	{
		[Token(Token = "0x6000678")]
		[Address(RVA = "0xC02A40", Offset = "0xC02A40", VA = "0xC02A40")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000679")]
		[Address(RVA = "0xC02A48", Offset = "0xC02A48", VA = "0xC02A48")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F4184", Offset = "0x9F4184")]
	public new string name
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0xC03F24", Offset = "0xC03F24", VA = "0xC03F24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000682")]
		[Address(RVA = "0xC03F2C", Offset = "0xC03F2C", VA = "0xC03F2C")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F41BC", Offset = "0x9F41BC")]
	public new bool open
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0xC03F34", Offset = "0xC03F34", VA = "0xC03F34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0xC03F3C", Offset = "0xC03F3C", VA = "0xC03F3C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F41F4", Offset = "0x9F41F4")]
	public new bool visible
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xC03F44", Offset = "0xC03F44", VA = "0xC03F44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000686")]
		[Address(RVA = "0xC03F4C", Offset = "0xC03F4C", VA = "0xC03F4C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F422C", Offset = "0x9F422C")]
	public string[] propertiesListedInLobby
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0xC03F54", Offset = "0xC03F54", VA = "0xC03F54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000688")]
		[Address(RVA = "0xC03F5C", Offset = "0xC03F5C", VA = "0xC03F5C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F4264", Offset = "0x9F4264")]
	public bool autoCleanUp
	{
		[Token(Token = "0x6000689")]
		[Address(RVA = "0xC03F64", Offset = "0xC03F64", VA = "0xC03F64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F429C", Offset = "0x9F429C")]
	public new int maxPlayers
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0xC03F6C", Offset = "0xC03F6C", VA = "0xC03F6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600068B")]
		[Address(RVA = "0xC03F74", Offset = "0xC03F74", VA = "0xC03F74")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F42D4", Offset = "0x9F42D4")]
	public new int playerCount
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xC03F78", Offset = "0xC03F78", VA = "0xC03F78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F430C", Offset = "0x9F430C")]
	public string[] expectedUsers
	{
		[Token(Token = "0x600068D")]
		[Address(RVA = "0xC03F7C", Offset = "0xC03F7C", VA = "0xC03F7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F4344", Offset = "0x9F4344")]
	protected internal int masterClientId
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0xC03F84", Offset = "0xC03F84", VA = "0xC03F84")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600068F")]
		[Address(RVA = "0xC03F8C", Offset = "0xC03F8C", VA = "0xC03F8C")]
		set
		{
		}
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xC02A50", Offset = "0xC02A50", VA = "0xC02A50")]
	internal Room(string roomName, RoomOptions options)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xC03350", Offset = "0xC03350", VA = "0xC03350")]
	public void SetCustomProperties(ExitGames.Client.Photon.Hashtable propertiesToSet, [Optional] ExitGames.Client.Photon.Hashtable expectedValues, bool webForward = false)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xC035D4", Offset = "0xC035D4", VA = "0xC035D4")]
	public void SetPropertiesListedInLobby(string[] propsListedInLobby)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xC036D8", Offset = "0xC036D8", VA = "0xC036D8")]
	public void ClearExpectedUsers()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xC03844", Offset = "0xC03844", VA = "0xC03844")]
	public void SetExpectedUsers(string[] expectedUsers)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xC03998", Offset = "0xC03998", VA = "0xC03998", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xC03C20", Offset = "0xC03C20", VA = "0xC03C20")]
	public new string ToStringFull()
	{
		return null;
	}
}
[Token(Token = "0x200010A")]
public class RoomInfo
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5EE4", Offset = "0x9E5EE4")]
	private bool <removedFromList>k__BackingField;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ExitGames.Client.Photon.Hashtable customPropertiesField;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected byte maxPlayersField;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int emptyRoomTtlField;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int playerTtlField;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected string[] expectedUsersField;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool openField;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool visibleField;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	protected bool autoCleanUpField;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected string nameField;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal int masterClientIdField;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5EF4", Offset = "0x9E5EF4")]
	private bool <serverSideMasterClient>k__BackingField;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5F04", Offset = "0x9E5F04")]
	private int <PlayerCount>k__BackingField;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E5F14", Offset = "0x9E5F14")]
	private bool <IsLocalClientInside>k__BackingField;

	[Token(Token = "0x170000E4")]
	public bool removedFromList
	{
		[Token(Token = "0x6000690")]
		[Address(RVA = "0xC03F94", Offset = "0xC03F94", VA = "0xC03F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAFA4", Offset = "0x9EAFA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000691")]
		[Address(RVA = "0xC03F9C", Offset = "0xC03F9C", VA = "0xC03F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAFB4", Offset = "0x9EAFB4")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	protected internal bool serverSideMasterClient
	{
		[Token(Token = "0x6000692")]
		[Address(RVA = "0xC03FA8", Offset = "0xC03FA8", VA = "0xC03FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAFC4", Offset = "0x9EAFC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000693")]
		[Address(RVA = "0xC03FB0", Offset = "0xC03FB0", VA = "0xC03FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAFD4", Offset = "0x9EAFD4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public ExitGames.Client.Photon.Hashtable CustomProperties
	{
		[Token(Token = "0x6000694")]
		[Address(RVA = "0xC035CC", Offset = "0xC035CC", VA = "0xC035CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E7")]
	public string Name
	{
		[Token(Token = "0x6000695")]
		[Address(RVA = "0xC03FBC", Offset = "0xC03FBC", VA = "0xC03FBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E8")]
	public int PlayerCount
	{
		[Token(Token = "0x6000696")]
		[Address(RVA = "0xC03FC4", Offset = "0xC03FC4", VA = "0xC03FC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAFE4", Offset = "0x9EAFE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000697")]
		[Address(RVA = "0xC03FCC", Offset = "0xC03FCC", VA = "0xC03FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EAFF4", Offset = "0x9EAFF4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public bool IsLocalClientInside
	{
		[Token(Token = "0x6000698")]
		[Address(RVA = "0xC03FD4", Offset = "0xC03FD4", VA = "0xC03FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB004", Offset = "0x9EB004")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000699")]
		[Address(RVA = "0xC03FDC", Offset = "0xC03FDC", VA = "0xC03FDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB014", Offset = "0x9EB014")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public byte MaxPlayers
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0xC03FE8", Offset = "0xC03FE8", VA = "0xC03FE8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000EB")]
	public bool IsOpen
	{
		[Token(Token = "0x600069B")]
		[Address(RVA = "0xC03FF0", Offset = "0xC03FF0", VA = "0xC03FF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EC")]
	public bool IsVisible
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xC03FF8", Offset = "0xC03FF8", VA = "0xC03FF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000ED")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F437C", Offset = "0x9F437C")]
	public ExitGames.Client.Photon.Hashtable customProperties
	{
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xC04680", Offset = "0xC04680", VA = "0xC04680")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F43B4", Offset = "0x9F43B4")]
	public string name
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xC04688", Offset = "0xC04688", VA = "0xC04688")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F43EC", Offset = "0x9F43EC")]
	public int playerCount
	{
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xC04690", Offset = "0xC04690", VA = "0xC04690")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xC04698", Offset = "0xC04698", VA = "0xC04698")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F4424", Offset = "0x9F4424")]
	public bool isLocalClientInside
	{
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xC046A0", Offset = "0xC046A0", VA = "0xC046A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xC046A8", Offset = "0xC046A8", VA = "0xC046A8")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F445C", Offset = "0x9F445C")]
	public byte maxPlayers
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xC046B4", Offset = "0xC046B4", VA = "0xC046B4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F4494", Offset = "0x9F4494")]
	public bool open
	{
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xC046BC", Offset = "0xC046BC", VA = "0xC046BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F3")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F44CC", Offset = "0x9F44CC")]
	public bool visible
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xC046C4", Offset = "0xC046C4", VA = "0xC046C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xC02B74", Offset = "0xC02B74", VA = "0xC02B74")]
	protected internal RoomInfo(string roomName, ExitGames.Client.Photon.Hashtable properties)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xC04000", Offset = "0xC04000", VA = "0xC04000", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xC040C8", Offset = "0xC040C8", VA = "0xC040C8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xC040FC", Offset = "0xC040FC", VA = "0xC040FC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xC04380", Offset = "0xC04380", VA = "0xC04380")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xC02CE8", Offset = "0xC02CE8", VA = "0xC02CE8")]
	protected internal void InternalCacheProperties(ExitGames.Client.Photon.Hashtable propertiesToCache)
	{
	}
}
[Token(Token = "0x200010B")]
public class PunRPC : Attribute
{
	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xBFF344", Offset = "0xBFF344", VA = "0xBFF344")]
	public PunRPC()
	{
	}
}
[Token(Token = "0x200010C")]
public class Region
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CloudRegionCode Code;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Cluster;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string HostAndPort;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Ping;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xC00CCC", Offset = "0xC00CCC", VA = "0xC00CCC")]
	public Region(CloudRegionCode code)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xC00D78", Offset = "0xC00D78", VA = "0xC00D78")]
	public Region(CloudRegionCode code, string regionCodeString, string address)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xC00DB8", Offset = "0xC00DB8", VA = "0xC00DB8")]
	public static CloudRegionCode Parse(string codeAsString)
	{
		return default(CloudRegionCode);
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xC00F70", Offset = "0xC00F70", VA = "0xC00F70")]
	internal static CloudRegionFlag ParseFlag(CloudRegionCode region)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xC01174", Offset = "0xC01174", VA = "0xC01174")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EB024", Offset = "0x9EB024")]
	internal static CloudRegionFlag ParseFlag(string codeAsString)
	{
		return default(CloudRegionFlag);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xC012F8", Offset = "0xC012F8", VA = "0xC012F8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200010D")]
public class ServerSettings : ScriptableObject
{
	[Token(Token = "0x2000339")]
	public enum HostingOption
	{
		[Token(Token = "0x40012C9")]
		NotSet,
		[Token(Token = "0x40012CA")]
		PhotonCloud,
		[Token(Token = "0x40012CB")]
		SelfHosted,
		[Token(Token = "0x40012CC")]
		OfflineMode,
		[Token(Token = "0x40012CD")]
		BestRegion
	}

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AppID;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string VoiceAppID;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ChatAppID;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HostingOption HostType;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CloudRegionCode PreferredRegion;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CloudRegionFlag EnabledRegions;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public ConnectionProtocol Protocol;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ServerAddress;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int ServerPort;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VoiceServerPort;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool JoinLobby;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool EnableLobbyStatistics;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public PhotonLogLevel PunLogging;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DebugLevel NetworkLogging;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RunInBackground;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> RpcList;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool DisableAutoOpenWizard;

	[Token(Token = "0x170000F4")]
	public static CloudRegionCode BestRegionCodeInPreferences
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xC0D2BC", Offset = "0xC0D2BC", VA = "0xC0D2BC")]
		get
		{
			return default(CloudRegionCode);
		}
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xC0D128", Offset = "0xC0D128", VA = "0xC0D128")]
	public void UseCloudBestRegion(string cloudAppid)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xC0D138", Offset = "0xC0D138", VA = "0xC0D138")]
	public void UseCloud(string cloudAppid)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xC0D148", Offset = "0xC0D148", VA = "0xC0D148")]
	public void UseCloud(string cloudAppid, CloudRegionCode code)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xC0D158", Offset = "0xC0D158", VA = "0xC0D158")]
	public void UseMyServer(string serverAddress, int serverPort, string application)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xC0D1E8", Offset = "0xC0D1E8", VA = "0xC0D1E8")]
	public static bool IsAppId(string val)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xC0D31C", Offset = "0xC0D31C", VA = "0xC0D31C")]
	public static void ResetBestRegionCodeInPreferences()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xC0D380", Offset = "0xC0D380", VA = "0xC0D380", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xC0D54C", Offset = "0xC0D54C", VA = "0xC0D54C")]
	public ServerSettings()
	{
	}
}
[Token(Token = "0x200010E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E14A0", Offset = "0x9E14A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E14A0", Offset = "0x9E14A0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E14A0", Offset = "0x9E14A0")]
public class PhotonAnimatorView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x200033A")]
	public enum ParameterType
	{
		[Token(Token = "0x40012CF")]
		Float = 1,
		[Token(Token = "0x40012D0")]
		Int = 3,
		[Token(Token = "0x40012D1")]
		Bool = 4,
		[Token(Token = "0x40012D2")]
		Trigger = 9
	}

	[Token(Token = "0x200033B")]
	public enum SynchronizeType
	{
		[Token(Token = "0x40012D4")]
		Disabled,
		[Token(Token = "0x40012D5")]
		Discrete,
		[Token(Token = "0x40012D6")]
		Continuous
	}

	[Serializable]
	[Token(Token = "0x200033C")]
	public class SynchronizedParameter
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterType Type;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xD7B6F4", Offset = "0xD7B6F4", VA = "0xD7B6F4")]
		public SynchronizedParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200033D")]
	public class SynchronizedLayer
	{
		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SynchronizeType SynchronizeType;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int LayerIndex;

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xD7B518", Offset = "0xD7B518", VA = "0xD7B518")]
		public SynchronizedLayer()
		{
		}
	}

	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2964", Offset = "0x9E2964")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xD7B014", Offset = "0xD7B014", VA = "0xD7B014")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xD7CCB8", Offset = "0xD7CCB8", VA = "0xD7CCB8")]
		internal bool <DoesLayerSynchronizeTypeExist>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2974", Offset = "0x9E2974")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xD7B0F8", Offset = "0xD7B0F8", VA = "0xD7B0F8")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xD7CCF4", Offset = "0xD7CCF4", VA = "0xD7CCF4")]
		internal bool <DoesParameterSynchronizeTypeExist>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2984", Offset = "0x9E2984")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xD7B230", Offset = "0xD7B230", VA = "0xD7B230")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xD7CD2C", Offset = "0xD7CD2C", VA = "0xD7CD2C")]
		internal bool <GetLayerSynchronizeType>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2994", Offset = "0x9E2994")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xD7B358", Offset = "0xD7B358", VA = "0xD7B358")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xD7CD68", Offset = "0xD7CD68", VA = "0xD7CD68")]
		internal bool <GetParameterSynchronizeType>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E29A4", Offset = "0x9E29A4")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int layerIndex;

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xD7B510", Offset = "0xD7B510", VA = "0xD7B510")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xD7CDA0", Offset = "0xD7CDA0", VA = "0xD7CDA0")]
		internal bool <SetLayerSynchronized>b__0(SynchronizedLayer item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E29B4", Offset = "0x9E29B4")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xD7B6EC", Offset = "0xD7B6EC", VA = "0xD7B6EC")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xD7CDDC", Offset = "0xD7CDDC", VA = "0xD7CDDC")]
		internal bool <SetParameterSynchronized>b__0(SynchronizedParameter item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_Animator;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonStreamQueue m_StreamQueue;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private bool ShowLayerWeightsInspector;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	[SerializeField]
	private bool ShowParameterInspector;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedParameter> m_SynchronizeParameters;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private List<SynchronizedLayer> m_SynchronizeLayers;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_ReceiverPosition;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_LastDeserializeTime;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_WasSynchronizeTypeChanged;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> m_raisedDiscreteTriggersCache;

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xD7A0E4", Offset = "0xD7A0E4", VA = "0xD7A0E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xD7A204", Offset = "0xD7A204", VA = "0xD7A204")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xD7AA4C", Offset = "0xD7AA4C", VA = "0xD7AA4C")]
	public void CacheDiscreteTriggers()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xD7AF38", Offset = "0xD7AF38", VA = "0xD7AF38")]
	public bool DoesLayerSynchronizeTypeExist(int layerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xD7B01C", Offset = "0xD7B01C", VA = "0xD7B01C")]
	public bool DoesParameterSynchronizeTypeExist(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xD7B100", Offset = "0xD7B100", VA = "0xD7B100")]
	public List<SynchronizedLayer> GetSynchronizedLayers()
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xD7B108", Offset = "0xD7B108", VA = "0xD7B108")]
	public List<SynchronizedParameter> GetSynchronizedParameters()
	{
		return null;
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xD7B110", Offset = "0xD7B110", VA = "0xD7B110")]
	public SynchronizeType GetLayerSynchronizeType(int layerIndex)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xD7B238", Offset = "0xD7B238", VA = "0xD7B238")]
	public SynchronizeType GetParameterSynchronizeType(string name)
	{
		return default(SynchronizeType);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xD7B360", Offset = "0xD7B360", VA = "0xD7B360")]
	public void SetLayerSynchronized(int layerIndex, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xD7B520", Offset = "0xD7B520", VA = "0xD7B520")]
	public void SetParameterSynchronized(string name, ParameterType type, SynchronizeType synchronizeType)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xD7A70C", Offset = "0xD7A70C", VA = "0xD7A70C")]
	private void SerializeDataContinuously()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xD7AB9C", Offset = "0xD7AB9C", VA = "0xD7AB9C")]
	private void DeserializeDataContinuously()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xD7B88C", Offset = "0xD7B88C", VA = "0xD7B88C")]
	private void SerializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xD7BC7C", Offset = "0xD7BC7C", VA = "0xD7BC7C")]
	private void DeserializeDataDiscretly(PhotonStream stream)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xD7C2D0", Offset = "0xD7C2D0", VA = "0xD7C2D0")]
	private void SerializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xD7C50C", Offset = "0xD7C50C", VA = "0xD7C50C")]
	private void DeserializeSynchronizationTypeState(PhotonStream stream)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xD7C72C", Offset = "0xD7C72C", VA = "0xD7C72C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xD7CBE8", Offset = "0xD7CBE8", VA = "0xD7CBE8")]
	public PhotonAnimatorView()
	{
	}
}
[Token(Token = "0x200010F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1550", Offset = "0x9E1550")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1550", Offset = "0x9E1550")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E1550", Offset = "0x9E1550")]
public class PhotonRigidbody2DView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody2D m_Body;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xD8C38C", Offset = "0xD8C38C", VA = "0xD8C38C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xD8C3E4", Offset = "0xD8C3E4", VA = "0xD8C3E4", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xD8C5D8", Offset = "0xD8C5D8", VA = "0xD8C5D8")]
	public PhotonRigidbody2DView()
	{
	}
}
[Token(Token = "0x2000110")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1600", Offset = "0x9E1600")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1600", Offset = "0x9E1600")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E1600", Offset = "0x9E1600")]
public class PhotonRigidbodyView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_SynchronizeVelocity;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_SynchronizeAngularVelocity;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody m_Body;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xD8C5E8", Offset = "0xD8C5E8", VA = "0xD8C5E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xD8C640", Offset = "0xD8C640", VA = "0xD8C640", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xD8C844", Offset = "0xD8C844", VA = "0xD8C844")]
	public PhotonRigidbodyView()
	{
	}
}
[Token(Token = "0x2000111")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E16B0", Offset = "0x9E16B0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E16B0", Offset = "0x9E16B0")]
public class PhotonTransformView : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PhotonTransformViewPositionModel m_PositionModel;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public PhotonTransformViewRotationModel m_RotationModel;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public PhotonTransformViewScaleModel m_ScaleModel;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PhotonTransformViewPositionControl m_PositionControl;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonTransformViewRotationControl m_RotationControl;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonTransformViewScaleControl m_ScaleControl;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView m_PhotonView;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_ReceivedNetworkUpdate;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_firstTake;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xBF0C38", Offset = "0xBF0C38", VA = "0xBF0C38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xBF0E7C", Offset = "0xBF0E7C", VA = "0xBF0E7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xBF0E88", Offset = "0xBF0E88", VA = "0xBF0E88")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xBF1040", Offset = "0xBF1040", VA = "0xBF1040")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xBF113C", Offset = "0xBF113C", VA = "0xBF113C")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xBF1248", Offset = "0xBF1248", VA = "0xBF1248")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xBF1A3C", Offset = "0xBF1A3C", VA = "0xBF1A3C")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xBF1A98", Offset = "0xBF1A98", VA = "0xBF1A98", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xBF2170", Offset = "0xBF2170", VA = "0xBF2170")]
	private void DoDrawEstimatedPositionError()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xBF24F8", Offset = "0xBF24F8", VA = "0xBF24F8")]
	public PhotonTransformView()
	{
	}
}
[Token(Token = "0x2000112")]
public class PhotonTransformViewPositionControl
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewPositionModel m_Model;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_CurrentSpeed;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double m_LastSerializeTime;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_SynchronizedSpeed;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_SynchronizedTurnSpeed;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_NetworkPosition;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Vector3> m_OldNetworkPositions;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_UpdatedPositionAfterOnSerialize;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xBF0D08", Offset = "0xBF0D08", VA = "0xBF0D08")]
	public PhotonTransformViewPositionControl(PhotonTransformViewPositionModel model)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xBF2854", Offset = "0xBF2854", VA = "0xBF2854")]
	private Vector3 GetOldestStoredNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xBF1A8C", Offset = "0xBF1A8C", VA = "0xBF1A8C")]
	public void SetSynchronizedValues(Vector3 speed, float turnSpeed)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xBF1344", Offset = "0xBF1344", VA = "0xBF1344")]
	public Vector3 UpdatePosition(Vector3 currentPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xBF24D4", Offset = "0xBF24D4", VA = "0xBF24D4")]
	public Vector3 GetNetworkPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xBF2914", Offset = "0xBF2914", VA = "0xBF2914")]
	public Vector3 GetExtrapolatedPositionOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xBF1DCC", Offset = "0xBF1DCC", VA = "0xBF1DCC")]
	public void OnPhotonSerializeView(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xBF2C5C", Offset = "0xBF2C5C", VA = "0xBF2C5C")]
	private void SerializeData(Vector3 currentPosition, PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xBF2DC0", Offset = "0xBF2DC0", VA = "0xBF2DC0")]
	private void DeserializeData(PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000113")]
public class PhotonTransformViewPositionModel
{
	[Token(Token = "0x2000344")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x40012E3")]
		Disabled,
		[Token(Token = "0x40012E4")]
		FixedSpeed,
		[Token(Token = "0x40012E5")]
		EstimatedSpeed,
		[Token(Token = "0x40012E6")]
		SynchronizeValues,
		[Token(Token = "0x40012E7")]
		Lerp
	}

	[Token(Token = "0x2000345")]
	public enum ExtrapolateOptions
	{
		[Token(Token = "0x40012E9")]
		Disabled,
		[Token(Token = "0x40012EA")]
		SynchronizeValues,
		[Token(Token = "0x40012EB")]
		EstimateSpeedAndTurn,
		[Token(Token = "0x40012EC")]
		FixedSpeed
	}

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool TeleportEnabled;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TeleportIfDistanceGreaterThan;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float InterpolateMoveTowardsAcceleration;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float InterpolateMoveTowardsDeceleration;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve InterpolateSpeedCurve;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExtrapolateOptions ExtrapolateOption;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ExtrapolateSpeed;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ExtrapolateIncludingRoundTripTime;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int ExtrapolateNumberOfStoredPositions;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DrawErrorGizmo;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xBF25B8", Offset = "0xBF25B8", VA = "0xBF25B8")]
	public PhotonTransformViewPositionModel()
	{
	}
}
[Token(Token = "0x2000114")]
public class PhotonTransformViewRotationControl
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewRotationModel m_Model;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion m_NetworkRotation;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xBF0DC4", Offset = "0xBF0DC4", VA = "0xBF0DC4")]
	public PhotonTransformViewRotationControl(PhotonTransformViewRotationModel model)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xBF24E0", Offset = "0xBF24E0", VA = "0xBF24E0")]
	public Quaternion GetNetworkRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xBF1718", Offset = "0xBF1718", VA = "0xBF1718")]
	public Quaternion GetRotation(Quaternion currentRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xBF1EC0", Offset = "0xBF1EC0", VA = "0xBF1EC0")]
	public void OnPhotonSerializeView(Quaternion currentRotation, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000115")]
public class PhotonTransformViewRotationModel
{
	[Token(Token = "0x2000346")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x40012EE")]
		Disabled,
		[Token(Token = "0x40012EF")]
		RotateTowards,
		[Token(Token = "0x40012F0")]
		Lerp
	}

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateRotateTowardsSpeed;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xBF2828", Offset = "0xBF2828", VA = "0xBF2828")]
	public PhotonTransformViewRotationModel()
	{
	}
}
[Token(Token = "0x2000116")]
public class PhotonTransformViewScaleControl
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PhotonTransformViewScaleModel m_Model;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_NetworkScale;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xBF0DF0", Offset = "0xBF0DF0", VA = "0xBF0DF0")]
	public PhotonTransformViewScaleControl(PhotonTransformViewScaleModel model)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xBF24EC", Offset = "0xBF24EC", VA = "0xBF24EC")]
	public Vector3 GetNetworkScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xBF18C4", Offset = "0xBF18C4", VA = "0xBF18C4")]
	public Vector3 GetScale(Vector3 currentScale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xBF2020", Offset = "0xBF2020", VA = "0xBF2020")]
	public void OnPhotonSerializeView(Vector3 currentScale, PhotonStream stream, PhotonMessageInfo info)
	{
	}
}
[Serializable]
[Token(Token = "0x2000117")]
public class PhotonTransformViewScaleModel
{
	[Token(Token = "0x2000347")]
	public enum InterpolateOptions
	{
		[Token(Token = "0x40012F2")]
		Disabled,
		[Token(Token = "0x40012F3")]
		MoveTowards,
		[Token(Token = "0x40012F4")]
		Lerp
	}

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SynchronizeEnabled;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InterpolateOptions InterpolateOption;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float InterpolateMoveTowardsSpeed;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InterpolateLerpSpeed;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xBF2844", Offset = "0xBF2844", VA = "0xBF2844")]
	public PhotonTransformViewScaleModel()
	{
	}
}
[Token(Token = "0x2000118")]
public class ConnectAndJoinRandom : Photon.MonoBehaviour
{
	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoConnect;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public byte Version;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool ConnectInUpdate;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xCFE7A8", Offset = "0xCFE7A8", VA = "0xCFE7A8", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xCFE80C", Offset = "0xCFE80C", VA = "0xCFE80C", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xCFE954", Offset = "0xCFE954", VA = "0xCFE954", Slot = "6")]
	public virtual void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xCFE9E8", Offset = "0xCFE9E8", VA = "0xCFE9E8", Slot = "7")]
	public virtual void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xCFEA7C", Offset = "0xCFEA7C", VA = "0xCFEA7C", Slot = "8")]
	public virtual void OnPhotonRandomJoinFailed()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xCFEB4C", Offset = "0xCFEB4C", VA = "0xCFEB4C", Slot = "9")]
	public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xCFEBFC", Offset = "0xCFEBFC", VA = "0xCFEBFC")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xCFEC68", Offset = "0xCFEC68", VA = "0xCFEC68")]
	public ConnectAndJoinRandom()
	{
	}
}
[Token(Token = "0x2000119")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x9E1738", Offset = "0x9E1738")]
public class CullArea : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000716")]
	private const int MAX_NUMBER_OF_ALLOWED_CELLS = 250;

	[Token(Token = "0x4000717")]
	public const int MAX_NUMBER_OF_SUBDIVISIONS = 3;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly byte FIRST_GROUP_ID;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int[] SUBDIVISION_FIRST_LEVEL_ORDER;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly int[] SUBDIVISION_SECOND_LEVEL_ORDER;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly int[] SUBDIVISION_THIRD_LEVEL_ORDER;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 Center;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 Size;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2[] Subdivisions;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumberOfSubdivisions;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6084", Offset = "0x9E6084")]
	private int <CellCount>k__BackingField;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6094", Offset = "0x9E6094")]
	private CellTree <CellTree>k__BackingField;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E60A4", Offset = "0x9E60A4")]
	private Dictionary<int, GameObject> <Map>k__BackingField;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool YIsUpAxis;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool RecreateCellHierarchy;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private byte idCounter;

	[Token(Token = "0x170000F5")]
	public int CellCount
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xCFEFA8", Offset = "0xCFEFA8", VA = "0xCFEFA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB034", Offset = "0x9EB034")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xCFEFB0", Offset = "0xCFEFB0", VA = "0xCFEFB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB044", Offset = "0x9EB044")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public CellTree CellTree
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xCFEFB8", Offset = "0xCFEFB8", VA = "0xCFEFB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB054", Offset = "0x9EB054")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xCFEFC0", Offset = "0xCFEFC0", VA = "0xCFEFC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB064", Offset = "0x9EB064")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public Dictionary<int, GameObject> Map
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xCFEFC8", Offset = "0xCFEFC8", VA = "0xCFEFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB074", Offset = "0x9EB074")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000700")]
		[Address(RVA = "0xCFEFD0", Offset = "0xCFEFD0", VA = "0xCFEFD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB084", Offset = "0x9EB084")]
		private set
		{
		}
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xCFEFD8", Offset = "0xCFEFD8", VA = "0xCFEFD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xCFF68C", Offset = "0xCFF68C", VA = "0xCFF68C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xCFEFE4", Offset = "0xCFEFE4", VA = "0xCFEFE4")]
	private void CreateCellHierarchy()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xCFF7A4", Offset = "0xCFF7A4", VA = "0xCFF7A4")]
	private void CreateChildCells(CellTreeNode parent, int cellLevelInHierarchy)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xCFF6D8", Offset = "0xCFF6D8", VA = "0xCFF6D8")]
	private void DrawCells()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xCFF6F8", Offset = "0xCFF6F8", VA = "0xCFF6F8")]
	private bool IsCellCountAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xCFFC80", Offset = "0xCFFC80", VA = "0xCFFC80")]
	public List<byte> GetActiveCells(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xCFFD54", Offset = "0xCFFD54", VA = "0xCFFD54")]
	public CullArea()
	{
	}
}
[Token(Token = "0x200011A")]
public class CellTree
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E60B4", Offset = "0x9E60B4")]
	private CellTreeNode <RootNode>k__BackingField;

	[Token(Token = "0x170000F8")]
	public CellTreeNode RootNode
	{
		[Token(Token = "0x6000709")]
		[Address(RVA = "0xCFBE00", Offset = "0xCFBE00", VA = "0xCFBE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB094", Offset = "0x9EB094")]
		get
		{
			return null;
		}
		[Token(Token = "0x600070A")]
		[Address(RVA = "0xCFBE08", Offset = "0xCFBE08", VA = "0xCFBE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB0A4", Offset = "0x9EB0A4")]
		private set
		{
		}
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xCFBE10", Offset = "0xCFBE10", VA = "0xCFBE10")]
	public CellTree()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xCFBE18", Offset = "0xCFBE18", VA = "0xCFBE18")]
	public CellTree(CellTreeNode root)
	{
	}
}
[Token(Token = "0x200011B")]
public class CellTreeNode
{
	[Token(Token = "0x2000348")]
	public enum ENodeType
	{
		[Token(Token = "0x40012F6")]
		Root,
		[Token(Token = "0x40012F7")]
		Node,
		[Token(Token = "0x40012F8")]
		Leaf
	}

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte Id;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 Center;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Size;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 TopLeft;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 BottomRight;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ENodeType NodeType;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellTreeNode Parent;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CellTreeNode> Childs;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float maxDistance;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xCFBE44", Offset = "0xCFBE44", VA = "0xCFBE44")]
	public CellTreeNode()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xCFBE4C", Offset = "0xCFBE4C", VA = "0xCFBE4C")]
	public CellTreeNode(byte id, ENodeType nodeType, CellTreeNode parent)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xCFBE90", Offset = "0xCFBE90", VA = "0xCFBE90")]
	public void AddChild(CellTreeNode child)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xCFBF30", Offset = "0xCFBF30", VA = "0xCFBF30")]
	public void Draw()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xCFBF34", Offset = "0xCFBF34", VA = "0xCFBF34")]
	public void GetActiveCells(List<byte> activeCells, bool yIsUpAxis, Vector3 position)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xCFC268", Offset = "0xCFC268", VA = "0xCFC268")]
	public bool IsPointInsideCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xCFC160", Offset = "0xCFC160", VA = "0xCFC160")]
	public bool IsPointNearCell(bool yIsUpAxis, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x200011C")]
public class InputToEvent : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject lastGo;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 inputHitPos;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DetectPointedAtGameObject;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E60C4", Offset = "0x9E60C4")]
	private static GameObject <goPointedAt>k__BackingField;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 pressedPosition;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currentPos;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Dragging;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera m_Camera;

	[Token(Token = "0x170000F9")]
	public static GameObject goPointedAt
	{
		[Token(Token = "0x6000714")]
		[Address(RVA = "0xC608A4", Offset = "0xC608A4", VA = "0xC608A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB0B4", Offset = "0x9EB0B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000715")]
		[Address(RVA = "0xC608F4", Offset = "0xC608F4", VA = "0xC608F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB0C4", Offset = "0x9EB0C4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public Vector2 DragVector
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0xC60948", Offset = "0xC60948", VA = "0xC60948")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xC60A14", Offset = "0xC60A14", VA = "0xC60A14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xC60A6C", Offset = "0xC60A6C", VA = "0xC60A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xC60F18", Offset = "0xC60F18", VA = "0xC60F18")]
	private void Press(Vector2 screenPos)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xC60FF8", Offset = "0xC60FF8", VA = "0xC60FF8")]
	private void Release(Vector2 screenPos)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xC60DC4", Offset = "0xC60DC4", VA = "0xC60DC4")]
	private GameObject RaycastObject(Vector2 screenPos)
	{
		return null;
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xC6115C", Offset = "0xC6115C", VA = "0xC6115C")]
	public InputToEvent()
	{
	}
}
[Token(Token = "0x200011D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1770", Offset = "0x9E1770")]
public class InRoomChat : Photon.MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rect GuiRect;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsVisible;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool AlignBottom;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> messages;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string inputLine;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 scrollPos;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string ChatRPC;

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xC60018", Offset = "0xC60018", VA = "0xC60018")]
	public void Start()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xC60068", Offset = "0xC60068", VA = "0xC60068")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xC605A0", Offset = "0xC605A0", VA = "0xC605A0")]
	[PunRPC]
	public void Chat(string newLine, PhotonMessageInfo mi)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xC606D8", Offset = "0xC606D8", VA = "0xC606D8")]
	public void AddLine(string newLine)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xC60748", Offset = "0xC60748", VA = "0xC60748")]
	public InRoomChat()
	{
	}
}
[Token(Token = "0x200011E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E17D4", Offset = "0x9E17D4")]
public class ManualPhotonViewAllocator : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xB741F8", Offset = "0xB741F8", VA = "0xB741F8")]
	public void AllocateManualPhotonView()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xB743DC", Offset = "0xB743DC", VA = "0xB743DC")]
	[PunRPC]
	public void InstantiateRpc(int viewID)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xB745E0", Offset = "0xB745E0", VA = "0xB745E0")]
	public ManualPhotonViewAllocator()
	{
	}
}
[Token(Token = "0x200011F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1838", Offset = "0x9E1838")]
public class MoveByKeys : Photon.MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float JumpForce;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float JumpTimeout;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isSprite;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float jumpingTime;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody body;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody2D body2d;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xB76574", Offset = "0xB76574", VA = "0xB76574")]
	public void Start()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xB76638", Offset = "0xB76638", VA = "0xB76638")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xB76B34", Offset = "0xB76B34", VA = "0xB76B34")]
	public MoveByKeys()
	{
	}
}
[Token(Token = "0x2000120")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E189C", Offset = "0x9E189C")]
public class NetworkCullingHandler : UnityEngine.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int orderIndex;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CullArea cullArea;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> previousActiveCells;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> activeCells;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhotonView pView;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lastPosition;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 currentPosition;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xB7A8BC", Offset = "0xB7A8BC", VA = "0xB7A8BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xB7AA44", Offset = "0xB7AA44", VA = "0xB7AA44")]
	private void Start()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xB7ABA0", Offset = "0xB7ABA0", VA = "0xB7ABA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xB7B14C", Offset = "0xB7B14C", VA = "0xB7B14C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xB7ACD4", Offset = "0xB7ACD4", VA = "0xB7ACD4")]
	private bool HaveActiveCellsChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xB7AF2C", Offset = "0xB7AF2C", VA = "0xB7AF2C")]
	private void UpdateInterestGroups()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xB7B5BC", Offset = "0xB7B5BC", VA = "0xB7B5BC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xB7B864", Offset = "0xB7B864", VA = "0xB7B864")]
	public NetworkCullingHandler()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1900", Offset = "0x9E1900")]
public class OnClickDestroy : Photon.MonoBehaviour
{
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E29C4", Offset = "0x9E29C4")]
	private sealed class <DestroyRpc>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnClickDestroy <>4__this;

		[Token(Token = "0x17000455")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0xD215A8", Offset = "0xD215A8", VA = "0xD215A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xD21618", Offset = "0xD21618", VA = "0xD21618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xD21428", Offset = "0xD21428", VA = "0xD21428")]
		[DebuggerHidden]
		public <DestroyRpc>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD2145C", Offset = "0xD2145C", VA = "0xD2145C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xD21460", Offset = "0xD21460", VA = "0xD21460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xD215B0", Offset = "0xD215B0", VA = "0xD215B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DestroyByRpc;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xD212D4", Offset = "0xD212D4", VA = "0xD212D4")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xD213B4", Offset = "0xD213B4", VA = "0xD213B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB0F4", Offset = "0x9EB0F4")]
	[PunRPC]
	public IEnumerator DestroyRpc()
	{
		return null;
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xD21454", Offset = "0xD21454", VA = "0xD21454")]
	public OnClickDestroy()
	{
	}
}
[Token(Token = "0x2000122")]
public class OnClickInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int InstantiateType;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] InstantiateTypeNames;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showGui;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xD21620", Offset = "0xD21620", VA = "0xD21620")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xD21904", Offset = "0xD21904", VA = "0xD21904")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xD219D8", Offset = "0xD219D8", VA = "0xD219D8")]
	public OnClickInstantiate()
	{
	}
}
[Token(Token = "0x2000123")]
public class OnJoinedInstantiate : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SpawnPosition;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PositionOffset;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] PrefabsToInstantiate;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xD21AF0", Offset = "0xD21AF0", VA = "0xD21AF0")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xD21E00", Offset = "0xD21E00", VA = "0xD21E00")]
	public OnJoinedInstantiate()
	{
	}
}
[Token(Token = "0x2000124")]
public class OnStartDelete : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000739")]
	[Address(RVA = "0xD21E10", Offset = "0xD21E10", VA = "0xD21E10")]
	private void Start()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xD21E8C", Offset = "0xD21E8C", VA = "0xD21E8C")]
	public OnStartDelete()
	{
	}
}
[Token(Token = "0x2000125")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1964", Offset = "0x9E1964")]
public class PickupItem : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnTrigger;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool PickupIsMine;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.MonoBehaviour OnPickedUpCall;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SentPickup;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double TimeOfRespawn;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<PickupItem> DisabledPickupItems;

	[Token(Token = "0x170000FB")]
	public int ViewID
	{
		[Token(Token = "0x600073B")]
		[Address(RVA = "0xBFB190", Offset = "0xBFB190", VA = "0xBFB190")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xBFB1C0", Offset = "0xBFB1C0", VA = "0xBFB1C0")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xBFB340", Offset = "0xBFB340", VA = "0xBFB340", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xBFB298", Offset = "0xBFB298", VA = "0xBFB298")]
	public void Pickup()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xBFB500", Offset = "0xBFB500", VA = "0xBFB500")]
	public void Drop()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xBFB5A0", Offset = "0xBFB5A0", VA = "0xBFB5A0")]
	public void Drop(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xBFB6D8", Offset = "0xBFB6D8", VA = "0xBFB6D8")]
	[PunRPC]
	public void PunPickup(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xBFBBC0", Offset = "0xBFBBC0", VA = "0xBFBBC0")]
	internal void PickedUp(float timeUntilRespawn)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xBFBCEC", Offset = "0xBFBCEC", VA = "0xBFBCEC")]
	[PunRPC]
	internal void PunRespawn(Vector3 pos)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xBFBDC8", Offset = "0xBFBDC8", VA = "0xBFBDC8")]
	[PunRPC]
	internal void PunRespawn()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xBFBED8", Offset = "0xBFBED8", VA = "0xBFBED8")]
	public PickupItem()
	{
	}
}
[Token(Token = "0x2000126")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E19C8", Offset = "0x9E19C8")]
public class PickupItemSimple : Photon.MonoBehaviour
{
	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SecondsBeforeRespawn;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool PickupOnCollide;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool SentPickup;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xBFBF5C", Offset = "0xBFBF5C", VA = "0xBFBF5C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xBFC034", Offset = "0xBFC034", VA = "0xBFC034")]
	public void Pickup()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xBFC0DC", Offset = "0xBFC0DC", VA = "0xBFC0DC")]
	[PunRPC]
	public void PunPickupSimple(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xBFC290", Offset = "0xBFC290", VA = "0xBFC290")]
	public void RespawnAfter()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xBFC348", Offset = "0xBFC348", VA = "0xBFC348")]
	public PickupItemSimple()
	{
	}
}
[Token(Token = "0x2000127")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1A2C", Offset = "0x9E1A2C")]
public class PickupItemSyncer : Photon.MonoBehaviour
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsWaitingForPickupInit;

	[Token(Token = "0x4000761")]
	private const float TimeDeltaToIgnore = 0.2f;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xBFC358", Offset = "0xBFC358", VA = "0xBFC358")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xBFCDD4", Offset = "0xBFCDD4", VA = "0xBFCDD4")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xBFD084", Offset = "0xBFD084", VA = "0xBFD084")]
	public void AskForPickupItemSpawnTimes()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xBFD2BC", Offset = "0xBFD2BC", VA = "0xBFD2BC")]
	[PunRPC]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EB1A8", Offset = "0x9EB1A8")]
	public void RequestForPickupTimes(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xBFD2EC", Offset = "0xBFD2EC", VA = "0xBFD2EC")]
	[PunRPC]
	public void RequestForPickupItems(PhotonMessageInfo msgInfo)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xBFC3E8", Offset = "0xBFC3E8", VA = "0xBFC3E8")]
	private void SendPickedUpItems(PhotonPlayer targetPlayer)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xBFD384", Offset = "0xBFD384", VA = "0xBFD384")]
	[PunRPC]
	public void PickupItemInit(double timeBase, float[] inactivePickupsAndTimes)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xBFD828", Offset = "0xBFD828", VA = "0xBFD828")]
	public PickupItemSyncer()
	{
	}
}
[Token(Token = "0x2000128")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1A90", Offset = "0x9E1A90")]
public class PointedAtGameObjectInfo : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x6000754")]
	[Address(RVA = "0xBFEC4C", Offset = "0xBFEC4C", VA = "0xBFEC4C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xBFEEE8", Offset = "0xBFEEE8", VA = "0xBFEEE8")]
	public PointedAtGameObjectInfo()
	{
	}
}
[Token(Token = "0x2000129")]
public class PunPlayerScores : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000762")]
	public const string PlayerScoreProp = "score";

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xBFF33C", Offset = "0xBFF33C", VA = "0xBFF33C")]
	public PunPlayerScores()
	{
	}
}
[Token(Token = "0x200012A")]
public static class ScoreExtensions
{
	[Token(Token = "0x6000757")]
	[Address(RVA = "0xC0CE94", Offset = "0xC0CE94", VA = "0xC0CE94")]
	public static void SetScore(this PhotonPlayer player, int newScore)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xC0CF64", Offset = "0xC0CF64", VA = "0xC0CF64")]
	public static void AddScore(this PhotonPlayer player, int scoreToAddToCurrent)
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xC0D044", Offset = "0xC0D044", VA = "0xC0D044")]
	public static int GetScore(this PhotonPlayer player)
	{
		return default(int);
	}
}
[Token(Token = "0x200012B")]
public class PunTeams : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200034A")]
	public enum Team : byte
	{
		[Token(Token = "0x40012FD")]
		none,
		[Token(Token = "0x40012FE")]
		red,
		[Token(Token = "0x40012FF")]
		blue
	}

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Team, List<PhotonPlayer>> PlayersPerTeam;

	[Token(Token = "0x4000764")]
	public const string TeamPlayerProp = "team";

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xBFF34C", Offset = "0xBFF34C", VA = "0xBFF34C")]
	public void Start()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xBFF6E0", Offset = "0xBFF6E0", VA = "0xBFF6E0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xBFF754", Offset = "0xBFF754", VA = "0xBFF754")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xBFFB98", Offset = "0xBFFB98", VA = "0xBFFB98")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xBFFB9C", Offset = "0xBFFB9C", VA = "0xBFFB9C")]
	public void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xBFFBA0", Offset = "0xBFFBA0", VA = "0xBFFBA0")]
	public void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xBFFBA4", Offset = "0xBFFBA4", VA = "0xBFFBA4")]
	public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xBFF758", Offset = "0xBFF758", VA = "0xBFF758")]
	public void UpdateTeams()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xBFFBA8", Offset = "0xBFFBA8", VA = "0xBFFBA8")]
	public PunTeams()
	{
	}
}
[Token(Token = "0x200012C")]
public static class TeamExtensions
{
	[Token(Token = "0x6000763")]
	[Address(RVA = "0xC38B78", Offset = "0xC38B78", VA = "0xC38B78")]
	public static PunTeams.Team GetTeam(this PhotonPlayer player)
	{
		return default(PunTeams.Team);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xC38C5C", Offset = "0xC38C5C", VA = "0xC38C5C")]
	public static void SetTeam(this PhotonPlayer player, PunTeams.Team team)
	{
	}
}
[Token(Token = "0x200012D")]
public class PunTurnManager : PunBehaviour
{
	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TurnDuration;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IPunTurnManagerCallbacks TurnManagerListener;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly HashSet<PhotonPlayer> finishedPlayers;

	[Token(Token = "0x4000768")]
	public const byte TurnManagerEventOffset = 0;

	[Token(Token = "0x4000769")]
	public const byte EvMove = 1;

	[Token(Token = "0x400076A")]
	public const byte EvFinalMove = 2;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOverCallProcessed;

	[Token(Token = "0x170000FC")]
	public int Turn
	{
		[Token(Token = "0x6000765")]
		[Address(RVA = "0xBFFBB0", Offset = "0xBFFBB0", VA = "0xBFFBB0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000766")]
		[Address(RVA = "0xBFFC44", Offset = "0xBFFC44", VA = "0xBFFC44")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public float ElapsedTimeInTurn
	{
		[Token(Token = "0x6000767")]
		[Address(RVA = "0xBFFCF4", Offset = "0xBFFCF4", VA = "0xBFFCF4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000FE")]
	public float RemainingSecondsInTurn
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0xBFFDAC", Offset = "0xBFFDAC", VA = "0xBFFDAC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000FF")]
	public bool IsCompletedByAll
	{
		[Token(Token = "0x6000769")]
		[Address(RVA = "0xBFFE2C", Offset = "0xBFFE2C", VA = "0xBFFE2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000100")]
	public bool IsFinishedByMe
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0xBFFFA4", Offset = "0xBFFFA4", VA = "0xBFFFA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000101")]
	public bool IsOver
	{
		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC00034", Offset = "0xC00034", VA = "0xC00034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xC00050", Offset = "0xC00050", VA = "0xC00050")]
	private void Start()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xC000E4", Offset = "0xC000E4", VA = "0xC000E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xC001E0", Offset = "0xC001E0", VA = "0xC001E0")]
	public void BeginTurn()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xC00208", Offset = "0xC00208", VA = "0xC00208")]
	public void SendMove(object move, bool finished)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xC008C4", Offset = "0xC008C4", VA = "0xC008C4")]
	public bool GetPlayerFinishedTurn(PhotonPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xC004B0", Offset = "0xC004B0", VA = "0xC004B0")]
	public void OnEvent(byte eventCode, object content, int senderId)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xC00940", Offset = "0xC00940", VA = "0xC00940", Slot = "52")]
	public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xC00A74", Offset = "0xC00A74", VA = "0xC00A74")]
	public PunTurnManager()
	{
	}
}
[Token(Token = "0x200012E")]
public interface IPunTurnManagerCallbacks
{
	[Token(Token = "0x6000774")]
	void OnTurnBegins(int turn);

	[Token(Token = "0x6000775")]
	void OnTurnCompleted(int turn);

	[Token(Token = "0x6000776")]
	void OnPlayerMove(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x6000777")]
	void OnPlayerFinished(PhotonPlayer player, int turn, object move);

	[Token(Token = "0x6000778")]
	void OnTurnTimeEnds(int turn);
}
[Token(Token = "0x200012F")]
public static class TurnExtensions
{
	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string TurnPropKey;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string TurnStartPropKey;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string FinishedTurnPropKey;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xC3ECD0", Offset = "0xC3ECD0", VA = "0xC3ECD0")]
	public static void SetTurn(this Room room, int turn, bool setStartTime = false)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xC3EE6C", Offset = "0xC3EE6C", VA = "0xC3EE6C")]
	public static int GetTurn(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xC3EFCC", Offset = "0xC3EFCC", VA = "0xC3EFCC")]
	public static int GetTurnStart(this RoomInfo room)
	{
		return default(int);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xC3F12C", Offset = "0xC3F12C", VA = "0xC3F12C")]
	public static int GetFinishedTurn(this PhotonPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xC3F2F8", Offset = "0xC3F2F8", VA = "0xC3F2F8")]
	public static void SetFinishedTurn(this PhotonPlayer player, int turn)
	{
	}
}
[Token(Token = "0x2000130")]
public class QuitOnEscapeOrBack : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x600077F")]
	[Address(RVA = "0xC00AEC", Offset = "0xC00AEC", VA = "0xC00AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xC00B18", Offset = "0xC00B18", VA = "0xC00B18")]
	public QuitOnEscapeOrBack()
	{
	}
}
[Token(Token = "0x2000131")]
public class ShowStatusWhenConnecting : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GUISkin Skin;

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xC0D5EC", Offset = "0xC0D5EC", VA = "0xC0D5EC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xC0D888", Offset = "0xC0D888", VA = "0xC0D888")]
	private string GetConnectingDots()
	{
		return null;
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xC0D958", Offset = "0xC0D958", VA = "0xC0D958")]
	public ShowStatusWhenConnecting()
	{
	}
}
[Token(Token = "0x2000132")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1B24", Offset = "0x9E1B24")]
public class SmoothSyncMovement : Photon.MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothingDelay;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 correctPlayerPos;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion correctPlayerRot;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xC0E490", Offset = "0xC0E490", VA = "0xC0E490")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xC0E654", Offset = "0xC0E654", VA = "0xC0E654", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xC0E85C", Offset = "0xC0E85C", VA = "0xC0E85C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xC0EAB8", Offset = "0xC0EAB8", VA = "0xC0EAB8")]
	public SmoothSyncMovement()
	{
	}
}
[Token(Token = "0x2000133")]
public class SupportLogger : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xC37CF8", Offset = "0xC37CF8", VA = "0xC37CF8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xC37E08", Offset = "0xC37E08", VA = "0xC37E08")]
	public SupportLogger()
	{
	}
}
[Token(Token = "0x2000134")]
public class SupportLogging : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogTrafficStats;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xC37E18", Offset = "0xC37E18", VA = "0xC37E18")]
	public void Start()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xC37E88", Offset = "0xC37E88", VA = "0xC37E88")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xC37F80", Offset = "0xC37F80", VA = "0xC37F80")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xC37F88", Offset = "0xC37F88", VA = "0xC37F88")]
	public void LogStats()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xC38050", Offset = "0xC38050", VA = "0xC38050")]
	private void LogBasics()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xC38310", Offset = "0xC38310", VA = "0xC38310")]
	public void OnConnectedToPhoton()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xC383C4", Offset = "0xC383C4", VA = "0xC383C4")]
	public void OnFailedToConnectToPhoton(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xC38484", Offset = "0xC38484", VA = "0xC38484")]
	public void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xC38540", Offset = "0xC38540", VA = "0xC38540")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xC387EC", Offset = "0xC387EC", VA = "0xC387EC")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xC38A98", Offset = "0xC38A98", VA = "0xC38A98")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xC38B04", Offset = "0xC38B04", VA = "0xC38B04")]
	public void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xC38B70", Offset = "0xC38B70", VA = "0xC38B70")]
	public SupportLogging()
	{
	}
}
[Token(Token = "0x2000135")]
[DisallowMultipleComponent]
public class PhotonVoiceHandler : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int updateInterval;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nextSendTickCount;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool sendThreadShouldRun;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Stopwatch timerToStopConnectionInBackground;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xBF51DC", Offset = "0xBF51DC", VA = "0xBF51DC")]
	private static void StartFallbackSendAckThread()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xBF52B0", Offset = "0xBF52B0", VA = "0xBF52B0")]
	private static void StopFallbackSendAckThread()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xBF5300", Offset = "0xBF5300", VA = "0xBF5300")]
	private static bool FallbackSendAckThread()
	{
		return default(bool);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xBF56B4", Offset = "0xBF56B4", VA = "0xBF56B4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9EB2B4", Offset = "0x9EB2B4")]
	private static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xBF5834", Offset = "0xBF5834", VA = "0xBF5834")]
	private void Awake()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xBF5BE0", Offset = "0xBF5BE0", VA = "0xBF5BE0")]
	protected void Update()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xBF5DC8", Offset = "0xBF5DC8", VA = "0xBF5DC8")]
	protected void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xBF5EF8", Offset = "0xBF5EF8", VA = "0xBF5EF8")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xBF5F48", Offset = "0xBF5F48", VA = "0xBF5F48")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xBF5FDC", Offset = "0xBF5FDC", VA = "0xBF5FDC")]
	public PhotonVoiceHandler()
	{
	}
}
[Token(Token = "0x2000136")]
[DisallowMultipleComponent]
public class PhotonVoiceNetwork : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceNetwork _instance;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object instanceLock;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool destroyed;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float BackgroundTimeout;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal UnityVoiceFrontend client;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E60D4", Offset = "0x9E60D4")]
	private static Func<PhotonVoiceRecorder, IAudioSource> <AudioSourceFactory>k__BackingField;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string unityMicrophoneDevice;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioInEnumerator photonMicEnumerator;

	[Token(Token = "0x17000102")]
	internal static PhotonVoiceNetwork instance
	{
		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xBF590C", Offset = "0xBF590C", VA = "0xBF590C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xBF5FE4", Offset = "0xBF5FE4", VA = "0xBF5FE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public static Func<PhotonVoiceRecorder, IAudioSource> AudioSourceFactory
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xBF6520", Offset = "0xBF6520", VA = "0xBF6520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB2D4", Offset = "0x9EB2D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xBF6588", Offset = "0xBF6588", VA = "0xBF6588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB2E4", Offset = "0x9EB2E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public static UnityVoiceFrontend Client
	{
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xBF55C0", Offset = "0xBF55C0", VA = "0xBF55C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000105")]
	public static VoiceClient VoiceClient
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xBF695C", Offset = "0xBF695C", VA = "0xBF695C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000106")]
	public static ExitGames.Client.Photon.LoadBalancing.ClientState ClientState
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xBF69E0", Offset = "0xBF69E0", VA = "0xBF69E0")]
		get
		{
			return default(ExitGames.Client.Photon.LoadBalancing.ClientState);
		}
	}

	[Token(Token = "0x17000107")]
	public static string CurrentRoomName
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xBF6A64", Offset = "0xBF6A64", VA = "0xBF6A64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000108")]
	public static AudioInEnumerator PhotonMicrophoneEnumerator
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xBF6B50", Offset = "0xBF6B50", VA = "0xBF6B50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000109")]
	public static string MicrophoneDevice
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xBF6BC0", Offset = "0xBF6BC0", VA = "0xBF6BC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xBF6C30", Offset = "0xBF6C30", VA = "0xBF6C30")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public static int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xBF7260", Offset = "0xBF7260", VA = "0xBF7260")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xBF72D0", Offset = "0xBF72D0", VA = "0xBF72D0")]
		set
		{
		}
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xBF6274", Offset = "0xBF6274", VA = "0xBF6274")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xBF638C", Offset = "0xBF638C", VA = "0xBF638C")]
	private PhotonVoiceNetwork()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xBF6424", Offset = "0xBF6424", VA = "0xBF6424")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9EB2C4", Offset = "0x9EB2C4")]
	public static void RuntimeInitializeOnLoad()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xBF64BC", Offset = "0xBF64BC", VA = "0xBF64BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xBF65F4", Offset = "0xBF65F4", VA = "0xBF65F4")]
	public static bool Connect()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xBF5630", Offset = "0xBF5630", VA = "0xBF5630")]
	public static void Disconnect()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xBF7720", Offset = "0xBF7720", VA = "0xBF7720")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xBF77BC", Offset = "0xBF77BC", VA = "0xBF77BC")]
	protected void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xBF78A0", Offset = "0xBF78A0", VA = "0xBF78A0")]
	protected void Update()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xBF79E8", Offset = "0xBF79E8", VA = "0xBF79E8")]
	private void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xBF7B8C", Offset = "0xBF7B8C", VA = "0xBF7B8C")]
	private void OnLeftRoom()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xBF7CF4", Offset = "0xBF7CF4", VA = "0xBF7CF4")]
	private void OnDisconnectedFromPhoton()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xBF7E5C", Offset = "0xBF7E5C", VA = "0xBF7E5C")]
	internal static void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xBF7EE8", Offset = "0xBF7EE8", VA = "0xBF7EE8")]
	internal static void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}
}
[Token(Token = "0x2000137")]
public class UnityVoiceFrontend : LoadBalancingFrontend
{
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E29D4", Offset = "0x9E29D4")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityVoiceFrontend <>4__this;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public byte voiceId;

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xC4078C", Offset = "0xC4078C", VA = "0xC4078C")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xC418EC", Offset = "0xC418EC", VA = "0xC418EC")]
		internal void <OnRemoteVoiceInfo>b__0(float[] frame)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xC41938", Offset = "0xC41938", VA = "0xC41938")]
		internal void <OnRemoteVoiceInfo>b__1()
		{
		}
	}

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<KeyValuePair<int, byte>, PhotonVoiceSpeaker> voiceSpeakers;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E60E4", Offset = "0x9E60E4")]
	private Action<int, byte, VoiceInfo> <OnRemoteVoiceInfoAction>k__BackingField;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E60F4", Offset = "0x9E60F4")]
	private Action<int, byte> <OnRemoteVoiceRemoveAction>k__BackingField;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6104", Offset = "0x9E6104")]
	private Action<int, byte, float[]> <OnAudioFrameAction>k__BackingField;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6114", Offset = "0x9E6114")]
	private Action<ExitGames.Client.Photon.LoadBalancing.ClientState> <OnStateChangeAction>k__BackingField;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6124", Offset = "0x9E6124")]
	private Action<OperationResponse> <OnOpResponseAction>k__BackingField;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool reconnect;

	[Token(Token = "0x1700010B")]
	public Action<int, byte, VoiceInfo> OnRemoteVoiceInfoAction
	{
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xC3F908", Offset = "0xC3F908", VA = "0xC3F908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB2F4", Offset = "0x9EB2F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xC3F910", Offset = "0xC3F910", VA = "0xC3F910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB304", Offset = "0x9EB304")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public Action<int, byte> OnRemoteVoiceRemoveAction
	{
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xC3F918", Offset = "0xC3F918", VA = "0xC3F918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB314", Offset = "0x9EB314")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xC3F920", Offset = "0xC3F920", VA = "0xC3F920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB324", Offset = "0x9EB324")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public Action<int, byte, float[]> OnAudioFrameAction
	{
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xC3F928", Offset = "0xC3F928", VA = "0xC3F928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB334", Offset = "0x9EB334")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xC3F930", Offset = "0xC3F930", VA = "0xC3F930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB344", Offset = "0x9EB344")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public new Action<ExitGames.Client.Photon.LoadBalancing.ClientState> OnStateChangeAction
	{
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xC3F938", Offset = "0xC3F938", VA = "0xC3F938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB354", Offset = "0x9EB354")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xC3F940", Offset = "0xC3F940", VA = "0xC3F940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB364", Offset = "0x9EB364")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public new Action<OperationResponse> OnOpResponseAction
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xC3F948", Offset = "0xC3F948", VA = "0xC3F948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB374", Offset = "0x9EB374")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xC3F950", Offset = "0xC3F950", VA = "0xC3F950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB384", Offset = "0x9EB384")]
		set
		{
		}
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xC3F958", Offset = "0xC3F958", VA = "0xC3F958")]
	internal UnityVoiceFrontend(ConnectionProtocol connetProtocol)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xC3FB84", Offset = "0xC3FB84", VA = "0xC3FB84")]
	public void Reconnect()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xC3FC28", Offset = "0xC3FC28", VA = "0xC3FC28", Slot = "14")]
	public override void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xC3FDC4", Offset = "0xC3FDC4", VA = "0xC3FDC4")]
	public void OnOpResponse(OperationResponse resp)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xC3FE38", Offset = "0xC3FE38", VA = "0xC3FE38")]
	private void linkVoice(int playerId, byte voiceId, VoiceInfo voiceInfo, PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xC4022C", Offset = "0xC4022C", VA = "0xC4022C")]
	public void OnRemoteVoiceInfo(int channelId, int playerId, byte voiceId, VoiceInfo voiceInfo, ref RemoteVoiceOptions options)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xC40794", Offset = "0xC40794", VA = "0xC40794")]
	public void LinkSpeakerToRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xC40BC0", Offset = "0xC40BC0", VA = "0xC40BC0")]
	public void OnRemoteVoiceRemove(int playerId, byte voiceId)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xC40EA4", Offset = "0xC40EA4", VA = "0xC40EA4")]
	private bool unlinkSpeaker(KeyValuePair<int, byte> key)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xC40F6C", Offset = "0xC40F6C", VA = "0xC40F6C")]
	public void UnlinkSpeakerFromRemoteVoice(PhotonVoiceSpeaker speaker)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xC4140C", Offset = "0xC4140C", VA = "0xC4140C")]
	public void OnAudioFrame(int playerId, byte voiceId, float[] frame)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xC4162C", Offset = "0xC4162C", VA = "0xC4162C")]
	public void OnStateChange(ExitGames.Client.Photon.LoadBalancing.ClientState state)
	{
	}
}
[Token(Token = "0x2000138")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1BA8", Offset = "0x9E1BA8")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E1BA8", Offset = "0x9E1BA8")]
public class PhotonVoiceRecorder : Photon.MonoBehaviour
{
	[Token(Token = "0x200034C")]
	public enum AudioSource
	{
		[Token(Token = "0x4001304")]
		Microphone,
		[Token(Token = "0x4001305")]
		AudioClip,
		[Token(Token = "0x4001306")]
		Factory
	}

	[Token(Token = "0x200034D")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x4001308")]
		Settings,
		[Token(Token = "0x4001309")]
		Unity,
		[Token(Token = "0x400130A")]
		Photon
	}

	[Token(Token = "0x200034E")]
	public enum SampleTypeConv
	{
		[Token(Token = "0x400130C")]
		None,
		[Token(Token = "0x400130D")]
		Short,
		[Token(Token = "0x400130E")]
		ShortAuto
	}

	[Token(Token = "0x200034F")]
	public class PhotonVoiceCreatedParams
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E99AC", Offset = "0x9E99AC")]
		private LocalVoice <Voice>k__BackingField;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E99BC", Offset = "0x9E99BC")]
		private IAudioSource <AudioSource>k__BackingField;

		[Token(Token = "0x17000457")]
		public LocalVoice Voice
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xBFA724", Offset = "0xBFA724", VA = "0xBFA724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F214C", Offset = "0x9F214C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xBF9F40", Offset = "0xBF9F40", VA = "0xBF9F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F215C", Offset = "0x9F215C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public IAudioSource AudioSource
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xBFA72C", Offset = "0xBFA72C", VA = "0xBFA72C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F216C", Offset = "0x9F216C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xBF9F48", Offset = "0xBF9F48", VA = "0xBF9F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F217C", Offset = "0x9F217C")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xBF9F38", Offset = "0xBF9F38", VA = "0xBF9F38")]
		public PhotonVoiceCreatedParams()
		{
		}
	}

	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E29E4", Offset = "0x9E29E4")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalVoiceAudio<float> localVoice;

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xBF9E54", Offset = "0xBF9E54", VA = "0xBF9E54")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xBFA644", Offset = "0xBFA644", VA = "0xBFA644")]
		internal void <createLocalVoiceAudio>b__0(float[] buf)
		{
		}
	}

	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E29F4", Offset = "0x9E29F4")]
	private sealed class <>c__DisplayClass33_1
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalVoiceAudio<short> localVoice;

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xBF9E5C", Offset = "0xBF9E5C", VA = "0xBF9E5C")]
		public <>c__DisplayClass33_1()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xBFA6B4", Offset = "0xBFA6B4", VA = "0xBFA6B4")]
		internal void <createLocalVoiceAudio>b__1(short[] buf)
		{
		}
	}

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LocalVoice voice;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string microphoneDevice;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int photonMicrophoneDeviceID;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IAudioSource audioSource;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource Source;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SampleTypeConv TypeConvert;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool forceShort;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip AudioClip;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool LoopAudioClip;

	[Token(Token = "0x17000110")]
	protected ILocalVoiceAudio voiceAudio
	{
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xBF8024", Offset = "0xBF8024", VA = "0xBF8024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000111")]
	public AudioUtil.IVoiceDetector VoiceDetector
	{
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xBF8098", Offset = "0xBF8098", VA = "0xBF8098")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000112")]
	public string MicrophoneDevice
	{
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xBF717C", Offset = "0xBF717C", VA = "0xBF717C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xBF7184", Offset = "0xBF7184", VA = "0xBF7184")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public int PhotonMicrophoneDeviceID
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xBF75FC", Offset = "0xBF75FC", VA = "0xBF75FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xBF7604", Offset = "0xBF7604", VA = "0xBF7604")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public byte AudioGroup
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xBF8F8C", Offset = "0xBF8F8C", VA = "0xBF8F8C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xBF8FBC", Offset = "0xBF8FBC", VA = "0xBF8FBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public bool IsTransmitting
	{
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xBF8FF4", Offset = "0xBF8FF4", VA = "0xBF8FF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000116")]
	public AudioUtil.ILevelMeter LevelMeter
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xBF9024", Offset = "0xBF9024", VA = "0xBF9024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000117")]
	public bool Transmit
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xBFA064", Offset = "0xBFA064", VA = "0xBFA064")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xBFA094", Offset = "0xBFA094", VA = "0xBFA094")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public bool Detect
	{
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xBFA0CC", Offset = "0xBFA0CC", VA = "0xBFA0CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xBFA1F8", Offset = "0xBFA1F8", VA = "0xBFA1F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public bool DebugEchoMode
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xBF8760", Offset = "0xBF8760", VA = "0xBF8760")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xBF8790", Offset = "0xBF8790", VA = "0xBF8790")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public bool VoiceDetectorCalibrating
	{
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xBFA438", Offset = "0xBFA438", VA = "0xBFA438")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xBF8184", Offset = "0xBF8184", VA = "0xBF8184")]
	public void UpdateAudioSource()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xBF90E0", Offset = "0xBF90E0", VA = "0xBF90E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xBF87C8", Offset = "0xBF87C8", VA = "0xBF87C8")]
	private LocalVoice createLocalVoiceAudioAndSource()
	{
		return null;
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xBF9554", Offset = "0xBF9554", VA = "0xBF9554", Slot = "4")]
	protected virtual LocalVoice createLocalVoiceAudio(VoiceInfo voiceInfo, IAudioSource source)
	{
		return null;
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xBF9E64", Offset = "0xBF9E64", VA = "0xBF9E64", Slot = "5")]
	protected virtual void sendPhotonVoiceCreatedMessage()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xBF9F50", Offset = "0xBF9F50", VA = "0xBF9F50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xBFA060", Offset = "0xBFA060", VA = "0xBFA060")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xBFA338", Offset = "0xBFA338", VA = "0xBFA338")]
	public void VoiceDetectorCalibrate(int durationMs)
	{
	}

	[Token(Token = "0x60007EC")]
	private string tostr<T>(T[] x, int lim = 10)
	{
		return null;
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xBFA4F4", Offset = "0xBFA4F4", VA = "0xBFA4F4")]
	public string ToStringFull()
	{
		return null;
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xBFA5BC", Offset = "0xBFA5BC", VA = "0xBFA5BC")]
	public PhotonVoiceRecorder()
	{
	}
}
[Token(Token = "0x2000139")]
[DisallowMultipleComponent]
public class PhotonVoiceSettings : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000352")]
	public enum MicAudioSourceType
	{
		[Token(Token = "0x4001314")]
		Unity,
		[Token(Token = "0x4001315")]
		Photon
	}

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool WorkInOfflineMode;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool AutoConnect;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AutoDisconnect;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool AutoTransmit;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SamplingRate SamplingRate;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OpusCodec.FrameDuration FrameDuration;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Bitrate;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool VoiceDetection;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float VoiceDetectionThreshold;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PlayDelayMs;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MicAudioSourceType MicrophoneType;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int DebugLostPercent;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool DebugInfo;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool Encrypt;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonVoiceSettings instance;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static object instanceLock;

	[Token(Token = "0x1700011B")]
	public static PhotonVoiceSettings Instance
	{
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xBF6F08", Offset = "0xBF6F08", VA = "0xBF6F08")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xBFA734", Offset = "0xBFA734", VA = "0xBFA734")]
		private set
		{
		}
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xBFA9C4", Offset = "0xBFA9C4", VA = "0xBFA9C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xBFAA28", Offset = "0xBFAA28", VA = "0xBFAA28")]
	public PhotonVoiceSettings()
	{
	}
}
[Token(Token = "0x200013A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1C50", Offset = "0x9E1C50")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E1C50", Offset = "0x9E1C50")]
public class PhotonVoiceSpeaker : Photon.MonoBehaviour
{
	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IAudioOut player;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool started;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6134", Offset = "0x9E6134")]
	private long <LastRecvTime>k__BackingField;

	[Token(Token = "0x1700011C")]
	public long LastRecvTime
	{
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xBFAAD0", Offset = "0xBFAAD0", VA = "0xBFAAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB394", Offset = "0x9EB394")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xBFAAD8", Offset = "0xBFAAD8", VA = "0xBFAAD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EB3A4", Offset = "0x9EB3A4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public bool IsPlaying
	{
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xBFAAE0", Offset = "0xBFAAE0", VA = "0xBFAAE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011E")]
	public int CurrentBufferLag
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xBFAB94", Offset = "0xBFAB94", VA = "0xBFAB94")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011F")]
	public bool IsVoiceLinked
	{
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xBFAC4C", Offset = "0xBFAC4C", VA = "0xBFAC4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xBFAC6C", Offset = "0xBFAC6C", VA = "0xBFAC6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xBFAD38", Offset = "0xBFAD38", VA = "0xBFAD38")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xBFAD9C", Offset = "0xBFAD9C", VA = "0xBFAD9C")]
	internal void OnVoiceLinked(int frequency, int channels, int frameSamplesPerChannel, int playDelayMs)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xBFAE90", Offset = "0xBFAE90", VA = "0xBFAE90")]
	internal void OnVoiceUnlinked()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xBFAF54", Offset = "0xBFAF54", VA = "0xBFAF54")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xBFB00C", Offset = "0xBFB00C", VA = "0xBFB00C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xBFB078", Offset = "0xBFB078", VA = "0xBFB078")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xBFAE94", Offset = "0xBFAE94", VA = "0xBFAE94")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xBFB07C", Offset = "0xBFB07C", VA = "0xBFB07C")]
	internal void OnAudioFrame(float[] frame)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xBFB188", Offset = "0xBFB188", VA = "0xBFB188")]
	public PhotonVoiceSpeaker()
	{
	}
}
[Token(Token = "0x200013B")]
internal class DelayProcessor : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x2000353")]
	private abstract class Processor<T> : LocalVoiceFramed<T>.IProcessor, IDisposable
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float factor;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] prevBuf;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBufPosWrite;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int prevBufPosRead;

		[Token(Token = "0x6001A5B")]
		public Processor(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6001A5C")]
		protected abstract void mix(float factor, T[] buf, T[] prevBuf, ref int prevBufPosRead);

		[Token(Token = "0x6001A5D")]
		public T[] Process(T[] buf)
		{
			return null;
		}

		[Token(Token = "0x6001A5E")]
		public void Dispose()
		{
		}
	}

	[Token(Token = "0x2000354")]
	private class ProcessorFloat : Processor<float>
	{
		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xC510A4", Offset = "0xC510A4", VA = "0xC510A4")]
		public ProcessorFloat(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xC5118C", Offset = "0xC5118C", VA = "0xC5118C", Slot = "6")]
		protected override void mix(float factor, float[] buf, float[] prevBuf, ref int prevBufPosRead)
		{
		}
	}

	[Token(Token = "0x2000355")]
	private class ProcessorShort : Processor<short>
	{
		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xC51114", Offset = "0xC51114", VA = "0xC51114")]
		public ProcessorShort(int delaySamples, float factor)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xC51270", Offset = "0xC51270", VA = "0xC51270", Slot = "6")]
		protected override void mix(float factor, short[] buf, short[] prevBuf, ref int prevBufPosRead)
		{
		}
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xC50B18", Offset = "0xC50B18", VA = "0xC50B18")]
	private void PhotonVoiceCreated(PhotonVoiceRecorder.PhotonVoiceCreatedParams p)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xC51184", Offset = "0xC51184", VA = "0xC51184")]
	public DelayProcessor()
	{
	}
}
[Token(Token = "0x200013C")]
public class Gui : UnityEngine.MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A04", Offset = "0x9E2A04")]
	private sealed class <>c
	{
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PhotonVoiceRecorder, IAudioSource> <>9__0_0;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<PhotonVoiceRecorder, IAudioSource> <>9__0_1;

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xC5ED40", Offset = "0xC5ED40", VA = "0xC5ED40")]
		public <>c()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xC5ED48", Offset = "0xC5ED48", VA = "0xC5ED48")]
		internal IAudioSource <Start>b__0_0(PhotonVoiceRecorder rec)
		{
			return null;
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xC5EE54", Offset = "0xC5EE54", VA = "0xC5EE54")]
		internal IAudioSource <Start>b__0_1(PhotonVoiceRecorder rec)
		{
			return null;
		}
	}

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float dataRateNextTime;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int prevInBytes;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int prevOutBytes;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int dataRateIn;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int dataRateOut;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xC5BC9C", Offset = "0xC5BC9C", VA = "0xC5BC9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xC5BED8", Offset = "0xC5BED8", VA = "0xC5BED8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xC5ECD4", Offset = "0xC5ECD4", VA = "0xC5ECD4")]
	public Gui()
	{
	}
}
[Token(Token = "0x200013D")]
public class HighlightRecorder : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonVoiceRecorder recorder;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rendererComp;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xC5F5B4", Offset = "0xC5F5B4", VA = "0xC5F5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xC5F6E0", Offset = "0xC5F6E0", VA = "0xC5F6E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xC5F79C", Offset = "0xC5F79C", VA = "0xC5F79C")]
	public HighlightRecorder()
	{
	}
}
[Token(Token = "0x200013E")]
public class HighlightSpeaker : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonVoiceSpeaker speaker;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rendererComp;

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xC5F7A4", Offset = "0xC5F7A4", VA = "0xC5F7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xC5F8D0", Offset = "0xC5F8D0", VA = "0xC5F8D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xC5F98C", Offset = "0xC5F98C", VA = "0xC5F98C")]
	public HighlightSpeaker()
	{
	}
}
[Token(Token = "0x200013F")]
internal class ToneAudioReader : IAudioReader<float>, IDataReader<float>, IDisposable, IAudioSource
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private double k;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private long timeSamples;

	[Token(Token = "0x17000120")]
	public int Channels
	{
		[Token(Token = "0x600080F")]
		[Address(RVA = "0xC3EA04", Offset = "0xC3EA04", VA = "0xC3EA04", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000121")]
	public int SamplingRate
	{
		[Token(Token = "0x6000810")]
		[Address(RVA = "0xC3E9FC", Offset = "0xC3E9FC", VA = "0xC3E9FC", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xC3E9C4", Offset = "0xC3E9C4", VA = "0xC3E9C4")]
	public ToneAudioReader()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xC3EA0C", Offset = "0xC3EA0C", VA = "0xC3EA0C", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xC3EA10", Offset = "0xC3EA10", VA = "0xC3EA10", Slot = "4")]
	public bool Read(float[] buf)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000140")]
public class ViewDrag : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 hit_position;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 current_position;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 camera_position;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool invert;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool yBecomesZ;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speed;

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xC41A10", Offset = "0xC41A10", VA = "0xC41A10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xC41A14", Offset = "0xC41A14", VA = "0xC41A14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xC41AAC", Offset = "0xC41AAC", VA = "0xC41AAC")]
	private void LeftMouseDrag()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xC41CD0", Offset = "0xC41CD0", VA = "0xC41CD0")]
	public ViewDrag()
	{
	}
}
[Token(Token = "0x2000141")]
public static class PlayerPrefsUtility
{
	[Token(Token = "0x40007B7")]
	public const string KEY_PREFIX = "ENC-";

	[Token(Token = "0x40007B8")]
	public const string VALUE_FLOAT_PREFIX = "0";

	[Token(Token = "0x40007B9")]
	public const string VALUE_INT_PREFIX = "1";

	[Token(Token = "0x40007BA")]
	public const string VALUE_STRING_PREFIX = "2";

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xBFD830", Offset = "0xBFD830", VA = "0xBFD830")]
	public static bool IsEncryptedKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xBFD890", Offset = "0xBFD890", VA = "0xBFD890")]
	public static string DecryptKey(string encryptedKey)
	{
		return null;
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xBFDB70", Offset = "0xBFDB70", VA = "0xBFDB70")]
	public static void SetEncryptedFloat(string key, float value)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xBFDEE0", Offset = "0xBFDEE0", VA = "0xBFDEE0")]
	public static void SetEncryptedInt(string key, int value)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xBFE078", Offset = "0xBFE078", VA = "0xBFE078")]
	public static void SetEncryptedString(string key, string value)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xBFE144", Offset = "0xBFE144", VA = "0xBFE144")]
	public static object GetEncryptedValue(string encryptedKey, string encryptedValue)
	{
		return null;
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xBFE3F8", Offset = "0xBFE3F8", VA = "0xBFE3F8")]
	public static float GetEncryptedFloat(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xBFE4F8", Offset = "0xBFE4F8", VA = "0xBFE4F8")]
	public static int GetEncryptedInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xBFE5F8", Offset = "0xBFE5F8", VA = "0xBFE5F8")]
	public static string GetEncryptedString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xBFE898", Offset = "0xBFE898", VA = "0xBFE898")]
	public static void SetBool(string key, bool value)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xBFE8B4", Offset = "0xBFE8B4", VA = "0xBFE8B4")]
	public static bool GetBool(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xBFE8FC", Offset = "0xBFE8FC", VA = "0xBFE8FC")]
	public static void SetEnum(string key, Enum value)
	{
	}

	[Token(Token = "0x6000823")]
	public static T GetEnum<T>(string key, [Optional] T defaultValue) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xBFE944", Offset = "0xBFE944", VA = "0xBFE944")]
	public static object GetEnum(string key, Type enumType, object defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xBFE9F0", Offset = "0xBFE9F0", VA = "0xBFE9F0")]
	public static void SetDateTime(string key, DateTime value)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xBFEA90", Offset = "0xBFEA90", VA = "0xBFEA90")]
	public static DateTime GetDateTime(string key, [Optional] DateTime defaultValue)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xBFEB6C", Offset = "0xBFEB6C", VA = "0xBFEB6C")]
	public static void SetTimeSpan(string key, TimeSpan value)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xBFEBA8", Offset = "0xBFEBA8", VA = "0xBFEBA8")]
	public static TimeSpan GetTimeSpan(string key, [Optional] TimeSpan defaultValue)
	{
		return default(TimeSpan);
	}
}
[Token(Token = "0x2000142")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E1CE8", Offset = "0x9E1CE8")]
public class JSONObject
{
	[Token(Token = "0x2000357")]
	public enum Type
	{
		[Token(Token = "0x400131E")]
		NULL,
		[Token(Token = "0x400131F")]
		STRING,
		[Token(Token = "0x4001320")]
		NUMBER,
		[Token(Token = "0x4001321")]
		OBJECT,
		[Token(Token = "0x4001322")]
		ARRAY,
		[Token(Token = "0x4001323")]
		BOOL,
		[Token(Token = "0x4001324")]
		BAKED
	}

	[Token(Token = "0x2000358")]
	public delegate void AddJSONConents(JSONObject self);

	[Token(Token = "0x2000359")]
	public delegate void FieldNotFound(string name);

	[Token(Token = "0x200035A")]
	public delegate void GetFieldResponse(JSONObject obj);

	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A14", Offset = "0x9E2A14")]
	private sealed class <BakeAsync>d__103 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONObject <>4__this;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator<string> <>7__wrap1;

		[Token(Token = "0x17000459")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xC66B78", Offset = "0xC66B78", VA = "0xC66B78", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xC66BE8", Offset = "0xC66BE8", VA = "0xC66BE8", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xC656B0", Offset = "0xC656B0", VA = "0xC656B0")]
		[DebuggerHidden]
		public <BakeAsync>d__103(int <>1__state)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xC667CC", Offset = "0xC667CC", VA = "0xC667CC", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xC668A8", Offset = "0xC668A8", VA = "0xC668A8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xC667E8", Offset = "0xC667E8", VA = "0xC667E8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xC66B80", Offset = "0xC66B80", VA = "0xC66B80", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xC66BF0", Offset = "0xC66BF0", VA = "0xC66BF0", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xC66CA0", Offset = "0xC66CA0", VA = "0xC66CA0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A24", Offset = "0x9E2A24")]
	private sealed class <PrintAsync>d__107 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string <>2__current;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JSONObject <>4__this;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool pretty;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool <>3__pretty;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder <builder>5__2;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x1700045B")]
		private string System.Collections.Generic.IEnumerator<System.String>.Current
		{
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0xC67100", Offset = "0xC67100", VA = "0xC67100", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0xC67170", Offset = "0xC67170", VA = "0xC67170", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xC660DC", Offset = "0xC660DC", VA = "0xC660DC")]
		[DebuggerHidden]
		public <PrintAsync>d__107(int <>1__state)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xC66CA4", Offset = "0xC66CA4", VA = "0xC66CA4", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xC66D8C", Offset = "0xC66D8C", VA = "0xC66D8C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xC66CC0", Offset = "0xC66CC0", VA = "0xC66CC0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xC67108", Offset = "0xC67108", VA = "0xC67108", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xC67178", Offset = "0xC67178", VA = "0xC67178", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xC67238", Offset = "0xC67238", VA = "0xC67238", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A34", Offset = "0x9E2A34")]
	private sealed class <StringifyAsync>d__111 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int depth;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int <>3__depth;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JSONObject <>4__this;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder builder;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StringBuilder <>3__builder;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool pretty;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool <>3__pretty;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__2;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IEnumerator <>7__wrap2;

		[Token(Token = "0x1700045D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xC68414", Offset = "0xC68414", VA = "0xC68414", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0xC68484", Offset = "0xC68484", VA = "0xC68484", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xC66200", Offset = "0xC66200", VA = "0xC66200")]
		[DebuggerHidden]
		public <StringifyAsync>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xC6723C", Offset = "0xC6723C", VA = "0xC6723C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xC6740C", Offset = "0xC6740C", VA = "0xC6740C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xC67274", Offset = "0xC67274", VA = "0xC67274")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xC67340", Offset = "0xC67340", VA = "0xC67340")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xC6841C", Offset = "0xC6841C", VA = "0xC6841C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xC6848C", Offset = "0xC6848C", VA = "0xC6848C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xC6855C", Offset = "0xC6855C", VA = "0xC6855C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40007BB")]
	private const int MAX_DEPTH = 100;

	[Token(Token = "0x40007BC")]
	private const string INFINITY = "\"INFINITY\"";

	[Token(Token = "0x40007BD")]
	private const string NEGINFINITY = "\"NEGINFINITY\"";

	[Token(Token = "0x40007BE")]
	private const string NaN = "\"NaN\"";

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly char[] WHITESPACE;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type type;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<JSONObject> list;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> keys;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string str;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float n;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool b;

	[Token(Token = "0x40007C6")]
	private const float maxFrameTime = 0.008f;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Stopwatch printWatch;

	[Token(Token = "0x17000122")]
	public bool isContainer
	{
		[Token(Token = "0x6000829")]
		[Address(RVA = "0xC61240", Offset = "0xC61240", VA = "0xC61240")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000123")]
	public int Count
	{
		[Token(Token = "0x600082A")]
		[Address(RVA = "0xC61254", Offset = "0xC61254", VA = "0xC61254")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000124")]
	public float f
	{
		[Token(Token = "0x600082B")]
		[Address(RVA = "0xC612B8", Offset = "0xC612B8", VA = "0xC612B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000125")]
	public static JSONObject nullJO
	{
		[Token(Token = "0x600082C")]
		[Address(RVA = "0xC612C0", Offset = "0xC612C0", VA = "0xC612C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000126")]
	public static JSONObject obj
	{
		[Token(Token = "0x600082D")]
		[Address(RVA = "0xC61424", Offset = "0xC61424", VA = "0xC61424")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000127")]
	public static JSONObject arr
	{
		[Token(Token = "0x600082E")]
		[Address(RVA = "0xC61484", Offset = "0xC61484", VA = "0xC61484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000128")]
	public bool IsNumber
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0xC632DC", Offset = "0xC632DC", VA = "0xC632DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000129")]
	public bool IsNull
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xC632EC", Offset = "0xC632EC", VA = "0xC632EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012A")]
	public bool IsString
	{
		[Token(Token = "0x600084C")]
		[Address(RVA = "0xC632FC", Offset = "0xC632FC", VA = "0xC632FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012B")]
	public bool IsBool
	{
		[Token(Token = "0x600084D")]
		[Address(RVA = "0xC6330C", Offset = "0xC6330C", VA = "0xC6330C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012C")]
	public bool IsArray
	{
		[Token(Token = "0x600084E")]
		[Address(RVA = "0xC6331C", Offset = "0xC6331C", VA = "0xC6331C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012D")]
	public bool IsObject
	{
		[Token(Token = "0x600084F")]
		[Address(RVA = "0xC6332C", Offset = "0xC6332C", VA = "0xC6332C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012E")]
	public JSONObject Item
	{
		[Token(Token = "0x600087F")]
		[Address(RVA = "0xC65490", Offset = "0xC65490", VA = "0xC65490")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000880")]
		[Address(RVA = "0xC65538", Offset = "0xC65538", VA = "0xC65538")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public JSONObject Item
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0xC63E68", Offset = "0xC63E68", VA = "0xC63E68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000882")]
		[Address(RVA = "0xC6643C", Offset = "0xC6643C", VA = "0xC6643C")]
		set
		{
		}
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC614E4", Offset = "0xC614E4", VA = "0xC614E4")]
	public JSONObject(Type t)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC615CC", Offset = "0xC615CC", VA = "0xC615CC")]
	public JSONObject(bool b)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC61604", Offset = "0xC61604", VA = "0xC61604")]
	public JSONObject(float f)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC61640", Offset = "0xC61640", VA = "0xC61640")]
	public JSONObject(Dictionary<string, string> dic)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC61928", Offset = "0xC61928", VA = "0xC61928")]
	public JSONObject(Dictionary<string, JSONObject> dic)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC61B48", Offset = "0xC61B48", VA = "0xC61B48")]
	public JSONObject(AddJSONConents content)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC61F38", Offset = "0xC61F38", VA = "0xC61F38")]
	public JSONObject(JSONObject[] objs)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC61FC4", Offset = "0xC61FC4", VA = "0xC61FC4")]
	public static JSONObject StringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC62028", Offset = "0xC62028", VA = "0xC62028")]
	public void Absorb(JSONObject obj)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC620F8", Offset = "0xC620F8", VA = "0xC620F8")]
	public static JSONObject Create()
	{
		return null;
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC61320", Offset = "0xC61320", VA = "0xC61320")]
	public static JSONObject Create(Type t)
	{
		return null;
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC6215C", Offset = "0xC6215C", VA = "0xC6215C")]
	public static JSONObject Create(bool val)
	{
		return null;
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xC621F8", Offset = "0xC621F8", VA = "0xC621F8")]
	public static JSONObject Create(float val)
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xC62298", Offset = "0xC62298", VA = "0xC62298")]
	public static JSONObject Create(int val)
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xC61890", Offset = "0xC61890", VA = "0xC61890")]
	public static JSONObject CreateStringObject(string val)
	{
		return null;
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xC62334", Offset = "0xC62334", VA = "0xC62334")]
	public static JSONObject CreateBakedObject(string val)
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC623CC", Offset = "0xC623CC", VA = "0xC623CC")]
	public static JSONObject Create(string val)
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xC624E4", Offset = "0xC624E4", VA = "0xC624E4")]
	public static JSONObject Create(string val, int maxDepth)
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xC62560", Offset = "0xC62560", VA = "0xC62560")]
	public static JSONObject Create(string val, int maxDepth, bool storeExcessLevels)
	{
		return null;
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xC6243C", Offset = "0xC6243C", VA = "0xC6243C")]
	public static JSONObject Create(string val, int maxDepth, bool storeExcessLevels, bool strict)
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xC62F30", Offset = "0xC62F30", VA = "0xC62F30")]
	public static JSONObject Create(AddJSONConents content)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xC62FB4", Offset = "0xC62FB4", VA = "0xC62FB4")]
	public static JSONObject Create(Dictionary<string, string> dic)
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xC62154", Offset = "0xC62154", VA = "0xC62154")]
	public JSONObject()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xC63238", Offset = "0xC63238", VA = "0xC63238")]
	public JSONObject(string str)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xC63274", Offset = "0xC63274", VA = "0xC63274")]
	public JSONObject(string str, int maxDepth, bool storeExcessLevels, bool strict)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xC632CC", Offset = "0xC632CC", VA = "0xC632CC")]
	private void Parse(string str)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xC625E0", Offset = "0xC625E0", VA = "0xC625E0")]
	private void Parse(string str, int maxDepth, bool storeExcessLevels, bool strict)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xC6333C", Offset = "0xC6333C", VA = "0xC6333C")]
	public void Add(bool val)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xC634AC", Offset = "0xC634AC", VA = "0xC634AC")]
	public void Add(float val)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xC63528", Offset = "0xC63528", VA = "0xC63528")]
	public void Add(int val)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xC635A4", Offset = "0xC635A4", VA = "0xC635A4")]
	public void Add(string str)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xC63620", Offset = "0xC63620", VA = "0xC63620")]
	public void Add(AddJSONConents content)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xC633B8", Offset = "0xC633B8", VA = "0xC633B8")]
	public void Add(JSONObject obj)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xC636A8", Offset = "0xC636A8", VA = "0xC636A8")]
	public void AddField(string name, bool val)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xC63910", Offset = "0xC63910", VA = "0xC63910")]
	public void AddField(string name, float val)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xC6399C", Offset = "0xC6399C", VA = "0xC6399C")]
	public void AddField(string name, int val)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xC63A20", Offset = "0xC63A20", VA = "0xC63A20")]
	public void AddField(string name, AddJSONConents content)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xC63AA4", Offset = "0xC63AA4", VA = "0xC63AA4")]
	public void AddField(string name, string val)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xC6372C", Offset = "0xC6372C", VA = "0xC6372C")]
	public void AddField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xC63B28", Offset = "0xC63B28", VA = "0xC63B28")]
	public void SetField(string name, bool val)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xC63C80", Offset = "0xC63C80", VA = "0xC63C80")]
	public void SetField(string name, float val)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xC63D0C", Offset = "0xC63D0C", VA = "0xC63D0C")]
	public void SetField(string name, int val)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xC63BAC", Offset = "0xC63BAC", VA = "0xC63BAC")]
	public void SetField(string name, JSONObject obj)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xC63E6C", Offset = "0xC63E6C", VA = "0xC63E6C")]
	public void RemoveField(string name)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xC63F6C", Offset = "0xC63F6C", VA = "0xC63F6C")]
	public void GetField(ref bool field, string name)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xC63F74", Offset = "0xC63F74", VA = "0xC63F74")]
	public void GetField(ref bool field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xC64420", Offset = "0xC64420", VA = "0xC64420")]
	public void GetField(ref float field, string name)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xC64428", Offset = "0xC64428", VA = "0xC64428")]
	public void GetField(ref float field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xC64520", Offset = "0xC64520", VA = "0xC64520")]
	public void GetField(ref int field, string name)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xC64528", Offset = "0xC64528", VA = "0xC64528")]
	public void GetField(ref int field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xC64624", Offset = "0xC64624", VA = "0xC64624")]
	public void GetField(ref uint field, string name)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xC6462C", Offset = "0xC6462C", VA = "0xC6462C")]
	public void GetField(ref uint field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xC64728", Offset = "0xC64728", VA = "0xC64728")]
	public void GetField(ref string field, string name)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xC64730", Offset = "0xC64730", VA = "0xC64730")]
	public void GetField(ref string field, string name, FieldNotFound fail)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xC64828", Offset = "0xC64828", VA = "0xC64828")]
	public void GetField(string name, GetFieldResponse response)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xC64830", Offset = "0xC64830", VA = "0xC64830")]
	public void GetField(string name, GetFieldResponse response, FieldNotFound fail)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xC64CE4", Offset = "0xC64CE4", VA = "0xC64CE4")]
	public JSONObject GetField(string name)
	{
		return null;
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xC64DE4", Offset = "0xC64DE4", VA = "0xC64DE4")]
	public bool HasFields(string[] names)
	{
		return default(bool);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xC63D90", Offset = "0xC63D90", VA = "0xC63D90")]
	public bool HasField(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xC64EB4", Offset = "0xC64EB4", VA = "0xC64EB4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xC64F40", Offset = "0xC64F40", VA = "0xC64F40")]
	public JSONObject Copy()
	{
		return null;
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xC64FC0", Offset = "0xC64FC0", VA = "0xC64FC0")]
	public void Merge(JSONObject obj)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xC65034", Offset = "0xC65034", VA = "0xC65034")]
	private static void MergeRecur(JSONObject left, JSONObject right)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xC655EC", Offset = "0xC655EC", VA = "0xC655EC")]
	public void Bake()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xC6562C", Offset = "0xC6562C", VA = "0xC6562C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB3B4", Offset = "0x9EB3B4")]
	public IEnumerable BakeAsync()
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xC64FB8", Offset = "0xC64FB8", VA = "0xC64FB8")]
	public string Print()
	{
		return null;
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xC656E8", Offset = "0xC656E8", VA = "0xC656E8")]
	public string Print(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xC66028", Offset = "0xC66028", VA = "0xC66028")]
	public IEnumerable<string> PrintAsync()
	{
		return null;
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xC66030", Offset = "0xC66030", VA = "0xC66030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB418", Offset = "0x9EB418")]
	public IEnumerable<string> PrintAsync(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xC66114", Offset = "0xC66114", VA = "0xC66114")]
	private IEnumerable StringifyAsync(int depth, StringBuilder builder)
	{
		return null;
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xC6611C", Offset = "0xC6611C", VA = "0xC6611C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB47C", Offset = "0x9EB47C")]
	private IEnumerable StringifyAsync(int depth, StringBuilder builder, bool pretty)
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xC66238", Offset = "0xC66238", VA = "0xC66238")]
	private void Stringify(int depth, StringBuilder builder)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xC6577C", Offset = "0xC6577C", VA = "0xC6577C")]
	private void Stringify(int depth, StringBuilder builder, bool pretty)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xC66240", Offset = "0xC66240", VA = "0xC66240")]
	public static implicit operator WWWForm(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xC66440", Offset = "0xC66440", VA = "0xC66440", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xC66448", Offset = "0xC66448", VA = "0xC66448")]
	public string ToString(bool pretty)
	{
		return null;
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xC66450", Offset = "0xC66450", VA = "0xC66450")]
	public Dictionary<string, string> ToDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xC6369C", Offset = "0xC6369C", VA = "0xC6369C")]
	public static implicit operator bool(JSONObject o)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000143")]
public static class JSONTemplates
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly HashSet<object> touched;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xB67C44", Offset = "0xB67C44", VA = "0xB67C44")]
	public static JSONObject TOJSON(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xB68B20", Offset = "0xB68B20", VA = "0xB68B20")]
	public static Vector2 ToVector2(JSONObject obj)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xB68CB0", Offset = "0xB68CB0", VA = "0xB68CB0")]
	public static JSONObject FromVector2(Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xB68D8C", Offset = "0xB68D8C", VA = "0xB68D8C")]
	public static JSONObject FromVector3(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xB68EA4", Offset = "0xB68EA4", VA = "0xB68EA4")]
	public static Vector3 ToVector3(JSONObject obj)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xB690D8", Offset = "0xB690D8", VA = "0xB690D8")]
	public static JSONObject FromVector4(Vector4 v)
	{
		return null;
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xB69224", Offset = "0xB69224", VA = "0xB69224")]
	public static Vector4 ToVector4(JSONObject obj)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xB694F0", Offset = "0xB694F0", VA = "0xB694F0")]
	public static JSONObject FromMatrix4x4(Matrix4x4 m)
	{
		return null;
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xB698A8", Offset = "0xB698A8", VA = "0xB698A8")]
	public static Matrix4x4 ToMatrix4x4(JSONObject obj)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xB6A270", Offset = "0xB6A270", VA = "0xB6A270")]
	public static JSONObject FromQuaternion(Quaternion q)
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xB6A3BC", Offset = "0xB6A3BC", VA = "0xB6A3BC")]
	public static Quaternion ToQuaternion(JSONObject obj)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xB6A688", Offset = "0xB6A688", VA = "0xB6A688")]
	public static JSONObject FromColor(Color c)
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xB6A7D4", Offset = "0xB6A7D4", VA = "0xB6A7D4")]
	public static Color ToColor(JSONObject obj)
	{
		return default(Color);
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xB6A9E8", Offset = "0xB6A9E8", VA = "0xB6A9E8")]
	public static JSONObject FromLayerMask(LayerMask l)
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xB6AA98", Offset = "0xB6AA98", VA = "0xB6AA98")]
	public static LayerMask ToLayerMask(JSONObject obj)
	{
		return default(LayerMask);
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xB6AB2C", Offset = "0xB6AB2C", VA = "0xB6AB2C")]
	public static JSONObject FromRect(Rect r)
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xB6ACE0", Offset = "0xB6ACE0", VA = "0xB6ACE0")]
	public static Rect ToRect(JSONObject obj)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xB6AEF8", Offset = "0xB6AEF8", VA = "0xB6AEF8")]
	public static JSONObject FromRectOffset(RectOffset r)
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xB6B0F0", Offset = "0xB6B0F0", VA = "0xB6B0F0")]
	public static RectOffset ToRectOffset(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xB6B344", Offset = "0xB6B344", VA = "0xB6B344")]
	public static AnimationCurve ToAnimationCurve(JSONObject obj)
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xB6B804", Offset = "0xB6B804", VA = "0xB6B804")]
	public static JSONObject FromAnimationCurve(AnimationCurve a)
	{
		return null;
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xB6B5A8", Offset = "0xB6B5A8", VA = "0xB6B5A8")]
	public static Keyframe ToKeyframe(JSONObject obj)
	{
		return default(Keyframe);
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xB6BB28", Offset = "0xB6BB28", VA = "0xB6BB28")]
	public static JSONObject FromKeyframe(Keyframe k)
	{
		return null;
	}
}
[Token(Token = "0x2000144")]
public class TestSocketIO : UnityEngine.MonoBehaviour
{
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A44", Offset = "0x9E2A44")]
	private sealed class <BeepBoop>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestSocketIO <>4__this;

		[Token(Token = "0x1700045F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0xC3E69C", Offset = "0xC3E69C", VA = "0xC3E69C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000460")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A94")]
			[Address(RVA = "0xC3E70C", Offset = "0xC3E70C", VA = "0xC3E70C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xC3DC1C", Offset = "0xC3DC1C", VA = "0xC3DC1C")]
		[DebuggerHidden]
		public <BeepBoop>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xC3E488", Offset = "0xC3E488", VA = "0xC3E488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xC3E48C", Offset = "0xC3E48C", VA = "0xC3E48C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xC3E6A4", Offset = "0xC3E6A4", VA = "0xC3E6A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SocketIOComponent socket;

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xC3D9CC", Offset = "0xC3D9CC", VA = "0xC3D9CC")]
	public void Start()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xC3DBA8", Offset = "0xC3DBA8", VA = "0xC3DBA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB4E0", Offset = "0x9EB4E0")]
	private IEnumerator BeepBoop()
	{
		return null;
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xC3DC48", Offset = "0xC3DC48", VA = "0xC3DC48")]
	public void TestOpen(SocketIOEvent e)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xC3DE34", Offset = "0xC3DE34", VA = "0xC3DE34")]
	public void TestBoop(SocketIOEvent e)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xC3E0A8", Offset = "0xC3E0A8", VA = "0xC3E0A8")]
	public void TestError(SocketIOEvent e)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xC3E294", Offset = "0xC3E294", VA = "0xC3E294")]
	public void TestClose(SocketIOEvent e)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xC3E480", Offset = "0xC3E480", VA = "0xC3E480")]
	public TestSocketIO()
	{
	}
}
namespace WebSocketSharp
{
	[Token(Token = "0x2000145")]
	public enum ByteOrder : byte
	{
		[Token(Token = "0x40007CB")]
		Little,
		[Token(Token = "0x40007CC")]
		Big
	}
	[Token(Token = "0x2000146")]
	public class CloseEventArgs : EventArgs
	{
		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _clean;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private ushort _code;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _reason;

		[Token(Token = "0x17000130")]
		public ushort Code
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0xC42444", Offset = "0xC42444", VA = "0xC42444")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x17000131")]
		public string Reason
		{
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0xC4244C", Offset = "0xC4244C", VA = "0xC4244C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public bool WasClean
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0xC42454", Offset = "0xC42454", VA = "0xC42454")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0xC4245C", Offset = "0xC4245C", VA = "0xC4245C")]
			internal set
			{
			}
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xC42258", Offset = "0xC42258", VA = "0xC42258")]
		internal CloseEventArgs(PayloadData payload)
		{
		}
	}
	[Token(Token = "0x2000147")]
	public enum CloseStatusCode : ushort
	{
		[Token(Token = "0x40007D1")]
		Normal = 1000,
		[Token(Token = "0x40007D2")]
		Away = 1001,
		[Token(Token = "0x40007D3")]
		ProtocolError = 1002,
		[Token(Token = "0x40007D4")]
		IncorrectData = 1003,
		[Token(Token = "0x40007D5")]
		Undefined = 1004,
		[Token(Token = "0x40007D6")]
		NoStatusCode = 1005,
		[Token(Token = "0x40007D7")]
		Abnormal = 1006,
		[Token(Token = "0x40007D8")]
		InconsistentData = 1007,
		[Token(Token = "0x40007D9")]
		PolicyViolation = 1008,
		[Token(Token = "0x40007DA")]
		TooBig = 1009,
		[Token(Token = "0x40007DB")]
		IgnoreExtension = 1010,
		[Token(Token = "0x40007DC")]
		ServerError = 1011,
		[Token(Token = "0x40007DD")]
		TlsHandshakeFailure = 1015
	}
	[Token(Token = "0x2000148")]
	public enum CompressionMethod : byte
	{
		[Token(Token = "0x40007DF")]
		None,
		[Token(Token = "0x40007E0")]
		Deflate
	}
	[Token(Token = "0x2000149")]
	public class ErrorEventArgs : EventArgs
	{
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _message;

		[Token(Token = "0x17000133")]
		public string Message
		{
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0xC424E4", Offset = "0xC424E4", VA = "0xC424E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xC42468", Offset = "0xC42468", VA = "0xC42468")]
		internal ErrorEventArgs(string message)
		{
		}
	}
	[Token(Token = "0x200014A")]
	public static class Ext
	{
		[Serializable]
		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A54", Offset = "0x9E2A54")]
		private sealed class <>c
		{
			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__17_0;

			[Token(Token = "0x6001A96")]
			[Address(RVA = "0xC46DF8", Offset = "0xC46DF8", VA = "0xC46DF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xC46E00", Offset = "0xC46E00", VA = "0xC46E00")]
			internal bool <CheckIfValidProtocols>b__17_0(string protocol)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A64", Offset = "0x9E2A64")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int len;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] values;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<int, bool> contains;

			[Token(Token = "0x6001A98")]
			[Address(RVA = "0xC43D70", Offset = "0xC43D70", VA = "0xC43D70")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xC46E48", Offset = "0xC46E48", VA = "0xC46E48")]
			internal bool <ContainsTwice>b__0(int index)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A74", Offset = "0x9E2A74")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stream stream;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int length;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte[] buffer;

			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<byte[]> completed;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Exception> error;

			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0xC44B04", Offset = "0xC44B04", VA = "0xC44B04")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xC46F9C", Offset = "0xC46F9C", VA = "0xC46F9C")]
			internal void <ReadBytesAsync>b__0(IAsyncResult ar)
			{
			}
		}

		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A84", Offset = "0x9E2A84")]
		private sealed class <SplitHeaderValue>d__54 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string value;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string <>3__value;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private char[] separator;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public char[] <>3__separator;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <len>5__2;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <separators>5__3;

			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private StringBuilder <buffer>5__4;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool <quoted>5__5;

			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
			private bool <escaped>5__6;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <i>5__7;

			[Token(Token = "0x17000461")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x6001A9F")]
				[Address(RVA = "0xC47400", Offset = "0xC47400", VA = "0xC47400", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000462")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AA1")]
				[Address(RVA = "0xC47470", Offset = "0xC47470", VA = "0xC47470", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0xC44C90", Offset = "0xC44C90", VA = "0xC44C90")]
			[DebuggerHidden]
			public <SplitHeaderValue>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xC4711C", Offset = "0xC4711C", VA = "0xC4711C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xC47120", Offset = "0xC47120", VA = "0xC47120", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0xC47408", Offset = "0xC47408", VA = "0xC47408", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0xC47478", Offset = "0xC47478", VA = "0xC47478", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xC47548", Offset = "0xC47548", VA = "0xC47548", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2A94", Offset = "0x9E2A94")]
		private sealed class <>c__DisplayClass99_0<T>
		{
			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StringBuilder buffer;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string separator;

			[Token(Token = "0x6001AA4")]
			public <>c__DisplayClass99_0()
			{
			}

			[Token(Token = "0x6001AA5")]
			internal void <ToString>b__0(int i)
			{
			}
		}

		[Token(Token = "0x40007E2")]
		private const string _tspecials = "()<>@,;:\\\"/[]?={} \t";

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xC424EC", Offset = "0xC424EC", VA = "0xC424EC")]
		private static byte[] compress(this byte[] value)
		{
			return null;
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xC42774", Offset = "0xC42774", VA = "0xC42774")]
		private static MemoryStream compress(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xC42630", Offset = "0xC42630", VA = "0xC42630")]
		private static byte[] compressToArray(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xC42944", Offset = "0xC42944", VA = "0xC42944")]
		private static byte[] decompress(this byte[] value)
		{
			return null;
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xC42BCC", Offset = "0xC42BCC", VA = "0xC42BCC")]
		private static MemoryStream decompress(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xC42A88", Offset = "0xC42A88", VA = "0xC42A88")]
		private static byte[] decompressToArray(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xC42E64", Offset = "0xC42E64", VA = "0xC42E64")]
		private static byte[] readBytes(this Stream stream, byte[] buffer, int offset, int length)
		{
			return null;
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xC42F68", Offset = "0xC42F68", VA = "0xC42F68")]
		private static bool readBytes(this Stream stream, byte[] buffer, int offset, int length, Stream dest)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xC42FE8", Offset = "0xC42FE8", VA = "0xC42FE8")]
		private static void times(this ulong n, Action act)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xC4302C", Offset = "0xC4302C", VA = "0xC4302C")]
		internal static byte[] Append(this ushort code, string reason)
		{
			return null;
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xC432E0", Offset = "0xC432E0", VA = "0xC432E0")]
		internal static string CheckIfCanRead(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xC43358", Offset = "0xC43358", VA = "0xC43358")]
		internal static string CheckIfClosable(this WebSocketState state)
		{
			return null;
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xC433C8", Offset = "0xC433C8", VA = "0xC433C8")]
		internal static string CheckIfConnectable(this WebSocketState state)
		{
			return null;
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xC43424", Offset = "0xC43424", VA = "0xC43424")]
		internal static string CheckIfOpen(this WebSocketState state)
		{
			return null;
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xC434A8", Offset = "0xC434A8", VA = "0xC434A8")]
		internal static string CheckIfValidCloseStatusCode(this ushort code)
		{
			return null;
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xC43518", Offset = "0xC43518", VA = "0xC43518")]
		internal static string CheckIfValidControlData(this byte[] data, string paramName)
		{
			return null;
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xC435A4", Offset = "0xC435A4", VA = "0xC435A4")]
		internal static string CheckIfValidProtocols(this string[] protocols)
		{
			return null;
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xC4380C", Offset = "0xC4380C", VA = "0xC4380C")]
		internal static string CheckIfValidSendData(this byte[] data)
		{
			return null;
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xC43860", Offset = "0xC43860", VA = "0xC43860")]
		internal static string CheckIfValidSendData(this FileInfo file)
		{
			return null;
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xC438B4", Offset = "0xC438B4", VA = "0xC438B4")]
		internal static string CheckIfValidSendData(this string data)
		{
			return null;
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xC43908", Offset = "0xC43908", VA = "0xC43908")]
		internal static string CheckIfValidServicePath(this string servicePath)
		{
			return null;
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xC43A1C", Offset = "0xC43A1C", VA = "0xC43A1C")]
		internal static string CheckIfValidSessionID(this string id)
		{
			return null;
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xC43A84", Offset = "0xC43A84", VA = "0xC43A84")]
		internal static void Close(this HttpListenerResponse response, WebSocketSharp.Net.HttpStatusCode code)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xC43B00", Offset = "0xC43B00", VA = "0xC43B00")]
		internal static void CloseWithAuthChallenge(this HttpListenerResponse response, string challenge)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xC43B98", Offset = "0xC43B98", VA = "0xC43B98")]
		internal static byte[] Compress(this byte[] value, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xC43BAC", Offset = "0xC43BAC", VA = "0xC43BAC")]
		internal static Stream Compress(this Stream stream, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xC43BCC", Offset = "0xC43BCC", VA = "0xC43BCC")]
		internal static byte[] CompressToArray(this Stream stream, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60008C9")]
		internal static bool Contains<T>(this IEnumerable<T> source, Func<T, bool> condition)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xC436C4", Offset = "0xC436C4", VA = "0xC436C4")]
		internal static bool ContainsTwice(this string[] values)
		{
			return default(bool);
		}

		[Token(Token = "0x60008CB")]
		internal static T[] Copy<T>(this T[] src, long length)
		{
			return null;
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xC43D78", Offset = "0xC43D78", VA = "0xC43D78")]
		internal static void CopyTo(this Stream src, Stream dest)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xC42D58", Offset = "0xC42D58", VA = "0xC42D58")]
		internal static void CopyTo(this Stream src, Stream dest, bool setDefaultPosition)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xC43D80", Offset = "0xC43D80", VA = "0xC43D80")]
		internal static byte[] Decompress(this byte[] value, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xC43D94", Offset = "0xC43D94", VA = "0xC43D94")]
		internal static Stream Decompress(this Stream stream, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xC43DB4", Offset = "0xC43DB4", VA = "0xC43DB4")]
		internal static byte[] DecompressToArray(this Stream stream, CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xC43DC8", Offset = "0xC43DC8", VA = "0xC43DC8")]
		internal static bool EqualsWith(this int value, char c, Action<int> action)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xC43E94", Offset = "0xC43E94", VA = "0xC43E94")]
		internal static string GetAbsolutePath(this Uri uri)
		{
			return null;
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xC44010", Offset = "0xC44010", VA = "0xC44010")]
		internal static string GetMessage(this CloseStatusCode code)
		{
			return null;
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xC44094", Offset = "0xC44094", VA = "0xC44094")]
		internal static string GetNameInternal(this string nameAndValue, string separator)
		{
			return null;
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xC4411C", Offset = "0xC4411C", VA = "0xC4411C")]
		internal static string GetValueInternal(this string nameAndValue, string separator)
		{
			return null;
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xC441C0", Offset = "0xC441C0", VA = "0xC441C0")]
		internal static TcpListenerWebSocketContext GetWebSocketContext(this TcpClient client, string protocol, bool secure, X509Certificate cert, Logger logger)
		{
			return null;
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xC44254", Offset = "0xC44254", VA = "0xC44254")]
		internal static bool IsCompressionExtension(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xC442B4", Offset = "0xC442B4", VA = "0xC442B4")]
		internal static bool IsPortNumber(this int value)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xC442C8", Offset = "0xC442C8", VA = "0xC442C8")]
		internal static bool IsReserved(this ushort code)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xC442F8", Offset = "0xC442F8", VA = "0xC442F8")]
		internal static bool IsReserved(this CloseStatusCode code)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xC44328", Offset = "0xC44328", VA = "0xC44328")]
		internal static bool IsText(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xC4453C", Offset = "0xC4453C", VA = "0xC4453C")]
		internal static bool IsToken(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xC44644", Offset = "0xC44644", VA = "0xC44644")]
		internal static string Quote(this string value)
		{
			return null;
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xC446E8", Offset = "0xC446E8", VA = "0xC446E8")]
		internal static byte[] ReadBytes(this Stream stream, int length)
		{
			return null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xC44758", Offset = "0xC44758", VA = "0xC44758")]
		internal static byte[] ReadBytes(this Stream stream, long length, int bufferLength)
		{
			return null;
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xC4495C", Offset = "0xC4495C", VA = "0xC4495C")]
		internal static void ReadBytesAsync(this Stream stream, int length, Action<byte[]> completed, Action<Exception> error)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xC44B0C", Offset = "0xC44B0C", VA = "0xC44B0C")]
		internal static string RemovePrefix(this string value, params string[] prefixes)
		{
			return null;
		}

		[Token(Token = "0x60008E2")]
		internal static T[] Reverse<T>(this T[] array)
		{
			return null;
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xC44BE8", Offset = "0xC44BE8", VA = "0xC44BE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EB894", Offset = "0x9EB894")]
		internal static IEnumerable<string> SplitHeaderValue(this string value, params char[] separator)
		{
			return null;
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xC43BE0", Offset = "0xC43BE0", VA = "0xC43BE0")]
		internal static byte[] ToByteArray(this Stream stream)
		{
			return null;
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xC43248", Offset = "0xC43248", VA = "0xC43248")]
		internal static byte[] ToByteArrayInternally(this ushort value, ByteOrder order)
		{
			return null;
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xC44D4C", Offset = "0xC44D4C", VA = "0xC44D4C")]
		internal static byte[] ToByteArrayInternally(this ulong value, ByteOrder order)
		{
			return null;
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xC44DE4", Offset = "0xC44DE4", VA = "0xC44DE4")]
		internal static CompressionMethod ToCompressionMethod(this string value)
		{
			return default(CompressionMethod);
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xC45100", Offset = "0xC45100", VA = "0xC45100")]
		internal static string ToExtensionString(this CompressionMethod method)
		{
			return null;
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xC451F0", Offset = "0xC451F0", VA = "0xC451F0")]
		internal static IPAddress ToIPAddress(this string hostNameOrAddress)
		{
			return null;
		}

		[Token(Token = "0x60008EA")]
		internal static List<TSource> ToList<TSource>(this IEnumerable<TSource> source)
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xC423B8", Offset = "0xC423B8", VA = "0xC423B8")]
		internal static ushort ToUInt16(this byte[] src, ByteOrder srcOrder)
		{
			return default(ushort);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xC453B4", Offset = "0xC453B4", VA = "0xC453B4")]
		internal static ulong ToUInt64(this byte[] src, ByteOrder srcOrder)
		{
			return default(ulong);
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xC45440", Offset = "0xC45440", VA = "0xC45440")]
		internal static string TrimEndSlash(this string value)
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xC45508", Offset = "0xC45508", VA = "0xC45508")]
		internal static bool TryCreateWebSocketUri(this string uriString, out Uri result, out string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xC45A00", Offset = "0xC45A00", VA = "0xC45A00")]
		internal static string Unquote(this string value)
		{
			return null;
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xC45B10", Offset = "0xC45B10", VA = "0xC45B10")]
		internal static void WriteBytes(this Stream stream, byte[] value)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xC444D4", Offset = "0xC444D4", VA = "0xC444D4")]
		public static bool Contains(this string value, params char[] chars)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xC45C58", Offset = "0xC45C58", VA = "0xC45C58")]
		public static bool Contains(this NameValueCollection collection, string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xC45CAC", Offset = "0xC45CAC", VA = "0xC45CAC")]
		public static bool Contains(this NameValueCollection collection, string name, string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xC45E10", Offset = "0xC45E10", VA = "0xC45E10")]
		public static void Emit(this EventHandler eventHandler, object sender, EventArgs e)
		{
		}

		[Token(Token = "0x60008F5")]
		public static void Emit<TEventArgs>(this EventHandler<TEventArgs> eventHandler, object sender, TEventArgs e) where TEventArgs : EventArgs
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xC45E20", Offset = "0xC45E20", VA = "0xC45E20")]
		public static WebSocketSharp.Net.CookieCollection GetCookies(this NameValueCollection headers, bool response)
		{
			return null;
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xC45EE4", Offset = "0xC45EE4", VA = "0xC45EE4")]
		public static string GetDescription(this WebSocketSharp.Net.HttpStatusCode code)
		{
			return null;
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xC46208", Offset = "0xC46208", VA = "0xC46208")]
		public static string GetName(this string nameAndValue, string separator)
		{
			return null;
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xC46270", Offset = "0xC46270", VA = "0xC46270")]
		public static KeyValuePair<string, string> GetNameAndValue(this string nameAndValue, string separator)
		{
			return default(KeyValuePair<string, string>);
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xC45EE8", Offset = "0xC45EE8", VA = "0xC45EE8")]
		public static string GetStatusDescription(this int code)
		{
			return null;
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xC46314", Offset = "0xC46314", VA = "0xC46314")]
		public static string GetValue(this string nameAndValue, string separator)
		{
			return null;
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xC43504", Offset = "0xC43504", VA = "0xC43504")]
		public static bool IsCloseStatusCode(this ushort value)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xC4637C", Offset = "0xC4637C", VA = "0xC4637C")]
		public static bool IsEnclosedIn(this string value, char c)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xC44CC8", Offset = "0xC44CC8", VA = "0xC44CC8")]
		public static bool IsHostOrder(this ByteOrder order)
		{
			return default(bool);
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xC46404", Offset = "0xC46404", VA = "0xC46404")]
		public static bool IsLocal(this IPAddress address)
		{
			return default(bool);
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xC46574", Offset = "0xC46574", VA = "0xC46574")]
		public static bool IsNullOrEmpty(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xC465A0", Offset = "0xC465A0", VA = "0xC465A0")]
		public static bool IsPredefinedScheme(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xC46754", Offset = "0xC46754", VA = "0xC46754")]
		public static bool IsUpgradeTo(this HttpListenerRequest request, string protocol)
		{
			return default(bool);
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xC468A4", Offset = "0xC468A4", VA = "0xC468A4")]
		public static bool MaybeUri(this string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000904")]
		public static T[] SubArray<T>(this T[] array, int startIndex, int length)
		{
			return null;
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xC4691C", Offset = "0xC4691C", VA = "0xC4691C")]
		public static void Times(this int n, Action act)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xC46934", Offset = "0xC46934", VA = "0xC46934")]
		public static void Times(this long n, Action act)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xC46948", Offset = "0xC46948", VA = "0xC46948")]
		public static void Times(this uint n, Action act)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xC4695C", Offset = "0xC4695C", VA = "0xC4695C")]
		public static void Times(this ulong n, Action act)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xC4696C", Offset = "0xC4696C", VA = "0xC4696C")]
		public static void Times(this int n, Action<int> act)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xC469EC", Offset = "0xC469EC", VA = "0xC469EC")]
		public static void Times(this long n, Action<long> act)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xC46A6C", Offset = "0xC46A6C", VA = "0xC46A6C")]
		public static void Times(this uint n, Action<uint> act)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xC46AE8", Offset = "0xC46AE8", VA = "0xC46AE8")]
		public static void Times(this ulong n, Action<ulong> act)
		{
		}

		[Token(Token = "0x600090D")]
		public static T To<T>(this byte[] src, ByteOrder srcOrder) where T : struct
		{
			return (T)null;
		}

		[Token(Token = "0x600090E")]
		public static byte[] ToByteArray<T>(this T value, ByteOrder order) where T : struct
		{
			return null;
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xC452E4", Offset = "0xC452E4", VA = "0xC452E4")]
		public static byte[] ToHostOrder(this byte[] src, ByteOrder srcOrder)
		{
			return null;
		}

		[Token(Token = "0x6000910")]
		public static string ToString<T>(this T[] array, string separator)
		{
			return null;
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xC4595C", Offset = "0xC4595C", VA = "0xC4595C")]
		public static Uri ToUri(this string uriString)
		{
			return null;
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xC46B64", Offset = "0xC46B64", VA = "0xC46B64")]
		public static string UrlDecode(this string value)
		{
			return null;
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xC46BF0", Offset = "0xC46BF0", VA = "0xC46BF0")]
		public static string UrlEncode(this string value)
		{
			return null;
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xC46C7C", Offset = "0xC46C7C", VA = "0xC46C7C")]
		public static void WriteContent(this HttpListenerResponse response, byte[] content)
		{
		}
	}
	[Token(Token = "0x200014B")]
	internal enum Fin : byte
	{
		[Token(Token = "0x40007E4")]
		More,
		[Token(Token = "0x40007E5")]
		Final
	}
	[Token(Token = "0x200014C")]
	internal abstract class HandshakeBase
	{
		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NameValueCollection _headers;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Version _version;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal byte[] EntityBodyData;

		[Token(Token = "0x40007E9")]
		protected const string CrLf = "\r\n";

		[Token(Token = "0x17000134")]
		public string EntityBody
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0xC47584", Offset = "0xC47584", VA = "0xC47584")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public NameValueCollection Headers
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0xC47734", Offset = "0xC47734", VA = "0xC47734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		public Version ProtocolVersion
		{
			[Token(Token = "0x6000918")]
			[Address(RVA = "0xC4773C", Offset = "0xC4773C", VA = "0xC4773C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xC4754C", Offset = "0xC4754C", VA = "0xC4754C")]
		protected HandshakeBase(Version version, NameValueCollection headers)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xC47648", Offset = "0xC47648", VA = "0xC47648")]
		private static Encoding getEncoding(string contentType)
		{
			return null;
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xC47744", Offset = "0xC47744", VA = "0xC47744")]
		public byte[] ToByteArray()
		{
			return null;
		}
	}
	[Token(Token = "0x200014D")]
	internal class HandshakeRequest : HandshakeBase
	{
		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _method;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _uri;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _websocketRequest;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _websocketRequestWasSet;

		[Token(Token = "0x17000137")]
		public AuthenticationResponse AuthResponse
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0xC47960", Offset = "0xC47960", VA = "0xC47960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		public WebSocketSharp.Net.CookieCollection Cookies
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0xC479FC", Offset = "0xC479FC", VA = "0xC479FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public string HttpMethod
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0xC47A08", Offset = "0xC47A08", VA = "0xC47A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public bool IsWebSocketRequest
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0xC47A10", Offset = "0xC47A10", VA = "0xC47A10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		public string RequestUri
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0xC47B4C", Offset = "0xC47B4C", VA = "0xC47B4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xC477A0", Offset = "0xC477A0", VA = "0xC477A0")]
		private HandshakeRequest(Version version, NameValueCollection headers)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xC477D8", Offset = "0xC477D8", VA = "0xC477D8")]
		internal HandshakeRequest(string pathAndQuery)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xC47B54", Offset = "0xC47B54", VA = "0xC47B54")]
		internal static HandshakeRequest Parse(string[] headerParts)
		{
			return null;
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xC47E20", Offset = "0xC47E20", VA = "0xC47E20")]
		public void SetCookies(WebSocketSharp.Net.CookieCollection cookies)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xC481F0", Offset = "0xC481F0", VA = "0xC481F0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200014E")]
	internal class HandshakeResponse : HandshakeBase
	{
		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _code;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _reason;

		[Token(Token = "0x1700013C")]
		public AuthenticationChallenge AuthChallenge
		{
			[Token(Token = "0x6000927")]
			[Address(RVA = "0xF0D8D8", Offset = "0xF0D8D8", VA = "0xF0D8D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		public WebSocketSharp.Net.CookieCollection Cookies
		{
			[Token(Token = "0x6000928")]
			[Address(RVA = "0xF0DB38", Offset = "0xF0DB38", VA = "0xF0DB38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public bool IsUnauthorized
		{
			[Token(Token = "0x6000929")]
			[Address(RVA = "0xF0DB58", Offset = "0xF0DB58", VA = "0xF0DB58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013F")]
		public bool IsWebSocketResponse
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0xF0DBAC", Offset = "0xF0DBAC", VA = "0xF0DBAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		public string Reason
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0xF0DCE8", Offset = "0xF0DCE8", VA = "0xF0DCE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public string StatusCode
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0xF0DCF0", Offset = "0xF0DCF0", VA = "0xF0DCF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xF0D730", Offset = "0xF0D730", VA = "0xF0D730")]
		private HandshakeResponse(Version version, NameValueCollection headers)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xF0D738", Offset = "0xF0D738", VA = "0xF0D738")]
		internal HandshakeResponse(WebSocketSharp.Net.HttpStatusCode code)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xF0DCF8", Offset = "0xF0DCF8", VA = "0xF0DCF8")]
		internal static HandshakeResponse CreateCloseResponse(WebSocketSharp.Net.HttpStatusCode code)
		{
			return null;
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xF0DDA0", Offset = "0xF0DDA0", VA = "0xF0DDA0")]
		internal static HandshakeResponse Parse(string[] headerParts)
		{
			return null;
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xF0E070", Offset = "0xF0E070", VA = "0xF0E070")]
		public void SetCookies(WebSocketSharp.Net.CookieCollection cookies)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xF0E560", Offset = "0xF0E560", VA = "0xF0E560", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200014F")]
	public class LogData
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StackFrame _caller;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DateTime _date;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LogLevel _level;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _message;

		[Token(Token = "0x17000142")]
		public StackFrame Caller
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0xF0E970", Offset = "0xF0E970", VA = "0xF0E970")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public DateTime Date
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0xF0E978", Offset = "0xF0E978", VA = "0xF0E978")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x17000144")]
		public LogLevel Level
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0xF0E980", Offset = "0xF0E980", VA = "0xF0E980")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x17000145")]
		public string Message
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0xF0E988", Offset = "0xF0E988", VA = "0xF0E988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xF0E8B8", Offset = "0xF0E8B8", VA = "0xF0E8B8")]
		internal LogData(LogLevel level, StackFrame caller, string message)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xF0E990", Offset = "0xF0E990", VA = "0xF0E990", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public class Logger
	{
		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _file;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel _level;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<LogData, string> _output;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object _sync;

		[Token(Token = "0x17000146")]
		public string File
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0xF0EE70", Offset = "0xF0EE70", VA = "0xF0EE70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093B")]
			[Address(RVA = "0xF0EE94", Offset = "0xF0EE94", VA = "0xF0EE94")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public LogLevel Level
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0xF0EFE0", Offset = "0xF0EFE0", VA = "0xF0EFE0")]
			get
			{
				return default(LogLevel);
			}
			[Token(Token = "0x600093D")]
			[Address(RVA = "0xF0F004", Offset = "0xF0F004", VA = "0xF0F004")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public Action<LogData, string> Output
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0xF0F11C", Offset = "0xF0F11C", VA = "0xF0F11C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600093F")]
			[Address(RVA = "0xF0F124", Offset = "0xF0F124", VA = "0xF0F124")]
			set
			{
			}
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xF0ED80", Offset = "0xF0ED80", VA = "0xF0ED80")]
		public Logger()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xF0EE64", Offset = "0xF0EE64", VA = "0xF0EE64")]
		public Logger(LogLevel level)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xF0ED90", Offset = "0xF0ED90", VA = "0xF0ED90")]
		public Logger(LogLevel level, string file, Action<LogData, string> output)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xF0F23C", Offset = "0xF0F23C", VA = "0xF0F23C")]
		private static void defaultOutput(LogData data, string path)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xF0F540", Offset = "0xF0F540", VA = "0xF0F540")]
		private void output(string message, LogLevel level)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xF0F308", Offset = "0xF0F308", VA = "0xF0F308")]
		private static void writeToFile(string path, string value)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xF0F818", Offset = "0xF0F818", VA = "0xF0F818")]
		public void Debug(string message)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xF0F86C", Offset = "0xF0F86C", VA = "0xF0F86C")]
		public void Error(string message)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xF0F8C0", Offset = "0xF0F8C0", VA = "0xF0F8C0")]
		public void Fatal(string message)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xF0F8C8", Offset = "0xF0F8C8", VA = "0xF0F8C8")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xF0F91C", Offset = "0xF0F91C", VA = "0xF0F91C")]
		public void Trace(string message)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xF0EF8C", Offset = "0xF0EF8C", VA = "0xF0EF8C")]
		public void Warn(string message)
		{
		}
	}
	[Token(Token = "0x2000151")]
	public enum LogLevel
	{
		[Token(Token = "0x40007F9")]
		Trace,
		[Token(Token = "0x40007FA")]
		Debug,
		[Token(Token = "0x40007FB")]
		Info,
		[Token(Token = "0x40007FC")]
		Warn,
		[Token(Token = "0x40007FD")]
		Error,
		[Token(Token = "0x40007FE")]
		Fatal
	}
	[Token(Token = "0x2000152")]
	internal enum Mask : byte
	{
		[Token(Token = "0x4000800")]
		Unmask,
		[Token(Token = "0x4000801")]
		Mask
	}
	[Token(Token = "0x2000153")]
	public class MessageEventArgs : EventArgs
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _data;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Opcode _opcode;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] _rawData;

		[Token(Token = "0x17000149")]
		public string Data
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0xF0FC18", Offset = "0xF0FC18", VA = "0xF0FC18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		public byte[] RawData
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0xF0FC20", Offset = "0xF0FC20", VA = "0xF0FC20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		public Opcode Type
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0xF0FC28", Offset = "0xF0FC28", VA = "0xF0FC28")]
			get
			{
				return default(Opcode);
			}
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xF0F970", Offset = "0xF0F970", VA = "0xF0F970")]
		internal MessageEventArgs(Opcode opcode, byte[] data)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xF0FB68", Offset = "0xF0FB68", VA = "0xF0FB68")]
		internal MessageEventArgs(Opcode opcode, PayloadData payload)
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xF0FA54", Offset = "0xF0FA54", VA = "0xF0FA54")]
		private static string convertToString(Opcode opcode, byte[] data)
		{
			return null;
		}
	}
	[Token(Token = "0x2000154")]
	public enum Opcode : byte
	{
		[Token(Token = "0x4000806")]
		Cont = 0,
		[Token(Token = "0x4000807")]
		Text = 1,
		[Token(Token = "0x4000808")]
		Binary = 2,
		[Token(Token = "0x4000809")]
		Close = 8,
		[Token(Token = "0x400080A")]
		Ping = 9,
		[Token(Token = "0x400080B")]
		Pong = 10
	}
	[Token(Token = "0x2000155")]
	internal class PayloadData : IEnumerable<byte>, IEnumerable
	{
		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2AA4", Offset = "0x9E2AA4")]
		private sealed class <GetEnumerator>d__20 : IEnumerator<byte>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private byte <>2__current;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PayloadData <>4__this;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private byte[] <>7__wrap1;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>7__wrap2;

			[Token(Token = "0x17000463")]
			private byte System.Collections.Generic.IEnumerator<System.Byte>.Current
			{
				[Token(Token = "0x6001AA9")]
				[Address(RVA = "0x11F35C4", Offset = "0x11F35C4", VA = "0x11F35C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(byte);
				}
			}

			[Token(Token = "0x17000464")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AAB")]
				[Address(RVA = "0x11F3634", Offset = "0x11F3634", VA = "0x11F3634", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0x11F322C", Offset = "0x11F322C", VA = "0x11F322C")]
			[DebuggerHidden]
			public <GetEnumerator>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0x11F3408", Offset = "0x11F3408", VA = "0x11F3408", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0x11F340C", Offset = "0x11F340C", VA = "0x11F340C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x11F35CC", Offset = "0x11F35CC", VA = "0x11F35CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _applicationData;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] _extensionData;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _masked;

		[Token(Token = "0x400080F")]
		public const ulong MaxLength = 9223372036854775807uL;

		[Token(Token = "0x1700014C")]
		internal bool ContainsReservedCloseStatusCode
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x11F2FC0", Offset = "0x11F2FC0", VA = "0x11F2FC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014D")]
		public byte[] ApplicationData
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x11F3058", Offset = "0x11F3058", VA = "0x11F3058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		public byte[] ExtensionData
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x11F3060", Offset = "0x11F3060", VA = "0x11F3060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		public bool IsMasked
		{
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x11F3068", Offset = "0x11F3068", VA = "0x11F3068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000150")]
		public ulong Length
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x11F3070", Offset = "0x11F3070", VA = "0x11F3070")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x11F2CDC", Offset = "0x11F2CDC", VA = "0x11F2CDC")]
		public PayloadData()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x11F2E3C", Offset = "0x11F2E3C", VA = "0x11F2E3C")]
		public PayloadData(byte[] applicationData)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x11F2EAC", Offset = "0x11F2EAC", VA = "0x11F2EAC")]
		public PayloadData(string applicationData)
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x11F2F4C", Offset = "0x11F2F4C", VA = "0x11F2F4C")]
		public PayloadData(byte[] applicationData, bool masked)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x11F2D54", Offset = "0x11F2D54", VA = "0x11F2D54")]
		public PayloadData(byte[] extensionData, byte[] applicationData, bool masked)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x11F30B8", Offset = "0x11F30B8", VA = "0x11F30B8")]
		private static void mask(byte[] src, byte[] key)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x11F31B8", Offset = "0x11F31B8", VA = "0x11F31B8", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBC18", Offset = "0x9EBC18")]
		public IEnumerator<byte> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x11F3258", Offset = "0x11F3258", VA = "0x11F3258")]
		public void Mask(byte[] maskingKey)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x11F32DC", Offset = "0x11F32DC", VA = "0x11F32DC")]
		public byte[] ToByteArray()
		{
			return null;
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x11F338C", Offset = "0x11F338C", VA = "0x11F338C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x11F3404", Offset = "0x11F3404", VA = "0x11F3404", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000156")]
	internal enum Rsv : byte
	{
		[Token(Token = "0x4000811")]
		Off,
		[Token(Token = "0x4000812")]
		On
	}
	[Token(Token = "0x2000157")]
	public class WebSocket : IDisposable
	{
		[Serializable]
		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2AB4", Offset = "0x9E2AB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<WebSocketContext, string> <>9__38_0;

			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x11FC018", Offset = "0x11FC018", VA = "0x11FC018")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x11FC020", Offset = "0x11FC020", VA = "0x11FC020")]
			internal string <get_CustomHandshakeRequestChecker>b__38_0(WebSocketContext context)
			{
				return null;
			}
		}

		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2AC4", Offset = "0x9E2AC4")]
		private sealed class <get_Cookies>d__46 : IEnumerable<WebSocketSharp.Net.Cookie>, IEnumerable, IEnumerator<WebSocketSharp.Net.Cookie>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private WebSocketSharp.Net.Cookie <>2__current;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WebSocket <>4__this;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>7__wrap1;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <>7__wrap2;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator <>7__wrap3;

			[Token(Token = "0x17000465")]
			private WebSocketSharp.Net.Cookie System.Collections.Generic.IEnumerator<WebSocketSharp.Net.Cookie>.Current
			{
				[Token(Token = "0x6001AB4")]
				[Address(RVA = "0x11FCFEC", Offset = "0x11FCFEC", VA = "0x11FCFEC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000466")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AB6")]
				[Address(RVA = "0x11FD05C", Offset = "0x11FD05C", VA = "0x11FD05C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x11F3FA8", Offset = "0x11F3FA8", VA = "0x11F3FA8")]
			[DebuggerHidden]
			public <get_Cookies>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0x11FCBE8", Offset = "0x11FCBE8", VA = "0x11FCBE8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0x11FCD60", Offset = "0x11FCD60", VA = "0x11FCD60", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0x11FCD40", Offset = "0x11FCD40", VA = "0x11FCD40")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0x11FCC74", Offset = "0x11FCC74", VA = "0x11FCC74")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x11FCFF4", Offset = "0x11FCFF4", VA = "0x11FCFF4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0x11FD064", Offset = "0x11FD064", VA = "0x11FD064", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<WebSocketSharp.Net.Cookie> System.Collections.Generic.IEnumerable<WebSocketSharp.Net.Cookie>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0x11FD114", Offset = "0x11FD114", VA = "0x11FD114", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2AD4", Offset = "0x9E2AD4")]
		private sealed class <>c__DisplayClass100_0
		{
			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<PayloadData, bool, bool> closer;

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x11F75E4", Offset = "0x11F75E4", VA = "0x11F75E4")]
			public <>c__DisplayClass100_0()
			{
			}

			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0x11FC028", Offset = "0x11FC028", VA = "0x11FC028")]
			internal void <closeAsync>b__0(IAsyncResult ar)
			{
			}
		}

		[Token(Token = "0x2000368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2AE4", Offset = "0x9E2AE4")]
		private sealed class <>c__DisplayClass123_0
		{
			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<Opcode, byte[], bool> sender;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool> completed;

			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebSocket <>4__this;

			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0x11F96E8", Offset = "0x11F96E8", VA = "0x11F96E8")]
			public <>c__DisplayClass123_0()
			{
			}

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x11FC098", Offset = "0x11FC098", VA = "0x11FC098")]
			internal void <sendAsync>b__0(IAsyncResult ar)
			{
			}
		}

		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2AF4", Offset = "0x9E2AF4")]
		private sealed class <>c__DisplayClass124_0
		{
			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<Opcode, Stream, bool> sender;

			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<bool> completed;

			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebSocket <>4__this;

			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x11F9848", Offset = "0x11F9848", VA = "0x11F9848")]
			public <>c__DisplayClass124_0()
			{
			}

			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x11FC220", Offset = "0x11FC220", VA = "0x11FC220")]
			internal void <sendAsync>b__0(IAsyncResult ar)
			{
			}
		}

		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B04", Offset = "0x9E2B04")]
		private sealed class <>c__DisplayClass129_0
		{
			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebSocket <>4__this;

			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action receive;

			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<WebSocketFrame> <>9__1;

			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Exception> <>9__2;

			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0x11F9A0C", Offset = "0x11F9A0C", VA = "0x11F9A0C")]
			public <>c__DisplayClass129_0()
			{
			}

			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0x11FC3A8", Offset = "0x11FC3A8", VA = "0x11FC3A8")]
			internal void <startReceiving>b__0()
			{
			}

			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x11FC528", Offset = "0x11FC528", VA = "0x11FC528")]
			internal void <startReceiving>b__1(WebSocketFrame frame)
			{
			}

			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x11FC800", Offset = "0x11FC800", VA = "0x11FC800")]
			internal void <startReceiving>b__2(Exception ex)
			{
			}
		}

		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B14", Offset = "0x9E2B14")]
		private sealed class <>c__DisplayClass133_0
		{
			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string value;

			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x11F9A14", Offset = "0x11F9A14", VA = "0x11F9A14")]
			public <>c__DisplayClass133_0()
			{
			}

			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x11FC870", Offset = "0x11FC870", VA = "0x11FC870")]
			internal bool <validateSecWebSocketProtocolHeader>b__0(string protocol)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B24", Offset = "0x9E2B24")]
		private sealed class <>c__DisplayClass156_0
		{
			[Token(Token = "0x4001375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<bool> connector;

			[Token(Token = "0x4001376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WebSocket <>4__this;

			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x11FAF14", Offset = "0x11FAF14", VA = "0x11FAF14")]
			public <>c__DisplayClass156_0()
			{
			}

			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0x11FC884", Offset = "0x11FC884", VA = "0x11FC884")]
			internal void <ConnectAsync>b__0(IAsyncResult ar)
			{
			}
		}

		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B34", Offset = "0x9E2B34")]
		private sealed class <>c__DisplayClass165_0
		{
			[Token(Token = "0x4001377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string msg;

			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WebSocket <>4__this;

			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int length;

			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool> completed;

			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x11FBA6C", Offset = "0x11FBA6C", VA = "0x11FBA6C")]
			public <>c__DisplayClass165_0()
			{
			}

			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0x11FC920", Offset = "0x11FC920", VA = "0x11FC920")]
			internal void <SendAsync>b__0(byte[] data)
			{
			}

			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x11FCB28", Offset = "0x11FCB28", VA = "0x11FCB28")]
			internal void <SendAsync>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x4000813")]
		private const string _guid = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";

		[Token(Token = "0x4000814")]
		private const string _version = "13";

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AuthenticationChallenge _authChallenge;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _base64Key;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RemoteCertificateValidationCallback _certValidationCallback;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _client;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action _closeContext;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CompressionMethod _compression;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WebSocketContext _context;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WebSocketSharp.Net.CookieCollection _cookies;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WebSocketSharp.Net.NetworkCredential _credentials;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _extensions;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AutoResetEvent _exitReceiving;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object _forConn;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private object _forEvent;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private object _forMessageEventQueue;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private object _forSend;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Func<WebSocketContext, string> _handshakeRequestChecker;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Logger _logger;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Queue<MessageEventArgs> _messageEventQueue;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private uint _nonceCount;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string _origin;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _preAuth;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string _protocol;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string[] _protocols;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private WebSocketState _readyState;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AutoResetEvent _receivePong;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _secure;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WebSocketStream _stream;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private TcpClient _tcpClient;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Uri _uri;

		[Token(Token = "0x4000832")]
		internal const int FragmentLength = 1016;

		[Token(Token = "0x17000151")]
		internal WebSocketSharp.Net.CookieCollection CookieCollection
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x11F3A90", Offset = "0x11F3A90", VA = "0x11F3A90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		internal Func<WebSocketContext, string> CustomHandshakeRequestChecker
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x11F3A98", Offset = "0x11F3A98", VA = "0x11F3A98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x11F3B7C", Offset = "0x11F3B7C", VA = "0x11F3B7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		internal bool IsConnected
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x11F3B84", Offset = "0x11F3B84", VA = "0x11F3B84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000154")]
		public CompressionMethod Compression
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x11F3BC8", Offset = "0x11F3BC8", VA = "0x11F3BC8")]
			get
			{
				return default(CompressionMethod);
			}
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x11F3BD0", Offset = "0x11F3BD0", VA = "0x11F3BD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public IEnumerable<WebSocketSharp.Net.Cookie> Cookies
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x11F3F24", Offset = "0x11F3F24", VA = "0x11F3F24")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBC7C", Offset = "0x9EBC7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		public WebSocketSharp.Net.NetworkCredential Credentials
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x11F3FE0", Offset = "0x11F3FE0", VA = "0x11F3FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		public string Extensions
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x11F3FE8", Offset = "0x11F3FE8", VA = "0x11F3FE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		public bool IsAlive
		{
			[Token(Token = "0x600096B")]
			[Address(RVA = "0x11F4044", Offset = "0x11F4044", VA = "0x11F4044")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000159")]
		public bool IsSecure
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0x11F40FC", Offset = "0x11F40FC", VA = "0x11F40FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015A")]
		public Logger Log
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0x11F4104", Offset = "0x11F4104", VA = "0x11F4104")]
			get
			{
				return null;
			}
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x11F4128", Offset = "0x11F4128", VA = "0x11F4128")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public string Origin
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x11F4150", Offset = "0x11F4150", VA = "0x11F4150")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x11F4158", Offset = "0x11F4158", VA = "0x11F4158")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public string Protocol
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0x11F43A0", Offset = "0x11F43A0", VA = "0x11F43A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x11F43FC", Offset = "0x11F43FC", VA = "0x11F43FC")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public WebSocketState ReadyState
		{
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x11F4404", Offset = "0x11F4404", VA = "0x11F4404")]
			get
			{
				return default(WebSocketState);
			}
		}

		[Token(Token = "0x1700015E")]
		public RemoteCertificateValidationCallback ServerCertificateValidationCallback
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x11F4428", Offset = "0x11F4428", VA = "0x11F4428")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x11F4430", Offset = "0x11F4430", VA = "0x11F4430")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public Uri Url
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x11F455C", Offset = "0x11F455C", VA = "0x11F455C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000011")]
		public event EventHandler<CloseEventArgs> OnClose
		{
			[Token(Token = "0x6000977")]
			[Address(RVA = "0x11F45A4", Offset = "0x11F45A4", VA = "0x11F45A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBCE0", Offset = "0x9EBCE0")]
			add
			{
			}
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x11F464C", Offset = "0x11F464C", VA = "0x11F464C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBCF0", Offset = "0x9EBCF0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event EventHandler<ErrorEventArgs> OnError
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x11F46F4", Offset = "0x11F46F4", VA = "0x11F46F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD00", Offset = "0x9EBD00")]
			add
			{
			}
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x11F47A0", Offset = "0x11F47A0", VA = "0x11F47A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD10", Offset = "0x9EBD10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event EventHandler<MessageEventArgs> OnMessage
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x11F484C", Offset = "0x11F484C", VA = "0x11F484C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD20", Offset = "0x9EBD20")]
			add
			{
			}
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x11F48F8", Offset = "0x11F48F8", VA = "0x11F48F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD30", Offset = "0x9EBD30")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event EventHandler OnOpen
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x11F49A4", Offset = "0x11F49A4", VA = "0x11F49A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD40", Offset = "0x9EBD40")]
			add
			{
			}
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x11F4A50", Offset = "0x11F4A50", VA = "0x11F4A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD50", Offset = "0x9EBD50")]
			remove
			{
			}
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x11F0D4C", Offset = "0x11F0D4C", VA = "0x11F0D4C")]
		internal WebSocket(HttpListenerWebSocketContext context, string protocol, Logger logger)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x11F1B68", Offset = "0x11F1B68", VA = "0x11F1B68")]
		internal WebSocket(TcpListenerWebSocketContext context, string protocol, Logger logger)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x11F3800", Offset = "0x11F3800", VA = "0x11F3800")]
		public WebSocket(string url, params string[] protocols)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x11F4AFC", Offset = "0x11F4AFC", VA = "0x11F4AFC")]
		private bool acceptCloseFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x11F4F60", Offset = "0x11F4F60", VA = "0x11F4F60")]
		private bool acceptDataFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x11F517C", Offset = "0x11F517C", VA = "0x11F517C")]
		private void acceptException(Exception exception, string message)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x11F5414", Offset = "0x11F5414", VA = "0x11F5414")]
		private bool acceptFragmentedFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x11F5470", Offset = "0x11F5470", VA = "0x11F5470")]
		private bool acceptFragments(WebSocketFrame first)
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x11F5850", Offset = "0x11F5850", VA = "0x11F5850")]
		private bool acceptFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x11F5C28", Offset = "0x11F5C28", VA = "0x11F5C28")]
		private bool acceptHandshake()
		{
			return default(bool);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x11F5B5C", Offset = "0x11F5B5C", VA = "0x11F5B5C")]
		private bool acceptPingFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x11F5AD0", Offset = "0x11F5AD0", VA = "0x11F5AD0")]
		private bool acceptPongFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x11F6000", Offset = "0x11F6000", VA = "0x11F6000")]
		private void acceptSecWebSocketExtensionsHeader(string value)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x11F59E0", Offset = "0x11F59E0", VA = "0x11F59E0")]
		private bool acceptUnsupportedFrame(WebSocketFrame frame, CloseStatusCode code, string reason)
		{
			return default(bool);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x11F3CFC", Offset = "0x11F3CFC", VA = "0x11F3CFC")]
		private string checkIfAvailable(string operation, bool availableAsServer, bool availableAsConnected)
		{
			return null;
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x11F6954", Offset = "0x11F6954", VA = "0x11F6954")]
		private string checkIfCanConnect()
		{
			return null;
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x11F5E54", Offset = "0x11F5E54", VA = "0x11F5E54")]
		private string checkIfValidHandshakeRequest(WebSocketContext context)
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x11F6A80", Offset = "0x11F6A80", VA = "0x11F6A80")]
		private string checkIfValidHandshakeResponse(HandshakeResponse response)
		{
			return null;
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x11F5364", Offset = "0x11F5364", VA = "0x11F5364")]
		private void close(CloseStatusCode code, string reason, bool wait)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x11F4B64", Offset = "0x11F4B64", VA = "0x11F4B64")]
		private void close(PayloadData payload, bool send, bool wait)
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x11F74B0", Offset = "0x11F74B0", VA = "0x11F74B0")]
		private void closeAsync(PayloadData payload, bool send, bool wait)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x11F75EC", Offset = "0x11F75EC", VA = "0x11F75EC")]
		private void closeClientResources()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x11F72EC", Offset = "0x11F72EC", VA = "0x11F72EC")]
		private bool closeHandshake(byte[] frame, int timeout, Action release)
		{
			return default(bool);
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x11F7804", Offset = "0x11F7804", VA = "0x11F7804")]
		private void closeServerResources()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x11F569C", Offset = "0x11F569C", VA = "0x11F569C")]
		private bool concatenateFragmentsInto(Stream dest)
		{
			return default(bool);
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x11F78B8", Offset = "0x11F78B8", VA = "0x11F78B8")]
		private bool connect()
		{
			return default(bool);
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x11F7BD8", Offset = "0x11F7BD8", VA = "0x11F7BD8")]
		private string createExtensionsRequest()
		{
			return null;
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x11F7CB0", Offset = "0x11F7CB0", VA = "0x11F7CB0")]
		private HandshakeRequest createHandshakeRequest()
		{
			return null;
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x11F64B4", Offset = "0x11F64B4", VA = "0x11F64B4")]
		private HandshakeResponse createHandshakeResponse()
		{
			return null;
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x11F815C", Offset = "0x11F815C", VA = "0x11F815C")]
		private HandshakeResponse createHandshakeResponse(WebSocketSharp.Net.HttpStatusCode code)
		{
			return null;
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x11F81F4", Offset = "0x11F81F4", VA = "0x11F81F4")]
		private MessageEventArgs dequeueFromMessageEventQueue()
		{
			return null;
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x11F7AB4", Offset = "0x11F7AB4", VA = "0x11F7AB4")]
		private bool doHandshake()
		{
			return default(bool);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x11F5094", Offset = "0x11F5094", VA = "0x11F5094")]
		private void enqueueToMessageEventQueue(MessageEventArgs e)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x11F3DB8", Offset = "0x11F3DB8", VA = "0x11F3DB8")]
		private void error(string message)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x11F3698", Offset = "0x11F3698", VA = "0x11F3698")]
		private void init()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x11F85F4", Offset = "0x11F85F4", VA = "0x11F85F4")]
		private void open()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x11F8990", Offset = "0x11F8990", VA = "0x11F8990")]
		private HandshakeResponse receiveHandshakeResponse()
		{
			return null;
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x11F8AE8", Offset = "0x11F8AE8", VA = "0x11F8AE8")]
		private bool send(byte[] frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x11F8C28", Offset = "0x11F8C28", VA = "0x11F8C28")]
		private void send(HandshakeRequest request)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x11F6618", Offset = "0x11F6618", VA = "0x11F6618")]
		private bool send(HandshakeResponse response)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x11F6758", Offset = "0x11F6758", VA = "0x11F6758")]
		private bool send(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x11F8CD0", Offset = "0x11F8CD0", VA = "0x11F8CD0")]
		private bool send(Opcode opcode, byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x11F8FCC", Offset = "0x11F8FCC", VA = "0x11F8FCC")]
		private bool send(Opcode opcode, Stream stream)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x11F9590", Offset = "0x11F9590", VA = "0x11F9590")]
		private void sendAsync(Opcode opcode, byte[] data, Action<bool> completed)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x11F96F0", Offset = "0x11F96F0", VA = "0x11F96F0")]
		private void sendAsync(Opcode opcode, Stream stream, Action<bool> completed)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x11F9298", Offset = "0x11F9298", VA = "0x11F9298")]
		private bool sendFragmented(Opcode opcode, Stream stream, Mask mask, bool compressed)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x11F83F0", Offset = "0x11F83F0", VA = "0x11F83F0")]
		private HandshakeResponse sendHandshakeRequest()
		{
			return null;
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x11F9850", Offset = "0x11F9850", VA = "0x11F9850")]
		private HandshakeResponse sendHandshakeRequest(HandshakeRequest request)
		{
			return null;
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x11F8324", Offset = "0x11F8324", VA = "0x11F8324")]
		private void setClientStream()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x11F8844", Offset = "0x11F8844", VA = "0x11F8844")]
		private void startReceiving()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x11F6CB4", Offset = "0x11F6CB4", VA = "0x11F6CB4")]
		private bool validateSecWebSocketAcceptHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x11F6E1C", Offset = "0x11F6E1C", VA = "0x11F6E1C")]
		private bool validateSecWebSocketExtensionsHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x11F69D4", Offset = "0x11F69D4", VA = "0x11F69D4")]
		private bool validateSecWebSocketKeyHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x11F6CF8", Offset = "0x11F6CF8", VA = "0x11F6CF8")]
		private bool validateSecWebSocketProtocolHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x11F6A18", Offset = "0x11F6A18", VA = "0x11F6A18")]
		private bool validateSecWebSocketVersionClientHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x11F6F48", Offset = "0x11F6F48", VA = "0x11F6F48")]
		private bool validateSecWebSocketVersionServerHeader(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x11F2474", Offset = "0x11F2474", VA = "0x11F2474")]
		internal void Close(HandshakeResponse response)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x11F533C", Offset = "0x11F533C", VA = "0x11F533C")]
		internal void Close(WebSocketSharp.Net.HttpStatusCode code)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x11F9A1C", Offset = "0x11F9A1C", VA = "0x11F9A1C")]
		internal void Close(CloseEventArgs e, byte[] frame, int timeout)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x11F9CCC", Offset = "0x11F9CCC", VA = "0x11F9CCC")]
		internal void ConnectAsServer()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x11F39D4", Offset = "0x11F39D4", VA = "0x11F39D4")]
		internal static string CreateBase64Key()
		{
			return null;
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x11F8010", Offset = "0x11F8010", VA = "0x11F8010")]
		internal static string CreateResponseKey(string base64Key)
		{
			return null;
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x11F9DC4", Offset = "0x11F9DC4", VA = "0x11F9DC4")]
		internal bool Ping(byte[] frame, int timeout)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x11F9F2C", Offset = "0x11F9F2C", VA = "0x11F9F2C")]
		internal void Send(Opcode opcode, byte[] data, Dictionary<CompressionMethod, byte[]> cache)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x11FA2A8", Offset = "0x11FA2A8", VA = "0x11FA2A8")]
		internal void Send(Opcode opcode, Stream stream, Dictionary<CompressionMethod, Stream> cache)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x11FA558", Offset = "0x11FA558", VA = "0x11FA558")]
		public void Close()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x11FA630", Offset = "0x11FA630", VA = "0x11FA630")]
		public void Close(ushort code)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x11FA7C8", Offset = "0x11FA7C8", VA = "0x11FA7C8")]
		public void Close(CloseStatusCode code)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x11FA638", Offset = "0x11FA638", VA = "0x11FA638")]
		public void Close(ushort code, string reason)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x11FA7D0", Offset = "0x11FA7D0", VA = "0x11FA7D0")]
		public void Close(CloseStatusCode code, string reason)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x11FA94C", Offset = "0x11FA94C", VA = "0x11FA94C")]
		public void CloseAsync()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x11FAA24", Offset = "0x11FAA24", VA = "0x11FAA24")]
		public void CloseAsync(ushort code)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x11FABBC", Offset = "0x11FABBC", VA = "0x11FABBC")]
		public void CloseAsync(CloseStatusCode code)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x11FAA2C", Offset = "0x11FAA2C", VA = "0x11FAA2C")]
		public void CloseAsync(ushort code, string reason)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x11FABC4", Offset = "0x11FABC4", VA = "0x11FABC4")]
		public void CloseAsync(CloseStatusCode code, string reason)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x11FAD40", Offset = "0x11FAD40", VA = "0x11FAD40")]
		public void Connect()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x11FADCC", Offset = "0x11FADCC", VA = "0x11FADCC")]
		public void ConnectAsync()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x11F4048", Offset = "0x11F4048", VA = "0x11F4048")]
		public bool Ping()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x11FAFAC", Offset = "0x11FAFAC", VA = "0x11FAFAC")]
		public bool Ping(string message)
		{
			return default(bool);
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x11FB1D4", Offset = "0x11FB1D4", VA = "0x11FB1D4")]
		public void Send(byte[] data)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x11FB32C", Offset = "0x11FB32C", VA = "0x11FB32C")]
		public void Send(FileInfo file)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x11FB3E4", Offset = "0x11FB3E4", VA = "0x11FB3E4")]
		public void Send(string data)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x11FB524", Offset = "0x11FB524", VA = "0x11FB524")]
		public void SendAsync(byte[] data, Action<bool> completed)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x11FB688", Offset = "0x11FB688", VA = "0x11FB688")]
		public void SendAsync(FileInfo file, Action<bool> completed)
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x11FB748", Offset = "0x11FB748", VA = "0x11FB748")]
		public void SendAsync(string data, Action<bool> completed)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x11FB894", Offset = "0x11FB894", VA = "0x11FB894")]
		public void SendAsync(Stream stream, int length, Action<bool> completed)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x11FBA74", Offset = "0x11FBA74", VA = "0x11FBA74")]
		public void SetCookie(WebSocketSharp.Net.Cookie cookie)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x11FBC74", Offset = "0x11FBC74", VA = "0x11FBC74")]
		public void SetCredentials(string username, string password, bool preAuth)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x11FBF3C", Offset = "0x11FBF3C", VA = "0x11FBF3C", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x11FBF48", Offset = "0x11FBF48", VA = "0x11FBF48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD60", Offset = "0x9EBD60")]
		private bool <acceptHandshake>b__89_0(string protocol)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x11FBF5C", Offset = "0x11FBF5C", VA = "0x11FBF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD70", Offset = "0x9EBD70")]
		private bool <validateSecWebSocketExtensionsHeader>b__131_0(string extension)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000158")]
	public class WebSocketException : Exception
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6184", Offset = "0x9E6184")]
		private CloseStatusCode <Code>k__BackingField;

		[Token(Token = "0x17000160")]
		public CloseStatusCode Code
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x11F5334", Offset = "0x11F5334", VA = "0x11F5334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD80", Offset = "0x9EBD80")]
			get
			{
				return default(CloseStatusCode);
			}
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x11FD220", Offset = "0x11FD220", VA = "0x11FD220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBD90", Offset = "0x9EBD90")]
			private set
			{
			}
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x11FD118", Offset = "0x11FD118", VA = "0x11FD118")]
		internal WebSocketException()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x11FD1E8", Offset = "0x11FD1E8", VA = "0x11FD1E8")]
		internal WebSocketException(string message)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x11FD1FC", Offset = "0x11FD1FC", VA = "0x11FD1FC")]
		internal WebSocketException(CloseStatusCode code)
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x11FD208", Offset = "0x11FD208", VA = "0x11FD208")]
		internal WebSocketException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x11F694C", Offset = "0x11F694C", VA = "0x11F694C")]
		internal WebSocketException(CloseStatusCode code, string message)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x11FD128", Offset = "0x11FD128", VA = "0x11FD128")]
		internal WebSocketException(CloseStatusCode code, string message, Exception innerException)
		{
		}
	}
	[Token(Token = "0x2000159")]
	internal class WebSocketFrame : IEnumerable<byte>, IEnumerable
	{
		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B44", Offset = "0x9E2B44")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StringBuilder output;

			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string lineFmt;

			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x11FDD60", Offset = "0x11FDD60", VA = "0x11FDD60")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x11FF1D4", Offset = "0x11FF1D4", VA = "0x11FF1D4")]
			internal Action<string, string, string, string> <dump>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B54", Offset = "0x9E2B54")]
		private sealed class <>c__DisplayClass66_1
		{
			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long lineCnt;

			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass66_0 CS$<>8__locals1;

			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x11FF290", Offset = "0x11FF290", VA = "0x11FF290")]
			public <>c__DisplayClass66_1()
			{
			}

			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x11FF298", Offset = "0x11FF298", VA = "0x11FF298")]
			internal void <dump>b__1(string arg1, string arg2, string arg3, string arg4)
			{
			}
		}

		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B64", Offset = "0x9E2B64")]
		private sealed class <GetEnumerator>d__78 : IEnumerator<byte>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private byte <>2__current;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WebSocketFrame <>4__this;

			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private byte[] <>7__wrap1;

			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>7__wrap2;

			[Token(Token = "0x17000467")]
			private byte System.Collections.Generic.IEnumerator<System.Byte>.Current
			{
				[Token(Token = "0x6001AD1")]
				[Address(RVA = "0x11FF720", Offset = "0x11FF720", VA = "0x11FF720", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(byte);
				}
			}

			[Token(Token = "0x17000468")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AD3")]
				[Address(RVA = "0x11FF790", Offset = "0x11FF790", VA = "0x11FF790", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x11FEB44", Offset = "0x11FEB44", VA = "0x11FEB44")]
			[DebuggerHidden]
			public <GetEnumerator>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x11FF610", Offset = "0x11FF610", VA = "0x11FF610", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x11FF614", Offset = "0x11FF614", VA = "0x11FF614", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0x11FF728", Offset = "0x11FF728", VA = "0x11FF728", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B74", Offset = "0x9E2B74")]
		private sealed class <>c__DisplayClass85_0
		{
			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stream stream;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool unmask;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<WebSocketFrame> completed;

			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0x11FF090", Offset = "0x11FF090", VA = "0x11FF090")]
			public <>c__DisplayClass85_0()
			{
			}

			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x11FF504", Offset = "0x11FF504", VA = "0x11FF504")]
			internal void <ParseAsync>b__0(byte[] header)
			{
			}
		}

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _extPayloadLength;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Fin _fin;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private Mask _mask;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte[] _maskingKey;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Opcode _opcode;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PayloadData _payloadData;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte _payloadLength;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private Rsv _rsv1;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private Rsv _rsv2;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		private Rsv _rsv3;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly byte[] EmptyUnmaskPingData;

		[Token(Token = "0x17000161")]
		public byte[] ExtendedPayloadLength
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x11FD52C", Offset = "0x11FD52C", VA = "0x11FD52C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public Fin Fin
		{
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x11FD534", Offset = "0x11FD534", VA = "0x11FD534")]
			get
			{
				return default(Fin);
			}
		}

		[Token(Token = "0x17000163")]
		public bool IsBinary
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x11FD53C", Offset = "0x11FD53C", VA = "0x11FD53C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public bool IsClose
		{
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x11F59D0", Offset = "0x11F59D0", VA = "0x11F59D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		public bool IsCompressed
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x11F507C", Offset = "0x11F507C", VA = "0x11F507C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000166")]
		public bool IsContinuation
		{
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x11F5460", Offset = "0x11F5460", VA = "0x11F5460")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000167")]
		public bool IsControl
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x11FD54C", Offset = "0x11FD54C", VA = "0x11FD54C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000168")]
		public bool IsData
		{
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x11F599C", Offset = "0x11F599C", VA = "0x11F599C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000169")]
		public bool IsFinal
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x11F78A8", Offset = "0x11F78A8", VA = "0x11F78A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016A")]
		public bool IsFragmented
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x11F597C", Offset = "0x11F597C", VA = "0x11F597C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016B")]
		public bool IsMasked
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x11FD570", Offset = "0x11FD570", VA = "0x11FD570")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016C")]
		public bool IsPerMessageCompressed
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x11FD580", Offset = "0x11FD580", VA = "0x11FD580")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016D")]
		public bool IsPing
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x11F59B0", Offset = "0x11F59B0", VA = "0x11F59B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016E")]
		public bool IsPong
		{
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x11F59C0", Offset = "0x11F59C0", VA = "0x11F59C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016F")]
		public bool IsText
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x11FD5A8", Offset = "0x11FD5A8", VA = "0x11FD5A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000170")]
		public ulong Length
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x11FD5B8", Offset = "0x11FD5B8", VA = "0x11FD5B8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000171")]
		public Mask Mask
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x11FD628", Offset = "0x11FD628", VA = "0x11FD628")]
			get
			{
				return default(Mask);
			}
		}

		[Token(Token = "0x17000172")]
		public byte[] MaskingKey
		{
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x11FD630", Offset = "0x11FD630", VA = "0x11FD630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public Opcode Opcode
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x11F508C", Offset = "0x11F508C", VA = "0x11F508C")]
			get
			{
				return default(Opcode);
			}
		}

		[Token(Token = "0x17000174")]
		public PayloadData PayloadData
		{
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x11F4B5C", Offset = "0x11F4B5C", VA = "0x11F4B5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public byte PayloadLength
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x11FD638", Offset = "0x11FD638", VA = "0x11FD638")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000176")]
		public Rsv Rsv1
		{
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x11FD640", Offset = "0x11FD640", VA = "0x11FD640")]
			get
			{
				return default(Rsv);
			}
		}

		[Token(Token = "0x17000177")]
		public Rsv Rsv2
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x11FD648", Offset = "0x11FD648", VA = "0x11FD648")]
			get
			{
				return default(Rsv);
			}
		}

		[Token(Token = "0x17000178")]
		public Rsv Rsv3
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x11FD650", Offset = "0x11FD650", VA = "0x11FD650")]
			get
			{
				return default(Rsv);
			}
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x11FD228", Offset = "0x11FD228", VA = "0x11FD228")]
		static WebSocketFrame()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x11FD294", Offset = "0x11FD294", VA = "0x11FD294")]
		private WebSocketFrame()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x11FD29C", Offset = "0x11FD29C", VA = "0x11FD29C")]
		public WebSocketFrame(Opcode opcode, PayloadData payload)
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x11FD454", Offset = "0x11FD454", VA = "0x11FD454")]
		public WebSocketFrame(Opcode opcode, Mask mask, PayloadData payload)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x11FD478", Offset = "0x11FD478", VA = "0x11FD478")]
		public WebSocketFrame(Fin fin, Opcode opcode, Mask mask, PayloadData payload)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x11FD2BC", Offset = "0x11FD2BC", VA = "0x11FD2BC")]
		public WebSocketFrame(Fin fin, Opcode opcode, Mask mask, PayloadData payload, bool compressed)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x11FD494", Offset = "0x11FD494", VA = "0x11FD494")]
		private static byte[] createMaskingKey()
		{
			return null;
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x11FD658", Offset = "0x11FD658", VA = "0x11FD658")]
		private static string dump(WebSocketFrame frame)
		{
			return null;
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x11FDD68", Offset = "0x11FDD68", VA = "0x11FDD68")]
		private static bool isControl(Opcode opcode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x11FD480", Offset = "0x11FD480", VA = "0x11FD480")]
		private static bool isData(Opcode opcode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x11FDD90", Offset = "0x11FDD90", VA = "0x11FDD90")]
		private static WebSocketFrame parse(byte[] header, Stream stream, bool unmask)
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x11FE31C", Offset = "0x11FE31C", VA = "0x11FE31C")]
		private static string print(WebSocketFrame frame)
		{
			return null;
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x11F6FB0", Offset = "0x11F6FB0", VA = "0x11F6FB0")]
		internal static WebSocketFrame CreateCloseFrame(Mask mask, PayloadData payload)
		{
			return null;
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x11F66DC", Offset = "0x11F66DC", VA = "0x11F66DC")]
		internal static WebSocketFrame CreatePongFrame(Mask mask, PayloadData payload)
		{
			return null;
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x11FE984", Offset = "0x11FE984", VA = "0x11FE984")]
		public static WebSocketFrame CreateCloseFrame(Mask mask, byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x11FEA1C", Offset = "0x11FEA1C", VA = "0x11FEA1C")]
		public static WebSocketFrame CreateCloseFrame(Mask mask, CloseStatusCode code, string reason)
		{
			return null;
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x11F8F20", Offset = "0x11F8F20", VA = "0x11F8F20")]
		public static WebSocketFrame CreateFrame(Fin fin, Opcode opcode, Mask mask, byte[] data, bool compressed)
		{
			return null;
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x11FAF1C", Offset = "0x11FAF1C", VA = "0x11FAF1C")]
		public static WebSocketFrame CreatePingFrame(Mask mask)
		{
			return null;
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x11FB13C", Offset = "0x11FB13C", VA = "0x11FB13C")]
		public static WebSocketFrame CreatePingFrame(Mask mask, byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x11FEAD0", Offset = "0x11FEAD0", VA = "0x11FEAD0", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBDA0", Offset = "0x9EBDA0")]
		public IEnumerator<byte> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x11FEB70", Offset = "0x11FEB70", VA = "0x11FEB70")]
		public static WebSocketFrame Parse(byte[] src)
		{
			return null;
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x11FED30", Offset = "0x11FED30", VA = "0x11FED30")]
		public static WebSocketFrame Parse(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x11FEBD8", Offset = "0x11FEBD8", VA = "0x11FEBD8")]
		public static WebSocketFrame Parse(byte[] src, bool unmask)
		{
			return null;
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x11FED98", Offset = "0x11FED98", VA = "0x11FED98")]
		public static WebSocketFrame Parse(Stream stream, bool unmask)
		{
			return null;
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x11FEE7C", Offset = "0x11FEE7C", VA = "0x11FEE7C")]
		public static void ParseAsync(Stream stream, Action<WebSocketFrame> completed)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x11FF010", Offset = "0x11FF010", VA = "0x11FF010")]
		public static void ParseAsync(Stream stream, Action<WebSocketFrame> completed, Action<Exception> error)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x11FEEF8", Offset = "0x11FEEF8", VA = "0x11FEEF8")]
		public static void ParseAsync(Stream stream, bool unmask, Action<WebSocketFrame> completed, Action<Exception> error)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x11FF098", Offset = "0x11FF098", VA = "0x11FF098")]
		public void Print(bool dumped)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x11F68B4", Offset = "0x11F68B4", VA = "0x11F68B4")]
		public string PrintToString(bool dumped)
		{
			return null;
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x11F702C", Offset = "0x11F702C", VA = "0x11F702C")]
		public byte[] ToByteArray()
		{
			return null;
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x11FF158", Offset = "0x11FF158", VA = "0x11FF158", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x11FF1D0", Offset = "0x11FF1D0", VA = "0x11FF1D0", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x200015A")]
	public enum WebSocketState : ushort
	{
		[Token(Token = "0x4000844")]
		Connecting,
		[Token(Token = "0x4000845")]
		Open,
		[Token(Token = "0x4000846")]
		Closing,
		[Token(Token = "0x4000847")]
		Closed
	}
	[Token(Token = "0x200015B")]
	internal class WebSocketStream : IDisposable
	{
		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B84", Offset = "0x9E2B84")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<byte> buff;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int count;

			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x11FFE90", Offset = "0x11FFE90", VA = "0x11FFE90")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0x11FFFD8", Offset = "0x11FFFD8", VA = "0x11FFFD8")]
			internal void <readHandshakeHeaders>b__0(int i)
			{
			}
		}

		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2B94", Offset = "0x9E2B94")]
		private sealed class <>c__DisplayClass13_0<T> where T : HandshakeBase
		{
			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool timeout;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WebSocketStream <>4__this;

			[Token(Token = "0x6001AD8")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001AD9")]
			internal void <ReadHandshake>b__0(object state)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2BA4", Offset = "0x9E2BA4")]
		private sealed class <>c
		{
			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static RemoteCertificateValidationCallback <>9__16_0;

			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0x11FFFC8", Offset = "0x11FFFC8", VA = "0x11FFFC8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ADC")]
			[Address(RVA = "0x11FFFD0", Offset = "0x11FFFD0", VA = "0x11FFFD0")]
			internal bool <CreateClientStream>b__16_0(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000848")]
		private const int _handshakeHeadersLimitLen = 8192;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object _forWrite;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stream _innerStream;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _secure;

		[Token(Token = "0x17000179")]
		public bool DataAvailable
		{
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x11FF88C", Offset = "0x11FF88C", VA = "0x11FF88C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017A")]
		public bool IsSecure
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x11FFA10", Offset = "0x11FFA10", VA = "0x11FFA10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x11FF7F4", Offset = "0x11FF7F4", VA = "0x11FF7F4")]
		internal WebSocketStream(Stream innerStream, bool secure)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x11FF87C", Offset = "0x11FF87C", VA = "0x11FF87C")]
		public WebSocketStream(NetworkStream innerStream)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x11FF884", Offset = "0x11FF884", VA = "0x11FF884")]
		public WebSocketStream(WebSocketSharp.Net.Security.SslStream innerStream)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x11FFA18", Offset = "0x11FFA18", VA = "0x11FFA18")]
		private static byte[] readHandshakeEntityBody(Stream stream, string length)
		{
			return null;
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x11FFB44", Offset = "0x11FFB44", VA = "0x11FFB44")]
		private static string[] readHandshakeHeaders(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		internal T ReadHandshake<T>(Func<string[], T> parser, int millisecondsTimeout) where T : HandshakeBase
		{
			return null;
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x11F765C", Offset = "0x11F765C", VA = "0x11F765C")]
		internal bool Write(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x11F23FC", Offset = "0x11F23FC", VA = "0x11F23FC")]
		public void Close()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x11F9874", Offset = "0x11F9874", VA = "0x11F9874")]
		public static WebSocketStream CreateClientStream(TcpClient client, bool secure, string host, RemoteCertificateValidationCallback validationCallback)
		{
			return null;
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x11F1A6C", Offset = "0x11F1A6C", VA = "0x11F1A6C")]
		public static WebSocketStream CreateServerStream(TcpClient client, bool secure, X509Certificate cert)
		{
			return null;
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x11F762C", Offset = "0x11F762C", VA = "0x11F762C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x11F783C", Offset = "0x11F783C", VA = "0x11F783C")]
		public WebSocketFrame ReadFrame()
		{
			return null;
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x11FC4A4", Offset = "0x11FC4A4", VA = "0x11FC4A4")]
		public void ReadFrameAsync(Action<WebSocketFrame> completed, Action<Exception> error)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x11FFE98", Offset = "0x11FFE98", VA = "0x11FFE98")]
		public HandshakeRequest ReadHandshakeRequest()
		{
			return null;
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x11F8A58", Offset = "0x11F8A58", VA = "0x11F8A58")]
		public HandshakeResponse ReadHandshakeResponse()
		{
			return null;
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x11FFF28", Offset = "0x11FFF28", VA = "0x11FFF28")]
		public bool WriteFrame(WebSocketFrame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x11F2600", Offset = "0x11F2600", VA = "0x11F2600")]
		public bool WriteHandshake(HandshakeBase handshake)
		{
			return default(bool);
		}
	}
}
namespace WebSocketSharp.Net
{
	[Token(Token = "0x200015C")]
	internal abstract class AuthenticationBase
	{
		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AuthenticationSchemes _scheme;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal NameValueCollection Parameters;

		[Token(Token = "0x1700017B")]
		public string Algorithm
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0xF0FC6C", Offset = "0xF0FC6C", VA = "0xF0FC6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public string Nonce
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0xF0FCD0", Offset = "0xF0FCD0", VA = "0xF0FCD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		public string Opaque
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0xF0FD34", Offset = "0xF0FD34", VA = "0xF0FD34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		public string Qop
		{
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0xF0FD98", Offset = "0xF0FD98", VA = "0xF0FD98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public string Realm
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0xF0FDFC", Offset = "0xF0FDFC", VA = "0xF0FDFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public AuthenticationSchemes Scheme
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0xF0FE60", Offset = "0xF0FE60", VA = "0xF0FE60")]
			get
			{
				return default(AuthenticationSchemes);
			}
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xF0FC30", Offset = "0xF0FC30", VA = "0xF0FC30")]
		protected AuthenticationBase(AuthenticationSchemes scheme, NameValueCollection parameters)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xF0FE68", Offset = "0xF0FE68", VA = "0xF0FE68")]
		internal static string CreateNonceValue()
		{
			return null;
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xF0FFD0", Offset = "0xF0FFD0", VA = "0xF0FFD0")]
		internal static NameValueCollection ParseParameters(string value)
		{
			return null;
		}

		[Token(Token = "0x6000A33")]
		internal abstract string ToBasicString();

		[Token(Token = "0x6000A34")]
		internal abstract string ToDigestString();

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xF104EC", Offset = "0xF104EC", VA = "0xF104EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200015D")]
	internal class AuthenticationChallenge : AuthenticationBase
	{
		[Token(Token = "0x17000181")]
		public string Domain
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0xF1070C", Offset = "0xF1070C", VA = "0xF1070C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		public string Stale
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0xF10770", Offset = "0xF10770", VA = "0xF10770")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xF10578", Offset = "0xF10578", VA = "0xF10578")]
		private AuthenticationChallenge(AuthenticationSchemes scheme, NameValueCollection parameters)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xF105B4", Offset = "0xF105B4", VA = "0xF105B4")]
		internal AuthenticationChallenge(AuthenticationSchemes scheme, string realm)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xF107D4", Offset = "0xF107D4", VA = "0xF107D4")]
		internal static AuthenticationChallenge CreateBasicChallenge(string realm)
		{
			return null;
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xF10838", Offset = "0xF10838", VA = "0xF10838")]
		internal static AuthenticationChallenge CreateDigestChallenge(string realm)
		{
			return null;
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xF0D978", Offset = "0xF0D978", VA = "0xF0D978")]
		internal static AuthenticationChallenge Parse(string value)
		{
			return null;
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xF1089C", Offset = "0xF1089C", VA = "0xF1089C", Slot = "4")]
		internal override string ToBasicString()
		{
			return null;
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xF1091C", Offset = "0xF1091C", VA = "0xF1091C", Slot = "5")]
		internal override string ToDigestString()
		{
			return null;
		}
	}
	[Token(Token = "0x200015E")]
	internal class AuthenticationResponse : AuthenticationBase
	{
		[Serializable]
		[Token(Token = "0x2000375")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2BB4", Offset = "0x9E2BB4")]
		private sealed class <>c
		{
			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__24_0;

			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0xF12980", Offset = "0xF12980", VA = "0xF12980")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xF12988", Offset = "0xF12988", VA = "0xF12988")]
			internal bool <initAsDigest>b__24_0(string qop)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint _nonceCount;

		[Token(Token = "0x17000183")]
		internal uint NonceCount
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0xF11154", Offset = "0xF11154", VA = "0xF11154")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000184")]
		public string Cnonce
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0xF11164", Offset = "0xF11164", VA = "0xF11164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public string Nc
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xF111C8", Offset = "0xF111C8", VA = "0xF111C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public string Password
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0xF1122C", Offset = "0xF1122C", VA = "0xF1122C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public string Response
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0xF11290", Offset = "0xF11290", VA = "0xF11290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public string Uri
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0xF112F4", Offset = "0xF112F4", VA = "0xF112F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public string UserName
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0xF11358", Offset = "0xF11358", VA = "0xF11358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xF10BE4", Offset = "0xF10BE4", VA = "0xF10BE4")]
		private AuthenticationResponse(AuthenticationSchemes scheme, NameValueCollection parameters)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xF10C20", Offset = "0xF10C20", VA = "0xF10C20")]
		internal AuthenticationResponse(NetworkCredential credentials)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xF10E08", Offset = "0xF10E08", VA = "0xF10E08")]
		internal AuthenticationResponse(AuthenticationChallenge challenge, NetworkCredential credentials, uint nonceCount)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xF10C9C", Offset = "0xF10C9C", VA = "0xF10C9C")]
		internal AuthenticationResponse(AuthenticationSchemes scheme, NameValueCollection parameters, NetworkCredential credentials, uint nonceCount)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xF113BC", Offset = "0xF113BC", VA = "0xF113BC")]
		private static string createA1(string username, string password, string realm)
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xF11428", Offset = "0xF11428", VA = "0xF11428")]
		private static string createA1(string username, string password, string realm, string nonce, string cnonce)
		{
			return null;
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xF1162C", Offset = "0xF1162C", VA = "0xF1162C")]
		private static string createA2(string method, string uri)
		{
			return null;
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xF11690", Offset = "0xF11690", VA = "0xF11690")]
		private static string createA2(string method, string uri, string entity)
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xF114BC", Offset = "0xF114BC", VA = "0xF114BC")]
		private static string hash(string value)
		{
			return null;
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xF10E78", Offset = "0xF10E78", VA = "0xF10E78")]
		private void initAsDigest()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xF11708", Offset = "0xF11708", VA = "0xF11708")]
		internal static string CreateRequestDigest(NameValueCollection parameters)
		{
			return null;
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xF11CB8", Offset = "0xF11CB8", VA = "0xF11CB8")]
		internal static AuthenticationResponse Parse(string value)
		{
			return null;
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xF11F20", Offset = "0xF11F20", VA = "0xF11F20")]
		internal static NameValueCollection ParseBasicCredentials(string value)
		{
			return null;
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xF12168", Offset = "0xF12168", VA = "0xF12168", Slot = "4")]
		internal override string ToBasicString()
		{
			return null;
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xF12298", Offset = "0xF12298", VA = "0xF12298", Slot = "5")]
		internal override string ToDigestString()
		{
			return null;
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xF12714", Offset = "0xF12714", VA = "0xF12714")]
		public IIdentity ToIdentity()
		{
			return null;
		}
	}
	[Token(Token = "0x200015F")]
	[Flags]
	public enum AuthenticationSchemes
	{
		[Token(Token = "0x4000850")]
		None = 0,
		[Token(Token = "0x4000851")]
		Digest = 1,
		[Token(Token = "0x4000852")]
		Basic = 8,
		[Token(Token = "0x4000853")]
		Anonymous = 0x8000
	}
	[Token(Token = "0x2000160")]
	internal class Chunk
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _data;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _offset;

		[Token(Token = "0x1700018A")]
		public int ReadLeft
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xF12A34", Offset = "0xF12A34", VA = "0xF12A34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xF12A08", Offset = "0xF12A08", VA = "0xF12A08")]
		public Chunk(byte[] data)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xF12A6C", Offset = "0xF12A6C", VA = "0xF12A6C")]
		public int Read(byte[] buffer, int offset, int size)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000161")]
	internal class ChunkedRequestStream : RequestStream
	{
		[Token(Token = "0x4000856")]
		private const int _bufferSize = 8192;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HttpListenerContext _context;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ChunkStream _decoder;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _disposed;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _noMoreData;

		[Token(Token = "0x1700018B")]
		public ChunkStream Decoder
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0xF13B18", Offset = "0xF13B18", VA = "0xF13B18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0xF13B20", Offset = "0xF13B20", VA = "0xF13B20")]
			set
			{
			}
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xF139F4", Offset = "0xF139F4", VA = "0xF139F4")]
		public ChunkedRequestStream(HttpListenerContext context, Stream stream, byte[] buffer, int offset, int length)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xF13B28", Offset = "0xF13B28", VA = "0xF13B28")]
		private void onRead(IAsyncResult asyncResult)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xF14484", Offset = "0xF14484", VA = "0xF14484", Slot = "19")]
		public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xF14890", Offset = "0xF14890", VA = "0xF14890", Slot = "15")]
		public override void Close()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xF148AC", Offset = "0xF148AC", VA = "0xF148AC", Slot = "20")]
		public override int EndRead(IAsyncResult asyncResult)
		{
			return default(int);
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xF14CB4", Offset = "0xF14CB4", VA = "0xF14CB4", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000162")]
	internal class ChunkStream
	{
		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _chunkRead;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _chunkSize;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Chunk> _chunks;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _gotit;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WebHeaderCollection _headers;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder _saved;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _sawCR;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private InputChunkState _state;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _trailerState;

		[Token(Token = "0x1700018C")]
		internal WebHeaderCollection Headers
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0xF12C24", Offset = "0xF12C24", VA = "0xF12C24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public int ChunkLeft
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0xF12C2C", Offset = "0xF12C2C", VA = "0xF12C2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018E")]
		public bool WantMore
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xF12C38", Offset = "0xF12C38", VA = "0xF12C38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xF12AFC", Offset = "0xF12AFC", VA = "0xF12AFC")]
		public ChunkStream(byte[] buffer, int offset, int size, WebHeaderCollection headers)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xF12B54", Offset = "0xF12B54", VA = "0xF12B54")]
		public ChunkStream(WebHeaderCollection headers)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xF12C60", Offset = "0xF12C60", VA = "0xF12C60")]
		private InputChunkState readCRLF(byte[] buffer, ref int offset, int size)
		{
			return default(InputChunkState);
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xF12E10", Offset = "0xF12E10", VA = "0xF12E10")]
		private int readFromChunks(byte[] buffer, int offset, int size)
		{
			return default(int);
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xF12F74", Offset = "0xF12F74", VA = "0xF12F74")]
		private InputChunkState readTrailer(byte[] buffer, ref int offset, int size)
		{
			return default(InputChunkState);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xF132EC", Offset = "0xF132EC", VA = "0xF132EC")]
		private static string removeChunkExtension(string input)
		{
			return null;
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xF13354", Offset = "0xF13354", VA = "0xF13354")]
		private InputChunkState setChunkSize(byte[] buffer, ref int offset, int size)
		{
			return default(InputChunkState);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xF12D94", Offset = "0xF12D94", VA = "0xF12D94")]
		private static void throwProtocolViolation(string message)
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xF1368C", Offset = "0xF1368C", VA = "0xF1368C")]
		private void write(byte[] buffer, ref int offset, int size)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xF137E8", Offset = "0xF137E8", VA = "0xF137E8")]
		private InputChunkState writeBody(byte[] buffer, ref int offset, int size)
		{
			return default(InputChunkState);
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xF13910", Offset = "0xF13910", VA = "0xF13910")]
		public int Read(byte[] buffer, int offset, int size)
		{
			return default(int);
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xF13914", Offset = "0xF13914", VA = "0xF13914")]
		public void ResetBuffer()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xF12C00", Offset = "0xF12C00", VA = "0xF12C00")]
		public void Write(byte[] buffer, int offset, int size)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xF1397C", Offset = "0xF1397C", VA = "0xF1397C")]
		public void WriteAndReadBack(byte[] buffer, int offset, int size, ref int read)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public sealed class Cookie
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static char[] _reservedCharsForName;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static char[] _reservedCharsForValue;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _comment;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Uri _commentUri;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _discard;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _domain;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime _expires;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _httpOnly;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _name;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _path;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _port;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] _ports;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _secure;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DateTime _timestamp;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _value;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _version;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6194", Offset = "0x9E6194")]
		private bool <ExactDomain>k__BackingField;

		[Token(Token = "0x1700018F")]
		internal bool ExactDomain
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0xF151A4", Offset = "0xF151A4", VA = "0xF151A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBE04", Offset = "0x9EBE04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0xF151AC", Offset = "0xF151AC", VA = "0xF151AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBE14", Offset = "0x9EBE14")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		internal int MaxAge
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0xF151B8", Offset = "0xF151B8", VA = "0xF151B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000191")]
		internal int[] Ports
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xF15304", Offset = "0xF15304", VA = "0xF15304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public string Comment
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0xF1530C", Offset = "0xF1530C", VA = "0xF1530C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xF15314", Offset = "0xF15314", VA = "0xF15314")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public Uri CommentUri
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0xF15394", Offset = "0xF15394", VA = "0xF15394")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xF1539C", Offset = "0xF1539C", VA = "0xF1539C")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public bool Discard
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xF153A4", Offset = "0xF153A4", VA = "0xF153A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xF153AC", Offset = "0xF153AC", VA = "0xF153AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public string Domain
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xF153B8", Offset = "0xF153B8", VA = "0xF153B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0xF150F8", Offset = "0xF150F8", VA = "0xF150F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public bool Expired
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xF153C0", Offset = "0xF153C0", VA = "0xF153C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0xF1548C", Offset = "0xF1548C", VA = "0xF1548C")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public DateTime Expires
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xF1553C", Offset = "0xF1553C", VA = "0xF1553C")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xF15544", Offset = "0xF15544", VA = "0xF15544")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool HttpOnly
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xF1554C", Offset = "0xF1554C", VA = "0xF1554C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xF15554", Offset = "0xF15554", VA = "0xF15554")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public string Name
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xF15560", Offset = "0xF15560", VA = "0xF15560")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0xF14E48", Offset = "0xF14E48", VA = "0xF14E48")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public string Path
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0xF15668", Offset = "0xF15668", VA = "0xF15668")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xF15034", Offset = "0xF15034", VA = "0xF15034")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public string Port
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0xF15670", Offset = "0xF15670", VA = "0xF15670")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xF15678", Offset = "0xF15678", VA = "0xF15678")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public bool Secure
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0xF15A50", Offset = "0xF15A50", VA = "0xF15A50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0xF15A58", Offset = "0xF15A58", VA = "0xF15A58")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public DateTime TimeStamp
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0xF15A64", Offset = "0xF15A64", VA = "0xF15A64")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x1700019E")]
		public string Value
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0xF15A6C", Offset = "0xF15A6C", VA = "0xF15A6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0xF14F0C", Offset = "0xF14F0C", VA = "0xF14F0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public int Version
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xF15B4C", Offset = "0xF15B4C", VA = "0xF15B4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0xF15B54", Offset = "0xF15B54", VA = "0xF15B54")]
			set
			{
			}
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xF14CFC", Offset = "0xF14CFC", VA = "0xF14CFC")]
		public Cookie()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xF14E04", Offset = "0xF14E04", VA = "0xF14E04")]
		public Cookie(string name, string value)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xF15008", Offset = "0xF15008", VA = "0xF15008")]
		public Cookie(string name, string value, string path)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xF150B4", Offset = "0xF150B4", VA = "0xF150B4")]
		public Cookie(string name, string value, string path, string domain)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xF15568", Offset = "0xF15568", VA = "0xF15568")]
		private static bool canSetName(string name, out string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xF15A74", Offset = "0xF15A74", VA = "0xF15A74")]
		private static bool canSetValue(string value, out string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xF15BFC", Offset = "0xF15BFC", VA = "0xF15BFC")]
		private static int hash(int i, int j, int k, int l, int m)
		{
			return default(int);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xF15C30", Offset = "0xF15C30", VA = "0xF15C30")]
		private string toResponseStringVersion0()
		{
			return null;
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xF15E94", Offset = "0xF15E94", VA = "0xF15E94")]
		private string toResponseStringVersion1()
		{
			return null;
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xF157F0", Offset = "0xF157F0", VA = "0xF157F0")]
		private static bool tryCreatePorts(string value, out int[] result, out string parseError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xF16228", Offset = "0xF16228", VA = "0xF16228")]
		internal string ToRequestString(Uri uri)
		{
			return null;
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xF0E4C0", Offset = "0xF0E4C0", VA = "0xF0E4C0")]
		internal string ToResponseString()
		{
			return null;
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xF16560", Offset = "0xF16560", VA = "0xF16560", Slot = "0")]
		public override bool Equals(object comparand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xF166A0", Offset = "0xF166A0", VA = "0xF166A0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xF16810", Offset = "0xF16810", VA = "0xF16810", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E1D40", Offset = "0x9E1D40")]
	public class CookieCollection : ICollection, IEnumerable
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Cookie> _list;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object _sync;

		[Token(Token = "0x170001A0")]
		internal IList<Cookie> List
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0xF16978", Offset = "0xF16978", VA = "0xF16978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		internal IEnumerable<Cookie> Sorted
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xF0E3D0", Offset = "0xF0E3D0", VA = "0xF0E3D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public int Count
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0xF0E370", Offset = "0xF0E370", VA = "0xF0E370", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A3")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0xF16980", Offset = "0xF16980", VA = "0xF16980")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public bool IsSynchronized
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0xF16988", Offset = "0xF16988", VA = "0xF16988", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public Cookie Item
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0xF16990", Offset = "0xF16990", VA = "0xF16990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public Cookie Item
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xF16A74", Offset = "0xF16A74", VA = "0xF16A74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		public object SyncRoot
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0xF16D9C", Offset = "0xF16D9C", VA = "0xF16D9C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xF16904", Offset = "0xF16904", VA = "0xF16904")]
		public CookieCollection()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xF16E64", Offset = "0xF16E64", VA = "0xF16E64")]
		private static int compareCookieWithinSort(Cookie x, Cookie y)
		{
			return default(int);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xF16F28", Offset = "0xF16F28", VA = "0xF16F28")]
		private static int compareCookieWithinSorted(Cookie x, Cookie y)
		{
			return default(int);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xF16FDC", Offset = "0xF16FDC", VA = "0xF16FDC")]
		private static CookieCollection parseRequest(string value)
		{
			return null;
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xF176F8", Offset = "0xF176F8", VA = "0xF176F8")]
		private static CookieCollection parseResponse(string value)
		{
			return null;
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xF181B4", Offset = "0xF181B4", VA = "0xF181B4")]
		private int searchCookie(Cookie cookie)
		{
			return default(int);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xF17500", Offset = "0xF17500", VA = "0xF17500")]
		private static string[] splitCookieHeaderValue(string value)
		{
			return null;
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xF18358", Offset = "0xF18358", VA = "0xF18358")]
		internal static CookieCollection Parse(string value, bool response)
		{
			return null;
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xF18364", Offset = "0xF18364", VA = "0xF18364")]
		internal void SetOrRemove(Cookie cookie)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xF1847C", Offset = "0xF1847C", VA = "0xF1847C")]
		internal void SetOrRemove(CookieCollection cookies)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xF18770", Offset = "0xF18770", VA = "0xF18770")]
		internal void Sort()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xF17600", Offset = "0xF17600", VA = "0xF17600")]
		public void Add(Cookie cookie)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xF18840", Offset = "0xF18840", VA = "0xF18840")]
		public void Add(CookieCollection cookies)
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xF18ADC", Offset = "0xF18ADC", VA = "0xF18ADC", Slot = "4")]
		public void CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xF18DB0", Offset = "0xF18DB0", VA = "0xF18DB0")]
		public void CopyTo(Cookie[] array, int index)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xF186DC", Offset = "0xF186DC", VA = "0xF186DC", Slot = "8")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public class CookieException : FormatException, ISerializable
	{
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xF15660", Offset = "0xF15660", VA = "0xF15660")]
		internal CookieException(string message)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xF18F0C", Offset = "0xF18F0C", VA = "0xF18F0C")]
		internal CookieException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xF18F14", Offset = "0xF18F14", VA = "0xF18F14")]
		protected CookieException(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xF18F1C", Offset = "0xF18F1C", VA = "0xF18F1C")]
		public CookieException()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xF18F24", Offset = "0xF18F24", VA = "0xF18F24", Slot = "10")]
		public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xF18F2C", Offset = "0xF18F2C", VA = "0xF18F2C", Slot = "4")]
		private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}
	}
	[Token(Token = "0x2000166")]
	internal sealed class EndPointListener
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string _defaultCertFolderPath;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ListenerPrefix> _all;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private X509Certificate2 _cert;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint _endpoint;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<ListenerPrefix, HttpListener> _prefixes;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _secure;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Socket _socket;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ListenerPrefix> _unhandled;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<HttpConnection, HttpConnection> _unregistered;

		[Token(Token = "0x170001A8")]
		public X509Certificate2 Certificate
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0xF1944C", Offset = "0xF1944C", VA = "0xF1944C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		public bool IsSecure
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xF19454", Offset = "0xF19454", VA = "0xF19454")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xF18F34", Offset = "0xF18F34", VA = "0xF18F34")]
		public EndPointListener(IPAddress address, int port, bool secure, string certFolderPath, X509Certificate2 defaultCert)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xF1945C", Offset = "0xF1945C", VA = "0xF1945C")]
		private static void addSpecial(List<ListenerPrefix> prefixes, ListenerPrefix prefix)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xF19614", Offset = "0xF19614", VA = "0xF19614")]
		private void checkIfRemove()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xF199CC", Offset = "0xF199CC", VA = "0xF199CC")]
		private static RSACryptoServiceProvider createRSAFromFile(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xF191DC", Offset = "0xF191DC", VA = "0xF191DC")]
		private static X509Certificate2 getCertificate(int port, string certFolderPath, X509Certificate2 defaultCert)
		{
			return null;
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xF19B84", Offset = "0xF19B84", VA = "0xF19B84")]
		private static HttpListener matchFromList(string host, string path, List<ListenerPrefix> list, out ListenerPrefix prefix)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xF19D58", Offset = "0xF19D58", VA = "0xF19D58")]
		private static void onAccept(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xF1A680", Offset = "0xF1A680", VA = "0xF1A680")]
		private static bool removeSpecial(List<ListenerPrefix> prefixes, ListenerPrefix prefix)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xF1A788", Offset = "0xF1A788", VA = "0xF1A788")]
		private HttpListener searchListener(Uri uri, out ListenerPrefix prefix)
		{
			return null;
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xF1AD08", Offset = "0xF1AD08", VA = "0xF1AD08")]
		internal static bool CertificateExists(int port, string certFolderPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xF1AE74", Offset = "0xF1AE74", VA = "0xF1AE74")]
		internal void RemoveConnection(HttpConnection connection)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xF1AFD8", Offset = "0xF1AFD8", VA = "0xF1AFD8")]
		public void AddPrefix(ListenerPrefix prefix, HttpListener listener)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xF1B324", Offset = "0xF1B324", VA = "0xF1B324")]
		public bool BindContext(HttpListenerContext context)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xF1B3B0", Offset = "0xF1B3B0", VA = "0xF1B3B0")]
		public void Close()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xF1B6BC", Offset = "0xF1B6BC", VA = "0xF1B6BC")]
		public void RemovePrefix(ListenerPrefix prefix, HttpListener listener)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xF1B950", Offset = "0xF1B950", VA = "0xF1B950")]
		public void UnbindContext(HttpListenerContext context)
		{
		}
	}
	[Token(Token = "0x2000167")]
	internal sealed class EndPointManager
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<IPAddress, Dictionary<int, EndPointListener>> _ipToEndpoints;

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xF1BC78", Offset = "0xF1BC78", VA = "0xF1BC78")]
		private EndPointManager()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xF1BC80", Offset = "0xF1BC80", VA = "0xF1BC80")]
		private static void addPrefix(string uriPrefix, HttpListener httpListener)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xF1BE80", Offset = "0xF1BE80", VA = "0xF1BE80")]
		private static EndPointListener getEndPointListener(IPAddress address, int port, HttpListener httpListener, bool secure)
		{
			return null;
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xF1C130", Offset = "0xF1C130", VA = "0xF1C130")]
		private static void removePrefix(string uriPrefix, HttpListener httpListener)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xF1C2FC", Offset = "0xF1C2FC", VA = "0xF1C2FC")]
		public static void AddListener(HttpListener httpListener)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xF1C92C", Offset = "0xF1C92C", VA = "0xF1C92C")]
		public static void AddPrefix(string uriPrefix, HttpListener httpListener)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xF196F8", Offset = "0xF196F8", VA = "0xF196F8")]
		public static void RemoveEndPoint(EndPointListener epListener, IPEndPoint endpoint)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xF1CABC", Offset = "0xF1CABC", VA = "0xF1CABC")]
		public static void RemoveListener(HttpListener httpListener)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xF1CE38", Offset = "0xF1CE38", VA = "0xF1CE38")]
		public static void RemovePrefix(string uriPrefix, HttpListener httpListener)
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class HttpBasicIdentity : GenericIdentity
	{
		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _password;

		[Token(Token = "0x170001AA")]
		public virtual string Password
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0xF1D03C", Offset = "0xF1D03C", VA = "0xF1D03C", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xF128AC", Offset = "0xF128AC", VA = "0xF128AC")]
		internal HttpBasicIdentity(string username, string password)
		{
		}
	}
	[Token(Token = "0x2000169")]
	internal sealed class HttpConnection
	{
		[Token(Token = "0x4000882")]
		private const int _bufferSize = 8192;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _buffer;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _chunked;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HttpListenerContext _context;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _contextWasBound;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder _currentLine;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputState _inputState;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RequestStream _inputStream;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HttpListener _lastListener;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineState _lineState;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EndPointListener _listener;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ResponseStream _outputStream;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _position;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ListenerPrefix _prefix;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MemoryStream _requestBuffer;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _reuses;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _secure;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Socket _socket;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Stream _stream;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private object _sync;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int _timeout;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Timer _timer;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WebSocketStream _websocketStream;

		[Token(Token = "0x170001AB")]
		public bool IsClosed
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xF1D0E0", Offset = "0xF1D0E0", VA = "0xF1D0E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AC")]
		public bool IsSecure
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0xF1D0F0", Offset = "0xF1D0F0", VA = "0xF1D0F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		public IPEndPoint LocalEndPoint
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0xF1D0F8", Offset = "0xF1D0F8", VA = "0xF1D0F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		public ListenerPrefix Prefix
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0xF1D194", Offset = "0xF1D194", VA = "0xF1D194")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0xF1B3A8", Offset = "0xF1B3A8", VA = "0xF1B3A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public IPEndPoint RemoteEndPoint
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0xF1D19C", Offset = "0xF1D19C", VA = "0xF1D19C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public int Reuses
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0xF1D238", Offset = "0xF1D238", VA = "0xF1D238")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B1")]
		public Stream Stream
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0xF1D240", Offset = "0xF1D240", VA = "0xF1D240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xF1A170", Offset = "0xF1A170", VA = "0xF1A170")]
		public HttpConnection(Socket socket, EndPointListener listener)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xF1D248", Offset = "0xF1D248", VA = "0xF1D248")]
		private void close()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xF1D4AC", Offset = "0xF1D4AC", VA = "0xF1D4AC")]
		private void closeSocket()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xF1D440", Offset = "0xF1D440", VA = "0xF1D440")]
		private void disposeRequestBuffer()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xF1D470", Offset = "0xF1D470", VA = "0xF1D470")]
		private void disposeStream()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xF1D358", Offset = "0xF1D358", VA = "0xF1D358")]
		private void disposeTimer()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xF1D044", Offset = "0xF1D044", VA = "0xF1D044")]
		private void init()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xF1D6E4", Offset = "0xF1D6E4", VA = "0xF1D6E4")]
		private static void onRead(IAsyncResult asyncResult)
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xF1E924", Offset = "0xF1E924", VA = "0xF1E924")]
		private static void onTimeout(object state)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xF1DC90", Offset = "0xF1DC90", VA = "0xF1DC90")]
		private bool processInput(byte[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xF1F14C", Offset = "0xF1F14C", VA = "0xF1F14C")]
		private string readLine(byte[] buffer, int offset, int length, ref int used)
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xF1D5F4", Offset = "0xF1D5F4", VA = "0xF1D5F4")]
		private void removeConnection()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xF1D59C", Offset = "0xF1D59C", VA = "0xF1D59C")]
		private void unbind()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xF1A494", Offset = "0xF1A494", VA = "0xF1A494")]
		internal void Close(bool force)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xF1A2F8", Offset = "0xF1A2F8", VA = "0xF1A2F8")]
		public void BeginReadRequest()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xF1FAAC", Offset = "0xF1FAAC", VA = "0xF1FAAC")]
		public void Close()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xF1FAB4", Offset = "0xF1FAB4", VA = "0xF1FAB4")]
		public RequestStream GetRequestStream(bool chunked, long contentlength)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xF1F46C", Offset = "0xF1F46C", VA = "0xF1F46C")]
		public ResponseStream GetResponseStream()
		{
			return null;
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xF1FD40", Offset = "0xF1FD40", VA = "0xF1FD40")]
		public WebSocketStream GetWebSocketStream()
		{
			return null;
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xF1DC44", Offset = "0xF1DC44", VA = "0xF1DC44")]
		public void SendError()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xF141E8", Offset = "0xF141E8", VA = "0xF141E8")]
		public void SendError(string message, int status)
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class HttpDigestIdentity : GenericIdentity
	{
		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NameValueCollection _parameters;

		[Token(Token = "0x170001B2")]
		public string Algorithm
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xF201E4", Offset = "0xF201E4", VA = "0xF201E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public string Cnonce
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xF20248", Offset = "0xF20248", VA = "0xF20248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public string Nc
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0xF202AC", Offset = "0xF202AC", VA = "0xF202AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public string Nonce
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xF20310", Offset = "0xF20310", VA = "0xF20310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public string Opaque
		{
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0xF20374", Offset = "0xF20374", VA = "0xF20374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public string Qop
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xF203D8", Offset = "0xF203D8", VA = "0xF203D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public string Realm
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xF2043C", Offset = "0xF2043C", VA = "0xF2043C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public string Response
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xF204A0", Offset = "0xF204A0", VA = "0xF204A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public string Uri
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xF20504", Offset = "0xF20504", VA = "0xF20504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xF1281C", Offset = "0xF1281C", VA = "0xF1281C")]
		internal HttpDigestIdentity(NameValueCollection parameters)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xF20568", Offset = "0xF20568", VA = "0xF20568")]
		internal bool IsValid(string password, string realm, string method, string entity)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200016B")]
	internal class HttpHeaderInfo
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HttpHeaderType _type;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E61A4", Offset = "0x9E61A4")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170001BB")]
		internal bool IsMultiValueInRequest
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xF20728", Offset = "0xF20728", VA = "0xF20728")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BC")]
		internal bool IsMultiValueInResponse
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0xF20734", Offset = "0xF20734", VA = "0xF20734")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BD")]
		public bool IsRequest
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0xF20740", Offset = "0xF20740", VA = "0xF20740")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BE")]
		public bool IsResponse
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0xF2074C", Offset = "0xF2074C", VA = "0xF2074C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BF")]
		public string Name
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xF20758", Offset = "0xF20758", VA = "0xF20758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBE24", Offset = "0x9EBE24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0xF20760", Offset = "0xF20760", VA = "0xF20760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBE34", Offset = "0x9EBE34")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public HttpHeaderType Type
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xF20768", Offset = "0xF20768", VA = "0xF20768")]
			get
			{
				return default(HttpHeaderType);
			}
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0xF20770", Offset = "0xF20770", VA = "0xF20770")]
			set
			{
			}
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xF20720", Offset = "0xF20720", VA = "0xF20720")]
		public HttpHeaderInfo()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xF20778", Offset = "0xF20778", VA = "0xF20778")]
		public bool IsMultiValue(bool response)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xF207A8", Offset = "0xF207A8", VA = "0xF207A8")]
		public bool IsRestricted(bool response)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200016C")]
	[Flags]
	internal enum HttpHeaderType
	{
		[Token(Token = "0x400089D")]
		Unspecified = 0,
		[Token(Token = "0x400089E")]
		Request = 1,
		[Token(Token = "0x400089F")]
		Response = 2,
		[Token(Token = "0x40008A0")]
		Restricted = 4,
		[Token(Token = "0x40008A1")]
		MultiValue = 8,
		[Token(Token = "0x40008A2")]
		MultiValueInRequest = 0x10,
		[Token(Token = "0x40008A3")]
		MultiValueInResponse = 0x20
	}
	[Token(Token = "0x200016D")]
	public sealed class HttpListener : IDisposable
	{
		[Serializable]
		[Token(Token = "0x2000376")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2BC4", Offset = "0x9E2BC4")]
		private sealed class <>c
		{
			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IIdentity, NetworkCredential> <>9__45_0;

			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xF228C4", Offset = "0xF228C4", VA = "0xF228C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xF228CC", Offset = "0xF228CC", VA = "0xF228CC")]
			internal NetworkCredential <get_UserCredentialsFinder>b__45_0(IIdentity identity)
			{
				return null;
			}
		}

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AuthenticationSchemes _authSchemes;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<HttpListenerRequest, AuthenticationSchemes> _authSchemeSelector;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _certFolderPath;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<HttpConnection, HttpConnection> _connections;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<HttpListenerContext> _contextQueue;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Func<IIdentity, NetworkCredential> _credentialsFinder;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private X509Certificate2 _defaultCert;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _disposed;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _ignoreWriteExceptions;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool _listening;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HttpListenerPrefixCollection _prefixes;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _realm;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<HttpListenerContext, HttpListenerContext> _registry;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<ListenerAsyncResult> _waitQueue;

		[Token(Token = "0x170001C1")]
		internal bool IsDisposed
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xF20908", Offset = "0xF20908", VA = "0xF20908")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C2")]
		public AuthenticationSchemes AuthenticationSchemes
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xF20910", Offset = "0xF20910", VA = "0xF20910")]
			get
			{
				return default(AuthenticationSchemes);
			}
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0xF209E8", Offset = "0xF209E8", VA = "0xF209E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public Func<HttpListenerRequest, AuthenticationSchemes> AuthenticationSchemeSelector
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0xF20A10", Offset = "0xF20A10", VA = "0xF20A10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xF20A34", Offset = "0xF20A34", VA = "0xF20A34")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public string CertificateFolderPath
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xF1C0E8", Offset = "0xF1C0E8", VA = "0xF1C0E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xF20A5C", Offset = "0xF20A5C", VA = "0xF20A5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public X509Certificate2 DefaultCertificate
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xF1C10C", Offset = "0xF1C10C", VA = "0xF1C10C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0xF20A84", Offset = "0xF20A84", VA = "0xF20A84")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public bool IgnoreWriteExceptions
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0xF1FD1C", Offset = "0xF1FD1C", VA = "0xF1FD1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xF20AAC", Offset = "0xF20AAC", VA = "0xF20AAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public bool IsListening
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0xF20AD8", Offset = "0xF20AD8", VA = "0xF20AD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C8")]
		public static bool IsSupported
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0xF20AE0", Offset = "0xF20AE0", VA = "0xF20AE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C9")]
		public HttpListenerPrefixCollection Prefixes
		{
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0xF1C874", Offset = "0xF1C874", VA = "0xF1C874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public string Realm
		{
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0xF20AE8", Offset = "0xF20AE8", VA = "0xF20AE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0xF20B5C", Offset = "0xF20B5C", VA = "0xF20B5C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public bool UnsafeConnectionNtlmAuthentication
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0xF20B84", Offset = "0xF20B84", VA = "0xF20B84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0xF20BEC", Offset = "0xF20BEC", VA = "0xF20BEC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public Func<IIdentity, NetworkCredential> UserCredentialsFinder
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0xF20C54", Offset = "0xF20C54", VA = "0xF20C54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0xF20D44", Offset = "0xF20D44", VA = "0xF20D44")]
			set
			{
			}
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xF207CC", Offset = "0xF207CC", VA = "0xF207CC")]
		public HttpListener()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xF20D6C", Offset = "0xF20D6C", VA = "0xF20D6C")]
		private void cleanup(bool force)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xF213D0", Offset = "0xF213D0", VA = "0xF213D0")]
		private void cleanupConnections()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xF21128", Offset = "0xF21128", VA = "0xF21128")]
		private void cleanupContextRegistry()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xF21664", Offset = "0xF21664", VA = "0xF21664")]
		private void cleanupWaitQueue()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xF2196C", Offset = "0xF2196C", VA = "0xF2196C")]
		private void close(bool force)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xF219E8", Offset = "0xF219E8", VA = "0xF219E8")]
		private HttpListenerContext getContextFromQueue()
		{
			return null;
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xF20ECC", Offset = "0xF20ECC", VA = "0xF20ECC")]
		private void sendServiceUnavailable()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xF1E38C", Offset = "0xF1E38C", VA = "0xF1E38C")]
		internal void AddConnection(HttpConnection connection)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xF21AC4", Offset = "0xF21AC4", VA = "0xF21AC4")]
		internal ListenerAsyncResult BeginGetContext(ListenerAsyncResult asyncResult)
		{
			return null;
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xF20934", Offset = "0xF20934", VA = "0xF20934")]
		internal void CheckDisposed()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xF1E4F4", Offset = "0xF1E4F4", VA = "0xF1E4F4")]
		internal void RegisterContext(HttpListenerContext context)
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xF1F308", Offset = "0xF1F308", VA = "0xF1F308")]
		internal void RemoveConnection(HttpConnection connection)
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xF21EB0", Offset = "0xF21EB0", VA = "0xF21EB0")]
		internal AuthenticationSchemes SelectAuthenticationScheme(HttpListenerContext context)
		{
			return default(AuthenticationSchemes);
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xF1B964", Offset = "0xF1B964", VA = "0xF1B964")]
		internal void UnregisterContext(HttpListenerContext context)
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xF21F5C", Offset = "0xF21F5C", VA = "0xF21F5C")]
		public void Abort()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xF21F94", Offset = "0xF21F94", VA = "0xF21F94")]
		public IAsyncResult BeginGetContext(AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xF22010", Offset = "0xF22010", VA = "0xF22010")]
		public void Close()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xF22048", Offset = "0xF22048", VA = "0xF22048")]
		public HttpListenerContext EndGetContext(IAsyncResult asyncResult)
		{
			return null;
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xF22690", Offset = "0xF22690", VA = "0xF22690")]
		public HttpListenerContext GetContext()
		{
			return null;
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xF2271C", Offset = "0xF2271C", VA = "0xF2271C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xF2279C", Offset = "0xF2279C", VA = "0xF2279C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xF22828", Offset = "0xF22828", VA = "0xF22828", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public sealed class HttpListenerContext
	{
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HttpConnection _connection;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _error;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _errorStatus;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HttpListenerRequest _request;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HttpListenerResponse _response;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPrincipal _user;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal HttpListener Listener;

		[Token(Token = "0x170001CD")]
		internal HttpConnection Connection
		{
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0xF141E0", Offset = "0xF141E0", VA = "0xF141E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		internal string ErrorMessage
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0xF1FE7C", Offset = "0xF1FE7C", VA = "0xF1FE7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0xF1F300", Offset = "0xF1F300", VA = "0xF1F300")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		internal int ErrorStatus
		{
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0xF1FE84", Offset = "0xF1FE84", VA = "0xF1FE84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0xF22A50", Offset = "0xF22A50", VA = "0xF22A50")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		internal bool HasError
		{
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0xF1DED8", Offset = "0xF1DED8", VA = "0xF1DED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D1")]
		public HttpListenerRequest Request
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0xF13B08", Offset = "0xF13B08", VA = "0xF13B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		public HttpListenerResponse Response
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xF1F600", Offset = "0xF1F600", VA = "0xF1F600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public IPrincipal User
		{
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0xF22A58", Offset = "0xF22A58", VA = "0xF22A58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xF1D640", Offset = "0xF1D640", VA = "0xF1D640")]
		internal HttpListenerContext(HttpConnection connection)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xF2237C", Offset = "0xF2237C", VA = "0xF2237C")]
		internal void SetUser(AuthenticationSchemes scheme, string realm, Func<IIdentity, NetworkCredential> credentialsFinder)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xF22A68", Offset = "0xF22A68", VA = "0xF22A68")]
		public HttpListenerWebSocketContext AcceptWebSocket(string protocol, Logger logger)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200016F")]
	public class HttpListenerException : Win32Exception
	{
		[Token(Token = "0x170001D4")]
		public override int ErrorCode
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0xF22D0C", Offset = "0xF22D0C", VA = "0xF22D0C", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xF22B9C", Offset = "0xF22B9C", VA = "0xF22B9C")]
		protected HttpListenerException(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xF22C2C", Offset = "0xF22C2C", VA = "0xF22C2C")]
		public HttpListenerException()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xF22C94", Offset = "0xF22C94", VA = "0xF22C94")]
		public HttpListenerException(int errorCode)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xF14C34", Offset = "0xF14C34", VA = "0xF14C34")]
		public HttpListenerException(int errorCode, string message)
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class HttpListenerPrefixCollection : ICollection<string>, IEnumerable<string>, IEnumerable
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HttpListener _listener;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> _prefixes;

		[Token(Token = "0x170001D5")]
		public int Count
		{
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0xF21E50", Offset = "0xF21E50", VA = "0xF21E50", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D6")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0xF22D88", Offset = "0xF22D88", VA = "0xF22D88", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D7")]
		public bool IsSynchronized
		{
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xF22D90", Offset = "0xF22D90", VA = "0xF22D90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xF22D14", Offset = "0xF22D14", VA = "0xF22D14")]
		private HttpListenerPrefixCollection()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xF208E0", Offset = "0xF208E0", VA = "0xF208E0")]
		internal HttpListenerPrefixCollection(HttpListener listener)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xF22D98", Offset = "0xF22D98", VA = "0xF22D98", Slot = "6")]
		public void Add(string uriPrefix)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xF22EB0", Offset = "0xF22EB0", VA = "0xF22EB0", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xF22F78", Offset = "0xF22F78", VA = "0xF22F78", Slot = "8")]
		public bool Contains(string uriPrefix)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xF23048", Offset = "0xF23048", VA = "0xF23048")]
		public void CopyTo(Array array, int offset)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xF2312C", Offset = "0xF2312C", VA = "0xF2312C", Slot = "9")]
		public void CopyTo(string[] array, int offset)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xF1C898", Offset = "0xF1C898", VA = "0xF1C898", Slot = "11")]
		public IEnumerator<string> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xF231BC", Offset = "0xF231BC", VA = "0xF231BC", Slot = "10")]
		public bool Remove(string uriPrefix)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xF232E8", Offset = "0xF232E8", VA = "0xF232E8", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000171")]
	public sealed class HttpListenerRequest
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] _100continue;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string[] _acceptTypes;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _chunked;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Encoding _contentEncoding;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long _contentLength;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _contentLengthWasSet;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HttpListenerContext _context;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CookieCollection _cookies;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WebHeaderCollection _headers;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Guid _identifier;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Stream _inputStream;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _keepAlive;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _keepAliveWasSet;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _method;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NameValueCollection _queryString;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Uri _referer;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _uri;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Uri _url;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string[] _userLanguages;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Version _version;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _websocketRequest;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool _websocketRequestWasSet;

		[Token(Token = "0x170001D8")]
		public string[] AcceptTypes
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xF2337C", Offset = "0xF2337C", VA = "0xF2337C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public int ClientCertificateError
		{
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xF23384", Offset = "0xF23384", VA = "0xF23384")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DA")]
		public Encoding ContentEncoding
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xF2338C", Offset = "0xF2338C", VA = "0xF2338C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public long ContentLength64
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xF233B8", Offset = "0xF233B8", VA = "0xF233B8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001DC")]
		public string ContentType
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xF233C0", Offset = "0xF233C0", VA = "0xF233C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public CookieCollection Cookies
		{
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0xF23424", Offset = "0xF23424", VA = "0xF23424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public bool HasEntityBody
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xF2345C", Offset = "0xF2345C", VA = "0xF2345C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DF")]
		public NameValueCollection Headers
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xF13B10", Offset = "0xF13B10", VA = "0xF13B10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public string HttpMethod
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xF22A60", Offset = "0xF22A60", VA = "0xF22A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public Stream InputStream
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xF23480", Offset = "0xF23480", VA = "0xF23480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public bool IsAuthenticated
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xF23554", Offset = "0xF23554", VA = "0xF23554")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		public bool IsLocal
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0xF23698", Offset = "0xF23698", VA = "0xF23698")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		public bool IsSecureConnection
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xF2370C", Offset = "0xF2370C", VA = "0xF2370C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E5")]
		public bool IsWebSocketRequest
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xF23748", Offset = "0xF23748", VA = "0xF23748")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E6")]
		public bool KeepAlive
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xF1F608", Offset = "0xF1F608", VA = "0xF1F608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E7")]
		public IPEndPoint LocalEndPoint
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0xF23888", Offset = "0xF23888", VA = "0xF23888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		public Version ProtocolVersion
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xF238C4", Offset = "0xF238C4", VA = "0xF238C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public NameValueCollection QueryString
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xF238CC", Offset = "0xF238CC", VA = "0xF238CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public string RawUrl
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xF23CA8", Offset = "0xF23CA8", VA = "0xF23CA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		public IPEndPoint RemoteEndPoint
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xF236D0", Offset = "0xF236D0", VA = "0xF236D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public Guid RequestTraceIdentifier
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xF23CD8", Offset = "0xF23CD8", VA = "0xF23CD8")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x170001ED")]
		public Uri Url
		{
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xF1B3A0", Offset = "0xF1B3A0", VA = "0xF1B3A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public Uri UrlReferrer
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0xF23CE4", Offset = "0xF23CE4", VA = "0xF23CE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public string UserAgent
		{
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xF23CEC", Offset = "0xF23CEC", VA = "0xF23CEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public string UserHostAddress
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xF23D50", Offset = "0xF23D50", VA = "0xF23D50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public string UserHostName
		{
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xF23D84", Offset = "0xF23D84", VA = "0xF23D84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public string[] UserLanguages
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xF23DE8", Offset = "0xF23DE8", VA = "0xF23DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xF228D4", Offset = "0xF228D4", VA = "0xF228D4")]
		internal HttpListenerRequest(HttpListenerContext context)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xF23DF0", Offset = "0xF23DF0", VA = "0xF23DF0")]
		private static bool tryCreateVersion(string version, out Version result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xF1EC20", Offset = "0xF1EC20", VA = "0xF1EC20")]
		internal void AddHeader(string header)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xF1DEE8", Offset = "0xF1DEE8", VA = "0xF1DEE8")]
		internal void FinishInitialization()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xF1F7D4", Offset = "0xF1F7D4", VA = "0xF1F7D4")]
		internal bool FlushInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xF1E9BC", Offset = "0xF1E9BC", VA = "0xF1E9BC")]
		internal void SetRequestLine(string requestLine)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xF24234", Offset = "0xF24234", VA = "0xF24234")]
		public IAsyncResult BeginGetClientCertificate(AsyncCallback requestCallback, object state)
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xF2429C", Offset = "0xF2429C", VA = "0xF2429C")]
		public X509Certificate2 EndGetClientCertificate(IAsyncResult asyncResult)
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xF24304", Offset = "0xF24304", VA = "0xF24304")]
		public X509Certificate2 GetClientCertificate()
		{
			return null;
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xF2436C", Offset = "0xF2436C", VA = "0xF2436C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000172")]
	public sealed class HttpListenerResponse : IDisposable
	{
		[Token(Token = "0x2000377")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2BD4", Offset = "0x9E2BD4")]
		private sealed class <findCookie>d__63 : IEnumerable<Cookie>, IEnumerable, IEnumerator<Cookie>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Cookie <>2__current;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Cookie cookie;

			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Cookie <>3__cookie;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public HttpListenerResponse <>4__this;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <name>5__2;

			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <domain>5__3;

			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <path>5__4;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator <>7__wrap4;

			[Token(Token = "0x17000469")]
			private Cookie System.Collections.Generic.IEnumerator<WebSocketSharp.Net.Cookie>.Current
			{
				[Token(Token = "0x6001AE7")]
				[Address(RVA = "0xF26164", Offset = "0xF26164", VA = "0xF26164", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AE9")]
				[Address(RVA = "0xF261D4", Offset = "0xF261D4", VA = "0xF261D4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xF24F8C", Offset = "0xF24F8C", VA = "0xF24F8C")]
			[DebuggerHidden]
			public <findCookie>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xF25D08", Offset = "0xF25D08", VA = "0xF25D08", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xF25DF0", Offset = "0xF25DF0", VA = "0xF25DF0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xF25D24", Offset = "0xF25D24", VA = "0xF25D24")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xF2616C", Offset = "0xF2616C", VA = "0xF2616C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xF261DC", Offset = "0xF261DC", VA = "0xF261DC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<Cookie> System.Collections.Generic.IEnumerable<WebSocketSharp.Net.Cookie>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xF2629C", Offset = "0xF2629C", VA = "0xF2629C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2BE4", Offset = "0x9E2BE4")]
		private sealed class <>c__DisplayClass70_0
		{
			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stream output;

			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HttpListenerResponse <>4__this;

			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xF25AB0", Offset = "0xF25AB0", VA = "0xF25AB0")]
			public <>c__DisplayClass70_0()
			{
			}

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xF25CA0", Offset = "0xF25CA0", VA = "0xF25CA0")]
			internal void <Close>b__0(IAsyncResult ar)
			{
			}
		}

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _chunked;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Encoding _contentEncoding;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long _contentLength;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _contentLengthSet;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _contentType;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HttpListenerContext _context;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CookieCollection _cookies;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _disposed;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _forceCloseChunked;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WebHeaderCollection _headers;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _headersSent;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _keepAlive;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _location;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ResponseStream _outputStream;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _statusCode;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _statusDescription;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Version _version;

		[Token(Token = "0x170001F3")]
		internal bool CloseConnection
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xF1F75C", Offset = "0xF1F75C", VA = "0xF1F75C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F4")]
		internal bool ForceCloseChunked
		{
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xF1FAA4", Offset = "0xF1FAA4", VA = "0xF1FAA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F5")]
		internal bool HeadersSent
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xF24504", Offset = "0xF24504", VA = "0xF24504")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F6")]
		public Encoding ContentEncoding
		{
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xF2002C", Offset = "0xF2002C", VA = "0xF2002C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xF245C0", Offset = "0xF245C0", VA = "0xF245C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public long ContentLength64
		{
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xF246DC", Offset = "0xF246DC", VA = "0xF246DC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xF24700", Offset = "0xF24700", VA = "0xF24700")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public string ContentType
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xF247B4", Offset = "0xF247B4", VA = "0xF247B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xF1FF44", Offset = "0xF1FF44", VA = "0xF1FF44")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public CookieCollection Cookies
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xF247D8", Offset = "0xF247D8", VA = "0xF247D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xF24848", Offset = "0xF24848", VA = "0xF24848")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public WebHeaderCollection Headers
		{
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0xF24870", Offset = "0xF24870", VA = "0xF24870")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xF24894", Offset = "0xF24894", VA = "0xF24894")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public bool KeepAlive
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xF24934", Offset = "0xF24934", VA = "0xF24934")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xF24958", Offset = "0xF24958", VA = "0xF24958")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public Stream OutputStream
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0xF24984", Offset = "0xF24984", VA = "0xF24984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public Version ProtocolVersion
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xF249D8", Offset = "0xF249D8", VA = "0xF249D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0xF249FC", Offset = "0xF249FC", VA = "0xF249FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public string RedirectLocation
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xF24B60", Offset = "0xF24B60", VA = "0xF24B60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0xF24B84", Offset = "0xF24B84", VA = "0xF24B84")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public bool SendChunked
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0xF24C48", Offset = "0xF24C48", VA = "0xF24C48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0xF1FCF0", Offset = "0xF1FCF0", VA = "0xF1FCF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public int StatusCode
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xF24C50", Offset = "0xF24C50", VA = "0xF24C50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0xF1FE8C", Offset = "0xF1FE8C", VA = "0xF1FE8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public string StatusDescription
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xF24C74", Offset = "0xF24C74", VA = "0xF24C74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xF24C98", Offset = "0xF24C98", VA = "0xF24C98")]
			set
			{
			}
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xF22984", Offset = "0xF22984", VA = "0xF22984")]
		internal HttpListenerResponse(HttpListenerContext context)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xF24CF4", Offset = "0xF24CF4", VA = "0xF24CF4")]
		private bool canAddOrUpdate(Cookie cookie)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xF2450C", Offset = "0xF2450C", VA = "0xF2450C")]
		private void checkDisposed()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xF245E8", Offset = "0xF245E8", VA = "0xF245E8")]
		private void checkDisposedOrHeadersSent()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF24F40", Offset = "0xF24F40", VA = "0xF24F40")]
		private void close(bool force)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF24E98", Offset = "0xF24E98", VA = "0xF24E98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBE44", Offset = "0x9EBE44")]
		private IEnumerable<Cookie> findCookie(Cookie cookie)
		{
			return null;
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF24FC4", Offset = "0xF24FC4", VA = "0xF24FC4")]
		internal void SendHeaders(bool closing, MemoryStream stream)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xF259AC", Offset = "0xF259AC", VA = "0xF259AC")]
		public void Abort()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF259C0", Offset = "0xF259C0", VA = "0xF259C0")]
		public void AddHeader(string name, string value)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xF25A18", Offset = "0xF25A18", VA = "0xF25A18")]
		public void AppendCookie(Cookie cookie)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xF25A58", Offset = "0xF25A58", VA = "0xF25A58")]
		public void AppendHeader(string name, string value)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xF21AB0", Offset = "0xF21AB0", VA = "0xF21AB0")]
		public void Close()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xF20050", Offset = "0xF20050", VA = "0xF20050")]
		public void Close(byte[] responseEntity, bool willBlock)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xF25AB8", Offset = "0xF25AB8", VA = "0xF25AB8")]
		public void CopyFrom(HttpListenerResponse templateResponse)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xF25B60", Offset = "0xF25B60", VA = "0xF25B60")]
		public void Redirect(string url)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xF25B8C", Offset = "0xF25B8C", VA = "0xF25B8C")]
		public void SetCookie(Cookie cookie)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xF25C8C", Offset = "0xF25C8C", VA = "0xF25C8C", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public enum HttpStatusCode
	{
		[Token(Token = "0x40008E3")]
		Continue = 100,
		[Token(Token = "0x40008E4")]
		SwitchingProtocols = 101,
		[Token(Token = "0x40008E5")]
		OK = 200,
		[Token(Token = "0x40008E6")]
		Created = 201,
		[Token(Token = "0x40008E7")]
		Accepted = 202,
		[Token(Token = "0x40008E8")]
		NonAuthoritativeInformation = 203,
		[Token(Token = "0x40008E9")]
		NoContent = 204,
		[Token(Token = "0x40008EA")]
		ResetContent = 205,
		[Token(Token = "0x40008EB")]
		PartialContent = 206,
		[Token(Token = "0x40008EC")]
		MultipleChoices = 300,
		[Token(Token = "0x40008ED")]
		Ambiguous = 300,
		[Token(Token = "0x40008EE")]
		MovedPermanently = 301,
		[Token(Token = "0x40008EF")]
		Moved = 301,
		[Token(Token = "0x40008F0")]
		Found = 302,
		[Token(Token = "0x40008F1")]
		Redirect = 302,
		[Token(Token = "0x40008F2")]
		SeeOther = 303,
		[Token(Token = "0x40008F3")]
		RedirectMethod = 303,
		[Token(Token = "0x40008F4")]
		NotModified = 304,
		[Token(Token = "0x40008F5")]
		UseProxy = 305,
		[Token(Token = "0x40008F6")]
		Unused = 306,
		[Token(Token = "0x40008F7")]
		TemporaryRedirect = 307,
		[Token(Token = "0x40008F8")]
		RedirectKeepVerb = 307,
		[Token(Token = "0x40008F9")]
		BadRequest = 400,
		[Token(Token = "0x40008FA")]
		Unauthorized = 401,
		[Token(Token = "0x40008FB")]
		PaymentRequired = 402,
		[Token(Token = "0x40008FC")]
		Forbidden = 403,
		[Token(Token = "0x40008FD")]
		NotFound = 404,
		[Token(Token = "0x40008FE")]
		MethodNotAllowed = 405,
		[Token(Token = "0x40008FF")]
		NotAcceptable = 406,
		[Token(Token = "0x4000900")]
		ProxyAuthenticationRequired = 407,
		[Token(Token = "0x4000901")]
		RequestTimeout = 408,
		[Token(Token = "0x4000902")]
		Conflict = 409,
		[Token(Token = "0x4000903")]
		Gone = 410,
		[Token(Token = "0x4000904")]
		LengthRequired = 411,
		[Token(Token = "0x4000905")]
		PreconditionFailed = 412,
		[Token(Token = "0x4000906")]
		RequestEntityTooLarge = 413,
		[Token(Token = "0x4000907")]
		RequestUriTooLong = 414,
		[Token(Token = "0x4000908")]
		UnsupportedMediaType = 415,
		[Token(Token = "0x4000909")]
		RequestedRangeNotSatisfiable = 416,
		[Token(Token = "0x400090A")]
		ExpectationFailed = 417,
		[Token(Token = "0x400090B")]
		InternalServerError = 500,
		[Token(Token = "0x400090C")]
		NotImplemented = 501,
		[Token(Token = "0x400090D")]
		BadGateway = 502,
		[Token(Token = "0x400090E")]
		ServiceUnavailable = 503,
		[Token(Token = "0x400090F")]
		GatewayTimeout = 504,
		[Token(Token = "0x4000910")]
		HttpVersionNotSupported = 505
	}
	[Token(Token = "0x2000174")]
	internal class HttpStreamAsyncResult : IAsyncResult
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AsyncCallback _callback;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _completed;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object _state;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object _sync;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ManualResetEvent _waitHandle;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal byte[] Buffer;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal int Count;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal Exception Error;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int Offset;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal int SyncRead;

		[Token(Token = "0x17000202")]
		public object AsyncState
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0xF262A0", Offset = "0xF262A0", VA = "0xF262A0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public WaitHandle AsyncWaitHandle
		{
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xF14B2C", Offset = "0xF14B2C", VA = "0xF14B2C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public bool CompletedSynchronously
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xF262A8", Offset = "0xF262A8", VA = "0xF262A8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000205")]
		public bool IsCompleted
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xF14A7C", Offset = "0xF14A7C", VA = "0xF14A7C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xF1480C", Offset = "0xF1480C", VA = "0xF1480C")]
		public HttpStreamAsyncResult(AsyncCallback callback, object state)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xF140A4", Offset = "0xF140A4", VA = "0xF140A4")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xF1447C", Offset = "0xF1447C", VA = "0xF1447C")]
		public void Complete(Exception exception)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xF262BC", Offset = "0xF262BC", VA = "0xF262BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBEA8", Offset = "0x9EBEA8")]
		private void <Complete>b__19_0(IAsyncResult ar)
		{
		}
	}
	[Token(Token = "0x2000175")]
	internal sealed class HttpUtility
	{
		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, char> _entities;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static char[] _hexChars;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static object _sync;

		[Token(Token = "0x17000206")]
		private static Dictionary<string, char> Entities
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xF262F4", Offset = "0xF262F4", VA = "0xF262F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xF29814", Offset = "0xF29814", VA = "0xF29814")]
		private static int getChar(byte[] bytes, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xF2999C", Offset = "0xF2999C", VA = "0xF2999C")]
		private static int getChar(string s, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xF29AC8", Offset = "0xF29AC8", VA = "0xF29AC8")]
		private static char[] getChars(MemoryStream buffer, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xF2994C", Offset = "0xF2994C", VA = "0xF2994C")]
		private static int getInt(byte b)
		{
			return default(int);
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xF2644C", Offset = "0xF2644C", VA = "0xF2644C")]
		private static void initEntities()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xF29B58", Offset = "0xF29B58", VA = "0xF29B58")]
		private static bool notEncoded(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xF29B98", Offset = "0xF29B98", VA = "0xF29B98")]
		private static void urlEncodeChar(char c, Stream result, bool isUnicode)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xF29F64", Offset = "0xF29F64", VA = "0xF29F64")]
		private static void urlPathEncodeChar(char c, Stream result)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xF2A184", Offset = "0xF2A184", VA = "0xF2A184")]
		private static void writeCharBytes(IList buffer, char c, Encoding encoding)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xF23EE4", Offset = "0xF23EE4", VA = "0xF23EE4")]
		internal static Uri CreateRequestUrl(string requestUri, string host, bool websocketRequest, bool secure)
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xF2397C", Offset = "0xF2397C", VA = "0xF2397C")]
		internal static NameValueCollection ParseQueryStringInternally(string query, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xF2A744", Offset = "0xF2A744", VA = "0xF2A744")]
		internal static string UrlDecodeInternally(byte[] bytes, int offset, int count, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xF2ACAC", Offset = "0xF2ACAC", VA = "0xF2ACAC")]
		internal static byte[] UrlDecodeToBytesInternally(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xF2AF14", Offset = "0xF2AF14", VA = "0xF2AF14")]
		internal static byte[] UrlEncodeToBytesInternally(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xF2B118", Offset = "0xF2B118", VA = "0xF2B118")]
		internal static byte[] UrlEncodeUnicodeToBytesInternally(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xF2B300", Offset = "0xF2B300", VA = "0xF2B300")]
		public static string HtmlAttributeEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xF2B4E8", Offset = "0xF2B4E8", VA = "0xF2B4E8")]
		public static void HtmlAttributeEncode(string s, TextWriter output)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xF2B5B8", Offset = "0xF2B5B8", VA = "0xF2B5B8")]
		public static string HtmlDecode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xF2BD78", Offset = "0xF2BD78", VA = "0xF2BD78")]
		public static void HtmlDecode(string s, TextWriter output)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xF2BE48", Offset = "0xF2BE48", VA = "0xF2BE48")]
		public static string HtmlEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xF2C124", Offset = "0xF2C124", VA = "0xF2C124")]
		public static void HtmlEncode(string s, TextWriter output)
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xF2C1F4", Offset = "0xF2C1F4", VA = "0xF2C1F4")]
		public static NameValueCollection ParseQueryString(string query)
		{
			return null;
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xF2C2B4", Offset = "0xF2C2B4", VA = "0xF2C2B4")]
		public static NameValueCollection ParseQueryString(string query, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xF1AC90", Offset = "0xF1AC90", VA = "0xF1AC90")]
		public static string UrlDecode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xF2A3D0", Offset = "0xF2A3D0", VA = "0xF2A3D0")]
		public static string UrlDecode(string s, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xF2C390", Offset = "0xF2C390", VA = "0xF2C390")]
		public static string UrlDecode(byte[] bytes, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xF2C454", Offset = "0xF2C454", VA = "0xF2C454")]
		public static string UrlDecode(byte[] bytes, int offset, int count, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xF2C5A8", Offset = "0xF2C5A8", VA = "0xF2C5A8")]
		public static byte[] UrlDecodeToBytes(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xF2C634", Offset = "0xF2C634", VA = "0xF2C634")]
		public static byte[] UrlDecodeToBytes(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xF2C6AC", Offset = "0xF2C6AC", VA = "0xF2C6AC")]
		public static byte[] UrlDecodeToBytes(string s, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xF2C7A0", Offset = "0xF2C7A0", VA = "0xF2C7A0")]
		public static byte[] UrlDecodeToBytes(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xF2C8D0", Offset = "0xF2C8D0", VA = "0xF2C8D0")]
		public static string UrlEncode(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xF2C9B4", Offset = "0xF2C9B4", VA = "0xF2C9B4")]
		public static string UrlEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xF2CA2C", Offset = "0xF2CA2C", VA = "0xF2CA2C")]
		public static string UrlEncode(string s, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xF2CC6C", Offset = "0xF2CC6C", VA = "0xF2CC6C")]
		public static string UrlEncode(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xF2CE78", Offset = "0xF2CE78", VA = "0xF2CE78")]
		public static byte[] UrlEncodeToBytes(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xF2CF04", Offset = "0xF2CF04", VA = "0xF2CF04")]
		public static byte[] UrlEncodeToBytes(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xF2CF7C", Offset = "0xF2CF7C", VA = "0xF2CF7C")]
		public static byte[] UrlEncodeToBytes(string s, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xF2CD48", Offset = "0xF2CD48", VA = "0xF2CD48")]
		public static byte[] UrlEncodeToBytes(byte[] bytes, int offset, int count)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xF2D070", Offset = "0xF2D070", VA = "0xF2D070")]
		public static string UrlEncodeUnicode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xF2D134", Offset = "0xF2D134", VA = "0xF2D134")]
		public static byte[] UrlEncodeUnicodeToBytes(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xF2D1D4", Offset = "0xF2D1D4", VA = "0xF2D1D4")]
		public static string UrlPathEncode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xF2D3E8", Offset = "0xF2D3E8", VA = "0xF2D3E8")]
		public HttpUtility()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class HttpVersion
	{
		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version Version10;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Version Version11;

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x11E8C18", Offset = "0x11E8C18", VA = "0x11E8C18")]
		public HttpVersion()
		{
		}
	}
	[Token(Token = "0x2000177")]
	internal enum InputChunkState
	{
		[Token(Token = "0x4000921")]
		None,
		[Token(Token = "0x4000922")]
		Body,
		[Token(Token = "0x4000923")]
		BodyFinished,
		[Token(Token = "0x4000924")]
		Trailer
	}
	[Token(Token = "0x2000178")]
	internal enum InputState
	{
		[Token(Token = "0x4000926")]
		RequestLine,
		[Token(Token = "0x4000927")]
		Headers
	}
	[Token(Token = "0x2000179")]
	internal enum LineState
	{
		[Token(Token = "0x4000929")]
		None,
		[Token(Token = "0x400092A")]
		CR,
		[Token(Token = "0x400092B")]
		LF
	}
	[Token(Token = "0x200017A")]
	internal class ListenerAsyncResult : IAsyncResult
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AsyncCallback _callback;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _completed;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HttpListenerContext _context;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Exception _exception;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ManualResetEvent _waitHandle;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object _state;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private object _sync;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _syncCompleted;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		internal bool EndCalled;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		internal bool InGet;

		[Token(Token = "0x17000207")]
		public object AsyncState
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x11E8D48", Offset = "0x11E8D48", VA = "0x11E8D48", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public WaitHandle AsyncWaitHandle
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x11E8D50", Offset = "0x11E8D50", VA = "0x11E8D50", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public bool CompletedSynchronously
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x11E8E58", Offset = "0x11E8E58", VA = "0x11E8E58", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020A")]
		public bool IsCompleted
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x11E8E60", Offset = "0x11E8E60", VA = "0x11E8E60", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x11E8CC4", Offset = "0x11E8CC4", VA = "0x11E8CC4")]
		public ListenerAsyncResult(AsyncCallback callback, object state)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x11E8F10", Offset = "0x11E8F10", VA = "0x11E8F10")]
		private static void invokeCallback(object state)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x11E9038", Offset = "0x11E9038", VA = "0x11E9038")]
		internal void Complete(Exception exception)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x11E91D4", Offset = "0x11E91D4", VA = "0x11E91D4")]
		internal void Complete(HttpListenerContext context)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x11E91DC", Offset = "0x11E91DC", VA = "0x11E91DC")]
		internal void Complete(HttpListenerContext context, bool syncCompleted)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x11E94D8", Offset = "0x11E94D8", VA = "0x11E94D8")]
		internal HttpListenerContext GetContext()
		{
			return null;
		}
	}
	[Token(Token = "0x200017B")]
	internal sealed class ListenerPrefix
	{
		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPAddress[] _addresses;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _host;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _original;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _path;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ushort _port;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _secure;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HttpListener Listener;

		[Token(Token = "0x1700020B")]
		public IPAddress[] Addresses
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x11E9878", Offset = "0x11E9878", VA = "0x11E9878")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x11E9880", Offset = "0x11E9880", VA = "0x11E9880")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public string Host
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x11E9888", Offset = "0x11E9888", VA = "0x11E9888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public string Path
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x11E9890", Offset = "0x11E9890", VA = "0x11E9890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		public int Port
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x11E9898", Offset = "0x11E9898", VA = "0x11E9898")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020F")]
		public bool Secure
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x11E98A0", Offset = "0x11E98A0", VA = "0x11E98A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x11E953C", Offset = "0x11E953C", VA = "0x11E953C")]
		public ListenerPrefix(string uriPrefix)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x11E9570", Offset = "0x11E9570", VA = "0x11E9570")]
		private void parse(string uriPrefix)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x11E98A8", Offset = "0x11E98A8", VA = "0x11E98A8")]
		public static void CheckUriPrefix(string uriPrefix)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x11E9B14", Offset = "0x11E9B14", VA = "0x11E9B14", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x11E9BB0", Offset = "0x11E9BB0", VA = "0x11E9BB0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x11E9BE4", Offset = "0x11E9BE4", VA = "0x11E9BE4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200017C")]
	public class NetworkCredential
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _domain;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _password;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] _roles;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _username;

		[Token(Token = "0x17000210")]
		public string Domain
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x11E9D3C", Offset = "0x11E9D3C", VA = "0x11E9D3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x11E9D98", Offset = "0x11E9D98", VA = "0x11E9D98")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public string Password
		{
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0x11E9DA0", Offset = "0x11E9DA0", VA = "0x11E9DA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x11E9DFC", Offset = "0x11E9DFC", VA = "0x11E9DFC")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public string[] Roles
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0x11E9E04", Offset = "0x11E9E04", VA = "0x11E9E04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x11E9E0C", Offset = "0x11E9E0C", VA = "0x11E9E0C")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public string UserName
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x11E9E14", Offset = "0x11E9E14", VA = "0x11E9E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x11E9E1C", Offset = "0x11E9E1C", VA = "0x11E9E1C")]
			internal set
			{
			}
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x11E9BEC", Offset = "0x11E9BEC", VA = "0x11E9BEC")]
		public NetworkCredential(string username, string password)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x11E9C64", Offset = "0x11E9C64", VA = "0x11E9C64")]
		public NetworkCredential(string username, string password, string domain, params string[] roles)
		{
		}
	}
	[Token(Token = "0x200017D")]
	internal sealed class QueryStringCollection : NameValueCollection
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x11E9E24", Offset = "0x11E9E24", VA = "0x11E9E24", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x11E9FFC", Offset = "0x11E9FFC", VA = "0x11E9FFC")]
		public QueryStringCollection()
		{
		}
	}
	[Token(Token = "0x200017E")]
	internal class ReadBufferState
	{
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E61B4", Offset = "0x9E61B4")]
		private HttpStreamAsyncResult <AsyncResult>k__BackingField;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E61C4", Offset = "0x9E61C4")]
		private byte[] <Buffer>k__BackingField;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E61D4", Offset = "0x9E61D4")]
		private int <Count>k__BackingField;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E61E4", Offset = "0x9E61E4")]
		private int <InitialCount>k__BackingField;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E61F4", Offset = "0x9E61F4")]
		private int <Offset>k__BackingField;

		[Token(Token = "0x17000214")]
		public HttpStreamAsyncResult AsyncResult
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x11EA07C", Offset = "0x11EA07C", VA = "0x11EA07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBEB8", Offset = "0x9EBEB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x11EA074", Offset = "0x11EA074", VA = "0x11EA074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBEC8", Offset = "0x9EBEC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public byte[] Buffer
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x11EA084", Offset = "0x11EA084", VA = "0x11EA084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBED8", Offset = "0x9EBED8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0x11EA054", Offset = "0x11EA054", VA = "0x11EA054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBEE8", Offset = "0x9EBEE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public int Count
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x11EA08C", Offset = "0x11EA08C", VA = "0x11EA08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBEF8", Offset = "0x9EBEF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x11EA064", Offset = "0x11EA064", VA = "0x11EA064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF08", Offset = "0x9EBF08")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public int InitialCount
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x11EA094", Offset = "0x11EA094", VA = "0x11EA094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF18", Offset = "0x9EBF18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x11EA06C", Offset = "0x11EA06C", VA = "0x11EA06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF28", Offset = "0x9EBF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public int Offset
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x11EA09C", Offset = "0x11EA09C", VA = "0x11EA09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF38", Offset = "0x9EBF38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x11EA05C", Offset = "0x11EA05C", VA = "0x11EA05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF48", Offset = "0x9EBF48")]
			set
			{
			}
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x11EA004", Offset = "0x11EA004", VA = "0x11EA004")]
		public ReadBufferState(byte[] buffer, int offset, int count, HttpStreamAsyncResult asyncResult)
		{
		}
	}
	[Token(Token = "0x200017F")]
	internal class RequestStream : Stream
	{
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] _buffer;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _disposed;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _length;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _offset;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private long _remainingBody;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stream _stream;

		[Token(Token = "0x17000219")]
		public override bool CanRead
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x11EA150", Offset = "0x11EA150", VA = "0x11EA150", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021A")]
		public override bool CanSeek
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0x11EA158", Offset = "0x11EA158", VA = "0x11EA158", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021B")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0x11EA160", Offset = "0x11EA160", VA = "0x11EA160", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		public override long Length
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0x11EA168", Offset = "0x11EA168", VA = "0x11EA168", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700021D")]
		public override long Position
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x11EA1D0", Offset = "0x11EA1D0", VA = "0x11EA1D0", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0x11EA238", Offset = "0x11EA238", VA = "0x11EA238", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x11EA0A4", Offset = "0x11EA0A4", VA = "0x11EA0A4")]
		internal RequestStream(Stream stream, byte[] buffer, int offset, int length)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x11EA0AC", Offset = "0x11EA0AC", VA = "0x11EA0AC")]
		internal RequestStream(Stream stream, byte[] buffer, int offset, int length, long contentlength)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x11EA2A0", Offset = "0x11EA2A0", VA = "0x11EA2A0")]
		private int fillFromBuffer(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x11EA49C", Offset = "0x11EA49C", VA = "0x11EA49C", Slot = "19")]
		public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x11EA68C", Offset = "0x11EA68C", VA = "0x11EA68C", Slot = "22")]
		public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x11EA6F4", Offset = "0x11EA6F4", VA = "0x11EA6F4", Slot = "15")]
		public override void Close()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x11EA700", Offset = "0x11EA700", VA = "0x11EA700", Slot = "20")]
		public override int EndRead(IAsyncResult asyncResult)
		{
			return default(int);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x11EA8B4", Offset = "0x11EA8B4", VA = "0x11EA8B4", Slot = "23")]
		public override void EndWrite(IAsyncResult asyncResult)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x11EA91C", Offset = "0x11EA91C", VA = "0x11EA91C", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x11EA920", Offset = "0x11EA920", VA = "0x11EA920", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x11EAA68", Offset = "0x11EAA68", VA = "0x11EAA68", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x11EAAD0", Offset = "0x11EAAD0", VA = "0x11EAAD0", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x11EAB38", Offset = "0x11EAB38", VA = "0x11EAB38", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}
	}
	[Token(Token = "0x2000180")]
	internal class ResponseStream : Stream
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] _crlf;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _disposed;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _ignoreErrors;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HttpListenerResponse _response;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stream _stream;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _trailerSent;

		[Token(Token = "0x1700021E")]
		public override bool CanRead
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0x11EAC34", Offset = "0x11EAC34", VA = "0x11EAC34", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021F")]
		public override bool CanSeek
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x11EAC3C", Offset = "0x11EAC3C", VA = "0x11EAC3C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x11EAC44", Offset = "0x11EAC44", VA = "0x11EAC44", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000221")]
		public override long Length
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0x11EAC4C", Offset = "0x11EAC4C", VA = "0x11EAC4C", Slot = "10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000222")]
		public override long Position
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x11EACB4", Offset = "0x11EACB4", VA = "0x11EACB4", Slot = "11")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x11EAD1C", Offset = "0x11EAD1C", VA = "0x11EAD1C", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x11EABA0", Offset = "0x11EABA0", VA = "0x11EABA0")]
		internal ResponseStream(Stream stream, HttpListenerResponse response, bool ignoreErrors)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x11EAD84", Offset = "0x11EAD84", VA = "0x11EAD84")]
		private static byte[] getChunkSizeBytes(int size, bool final)
		{
			return null;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x11EAE54", Offset = "0x11EAE54", VA = "0x11EAE54")]
		private MemoryStream getHeaders(bool closing)
		{
			return null;
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x11EAF08", Offset = "0x11EAF08", VA = "0x11EAF08")]
		internal void WriteInternally(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x11EB054", Offset = "0x11EB054", VA = "0x11EB054", Slot = "19")]
		public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x11EB0BC", Offset = "0x11EB0BC", VA = "0x11EB0BC", Slot = "22")]
		public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
		{
			return null;
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x11EB444", Offset = "0x11EB444", VA = "0x11EB444", Slot = "15")]
		public override void Close()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x11EB708", Offset = "0x11EB708", VA = "0x11EB708", Slot = "20")]
		public override int EndRead(IAsyncResult asyncResult)
		{
			return default(int);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x11EB770", Offset = "0x11EB770", VA = "0x11EB770", Slot = "23")]
		public override void EndWrite(IAsyncResult asyncResult)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x11EB938", Offset = "0x11EB938", VA = "0x11EB938", Slot = "17")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x11EB93C", Offset = "0x11EB93C", VA = "0x11EB93C", Slot = "27")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x11EB9A4", Offset = "0x11EB9A4", VA = "0x11EB9A4", Slot = "25")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x11EBA0C", Offset = "0x11EBA0C", VA = "0x11EBA0C", Slot = "26")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x11EBA74", Offset = "0x11EBA74", VA = "0x11EBA74", Slot = "29")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x11EBF10", Offset = "0x11EBF10", VA = "0x11EBF10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EBF58", Offset = "0x9EBF58")]
		private void <EndWrite>b__25_0(IAsyncResult ares)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E1D88", Offset = "0x9E1D88")]
	[AttributeAttribute(Name = "ComVisibleAttribute", RVA = "0x9E1D88", Offset = "0x9E1D88")]
	public class WebHeaderCollection : NameValueCollection, ISerializable
	{
		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2BF4", Offset = "0x9E2BF4")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WebHeaderCollection <>4__this;

			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool response;

			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StringBuilder buff;

			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x11EFD90", Offset = "0x11EFD90", VA = "0x11EFD90")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0x11F0904", Offset = "0x11F0904", VA = "0x11F0904")]
			internal void <ToStringMultiValue>b__0(int i)
			{
			}
		}

		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C04", Offset = "0x9E2C04")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SerializationInfo serializationInfo;

			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WebHeaderCollection <>4__this;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int count;

			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x11F01D4", Offset = "0x11F01D4", VA = "0x11F01D4")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0x11F0ADC", Offset = "0x11F0ADC", VA = "0x11F0ADC")]
			internal void <GetObjectData>b__0(int i)
			{
			}
		}

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C14", Offset = "0x9E2C14")]
		private sealed class <>c__DisplayClass68_0
		{
			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StringBuilder buff;

			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WebHeaderCollection <>4__this;

			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x11F08F0", Offset = "0x11F08F0", VA = "0x11F08F0")]
			public <>c__DisplayClass68_0()
			{
			}

			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x11F0BE4", Offset = "0x11F0BE4", VA = "0x11F0BE4")]
			internal void <ToString>b__0(int i)
			{
			}
		}

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, HttpHeaderInfo> _headers;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _internallyCreated;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private HttpHeaderType _state;

		[Token(Token = "0x17000223")]
		public override string[] AllKeys
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x11EE75C", Offset = "0x11EE75C", VA = "0x11EE75C", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public override int Count
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x11EE764", Offset = "0x11EE764", VA = "0x11EE764", Slot = "14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000225")]
		public new string Item
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x11EE76C", Offset = "0x11EE76C", VA = "0x11EE76C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x11EE8B4", Offset = "0x11EE8B4", VA = "0x11EE8B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public new string Item
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x11EE97C", Offset = "0x11EE97C", VA = "0x11EE97C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x11EEAC4", Offset = "0x11EEAC4", VA = "0x11EEAC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public override KeysCollection Keys
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x11EEB8C", Offset = "0x11EEB8C", VA = "0x11EEB8C", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x11EC120", Offset = "0x11EC120", VA = "0x11EC120")]
		static WebHeaderCollection()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x11EE490", Offset = "0x11EE490", VA = "0x11EE490")]
		internal WebHeaderCollection(bool internallyCreated)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x11EE4C4", Offset = "0x11EE4C4", VA = "0x11EE4C4")]
		protected WebHeaderCollection(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x11EE730", Offset = "0x11EE730", VA = "0x11EE730")]
		public WebHeaderCollection()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x11EEB94", Offset = "0x11EEB94", VA = "0x11EEB94")]
		private void add(string name, string value, bool ignoreRestricted)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x11EEE8C", Offset = "0x11EEE8C", VA = "0x11EEE8C")]
		private void addWithoutCheckingName(string name, string value)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x11EEFD8", Offset = "0x11EEFD8", VA = "0x11EEFD8")]
		private void addWithoutCheckingNameAndRestricted(string name, string value)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x11EF1B0", Offset = "0x11EF1B0", VA = "0x11EF1B0")]
		private static int checkColonSeparated(string header)
		{
			return default(int);
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x11EF264", Offset = "0x11EF264", VA = "0x11EF264")]
		private static HttpHeaderType checkHeaderType(string name)
		{
			return default(HttpHeaderType);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x11EEC74", Offset = "0x11EEC74", VA = "0x11EEC74")]
		private static string checkName(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x11EF538", Offset = "0x11EF538", VA = "0x11EF538")]
		private void checkRestricted(string name)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x11EF690", Offset = "0x11EF690", VA = "0x11EF690")]
		private void checkState(bool response)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x11EF060", Offset = "0x11EF060", VA = "0x11EF060")]
		private static string checkValue(string value)
		{
			return null;
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x11EF764", Offset = "0x11EF764", VA = "0x11EF764")]
		private static string convert(string key)
		{
			return null;
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x11EED88", Offset = "0x11EED88", VA = "0x11EED88")]
		private void doWithCheckingState(Action<string, string> action, string name, string value, bool setState)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x11EF83C", Offset = "0x11EF83C", VA = "0x11EF83C")]
		private void doWithCheckingState(Action<string, string> action, string name, string value, bool response, bool setState)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x11EEF20", Offset = "0x11EEF20", VA = "0x11EEF20")]
		private void doWithoutCheckingName(Action<string, string> action, string name, string value)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x11EF32C", Offset = "0x11EF32C", VA = "0x11EF32C")]
		private static HttpHeaderInfo getHeaderInfo(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x11EF600", Offset = "0x11EF600", VA = "0x11EF600")]
		private static bool isRestricted(string name, bool response)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x11EF8F8", Offset = "0x11EF8F8", VA = "0x11EF8F8")]
		private void removeWithoutCheckingName(string name, string unuse)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x11EF928", Offset = "0x11EF928", VA = "0x11EF928")]
		private void setWithoutCheckingName(string name, string value)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x11EE7F4", Offset = "0x11EE7F4", VA = "0x11EE7F4")]
		internal static string Convert(HttpRequestHeader header)
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x11EEA04", Offset = "0x11EEA04", VA = "0x11EEA04")]
		internal static string Convert(HttpResponseHeader header)
		{
			return null;
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x11EF4EC", Offset = "0x11EF4EC", VA = "0x11EF4EC")]
		internal static bool IsHeaderName(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x11EF75C", Offset = "0x11EF75C", VA = "0x11EF75C")]
		internal static bool IsHeaderValue(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x11EF9BC", Offset = "0x11EF9BC", VA = "0x11EF9BC")]
		internal static bool IsMultiValue(string headerName, bool response)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x11EFA64", Offset = "0x11EFA64", VA = "0x11EFA64")]
		internal void RemoveInternally(string name)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x11EFA6C", Offset = "0x11EFA6C", VA = "0x11EFA6C")]
		internal void SetInternally(string header, bool response)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x11EFB58", Offset = "0x11EFB58", VA = "0x11EFB58")]
		internal void SetInternally(string name, string value, bool response)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x11EFC24", Offset = "0x11EFC24", VA = "0x11EFC24")]
		internal string ToStringMultiValue(bool response)
		{
			return null;
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x11EFD98", Offset = "0x11EFD98", VA = "0x11EFD98")]
		protected void AddWithoutValidate(string headerName, string headerValue)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x11EFDA0", Offset = "0x11EFDA0", VA = "0x11EFDA0")]
		public void Add(string header)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x11EE8B8", Offset = "0x11EE8B8", VA = "0x11EE8B8")]
		public void Add(HttpRequestHeader header, string value)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x11EEAC8", Offset = "0x11EEAC8", VA = "0x11EEAC8")]
		public void Add(HttpResponseHeader header, string value)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x11EFED4", Offset = "0x11EFED4", VA = "0x11EFED4", Slot = "17")]
		public override void Add(string name, string value)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x11EFEDC", Offset = "0x11EFEDC", VA = "0x11EFEDC", Slot = "16")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x11EFF04", Offset = "0x11EFF04", VA = "0x11EFF04", Slot = "22")]
		public override string Get(int index)
		{
			return null;
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x11EFF0C", Offset = "0x11EFF0C", VA = "0x11EFF0C", Slot = "18")]
		public override string Get(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x11EFF14", Offset = "0x11EFF14", VA = "0x11EFF14", Slot = "13")]
		public override IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x11EFF1C", Offset = "0x11EFF1C", VA = "0x11EFF1C", Slot = "24")]
		public override string GetKey(int index)
		{
			return null;
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x11EFF24", Offset = "0x11EFF24", VA = "0x11EFF24", Slot = "23")]
		public override string[] GetValues(int index)
		{
			return null;
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x11EFF4C", Offset = "0x11EFF4C", VA = "0x11EFF4C", Slot = "19")]
		public override string[] GetValues(string header)
		{
			return null;
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x11EFF74", Offset = "0x11EFF74", VA = "0x11EFF74", Slot = "11")]
		public override void GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x11F01DC", Offset = "0x11F01DC", VA = "0x11F01DC")]
		public static bool IsRestricted(string headerName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x11F0248", Offset = "0x11F0248", VA = "0x11F0248")]
		public static bool IsRestricted(string headerName, bool response)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x11F02C0", Offset = "0x11F02C0", VA = "0x11F02C0", Slot = "12")]
		public override void OnDeserialization(object sender)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x11F02C4", Offset = "0x11F02C4", VA = "0x11F02C4")]
		public void Remove(HttpRequestHeader header)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x11F0384", Offset = "0x11F0384", VA = "0x11F0384")]
		public void Remove(HttpResponseHeader header)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x11F0444", Offset = "0x11F0444", VA = "0x11F0444", Slot = "21")]
		public override void Remove(string name)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x11F0500", Offset = "0x11F0500", VA = "0x11F0500")]
		public void Set(HttpRequestHeader header, string value)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x11F05C4", Offset = "0x11F05C4", VA = "0x11F05C4")]
		public void Set(HttpResponseHeader header, string value)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x11F0688", Offset = "0x11F0688", VA = "0x11F0688", Slot = "20")]
		public override void Set(string name, string value)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x11F0748", Offset = "0x11F0748", VA = "0x11F0748")]
		public byte[] ToByteArray()
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x11F07A4", Offset = "0x11F07A4", VA = "0x11F07A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x11F08F8", Offset = "0x11F08F8", VA = "0x11F08F8", Slot = "9")]
		private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo serializationInfo, StreamingContext streamingContext)
		{
		}
	}
}
namespace WebSocketSharp.Net.WebSockets
{
	[Token(Token = "0x2000182")]
	public class HttpListenerWebSocketContext : WebSocketContext
	{
		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C24", Offset = "0x9E2C24")]
		private sealed class <get_SecWebSocketProtocols>d__28 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HttpListenerWebSocketContext <>4__this;

			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string[] <>7__wrap1;

			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x1700046B")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x6001AF7")]
				[Address(RVA = "0x11F175C", Offset = "0x11F175C", VA = "0x11F175C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF9")]
				[Address(RVA = "0x11F17CC", Offset = "0x11F17CC", VA = "0x11F17CC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x11F12FC", Offset = "0x11F12FC", VA = "0x11F12FC")]
			[DebuggerHidden]
			public <get_SecWebSocketProtocols>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x11F1568", Offset = "0x11F1568", VA = "0x11F1568", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x11F156C", Offset = "0x11F156C", VA = "0x11F156C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x11F1764", Offset = "0x11F1764", VA = "0x11F1764", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x11F17D4", Offset = "0x11F17D4", VA = "0x11F17D4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0x11F1884", Offset = "0x11F1884", VA = "0x11F1884", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HttpListenerContext _context;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WebSocket _websocket;

		[Token(Token = "0x17000228")]
		internal WebSocketStream Stream
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x11F0E34", Offset = "0x11F0E34", VA = "0x11F0E34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public override CookieCollection CookieCollection
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x11F0E7C", Offset = "0x11F0E7C", VA = "0x11F0E7C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public override NameValueCollection Headers
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x11F0EC4", Offset = "0x11F0EC4", VA = "0x11F0EC4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public override string Host
		{
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x11F0F0C", Offset = "0x11F0F0C", VA = "0x11F0F0C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public override bool IsAuthenticated
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x11F0FA0", Offset = "0x11F0FA0", VA = "0x11F0FA0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022D")]
		public override bool IsLocal
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x11F0FE8", Offset = "0x11F0FE8", VA = "0x11F0FE8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022E")]
		public override bool IsSecureConnection
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x11F1030", Offset = "0x11F1030", VA = "0x11F1030", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		public override bool IsWebSocketRequest
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x11F1078", Offset = "0x11F1078", VA = "0x11F1078", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000230")]
		public override string Origin
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x11F10C0", Offset = "0x11F10C0", VA = "0x11F10C0", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		public override NameValueCollection QueryString
		{
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x11F1154", Offset = "0x11F1154", VA = "0x11F1154", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public override Uri RequestUri
		{
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x11F119C", Offset = "0x11F119C", VA = "0x11F119C", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public override string SecWebSocketKey
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x11F11E4", Offset = "0x11F11E4", VA = "0x11F11E4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public override IEnumerable<string> SecWebSocketProtocols
		{
			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x11F1278", Offset = "0x11F1278", VA = "0x11F1278", Slot = "15")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBF68", Offset = "0x9EBF68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public override string SecWebSocketVersion
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x11F1334", Offset = "0x11F1334", VA = "0x11F1334", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public override IPEndPoint ServerEndPoint
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x11F13C8", Offset = "0x11F13C8", VA = "0x11F13C8", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		public override IPrincipal User
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x11F1410", Offset = "0x11F1410", VA = "0x11F1410", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public override IPEndPoint UserEndPoint
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x11F1440", Offset = "0x11F1440", VA = "0x11F1440", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		public override WebSocket WebSocket
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x11F1488", Offset = "0x11F1488", VA = "0x11F1488", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x11F0CB0", Offset = "0x11F0CB0", VA = "0x11F0CB0")]
		internal HttpListenerWebSocketContext(HttpListenerContext context, string protocol, Logger logger)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x11F1490", Offset = "0x11F1490", VA = "0x11F1490")]
		internal void Close()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x11F14DC", Offset = "0x11F14DC", VA = "0x11F14DC")]
		internal void Close(HttpStatusCode code)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x11F151C", Offset = "0x11F151C", VA = "0x11F151C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000183")]
	public class TcpListenerWebSocketContext : WebSocketContext
	{
		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C34", Offset = "0x9E2C34")]
		private sealed class <get_SecWebSocketProtocols>d__35 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string <>2__current;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TcpListenerWebSocketContext <>4__this;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string[] <>7__wrap1;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x1700046D")]
			private string System.Collections.Generic.IEnumerator<System.String>.Current
			{
				[Token(Token = "0x6001AFF")]
				[Address(RVA = "0x11F2BB0", Offset = "0x11F2BB0", VA = "0x11F2BB0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B01")]
				[Address(RVA = "0x11F2C20", Offset = "0x11F2C20", VA = "0x11F2C20", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0x11F2168", Offset = "0x11F2168", VA = "0x11F2168")]
			[DebuggerHidden]
			public <get_SecWebSocketProtocols>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0x11F29D4", Offset = "0x11F29D4", VA = "0x11F29D4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x11F29D8", Offset = "0x11F29D8", VA = "0x11F29D8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x11F2BB8", Offset = "0x11F2BB8", VA = "0x11F2BB8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001B02")]
			[Address(RVA = "0x11F2C28", Offset = "0x11F2C28", VA = "0x11F2C28", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001B03")]
			[Address(RVA = "0x11F2CD8", Offset = "0x11F2CD8", VA = "0x11F2CD8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TcpClient _client;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CookieCollection _cookies;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NameValueCollection _queryString;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandshakeRequest _request;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _secure;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WebSocketStream _stream;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Uri _uri;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IPrincipal _user;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WebSocket _websocket;

		[Token(Token = "0x1700023A")]
		internal WebSocketStream Stream
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x11F1C4C", Offset = "0x11F1C4C", VA = "0x11F1C4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public override CookieCollection CookieCollection
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x11F1C54", Offset = "0x11F1C54", VA = "0x11F1C54", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		public override NameValueCollection Headers
		{
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x11F1C98", Offset = "0x11F1C98", VA = "0x11F1C98", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public override string Host
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x11F1CC8", Offset = "0x11F1CC8", VA = "0x11F1CC8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		public override bool IsAuthenticated
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x11F1D44", Offset = "0x11F1D44", VA = "0x11F1D44", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023F")]
		public override bool IsLocal
		{
			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x11F1E78", Offset = "0x11F1E78", VA = "0x11F1E78", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000240")]
		public override bool IsSecureConnection
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x11F1EBC", Offset = "0x11F1EBC", VA = "0x11F1EBC", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000241")]
		public override bool IsWebSocketRequest
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x11F1EC4", Offset = "0x11F1EC4", VA = "0x11F1EC4", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000242")]
		public override string Origin
		{
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x11F1EF4", Offset = "0x11F1EF4", VA = "0x11F1EF4", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		public override NameValueCollection QueryString
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x11F1F70", Offset = "0x11F1F70", VA = "0x11F1F70", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		public override Uri RequestUri
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x11F2060", Offset = "0x11F2060", VA = "0x11F2060", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		public override string SecWebSocketKey
		{
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x11F2068", Offset = "0x11F2068", VA = "0x11F2068", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public override IEnumerable<string> SecWebSocketProtocols
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x11F20E4", Offset = "0x11F20E4", VA = "0x11F20E4", Slot = "15")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EBFCC", Offset = "0x9EBFCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public override string SecWebSocketVersion
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x11F21A0", Offset = "0x11F21A0", VA = "0x11F21A0", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public override IPEndPoint ServerEndPoint
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x11F221C", Offset = "0x11F221C", VA = "0x11F221C", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public override IPrincipal User
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x11F22D0", Offset = "0x11F22D0", VA = "0x11F22D0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		public override IPEndPoint UserEndPoint
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x11F22D8", Offset = "0x11F22D8", VA = "0x11F22D8", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public override WebSocket WebSocket
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x11F238C", Offset = "0x11F238C", VA = "0x11F238C", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x11F1888", Offset = "0x11F1888", VA = "0x11F1888")]
		internal TcpListenerWebSocketContext(TcpClient client, string protocol, bool secure, X509Certificate cert, Logger logger)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x11F2394", Offset = "0x11F2394", VA = "0x11F2394")]
		internal void Close()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x11F2434", Offset = "0x11F2434", VA = "0x11F2434")]
		internal void Close(HttpStatusCode code)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x11F24D4", Offset = "0x11F24D4", VA = "0x11F24D4")]
		internal void SendAuthChallenge(string challenge)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x11F2640", Offset = "0x11F2640", VA = "0x11F2640")]
		internal void SetUser(AuthenticationSchemes scheme, string realm, Func<IIdentity, NetworkCredential> credentialsFinder)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x11F29A0", Offset = "0x11F29A0", VA = "0x11F29A0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000184")]
	public abstract class WebSocketContext
	{
		[Token(Token = "0x1700024C")]
		public abstract CookieCollection CookieCollection
		{
			[Token(Token = "0x6000CA5")]
			get;
		}

		[Token(Token = "0x1700024D")]
		public abstract NameValueCollection Headers
		{
			[Token(Token = "0x6000CA6")]
			get;
		}

		[Token(Token = "0x1700024E")]
		public abstract string Host
		{
			[Token(Token = "0x6000CA7")]
			get;
		}

		[Token(Token = "0x1700024F")]
		public abstract bool IsAuthenticated
		{
			[Token(Token = "0x6000CA8")]
			get;
		}

		[Token(Token = "0x17000250")]
		public abstract bool IsLocal
		{
			[Token(Token = "0x6000CA9")]
			get;
		}

		[Token(Token = "0x17000251")]
		public abstract bool IsSecureConnection
		{
			[Token(Token = "0x6000CAA")]
			get;
		}

		[Token(Token = "0x17000252")]
		public abstract bool IsWebSocketRequest
		{
			[Token(Token = "0x6000CAB")]
			get;
		}

		[Token(Token = "0x17000253")]
		public abstract string Origin
		{
			[Token(Token = "0x6000CAC")]
			get;
		}

		[Token(Token = "0x17000254")]
		public abstract NameValueCollection QueryString
		{
			[Token(Token = "0x6000CAD")]
			get;
		}

		[Token(Token = "0x17000255")]
		public abstract Uri RequestUri
		{
			[Token(Token = "0x6000CAE")]
			get;
		}

		[Token(Token = "0x17000256")]
		public abstract string SecWebSocketKey
		{
			[Token(Token = "0x6000CAF")]
			get;
		}

		[Token(Token = "0x17000257")]
		public abstract IEnumerable<string> SecWebSocketProtocols
		{
			[Token(Token = "0x6000CB0")]
			get;
		}

		[Token(Token = "0x17000258")]
		public abstract string SecWebSocketVersion
		{
			[Token(Token = "0x6000CB1")]
			get;
		}

		[Token(Token = "0x17000259")]
		public abstract IPEndPoint ServerEndPoint
		{
			[Token(Token = "0x6000CB2")]
			get;
		}

		[Token(Token = "0x1700025A")]
		public abstract IPrincipal User
		{
			[Token(Token = "0x6000CB3")]
			get;
		}

		[Token(Token = "0x1700025B")]
		public abstract IPEndPoint UserEndPoint
		{
			[Token(Token = "0x6000CB4")]
			get;
		}

		[Token(Token = "0x1700025C")]
		public abstract WebSocket WebSocket
		{
			[Token(Token = "0x6000CB5")]
			get;
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x11F0D44", Offset = "0x11F0D44", VA = "0x11F0D44")]
		protected WebSocketContext()
		{
		}
	}
}
namespace WebSocketSharp.Net.Security
{
	[Token(Token = "0x2000185")]
	internal class SslStream : System.Net.Security.SslStream
	{
		[Token(Token = "0x1700025D")]
		public bool DataAvailable
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x11EC038", Offset = "0x11EC038", VA = "0x11EC038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x11EC00C", Offset = "0x11EC00C", VA = "0x11EC00C")]
		public SslStream(NetworkStream innerStream)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x11EC014", Offset = "0x11EC014", VA = "0x11EC014")]
		public SslStream(NetworkStream innerStream, bool leaveInnerStreamOpen)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x11EC020", Offset = "0x11EC020", VA = "0x11EC020")]
		public SslStream(NetworkStream innerStream, bool leaveInnerStreamOpen, RemoteCertificateValidationCallback userCertificateValidationCallback)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x11EC02C", Offset = "0x11EC02C", VA = "0x11EC02C")]
		public SslStream(NetworkStream innerStream, bool leaveInnerStreamOpen, RemoteCertificateValidationCallback userCertificateValidationCallback, LocalCertificateSelectionCallback userCertificateSelectionCallback)
		{
		}
	}
}
namespace SocketIO
{
	[Token(Token = "0x2000186")]
	public class Ack
	{
		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int packetId;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime time;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<JSONObject> action;

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xC0EB68", Offset = "0xC0EB68", VA = "0xC0EB68")]
		public Ack(int packetId, Action<JSONObject> action)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xC0EBF4", Offset = "0xC0EBF4", VA = "0xC0EBF4")]
		public void Invoke(JSONObject ev)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xC0EC64", Offset = "0xC0EC64", VA = "0xC0EC64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000187")]
	public class Decoder
	{
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xC0ED0C", Offset = "0xC0ED0C", VA = "0xC0ED0C")]
		public Packet Decode(MessageEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xC0F3A8", Offset = "0xC0F3A8", VA = "0xC0F3A8")]
		public Decoder()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class Encoder
	{
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xC0F3B0", Offset = "0xC0F3B0", VA = "0xC0F3B0")]
		public string Encode(Packet packet)
		{
			return null;
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xC0F7A0", Offset = "0xC0F7A0", VA = "0xC0F7A0")]
		public Encoder()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public enum EnginePacketType
	{
		[Token(Token = "0x4000964")]
		UNKNOWN = -1,
		[Token(Token = "0x4000965")]
		OPEN,
		[Token(Token = "0x4000966")]
		CLOSE,
		[Token(Token = "0x4000967")]
		PING,
		[Token(Token = "0x4000968")]
		PONG,
		[Token(Token = "0x4000969")]
		MESSAGE,
		[Token(Token = "0x400096A")]
		UPGRADE,
		[Token(Token = "0x400096B")]
		NOOP
	}
	[Token(Token = "0x200018A")]
	public class Packet
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnginePacketType enginePacketType;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SocketPacketType socketPacketType;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int attachments;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nsp;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JSONObject json;

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xC0F334", Offset = "0xC0F334", VA = "0xC0F334")]
		public Packet()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xC0F810", Offset = "0xC0F810", VA = "0xC0F810")]
		public Packet(EnginePacketType enginePacketType)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xC0F7A8", Offset = "0xC0F7A8", VA = "0xC0F7A8")]
		public Packet(EnginePacketType enginePacketType, SocketPacketType socketPacketType, int attachments, string nsp, int id, JSONObject json)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xC0F890", Offset = "0xC0F890", VA = "0xC0F890", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018B")]
	public class Parser
	{
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xC2D49C", Offset = "0xC2D49C", VA = "0xC2D49C")]
		public SocketIOEvent Parse(JSONObject json)
		{
			return null;
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xC2DA14", Offset = "0xC2DA14", VA = "0xC2DA14")]
		public Parser()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class SocketIOComponent : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string url;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoConnect;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int reconnectDelay;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ackExpirationTime;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float pingInterval;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pingTimeout;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6204", Offset = "0x9E6204")]
		private string <sid>k__BackingField;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool connected;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool thPinging;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool thPong;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool wsConnected;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Thread socketThread;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread pingThread;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WebSocket ws;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Encoder encoder;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Decoder decoder;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Parser parser;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, List<Action<SocketIOEvent>>> handlers;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Ack> ackList;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int packetId;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private object eventQueueLock;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Queue<SocketIOEvent> eventQueue;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object ackQueueLock;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Queue<Packet> ackQueue;

		[Token(Token = "0x1700025E")]
		public WebSocket socket
		{
			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0xC2DA1C", Offset = "0xC2DA1C", VA = "0xC2DA1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public string sid
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0xC2DA24", Offset = "0xC2DA24", VA = "0xC2DA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC030", Offset = "0x9EC030")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0xC2DA2C", Offset = "0xC2DA2C", VA = "0xC2DA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC040", Offset = "0x9EC040")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public bool IsConnected
		{
			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xC2DA34", Offset = "0xC2DA34", VA = "0xC2DA34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xC2DA58", Offset = "0xC2DA58", VA = "0xC2DA58")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xC2DD78", Offset = "0xC2DD78", VA = "0xC2DD78")]
		public void Start()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xC2DEB0", Offset = "0xC2DEB0", VA = "0xC2DEB0")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xC2E634", Offset = "0xC2E634", VA = "0xC2E634")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xC2E678", Offset = "0xC2E678", VA = "0xC2E678")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xC2DD88", Offset = "0xC2DD88", VA = "0xC2DD88")]
		public void Connect()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xC2E6A0", Offset = "0xC2E6A0", VA = "0xC2E6A0")]
		public void Close()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xC2E7A0", Offset = "0xC2E7A0", VA = "0xC2E7A0")]
		public void On(string ev, Action<SocketIOEvent> callback)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xC2E8BC", Offset = "0xC2E8BC", VA = "0xC2E8BC")]
		public void Off(string ev, Action<SocketIOEvent> callback)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xC2EA1C", Offset = "0xC2EA1C", VA = "0xC2EA1C")]
		public void Emit(string ev)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xC2EB40", Offset = "0xC2EB40", VA = "0xC2EB40")]
		public void Emit(string ev, Action<JSONObject> action)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xC2EC10", Offset = "0xC2EC10", VA = "0xC2EC10")]
		public void Emit(string ev, JSONObject data)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xC2EC88", Offset = "0xC2EC88", VA = "0xC2EC88")]
		public void Emit(string ev, JSONObject data, Action<JSONObject> action)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xC2ED68", Offset = "0xC2ED68", VA = "0xC2ED68")]
		private void RunSocketThread(object obj)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xC2EE54", Offset = "0xC2EE54", VA = "0xC2EE54")]
		private void RunPingThread(object obj)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xC2EA8C", Offset = "0xC2EA8C", VA = "0xC2EA8C")]
		private void EmitMessage(int id, string raw)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xC2E6C8", Offset = "0xC2E6C8", VA = "0xC2E6C8")]
		private void EmitClose()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xC2F0A8", Offset = "0xC2F0A8", VA = "0xC2F0A8")]
		private void EmitPacket(Packet packet)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xC2F1B0", Offset = "0xC2F1B0", VA = "0xC2F1B0")]
		private void OnOpen(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xC2F200", Offset = "0xC2F200", VA = "0xC2F200")]
		private void OnMessage(object sender, MessageEventArgs e)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xC2F310", Offset = "0xC2F310", VA = "0xC2F310")]
		private void HandleOpen(Packet packet)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xC2F3B4", Offset = "0xC2F3B4", VA = "0xC2F3B4")]
		private void HandlePing()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xC2F41C", Offset = "0xC2F41C", VA = "0xC2F41C")]
		private void HandlePong()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xC2F44C", Offset = "0xC2F44C", VA = "0xC2F44C")]
		private void HandleMessage(Packet packet)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xC2F694", Offset = "0xC2F694", VA = "0xC2F694")]
		private void OnError(object sender, ErrorEventArgs e)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xC2F6E4", Offset = "0xC2F6E4", VA = "0xC2F6E4")]
		private void OnClose(object sender, CloseEventArgs e)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xC2E5C0", Offset = "0xC2E5C0", VA = "0xC2E5C0")]
		private void EmitEvent(string type)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xC2E238", Offset = "0xC2E238", VA = "0xC2E238")]
		private void EmitEvent(SocketIOEvent ev)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xC2E468", Offset = "0xC2E468", VA = "0xC2E468")]
		private void InvokeAck(Packet packet)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xC2F73C", Offset = "0xC2F73C", VA = "0xC2F73C")]
		public SocketIOComponent()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class SocketIOEvent
	{
		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6214", Offset = "0x9E6214")]
		private string <name>k__BackingField;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6224", Offset = "0x9E6224")]
		private JSONObject <data>k__BackingField;

		[Token(Token = "0x17000261")]
		public string name
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xC2F734", Offset = "0xC2F734", VA = "0xC2F734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC050", Offset = "0x9EC050")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0xC2F7B4", Offset = "0xC2F7B4", VA = "0xC2F7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC060", Offset = "0x9EC060")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public JSONObject data
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0xC2F7BC", Offset = "0xC2F7BC", VA = "0xC2F7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC070", Offset = "0x9EC070")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0xC2F7C4", Offset = "0xC2F7C4", VA = "0xC2F7C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC080", Offset = "0x9EC080")]
			set
			{
			}
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xC2D9B0", Offset = "0xC2D9B0", VA = "0xC2D9B0")]
		public SocketIOEvent(string name)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xC2D9DC", Offset = "0xC2D9DC", VA = "0xC2D9DC")]
		public SocketIOEvent(string name, JSONObject data)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xC2F7CC", Offset = "0xC2F7CC", VA = "0xC2F7CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018E")]
	public class SocketIOException : Exception
	{
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xC2F820", Offset = "0xC2F820", VA = "0xC2F820")]
		public SocketIOException()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xC2D938", Offset = "0xC2D938", VA = "0xC2D938")]
		public SocketIOException(string message)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xC2F888", Offset = "0xC2F888", VA = "0xC2F888")]
		public SocketIOException(string message, Exception innerException)
		{
		}
	}
	[Token(Token = "0x200018F")]
	public enum SocketPacketType
	{
		[Token(Token = "0x400098D")]
		UNKNOWN = -1,
		[Token(Token = "0x400098E")]
		CONNECT,
		[Token(Token = "0x400098F")]
		DISCONNECT,
		[Token(Token = "0x4000990")]
		EVENT,
		[Token(Token = "0x4000991")]
		ACK,
		[Token(Token = "0x4000992")]
		ERROR,
		[Token(Token = "0x4000993")]
		BINARY_EVENT,
		[Token(Token = "0x4000994")]
		BINARY_ACK,
		[Token(Token = "0x4000995")]
		CONTROL
	}
}
namespace Sabresaurus.PlayerPrefsExtensions
{
	[Token(Token = "0x2000190")]
	public static class SimpleEncryption
	{
		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string key;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RijndaelManaged provider;

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xC0CA00", Offset = "0xC0CA00", VA = "0xC0CA00")]
		private static void SetupProvider()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xBFDC3C", Offset = "0xBFDC3C", VA = "0xBFDC3C")]
		public static string EncryptString(string sourceString)
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xBFD9A0", Offset = "0xBFD9A0", VA = "0xBFD9A0")]
		public static string DecryptString(string sourceString)
		{
			return null;
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xBFDE0C", Offset = "0xBFDE0C", VA = "0xBFDE0C")]
		public static string EncryptFloat(float value)
		{
			return null;
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xBFDFAC", Offset = "0xBFDFAC", VA = "0xBFDFAC")]
		public static string EncryptInt(int value)
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xBFE6F8", Offset = "0xBFE6F8", VA = "0xBFE6F8")]
		public static float DecryptFloat(string sourceString)
		{
			return default(float);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xBFE7C8", Offset = "0xBFE7C8", VA = "0xBFE7C8")]
		public static int DecryptInt(string sourceString)
		{
			return default(int);
		}
	}
}
namespace Photon
{
	[Token(Token = "0x2000191")]
	public class MonoBehaviour : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pvCache;

		[Token(Token = "0x17000263")]
		public PhotonView photonView
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0xD79FD0", Offset = "0xD79FD0", VA = "0xD79FD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xD7A060", Offset = "0xD7A060", VA = "0xD7A060")]
		public MonoBehaviour()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class PunBehaviour : MonoBehaviour, IPunCallbacks
	{
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xD7A068", Offset = "0xD7A068", VA = "0xD7A068", Slot = "33")]
		public virtual void OnConnectedToPhoton()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xD7A06C", Offset = "0xD7A06C", VA = "0xD7A06C", Slot = "34")]
		public virtual void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xD7A070", Offset = "0xD7A070", VA = "0xD7A070", Slot = "35")]
		public virtual void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xD7A074", Offset = "0xD7A074", VA = "0xD7A074", Slot = "36")]
		public virtual void OnPhotonCreateRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xD7A078", Offset = "0xD7A078", VA = "0xD7A078", Slot = "37")]
		public virtual void OnPhotonJoinRoomFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xD7A07C", Offset = "0xD7A07C", VA = "0xD7A07C", Slot = "38")]
		public virtual void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xD7A080", Offset = "0xD7A080", VA = "0xD7A080", Slot = "39")]
		public virtual void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xD7A084", Offset = "0xD7A084", VA = "0xD7A084", Slot = "40")]
		public virtual void OnLeftLobby()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xD7A088", Offset = "0xD7A088", VA = "0xD7A088", Slot = "41")]
		public virtual void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xD7A08C", Offset = "0xD7A08C", VA = "0xD7A08C", Slot = "42")]
		public virtual void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xD7A090", Offset = "0xD7A090", VA = "0xD7A090", Slot = "43")]
		public virtual void OnConnectionFail(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xD7A094", Offset = "0xD7A094", VA = "0xD7A094", Slot = "44")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xD7A098", Offset = "0xD7A098", VA = "0xD7A098", Slot = "45")]
		public virtual void OnReceivedRoomListUpdate()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xD7A09C", Offset = "0xD7A09C", VA = "0xD7A09C", Slot = "46")]
		public virtual void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xD7A0A0", Offset = "0xD7A0A0", VA = "0xD7A0A0", Slot = "47")]
		public virtual void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xD7A0A4", Offset = "0xD7A0A4", VA = "0xD7A0A4", Slot = "48")]
		public virtual void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xD7A0A8", Offset = "0xD7A0A8", VA = "0xD7A0A8", Slot = "49")]
		public virtual void OnPhotonRandomJoinFailed(object[] codeAndMsg)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xD7A0AC", Offset = "0xD7A0AC", VA = "0xD7A0AC", Slot = "50")]
		public virtual void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xD7A0B0", Offset = "0xD7A0B0", VA = "0xD7A0B0", Slot = "51")]
		public virtual void OnPhotonMaxCccuReached()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xD7A0B4", Offset = "0xD7A0B4", VA = "0xD7A0B4", Slot = "52")]
		public virtual void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xD7A0B8", Offset = "0xD7A0B8", VA = "0xD7A0B8", Slot = "53")]
		public virtual void OnPhotonPlayerPropertiesChanged(object[] playerAndUpdatedProps)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xD7A0BC", Offset = "0xD7A0BC", VA = "0xD7A0BC", Slot = "54")]
		public virtual void OnUpdatedFriendList()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xD7A0C0", Offset = "0xD7A0C0", VA = "0xD7A0C0", Slot = "55")]
		public virtual void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xD7A0C4", Offset = "0xD7A0C4", VA = "0xD7A0C4", Slot = "56")]
		public virtual void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xD7A0C8", Offset = "0xD7A0C8", VA = "0xD7A0C8", Slot = "57")]
		public virtual void OnWebRpcResponse(OperationResponse response)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xD7A0CC", Offset = "0xD7A0CC", VA = "0xD7A0CC", Slot = "58")]
		public virtual void OnOwnershipRequest(object[] viewAndPlayer)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xD7A0D0", Offset = "0xD7A0D0", VA = "0xD7A0D0", Slot = "59")]
		public virtual void OnLobbyStatisticsUpdate()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xD7A0D4", Offset = "0xD7A0D4", VA = "0xD7A0D4", Slot = "60")]
		public virtual void OnPhotonPlayerActivityChanged(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xD7A0D8", Offset = "0xD7A0D8", VA = "0xD7A0D8", Slot = "61")]
		public virtual void OnOwnershipTransfered(object[] viewAndPlayers)
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xD7A0DC", Offset = "0xD7A0DC", VA = "0xD7A0DC")]
		public PunBehaviour()
		{
		}
	}
}
namespace ExitGames.UtilityScripts
{
	[Token(Token = "0x2000193")]
	public class PlayerRoomIndexing : PunBehaviour
	{
		[Token(Token = "0x200037E")]
		public delegate void RoomIndexingChanged();

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerRoomIndexing instance;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoomIndexingChanged OnRoomIndexingChanged;

		[Token(Token = "0x400099B")]
		public const string RoomPlayerIndexedProp = "PlayerIndexes";

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _playerIds;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object _indexes;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<int, int> _indexesLUT;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<bool> _indexesPool;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PhotonPlayer _p;

		[Token(Token = "0x17000264")]
		public int[] PlayerIds
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xC58048", Offset = "0xC58048", VA = "0xC58048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xC58050", Offset = "0xC58050", VA = "0xC58050")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xC58418", Offset = "0xC58418", VA = "0xC58418", Slot = "46")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xC58C00", Offset = "0xC58C00", VA = "0xC58C00", Slot = "34")]
		public override void OnLeftRoom()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xC58C04", Offset = "0xC58C04", VA = "0xC58C04", Slot = "47")]
		public override void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xC58C94", Offset = "0xC58C94", VA = "0xC58C94", Slot = "48")]
		public override void OnPhotonPlayerDisconnected(PhotonPlayer otherPlayer)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xC58F10", Offset = "0xC58F10", VA = "0xC58F10", Slot = "52")]
		public override void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xC58FA0", Offset = "0xC58FA0", VA = "0xC58FA0", Slot = "35")]
		public override void OnMasterClientSwitched(PhotonPlayer newMasterClient)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xC59020", Offset = "0xC59020", VA = "0xC59020")]
		public int GetRoomIndex(PhotonPlayer player)
		{
			return default(int);
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xC58164", Offset = "0xC58164", VA = "0xC58164")]
		private void SanitizeIndexing(bool forceIndexing = false)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xC588E4", Offset = "0xC588E4", VA = "0xC588E4")]
		private void RefreshData()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xC584BC", Offset = "0xC584BC", VA = "0xC584BC")]
		private void AssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xC58D24", Offset = "0xC58D24", VA = "0xC58D24")]
		private void UnAssignIndex(PhotonPlayer player)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xC59318", Offset = "0xC59318", VA = "0xC59318")]
		public PlayerRoomIndexing()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public static class PlayerRoomIndexingExtensions
	{
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xC59370", Offset = "0xC59370", VA = "0xC59370")]
		public static int GetRoomIndex(this PhotonPlayer player)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000195")]
	public class ButtonInsideScrollList : UnityEngine.MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect scrollRect;

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xC57E64", Offset = "0xC57E64", VA = "0xC57E64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xC57EBC", Offset = "0xC57EBC", VA = "0xC57EBC", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xC57F80", Offset = "0xC57F80", VA = "0xC57F80", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xC58040", Offset = "0xC58040", VA = "0xC58040")]
		public ButtonInsideScrollList()
		{
		}
	}
	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1DE8", Offset = "0x9E1DE8")]
	public class TextButtonTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color NormalColor;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color HoverColor;

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xC59468", Offset = "0xC59468", VA = "0xC59468")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xC594C0", Offset = "0xC594C0", VA = "0xC594C0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xC59520", Offset = "0xC59520", VA = "0xC59520", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xC59580", Offset = "0xC59580", VA = "0xC59580")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1E4C", Offset = "0x9E1E4C")]
	public class TextToggleIsOnTransition : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xC595C4", Offset = "0xC595C4", VA = "0xC595C4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xC5968C", Offset = "0xC5968C", VA = "0xC5968C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xC5973C", Offset = "0xC5973C", VA = "0xC5973C")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xC59800", Offset = "0xC59800", VA = "0xC59800", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xC598BC", Offset = "0xC598BC", VA = "0xC598BC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xC59974", Offset = "0xC59974", VA = "0xC59974")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace ExitGames.Client.DemoParticle
{
	[Token(Token = "0x2000198")]
	public class TimeKeeper
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastExecutionTime;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool shouldExecute;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6234", Offset = "0x9E6234")]
		private int <Interval>k__BackingField;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6244", Offset = "0x9E6244")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x17000265")]
		public int Interval
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xC52828", Offset = "0xC52828", VA = "0xC52828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0A0", Offset = "0x9EC0A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0xC52830", Offset = "0xC52830", VA = "0xC52830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0B0", Offset = "0x9EC0B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public bool IsEnabled
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xC52838", Offset = "0xC52838", VA = "0xC52838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0C0", Offset = "0x9EC0C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xC52840", Offset = "0xC52840", VA = "0xC52840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0D0", Offset = "0x9EC0D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public bool ShouldExecute
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0xC5284C", Offset = "0xC5284C", VA = "0xC5284C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xC528A4", Offset = "0xC528A4", VA = "0xC528A4")]
			set
			{
			}
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xC528B0", Offset = "0xC528B0", VA = "0xC528B0")]
		public TimeKeeper(int interval)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xC528F4", Offset = "0xC528F4", VA = "0xC528F4")]
		public void Reset()
		{
		}
	}
}
namespace ExitGames.Client.GUI
{
	[Token(Token = "0x2000199")]
	public enum GizmoType
	{
		[Token(Token = "0x40009B1")]
		WireSphere,
		[Token(Token = "0x40009B2")]
		Sphere,
		[Token(Token = "0x40009B3")]
		WireCube,
		[Token(Token = "0x40009B4")]
		Cube
	}
	[Token(Token = "0x200019A")]
	public class GizmoTypeDrawer
	{
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xC52920", Offset = "0xC52920", VA = "0xC52920")]
		public static void Draw(Vector3 center, GizmoType type, Color color, float size)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xC52B18", Offset = "0xC52B18", VA = "0xC52B18")]
		public GizmoTypeDrawer()
		{
		}
	}
}
namespace ExitGames.Client.Photon.Chat
{
	[Token(Token = "0x200019B")]
	public class ChatChannel
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Name;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly List<string> Senders;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly List<object> Messages;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MessageLimit;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6254", Offset = "0x9E6254")]
		private bool <IsPrivate>k__BackingField;

		[Token(Token = "0x17000268")]
		public bool IsPrivate
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xC52EB8", Offset = "0xC52EB8", VA = "0xC52EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0E0", Offset = "0x9EC0E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xC52EC0", Offset = "0xC52EC0", VA = "0xC52EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC0F0", Offset = "0x9EC0F0")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public int MessageCount
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xC52ECC", Offset = "0xC52ECC", VA = "0xC52ECC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xC52F2C", Offset = "0xC52F2C", VA = "0xC52F2C")]
		public ChatChannel(string name)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xC52FD8", Offset = "0xC52FD8", VA = "0xC52FD8")]
		public void Add(string sender, object message)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xC53188", Offset = "0xC53188", VA = "0xC53188")]
		public void Add(string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xC5307C", Offset = "0xC5307C", VA = "0xC5307C")]
		public void TruncateMessages()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xC5322C", Offset = "0xC5322C", VA = "0xC5322C")]
		public void ClearMessages()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xC532B0", Offset = "0xC532B0", VA = "0xC532B0")]
		public string ToStringMessages()
		{
			return null;
		}
	}
	[Token(Token = "0x200019C")]
	public class ChatClient : IPhotonPeerListener
	{
		[Token(Token = "0x40009BA")]
		private const int FriendRequestListMax = 1024;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6264", Offset = "0x9E6264")]
		private string <NameServerAddress>k__BackingField;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6274", Offset = "0x9E6274")]
		private string <FrontendAddress>k__BackingField;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string chatRegion;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6284", Offset = "0x9E6284")]
		private ChatState <State>k__BackingField;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6294", Offset = "0x9E6294")]
		private ChatDisconnectCause <DisconnectedCause>k__BackingField;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E62A4", Offset = "0x9E62A4")]
		private string <AppVersion>k__BackingField;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E62B4", Offset = "0x9E62B4")]
		private string <AppId>k__BackingField;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E62C4", Offset = "0x9E62C4")]
		private AuthenticationValues <AuthValues>k__BackingField;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int MessageLimit;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly Dictionary<string, ChatChannel> PublicChannels;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly Dictionary<string, ChatChannel> PrivateChannels;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly HashSet<string> PublicChannelsUnsubscribing;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly IChatClientListener listener;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ChatPeer chatPeer;

		[Token(Token = "0x40009C9")]
		private const string ChatAppName = "chat";

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool didAuthenticate;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int msDeltaForServiceCalls;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int msTimestampOfLastServiceCall;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E62D4", Offset = "0x9E62D4")]
		private bool <UseBackgroundWorkerForSending>k__BackingField;

		[Token(Token = "0x1700026A")]
		public string NameServerAddress
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xC53410", Offset = "0xC53410", VA = "0xC53410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC100", Offset = "0x9EC100")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xC53418", Offset = "0xC53418", VA = "0xC53418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC110", Offset = "0x9EC110")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public string FrontendAddress
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xC53420", Offset = "0xC53420", VA = "0xC53420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC120", Offset = "0x9EC120")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xC53428", Offset = "0xC53428", VA = "0xC53428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC130", Offset = "0x9EC130")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public string ChatRegion
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xC53430", Offset = "0xC53430", VA = "0xC53430")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xC53438", Offset = "0xC53438", VA = "0xC53438")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public ChatState State
		{
			[Token(Token = "0x6000D52")]
			[Address(RVA = "0xC53440", Offset = "0xC53440", VA = "0xC53440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC140", Offset = "0x9EC140")]
			get
			{
				return default(ChatState);
			}
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xC53448", Offset = "0xC53448", VA = "0xC53448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC150", Offset = "0x9EC150")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public ChatDisconnectCause DisconnectedCause
		{
			[Token(Token = "0x6000D54")]
			[Address(RVA = "0xC53450", Offset = "0xC53450", VA = "0xC53450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC160", Offset = "0x9EC160")]
			get
			{
				return default(ChatDisconnectCause);
			}
			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xC53458", Offset = "0xC53458", VA = "0xC53458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC170", Offset = "0x9EC170")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public bool CanChat
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xC53460", Offset = "0xC53460", VA = "0xC53460")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000270")]
		private bool HasPeer
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xC53484", Offset = "0xC53484", VA = "0xC53484")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000271")]
		public string AppVersion
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xC53558", Offset = "0xC53558", VA = "0xC53558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC180", Offset = "0x9EC180")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xC53560", Offset = "0xC53560", VA = "0xC53560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC190", Offset = "0x9EC190")]
			private set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public string AppId
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xC53568", Offset = "0xC53568", VA = "0xC53568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1A0", Offset = "0x9EC1A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xC53570", Offset = "0xC53570", VA = "0xC53570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1B0", Offset = "0x9EC1B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public AuthenticationValues AuthValues
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xC53578", Offset = "0xC53578", VA = "0xC53578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1C0", Offset = "0x9EC1C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xC53580", Offset = "0xC53580", VA = "0xC53580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1D0", Offset = "0x9EC1D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public string UserId
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xC53588", Offset = "0xC53588", VA = "0xC53588")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xC535A0", Offset = "0xC535A0", VA = "0xC535A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public bool UseBackgroundWorkerForSending
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xC5362C", Offset = "0xC5362C", VA = "0xC5362C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1E0", Offset = "0x9EC1E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xC53634", Offset = "0xC53634", VA = "0xC53634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC1F0", Offset = "0x9EC1F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public ConnectionProtocol TransportProtocol
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xC53640", Offset = "0xC53640", VA = "0xC53640")]
			get
			{
				return default(ConnectionProtocol);
			}
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xC53670", Offset = "0xC53670", VA = "0xC53670")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public Dictionary<ConnectionProtocol, Type> SocketImplementationConfig
		{
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0xC53808", Offset = "0xC53808", VA = "0xC53808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public DebugLevel DebugOut
		{
			[Token(Token = "0x6000D80")]
			[Address(RVA = "0xC53CE4", Offset = "0xC53CE4", VA = "0xC53CE4")]
			get
			{
				return default(DebugLevel);
			}
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0xC55730", Offset = "0xC55730", VA = "0xC55730")]
			set
			{
			}
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xC53494", Offset = "0xC53494", VA = "0xC53494")]
		public bool CanChatInChannel(string channelName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xC53834", Offset = "0xC53834", VA = "0xC53834")]
		public ChatClient(IChatClientListener listener, ConnectionProtocol protocol = ConnectionProtocol.Udp)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xC539C4", Offset = "0xC539C4", VA = "0xC539C4")]
		public bool Connect(string appId, string appVersion, AuthenticationValues authValues)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xC53E40", Offset = "0xC53E40", VA = "0xC53E40")]
		public void Service()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xC53EC4", Offset = "0xC53EC4", VA = "0xC53EC4")]
		private bool SendOutgoingInBackground()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xC53F04", Offset = "0xC53F04", VA = "0xC53F04")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EC200", Offset = "0x9EC200")]
		public void SendAcksOnly()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xC53F20", Offset = "0xC53F20", VA = "0xC53F20")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xC53F7C", Offset = "0xC53F7C", VA = "0xC53F7C")]
		public void StopThread()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xC53F94", Offset = "0xC53F94", VA = "0xC53F94")]
		public bool Subscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xC53F9C", Offset = "0xC53F9C", VA = "0xC53F9C")]
		public bool Subscribe(string[] channels, int messagesFromHistory)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xC54284", Offset = "0xC54284", VA = "0xC54284")]
		public bool Unsubscribe(string[] channels)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xC544B8", Offset = "0xC544B8", VA = "0xC544B8")]
		public bool PublishMessage(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xC547A4", Offset = "0xC547A4", VA = "0xC547A4")]
		internal bool PublishMessageUnreliable(string channelName, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xC544C4", Offset = "0xC544C4", VA = "0xC544C4")]
		private bool publishMessage(string channelName, object message, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xC547B0", Offset = "0xC547B0", VA = "0xC547B0")]
		public bool SendPrivateMessage(string target, object message, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xC547C0", Offset = "0xC547C0", VA = "0xC547C0")]
		public bool SendPrivateMessage(string target, object message, bool encrypt, bool forwardAsWebhook)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xC54ABC", Offset = "0xC54ABC", VA = "0xC54ABC")]
		internal bool SendPrivateMessageUnreliable(string target, object message, bool encrypt, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xC547D0", Offset = "0xC547D0", VA = "0xC547D0")]
		private bool sendPrivateMessage(string target, object message, bool encrypt, bool reliable, bool forwardAsWebhook = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xC54ACC", Offset = "0xC54ACC", VA = "0xC54ACC")]
		private bool SetOnlineStatus(int status, object message, bool skipMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xC54CE8", Offset = "0xC54CE8", VA = "0xC54CE8")]
		public bool SetOnlineStatus(int status)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xC54CF4", Offset = "0xC54CF4", VA = "0xC54CF4")]
		public bool SetOnlineStatus(int status, object message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xC54CFC", Offset = "0xC54CFC", VA = "0xC54CFC")]
		public bool AddFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xC55134", Offset = "0xC55134", VA = "0xC55134")]
		public bool RemoveFriends(string[] friends)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xC5556C", Offset = "0xC5556C", VA = "0xC5556C")]
		public string GetPrivateChannelNameByUser(string userName)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xC555E0", Offset = "0xC555E0", VA = "0xC555E0")]
		public bool TryGetChannel(string channelName, bool isPrivate, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xC55670", Offset = "0xC55670", VA = "0xC55670")]
		public bool TryGetChannel(string channelName, out ChatChannel channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC55760", Offset = "0xC55760", VA = "0xC55760", Slot = "4")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xC5582C", Offset = "0xC5582C", VA = "0xC5582C", Slot = "7")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xC56560", Offset = "0xC56560", VA = "0xC56560", Slot = "5")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnOperationResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xC56DA4", Offset = "0xC56DA4", VA = "0xC56DA4", Slot = "6")]
		private void ExitGames.Client.Photon.IPhotonPeerListener.OnStatusChanged(StatusCode statusCode)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xC54160", Offset = "0xC54160", VA = "0xC54160")]
		private bool SendChannelOperation(string[] channels, byte operation, int historyLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC55BF4", Offset = "0xC55BF4", VA = "0xC55BF4")]
		private void HandlePrivateMessageEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xC558DC", Offset = "0xC558DC", VA = "0xC558DC")]
		private void HandleChatMessagesEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xC560C4", Offset = "0xC560C4", VA = "0xC560C4")]
		private void HandleSubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xC56398", Offset = "0xC56398", VA = "0xC56398")]
		private void HandleUnsubscribeEvent(EventData eventData)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xC56780", Offset = "0xC56780", VA = "0xC56780")]
		private void HandleAuthResponse(OperationResponse operationResponse)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xC55ECC", Offset = "0xC55ECC", VA = "0xC55ECC")]
		private void HandleStatusUpdate(EventData eventData)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xC577C8", Offset = "0xC577C8", VA = "0xC577C8")]
		private void ConnectToFrontEnd()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xC5759C", Offset = "0xC5759C", VA = "0xC5759C")]
		private bool AuthenticateOnFrontEnd()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019D")]
	public enum ChatDisconnectCause
	{
		[Token(Token = "0x40009CF")]
		None,
		[Token(Token = "0x40009D0")]
		DisconnectByServerUserLimit,
		[Token(Token = "0x40009D1")]
		ExceptionOnConnect,
		[Token(Token = "0x40009D2")]
		DisconnectByServer,
		[Token(Token = "0x40009D3")]
		TimeoutDisconnect,
		[Token(Token = "0x40009D4")]
		Exception,
		[Token(Token = "0x40009D5")]
		InvalidAuthentication,
		[Token(Token = "0x40009D6")]
		MaxCcuReached,
		[Token(Token = "0x40009D7")]
		InvalidRegion,
		[Token(Token = "0x40009D8")]
		OperationNotAllowedInCurrentState,
		[Token(Token = "0x40009D9")]
		CustomAuthenticationFailed
	}
	[Token(Token = "0x200019E")]
	public class ChatEventCode
	{
		[Token(Token = "0x40009DA")]
		public const byte ChatMessages = 0;

		[Token(Token = "0x40009DB")]
		public const byte Users = 1;

		[Token(Token = "0x40009DC")]
		public const byte PrivateMessage = 2;

		[Token(Token = "0x40009DD")]
		public const byte FriendsList = 3;

		[Token(Token = "0x40009DE")]
		public const byte StatusUpdate = 4;

		[Token(Token = "0x40009DF")]
		public const byte Subscribe = 5;

		[Token(Token = "0x40009E0")]
		public const byte Unsubscribe = 6;

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xC57900", Offset = "0xC57900", VA = "0xC57900")]
		public ChatEventCode()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class ChatOperationCode
	{
		[Token(Token = "0x40009E1")]
		public const byte Authenticate = 230;

		[Token(Token = "0x40009E2")]
		public const byte Subscribe = 0;

		[Token(Token = "0x40009E3")]
		public const byte Unsubscribe = 1;

		[Token(Token = "0x40009E4")]
		public const byte Publish = 2;

		[Token(Token = "0x40009E5")]
		public const byte SendPrivate = 3;

		[Token(Token = "0x40009E6")]
		public const byte ChannelHistory = 4;

		[Token(Token = "0x40009E7")]
		public const byte UpdateStatus = 5;

		[Token(Token = "0x40009E8")]
		public const byte AddFriends = 6;

		[Token(Token = "0x40009E9")]
		public const byte RemoveFriends = 7;

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xC57908", Offset = "0xC57908", VA = "0xC57908")]
		public ChatOperationCode()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class ChatParameterCode
	{
		[Token(Token = "0x40009EA")]
		public const byte Channels = 0;

		[Token(Token = "0x40009EB")]
		public const byte Channel = 1;

		[Token(Token = "0x40009EC")]
		public const byte Messages = 2;

		[Token(Token = "0x40009ED")]
		public const byte Message = 3;

		[Token(Token = "0x40009EE")]
		public const byte Senders = 4;

		[Token(Token = "0x40009EF")]
		public const byte Sender = 5;

		[Token(Token = "0x40009F0")]
		public const byte ChannelUserCount = 6;

		[Token(Token = "0x40009F1")]
		public const byte UserId = 225;

		[Token(Token = "0x40009F2")]
		public const byte MsgId = 8;

		[Token(Token = "0x40009F3")]
		public const byte MsgIds = 9;

		[Token(Token = "0x40009F4")]
		public const byte Secret = 221;

		[Token(Token = "0x40009F5")]
		public const byte SubscribeResults = 15;

		[Token(Token = "0x40009F6")]
		public const byte Status = 10;

		[Token(Token = "0x40009F7")]
		public const byte Friends = 11;

		[Token(Token = "0x40009F8")]
		public const byte SkipMessage = 12;

		[Token(Token = "0x40009F9")]
		public const byte HistoryLength = 14;

		[Token(Token = "0x40009FA")]
		public const byte WebFlags = 21;

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xC57910", Offset = "0xC57910", VA = "0xC57910")]
		public ChatParameterCode()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class ChatPeer : PhotonPeer
	{
		[Token(Token = "0x40009FB")]
		public const string NameServerHost = "ns.exitgames.com";

		[Token(Token = "0x40009FC")]
		public const string NameServerHttp = "http://ns.exitgamescloud.com:80/photon/n";

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<ConnectionProtocol, int> ProtocolToNameServerPort;

		[Token(Token = "0x17000279")]
		public string NameServerAddress
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xC53D10", Offset = "0xC53D10", VA = "0xC53D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		internal virtual bool IsProtocolSecure
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xC57ABC", Offset = "0xC57ABC", VA = "0xC57ABC", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xC5393C", Offset = "0xC5393C", VA = "0xC5393C")]
		public ChatPeer(IPhotonPeerListener listener, ConnectionProtocol protocol)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xC57AE0", Offset = "0xC57AE0", VA = "0xC57AE0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC238", Offset = "0x9EC238")]
		private void ConfigUnitySockets()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xC57918", Offset = "0xC57918", VA = "0xC57918")]
		private string GetNameServerAddress()
		{
			return null;
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xC53D14", Offset = "0xC53D14", VA = "0xC53D14")]
		public bool Connect()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xC57294", Offset = "0xC57294", VA = "0xC57294")]
		public bool AuthenticateOnNameServer(string appId, string appVersion, string region, AuthenticationValues authValues)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001A2")]
	public enum CustomAuthenticationType : byte
	{
		[Token(Token = "0x40009FF")]
		Custom = 0,
		[Token(Token = "0x4000A00")]
		Steam = 1,
		[Token(Token = "0x4000A01")]
		Facebook = 2,
		[Token(Token = "0x4000A02")]
		Oculus = 3,
		[Token(Token = "0x4000A03")]
		PlayStation = 4,
		[Token(Token = "0x4000A04")]
		Xbox = 5,
		[Token(Token = "0x4000A05")]
		None = byte.MaxValue
	}
	[Token(Token = "0x20001A3")]
	public class AuthenticationValues
	{
		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CustomAuthenticationType authType;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E62E4", Offset = "0x9E62E4")]
		private string <AuthGetParameters>k__BackingField;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E62F4", Offset = "0x9E62F4")]
		private object <AuthPostData>k__BackingField;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6304", Offset = "0x9E6304")]
		private string <Token>k__BackingField;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6314", Offset = "0x9E6314")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x1700027B")]
		public CustomAuthenticationType AuthType
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0xC52B20", Offset = "0xC52B20", VA = "0xC52B20")]
			get
			{
				return default(CustomAuthenticationType);
			}
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xC52B28", Offset = "0xC52B28", VA = "0xC52B28")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public string AuthGetParameters
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xC52B30", Offset = "0xC52B30", VA = "0xC52B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC270", Offset = "0x9EC270")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xC52B38", Offset = "0xC52B38", VA = "0xC52B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC280", Offset = "0x9EC280")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public object AuthPostData
		{
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xC52B40", Offset = "0xC52B40", VA = "0xC52B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC290", Offset = "0x9EC290")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xC52B48", Offset = "0xC52B48", VA = "0xC52B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2A0", Offset = "0x9EC2A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public string Token
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xC52B50", Offset = "0xC52B50", VA = "0xC52B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2B0", Offset = "0x9EC2B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xC52B58", Offset = "0xC52B58", VA = "0xC52B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2C0", Offset = "0x9EC2C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public string UserId
		{
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xC52B60", Offset = "0xC52B60", VA = "0xC52B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2D0", Offset = "0x9EC2D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xC52B68", Offset = "0xC52B68", VA = "0xC52B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2E0", Offset = "0x9EC2E0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xC52B70", Offset = "0xC52B70", VA = "0xC52B70")]
		public AuthenticationValues()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xC52B80", Offset = "0xC52B80", VA = "0xC52B80")]
		public AuthenticationValues(string userId)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xC52BB4", Offset = "0xC52BB4", VA = "0xC52BB4", Slot = "4")]
		public virtual void SetAuthPostData(string stringData)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xC52BF8", Offset = "0xC52BF8", VA = "0xC52BF8", Slot = "5")]
		public virtual void SetAuthPostData(byte[] byteData)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xC52C00", Offset = "0xC52C00", VA = "0xC52C00", Slot = "6")]
		public virtual void AddAuthParameter(string key, string value)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xC52E24", Offset = "0xC52E24", VA = "0xC52E24", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001A4")]
	public class ParameterCode
	{
		[Token(Token = "0x4000A0B")]
		public const byte ApplicationId = 224;

		[Token(Token = "0x4000A0C")]
		public const byte Secret = 221;

		[Token(Token = "0x4000A0D")]
		public const byte AppVersion = 220;

		[Token(Token = "0x4000A0E")]
		public const byte ClientAuthenticationType = 217;

		[Token(Token = "0x4000A0F")]
		public const byte ClientAuthenticationParams = 216;

		[Token(Token = "0x4000A10")]
		public const byte ClientAuthenticationData = 214;

		[Token(Token = "0x4000A11")]
		public const byte Region = 210;

		[Token(Token = "0x4000A12")]
		public const byte Address = 230;

		[Token(Token = "0x4000A13")]
		public const byte UserId = 225;

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xC57E5C", Offset = "0xC57E5C", VA = "0xC57E5C")]
		public ParameterCode()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class ErrorCode
	{
		[Token(Token = "0x4000A14")]
		public const int Ok = 0;

		[Token(Token = "0x4000A15")]
		public const int OperationNotAllowedInCurrentState = -3;

		[Token(Token = "0x4000A16")]
		public const int InvalidOperationCode = -2;

		[Token(Token = "0x4000A17")]
		public const int InternalServerError = -1;

		[Token(Token = "0x4000A18")]
		public const int InvalidAuthentication = 32767;

		[Token(Token = "0x4000A19")]
		public const int GameIdAlreadyExists = 32766;

		[Token(Token = "0x4000A1A")]
		public const int GameFull = 32765;

		[Token(Token = "0x4000A1B")]
		public const int GameClosed = 32764;

		[Token(Token = "0x4000A1C")]
		public const int ServerFull = 32762;

		[Token(Token = "0x4000A1D")]
		public const int UserBlocked = 32761;

		[Token(Token = "0x4000A1E")]
		public const int NoRandomMatchFound = 32760;

		[Token(Token = "0x4000A1F")]
		public const int GameDoesNotExist = 32758;

		[Token(Token = "0x4000A20")]
		public const int MaxCcuReached = 32757;

		[Token(Token = "0x4000A21")]
		public const int InvalidRegion = 32756;

		[Token(Token = "0x4000A22")]
		public const int CustomAuthenticationFailed = 32755;

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xC57E54", Offset = "0xC57E54", VA = "0xC57E54")]
		public ErrorCode()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public enum ChatState
	{
		[Token(Token = "0x4000A24")]
		Uninitialized,
		[Token(Token = "0x4000A25")]
		ConnectingToNameServer,
		[Token(Token = "0x4000A26")]
		ConnectedToNameServer,
		[Token(Token = "0x4000A27")]
		Authenticating,
		[Token(Token = "0x4000A28")]
		Authenticated,
		[Token(Token = "0x4000A29")]
		DisconnectingFromNameServer,
		[Token(Token = "0x4000A2A")]
		ConnectingToFrontEnd,
		[Token(Token = "0x4000A2B")]
		ConnectedToFrontEnd,
		[Token(Token = "0x4000A2C")]
		DisconnectingFromFrontEnd,
		[Token(Token = "0x4000A2D")]
		QueuedComingFromFrontEnd,
		[Token(Token = "0x4000A2E")]
		Disconnecting,
		[Token(Token = "0x4000A2F")]
		Disconnected
	}
	[Token(Token = "0x20001A7")]
	public static class ChatUserStatus
	{
		[Token(Token = "0x4000A30")]
		public const int Offline = 0;

		[Token(Token = "0x4000A31")]
		public const int Invisible = 1;

		[Token(Token = "0x4000A32")]
		public const int Online = 2;

		[Token(Token = "0x4000A33")]
		public const int Away = 3;

		[Token(Token = "0x4000A34")]
		public const int DND = 4;

		[Token(Token = "0x4000A35")]
		public const int LFG = 5;

		[Token(Token = "0x4000A36")]
		public const int Playing = 6;
	}
	[Token(Token = "0x20001A8")]
	public interface IChatClientListener
	{
		[Token(Token = "0x6000DAB")]
		void DebugReturn(DebugLevel level, string message);

		[Token(Token = "0x6000DAC")]
		void OnDisconnected();

		[Token(Token = "0x6000DAD")]
		void OnConnected();

		[Token(Token = "0x6000DAE")]
		void OnChatStateChange(ChatState state);

		[Token(Token = "0x6000DAF")]
		void OnGetMessages(string channelName, string[] senders, object[] messages);

		[Token(Token = "0x6000DB0")]
		void OnPrivateMessage(string sender, object message, string channelName);

		[Token(Token = "0x6000DB1")]
		void OnSubscribed(string[] channels, bool[] results);

		[Token(Token = "0x6000DB2")]
		void OnUnsubscribed(string[] channels);

		[Token(Token = "0x6000DB3")]
		void OnStatusUpdate(string user, int status, bool gotMessage, object message);
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20001A9")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000280")]
		public bool Highlight
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xD48E38", Offset = "0xD48E38", VA = "0xD48E38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xD48E40", Offset = "0xD48E40", VA = "0xD48E40")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xD48E4C", Offset = "0xD48E4C", VA = "0xD48E4C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xD49074", Offset = "0xD49074", VA = "0xD49074", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xD4909C", Offset = "0xD4909C", VA = "0xD4909C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xD490C4", Offset = "0xD490C4", VA = "0xD490C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xD48F18", Offset = "0xD48F18", VA = "0xD48F18")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xD4936C", Offset = "0xD4936C", VA = "0xD4936C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000281")]
		public bool InRange
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xD49964", Offset = "0xD49964", VA = "0xD49964")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xD4996C", Offset = "0xD4996C", VA = "0xD4996C")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public bool Targeted
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xD49B7C", Offset = "0xD49B7C", VA = "0xD49B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xD49B84", Offset = "0xD49B84", VA = "0xD49B84")]
			set
			{
			}
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xD49B90", Offset = "0xD49B90", VA = "0xD49B90", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xD49978", Offset = "0xD49978", VA = "0xD49978")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xD49D88", Offset = "0xD49D88", VA = "0xD49D88")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1EB0", Offset = "0x9E1EB0")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000283")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xD49D90", Offset = "0xD49D90", VA = "0xD49D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0xD49D98", Offset = "0xD49D98", VA = "0xD49D98")]
			set
			{
			}
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xD49DB4", Offset = "0xD49DB4", VA = "0xD49DB4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xD49FDC", Offset = "0xD49FDC", VA = "0xD49FDC", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xD4AA48", Offset = "0xD4AA48", VA = "0xD4AA48", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xD4B1B8", Offset = "0xD4B1B8", VA = "0xD4B1B8", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xD4B618", Offset = "0xD4B618", VA = "0xD4B618")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xD4A25C", Offset = "0xD4A25C", VA = "0xD4A25C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xD4B710", Offset = "0xD4B710", VA = "0xD4B710")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xD4BBAC", Offset = "0xD4BBAC", VA = "0xD4BBAC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xD4BBC4", Offset = "0xD4BBC4", VA = "0xD4BBC4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xD4BBCC", Offset = "0xD4BBCC", VA = "0xD4BBCC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class GrabbableCrosshair : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200037F")]
		public enum CrosshairState
		{
			[Token(Token = "0x40013B2")]
			Disabled,
			[Token(Token = "0x40013B3")]
			Enabled,
			[Token(Token = "0x40013B4")]
			Targeted
		}

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xD4DCD0", Offset = "0xD4DCD0", VA = "0xD4DCD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xD49CB4", Offset = "0xD49CB4", VA = "0xD49CB4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xD4DD40", Offset = "0xD4DD40", VA = "0xD4DD40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xD4DD98", Offset = "0xD4DD98", VA = "0xD4DD98")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class GrabManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xD4DB54", Offset = "0xD4DB54", VA = "0xD4DB54")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xD4DC10", Offset = "0xD4DC10", VA = "0xD4DC10")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xD4DCC8", Offset = "0xD4DCC8", VA = "0xD4DCC8")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class PauseOnInputLoss : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xD16300", Offset = "0xD16300", VA = "0xD16300")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xD163CC", Offset = "0xD163CC", VA = "0xD163CC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xD163D8", Offset = "0xD163D8", VA = "0xD163D8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xD163E4", Offset = "0xD163E4", VA = "0xD163E4")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class BoneCapsuleTriggerLogic : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xD478A0", Offset = "0xD478A0", VA = "0xD478A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xD47900", Offset = "0xD47900", VA = "0xD47900")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xD47C28", Offset = "0xD47C28", VA = "0xD47C28")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xD47D44", Offset = "0xD47D44", VA = "0xD47D44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xD47904", Offset = "0xD47904", VA = "0xD47904")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xD47E58", Offset = "0xD47E58", VA = "0xD47E58")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000380")]
		public enum ContactTest
		{
			[Token(Token = "0x40013B6")]
			PerpenTest,
			[Token(Token = "0x40013B7")]
			BackwardsPress
		}

		[Token(Token = "0x4000A5B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000A5C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000284")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0xD47EF0", Offset = "0xD47EF0", VA = "0xD47EF0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000285")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xD47EF8", Offset = "0xD47EF8", VA = "0xD47EF8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xD47F04", Offset = "0xD47F04", VA = "0xD47F04", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xD48078", Offset = "0xD48078", VA = "0xD48078")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xD48298", Offset = "0xD48298", VA = "0xD48298", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xD4887C", Offset = "0xD4887C", VA = "0xD4887C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xD48780", Offset = "0xD48780", VA = "0xD48780")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xD489CC", Offset = "0xD489CC", VA = "0xD489CC")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xD48AC4", Offset = "0xD48AC4", VA = "0xD48AC4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xD48C20", Offset = "0xD48C20", VA = "0xD48C20")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class ButtonTriggerZone : UnityEngine.MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6454", Offset = "0x9E6454")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6464", Offset = "0x9E6464")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000286")]
		public Collider Collider
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0xD48D14", Offset = "0xD48D14", VA = "0xD48D14", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC2F0", Offset = "0x9EC2F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xD48D1C", Offset = "0xD48D1C", VA = "0xD48D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC300", Offset = "0x9EC300")]
			private set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0xD47D3C", Offset = "0xD47D3C", VA = "0xD47D3C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC310", Offset = "0x9EC310")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xD48D24", Offset = "0xD48D24", VA = "0xD48D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC320", Offset = "0x9EC320")]
			private set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0xD48D2C", Offset = "0xD48D2C", VA = "0xD48D2C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xD48DB0", Offset = "0xD48DB0", VA = "0xD48DB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xD48E30", Offset = "0xD48E30", VA = "0xD48E30")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000289")]
		Collider Collider
		{
			[Token(Token = "0x6000DF2")]
			get;
		}

		[Token(Token = "0x1700028A")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000DF3")]
			get;
		}

		[Token(Token = "0x1700028B")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000DF4")]
			get;
		}
	}
	[Token(Token = "0x20001B3")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xD481E4", Offset = "0xD481E4", VA = "0xD481E4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public enum InteractionType
	{
		[Token(Token = "0x4000A70")]
		Enter,
		[Token(Token = "0x4000A71")]
		Stay,
		[Token(Token = "0x4000A72")]
		Exit
	}
	[Token(Token = "0x20001B5")]
	public class HandsManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000381")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40013B9")]
			Mesh,
			[Token(Token = "0x40013BA")]
			Skeleton,
			[Token(Token = "0x40013BB")]
			Both
		}

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C44", Offset = "0x9E2C44")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700046F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B0B")]
				[Address(RVA = "0xD4EF94", Offset = "0xD4EF94", VA = "0xD4EF94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000470")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B0D")]
				[Address(RVA = "0xD4F004", Offset = "0xD4F004", VA = "0xD4F004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xD4E940", Offset = "0xD4E940", VA = "0xD4E940")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xD4ED30", Offset = "0xD4ED30", VA = "0xD4ED30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0xD4ED34", Offset = "0xD4ED34", VA = "0xD4ED34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0xD4EF9C", Offset = "0xD4EF9C", VA = "0xD4EF9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A73")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6494", Offset = "0x9E6494")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700028C")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0xD4CA28", Offset = "0xD4CA28", VA = "0xD4CA28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0xD4DDA0", Offset = "0xD4DDA0", VA = "0xD4DDA0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0xD4D744", Offset = "0xD4D744", VA = "0xD4D744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0xD4DE1C", Offset = "0xD4DE1C", VA = "0xD4DE1C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xD4DE98", Offset = "0xD4DE98", VA = "0xD4DE98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xD4DEE0", Offset = "0xD4DEE0", VA = "0xD4DEE0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xD4DF5C", Offset = "0xD4DF5C", VA = "0xD4DF5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xD4DFA4", Offset = "0xD4DFA4", VA = "0xD4DFA4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xD4E020", Offset = "0xD4E020", VA = "0xD4E020")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xD4E068", Offset = "0xD4E068", VA = "0xD4E068")]
			private set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0xD4C9E4", Offset = "0xD4C9E4", VA = "0xD4C9E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0xD4E0E4", Offset = "0xD4E0E4", VA = "0xD4E0E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0xD4D700", Offset = "0xD4D700", VA = "0xD4D700")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0xD4E15C", Offset = "0xD4E15C", VA = "0xD4E15C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0xD4E1D4", Offset = "0xD4E1D4", VA = "0xD4E1D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xD4E218", Offset = "0xD4E218", VA = "0xD4E218")]
			private set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xD4E290", Offset = "0xD4E290", VA = "0xD4E290")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xD4E2D4", Offset = "0xD4E2D4", VA = "0xD4E2D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xD4E34C", Offset = "0xD4E34C", VA = "0xD4E34C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xD4E390", Offset = "0xD4E390", VA = "0xD4E390")]
			private set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xD4971C", Offset = "0xD4971C", VA = "0xD4971C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC330", Offset = "0x9EC330")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xD4E408", Offset = "0xD4E408", VA = "0xD4E408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC340", Offset = "0x9EC340")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xD4E45C", Offset = "0xD4E45C", VA = "0xD4E45C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xD4E86C", Offset = "0xD4E86C", VA = "0xD4E86C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xD4E7F8", Offset = "0xD4E7F8", VA = "0xD4E7F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC350", Offset = "0x9EC350")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xD4976C", Offset = "0xD4976C", VA = "0xD4976C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xD4E96C", Offset = "0xD4E96C", VA = "0xD4E96C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xD4D78C", Offset = "0xD4D78C", VA = "0xD4D78C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xD4C818", Offset = "0xD4C818", VA = "0xD4C818")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xD4EC50", Offset = "0xD4EC50", VA = "0xD4EC50")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public abstract class Interactable : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000383")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001B0E")]
			[Address(RVA = "0xD4F6CC", Offset = "0xD4F6CC", VA = "0xD4F6CC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000297")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xD48290", Offset = "0xD48290", VA = "0xD48290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xD48288", Offset = "0xD48288", VA = "0xD48288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xD481DC", Offset = "0xD481DC", VA = "0xD481DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xD4F00C", Offset = "0xD4F00C", VA = "0xD4F00C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xD4F014", Offset = "0xD4F014", VA = "0xD4F014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC3B4", Offset = "0x9EC3B4")]
			add
			{
			}
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xD4F0BC", Offset = "0xD4F0BC", VA = "0xD4F0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC3C4", Offset = "0x9EC3C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xD4F1D8", Offset = "0xD4F1D8", VA = "0xD4F1D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC3D4", Offset = "0x9EC3D4")]
			add
			{
			}
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xD4F280", Offset = "0xD4F280", VA = "0xD4F280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC3E4", Offset = "0x9EC3E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0xD4F39C", Offset = "0xD4F39C", VA = "0xD4F39C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC3F4", Offset = "0x9EC3F4")]
			add
			{
			}
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xD4F444", Offset = "0xD4F444", VA = "0xD4F444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC404", Offset = "0x9EC404")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xD4F164", Offset = "0xD4F164", VA = "0xD4F164", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xD4F328", Offset = "0xD4F328", VA = "0xD4F328", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xD4F4EC", Offset = "0xD4F4EC", VA = "0xD4F4EC", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000E21")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xD48014", Offset = "0xD48014", VA = "0xD48014", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xD4F5E4", Offset = "0xD4F5E4", VA = "0xD4F5E4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xD48D0C", Offset = "0xD48D0C", VA = "0xD48D0C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000A8B")]
		None,
		[Token(Token = "0x4000A8C")]
		Proximity,
		[Token(Token = "0x4000A8D")]
		Contact,
		[Token(Token = "0x4000A8E")]
		Action
	}
	[Token(Token = "0x20001B8")]
	public enum InteractableState
	{
		[Token(Token = "0x4000A90")]
		Default,
		[Token(Token = "0x4000A91")]
		ProximityState,
		[Token(Token = "0x4000A92")]
		ContactState,
		[Token(Token = "0x4000A93")]
		ActionState
	}
	[Token(Token = "0x20001B9")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xD48928", Offset = "0xD48928", VA = "0xD48928")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class InteractableRegistry : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700029B")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xD4F71C", Offset = "0xD4F71C", VA = "0xD4F71C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xD4F560", Offset = "0xD4F560", VA = "0xD4F560")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xD4F648", Offset = "0xD4F648", VA = "0xD4F648")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xD4F784", Offset = "0xD4F784", VA = "0xD4F784")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class InteractableToolsCreator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C54", Offset = "0x9E2C54")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000471")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B13")]
				[Address(RVA = "0xD509F4", Offset = "0xD509F4", VA = "0xD509F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000472")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B15")]
				[Address(RVA = "0xD50A64", Offset = "0xD50A64", VA = "0xD50A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0xD503E8", Offset = "0xD503E8", VA = "0xD503E8")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001B10")]
			[Address(RVA = "0xD50594", Offset = "0xD50594", VA = "0xD50594", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B11")]
			[Address(RVA = "0xD50608", Offset = "0xD50608", VA = "0xD50608", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B12")]
			[Address(RVA = "0xD505B0", Offset = "0xD505B0", VA = "0xD505B0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001B14")]
			[Address(RVA = "0xD509FC", Offset = "0xD509FC", VA = "0xD509FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xD502B8", Offset = "0xD502B8", VA = "0xD502B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xD50334", Offset = "0xD50334", VA = "0xD50334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC414", Offset = "0x9EC414")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xD50414", Offset = "0xD50414", VA = "0xD50414")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xD5058C", Offset = "0xD5058C", VA = "0xD5058C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class InteractableToolsInputRouter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700029C")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xD4C138", Offset = "0xD4C138", VA = "0xD4C138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xD4C2C0", Offset = "0xD4C2C0", VA = "0xD4C2C0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xD50A6C", Offset = "0xD50A6C", VA = "0xD50A6C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xD50B40", Offset = "0xD50B40", VA = "0xD50B40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xD50EC0", Offset = "0xD50EC0", VA = "0xD50EC0")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xD50F08", Offset = "0xD50F08", VA = "0xD50F08")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xD512AC", Offset = "0xD512AC", VA = "0xD512AC")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xD513F4", Offset = "0xD513F4", VA = "0xD513F4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C64", Offset = "0x9E2C64")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000473")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B19")]
				[Address(RVA = "0xD4D9E8", Offset = "0xD4D9E8", VA = "0xD4D9E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000474")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B1B")]
				[Address(RVA = "0xD4DA58", Offset = "0xD4DA58", VA = "0xD4DA58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B16")]
			[Address(RVA = "0xD4C410", Offset = "0xD4C410", VA = "0xD4C410")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xD4D2CC", Offset = "0xD4D2CC", VA = "0xD4D2CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B18")]
			[Address(RVA = "0xD4D2D0", Offset = "0xD4D2D0", VA = "0xD4D2D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xD4D9F0", Offset = "0xD4D9F0", VA = "0xD4D9F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA3")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700029D")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0xD4BFDC", Offset = "0xD4BFDC", VA = "0xD4BFDC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700029E")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xD4BFE4", Offset = "0xD4BFE4", VA = "0xD4BFE4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700029F")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xD4BFEC", Offset = "0xD4BFEC", VA = "0xD4BFEC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A0")]
		public override bool EnableState
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xD4BFF4", Offset = "0xD4BFF4", VA = "0xD4BFF4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xD4C03C", Offset = "0xD4C03C", VA = "0xD4C03C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xD4C08C", Offset = "0xD4C08C", VA = "0xD4C08C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xD4C39C", Offset = "0xD4C39C", VA = "0xD4C39C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC478", Offset = "0x9EC478")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xD4C43C", Offset = "0xD4C43C", VA = "0xD4C43C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xD4CA84", Offset = "0xD4CA84", VA = "0xD4CA84")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xD4CD3C", Offset = "0xD4CD3C", VA = "0xD4CD3C")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xD4CEB4", Offset = "0xD4CEB4", VA = "0xD4CEB4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xD4D1A0", Offset = "0xD4D1A0", VA = "0xD4D1A0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xD4D1A4", Offset = "0xD4D1A4", VA = "0xD4D1A4", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xD4D1A8", Offset = "0xD4D1A8", VA = "0xD4D1A8")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class FingerTipPokeToolView : UnityEngine.MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6524", Offset = "0x9E6524")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6534", Offset = "0x9E6534")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6544", Offset = "0x9E6544")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170002A1")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xD4DA60", Offset = "0xD4DA60", VA = "0xD4DA60", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC4DC", Offset = "0x9EC4DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xD4C394", Offset = "0xD4C394", VA = "0xD4C394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC4EC", Offset = "0x9EC4EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public bool EnableState
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xD4DA68", Offset = "0xD4DA68", VA = "0xD4DA68", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xD4DA98", Offset = "0xD4DA98", VA = "0xD4DA98", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xD4DAD0", Offset = "0xD4DAD0", VA = "0xD4DAD0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC4FC", Offset = "0x9EC4FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xD4DAD8", Offset = "0xD4DAD8", VA = "0xD4DAD8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC50C", Offset = "0x9EC50C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public float SphereRadius
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xD4CA70", Offset = "0xD4CA70", VA = "0xD4CA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC51C", Offset = "0x9EC51C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xD4DAE4", Offset = "0xD4DAE4", VA = "0xD4DAE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC52C", Offset = "0x9EC52C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xD4DAEC", Offset = "0xD4DAEC", VA = "0xD4DAEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xD4DB48", Offset = "0xD4DB48", VA = "0xD4DB48", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xD4DB4C", Offset = "0xD4DB4C", VA = "0xD4DB4C")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000AB3")]
		None = 0,
		[Token(Token = "0x4000AB4")]
		Ray = 1,
		[Token(Token = "0x4000AB5")]
		Poke = 4,
		[Token(Token = "0x4000AB6")]
		All = -1
	}
	[Token(Token = "0x20001C0")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000AB8")]
		Inactive,
		[Token(Token = "0x4000AB9")]
		PrimaryInputDown,
		[Token(Token = "0x4000ABA")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000ABB")]
		PrimaryInputUp
	}
	[Token(Token = "0x20001C1")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xD4D15C", Offset = "0xD4D15C", VA = "0xD4D15C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public abstract class InteractableTool : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6554", Offset = "0x9E6554")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6564", Offset = "0x9E6564")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6574", Offset = "0x9E6574")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002A5")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xD48C10", Offset = "0xD48C10", VA = "0xD48C10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A6")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xD48C18", Offset = "0xD48C18", VA = "0xD48C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC53C", Offset = "0x9EC53C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xD4F800", Offset = "0xD4F800", VA = "0xD4F800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC54C", Offset = "0x9EC54C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000E54")]
			get;
		}

		[Token(Token = "0x170002A8")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000E55")]
			get;
		}

		[Token(Token = "0x170002A9")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000E56")]
			get;
		}

		[Token(Token = "0x170002AA")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0xD48C04", Offset = "0xD48C04", VA = "0xD48C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC55C", Offset = "0x9EC55C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xD4CEA8", Offset = "0xD4CEA8", VA = "0xD4CEA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC56C", Offset = "0x9EC56C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0xD48870", Offset = "0xD48870", VA = "0xD48870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC57C", Offset = "0x9EC57C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0xD4CA78", Offset = "0xD4CA78", VA = "0xD4CA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC58C", Offset = "0x9EC58C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000E5F")]
			get;
			[Token(Token = "0x6000E60")]
			set;
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xD4F80C", Offset = "0xD4F80C", VA = "0xD4F80C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000E5C")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000E5D")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000E5E")]
		public abstract void DeFocus();

		[Token(Token = "0x6000E61")]
		public abstract void Initialize();

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xD4F814", Offset = "0xD4F814", VA = "0xD4F814")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xD4F864", Offset = "0xD4F864", VA = "0xD4F864")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xD4F8C4", Offset = "0xD4F8C4", VA = "0xD4F8C4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xD4FB8C", Offset = "0xD4FB8C", VA = "0xD4FB8C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xD4D1BC", Offset = "0xD4D1BC", VA = "0xD4D1BC")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170002AD")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000E67")]
			get;
		}

		[Token(Token = "0x170002AE")]
		bool EnableState
		{
			[Token(Token = "0x6000E69")]
			get;
			[Token(Token = "0x6000E6A")]
			set;
		}

		[Token(Token = "0x170002AF")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000E6B")]
			get;
			[Token(Token = "0x6000E6C")]
			set;
		}

		[Token(Token = "0x6000E68")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20001C4")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000386")]
		private enum PinchState
		{
			[Token(Token = "0x40013CC")]
			None,
			[Token(Token = "0x40013CD")]
			PinchDown,
			[Token(Token = "0x40013CE")]
			PinchStay,
			[Token(Token = "0x40013CF")]
			PinchUp
		}

		[Token(Token = "0x4000AC8")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002B0")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xD163EC", Offset = "0xD163EC", VA = "0xD163EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B1")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xD16478", Offset = "0xD16478", VA = "0xD16478")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B2")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0xD16504", Offset = "0xD16504", VA = "0xD16504")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xD16590", Offset = "0xD16590", VA = "0xD16590")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xD165BC", Offset = "0xD165BC", VA = "0xD165BC")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000ACB")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000ACC")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000ACD")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000ACE")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000ACF")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E6594", Offset = "0x9E6594")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002B3")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xD16864", Offset = "0xD16864", VA = "0xD16864", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002B4")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xD1686C", Offset = "0xD1686C", VA = "0xD1686C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002B5")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xD168F4", Offset = "0xD168F4", VA = "0xD168F4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B6")]
		public override bool EnableState
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0xD168FC", Offset = "0xD168FC", VA = "0xD168FC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xD16958", Offset = "0xD16958", VA = "0xD16958", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xD16A0C", Offset = "0xD16A0C", VA = "0xD16A0C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xD16A84", Offset = "0xD16A84", VA = "0xD16A84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xD16B34", Offset = "0xD16B34", VA = "0xD16B34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xD16EE0", Offset = "0xD16EE0", VA = "0xD16EE0")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xD16FF0", Offset = "0xD16FF0", VA = "0xD16FF0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xD173B0", Offset = "0xD173B0", VA = "0xD173B0")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xD17570", Offset = "0xD17570", VA = "0xD17570")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xD176A0", Offset = "0xD176A0", VA = "0xD176A0")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xD17A00", Offset = "0xD17A00", VA = "0xD17A00")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xD17E4C", Offset = "0xD17E4C", VA = "0xD17E4C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xD17F38", Offset = "0xD17F38", VA = "0xD17F38", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xD17F74", Offset = "0xD17F74", VA = "0xD17F74")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class RayToolView : UnityEngine.MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000ADB")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000ADC")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6608", Offset = "0x9E6608")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170002B7")]
		public bool EnableState
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0xD16928", Offset = "0xD16928", VA = "0xD16928", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0xD1698C", Offset = "0xD1698C", VA = "0xD1698C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0xD18030", Offset = "0xD18030", VA = "0xD18030", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0xD16E90", Offset = "0xD16E90", VA = "0xD16E90", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xD182C8", Offset = "0xD182C8", VA = "0xD182C8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC59C", Offset = "0x9EC59C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xD16A7C", Offset = "0xD16A7C", VA = "0xD16A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC5AC", Offset = "0x9EC5AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xD18038", Offset = "0xD18038", VA = "0xD18038")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xD17E94", Offset = "0xD17E94", VA = "0xD17E94", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xD182D0", Offset = "0xD182D0", VA = "0xD182D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xD18664", Offset = "0xD18664", VA = "0xD18664")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xD18854", Offset = "0xD18854", VA = "0xD18854")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class DistanceGrabberSample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170002BA")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xD4BBEC", Offset = "0xD4BBEC", VA = "0xD4BBEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xD4BBF4", Offset = "0xD4BBF4", VA = "0xD4BBF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xD4BCAC", Offset = "0xD4BCAC", VA = "0xD4BCAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xD4BCB4", Offset = "0xD4BCB4", VA = "0xD4BCB4")]
			set
			{
			}
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xD4BD58", Offset = "0xD4BD58", VA = "0xD4BD58")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xD4BFB4", Offset = "0xD4BFB4", VA = "0xD4BFB4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xD4BFC4", Offset = "0xD4BFC4", VA = "0xD4BFC4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xD4BFD4", Offset = "0xD4BFD4", VA = "0xD4BFD4")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class ControllerBoxController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xD49468", Offset = "0xD49468", VA = "0xD49468")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xD4946C", Offset = "0xD4946C", VA = "0xD4946C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xD494C8", Offset = "0xD494C8", VA = "0xD494C8")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xD49524", Offset = "0xD49524", VA = "0xD49524")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xD49580", Offset = "0xD49580", VA = "0xD49580")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xD495DC", Offset = "0xD495DC", VA = "0xD495DC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xD49638", Offset = "0xD49638", VA = "0xD49638")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xD49694", Offset = "0xD49694", VA = "0xD49694")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xD49854", Offset = "0xD49854", VA = "0xD49854")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xD498FC", Offset = "0xD498FC", VA = "0xD498FC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class CowController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xD49904", Offset = "0xD49904", VA = "0xD49904")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xD49908", Offset = "0xD49908", VA = "0xD49908")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xD498AC", Offset = "0xD498AC", VA = "0xD498AC")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xD4995C", Offset = "0xD4995C", VA = "0xD4995C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class PanelHMDFollower : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C74", Offset = "0x9E2C74")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000475")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B1F")]
				[Address(RVA = "0xD16288", Offset = "0xD16288", VA = "0xD16288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B21")]
				[Address(RVA = "0xD162F8", Offset = "0xD162F8", VA = "0xD162F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0xD15F18", Offset = "0xD15F18", VA = "0xD15F18")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0xD15FFC", Offset = "0xD15FFC", VA = "0xD15FFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0xD16000", Offset = "0xD16000", VA = "0xD16000", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xD16290", Offset = "0xD16290", VA = "0xD16290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AEC")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000AED")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xD15AA4", Offset = "0xD15AA4", VA = "0xD15AA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xD15B44", Offset = "0xD15B44", VA = "0xD15B44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xD15E3C", Offset = "0xD15E3C", VA = "0xD15E3C")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xD15DC8", Offset = "0xD15DC8", VA = "0xD15DC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC5BC", Offset = "0x9EC5BC")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xD15F44", Offset = "0xD15F44", VA = "0xD15F44")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class SelectionCylinder : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000388")]
		public enum SelectionState
		{
			[Token(Token = "0x40013D7")]
			Off,
			[Token(Token = "0x40013D8")]
			Selected,
			[Token(Token = "0x40013D9")]
			Highlighted
		}

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170002BC")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0xD188B4", Offset = "0xD188B4", VA = "0xD188B4")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0xD188BC", Offset = "0xD188BC", VA = "0xD188BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xD18AB4", Offset = "0xD18AB4", VA = "0xD18AB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xD18D0C", Offset = "0xD18D0C", VA = "0xD18D0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xD18964", Offset = "0xD18964", VA = "0xD18964")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xD18DF8", Offset = "0xD18DF8", VA = "0xD18DF8")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class TrackSegment : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000389")]
		public enum SegmentType
		{
			[Token(Token = "0x40013DB")]
			Straight,
			[Token(Token = "0x40013DC")]
			LeftTurn,
			[Token(Token = "0x40013DD")]
			RightTurn,
			[Token(Token = "0x40013DE")]
			Switch
		}

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000B02")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000B03")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E66E8", Offset = "0x9E66E8")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170002BD")]
		public float StartDistance
		{
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0xD18E64", Offset = "0xD18E64", VA = "0xD18E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC620", Offset = "0x9EC620")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0xD18E6C", Offset = "0xD18E6C", VA = "0xD18E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC630", Offset = "0x9EC630")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float GridSize
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0xD18E74", Offset = "0xD18E74", VA = "0xD18E74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0xD18E7C", Offset = "0xD18E7C", VA = "0xD18E7C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public int SubDivCount
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0xD18E84", Offset = "0xD18E84", VA = "0xD18E84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xD18E8C", Offset = "0xD18E8C", VA = "0xD18E8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public SegmentType Type
		{
			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0xD18E94", Offset = "0xD18E94", VA = "0xD18E94")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170002C1")]
		public Pose EndPose
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xD18E9C", Offset = "0xD18E9C", VA = "0xD18E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C2")]
		public float Radius
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0xD193AC", Offset = "0xD193AC", VA = "0xD193AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C3")]
		public float SegmentLength
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xD18F04", Offset = "0xD18F04", VA = "0xD18F04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xD193BC", Offset = "0xD193BC", VA = "0xD193BC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xD193D4", Offset = "0xD193D4", VA = "0xD193D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xD18F44", Offset = "0xD18F44", VA = "0xD18F44")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xD193D8", Offset = "0xD193D8", VA = "0xD193D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xD193DC", Offset = "0xD193DC", VA = "0xD193DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xD19448", Offset = "0xD19448", VA = "0xD19448")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xD1A10C", Offset = "0xD1A10C", VA = "0xD1A10C")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xD1A4B4", Offset = "0xD1A4B4", VA = "0xD1A4B4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class TrainButtonVisualController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C84", Offset = "0x9E2C84")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000477")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B25")]
				[Address(RVA = "0xD1B2F0", Offset = "0xD1B2F0", VA = "0xD1B2F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000478")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B27")]
				[Address(RVA = "0xD1B360", Offset = "0xD1B360", VA = "0xD1B360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B22")]
			[Address(RVA = "0xD1AFD0", Offset = "0xD1AFD0", VA = "0xD1AFD0")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001B23")]
			[Address(RVA = "0xD1B0CC", Offset = "0xD1B0CC", VA = "0xD1B0CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B24")]
			[Address(RVA = "0xD1B0D0", Offset = "0xD1B0D0", VA = "0xD1B0D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B26")]
			[Address(RVA = "0xD1B2F8", Offset = "0xD1B2F8", VA = "0xD1B2F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B09")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000B0A")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xD1A558", Offset = "0xD1A558", VA = "0xD1A558")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xD1A62C", Offset = "0xD1A62C", VA = "0xD1A62C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xD1A6E0", Offset = "0xD1A6E0", VA = "0xD1A6E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xD1A830", Offset = "0xD1A830", VA = "0xD1A830")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xD1A9C4", Offset = "0xD1A9C4", VA = "0xD1A9C4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xD1ABB4", Offset = "0xD1ABB4", VA = "0xD1ABB4")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xD1AEDC", Offset = "0xD1AEDC", VA = "0xD1AEDC")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xD1AD6C", Offset = "0xD1AD6C", VA = "0xD1AD6C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xD1AD80", Offset = "0xD1AD80", VA = "0xD1AD80")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xD1AF5C", Offset = "0xD1AF5C", VA = "0xD1AF5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC640", Offset = "0x9EC640")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xD1AFFC", Offset = "0xD1AFFC", VA = "0xD1AFFC")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170002C4")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xD1B368", Offset = "0xD1B368", VA = "0xD1B368")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xD1B378", Offset = "0xD1B378", VA = "0xD1B378", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xD1B380", Offset = "0xD1B380", VA = "0xD1B380", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xD1B94C", Offset = "0xD1B94C", VA = "0xD1B94C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public abstract class TrainCarBase : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000B1D")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000B1E")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E67E8", Offset = "0x9E67E8")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170002C5")]
		public float Distance
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xD1B3D0", Offset = "0xD1B3D0", VA = "0xD1B3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC6A4", Offset = "0x9EC6A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0xD1B3D8", Offset = "0xD1B3D8", VA = "0xD1B3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC6B4", Offset = "0x9EC6B4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public float Scale
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0xD1BA44", Offset = "0xD1BA44", VA = "0xD1BA44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0xD1BA4C", Offset = "0xD1BA4C", VA = "0xD1BA4C")]
			set
			{
			}
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xD1B37C", Offset = "0xD1B37C", VA = "0xD1B37C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xD1BA54", Offset = "0xD1BA54", VA = "0xD1BA54")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xD1B3E0", Offset = "0xD1B3E0", VA = "0xD1B3E0")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xD1B7CC", Offset = "0xD1B7CC", VA = "0xD1B7CC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000ED9")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xD1B9BC", Offset = "0xD1B9BC", VA = "0xD1B9BC")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class TrainCrossingController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2C94", Offset = "0x9E2C94")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000479")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B2B")]
				[Address(RVA = "0xD1C684", Offset = "0xD1C684", VA = "0xD1C684", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B2D")]
				[Address(RVA = "0xD1C6F4", Offset = "0xD1C6F4", VA = "0xD1C6F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xD1C1C8", Offset = "0xD1C1C8", VA = "0xD1C1C8")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001B29")]
			[Address(RVA = "0xD1C3B0", Offset = "0xD1C3B0", VA = "0xD1C3B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0xD1C3B4", Offset = "0xD1C3B4", VA = "0xD1C3B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B2C")]
			[Address(RVA = "0xD1C68C", Offset = "0xD1C68C", VA = "0xD1C68C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xD1BD08", Offset = "0xD1BD08", VA = "0xD1BD08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xD1BD64", Offset = "0xD1BD64", VA = "0xD1BD64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xD1BE70", Offset = "0xD1BE70", VA = "0xD1BE70")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xD1C020", Offset = "0xD1C020", VA = "0xD1C020")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xD1BEDC", Offset = "0xD1BEDC", VA = "0xD1BEDC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xD1C130", Offset = "0xD1C130", VA = "0xD1C130")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC6C4", Offset = "0x9EC6C4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xD1C1F4", Offset = "0xD1C1F4", VA = "0xD1C1F4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xD1C2BC", Offset = "0xD1C2BC", VA = "0xD1C2BC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xD1C350", Offset = "0xD1C350", VA = "0xD1C350")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200038C")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40013F1")]
			Start,
			[Token(Token = "0x40013F2")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40013F3")]
			Stop
		}

		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2CA4", Offset = "0x9E2CA4")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700047B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B31")]
				[Address(RVA = "0xD1D59C", Offset = "0xD1D59C", VA = "0xD1D59C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B33")]
				[Address(RVA = "0xD1D60C", Offset = "0xD1D60C", VA = "0xD1D60C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0xD1CA68", Offset = "0xD1CA68", VA = "0xD1CA68")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0xD1D250", Offset = "0xD1D250", VA = "0xD1D250", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B30")]
			[Address(RVA = "0xD1D254", Offset = "0xD1D254", VA = "0xD1D254", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B32")]
			[Address(RVA = "0xD1D5A4", Offset = "0xD1D5A4", VA = "0xD1D5A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B31")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000B32")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000B33")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000B34")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E6848", Offset = "0x9E6848")]
		protected float _initialSpeed;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xD1C6FC", Offset = "0xD1C6FC", VA = "0xD1C6FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xD1C894", Offset = "0xD1C894", VA = "0xD1C894")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xD1C8A0", Offset = "0xD1C8A0", VA = "0xD1C8A0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xD1CA1C", Offset = "0xD1CA1C", VA = "0xD1CA1C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xD1C7F8", Offset = "0xD1C7F8", VA = "0xD1C7F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC728", Offset = "0x9EC728")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xD1CA94", Offset = "0xD1CA94", VA = "0xD1CA94")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xD1C9A8", Offset = "0xD1C9A8", VA = "0xD1C9A8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xD1CD18", Offset = "0xD1CD18", VA = "0xD1CD18")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xD1CED8", Offset = "0xD1CED8", VA = "0xD1CED8")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xD1CDD4", Offset = "0xD1CDD4", VA = "0xD1CDD4")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xD1CF94", Offset = "0xD1CF94", VA = "0xD1CF94")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xD1D01C", Offset = "0xD1D01C", VA = "0xD1D01C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xD1D0EC", Offset = "0xD1D0EC", VA = "0xD1D0EC")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xD1D1D4", Offset = "0xD1D1D4", VA = "0xD1D1D4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xD1D1E4", Offset = "0xD1D1E4", VA = "0xD1D1E4")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class TrainTrack : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170002C7")]
		public float TrackLength
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xD1BB38", Offset = "0xD1BB38", VA = "0xD1BB38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0xD1D614", Offset = "0xD1D614", VA = "0xD1D614")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xD1D61C", Offset = "0xD1D61C", VA = "0xD1D61C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xD1BB40", Offset = "0xD1BB40", VA = "0xD1BB40")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xD1D620", Offset = "0xD1D620", VA = "0xD1D620")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xD1D8B4", Offset = "0xD1D8B4", VA = "0xD1D8B4")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xD1DA08", Offset = "0xD1DA08", VA = "0xD1DA08")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class Pose
	{
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xD16748", Offset = "0xD16748", VA = "0xD16748")]
		public Pose()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xD167F4", Offset = "0xD167F4", VA = "0xD167F4")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class WindmillBladesController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2CB4", Offset = "0x9E2CB4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700047D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B37")]
				[Address(RVA = "0xD1E0E4", Offset = "0xD1E0E4", VA = "0xD1E0E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B39")]
				[Address(RVA = "0xD1E154", Offset = "0xD1E154", VA = "0xD1E154", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xD1DCF4", Offset = "0xD1DCF4", VA = "0xD1DCF4")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xD1DEC4", Offset = "0xD1DEC4", VA = "0xD1DEC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B36")]
			[Address(RVA = "0xD1DEC8", Offset = "0xD1DEC8", VA = "0xD1DEC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xD1E0EC", Offset = "0xD1E0EC", VA = "0xD1E0EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2CC4", Offset = "0x9E2CC4")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700047F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B3D")]
				[Address(RVA = "0xD1E24C", Offset = "0xD1E24C", VA = "0xD1E24C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000480")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B3F")]
				[Address(RVA = "0xD1E2BC", Offset = "0xD1E2BC", VA = "0xD1E2BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xD1DDEC", Offset = "0xD1DDEC", VA = "0xD1DDEC")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0xD1E15C", Offset = "0xD1E15C", VA = "0xD1E15C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xD1E160", Offset = "0xD1E160", VA = "0xD1E160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0xD1E254", Offset = "0xD1E254", VA = "0xD1E254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B57")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E6A30", Offset = "0x9E6A30")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170002C8")]
		public bool IsMoving
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0xD1DA24", Offset = "0xD1DA24", VA = "0xD1DA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC78C", Offset = "0x9EC78C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xD1DA2C", Offset = "0xD1DA2C", VA = "0xD1DA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC79C", Offset = "0x9EC79C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xD1DA38", Offset = "0xD1DA38", VA = "0xD1DA38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xD1DA7C", Offset = "0xD1DA7C", VA = "0xD1DA7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xD1DBF4", Offset = "0xD1DBF4", VA = "0xD1DBF4")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xD1DC5C", Offset = "0xD1DC5C", VA = "0xD1DC5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC7AC", Offset = "0x9EC7AC")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xD1DD20", Offset = "0xD1DD20", VA = "0xD1DD20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC810", Offset = "0x9EC810")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xD1DE18", Offset = "0xD1DE18", VA = "0xD1DE18")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xD1DEBC", Offset = "0xD1DEBC", VA = "0xD1DEBC")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class WindmillController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xD1E2C4", Offset = "0xD1E2C4", VA = "0xD1E2C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xD1E340", Offset = "0xD1E340", VA = "0xD1E340")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xD1E410", Offset = "0xD1E410", VA = "0xD1E410")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xD1E528", Offset = "0xD1E528", VA = "0xD1E528")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xD1E5F8", Offset = "0xD1E5F8", VA = "0xD1E5F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xD1E708", Offset = "0xD1E708", VA = "0xD1E708")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000B68")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000B69")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000B6A")]
		EUDT_None,
		[Token(Token = "0x4000B6B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20001D7")]
	public class OVROverlaySample : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2CD4", Offset = "0x9E2CD4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000481")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B43")]
				[Address(RVA = "0xD15A2C", Offset = "0xD15A2C", VA = "0xD15A2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000482")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B45")]
				[Address(RVA = "0xD15A9C", Offset = "0xD15A9C", VA = "0xD15A9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B40")]
			[Address(RVA = "0xD156F4", Offset = "0xD156F4", VA = "0xD156F4")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001B41")]
			[Address(RVA = "0xD15720", Offset = "0xD15720", VA = "0xD15720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B42")]
			[Address(RVA = "0xD15724", Offset = "0xD15724", VA = "0xD15724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B44")]
			[Address(RVA = "0xD15A34", Offset = "0xD15A34", VA = "0xD15A34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000B6D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000B6E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000B6F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E6A70", Offset = "0x9E6A70")]
		public GameObject mainCamera;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E6AA8", Offset = "0x9E6AA8")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xD514B4", Offset = "0xD514B4", VA = "0xD514B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xD51F64", Offset = "0xD51F64", VA = "0xD51F64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xD520C0", Offset = "0xD520C0", VA = "0xD520C0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xD52240", Offset = "0xD52240", VA = "0xD52240")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xD523C0", Offset = "0xD523C0", VA = "0xD523C0")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xD52094", Offset = "0xD52094", VA = "0xD52094")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xD524D0", Offset = "0xD524D0", VA = "0xD524D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EC874", Offset = "0x9EC874")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xD52544", Offset = "0xD52544", VA = "0xD52544")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xD518D4", Offset = "0xD518D4", VA = "0xD518D4")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xD526A8", Offset = "0xD526A8", VA = "0xD526A8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xD52580", Offset = "0xD52580", VA = "0xD52580")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xD52AC8", Offset = "0xD52AC8", VA = "0xD52AC8")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xD52BA4", Offset = "0xD52BA4", VA = "0xD52BA4")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xD52C20", Offset = "0xD52C20", VA = "0xD52C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC8D8", Offset = "0x9EC8D8")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xD52C70", Offset = "0xD52C70", VA = "0xD52C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC8E8", Offset = "0x9EC8E8")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xD52CC0", Offset = "0xD52CC0", VA = "0xD52CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EC8F8", Offset = "0x9EC8F8")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1F24", Offset = "0x9E1F24")]
	public class Hand : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2CE4", Offset = "0x9E2CE4")]
		private sealed class <>c
		{
			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001B47")]
			[Address(RVA = "0xD3DA68", Offset = "0xD3DA68", VA = "0xD3DA68")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xD3DA70", Offset = "0xD3DA70", VA = "0xD3DA70")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B84")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000B85")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000B86")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000B87")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000B88")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000B89")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000B8A")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000B8B")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000B8C")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000B8D")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000B8E")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xD3CA70", Offset = "0xD3CA70", VA = "0xD3CA70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xD3CAC8", Offset = "0xD3CAC8", VA = "0xD3CAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xD3CF70", Offset = "0xD3CF70", VA = "0xD3CF70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xD3D03C", Offset = "0xD3D03C", VA = "0xD3D03C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xD3D15C", Offset = "0xD3D15C", VA = "0xD3D15C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xD3D53C", Offset = "0xD3D53C", VA = "0xD3D53C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xD3D6D4", Offset = "0xD3D6D4", VA = "0xD3D6D4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xD3D884", Offset = "0xD3D884", VA = "0xD3D884")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xD3D1F8", Offset = "0xD3D1F8", VA = "0xD3D1F8")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xD3D298", Offset = "0xD3D298", VA = "0xD3D298")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xD3CD34", Offset = "0xD3CD34", VA = "0xD3CD34")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xD3D9EC", Offset = "0xD3D9EC", VA = "0xD3D9EC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000BA1")]
		Default,
		[Token(Token = "0x4000BA2")]
		Generic,
		[Token(Token = "0x4000BA3")]
		PingPongBall,
		[Token(Token = "0x4000BA4")]
		Controller
	}
	[Token(Token = "0x20001DA")]
	public class HandPose : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170002C9")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0xD3D9DC", Offset = "0xD3D9DC", VA = "0xD3D9DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CA")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0xD3D9E4", Offset = "0xD3D9E4", VA = "0xD3D9E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CB")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0xD3D9D4", Offset = "0xD3D9D4", VA = "0xD3D9D4")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xD3DAAC", Offset = "0xD3DAAC", VA = "0xD3DAAC")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class TouchController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xD3DAB4", Offset = "0xD3DAB4", VA = "0xD3DAB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xD3DD80", Offset = "0xD3DD80", VA = "0xD3DD80")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xD3DDF0", Offset = "0xD3DDF0", VA = "0xD3DDF0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xD3DE40", Offset = "0xD3DE40", VA = "0xD3DE40")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20001DC")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000BAC")]
		TRIANGLES,
		[Token(Token = "0x4000BAD")]
		QUADS
	}
	[Token(Token = "0x20001DD")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000BAF")]
		ABSORPTION,
		[Token(Token = "0x4000BB0")]
		TRANSMISSION,
		[Token(Token = "0x4000BB1")]
		SCATTERING
	}
	[Token(Token = "0x20001DE")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20001DF")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000BB6")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000BB7")]
		public const string Tab = "    ";

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xD3E520", Offset = "0xD3E520", VA = "0xD3E520")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC908", Offset = "0x9EC908")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC908", Offset = "0x9EC908")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xD3E5A8", Offset = "0xD3E5A8", VA = "0xD3E5A8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC968", Offset = "0x9EC968")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC968", Offset = "0x9EC968")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xD3E640", Offset = "0xD3E640", VA = "0xD3E640")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC9C8", Offset = "0x9EC9C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9EC9C8", Offset = "0x9EC9C8")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xD3E6C8", Offset = "0xD3E6C8", VA = "0xD3E6C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9ECA28", Offset = "0x9ECA28")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9ECA28", Offset = "0x9ECA28")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xD3E750", Offset = "0xD3E750", VA = "0xD3E750")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9ECA88", Offset = "0x9ECA88")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9ECA88", Offset = "0x9ECA88")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class CAPI
	{
		[Token(Token = "0x2000392")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000393")]
		public enum Result
		{
			[Token(Token = "0x400140F")]
			Success = 0,
			[Token(Token = "0x4001410")]
			Failure = -1000,
			[Token(Token = "0x4001411")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001412")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001413")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001414")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001415")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001416")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001417")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000394")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0xD47308", Offset = "0xD47308", VA = "0xD47308")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000BB8")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000BC0")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xD3E850", Offset = "0xD3E850", VA = "0xD3E850")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xD3E900", Offset = "0xD3E900", VA = "0xD3E900")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xD3EAC4", Offset = "0xD3EAC4", VA = "0xD3EAC4")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xD3EBA4", Offset = "0xD3EBA4", VA = "0xD3EBA4")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xD3EC34", Offset = "0xD3EC34", VA = "0xD3EC34")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xD3ECC4", Offset = "0xD3ECC4", VA = "0xD3ECC4")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xD3ED64", Offset = "0xD3ED64", VA = "0xD3ED64")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xD3EE88", Offset = "0xD3EE88", VA = "0xD3EE88")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xD3EF28", Offset = "0xD3EF28", VA = "0xD3EF28")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xD3F04C", Offset = "0xD3F04C", VA = "0xD3F04C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xD3F0EC", Offset = "0xD3F0EC", VA = "0xD3F0EC")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xD3F18C", Offset = "0xD3F18C", VA = "0xD3F18C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xD3F22C", Offset = "0xD3F22C", VA = "0xD3F22C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xD3F2CC", Offset = "0xD3F2CC", VA = "0xD3F2CC")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xD3F37C", Offset = "0xD3F37C", VA = "0xD3F37C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xD3F42C", Offset = "0xD3F42C", VA = "0xD3F42C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xD3F4DC", Offset = "0xD3F4DC", VA = "0xD3F4DC")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xD3F57C", Offset = "0xD3F57C", VA = "0xD3F57C")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xD3F61C", Offset = "0xD3F61C", VA = "0xD3F61C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xD3F6CC", Offset = "0xD3F6CC", VA = "0xD3F6CC")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xD3F77C", Offset = "0xD3F77C", VA = "0xD3F77C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xD3F82C", Offset = "0xD3F82C", VA = "0xD3F82C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xD3F8CC", Offset = "0xD3F8CC", VA = "0xD3F8CC")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xD3F994", Offset = "0xD3F994", VA = "0xD3F994")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xD3FA18", Offset = "0xD3FA18", VA = "0xD3FA18")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xD3FAD8", Offset = "0xD3FAD8", VA = "0xD3FAD8")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xD3FBB8", Offset = "0xD3FBB8", VA = "0xD3FBB8")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xD3FCA8", Offset = "0xD3FCA8", VA = "0xD3FCA8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xD3FD58", Offset = "0xD3FD58", VA = "0xD3FD58")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xD3FE08", Offset = "0xD3FE08", VA = "0xD3FE08")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xD3FEB8", Offset = "0xD3FEB8", VA = "0xD3FEB8")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xD3FF68", Offset = "0xD3FF68", VA = "0xD3FF68")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xD40018", Offset = "0xD40018", VA = "0xD40018")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xD400B8", Offset = "0xD400B8", VA = "0xD400B8")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xD401F8", Offset = "0xD401F8", VA = "0xD401F8")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xD40148", Offset = "0xD40148", VA = "0xD40148")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xD403EC", Offset = "0xD403EC", VA = "0xD403EC")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xD40524", Offset = "0xD40524", VA = "0xD40524")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000F5B")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xD405C4", Offset = "0xD405C4", VA = "0xD405C4")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xD40834", Offset = "0xD40834", VA = "0xD40834")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xD408D4", Offset = "0xD408D4", VA = "0xD408D4")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xD40A0C", Offset = "0xD40A0C", VA = "0xD40A0C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xD40AAC", Offset = "0xD40AAC", VA = "0xD40AAC")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xD40BE4", Offset = "0xD40BE4", VA = "0xD40BE4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xD40C84", Offset = "0xD40C84", VA = "0xD40C84")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xD40DBC", Offset = "0xD40DBC", VA = "0xD40DBC")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xD40E5C", Offset = "0xD40E5C", VA = "0xD40E5C")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xD40F94", Offset = "0xD40F94", VA = "0xD40F94")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xD41034", Offset = "0xD41034", VA = "0xD41034")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xD410D4", Offset = "0xD410D4", VA = "0xD410D4")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xD4118C", Offset = "0xD4118C", VA = "0xD4118C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xD4122C", Offset = "0xD4122C", VA = "0xD4122C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xD4141C", Offset = "0xD4141C", VA = "0xD4141C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xD4156C", Offset = "0xD4156C", VA = "0xD4156C")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xD4137C", Offset = "0xD4137C", VA = "0xD4137C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xD4160C", Offset = "0xD4160C", VA = "0xD4160C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xD416AC", Offset = "0xD416AC", VA = "0xD416AC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xD4175C", Offset = "0xD4175C", VA = "0xD4175C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xD417FC", Offset = "0xD417FC", VA = "0xD417FC")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xD418AC", Offset = "0xD418AC", VA = "0xD418AC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xD4194C", Offset = "0xD4194C", VA = "0xD4194C")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xD419EC", Offset = "0xD419EC", VA = "0xD419EC")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xD41C44", Offset = "0xD41C44", VA = "0xD41C44")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xD41CF4", Offset = "0xD41CF4", VA = "0xD41CF4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xD41F08", Offset = "0xD41F08", VA = "0xD41F08")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xD41FC0", Offset = "0xD41FC0", VA = "0xD41FC0")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xD42100", Offset = "0xD42100", VA = "0xD42100")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xD421A0", Offset = "0xD421A0", VA = "0xD421A0")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xD42240", Offset = "0xD42240", VA = "0xD42240")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xD4237C", Offset = "0xD4237C", VA = "0xD4237C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xD4241C", Offset = "0xD4241C", VA = "0xD4241C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xD42558", Offset = "0xD42558", VA = "0xD42558")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xD425F8", Offset = "0xD425F8", VA = "0xD425F8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xD426A8", Offset = "0xD426A8", VA = "0xD426A8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xD42758", Offset = "0xD42758", VA = "0xD42758")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xD42808", Offset = "0xD42808", VA = "0xD42808")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xD428A8", Offset = "0xD428A8", VA = "0xD428A8")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xD42950", Offset = "0xD42950", VA = "0xD42950")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xD429F8", Offset = "0xD429F8", VA = "0xD429F8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xD42A98", Offset = "0xD42A98", VA = "0xD42A98")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xD42B38", Offset = "0xD42B38", VA = "0xD42B38")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xD42C0C", Offset = "0xD42C0C", VA = "0xD42C0C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xD42CBC", Offset = "0xD42CBC", VA = "0xD42CBC")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xD42D6C", Offset = "0xD42D6C", VA = "0xD42D6C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xD42E0C", Offset = "0xD42E0C", VA = "0xD42E0C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xD42EAC", Offset = "0xD42EAC", VA = "0xD42EAC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xD42F4C", Offset = "0xD42F4C", VA = "0xD42F4C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xD43004", Offset = "0xD43004", VA = "0xD43004")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xD430B4", Offset = "0xD430B4", VA = "0xD430B4")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xD43164", Offset = "0xD43164", VA = "0xD43164")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xD43214", Offset = "0xD43214", VA = "0xD43214")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xD432CC", Offset = "0xD432CC", VA = "0xD432CC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xD43384", Offset = "0xD43384", VA = "0xD43384")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xD43424", Offset = "0xD43424", VA = "0xD43424")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xD434C4", Offset = "0xD434C4", VA = "0xD434C4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xD43600", Offset = "0xD43600", VA = "0xD43600")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xD436A0", Offset = "0xD436A0", VA = "0xD436A0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xD437DC", Offset = "0xD437DC", VA = "0xD437DC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xD4387C", Offset = "0xD4387C", VA = "0xD4387C")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xD439A4", Offset = "0xD439A4", VA = "0xD439A4")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xD43A44", Offset = "0xD43A44", VA = "0xD43A44")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xD43C20", Offset = "0xD43C20", VA = "0xD43C20")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xD43EDC", Offset = "0xD43EDC", VA = "0xD43EDC")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xD43B80", Offset = "0xD43B80", VA = "0xD43B80")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xD43F8C", Offset = "0xD43F8C", VA = "0xD43F8C")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xD4402C", Offset = "0xD4402C", VA = "0xD4402C")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xD440DC", Offset = "0xD440DC", VA = "0xD440DC")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xD4418C", Offset = "0xD4418C", VA = "0xD4418C")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xD4423C", Offset = "0xD4423C", VA = "0xD4423C")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xD442FC", Offset = "0xD442FC", VA = "0xD442FC")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xD443BC", Offset = "0xD443BC", VA = "0xD443BC")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xD4447C", Offset = "0xD4447C", VA = "0xD4447C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xD4451C", Offset = "0xD4451C", VA = "0xD4451C")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xD445BC", Offset = "0xD445BC", VA = "0xD445BC")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xD4465C", Offset = "0xD4465C", VA = "0xD4465C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xD446FC", Offset = "0xD446FC", VA = "0xD446FC")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xD4479C", Offset = "0xD4479C", VA = "0xD4479C")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xD448E0", Offset = "0xD448E0", VA = "0xD448E0")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xD44998", Offset = "0xD44998", VA = "0xD44998")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xD44A38", Offset = "0xD44A38", VA = "0xD44A38")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xD44A9C", Offset = "0xD44A9C", VA = "0xD44A9C")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xD44BB8", Offset = "0xD44BB8", VA = "0xD44BB8")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xD44C68", Offset = "0xD44C68", VA = "0xD44C68")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xD44DAC", Offset = "0xD44DAC", VA = "0xD44DAC")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xD44E5C", Offset = "0xD44E5C", VA = "0xD44E5C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xD44F24", Offset = "0xD44F24", VA = "0xD44F24")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xD4534C", Offset = "0xD4534C", VA = "0xD4534C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xD453EC", Offset = "0xD453EC", VA = "0xD453EC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xD454A4", Offset = "0xD454A4", VA = "0xD454A4")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xD45E08", Offset = "0xD45E08", VA = "0xD45E08")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xD45EA8", Offset = "0xD45EA8", VA = "0xD45EA8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xD3E7E8", Offset = "0xD3E7E8", VA = "0xD3E7E8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9ECAE8", Offset = "0x9ECAE8")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xD45F60", Offset = "0xD45F60", VA = "0xD45F60")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xD46004", Offset = "0xD46004", VA = "0xD46004")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xD460A4", Offset = "0xD460A4", VA = "0xD460A4")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xD46144", Offset = "0xD46144", VA = "0xD46144")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xD461E4", Offset = "0xD461E4", VA = "0xD461E4")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xD46E54", Offset = "0xD46E54", VA = "0xD46E54")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xD46EF4", Offset = "0xD46EF4", VA = "0xD46EF4")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xD47404", Offset = "0xD47404", VA = "0xD47404")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xD47278", Offset = "0xD47278", VA = "0xD47278")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xD47494", Offset = "0xD47494", VA = "0xD47494")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20001E1")]
	public class TestScript : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x9E6B60", Offset = "0x9E6B60")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xD3565C", Offset = "0xD3565C", VA = "0xD3565C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xD35660", Offset = "0xD35660", VA = "0xD35660")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xD35768", Offset = "0xD35768", VA = "0xD35768")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class AmbienceEmitter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6BAC", Offset = "0x9E6BAC")]
		public bool autoRetrigger;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E6BE4", Offset = "0x9E6BE4")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6C08", Offset = "0x9E6C08")]
		public Transform[] playPositions;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x18F688C", Offset = "0x18F688C", VA = "0x18F688C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x18F6A08", Offset = "0x18F6A08", VA = "0x18F6A08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x18F6C90", Offset = "0x18F6C90", VA = "0x18F6C90")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x18F6A68", Offset = "0x18F6A68", VA = "0x18F6A68")]
		public void Play()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x18F6D70", Offset = "0x18F6D70", VA = "0x18F6D70")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x18F6F04", Offset = "0x18F6F04", VA = "0x18F6F04")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000BCF")]
		Default,
		[Token(Token = "0x4000BD0")]
		Preload,
		[Token(Token = "0x4000BD1")]
		ManualPreload
	}
	[Token(Token = "0x20001E4")]
	public enum Fade
	{
		[Token(Token = "0x4000BD3")]
		In,
		[Token(Token = "0x4000BD4")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20001E5")]
	public class SoundGroup
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E6C40", Offset = "0x9E6C40")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xD353FC", Offset = "0xD353FC", VA = "0xD353FC")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xD35490", Offset = "0xD35490", VA = "0xD35490")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xD3551C", Offset = "0xD3551C", VA = "0xD3551C")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xD355AC", Offset = "0xD355AC", VA = "0xD355AC")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xD3563C", Offset = "0xD3563C", VA = "0xD3563C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E6")]
	public class AudioManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000395")]
		public enum Fade
		{
			[Token(Token = "0x400141A")]
			In,
			[Token(Token = "0x400141B")]
			Out
		}

		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2CF4", Offset = "0x9E2CF4")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x18FC124", Offset = "0x18FC124", VA = "0x18FC124")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x18FF1EC", Offset = "0x18FF1EC", VA = "0x18FF1EC")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D04", Offset = "0x9E2D04")]
		private sealed class <>c
		{
			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x18FF150", Offset = "0x18FF150", VA = "0x18FF150")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x18FF158", Offset = "0x18FF158", VA = "0x18FF158")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6C6C", Offset = "0x9E6C6C")]
		public bool makePersistent;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6CA4", Offset = "0x9E6CA4")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6CDC", Offset = "0x9E6CDC")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6D14", Offset = "0x9E6D14")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6D4C", Offset = "0x9E6D4C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6D84", Offset = "0x9E6D84")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6DBC", Offset = "0x9E6DBC")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6DF4", Offset = "0x9E6DF4")]
		public bool verboseLogging;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6E2C", Offset = "0x9E6E2C")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6E64", Offset = "0x9E6E64")]
		public float volumeSoundFX;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6E9C", Offset = "0x9E6E9C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170002CC")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x18F6FC0", Offset = "0x18F6FC0", VA = "0x18F6FC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CD")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x18F70A4", Offset = "0x18F70A4", VA = "0x18F70A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x18F710C", Offset = "0x18F710C", VA = "0x18F710C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002CF")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0x18F7184", Offset = "0x18F7184", VA = "0x18F7184")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D0")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0x18F71FC", Offset = "0x18F71FC", VA = "0x18F71FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0x18F7274", Offset = "0x18F7274", VA = "0x18F7274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0x18F72EC", Offset = "0x18F72EC", VA = "0x18F72EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x18F995C", Offset = "0x18F995C", VA = "0x18F995C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x18F7364", Offset = "0x18F7364", VA = "0x18F7364")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x18F759C", Offset = "0x18F759C", VA = "0x18F759C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x18F7368", Offset = "0x18F7368", VA = "0x18F7368")]
		private void Init()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x18F8750", Offset = "0x18F8750", VA = "0x18F8750")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x18F76F4", Offset = "0x18F76F4", VA = "0x18F76F4")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x18F8EE4", Offset = "0x18F8EE4", VA = "0x18F8EE4")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x18F9094", Offset = "0x18F9094", VA = "0x18F9094")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x18F924C", Offset = "0x18F924C", VA = "0x18F924C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x18F9354", Offset = "0x18F9354", VA = "0x18F9354")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x18F9418", Offset = "0x18F9418", VA = "0x18F9418")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x18F99C4", Offset = "0x18F99C4", VA = "0x18F99C4")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x18F9A40", Offset = "0x18F9A40", VA = "0x18F9A40")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x18F7EE0", Offset = "0x18F7EE0", VA = "0x18F7EE0")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x18F8754", Offset = "0x18F8754", VA = "0x18F8754")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x18F9D34", Offset = "0x18F9D34", VA = "0x18F9D34")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x18F9E30", Offset = "0x18F9E30", VA = "0x18F9E30")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x18F9F30", Offset = "0x18F9F30", VA = "0x18F9F30")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x18F9BB4", Offset = "0x18F9BB4", VA = "0x18F9BB4")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x18FA110", Offset = "0x18FA110", VA = "0x18FA110")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x18FA298", Offset = "0x18FA298", VA = "0x18FA298")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x18FA4D0", Offset = "0x18FA4D0", VA = "0x18FA4D0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x18F6CA0", Offset = "0x18F6CA0", VA = "0x18F6CA0")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x18F6E34", Offset = "0x18F6E34", VA = "0x18F6E34")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x18FA6AC", Offset = "0x18FA6AC", VA = "0x18FA6AC")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x18FA790", Offset = "0x18FA790", VA = "0x18FA790")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x18FA85C", Offset = "0x18FA85C", VA = "0x18FA85C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x18FA988", Offset = "0x18FA988", VA = "0x18FA988")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x18FAA48", Offset = "0x18FAA48", VA = "0x18FAA48")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x18FAB60", Offset = "0x18FAB60", VA = "0x18FAB60")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x18FB93C", Offset = "0x18FB93C", VA = "0x18FB93C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x18FC12C", Offset = "0x18FC12C", VA = "0x18FC12C")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x18FC2D8", Offset = "0x18FC2D8", VA = "0x18FC2D8")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x18FD42C", Offset = "0x18FD42C", VA = "0x18FD42C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x18FAD34", Offset = "0x18FAD34", VA = "0x18FAD34")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x18FD550", Offset = "0x18FD550", VA = "0x18FD550")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x18FD648", Offset = "0x18FD648", VA = "0x18FD648")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x18FD744", Offset = "0x18FD744", VA = "0x18FD744")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x18FDBEC", Offset = "0x18FDBEC", VA = "0x18FDBEC")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x18FDE3C", Offset = "0x18FDE3C", VA = "0x18FDE3C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x18FDF68", Offset = "0x18FDF68", VA = "0x18FDF68")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x18FE158", Offset = "0x18FE158", VA = "0x18FE158")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x18FE234", Offset = "0x18FE234", VA = "0x18FE234")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x18FE384", Offset = "0x18FE384", VA = "0x18FE384")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x18FE840", Offset = "0x18FE840", VA = "0x18FE840")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000BFC")]
		None = -1,
		[Token(Token = "0x4000BFD")]
		Reserved,
		[Token(Token = "0x4000BFE")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20001E8")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x18FF2EC", Offset = "0x18FF2EC", VA = "0x18FF2EC")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x18FF290", Offset = "0x18FF290", VA = "0x18FF290")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class SoundEmitter : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000398")]
		public enum FadeState
		{
			[Token(Token = "0x4001420")]
			Null,
			[Token(Token = "0x4001421")]
			FadingIn,
			[Token(Token = "0x4001422")]
			FadingOut,
			[Token(Token = "0x4001423")]
			Ducking
		}

		[Token(Token = "0x2000399")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D14", Offset = "0x9E2D14")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000483")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B57")]
				[Address(RVA = "0x18FFE94", Offset = "0x18FFE94", VA = "0x18FFE94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000484")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B59")]
				[Address(RVA = "0x18FFF04", Offset = "0x18FFF04", VA = "0x18FFF04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x18FFAD0", Offset = "0x18FFAD0", VA = "0x18FFAD0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x18FFD7C", Offset = "0x18FFD7C", VA = "0x18FFD7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x18FFD80", Offset = "0x18FFD80", VA = "0x18FFD80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x18FFE9C", Offset = "0x18FFE9C", VA = "0x18FFE9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D24", Offset = "0x9E2D24")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000485")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B5D")]
				[Address(RVA = "0x1900400", Offset = "0x1900400", VA = "0x1900400", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000486")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B5F")]
				[Address(RVA = "0x1900470", Offset = "0x1900470", VA = "0x1900470", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0x18FFD0C", Offset = "0x18FFD0C", VA = "0x18FFD0C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0x190025C", Offset = "0x190025C", VA = "0x190025C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0x1900260", Offset = "0x1900260", VA = "0x1900260", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x1900408", Offset = "0x1900408", VA = "0x1900408", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D34", Offset = "0x9E2D34")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000487")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B63")]
				[Address(RVA = "0x19001E4", Offset = "0x19001E4", VA = "0x19001E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000488")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B65")]
				[Address(RVA = "0x1900254", Offset = "0x1900254", VA = "0x1900254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0x18FFD38", Offset = "0x18FFD38", VA = "0x18FFD38")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001B61")]
			[Address(RVA = "0x18FFF0C", Offset = "0x18FFF0C", VA = "0x18FFF0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B62")]
			[Address(RVA = "0x18FFF10", Offset = "0x18FFF10", VA = "0x18FFF10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B64")]
			[Address(RVA = "0x19001EC", Offset = "0x19001EC", VA = "0x19001EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170002D4")]
		public float volume
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x18FD3FC", Offset = "0x18FD3FC", VA = "0x18FD3FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x18FF38C", Offset = "0x18FF38C", VA = "0x18FF38C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public float pitch
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x18FF3CC", Offset = "0x18FF3CC", VA = "0x18FF3CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x18FF3FC", Offset = "0x18FF3FC", VA = "0x18FF3FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public AudioClip clip
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x18FF43C", Offset = "0x18FF43C", VA = "0x18FF43C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x18FF46C", Offset = "0x18FF46C", VA = "0x18FF46C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public float time
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x18FF4A4", Offset = "0x18FF4A4", VA = "0x18FF4A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x18FAB20", Offset = "0x18FAB20", VA = "0x18FAB20")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public float length
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x18FF4D4", Offset = "0x18FF4D4", VA = "0x18FF4D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D9")]
		public bool loop
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x18FF5AC", Offset = "0x18FF5AC", VA = "0x18FF5AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x18FF5DC", Offset = "0x18FF5DC", VA = "0x18FF5DC")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public bool mute
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x18FF614", Offset = "0x18FF614", VA = "0x18FF614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x18FF644", Offset = "0x18FF644", VA = "0x18FF644")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x18FF67C", Offset = "0x18FF67C", VA = "0x18FF67C")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001018")]
			[Address(RVA = "0x18FF6AC", Offset = "0x18FF6AC", VA = "0x18FF6AC")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public bool isPlaying
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x18FF6E4", Offset = "0x18FF6E4", VA = "0x18FF6E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x18FF714", Offset = "0x18FF714", VA = "0x18FF714")]
		private void Awake()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x18FD3E4", Offset = "0x18FD3E4", VA = "0x18FD3E4")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x18FD640", Offset = "0x18FD640", VA = "0x18FD640")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x18FD73C", Offset = "0x18FD73C", VA = "0x18FD73C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x18F9AC0", Offset = "0x18F9AC0", VA = "0x18F9AC0")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x18F9AB8", Offset = "0x18F9AB8", VA = "0x18F9AB8")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x18FE0A8", Offset = "0x18FE0A8", VA = "0x18FE0A8")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x18F9CCC", Offset = "0x18F9CCC", VA = "0x18F9CCC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x18FF8BC", Offset = "0x18FF8BC", VA = "0x18FF8BC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x18FF924", Offset = "0x18FF924", VA = "0x18FF924")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x18F9AC8", Offset = "0x18F9AC8", VA = "0x18F9AC8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x18FF964", Offset = "0x18FF964", VA = "0x18FF964")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x18FDADC", Offset = "0x18FDADC", VA = "0x18FDADC")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x18FDD58", Offset = "0x18FDD58", VA = "0x18FDD58")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x18FA0C0", Offset = "0x18FA0C0", VA = "0x18FA0C0")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x18FF9D8", Offset = "0x18FF9D8", VA = "0x18FF9D8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x18FFA04", Offset = "0x18FFA04", VA = "0x18FFA04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECB4C", Offset = "0x9ECB4C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x18FFAFC", Offset = "0x18FFAFC", VA = "0x18FFAFC")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x18FA5A8", Offset = "0x18FA5A8", VA = "0x18FA5A8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x18FA62C", Offset = "0x18FA62C", VA = "0x18FA62C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x18FA424", Offset = "0x18FA424", VA = "0x18FA424")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x18FA1E8", Offset = "0x18FA1E8", VA = "0x18FA1E8")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x18FFB74", Offset = "0x18FFB74", VA = "0x18FFB74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECBB0", Offset = "0x9ECBB0")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x18FFC20", Offset = "0x18FFC20", VA = "0x18FFC20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9ECC14", Offset = "0x9ECC14")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x18FFD64", Offset = "0x18FFD64", VA = "0x18FFD64")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000C15")]
		Random,
		[Token(Token = "0x4000C16")]
		Sequential
	}
	[Token(Token = "0x20001EC")]
	public enum FreqHint
	{
		[Token(Token = "0x4000C18")]
		None,
		[Token(Token = "0x4000C19")]
		Wide,
		[Token(Token = "0x4000C1A")]
		Narrow
	}
	[Token(Token = "0x20001ED")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000C1C")]
		VeryLow = -2,
		[Token(Token = "0x4000C1D")]
		Low,
		[Token(Token = "0x4000C1E")]
		Default,
		[Token(Token = "0x4000C1F")]
		High,
		[Token(Token = "0x4000C20")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20001EE")]
	public class OSPProps
	{
		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6F84", Offset = "0x9E6F84")]
		public bool enableSpatialization;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6FBC", Offset = "0x9E6FBC")]
		public bool useFastOverride;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E6FF4", Offset = "0x9E6FF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E6FF4", Offset = "0x9E6FF4")]
		public float gain;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7048", Offset = "0x9E7048")]
		public bool enableInvSquare;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7080", Offset = "0x9E7080")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E7080", Offset = "0x9E7080")]
		public float volumetric;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E70D8", Offset = "0x9E70D8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E70D8", Offset = "0x9E70D8")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x18FF2FC", Offset = "0x18FF2FC", VA = "0x18FF2FC")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EF")]
	public class SoundFX
	{
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7138", Offset = "0x9E7138")]
		public string name;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7170", Offset = "0x9E7170")]
		public SoundFXNext playback;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E71A8", Offset = "0x9E71A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E71A8", Offset = "0x9E71A8")]
		public float volume;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E71FC", Offset = "0x9E71FC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E71FC", Offset = "0x9E71FC")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7258", Offset = "0x9E7258")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E7258", Offset = "0x9E7258")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E72B8", Offset = "0x9E72B8")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E72F0", Offset = "0x9E72F0")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7328", Offset = "0x9E7328")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7360", Offset = "0x9E7360")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E7360", Offset = "0x9E7360")]
		public float spread;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E73B8", Offset = "0x9E73B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E73B8", Offset = "0x9E73B8")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E740C", Offset = "0x9E740C")]
		public SoundPriority priority;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7444", Offset = "0x9E7444")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9E7444", Offset = "0x9E7444")]
		public Vector2 delay;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E74A0", Offset = "0x9E74A0")]
		public bool looping;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E74D8", Offset = "0x9E74D8")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170002DD")]
		public int Length
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x1900478", Offset = "0x1900478", VA = "0x1900478")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002DE")]
		public bool IsValid
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x19004A4", Offset = "0x19004A4", VA = "0x19004A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DF")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x18FD3DC", Offset = "0x18FD3DC", VA = "0x18FD3DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x18F8EDC", Offset = "0x18F8EDC", VA = "0x18F8EDC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x18FD2D8", Offset = "0x18FD2D8", VA = "0x18FD2D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E1")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x18FD314", Offset = "0x18FD314", VA = "0x18FD314")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x18FEB78", Offset = "0x18FEB78", VA = "0x18FEB78")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x18FD160", Offset = "0x18FD160", VA = "0x18FD160")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x18FD338", Offset = "0x18FD338", VA = "0x18FD338")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x18FD2E4", Offset = "0x18FD2E4", VA = "0x18FD2E4")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1900564", Offset = "0x1900564", VA = "0x1900564")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x18FD32C", Offset = "0x18FD32C", VA = "0x18FD32C")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x19006B4", Offset = "0x19006B4", VA = "0x19006B4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1900790", Offset = "0x1900790", VA = "0x1900790")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x19008A4", Offset = "0x19008A4", VA = "0x19008A4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1900930", Offset = "0x1900930", VA = "0x1900930")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x19009C4", Offset = "0x19009C4", VA = "0x19009C4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1900A50", Offset = "0x1900A50", VA = "0x1900A50")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1900ADC", Offset = "0x1900ADC", VA = "0x1900ADC")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F0")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170002E2")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0xD34F1C", Offset = "0xD34F1C", VA = "0xD34F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		public string name
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xD35018", Offset = "0xD35018", VA = "0xD35018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xD35020", Offset = "0xD35020", VA = "0xD35020")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public int Length
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0xD35028", Offset = "0xD35028", VA = "0xD35028")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E5")]
		public bool IsValid
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0xD3506C", Offset = "0xD3506C", VA = "0xD3506C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xD34F4C", Offset = "0xD34F4C", VA = "0xD34F4C")]
		private void Init()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xD350B0", Offset = "0xD350B0", VA = "0xD350B0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xD350F4", Offset = "0xD350F4", VA = "0xD350F4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xD35140", Offset = "0xD35140", VA = "0xD35140")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xD35194", Offset = "0xD35194", VA = "0xD35194")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xD35220", Offset = "0xD35220", VA = "0xD35220")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xD3526C", Offset = "0xD3526C", VA = "0xD3526C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xD352C8", Offset = "0xD352C8", VA = "0xD352C8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xD3530C", Offset = "0xD3530C", VA = "0xD3530C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xD35358", Offset = "0xD35358", VA = "0xD35358")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xD3539C", Offset = "0xD3539C", VA = "0xD3539C")]
		public SoundFXRef()
		{
		}
	}
}
namespace FlyingWormConsole3
{
	[Token(Token = "0x20001F1")]
	public class ConsoleProRemoteServer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useNATPunch;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int port;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xC5B2C4", Offset = "0xC5B2C4", VA = "0xC5B2C4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xC5B330", Offset = "0xC5B330", VA = "0xC5B330")]
		public ConsoleProRemoteServer()
		{
		}
	}
}
namespace ATiStudios.SpeechSynthesizing
{
	[Token(Token = "0x20001F2")]
	public interface ISpeechSynthesisAsyncOperation
	{
		[Token(Token = "0x14000018")]
		event Action<AudioClip> OnCompleted;

		[Token(Token = "0x14000019")]
		event Action<string> OnError;

		[Token(Token = "0x600105D")]
		void Cancel();
	}
	[Token(Token = "0x20001F3")]
	public interface ISpeechSynthesizer
	{
		[Token(Token = "0x600105E")]
		ISpeechSynthesisAsyncOperation Synthesize(string textToSynthesize, Language language);

		[Token(Token = "0x600105F")]
		bool HasStartedSynthesising();
	}
}
namespace ATiStudios.SpeechSynthesiser.Nuance
{
	[Token(Token = "0x20001F4")]
	public sealed class NuanceSpeechSynthesizer : ISpeechSynthesizer
	{
		[Token(Token = "0x200039C")]
		private class NuanceSpeechSynthesisAsyncOperation : ISpeechSynthesisAsyncOperation
		{
			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal UnityWebRequest UnityWebRequest;

			[Token(Token = "0x14000039")]
			public event Action<AudioClip> OnCompleted
			{
				[Token(Token = "0x6001B66")]
				[Address(RVA = "0xB59110", Offset = "0xB59110", VA = "0xB59110", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A0C", Offset = "0x9F2A0C")]
				add
				{
				}
				[Token(Token = "0x6001B67")]
				[Address(RVA = "0xB591B8", Offset = "0xB591B8", VA = "0xB591B8", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A1C", Offset = "0x9F2A1C")]
				remove
				{
				}
			}

			[Token(Token = "0x1400003A")]
			public event Action<string> OnError
			{
				[Token(Token = "0x6001B68")]
				[Address(RVA = "0xB59260", Offset = "0xB59260", VA = "0xB59260", Slot = "6")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A2C", Offset = "0x9F2A2C")]
				add
				{
				}
				[Token(Token = "0x6001B69")]
				[Address(RVA = "0xB59308", Offset = "0xB59308", VA = "0xB59308", Slot = "7")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A3C", Offset = "0x9F2A3C")]
				remove
				{
				}
			}

			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xB593B0", Offset = "0xB593B0", VA = "0xB593B0", Slot = "8")]
			public void Cancel()
			{
			}

			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xB5909C", Offset = "0xB5909C", VA = "0xB5909C")]
			internal void ExecuteOnCompleted(AudioClip audioClip)
			{
			}

			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0xB59028", Offset = "0xB59028", VA = "0xB59028")]
			internal void ExecuteOnError(string errorMessage)
			{
			}

			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xB58C3C", Offset = "0xB58C3C", VA = "0xB58C3C")]
			public NuanceSpeechSynthesisAsyncOperation()
			{
			}
		}

		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D44", Offset = "0x9E2D44")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NuanceSpeechSynthesisAsyncOperation synthesizeRequestOperation;

			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0xB58C34", Offset = "0xB58C34", VA = "0xB58C34")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xB58F24", Offset = "0xB58F24", VA = "0xB58F24")]
			internal void <Synthesize>b__0(UnityEngine.AsyncOperation operation)
			{
			}
		}

		[Token(Token = "0x4000C3F")]
		private const string BASE_URL = "https://tts.nuancemobility.net:443/NMDPTTSCmdServlet/tts";

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AppId;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppKey;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityWebRequest _unityWebRequest;

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xB58990", Offset = "0xB58990", VA = "0xB58990")]
		public NuanceSpeechSynthesizer(string appId, string appKey)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xB589C8", Offset = "0xB589C8", VA = "0xB589C8", Slot = "4")]
		public ISpeechSynthesisAsyncOperation Synthesize(string textToSynthesize, Language language)
		{
			return null;
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xB58EA0", Offset = "0xB58EA0", VA = "0xB58EA0", Slot = "5")]
		public bool HasStartedSynthesising()
		{
			return default(bool);
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xB58C44", Offset = "0xB58C44", VA = "0xB58C44")]
		private string GetUrlForLanguage(Language language)
		{
			return null;
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xB58F00", Offset = "0xB58F00", VA = "0xB58F00")]
		public static bool IsNotAvailable(Language language)
		{
			return default(bool);
		}
	}
}
namespace ATiStudios.SpeechSynthesiser.Google
{
	[Token(Token = "0x20001F5")]
	public sealed class GoogleSpeechSynthesiser : ISpeechSynthesizer
	{
		[Token(Token = "0x200039E")]
		private class GoogleSynthesiseAsyncOperation : ISpeechSynthesisAsyncOperation
		{
			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal UnityWebRequest UnityWebRequest;

			[Token(Token = "0x1400003B")]
			public event Action<AudioClip> OnCompleted
			{
				[Token(Token = "0x6001B70")]
				[Address(RVA = "0xB586C0", Offset = "0xB586C0", VA = "0xB586C0", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A4C", Offset = "0x9F2A4C")]
				add
				{
				}
				[Token(Token = "0x6001B71")]
				[Address(RVA = "0xB58768", Offset = "0xB58768", VA = "0xB58768", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A5C", Offset = "0x9F2A5C")]
				remove
				{
				}
			}

			[Token(Token = "0x1400003C")]
			public event Action<string> OnError
			{
				[Token(Token = "0x6001B72")]
				[Address(RVA = "0xB58810", Offset = "0xB58810", VA = "0xB58810", Slot = "6")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A6C", Offset = "0x9F2A6C")]
				add
				{
				}
				[Token(Token = "0x6001B73")]
				[Address(RVA = "0xB588B8", Offset = "0xB588B8", VA = "0xB588B8", Slot = "7")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A7C", Offset = "0x9F2A7C")]
				remove
				{
				}
			}

			[Token(Token = "0x6001B74")]
			[Address(RVA = "0xB58960", Offset = "0xB58960", VA = "0xB58960", Slot = "8")]
			public void Cancel()
			{
			}

			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xB5864C", Offset = "0xB5864C", VA = "0xB5864C")]
			internal void OnExecutionComplete(AudioClip audioClip)
			{
			}

			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xB585D8", Offset = "0xB585D8", VA = "0xB585D8")]
			internal void OnErrorReceived(string errorMessage)
			{
			}

			[Token(Token = "0x6001B77")]
			[Address(RVA = "0xB57F84", Offset = "0xB57F84", VA = "0xB57F84")]
			public GoogleSynthesiseAsyncOperation()
			{
			}
		}

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D54", Offset = "0x9E2D54")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GoogleSynthesiseAsyncOperation synthesiseRequestOperation;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GoogleSpeechSynthesiser <>4__this;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest unityWebRequest;

			[Token(Token = "0x6001B78")]
			[Address(RVA = "0xB57F7C", Offset = "0xB57F7C", VA = "0xB57F7C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xB583E8", Offset = "0xB583E8", VA = "0xB583E8")]
			internal void <Synthesize>b__0(UnityEngine.AsyncOperation operation)
			{
			}
		}

		[Token(Token = "0x4000C43")]
		private const string BASE_URL = "https://texttospeech.googleapis.com/v1/text:synthesize?key=";

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _apiKey;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string data;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityWebRequest _unityWebRequest;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hasStartedSynthesising;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Language> _supportedTTSLanguages;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xB57A70", Offset = "0xB57A70", VA = "0xB57A70")]
		public GoogleSpeechSynthesiser(string apiKey)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xB57A9C", Offset = "0xB57A9C", VA = "0xB57A9C")]
		public static bool IsAvailable(Language language)
		{
			return default(bool);
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xB57B28", Offset = "0xB57B28", VA = "0xB57B28", Slot = "4")]
		public ISpeechSynthesisAsyncOperation Synthesize(string textToSynthesize, Language language)
		{
			return null;
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xB57F8C", Offset = "0xB57F8C", VA = "0xB57F8C", Slot = "5")]
		public bool HasStartedSynthesising()
		{
			return default(bool);
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xB57F94", Offset = "0xB57F94", VA = "0xB57F94")]
		private float[] ConvertByteToFloat(byte[] array)
		{
			return null;
		}
	}
}
namespace ATiStudios.VR
{
	[Token(Token = "0x20001F6")]
	public interface IVRInteractable
	{
		[Token(Token = "0x170002E6")]
		float GazeDuration
		{
			[Token(Token = "0x600106B")]
			get;
			[Token(Token = "0x600106C")]
			set;
		}

		[Token(Token = "0x170002E7")]
		bool IsGazable
		{
			[Token(Token = "0x600106D")]
			get;
			[Token(Token = "0x600106E")]
			set;
		}
	}
	[Token(Token = "0x20001F7")]
	public class VRPlayer : SceneObject
	{
		[Serializable]
		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D64", Offset = "0x9E2D64")]
		private sealed class <>c
		{
			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UIImage, bool> <>9__34_1;

			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xCF88B8", Offset = "0xCF88B8", VA = "0xCF88B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0xCF88C0", Offset = "0xCF88C0", VA = "0xCF88C0")]
			internal bool <.ctor>b__34_1(UIImage image)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private float _defaultHeadReticleDistance;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private float _defaultHandReticleDistance;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Lazy<UIImage> _lazyBlackScreen;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AbstractVrHeadController _headController;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private AbstractVrHandController _handControllerLeft;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private AbstractVrHandController _handControllerRight;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool _isSetupDone;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string HAS_FINISHED_LESSON_KEY;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string HAS_SHOWED_REVIEW_MESSAGE_KEY;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		private bool _hasFinishedLesson;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private OvrAvatar _localAvatar;

		[Token(Token = "0x170002E8")]
		public float DefaultReticleDistance
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0xCF7B74", Offset = "0xCF7B74", VA = "0xCF7B74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E9")]
		public UIImage UIImageBlackScreen
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0xCF7C44", Offset = "0xCF7C44", VA = "0xCF7C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public AbstractVrHeadController HeadController
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0xCF7CA4", Offset = "0xCF7CA4", VA = "0xCF7CA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		public AbstractVrHandController HandControllerLeft
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0xCF7CAC", Offset = "0xCF7CAC", VA = "0xCF7CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		public AbstractVrHandController HandControllerRight
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0xCF7CB4", Offset = "0xCF7CB4", VA = "0xCF7CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		public bool HasHeadController
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xCF7BA8", Offset = "0xCF7BA8", VA = "0xCF7BA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EE")]
		public string VRPlatformName
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xCF7CBC", Offset = "0xCF7CBC", VA = "0xCF7CBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		public bool HasFinishedLesson
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xCF7CF4", Offset = "0xCF7CF4", VA = "0xCF7CF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xCF7CFC", Offset = "0xCF7CFC", VA = "0xCF7CFC")]
			set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<AbstractVrHandController> OnControllerConnected
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0xCF78D4", Offset = "0xCF78D4", VA = "0xCF78D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECCB8", Offset = "0x9ECCB8")]
			add
			{
			}
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xCF797C", Offset = "0xCF797C", VA = "0xCF797C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECCC8", Offset = "0x9ECCC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action<AbstractVrHandController> OnControllerDisconnected
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0xCF7A24", Offset = "0xCF7A24", VA = "0xCF7A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECCD8", Offset = "0x9ECCD8")]
			add
			{
			}
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xCF7ACC", Offset = "0xCF7ACC", VA = "0xCF7ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECCE8", Offset = "0x9ECCE8")]
			remove
			{
			}
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xCF7D84", Offset = "0xCF7D84", VA = "0xCF7D84")]
		public VRPlayer()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xCF7E40", Offset = "0xCF7E40", VA = "0xCF7E40", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xCF8228", Offset = "0xCF8228", VA = "0xCF8228", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xCF6E0C", Offset = "0xCF6E0C", VA = "0xCF6E0C")]
		public void Recenter()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xCF8024", Offset = "0xCF8024", VA = "0xCF8024")]
		private void SetupHierarchy()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xCF8398", Offset = "0xCF8398", VA = "0xCF8398", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xCF845C", Offset = "0xCF845C", VA = "0xCF845C")]
		private void HandleHandControllerConnected(AbstractVrHandController handController)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xCF850C", Offset = "0xCF850C", VA = "0xCF850C")]
		private void HandleHandControllerDisconnected(AbstractVrHandController handController)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xCF81A8", Offset = "0xCF81A8", VA = "0xCF81A8")]
		private void CheckIfALessonIsCompleted()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xCF8608", Offset = "0xCF8608", VA = "0xCF8608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECCF8", Offset = "0x9ECCF8")]
		private UIImage <.ctor>b__34_0()
		{
			return null;
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xCF8748", Offset = "0xCF8748", VA = "0xCF8748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECD08", Offset = "0x9ECD08")]
		private void <SetupHierarchy>b__38_0(AbstractVrHandController handController)
		{
		}
	}
}
namespace ATiStudios.VR.UserPreferences
{
	[Token(Token = "0x20001F8")]
	public abstract class AbstractVRUserSettings : BaseUserSettings
	{
		[Token(Token = "0x170002F0")]
		public abstract bool IsFirstRun
		{
			[Token(Token = "0x6001088")]
			get;
			[Token(Token = "0x6001089")]
			set;
		}

		[Token(Token = "0x170002F1")]
		public abstract bool IsTutorialDone
		{
			[Token(Token = "0x600108A")]
			get;
			[Token(Token = "0x600108B")]
			set;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xCF78CC", Offset = "0xCF78CC", VA = "0xCF78CC")]
		protected AbstractVRUserSettings()
		{
		}
	}
}
namespace ATiStudios.VR.UI
{
	[Token(Token = "0x20001F9")]
	public class MultiplayerTeleportButton : UIButton
	{
		[StructLayout(3)]
		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D74", Offset = "0x9E2D74")]
		private struct <SetUserPropertiesAfterTeleport>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MultiplayerTeleportButton <>4__this;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KeyValuePair<int, string> entry;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private VRMultiplayerUser <localAvatar>5__2;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xA82E78", Offset = "0xA82E78", VA = "0xA82E78", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0xA82E80", Offset = "0xA82E80", VA = "0xA82E80", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000C56")]
		private const float MAX_SCALE_VALUE = 1.2f;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Transform[] _teleportTransforms;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Sequence _tweenPulse;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private VRFollowCamera _vrFollowCamera;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Dictionary<int, string> OccupiedSeats;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public int Index;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Lazy<TableFullPopup> _lazyTableFullPopup;

		[Token(Token = "0x170002F2")]
		public Transform[] TeleportTransforms
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xB48F30", Offset = "0xB48F30", VA = "0xB48F30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F3")]
		public TableFullPopup TableFullPopup
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0xB48F38", Offset = "0xB48F38", VA = "0xB48F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xB48F98", Offset = "0xB48F98", VA = "0xB48F98")]
		public MultiplayerTeleportButton()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xB4904C", Offset = "0xB4904C", VA = "0xB4904C", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xB49624", Offset = "0xB49624", VA = "0xB49624", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xB49690", Offset = "0xB49690", VA = "0xB49690", Slot = "36")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xB496FC", Offset = "0xB496FC", VA = "0xB496FC", Slot = "55")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xB49724", Offset = "0xB49724", VA = "0xB49724")]
		public void CheckIfFreeSeat()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xB40760", Offset = "0xB40760", VA = "0xB40760")]
		public void Teleport(bool freePreviousSeat)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xB406C0", Offset = "0xB406C0", VA = "0xB406C0")]
		public void Show()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xB498D4", Offset = "0xB498D4", VA = "0xB498D4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xB49954", Offset = "0xB49954", VA = "0xB49954")]
		private void OnPhotonCustomRoomPropertiesChanged(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xB49804", Offset = "0xB49804", VA = "0xB49804")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ECD18", Offset = "0x9ECD18")]
		private void SetUserPropertiesAfterTeleport(KeyValuePair<int, string> entry)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xB49C58", Offset = "0xB49C58", VA = "0xB49C58")]
		private TableFullPopup SetupTableFullPopup()
		{
			return null;
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xB49CB8", Offset = "0xB49CB8", VA = "0xB49CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECD7C", Offset = "0x9ECD7C")]
		private void <Teleport>b__17_0()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xB49E84", Offset = "0xB49E84", VA = "0xB49E84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECD8C", Offset = "0x9ECD8C")]
		private void <Show>b__18_0()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xB49ED4", Offset = "0xB49ED4", VA = "0xB49ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECD9C", Offset = "0x9ECD9C")]
		private void <Hide>b__19_0()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1F88", Offset = "0x9E1F88")]
	public sealed class TeleportButton : UIButton, IStorylineActor
	{
		[Token(Token = "0x4000C5D")]
		private const float MAX_SCALE_VALUE = 1.2f;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public UnityEvent OnAfterTeleport;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private Transform _teleportTransform;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Sequence _tweenPulse;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private VRFollowCamera _vrFollowCamera;

		[Token(Token = "0x170002F4")]
		public string Name
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0xCF66FC", Offset = "0xCF66FC", VA = "0xCF66FC", Slot = "56")]
			get
			{
				return null;
			}
			[Token(Token = "0x600109F")]
			[Address(RVA = "0xCF6704", Offset = "0xCF6704", VA = "0xCF6704", Slot = "57")]
			set
			{
			}
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xCF670C", Offset = "0xCF670C", VA = "0xCF670C", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xCF68F4", Offset = "0xCF68F4", VA = "0xCF68F4", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xCF6960", Offset = "0xCF6960", VA = "0xCF6960", Slot = "36")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xCF69CC", Offset = "0xCF69CC", VA = "0xCF69CC", Slot = "55")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xCF6A7C", Offset = "0xCF6A7C", VA = "0xCF6A7C")]
		public void Show()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xCF6B1C", Offset = "0xCF6B1C", VA = "0xCF6B1C")]
		public void Hide()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xCF6B9C", Offset = "0xCF6B9C", VA = "0xCF6B9C")]
		public TeleportButton()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xCF6C04", Offset = "0xCF6C04", VA = "0xCF6C04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECDAC", Offset = "0x9ECDAC")]
		private void <OnPointerClick>b__12_0()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xCF6EF4", Offset = "0xCF6EF4", VA = "0xCF6EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECDBC", Offset = "0x9ECDBC")]
		private void <Show>b__13_0()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xCF6F44", Offset = "0xCF6F44", VA = "0xCF6F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECDCC", Offset = "0x9ECDCC")]
		private void <Hide>b__14_0()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public sealed class VRFollowCamera : BaseMonoBehaviour
	{
		[Token(Token = "0x4000C63")]
		private const float Y_TRIGGER_DISTANCE = 20f;

		[Token(Token = "0x4000C64")]
		private const float X_TRIGGER_DISTANCE = 20f;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool LookAtCamera;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool FollowCamera;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool IsFollowing;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 PositionOffeset;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float FollowLatency;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float DistanceFromCamera;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AxisConstraint FollowAxis;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VRPlayer _vrPlayer;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _isInView;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _panelWidth;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _panelHeight;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _currentScreenCenter;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Camera _camera;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RectTransform _panelRectTransform;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Tween _tweenMove;

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xCF6FB4", Offset = "0xCF6FB4", VA = "0xCF6FB4", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xCF72B4", Offset = "0xCF72B4", VA = "0xCF72B4", Slot = "14")]
		protected override void UpdateComponent()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xCF7038", Offset = "0xCF7038", VA = "0xCF7038")]
		public void Reposition()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xCF778C", Offset = "0xCF778C", VA = "0xCF778C")]
		private void UpdateToLookAtCamera()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xCF75B4", Offset = "0xCF75B4", VA = "0xCF75B4")]
		private void UpdateFollowPossition()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xCF7858", Offset = "0xCF7858", VA = "0xCF7858")]
		public VRFollowCamera()
		{
		}
	}
}
namespace ATiStudios.VR.SceneManager
{
	[Token(Token = "0x20001FC")]
	public sealed class AppointmentSceneManager : VRStorySceneManager
	{
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xB3B850", Offset = "0xB3B850", VA = "0xB3B850", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xB3B964", Offset = "0xB3B964", VA = "0xB3B964", Slot = "30")]
		protected override string GetStorylineFileName()
		{
			return null;
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xB3B9AC", Offset = "0xB3B9AC", VA = "0xB3B9AC")]
		public AppointmentSceneManager()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class HotelRoomSceneManager : VRStorySceneManager
	{
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xB3B9B4", Offset = "0xB3B9B4", VA = "0xB3B9B4", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xB3BAC8", Offset = "0xB3BAC8", VA = "0xB3BAC8", Slot = "30")]
		protected override string GetStorylineFileName()
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xB3BB10", Offset = "0xB3BB10", VA = "0xB3BB10")]
		public HotelRoomSceneManager()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class MultiplayerSceneManager : VRSceneManager
	{
		[Serializable]
		[Token(Token = "0x20003A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D84", Offset = "0x9E2D84")]
		private sealed class <>c
		{
			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SpeechRecognizer> <>9__28_7;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SpeechRecognizer> <>9__28_8;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__28_11;

			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xB3FF48", Offset = "0xB3FF48", VA = "0xB3FF48")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B81")]
			[Address(RVA = "0xB3FF50", Offset = "0xB3FF50", VA = "0xB3FF50")]
			internal void <StartComponent>b__28_7(SpeechRecognizer recognizer)
			{
			}

			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xB3FFC4", Offset = "0xB3FFC4", VA = "0xB3FFC4")]
			internal void <StartComponent>b__28_8(SpeechRecognizer recognizer)
			{
			}

			[Token(Token = "0x6001B83")]
			[Address(RVA = "0xB40038", Offset = "0xB40038", VA = "0xB40038")]
			internal void <StartComponent>b__28_11()
			{
			}
		}

		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2D94", Offset = "0x9E2D94")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRMultiplayerUser multiplayerUser;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultiplayerSceneManager <>4__this;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__4;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__5;

			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xB40C9C", Offset = "0xB40C9C", VA = "0xB40C9C")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6001B85")]
			[Address(RVA = "0xB40CA4", Offset = "0xB40CA4", VA = "0xB40CA4")]
			internal void <SetupMultiplayerUser>b__0(IInteractable interactible)
			{
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xB40F1C", Offset = "0xB40F1C", VA = "0xB40F1C")]
			internal void <SetupMultiplayerUser>b__4()
			{
			}

			[Token(Token = "0x6001B87")]
			[Address(RVA = "0xB410A0", Offset = "0xB410A0", VA = "0xB410A0")]
			internal void <SetupMultiplayerUser>b__5()
			{
			}

			[Token(Token = "0x6001B88")]
			[Address(RVA = "0xB410F8", Offset = "0xB410F8", VA = "0xB410F8")]
			internal void <SetupMultiplayerUser>b__1(IInteractable interactable)
			{
			}

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xB411D0", Offset = "0xB411D0", VA = "0xB411D0")]
			internal void <SetupMultiplayerUser>b__2(IInteractable interactable)
			{
			}

			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0xB4123C", Offset = "0xB4123C", VA = "0xB4123C")]
			internal bool <SetupMultiplayerUser>b__3()
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2DA4", Offset = "0x9E2DA4")]
		private struct <SetupMultiplayerUser>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRMultiplayerUser multiplayerUser;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MultiplayerSceneManager <>4__this;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass45_0 <>8__1;

			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private object <>u__1;

			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0xA82DC4", Offset = "0xA82DC4", VA = "0xA82DC4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0xA82DCC", Offset = "0xA82DCC", VA = "0xA82DCC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2DB4", Offset = "0x9E2DB4")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AbstractVrController vrController;

			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0xB3FC84", Offset = "0xB3FC84", VA = "0xB3FC84")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xB41278", Offset = "0xB41278", VA = "0xB41278")]
			internal void <ShowStartRecordingCoachMark>b__1()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2DC4", Offset = "0x9E2DC4")]
		private struct <AddPlayerDisconnectedElement>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MultiplayerSceneManager <>4__this;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string username;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xA82DB0", Offset = "0xA82DB0", VA = "0xA82DB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xA82DB8", Offset = "0xA82DB8", VA = "0xA82DB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2DD4", Offset = "0x9E2DD4")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MultiplayerTeleportWarningPopup teleportWarningPopup;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultiplayerSceneManager <>4__this;

			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xB3F018", Offset = "0xB3F018", VA = "0xB3F018")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xB412C4", Offset = "0xB412C4", VA = "0xB412C4")]
			internal void <SetupTeleportWarningPopup>b__0(IInteractable button)
			{
			}

			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xB41330", Offset = "0xB41330", VA = "0xB41330")]
			internal void <SetupTeleportWarningPopup>b__1(IInteractable button)
			{
			}
		}

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SpeechRecognizer _speechRecognizer;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Lazy<MultiplayerQuitPopup> _lazyQuitPopup;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Lazy<RecalibratePopup> _lazyRecalibratePopup;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[CanBeNull]
		private ATiStudios.Core.TimingHandler _timingHandlerStartRecognitionOnEnter;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[CanBeNull]
		private ATiStudios.Core.TimingHandler _timingShowCoachMark;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _newPlayerConnecting;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private VRMultiplayerUser _currentMultiplayerCharacter;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Lazy<MultiplayerUsersConnectionFeedbackPopup> _lazyConnectionFeedbackPopup;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _shouldShowConnectionFeedback;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ATiStudios.Core.TimingHandler CheckIfAvatarsAreOnTheSamePositionsTimingHandler;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Lazy<MultiplayerTeleportWarningPopup> _lazyTeleportWarningPopup;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public MultiplayerTeleportButton TargetTableToTeleport;

		[Token(Token = "0x170002F5")]
		public new static MultiplayerSceneManager Instance
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xB39CB4", Offset = "0xB39CB4", VA = "0xB39CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		public MultiplayerQuitPopup QuitPopup
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xB3BB18", Offset = "0xB3BB18", VA = "0xB3BB18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public RecalibratePopup RecalibratePopup
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xB3BB78", Offset = "0xB3BB78", VA = "0xB3BB78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		public bool CanStartRecording
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xB3BBD8", Offset = "0xB3BBD8", VA = "0xB3BBD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F9")]
		public MultiplayerUsersConnectionFeedbackPopup UsersConnectionFeedbackPopup
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xB3BCC8", Offset = "0xB3BCC8", VA = "0xB3BCC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		public MultiplayerTeleportWarningPopup TeleportWarningPopup
		{
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0xB3BD28", Offset = "0xB3BD28", VA = "0xB3BD28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FB")]
		public string SceneName
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xB3BD88", Offset = "0xB3BD88", VA = "0xB3BD88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xB3BDB8", Offset = "0xB3BDB8", VA = "0xB3BDB8")]
		public MultiplayerSceneManager()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xB3C154", Offset = "0xB3C154", VA = "0xB3C154", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xB3C6F0", Offset = "0xB3C6F0", VA = "0xB3C6F0", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xB3D100", Offset = "0xB3D100", VA = "0xB3D100", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xB3D3C4", Offset = "0xB3D3C4", VA = "0xB3D3C4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xB3D4C8", Offset = "0xB3D4C8", VA = "0xB3D4C8", Slot = "24")]
		protected virtual void HandleControllerOnBackButtonPressed()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xB3D4E4", Offset = "0xB3D4E4", VA = "0xB3D4E4", Slot = "22")]
		protected override void OnPause(bool isBackground)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xB3D774", Offset = "0xB3D774", VA = "0xB3D774", Slot = "23")]
		protected override void OnResume(bool isBackground)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xB3DC8C", Offset = "0xB3DC8C", VA = "0xB3DC8C")]
		private void HandleControllerOnHoldWillStart()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xB3DDE4", Offset = "0xB3DDE4", VA = "0xB3DDE4")]
		private void HandleControllerHoldStarted()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xB3DFF4", Offset = "0xB3DFF4", VA = "0xB3DFF4")]
		private void HandleControllerHoldEnded()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xB3E0F8", Offset = "0xB3E0F8", VA = "0xB3E0F8")]
		private void HandleControllerOnHoldCanceled()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xB3DD30", Offset = "0xB3DD30", VA = "0xB3DD30")]
		private void StartSpeechRecognition()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xB3E098", Offset = "0xB3E098", VA = "0xB3E098")]
		private void StopSpeechRecognition()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xB3E1DC", Offset = "0xB3E1DC", VA = "0xB3E1DC")]
		public void CancelSpeechRecognizer()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xB3E2DC", Offset = "0xB3E2DC", VA = "0xB3E2DC")]
		public void OnConnectionFail(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xB3E408", Offset = "0xB3E408", VA = "0xB3E408")]
		public void OnDisconnectedFromPhoton()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xB3E460", Offset = "0xB3E460", VA = "0xB3E460")]
		public void OnPhotonPlayerDisconnected(PhotonPlayer player)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xB3E684", Offset = "0xB3E684", VA = "0xB3E684")]
		public void OnPhotonPlayerConnected(PhotonPlayer newPlayer)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xB3E690", Offset = "0xB3E690", VA = "0xB3E690")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ECDDC", Offset = "0x9ECDDC")]
		private void SetupMultiplayerUser(VRMultiplayerUser multiplayerUser)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xB3E250", Offset = "0xB3E250", VA = "0xB3E250")]
		protected void ShowStartRecordingCoachMark(float delay = 1f)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xB3E754", Offset = "0xB3E754", VA = "0xB3E754")]
		private void HandleHomeButton(IInteractable button)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xB3E9DC", Offset = "0xB3E9DC", VA = "0xB3E9DC")]
		private RecalibratePopup SetupRecalibratePopup()
		{
			return null;
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xB3EA3C", Offset = "0xB3EA3C", VA = "0xB3EA3C")]
		private MultiplayerQuitPopup SetupQuitPopup()
		{
			return null;
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xB3EC40", Offset = "0xB3EC40", VA = "0xB3EC40")]
		private MultiplayerUsersConnectionFeedbackPopup SetupConnectionFeedbackPopup()
		{
			return null;
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xB3ECA0", Offset = "0xB3ECA0", VA = "0xB3ECA0")]
		private void CloseQuitPopup(float parameter = 0f)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xB3ECB0", Offset = "0xB3ECB0", VA = "0xB3ECB0")]
		private void PositionVRPlayer()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xB3C61C", Offset = "0xB3C61C", VA = "0xB3C61C")]
		private void UpdateEnvironmentAudio(bool isHeadphoneConnected)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xB3ED2C", Offset = "0xB3ED2C", VA = "0xB3ED2C")]
		private void HandleMicrophoneCalibratorOnCompletionCallback(float newCalibratedValue)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xB3E5C4", Offset = "0xB3E5C4", VA = "0xB3E5C4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ECE40", Offset = "0x9ECE40")]
		private void AddPlayerDisconnectedElement(string username)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xB3EE90", Offset = "0xB3EE90", VA = "0xB3EE90")]
		private MultiplayerTeleportWarningPopup SetupTeleportWarningPopup()
		{
			return null;
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xB3DA04", Offset = "0xB3DA04", VA = "0xB3DA04")]
		private void ResetPlayerProperties()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xB3D450", Offset = "0xB3D450", VA = "0xB3D450")]
		private void SendLevelQuitAnalyticsEvent()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xB3F020", Offset = "0xB3F020", VA = "0xB3F020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEA4", Offset = "0x9ECEA4")]
		private void <AwakeComponent>b__27_0()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xB3F130", Offset = "0xB3F130", VA = "0xB3F130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEB4", Offset = "0x9ECEB4")]
		private void <AwakeComponent>b__27_1()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xB3F1A0", Offset = "0xB3F1A0", VA = "0xB3F1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEC4", Offset = "0x9ECEC4")]
		private void <StartComponent>b__28_0(SpeechRecognizer recognizer)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xB3F278", Offset = "0xB3F278", VA = "0xB3F278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECED4", Offset = "0x9ECED4")]
		private void <StartComponent>b__28_1(SpeechRecognizer recognizer)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xB3F370", Offset = "0xB3F370", VA = "0xB3F370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEE4", Offset = "0x9ECEE4")]
		private void <StartComponent>b__28_2(SpeechRecognizer recognizer, float volume)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xB3F384", Offset = "0xB3F384", VA = "0xB3F384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECEF4", Offset = "0x9ECEF4")]
		private void <StartComponent>b__28_3(SpeechRecognizer recognizer, string recognizedText, bool isFinal)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xB3F44C", Offset = "0xB3F44C", VA = "0xB3F44C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF04", Offset = "0x9ECF04")]
		private void <StartComponent>b__28_12()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xB3F4F0", Offset = "0xB3F4F0", VA = "0xB3F4F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF14", Offset = "0x9ECF14")]
		private void <StartComponent>b__28_4(SpeechRecognizer recognizer, ATiStudios.Foundation.Error error)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xB3F594", Offset = "0xB3F594", VA = "0xB3F594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF24", Offset = "0x9ECF24")]
		private void <StartComponent>b__28_13()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xB3F6F8", Offset = "0xB3F6F8", VA = "0xB3F6F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF34", Offset = "0x9ECF34")]
		private void <StartComponent>b__28_5(SpeechRecognizer recognizer)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xB3F958", Offset = "0xB3F958", VA = "0xB3F958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF44", Offset = "0x9ECF44")]
		private void <StartComponent>b__28_6(SpeechRecognizer recognizer)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xB3F96C", Offset = "0xB3F96C", VA = "0xB3F96C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF54", Offset = "0x9ECF54")]
		private void <StartComponent>b__28_9(AbstractVrHandController controller)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xB3F998", Offset = "0xB3F998", VA = "0xB3F998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF64", Offset = "0x9ECF64")]
		private void <StartComponent>b__28_10(AbstractVrHandController controller)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xB3FA40", Offset = "0xB3FA40", VA = "0xB3FA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF74", Offset = "0x9ECF74")]
		private void <OnConnectionFail>b__41_0()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xB3FAAC", Offset = "0xB3FAAC", VA = "0xB3FAAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF84", Offset = "0x9ECF84")]
		private void <ShowStartRecordingCoachMark>b__46_0()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xB3FC8C", Offset = "0xB3FC8C", VA = "0xB3FC8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECF94", Offset = "0x9ECF94")]
		private void <SetupQuitPopup>b__49_0(IInteractable button)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xB3FC90", Offset = "0xB3FC90", VA = "0xB3FC90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECFA4", Offset = "0x9ECFA4")]
		private void <SetupQuitPopup>b__49_1(IInteractable button)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xB3FCA0", Offset = "0xB3FCA0", VA = "0xB3FCA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECFB4", Offset = "0x9ECFB4")]
		private void <PositionVRPlayer>b__52_0()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xB3FED4", Offset = "0xB3FED4", VA = "0xB3FED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ECFC4", Offset = "0x9ECFC4")]
		private bool <AddPlayerDisconnectedElement>b__55_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001FF")]
	public class ReceptionSceneManager : VRStorySceneManager
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xB41CA8", Offset = "0xB41CA8", VA = "0xB41CA8", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xB41DBC", Offset = "0xB41DBC", VA = "0xB41DBC", Slot = "30")]
		protected override string GetStorylineFileName()
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xB41E04", Offset = "0xB41E04", VA = "0xB41E04")]
		public ReceptionSceneManager()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class RestaurantSceneManager : VRStorySceneManager
	{
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xB41E0C", Offset = "0xB41E0C", VA = "0xB41E0C", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xB41F20", Offset = "0xB41F20", VA = "0xB41F20", Slot = "30")]
		protected override string GetStorylineFileName()
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xB41F68", Offset = "0xB41F68", VA = "0xB41F68")]
		public RestaurantSceneManager()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public sealed class ShoppingSceneManager : VRStorySceneManager
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xB41F70", Offset = "0xB41F70", VA = "0xB41F70", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xB42084", Offset = "0xB42084", VA = "0xB42084", Slot = "30")]
		protected override string GetStorylineFileName()
		{
			return null;
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xB420CC", Offset = "0xB420CC", VA = "0xB420CC")]
		public ShoppingSceneManager()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class TaxiSceneManager : VRStorySceneManager
	{
		[StructLayout(3)]
		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2DE4", Offset = "0x9E2DE4")]
		private struct <HandleOnTaxiCarAccelerationEnded>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TaxiSceneManager <>4__this;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xA82DD8", Offset = "0xA82DD8", VA = "0xA82DD8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xA82DE0", Offset = "0xA82DE0", VA = "0xA82DE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private VRFemale _taxiDriver;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private TaxiCar _taxiCar;

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xB420D4", Offset = "0xB420D4", VA = "0xB420D4", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xB421E8", Offset = "0xB421E8", VA = "0xB421E8", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xB422C8", Offset = "0xB422C8", VA = "0xB422C8", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xB423A8", Offset = "0xB423A8", VA = "0xB423A8", Slot = "30")]
		protected override string GetStorylineFileName()
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xB423F0", Offset = "0xB423F0", VA = "0xB423F0", Slot = "22")]
		protected override void OnPause(bool isBackground)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xB42430", Offset = "0xB42430", VA = "0xB42430", Slot = "23")]
		protected override void OnResume(bool isBackground)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xB42470", Offset = "0xB42470", VA = "0xB42470", Slot = "31")]
		protected override bool CanResumeCharacterAfterPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xB424AC", Offset = "0xB424AC", VA = "0xB424AC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ECFD4", Offset = "0x9ECFD4")]
		private void HandleOnTaxiCarAccelerationEnded()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xB42574", Offset = "0xB42574", VA = "0xB42574")]
		private void HandleOnTaxiCarDeccelerationEnded()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xB425AC", Offset = "0xB425AC", VA = "0xB425AC")]
		public TaxiSceneManager()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public sealed class TicketSceneManager : VRStorySceneManager
	{
		[Token(Token = "0x6001104")]
		[Address(RVA = "0xB427F4", Offset = "0xB427F4", VA = "0xB427F4", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xB42908", Offset = "0xB42908", VA = "0xB42908", Slot = "30")]
		protected override string GetStorylineFileName()
		{
			return null;
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xB42950", Offset = "0xB42950", VA = "0xB42950")]
		public TicketSceneManager()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class TrainSceneManager : VRStorySceneManager
	{
		[Token(Token = "0x6001107")]
		[Address(RVA = "0xB42958", Offset = "0xB42958", VA = "0xB42958", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xB42A6C", Offset = "0xB42A6C", VA = "0xB42A6C", Slot = "30")]
		protected override string GetStorylineFileName()
		{
			return null;
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xB42AB4", Offset = "0xB42AB4", VA = "0xB42AB4")]
		public TrainSceneManager()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public sealed class VRLessonSceneManager : VRPlayableSceneManager
	{
		[StructLayout(3)]
		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2DF4", Offset = "0x9E2DF4")]
		private struct <AwakeComponent>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRLessonSceneManager <>4__this;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private LearningLesson <learningLesson>5__2;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<LearningLesson> <>u__2;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<JObject> <>u__3;

			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xA82E14", Offset = "0xA82E14", VA = "0xA82E14", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B97")]
			[Address(RVA = "0xA82E1C", Offset = "0xA82E1C", VA = "0xA82E1C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E04", Offset = "0x9E2E04")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRLessonSceneManager <>4__this;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRCharacter character;

			[Token(Token = "0x6001B98")]
			[Address(RVA = "0xB42DA0", Offset = "0xB42DA0", VA = "0xB42DA0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001B99")]
			[Address(RVA = "0xB45BC4", Offset = "0xB45BC4", VA = "0xB45BC4")]
			internal void <SetupCharacter>b__0(Dictionary<string, object> additionalFlags)
			{
			}
		}

		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E14", Offset = "0x9E2E14")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneEndPopup popup;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isNextLessonIndexValid;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRLessonSceneManager <>4__this;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nextVocabularyLessonIndex;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__1;

			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0xB42F14", Offset = "0xB42F14", VA = "0xB42F14")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0xB45C74", Offset = "0xB45C74", VA = "0xB45C74")]
			internal void <SetupSceneEndPopup>b__0(IInteractable button)
			{
			}

			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xB45D20", Offset = "0xB45D20", VA = "0xB45D20")]
			internal void <SetupSceneEndPopup>b__1()
			{
			}
		}

		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E24", Offset = "0x9E2E24")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lessonIndex;

			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xB43048", Offset = "0xB43048", VA = "0xB43048")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xB447AC", Offset = "0xB447AC", VA = "0xB447AC")]
			internal void <LoadSceneForVocabularyLessonIndex>b__0()
			{
			}
		}

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E34", Offset = "0x9E2E34")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRLessonSceneManager <>4__this;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xB43470", Offset = "0xB43470", VA = "0xB43470")]
			public <>c__DisplayClass12_0()
			{
			}
		}

		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E44", Offset = "0x9E2E44")]
		private sealed class <>c__DisplayClass12_1
		{
			[StructLayout(3)]
			[Token(Token = "0x200048B")]
			private struct <<DestroyCurrentSpawnedObject>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x400174C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400174D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400174E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass12_1 <>4__this;

				[Token(Token = "0x400174F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private object <>u__1;

				[Token(Token = "0x6001DDE")]
				[Address(RVA = "0xA82E00", Offset = "0xA82E00", VA = "0xA82E00", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DDF")]
				[Address(RVA = "0xA82E08", Offset = "0xA82E08", VA = "0xA82E08", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject tempObject;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass12_0 CS$<>8__locals1;

			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0xB43478", Offset = "0xB43478", VA = "0xB43478")]
			public <>c__DisplayClass12_1()
			{
			}

			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0xB44818", Offset = "0xB44818", VA = "0xB44818")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2ADC", Offset = "0x9F2ADC")]
			internal void <DestroyCurrentSpawnedObject>b__0()
			{
			}
		}

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E54", Offset = "0x9E2E54")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRLessonSceneManager <>4__this;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string objectName;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AbstractLesson lesson;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction<IInteractable> <>9__1;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__2;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public UnityAction<IInteractable> <>9__3;

			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__4;

			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0xB43ADC", Offset = "0xB43ADC", VA = "0xB43ADC")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0xB44C90", Offset = "0xB44C90", VA = "0xB44C90")]
			internal void <HandleLearningLessonOnLessonRequestSpawnObject>b__0()
			{
			}

			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0xB45894", Offset = "0xB45894", VA = "0xB45894")]
			internal void <HandleLearningLessonOnLessonRequestSpawnObject>b__1(IInteractable obj)
			{
			}

			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xB45980", Offset = "0xB45980", VA = "0xB45980")]
			internal void <HandleLearningLessonOnLessonRequestSpawnObject>b__2()
			{
			}

			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0xB459CC", Offset = "0xB459CC", VA = "0xB459CC")]
			internal void <HandleLearningLessonOnLessonRequestSpawnObject>b__3(IInteractable arg0)
			{
			}

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xB45AD0", Offset = "0xB45AD0", VA = "0xB45AD0")]
			internal void <HandleLearningLessonOnLessonRequestSpawnObject>b__4()
			{
			}
		}

		[Token(Token = "0x20003B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E64", Offset = "0x9E2E64")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRTeacher character;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRLessonSceneManager <>4__this;

			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xB44010", Offset = "0xB44010", VA = "0xB44010")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0xB45B4C", Offset = "0xB45B4C", VA = "0xB45B4C")]
			internal void <HandleOnAudioPlayerDidEndPlaying>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E74", Offset = "0x9E2E74")]
		private struct <<AwakeComponent>b__4_0>d : IAsyncStateMachine
		{
			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRLessonSceneManager <>4__this;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xA82DEC", Offset = "0xA82DEC", VA = "0xA82DEC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0xA82DF4", Offset = "0xA82DF4", VA = "0xA82DF4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000C82")]
		private const float SPAWN_OBJECT_ANIMATION_DURATION = 1f;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[CanBeNull]
		private SpawnObject _currentSpawnedObject;

		[Token(Token = "0x170002FC")]
		public new static VRLessonSceneManager Instance
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xB42ABC", Offset = "0xB42ABC", VA = "0xB42ABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xB42B20", Offset = "0xB42B20", VA = "0xB42B20", Slot = "11")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED038", Offset = "0x9ED038")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xB42BDC", Offset = "0xB42BDC", VA = "0xB42BDC", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xB42BE4", Offset = "0xB42BE4", VA = "0xB42BE4", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xB42C20", Offset = "0xB42C20", VA = "0xB42C20", Slot = "23")]
		protected override void OnResume(bool isBackground)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xB42C90", Offset = "0xB42C90", VA = "0xB42C90", Slot = "27")]
		protected override void SetupCharacter(VRCharacter character)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xB42DA8", Offset = "0xB42DA8", VA = "0xB42DA8", Slot = "28")]
		protected override void SetupSceneEndPopup(ref SceneEndPopup sceneEndPopup)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xB42F1C", Offset = "0xB42F1C", VA = "0xB42F1C", Slot = "29")]
		protected override void HandleRedoButton(IInteractable button)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xB42F9C", Offset = "0xB42F9C", VA = "0xB42F9C")]
		private void LoadSceneForVocabularyLessonIndex(int lessonIndex)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xB430F4", Offset = "0xB430F4", VA = "0xB430F4")]
		private void DestroyCurrentSpawnedObject(float seconds, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xB43480", Offset = "0xB43480", VA = "0xB43480")]
		private void ExecuteSceneEnd()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xB434B8", Offset = "0xB434B8", VA = "0xB434B8")]
		private void HandleSwipe(VRInputModule.SwipeDirection swipeDirection)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xB435BC", Offset = "0xB435BC", VA = "0xB435BC")]
		private void HandleLearningLessonOnLessonEnded(AbstractLesson lesson, bool isSkipped)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xB43650", Offset = "0xB43650", VA = "0xB43650")]
		private void HandleOnLessonRequestContinueUi(AbstractLesson lesson)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xB43700", Offset = "0xB43700", VA = "0xB43700")]
		private void HandleOnLessonRequestInputUi(AbstractLesson lesson)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xB4388C", Offset = "0xB4388C", VA = "0xB4388C")]
		private void HandleLearningLessonOnLessonRequestSpawnObject(AbstractLesson lesson, string objectName)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xB43AE4", Offset = "0xB43AE4", VA = "0xB43AE4")]
		private void HandleOnAudioPlayerDidEndPlaying(VRTeacher character, Dictionary<string, object> additionalFlags)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xB44018", Offset = "0xB44018", VA = "0xB44018")]
		private void HandleSpawnObjectAnimationExited(AnimatorState animatorState)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xB44108", Offset = "0xB44108", VA = "0xB44108")]
		public VRLessonSceneManager()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xB44110", Offset = "0xB44110", VA = "0xB44110")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED09C", Offset = "0x9ED09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED09C", Offset = "0x9ED09C")]
		private void <AwakeComponent>b__4_0()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xB441D8", Offset = "0xB441D8", VA = "0xB441D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED110", Offset = "0x9ED110")]
		private bool <AwakeComponent>b__4_2()
		{
			return default(bool);
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xB4420C", Offset = "0xB4420C", VA = "0xB4420C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED120", Offset = "0x9ED120")]
		private void <AwakeComponent>b__4_1(SpeechRecognizer recognizer)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xB44314", Offset = "0xB44314", VA = "0xB44314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED130", Offset = "0x9ED130")]
		[DebuggerHidden]
		private void <>n__0()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xB4431C", Offset = "0xB4431C", VA = "0xB4431C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED168", Offset = "0x9ED168")]
		private void <HandleOnLessonRequestContinueUi>b__16_0()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xB44400", Offset = "0xB44400", VA = "0xB44400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED178", Offset = "0x9ED178")]
		private void <HandleOnLessonRequestInputUi>b__17_0()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class VRSceneManager : AbstractSceneManager
	{
		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E84", Offset = "0x9E2E84")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName;

			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0xB47688", Offset = "0xB47688", VA = "0xB47688")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0xB48124", Offset = "0xB48124", VA = "0xB48124")]
			internal void <LoadScene>g__LoadNamedScene|0()
			{
			}
		}

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2E94", Offset = "0x9E2E94")]
		private sealed class <>c__DisplayClass20_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200048C")]
			private struct <<TransitionToBlackAsyncTask>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001750")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001751")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x4001752")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass20_0 <>4__this;

				[Token(Token = "0x4001753")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private object <>u__1;

				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0xA82E28", Offset = "0xA82E28", VA = "0xA82E28", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DE1")]
				[Address(RVA = "0xA82E30", Offset = "0xA82E30", VA = "0xA82E30", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isCompleted;

			[Token(Token = "0x6001BAE")]
			[Address(RVA = "0xB47798", Offset = "0xB47798", VA = "0xB47798")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0xB48190", Offset = "0xB48190", VA = "0xB48190")]
			internal void <TransitionToBlackAsyncTask>g__IsCompletedCallback|0()
			{
			}

			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0xB4819C", Offset = "0xB4819C", VA = "0xB4819C")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2B50", Offset = "0x9F2B50")]
			internal Task <TransitionToBlackAsyncTask>b__1()
			{
				return null;
			}
		}

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2EA4", Offset = "0x9E2EA4")]
		private sealed class <>c__DisplayClass21_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200048D")]
			private struct <<TransitionToSceneAsyncTask>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001754")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001755")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x4001756")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass21_0 <>4__this;

				[Token(Token = "0x4001757")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private object <>u__1;

				[Token(Token = "0x6001DE2")]
				[Address(RVA = "0xA82E3C", Offset = "0xA82E3C", VA = "0xA82E3C", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DE3")]
				[Address(RVA = "0xA82E44", Offset = "0xA82E44", VA = "0xA82E44", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isCompleted;

			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0xB4792C", Offset = "0xB4792C", VA = "0xB4792C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0xB485CC", Offset = "0xB485CC", VA = "0xB485CC")]
			internal void <TransitionToSceneAsyncTask>g__IsCompletedCallback|0()
			{
			}

			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0xB485D8", Offset = "0xB485D8", VA = "0xB485D8")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2BB4", Offset = "0x9F2BB4")]
			internal Task <TransitionToSceneAsyncTask>b__1()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2EB4", Offset = "0x9E2EB4")]
		private sealed class <>c
		{
			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<NoInternetConnectionPopup> <>9__39_0;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<DownloadTimeoutPopup> <>9__39_1;

			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0xB48010", Offset = "0xB48010", VA = "0xB48010")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0xB48018", Offset = "0xB48018", VA = "0xB48018")]
			internal void <LoadMainMenuWithoutLoadingScreen>g__LoadMainMenuDirectly|26_0()
			{
			}

			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0xB48064", Offset = "0xB48064", VA = "0xB48064")]
			internal NoInternetConnectionPopup <.ctor>b__39_0()
			{
				return null;
			}

			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xB480C4", Offset = "0xB480C4", VA = "0xB480C4")]
			internal DownloadTimeoutPopup <.ctor>b__39_1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2EC4", Offset = "0x9E2EC4")]
		private struct <OnPause>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRSceneManager <>4__this;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isBackground;

			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xA82E50", Offset = "0xA82E50", VA = "0xA82E50", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xA82E58", Offset = "0xA82E58", VA = "0xA82E58", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2ED4", Offset = "0x9E2ED4")]
		private struct <OnResume>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRSceneManager <>4__this;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isBackground;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xA82E64", Offset = "0xA82E64", VA = "0xA82E64", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0xA82E6C", Offset = "0xA82E6C", VA = "0xA82E6C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public VRPlayer VrPlayer;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Lazy<NoInternetConnectionPopup> _lazyConnectionLostPopup;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Lazy<DownloadTimeoutPopup> _lazyDownloadTimeoutPopup;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int SceneIndex;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private VRRatingPointsManager _ratingPointsManager;

		[Token(Token = "0x170002FD")]
		public new static VRSceneManager Instance
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0xB3A0AC", Offset = "0xB3A0AC", VA = "0xB3A0AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public override UIImage ImageBlackScreen
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0xB47590", Offset = "0xB47590", VA = "0xB47590", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FF")]
		public NoInternetConnectionPopup ConnectionLostPopup
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0xB3E3A8", Offset = "0xB3E3A8", VA = "0xB3E3A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public DownloadTimeoutPopup DownloadTimeoutPopup
		{
			[Token(Token = "0x6001126")]
			[Address(RVA = "0xB475C0", Offset = "0xB475C0", VA = "0xB475C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public VRRatingPointsManager RatingPointsManager
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0xB47620", Offset = "0xB47620", VA = "0xB47620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xB47628", Offset = "0xB47628", VA = "0xB47628")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9ED188", Offset = "0x9ED188")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xB3C304", Offset = "0xB3C304", VA = "0xB3C304", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xB3D018", Offset = "0xB3D018", VA = "0xB3D018", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xB3D1DC", Offset = "0xB3D1DC", VA = "0xB3D1DC", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xB39D34", Offset = "0xB39D34", VA = "0xB39D34")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xB47690", Offset = "0xB47690", VA = "0xB47690")]
		public Task TransitionToBlackAsyncTask()
		{
			return null;
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xB47824", Offset = "0xB47824", VA = "0xB47824")]
		public Task TransitionToSceneAsyncTask()
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xB477A0", Offset = "0xB477A0", VA = "0xB477A0")]
		public void TransitionToBlack(Action completionCallback)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xB43050", Offset = "0xB43050", VA = "0xB43050")]
		public void TransitionToBlackForSceneLoad(Action completionCallback)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xB47934", Offset = "0xB47934", VA = "0xB47934")]
		public void TransitionToScene(Action completionCallback)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xB47A18", Offset = "0xB47A18", VA = "0xB47A18")]
		public UnityEngine.AsyncOperation LoadSceneUnactivated(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xB474DC", Offset = "0xB474DC", VA = "0xB474DC")]
		public void LoadMainMenuWithoutLoadingScreen()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xB3D6AC", Offset = "0xB3D6AC", VA = "0xB3D6AC", Slot = "22")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED19C", Offset = "0x9ED19C")]
		protected override void OnPause(bool isBackground)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xB3D93C", Offset = "0xB3D93C", VA = "0xB3D93C", Slot = "23")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED200", Offset = "0x9ED200")]
		protected override void OnResume(bool isBackground)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xB47A5C", Offset = "0xB47A5C", VA = "0xB47A5C")]
		private void HandleVrFocusLost()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xB47AD0", Offset = "0xB47AD0", VA = "0xB47AD0")]
		private void HandleVrFocusAcquired()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xB47B44", Offset = "0xB47B44", VA = "0xB47B44")]
		private void HandleVrInputFocusLost()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xB47BB8", Offset = "0xB47BB8", VA = "0xB47BB8")]
		private void HandleVrInputFocusAcquired()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xB47C2C", Offset = "0xB47C2C", VA = "0xB47C2C")]
		private void HandleSteamFocusLost(bool isFocus)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xB47D80", Offset = "0xB47D80", VA = "0xB47D80")]
		private void HandleRecenterPose()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xB47E14", Offset = "0xB47E14", VA = "0xB47E14")]
		private void HandleOnConnectionEstablished()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xB47E70", Offset = "0xB47E70", VA = "0xB47E70")]
		private void HandleOnConnectionLost()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xB47F24", Offset = "0xB47F24", VA = "0xB47F24")]
		private void EnableInputModule()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xB47F5C", Offset = "0xB47F5C", VA = "0xB47F5C")]
		private void DisableInputModule()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xB3BF88", Offset = "0xB3BF88", VA = "0xB3BF88")]
		public VRSceneManager()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xB47F94", Offset = "0xB47F94", VA = "0xB47F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED264", Offset = "0x9ED264")]
		[DebuggerHidden]
		private void <>n__0(bool isBackground)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xB47FA0", Offset = "0xB47FA0", VA = "0xB47FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED29C", Offset = "0x9ED29C")]
		[DebuggerHidden]
		private void <>n__1(bool isBackground)
		{
		}
	}
}
namespace ATiStudios.VR.Panels
{
	[Token(Token = "0x2000207")]
	public class AnswerFeedbackTooltipView : UIView
	{
		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _textLabel;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIImage _emojiImage;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<string> _positiveFeedbackList;

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xB33950", Offset = "0xB33950", VA = "0xB33950", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xB33B70", Offset = "0xB33B70", VA = "0xB33B70")]
		public Tween ShowPositiveFeedback()
		{
			return null;
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xB33C9C", Offset = "0xB33C9C", VA = "0xB33C9C")]
		public Tween HidePositiveFeedback()
		{
			return null;
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xB33CB0", Offset = "0xB33CB0", VA = "0xB33CB0")]
		public AnswerFeedbackTooltipView()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class FadeTextButton : UIView
	{
		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _motherText;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILabel _targetText;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float _textMoveValue;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float _animationDuration;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float _initialTextPosition;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private SuggestionWrapper _wrapper;

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xB33CB8", Offset = "0xB33CB8", VA = "0xB33CB8", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xB33DE4", Offset = "0xB33DE4", VA = "0xB33DE4", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xB33E60", Offset = "0xB33E60", VA = "0xB33E60", Slot = "36")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xB33EDC", Offset = "0xB33EDC", VA = "0xB33EDC")]
		public FadeTextButton()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class HelpFeedbackPanel : UIView
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private List<SuggestionWrapper> _suggestionWrappers;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIButton _closeButton;

		[Token(Token = "0x17000302")]
		public List<SuggestionWrapper> SuggestionWrappers
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0xB33EF0", Offset = "0xB33EF0", VA = "0xB33EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public UIButton CloseButton
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0xB33EF8", Offset = "0xB33EF8", VA = "0xB33EF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xB33F00", Offset = "0xB33F00", VA = "0xB33F00", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xB33F48", Offset = "0xB33F48", VA = "0xB33F48")]
		public HelpFeedbackPanel()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class InfoPanel : UIView
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private SubtitleFeedbackPanel _subtitleFeedbackPanel;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private HelpFeedbackPanel _helpFeedbackPanel;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UIButton _openSubtitleButton;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UIButton _openHelpButton;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UIView _helpButtonBackground;

		[Token(Token = "0x17000304")]
		public UIButton OpenHelpButton
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0xB33F50", Offset = "0xB33F50", VA = "0xB33F50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public SubtitleFeedbackPanel SubtitleFeedbackPanel
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0xB33F58", Offset = "0xB33F58", VA = "0xB33F58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public HelpFeedbackPanel HelpFeedbackPanel
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0xB33F60", Offset = "0xB33F60", VA = "0xB33F60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xB33F68", Offset = "0xB33F68", VA = "0xB33F68", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xB34000", Offset = "0xB34000", VA = "0xB34000")]
		public void ShowPanels()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xB3412C", Offset = "0xB3412C", VA = "0xB3412C")]
		public void HidePanels()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xB34258", Offset = "0xB34258", VA = "0xB34258")]
		public void HidePanelsContent()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xB343E4", Offset = "0xB343E4", VA = "0xB343E4")]
		public void FadeOutSubtitlePanel()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xB34444", Offset = "0xB34444", VA = "0xB34444")]
		public void FadeOutHelpPanel()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xB344EC", Offset = "0xB344EC", VA = "0xB344EC")]
		public void FadeInSubtitlePanel()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xB3454C", Offset = "0xB3454C", VA = "0xB3454C")]
		public void FadeInHelpPanel()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xB345F4", Offset = "0xB345F4", VA = "0xB345F4")]
		public InfoPanel()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xB345FC", Offset = "0xB345FC", VA = "0xB345FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED2D4", Offset = "0x9ED2D4")]
		private void <ShowPanels>b__12_0()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xB3465C", Offset = "0xB3465C", VA = "0xB3465C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED2E4", Offset = "0x9ED2E4")]
		private void <HidePanels>b__13_0()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class MicrophoneIconController : UIView
	{
		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2EE4", Offset = "0x9E2EE4")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIImage rippleWaveImage;

			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xB34E04", Offset = "0xB34E04", VA = "0xB34E04")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0xB34E14", Offset = "0xB34E14", VA = "0xB34E14")]
			internal void <RippleAnimation>b__0()
			{
			}

			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xB34EBC", Offset = "0xB34EBC", VA = "0xB34EBC")]
			internal void <RippleAnimation>b__1()
			{
			}
		}

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIImage _microphoneIcon;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIImage[] _rippleWavesList;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Sequence _sequence;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _isStarted;

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xB346BC", Offset = "0xB346BC", VA = "0xB346BC", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xB34830", Offset = "0xB34830", VA = "0xB34830")]
		public void StartRippleAnimation()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xB34B90", Offset = "0xB34B90", VA = "0xB34B90")]
		public void StopRippleAnimation()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xB34D24", Offset = "0xB34D24", VA = "0xB34D24")]
		public void ShowMicrophoneIcon(float duration = 0f)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xB34D94", Offset = "0xB34D94", VA = "0xB34D94")]
		public void HideMicrophoneIcon(float duration = 0f)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xB349E0", Offset = "0xB349E0", VA = "0xB349E0")]
		private Sequence RippleAnimation(UIImage rippleWaveImage, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xB34E0C", Offset = "0xB34E0C", VA = "0xB34E0C")]
		public MicrophoneIconController()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class MultiplayerUserFeedbackPanel : UserFeedbackPanel
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private UILabel _userSpeechLabelMother;

		[Token(Token = "0x17000307")]
		public UILabel UserSpeechLabelMother
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0xB34F2C", Offset = "0xB34F2C", VA = "0xB34F2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		public UserInputAnimationController UserInputAnimationController
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0xB34F34", Offset = "0xB34F34", VA = "0xB34F34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xB34F3C", Offset = "0xB34F3C", VA = "0xB34F3C", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xB35008", Offset = "0xB35008", VA = "0xB35008")]
		public void ShowTranslatedUserInput(string translatedUserInput)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xB3505C", Offset = "0xB3505C", VA = "0xB3505C", Slot = "51")]
		public override void ShowState(UserFeedbackPanelState userFeedbackPanelState)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xB351E8", Offset = "0xB351E8", VA = "0xB351E8")]
		public void StopBlueHaloAnimation()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xB35240", Offset = "0xB35240", VA = "0xB35240")]
		public MultiplayerUserFeedbackPanel()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class SpeechRecognitionTooltipView : UIView
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _textLabel;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string _speakNowText;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private string _tryAgainText;

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xB35250", Offset = "0xB35250", VA = "0xB35250", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xB3531C", Offset = "0xB3531C", VA = "0xB3531C")]
		public Tween ShowSpeakNow(float duration = 0.2f)
		{
			return null;
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xB3537C", Offset = "0xB3537C", VA = "0xB3537C")]
		public Tween ShowTryAgain(float duration = 0.2f)
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xB353E0", Offset = "0xB353E0", VA = "0xB353E0")]
		public Tween Hide(float duration = 0.2f)
		{
			return null;
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xB353EC", Offset = "0xB353EC", VA = "0xB353EC")]
		public SpeechRecognitionTooltipView()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class SubtitleFeedbackPanel : UIView
	{
		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIButton _audioButton;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private SuggestionWrapper _suggestionWrapper;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UIButton _closeButton;

		[Token(Token = "0x17000309")]
		public UIButton AudioButton
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0xB353F4", Offset = "0xB353F4", VA = "0xB353F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		public SuggestionWrapper SuggestionWrapper
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0xB343DC", Offset = "0xB343DC", VA = "0xB343DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		public UIButton CloseButton
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0xB353FC", Offset = "0xB353FC", VA = "0xB353FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xB35404", Offset = "0xB35404", VA = "0xB35404")]
		public SubtitleFeedbackPanel()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class SuggestionWrapper : UIView
	{
		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2EF4", Offset = "0x9E2EF4")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SuggestionWrapper <>4__this;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ChatBotOutput output;

			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0xB35A7C", Offset = "0xB35A7C", VA = "0xB35A7C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0xB35CC4", Offset = "0xB35CC4", VA = "0xB35CC4")]
			internal void <SetComponents>b__1(ChatBotOutputComponent component)
			{
			}
		}

		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F04", Offset = "0x9E2F04")]
		private sealed class <>c__DisplayClass25_1
		{
			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string finalTargetText;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string finalMotherText;

			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0xB35A84", Offset = "0xB35A84", VA = "0xB35A84")]
			public <>c__DisplayClass25_1()
			{
			}

			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0xB35D94", Offset = "0xB35D94", VA = "0xB35D94")]
			internal void <SetComponents>b__0(ChatBotOutputComponent component)
			{
			}
		}

		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F14", Offset = "0x9E2F14")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sequence sequence;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SuggestionWrapper <>4__this;

			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0xB35E04", Offset = "0xB35E04", VA = "0xB35E04")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0xB35E0C", Offset = "0xB35E0C", VA = "0xB35E0C")]
			internal void <PlayAudio>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F24", Offset = "0x9E2F24")]
		private struct <PlayAudio>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SuggestionWrapper <>4__this;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass26_0 <>8__1;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0xA82D74", Offset = "0xA82D74", VA = "0xA82D74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0xA82D7C", Offset = "0xA82D7C", VA = "0xA82D7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _motherText;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILabel _targetText;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UIButton _audioButton;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UIImage _emojiImage;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private EAudioSource _audioSource;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private AudioPlayer _audioPlayer;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ChatBotOutput m_output;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UIImage _loadImage;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Color _initialColor;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private OutputData _outputData;

		[Token(Token = "0x1700030C")]
		public UILabel MotherText
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0xB3540C", Offset = "0xB3540C", VA = "0xB3540C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public UILabel TargetText
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0xB35414", Offset = "0xB35414", VA = "0xB35414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public UIButton AudioButton
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0xB3541C", Offset = "0xB3541C", VA = "0xB3541C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public UIImage EmojiImage
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0xB35424", Offset = "0xB35424", VA = "0xB35424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		public EAudioSource AudioSource
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xB3542C", Offset = "0xB3542C", VA = "0xB3542C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		public AudioPlayer AudioPlayer
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0xB35434", Offset = "0xB35434", VA = "0xB35434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		public UIImage LoadImage
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0xB3543C", Offset = "0xB3543C", VA = "0xB3543C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xB35444", Offset = "0xB35444", VA = "0xB35444", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xB3561C", Offset = "0xB3561C", VA = "0xB3561C")]
		public void SetComponents(ChatBotOutput output)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xB35A8C", Offset = "0xB35A8C", VA = "0xB35A8C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED2F4", Offset = "0x9ED2F4")]
		public void PlayAudio()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xB35B48", Offset = "0xB35B48", VA = "0xB35B48")]
		private void OnEnterPlayButton()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xB35C04", Offset = "0xB35C04", VA = "0xB35C04")]
		private void OnExitPlayButton()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xB35CB4", Offset = "0xB35CB4", VA = "0xB35CB4")]
		public SuggestionWrapper()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xB35CBC", Offset = "0xB35CBC", VA = "0xB35CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED358", Offset = "0x9ED358")]
		private void <StartComponent>b__24_0(IInteractable button)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xB35CC0", Offset = "0xB35CC0", VA = "0xB35CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED368", Offset = "0x9ED368")]
		private void <StartComponent>b__24_1(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000210")]
	public sealed class ThinkingDotsController : UIView
	{
		[Token(Token = "0x4000CAE")]
		protected const string EDITOR_THINKING_DOTS_CONTROLLER_GROUP_NAME = "ThinkingDotsController";

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float FinalPosition;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float AnimationDuration;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public bool IsPlaying;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<UIImage> _thinkingDots;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Sequence _sequenceDots;

		[Token(Token = "0x17000313")]
		public List<UIImage> ThinkingDots
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0xB36360", Offset = "0xB36360", VA = "0xB36360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xB36368", Offset = "0xB36368", VA = "0xB36368", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xB3663C", Offset = "0xB3663C", VA = "0xB3663C")]
		public void PlayAnimation()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xB366B8", Offset = "0xB366B8", VA = "0xB366B8")]
		public void StopAnimation()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xB3673C", Offset = "0xB3673C", VA = "0xB3673C")]
		public ThinkingDotsController()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xB36750", Offset = "0xB36750", VA = "0xB36750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED378", Offset = "0x9ED378")]
		private void <StopAnimation>b__10_0()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public enum UserFeedbackPanelState
	{
		[Token(Token = "0x4000CB5")]
		Unknown,
		[Token(Token = "0x4000CB6")]
		Listening,
		[Token(Token = "0x4000CB7")]
		Recording,
		[Token(Token = "0x4000CB8")]
		Processing,
		[Token(Token = "0x4000CB9")]
		Idle
	}
	[Token(Token = "0x2000212")]
	public class UserFeedbackPanel : UIView
	{
		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F34", Offset = "0x9E2F34")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isFallback;

			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UserFeedbackPanel <>4__this;

			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sprite emojiSprite;

			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0xB379D4", Offset = "0xB379D4", VA = "0xB379D4")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0xB3869C", Offset = "0xB3869C", VA = "0xB3869C")]
			internal void <SetComponents>b__0()
			{
			}

			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0xB38860", Offset = "0xB38860", VA = "0xB38860")]
			internal void <SetComponents>b__1()
			{
			}
		}

		[Token(Token = "0x4000CBA")]
		private const double MIN_RMS = 40.0;

		[Token(Token = "0x4000CBB")]
		private const double MAX_RMS = 80.0;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _userSpeechLabel;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E77B0", Offset = "0x9E77B0")]
		[CanBeNull]
		public UIView CoachMarkView;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MicrophoneIconController _microphoneIconController;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E780C", Offset = "0x9E780C")]
		private UserFeedbackPanelState <UserFeedbackPanelState>k__BackingField;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Sprite _checkmarkSprite;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Sprite _retrySprite;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UIImage _answerImage;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UIButton _buttonSkip;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private UIImage _answerFeedbackHaloImage;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private SpeechRecognitionTooltipView _speakNowTooltipView;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AnswerFeedbackTooltipView _answerFeedbackTooltipView;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		protected UserInputAnimationController _userInputAnimationController;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private AudioClip _correctClip;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AsyncOperationHandle<AudioClip> _botCorrectClipAddresable;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private AudioClip _wrongClip;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private AsyncOperationHandle<AudioClip> _botWrongClipAddresable;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private AudioClip _recordingStartedClip;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private AsyncOperationHandle<AudioClip> _startRecordingClipAddresable;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Sequence _sequence;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Sequence _answerSequence;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Sequence _speakNowTooltipSequence;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private UserFeedbackPanelState _currentPanelState;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool _isTargetLanguageRTL;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Language _targetLanguage;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private EColor _successGreen;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private EColor _retryRed;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private EColor _whiteColor;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private EColor _clearColor;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private VRGraphicRaycaster _graphicRaycaster;

		[Token(Token = "0x17000314")]
		public UILabel UserSpeechLabel
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xB367A0", Offset = "0xB367A0", VA = "0xB367A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		public UIButton ButtonSkip
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xB367A8", Offset = "0xB367A8", VA = "0xB367A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		public MicrophoneIconController MicrophoneIconController
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0xB367B0", Offset = "0xB367B0", VA = "0xB367B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		public UserFeedbackPanelState UserFeedbackPanelState
		{
			[Token(Token = "0x600118C")]
			[Address(RVA = "0xB367B8", Offset = "0xB367B8", VA = "0xB367B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED388", Offset = "0x9ED388")]
			get
			{
				return default(UserFeedbackPanelState);
			}
			[Token(Token = "0x600118D")]
			[Address(RVA = "0xB367C0", Offset = "0xB367C0", VA = "0xB367C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED398", Offset = "0x9ED398")]
			private set
			{
			}
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xB367C8", Offset = "0xB367C8", VA = "0xB367C8", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xB36EA8", Offset = "0xB36EA8", VA = "0xB36EA8")]
		public void Hide([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xB36F5C", Offset = "0xB36F5C", VA = "0xB36F5C")]
		public void Show([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xB35130", Offset = "0xB35130", VA = "0xB35130", Slot = "51")]
		public virtual void ShowState(UserFeedbackPanelState userFeedbackPanelState)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xB3749C", Offset = "0xB3749C", VA = "0xB3749C")]
		public void ShowUserInput(string userInput)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xB37584", Offset = "0xB37584", VA = "0xB37584")]
		public void SetComponents(string emojiCode, bool isFallback)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xB37AE0", Offset = "0xB37AE0", VA = "0xB37AE0")]
		public void UpdateLoudness(double volume)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xB37A60", Offset = "0xB37A60", VA = "0xB37A60")]
		public void PlayCorrectAnswerSoundEffect()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xB379DC", Offset = "0xB379DC", VA = "0xB379DC")]
		public void PlayWrongAnswerSoundEffect()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xB37DCC", Offset = "0xB37DCC", VA = "0xB37DCC")]
		public void PlayRecordingStartedSoundEffect()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xB37E54", Offset = "0xB37E54", VA = "0xB37E54")]
		public void ShowTryAgainTooltip(float duration)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xB351EC", Offset = "0xB351EC", VA = "0xB351EC")]
		protected void StopBlueHaloProcessingAnimation()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xB373A0", Offset = "0xB373A0", VA = "0xB373A0")]
		private void ShowIdleState()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xB37010", Offset = "0xB37010", VA = "0xB37010")]
		private void ShowListeningState()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xB37200", Offset = "0xB37200", VA = "0xB37200")]
		private void ShowRecordingState()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xB372CC", Offset = "0xB372CC", VA = "0xB372CC")]
		private void ShowProcessingState()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xB383B4", Offset = "0xB383B4", VA = "0xB383B4")]
		private void StartBlueHaloProcessingAnimation()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xB38064", Offset = "0xB38064", VA = "0xB38064")]
		private void ShowSpeakNowTooltip(float duration)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xB3833C", Offset = "0xB3833C", VA = "0xB3833C")]
		private void HideSpeakNowTooltip(float duration)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xB35248", Offset = "0xB35248", VA = "0xB35248")]
		public UserFeedbackPanel()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xB384F4", Offset = "0xB384F4", VA = "0xB384F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED3A8", Offset = "0x9ED3A8")]
		private void <StartComponent>b__41_0(AsyncOperationHandle<AudioClip> operation)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xB38558", Offset = "0xB38558", VA = "0xB38558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED3B8", Offset = "0x9ED3B8")]
		private void <StartComponent>b__41_1(AsyncOperationHandle<AudioClip> operation)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xB385BC", Offset = "0xB385BC", VA = "0xB385BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED3C8", Offset = "0x9ED3C8")]
		private void <StartComponent>b__41_2(AsyncOperationHandle<AudioClip> operation)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xB38620", Offset = "0xB38620", VA = "0xB38620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED3D8", Offset = "0x9ED3D8")]
		private void <StartComponent>b__41_3(IInteractable button)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xB3862C", Offset = "0xB3862C", VA = "0xB3862C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED3E8", Offset = "0x9ED3E8")]
		private void <ShowListeningState>b__54_0()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class UserInputAnimationController : UIView
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIImage _firstBar;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIImage _secondBar;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UIImage _leftBar;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UIImage _middleBar;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UIImage _rightBar;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UIImage _secondToLastBar;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UIImage _lastBar;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _minHeight;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float _middleBarMaxHeight;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float _leftAndRightBarsMaxHeight;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float _secondAndSecondToLastBarsMaxHeight;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly Vector3 _scaleInValues;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private readonly Vector3 _dotsProcessingMoveBy;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector2 _barsResetSize;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Sequence _sequence;

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xB38A00", Offset = "0xB38A00", VA = "0xB38A00", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xB37BAC", Offset = "0xB37BAC", VA = "0xB37BAC")]
		public void SetBarsHeightRelativeToUserVoiceVolume(float volume)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xB37F00", Offset = "0xB37F00", VA = "0xB37F00")]
		public void ChangeColors(EColor color)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xB38A60", Offset = "0xB38A60", VA = "0xB38A60")]
		public void ResetListeningAnimationDots()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xB38E30", Offset = "0xB38E30", VA = "0xB38E30")]
		public void ResetProcessingAnimationDots()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xB38110", Offset = "0xB38110", VA = "0xB38110")]
		public void PlayProcessingAnimation()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xB35168", Offset = "0xB35168", VA = "0xB35168")]
		public void StopProcessingAnimation()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xB38030", Offset = "0xB38030", VA = "0xB38030")]
		public void InstantlyStopProcessingAnimation()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xB38A84", Offset = "0xB38A84", VA = "0xB38A84")]
		private void ResetToOriginalColor()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xB38CBC", Offset = "0xB38CBC", VA = "0xB38CBC")]
		private void ResetSize()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xB38E5C", Offset = "0xB38E5C", VA = "0xB38E5C")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xB39180", Offset = "0xB39180", VA = "0xB39180")]
		private void ResetScale()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xB393BC", Offset = "0xB393BC", VA = "0xB393BC")]
		private Sequence ProcessingScaleAnimation(UIImage dotToScaleImage)
		{
			return null;
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xB395DC", Offset = "0xB395DC", VA = "0xB395DC")]
		public UserInputAnimationController()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xB39680", Offset = "0xB39680", VA = "0xB39680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED3F8", Offset = "0x9ED3F8")]
		private void <StopProcessingAnimation>b__21_0()
		{
		}
	}
}
namespace ATiStudios.VR.InputSystem.Visuals
{
	[Token(Token = "0x2000214")]
	public class Reticle : UIView
	{
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F44", Offset = "0x9E2F44")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Reticle <>4__this;

			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0xB33558", Offset = "0xB33558", VA = "0xB33558")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0xB337D8", Offset = "0xB337D8", VA = "0xB337D8")]
			internal float <StartGaze>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0xB33818", Offset = "0xB33818", VA = "0xB33818")]
			internal void <StartGaze>b__1(float fillAmount)
			{
			}

			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xB338E4", Offset = "0xB338E4", VA = "0xB338E4")]
			internal void <StartGaze>b__2()
			{
			}
		}

		[Token(Token = "0x4000CE9")]
		private const string LOG_RETICLE = "Reticle";

		[Token(Token = "0x4000CEA")]
		private const string LOG_COACHMARK = "Coach Mark";

		[Token(Token = "0x4000CEB")]
		private const float ANIMATION_DURATION = 0.5f;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[CanBeNull]
		[SerializeField]
		private UIImage _uiImageGaze;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[CanBeNull]
		[SerializeField]
		private UILabel _labelCoachMark;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public float DefaultDistance;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UIImage _imagePointer;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Tween _tweenGaze;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Tween _tweenCoachMark;

		[Token(Token = "0x17000318")]
		[CanBeNull]
		public UIImage Gaze
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xB33258", Offset = "0xB33258", VA = "0xB33258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		[CanBeNull]
		public UILabel LabelCoachMark
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xB33260", Offset = "0xB33260", VA = "0xB33260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xB33268", Offset = "0xB33268", VA = "0xB33268", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xB33334", Offset = "0xB33334", VA = "0xB33334")]
		public void StartGaze(float seconds, Action completionCallback)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xB33560", Offset = "0xB33560", VA = "0xB33560")]
		public void StopGaze()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xB33614", Offset = "0xB33614", VA = "0xB33614")]
		public void ShowCoachMark(float fadeDuration)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xB336DC", Offset = "0xB336DC", VA = "0xB336DC")]
		public void HideCoachMark(float fadeDuration)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xB337D0", Offset = "0xB337D0", VA = "0xB337D0")]
		public Reticle()
		{
		}
	}
}
namespace ATiStudios.VR.InputSystem.Raycaster
{
	[Token(Token = "0x2000215")]
	public class VRGraphicRaycaster : GraphicRaycaster
	{
		[Token(Token = "0x20003BF")]
		private struct RaycastHit
		{
			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic graphic;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 worldPos;
		}

		[Serializable]
		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F54", Offset = "0x9E2F54")]
		private sealed class <>c
		{
			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__12_0;

			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0xB32A94", Offset = "0xB32A94", VA = "0xB32A94")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xB32A9C", Offset = "0xB32A9C", VA = "0xB32A9C")]
			internal int <GraphicRaycast>b__12_0(RaycastHit g1, RaycastHit g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas _canvas;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<RaycastHit> _raycastResults;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<RaycastHit> _sortedGraphics;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] _cornerVector;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.RaycastHit[] _raycastHits;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RaycastHit2D[] _raycastHits2D;

		[Token(Token = "0x1700031A")]
		public Canvas Canvas
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xB31420", Offset = "0xB31420", VA = "0xB31420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xB314B8", Offset = "0xB314B8", VA = "0xB314B8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xB3158C", Offset = "0xB3158C", VA = "0xB3158C", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xB3179C", Offset = "0xB3179C", VA = "0xB3179C")]
		private void Raycast(VRPointerEventData eventData, ICollection<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xB31EE4", Offset = "0xB31EE4", VA = "0xB31EE4")]
		private void GraphicRaycast(Canvas canvas, Ray ray, ICollection<RaycastHit> results)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xB323D8", Offset = "0xB323D8", VA = "0xB323D8")]
		private bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xB32938", Offset = "0xB32938", VA = "0xB32938")]
		public VRGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public sealed class VRPhysicsRaycaster : BaseRaycaster
	{
		[Serializable]
		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F64", Offset = "0x9E2F64")]
		private sealed class <>c
		{
			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__9_0;

			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xB3320C", Offset = "0xB3320C", VA = "0xB3320C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0xB33214", Offset = "0xB33214", VA = "0xB33214")]
			internal int <Raycast>b__9_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000CF8")]
		private const int NO_EVENT_MASK_SET = -1;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask _eventMask;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _eventCamera;

		[Token(Token = "0x1700031B")]
		public int FinalEventMask
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xB32B10", Offset = "0xB32B10", VA = "0xB32B10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031C")]
		public override Camera eventCamera
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xB32BEC", Offset = "0xB32BEC", VA = "0xB32BEC", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xB32BF4", Offset = "0xB32BF4", VA = "0xB32BF4")]
		protected VRPhysicsRaycaster()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xB32C28", Offset = "0xB32C28", VA = "0xB32C28", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xB32C58", Offset = "0xB32C58", VA = "0xB32C58", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
}
namespace ATiStudios.VR.InputSystem.InputModule
{
	[Token(Token = "0x2000217")]
	public class VRInputModule : BaseInputModule
	{
		[Token(Token = "0x20003C2")]
		public enum SwipeDirection
		{
			[Token(Token = "0x40014B3")]
			Up = 1,
			[Token(Token = "0x40014B4")]
			Down,
			[Token(Token = "0x40014B5")]
			Left,
			[Token(Token = "0x40014B6")]
			Right,
			[Token(Token = "0x40014B7")]
			None
		}

		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F74", Offset = "0x9E2F74")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PointerEventData eventData;

			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xB310AC", Offset = "0xB310AC", VA = "0xB310AC")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xB310B4", Offset = "0xB310B4", VA = "0xB310B4")]
			internal void <ProcessSwipe>b__0(ISwipeableVertical handler, BaseEventData data)
			{
			}

			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xB31178", Offset = "0xB31178", VA = "0xB31178")]
			internal void <ProcessSwipe>b__1(ISwipeableVertical handler, BaseEventData data)
			{
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xB31240", Offset = "0xB31240", VA = "0xB31240")]
			internal void <ProcessSwipe>b__2(ISwipeableHorizontal handler, BaseEventData data)
			{
			}

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xB31304", Offset = "0xB31304", VA = "0xB31304")]
			internal void <ProcessSwipe>b__3(ISwipeableHorizontal handler, BaseEventData data)
			{
			}
		}

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Lazy<VRInputModule> s_lazyInstance;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7A1C", Offset = "0x9E7A1C")]
		[HideInInspector]
		public bool InteractOnlyWithPopups;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7A68", Offset = "0x9E7A68")]
		private VRPlayer <Player>k__BackingField;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<AbstractController, VRPointerEventData> _pointerEventDataMap;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<AbstractVrController> _activeControllers;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AbstractController _controller;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AbstractVrController _lastActiveController;

		[Token(Token = "0x1700031D")]
		public static VRInputModule Instance
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xB4ED04", Offset = "0xB4ED04", VA = "0xB4ED04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public VRPlayer Player
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xB4F1EC", Offset = "0xB4F1EC", VA = "0xB4F1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED4E8", Offset = "0x9ED4E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0xB641A4", Offset = "0xB641A4", VA = "0xB641A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED4F8", Offset = "0x9ED4F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public ReadOnlyCollection<AbstractVrController> ActiveControllers
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xB641AC", Offset = "0xB641AC", VA = "0xB641AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		public AbstractVrController LastActiveController
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0xB6420C", Offset = "0xB6420C", VA = "0xB6420C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action OnSystemBackButtonClick
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xB63874", Offset = "0xB63874", VA = "0xB63874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED408", Offset = "0x9ED408")]
			add
			{
			}
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xB6391C", Offset = "0xB6391C", VA = "0xB6391C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED418", Offset = "0x9ED418")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action OnBackButtonPressed
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xB639C4", Offset = "0xB639C4", VA = "0xB639C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED428", Offset = "0x9ED428")]
			add
			{
			}
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0xB63A6C", Offset = "0xB63A6C", VA = "0xB63A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED438", Offset = "0x9ED438")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action OnHoldWillStart
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xB63B14", Offset = "0xB63B14", VA = "0xB63B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED448", Offset = "0x9ED448")]
			add
			{
			}
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xB63BBC", Offset = "0xB63BBC", VA = "0xB63BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED458", Offset = "0x9ED458")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action OnHoldStarted
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xB63C64", Offset = "0xB63C64", VA = "0xB63C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED468", Offset = "0x9ED468")]
			add
			{
			}
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xB63D0C", Offset = "0xB63D0C", VA = "0xB63D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED478", Offset = "0x9ED478")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action OnHoldEnded
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0xB63DB4", Offset = "0xB63DB4", VA = "0xB63DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED488", Offset = "0x9ED488")]
			add
			{
			}
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0xB63E5C", Offset = "0xB63E5C", VA = "0xB63E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED498", Offset = "0x9ED498")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action OnHoldCanceled
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0xB63F04", Offset = "0xB63F04", VA = "0xB63F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED4A8", Offset = "0x9ED4A8")]
			add
			{
			}
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0xB63FAC", Offset = "0xB63FAC", VA = "0xB63FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED4B8", Offset = "0x9ED4B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<SwipeDirection> OnSwipe
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xB64054", Offset = "0xB64054", VA = "0xB64054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED4C8", Offset = "0x9ED4C8")]
			add
			{
			}
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xB640FC", Offset = "0xB640FC", VA = "0xB640FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED4D8", Offset = "0x9ED4D8")]
			remove
			{
			}
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xB64214", Offset = "0xB64214", VA = "0xB64214", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xB64294", Offset = "0xB64294", VA = "0xB64294", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xB64350", Offset = "0xB64350", VA = "0xB64350", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xB64644", Offset = "0xB64644", VA = "0xB64644", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xB657CC", Offset = "0xB657CC", VA = "0xB657CC")]
		public AbstractController GetControllerFor(VRPointerEventData eventData)
		{
			return null;
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xB65960", Offset = "0xB65960", VA = "0xB65960")]
		private void HandleControllerConnected(AbstractVrController controller)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xB65A5C", Offset = "0xB65A5C", VA = "0xB65A5C")]
		private void HandleControllerDisconnected(AbstractVrController controller)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xB65CB0", Offset = "0xB65CB0", VA = "0xB65CB0")]
		private void ExecuteHoldWillStartEvent(AbstractController controller)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xB65D60", Offset = "0xB65D60", VA = "0xB65D60")]
		private void ExecuteHoldStartedEvent(AbstractController controller)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xB65E0C", Offset = "0xB65E0C", VA = "0xB65E0C")]
		private void ExecuteHoldEndedEvent(AbstractController controller)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xB65E20", Offset = "0xB65E20", VA = "0xB65E20")]
		private void ExecuteHoldCanceledEvent(AbstractController controller)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xB644B0", Offset = "0xB644B0", VA = "0xB644B0")]
		private void SetupHoldEvents(AbstractVrController controller)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xB65B50", Offset = "0xB65B50", VA = "0xB65B50")]
		private void RemoveHoldEvents(AbstractVrController controller)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xB64CFC", Offset = "0xB64CFC", VA = "0xB64CFC")]
		private void CustomProcess(AbstractController controller)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xB65E34", Offset = "0xB65E34", VA = "0xB65E34")]
		private VRPointerEventData GetMousePointerEventData(AbstractController controller)
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xB660B0", Offset = "0xB660B0", VA = "0xB660B0")]
		private void ProcessPress(VRPointerEventData data, AbstractController controller)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xB64EC8", Offset = "0xB64EC8", VA = "0xB64EC8")]
		private void ProcessSwipe(AbstractVrController controller)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xB66A8C", Offset = "0xB66A8C", VA = "0xB66A8C")]
		private void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xB65390", Offset = "0xB65390", VA = "0xB65390")]
		private void UpdateReticle(AbstractVrController controller)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xB66BAC", Offset = "0xB66BAC", VA = "0xB66BAC")]
		public VRInputModule()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class VRPointerEventData : PointerEventData
	{
		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7A78", Offset = "0x9E7A78")]
		private Ray <RaycastRay>k__BackingField;

		[Token(Token = "0x17000321")]
		public Ray RaycastRay
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xB313CC", Offset = "0xB313CC", VA = "0xB313CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED508", Offset = "0x9ED508")]
			get
			{
				return default(Ray);
			}
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xB313E0", Offset = "0xB313E0", VA = "0xB313E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED518", Offset = "0x9ED518")]
			internal set
			{
			}
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xB313F4", Offset = "0xB313F4", VA = "0xB313F4")]
		public VRPointerEventData(EventSystem eventSystem)
		{
		}
	}
}
namespace ATiStudios.VR.InputSystem.Controller
{
	[Token(Token = "0x2000219")]
	public abstract class AbstractVrController : AbstractController
	{
		[Token(Token = "0x4000D0A")]
		protected const string LOG_CONTROLLER_NAME = "Controller";

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Reticle _reticle;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public int DefaultSortingOrder;

		[Token(Token = "0x17000322")]
		public Reticle Reticle
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0xB4F1F4", Offset = "0xB4F1F4", VA = "0xB4F1F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		public abstract bool IsConnected
		{
			[Token(Token = "0x60011F5")]
			get;
		}

		[Token(Token = "0x17000324")]
		public override Vector3 PositionPointing
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xB60CBC", Offset = "0xB60CBC", VA = "0xB60CBC", Slot = "37")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000325")]
		public float DefaultDistance
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xB60CEC", Offset = "0xB60CEC", VA = "0xB60CEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xB60D18", Offset = "0xB60D18", VA = "0xB60D18")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public abstract bool IsSwipeUp
		{
			[Token(Token = "0x60011F9")]
			get;
		}

		[Token(Token = "0x17000327")]
		public abstract bool IsSwipeDown
		{
			[Token(Token = "0x60011FA")]
			get;
		}

		[Token(Token = "0x17000328")]
		public abstract bool IsSwipeLeft
		{
			[Token(Token = "0x60011FB")]
			get;
		}

		[Token(Token = "0x17000329")]
		public abstract bool IsSwipeRight
		{
			[Token(Token = "0x60011FC")]
			get;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xB60D50", Offset = "0xB60D50", VA = "0xB60D50", Slot = "47")]
		public virtual void Show()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xB60DD8", Offset = "0xB60DD8", VA = "0xB60DD8", Slot = "48")]
		public virtual void Hide()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xB60E60", Offset = "0xB60E60", VA = "0xB60E60", Slot = "49")]
		public virtual void ChangePointingVisualsSortingOrder(int sortingOrder)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xB60EB0", Offset = "0xB60EB0", VA = "0xB60EB0", Slot = "50")]
		public virtual void ChangePointingVisualsSortingOrderDefault()
		{
		}

		[Token(Token = "0x6001201")]
		public abstract void Recenter();

		[Token(Token = "0x6001202")]
		public abstract void UpdateVisualsForHit(Vector3 hitPosition, float distance, int sortingOrder);

		[Token(Token = "0x6001203")]
		public abstract void UpdateVisualsForDefault();

		[Token(Token = "0x6001204")]
		public abstract Vector3 CalculateOffsetForwardDirection();

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xB60F04", Offset = "0xB60F04", VA = "0xB60F04")]
		protected AbstractVrController()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public abstract class AbstractVrHandController : AbstractVrController
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected GameObject Model;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private LineRenderer _laser;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Camera _mainCamera;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 _initialLaserDistance;

		[Token(Token = "0x1700032A")]
		public LineRenderer Laser
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xB611BC", Offset = "0xB611BC", VA = "0xB611BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000023")]
		public event Action<AbstractVrHandController> OnControllerConnected
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xB60F14", Offset = "0xB60F14", VA = "0xB60F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED528", Offset = "0x9ED528")]
			add
			{
			}
			[Token(Token = "0x6001207")]
			[Address(RVA = "0xB60FBC", Offset = "0xB60FBC", VA = "0xB60FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED538", Offset = "0x9ED538")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<AbstractVrHandController> OnControllerDisconnected
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xB61064", Offset = "0xB61064", VA = "0xB61064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED548", Offset = "0x9ED548")]
			add
			{
			}
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xB61110", Offset = "0xB61110", VA = "0xB61110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED558", Offset = "0x9ED558")]
			remove
			{
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xB61250", Offset = "0xB61250", VA = "0xB61250", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xB61280", Offset = "0xB61280", VA = "0xB61280", Slot = "47")]
		public override void Show()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xB612BC", Offset = "0xB612BC", VA = "0xB612BC", Slot = "48")]
		public override void Hide()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xB612F8", Offset = "0xB612F8", VA = "0xB612F8", Slot = "52")]
		public override void UpdateVisualsForHit(Vector3 hitPosition, float distance, int sortingOrder)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xB61528", Offset = "0xB61528", VA = "0xB61528", Slot = "53")]
		public override void UpdateVisualsForDefault()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xB6168C", Offset = "0xB6168C", VA = "0xB6168C", Slot = "49")]
		public override void ChangePointingVisualsSortingOrder(int sortingOrder)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xB616D0", Offset = "0xB616D0", VA = "0xB616D0", Slot = "50")]
		public override void ChangePointingVisualsSortingOrderDefault()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xB61714", Offset = "0xB61714", VA = "0xB61714")]
		protected void ExecuteControllerConnected()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xB617E8", Offset = "0xB617E8", VA = "0xB617E8")]
		protected void ExecuteControllerDisconnected()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xB6188C", Offset = "0xB6188C", VA = "0xB6188C")]
		protected AbstractVrHandController()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public abstract class AbstractVrHeadController : AbstractVrController
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7AB8", Offset = "0x9E7AB8")]
		private readonly bool <IsConnected>k__BackingField;

		[Token(Token = "0x1700032B")]
		public override bool IsConnected
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xB6189C", Offset = "0xB6189C", VA = "0xB6189C", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED568", Offset = "0x9ED568")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032C")]
		public abstract string PlatformName
		{
			[Token(Token = "0x6001216")]
			get;
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xB618A4", Offset = "0xB618A4", VA = "0xB618A4", Slot = "52")]
		public override void UpdateVisualsForHit(Vector3 hitPosition, float distance, int sortingOrder)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xB619DC", Offset = "0xB619DC", VA = "0xB619DC", Slot = "53")]
		public override void UpdateVisualsForDefault()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xB61B34", Offset = "0xB61B34", VA = "0xB61B34")]
		protected AbstractVrHeadController()
		{
		}
	}
}
namespace ATiStudios.VR.InputSystem.Controller.Oculus.Standalone
{
	[Token(Token = "0x200021C")]
	public sealed class OculusQuestController : OculusTouchController
	{
		[StructLayout(3)]
		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F84", Offset = "0x9E2F84")]
		private struct <CheckIfModelIsInstantiated>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OculusQuestController <>4__this;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<GameObject> <>u__1;

			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xA8301C", Offset = "0xA8301C", VA = "0xA8301C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xA83024", Offset = "0xA83024", VA = "0xA83024", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private string _questControllerAddress;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private string _quest2ControllerAddress;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private string _modelToLoadAddress;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private AsyncOperationHandle<GameObject> _controllerLoadingAsyncOperation;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private AsyncOperationHandle<GameObject> _controllerInstantiatingAsyncOperation;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private OVRPlugin.SystemHeadset _headset;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Animator _animator;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool _isFirstTime;

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xB62890", Offset = "0xB62890", VA = "0xB62890", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xB62938", Offset = "0xB62938", VA = "0xB62938", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xB62A58", Offset = "0xB62A58", VA = "0xB62A58", Slot = "14")]
		protected override void UpdateComponent()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xB62990", Offset = "0xB62990", VA = "0xB62990")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED578", Offset = "0x9ED578")]
		private void CheckIfModelIsInstantiated()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xB62E24", Offset = "0xB62E24", VA = "0xB62E24")]
		public OculusQuestController()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class OculusTouchController : AbstractVrHandController
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public OVRInput.Controller ControllerType;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool _wasClickDown;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		private bool _isClickDownThisFrame;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		private bool _isClickUpThisFrame;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
		[SerializeField]
		private bool _simulateConnected;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool _isFirstTime;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		private bool _wasConnected;

		[Token(Token = "0x1700032D")]
		public override bool IsClickDown
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0xB63234", Offset = "0xB63234", VA = "0xB63234", Slot = "38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032E")]
		public override bool IsClickUp
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0xB632BC", Offset = "0xB632BC", VA = "0xB632BC", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032F")]
		public override bool IsBackDown
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0xB63344", Offset = "0xB63344", VA = "0xB63344", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000330")]
		public override bool IsBackUp
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0xB633B4", Offset = "0xB633B4", VA = "0xB633B4", Slot = "41")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000331")]
		public override bool IsConnected
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0xB63424", Offset = "0xB63424", VA = "0xB63424", Slot = "42")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000332")]
		public override bool IsSwipeUp
		{
			[Token(Token = "0x6001224")]
			[Address(RVA = "0xB63490", Offset = "0xB63490", VA = "0xB63490", Slot = "43")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000333")]
		public override bool IsSwipeDown
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0xB63500", Offset = "0xB63500", VA = "0xB63500", Slot = "44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000334")]
		public override bool IsSwipeLeft
		{
			[Token(Token = "0x6001226")]
			[Address(RVA = "0xB63570", Offset = "0xB63570", VA = "0xB63570", Slot = "45")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000335")]
		public override bool IsSwipeRight
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0xB635E0", Offset = "0xB635E0", VA = "0xB635E0", Slot = "46")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000336")]
		private GameObject _prefabModel
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xB63650", Offset = "0xB63650", VA = "0xB63650")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xB62968", Offset = "0xB62968", VA = "0xB62968", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xB62D5C", Offset = "0xB62D5C", VA = "0xB62D5C", Slot = "14")]
		protected override void UpdateComponent()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xB637A8", Offset = "0xB637A8", VA = "0xB637A8", Slot = "51")]
		public override void Recenter()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xB63840", Offset = "0xB63840", VA = "0xB63840", Slot = "54")]
		public override Vector3 CalculateOffsetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xB636A4", Offset = "0xB636A4", VA = "0xB636A4")]
		private void CheckControllerState()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xB62E3C", Offset = "0xB62E3C", VA = "0xB62E3C")]
		public OculusTouchController()
		{
		}
	}
}
namespace ATiStudios.VR.InputSystem.Controller.Android.Oculus
{
	[Token(Token = "0x200021E")]
	public sealed class OculusHandController : AbstractVrHandController
	{
		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public OVRInput.Controller ControllerType;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private bool _simulateConnected;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		private bool _isFirstTime;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		private bool _wasConnected;

		[Token(Token = "0x17000337")]
		public override bool IsClickDown
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0xB61B48", Offset = "0xB61B48", VA = "0xB61B48", Slot = "38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000338")]
		public override bool IsClickUp
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xB61BEC", Offset = "0xB61BEC", VA = "0xB61BEC", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000339")]
		public override bool IsBackDown
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0xB61C90", Offset = "0xB61C90", VA = "0xB61C90", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033A")]
		public override bool IsBackUp
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0xB61CF8", Offset = "0xB61CF8", VA = "0xB61CF8", Slot = "41")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033B")]
		public override bool IsConnected
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0xB61D60", Offset = "0xB61D60", VA = "0xB61D60", Slot = "42")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033C")]
		public override bool IsSwipeUp
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0xB61DCC", Offset = "0xB61DCC", VA = "0xB61DCC", Slot = "43")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033D")]
		public override bool IsSwipeDown
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xB61E34", Offset = "0xB61E34", VA = "0xB61E34", Slot = "44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033E")]
		public override bool IsSwipeLeft
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xB61E9C", Offset = "0xB61E9C", VA = "0xB61E9C", Slot = "45")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033F")]
		public override bool IsSwipeRight
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xB61F04", Offset = "0xB61F04", VA = "0xB61F04", Slot = "46")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000340")]
		private bool _isOculusGo
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xB61F6C", Offset = "0xB61F6C", VA = "0xB61F6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		private GameObject _prefabGearVrModel
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xB61FE0", Offset = "0xB61FE0", VA = "0xB61FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private GameObject _prefabOculusGoModel
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xB62034", Offset = "0xB62034", VA = "0xB62034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		private GameObject _prefabModel
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xB62088", Offset = "0xB62088", VA = "0xB62088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xB620A8", Offset = "0xB620A8", VA = "0xB620A8", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xB621D4", Offset = "0xB621D4", VA = "0xB621D4", Slot = "14")]
		protected override void UpdateComponent()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xB621FC", Offset = "0xB621FC", VA = "0xB621FC", Slot = "51")]
		public override void Recenter()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xB62294", Offset = "0xB62294", VA = "0xB62294", Slot = "54")]
		public override Vector3 CalculateOffsetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xB620D0", Offset = "0xB620D0", VA = "0xB620D0")]
		private void CheckControllerState()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xB622C8", Offset = "0xB622C8", VA = "0xB622C8")]
		public OculusHandController()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public sealed class OculusHeadController : AbstractVrHeadController
	{
		[Token(Token = "0x17000344")]
		public override bool IsClickDown
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xB622DC", Offset = "0xB622DC", VA = "0xB622DC", Slot = "38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000345")]
		public override bool IsClickUp
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xB62344", Offset = "0xB62344", VA = "0xB62344", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000346")]
		public override bool IsBackDown
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xB623AC", Offset = "0xB623AC", VA = "0xB623AC", Slot = "40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000347")]
		public override bool IsBackUp
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xB62414", Offset = "0xB62414", VA = "0xB62414", Slot = "41")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000348")]
		public override bool IsSwipeUp
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xB624B0", Offset = "0xB624B0", VA = "0xB624B0", Slot = "43")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000349")]
		public override bool IsSwipeDown
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xB62518", Offset = "0xB62518", VA = "0xB62518", Slot = "44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034A")]
		public override bool IsSwipeLeft
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xB62580", Offset = "0xB62580", VA = "0xB62580", Slot = "45")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034B")]
		public override bool IsSwipeRight
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xB625E8", Offset = "0xB625E8", VA = "0xB625E8", Slot = "46")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034C")]
		public override string PlatformName
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xB62650", Offset = "0xB62650", VA = "0xB62650", Slot = "55")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xB6247C", Offset = "0xB6247C", VA = "0xB6247C", Slot = "54")]
		public override Vector3 CalculateOffsetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xB627E4", Offset = "0xB627E4", VA = "0xB627E4", Slot = "51")]
		public override void Recenter()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xB6287C", Offset = "0xB6287C", VA = "0xB6287C")]
		public OculusHeadController()
		{
		}
	}
}
namespace ATiStudios.VR.Characters
{
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1FEC", Offset = "0x9E1FEC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E1FEC", Offset = "0x9E1FEC")]
	public abstract class VRCharacter : SceneObject, IVRInteractable
	{
		[Token(Token = "0x4000D27")]
		private const float SECONDS_WAIT_UNTIL_START_RANDOM_IDLE_ANIMATIONS = 8f;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7B08", Offset = "0x9E7B08")]
		protected PhoneticButton _togglePhonetic;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7B54", Offset = "0x9E7B54")]
		private float _gazeDuration;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7BA0", Offset = "0x9E7BA0")]
		private bool _isGazable;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private EAudioSource _eAudioSource;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7BEC", Offset = "0x9E7BEC")]
		private AudioPlayer <AudioPlayer>k__BackingField;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7BFC", Offset = "0x9E7BFC")]
		private MondlyCharacterAnimator <CharacterAnimator>k__BackingField;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7C0C", Offset = "0x9E7C0C")]
		protected UserFeedbackPanel _userFeedbackPanel;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private AbstractLesson _lesson;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C58", Offset = "0x9E7C58")]
		private bool <IsRecordingForbidden>k__BackingField;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C68", Offset = "0x9E7C68")]
		private bool <IsIdle>k__BackingField;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[CanBeNull]
		private ATiStudios.Foundation.TimingHandler _timingHandlerEnterIdle;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected bool _isSkipped;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected OutputData _lastOutputData;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected internal bool HasStartedTutorial;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C88", Offset = "0x9E7C88")]
		private LookAtIK <_lookAtIk>k__BackingField;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected MondlyVRApp.Difficulty _difficulty;

		[Token(Token = "0x1700034D")]
		public float GazeDuration
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xB593E0", Offset = "0xB593E0", VA = "0xB593E0", Slot = "43")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xB593E8", Offset = "0xB593E8", VA = "0xB593E8", Slot = "44")]
			set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public bool IsGazable
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xB593F0", Offset = "0xB593F0", VA = "0xB593F0", Slot = "45")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xB593F8", Offset = "0xB593F8", VA = "0xB593F8", Slot = "46")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public override bool IsInteractable
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xB59404", Offset = "0xB59404", VA = "0xB59404", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0xB5940C", Offset = "0xB5940C", VA = "0xB5940C", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public AudioPlayer AudioPlayer
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xB594B0", Offset = "0xB594B0", VA = "0xB594B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED5DC", Offset = "0x9ED5DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xB594B8", Offset = "0xB594B8", VA = "0xB594B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED5EC", Offset = "0x9ED5EC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public MondlyCharacterAnimator CharacterAnimator
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xB594A8", Offset = "0xB594A8", VA = "0xB594A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED5FC", Offset = "0x9ED5FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xB594C0", Offset = "0xB594C0", VA = "0xB594C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED60C", Offset = "0x9ED60C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public UserFeedbackPanel UserFeedbackPanel
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xB594C8", Offset = "0xB594C8", VA = "0xB594C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000353")]
		public virtual AbstractLesson Lesson
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xB594D0", Offset = "0xB594D0", VA = "0xB594D0", Slot = "47")]
			get
			{
				return null;
			}
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xB594D8", Offset = "0xB594D8", VA = "0xB594D8", Slot = "48")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public bool IsRecordingForbidden
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xB594E0", Offset = "0xB594E0", VA = "0xB594E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED61C", Offset = "0x9ED61C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125C")]
			[Address(RVA = "0xB594E8", Offset = "0xB594E8", VA = "0xB594E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED62C", Offset = "0x9ED62C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public bool IsIdle
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xB594F4", Offset = "0xB594F4", VA = "0xB594F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED63C", Offset = "0x9ED63C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125E")]
			[Address(RVA = "0xB594FC", Offset = "0xB594FC", VA = "0xB594FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED64C", Offset = "0x9ED64C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000356")]
		protected LookAtIK _lookAtIk
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xB59508", Offset = "0xB59508", VA = "0xB59508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED65C", Offset = "0x9ED65C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xB59510", Offset = "0xB59510", VA = "0xB59510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED66C", Offset = "0x9ED66C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xB59518", Offset = "0xB59518", VA = "0xB59518", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xB59780", Offset = "0xB59780", VA = "0xB59780", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xB597EC", Offset = "0xB597EC", VA = "0xB597EC", Slot = "49")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xB59964", Offset = "0xB59964", VA = "0xB59964", Slot = "50")]
		public virtual void Resume()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xB59BB4", Offset = "0xB59BB4", VA = "0xB59BB4")]
		public void UpdateVolume(float volume)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xB59BF4", Offset = "0xB59BF4", VA = "0xB59BF4")]
		public void ShowUserInput(string recognizedText)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xB59C2C", Offset = "0xB59C2C", VA = "0xB59C2C")]
		public void HandleSpeechRecognizerListeningEnded()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xB59C68", Offset = "0xB59C68", VA = "0xB59C68")]
		public void PlayAnimation(string animationName)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xB59D10", Offset = "0xB59D10", VA = "0xB59D10")]
		public void PlayHeadNodAnimation()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xB59D60", Offset = "0xB59D60", VA = "0xB59D60")]
		public void StartDeleyedIdleEnter()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xB59494", Offset = "0xB59494", VA = "0xB59494")]
		public void StopDelayedIdleEnter()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xB59DF4", Offset = "0xB59DF4", VA = "0xB59DF4", Slot = "51")]
		protected virtual void Skip()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xB59E34", Offset = "0xB59E34", VA = "0xB59E34")]
		private void HandleOnAudioPlayerDidStartPlaying(Dictionary<string, object> additionalFlags)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xB59ECC", Offset = "0xB59ECC", VA = "0xB59ECC")]
		private void HandleOnAudioPlayerDidEndPlaying(Dictionary<string, object> additionalFlags)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xB59F9C", Offset = "0xB59F9C", VA = "0xB59F9C")]
		protected VRCharacter()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xB59FAC", Offset = "0xB59FAC", VA = "0xB59FAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED67C", Offset = "0x9ED67C")]
		private void <AwakeComponent>b__46_0(IInteractable button)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xB5A01C", Offset = "0xB5A01C", VA = "0xB5A01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED68C", Offset = "0x9ED68C")]
		private void <StartDeleyedIdleEnter>b__55_0()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class VRFemale : VRCharacter, IStorylineActor, ICoachMarkTrigger
	{
		[StructLayout(3)]
		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2F94", Offset = "0x9E2F94")]
		private struct <AwakeComponent>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRFemale <>4__this;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0xA82FCC", Offset = "0xA82FCC", VA = "0xA82FCC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xA82FD4", Offset = "0xA82FD4", VA = "0xA82FD4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2FA4", Offset = "0x9E2FA4")]
		private sealed class <>c__DisplayClass41_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200048E")]
			private struct <<ShowSuggestions>b__2>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001758")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001759")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400175A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass41_0 <>4__this;

				[Token(Token = "0x400175B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private object <>u__1;

				[Token(Token = "0x6001DE4")]
				[Address(RVA = "0xA82F90", Offset = "0xA82F90", VA = "0xA82F90", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DE5")]
				[Address(RVA = "0xA82F98", Offset = "0xA82F98", VA = "0xA82F98", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRFemale <>4__this;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> <>9__3;

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xB5D024", Offset = "0xB5D024", VA = "0xB5D024")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xB5D02C", Offset = "0xB5D02C", VA = "0xB5D02C")]
			internal bool <ShowSuggestions>b__1()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xB5D058", Offset = "0xB5D058", VA = "0xB5D058")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2C68", Offset = "0x9F2C68")]
			internal void <ShowSuggestions>b__2()
			{
			}

			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xB5D120", Offset = "0xB5D120", VA = "0xB5D120")]
			internal bool <ShowSuggestions>b__3()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2FB4", Offset = "0x9E2FB4")]
		private sealed class <>c
		{
			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, Guid> <>9__41_0;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__52_0;

			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xB5CF64", Offset = "0xB5CF64", VA = "0xB5CF64")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xB5CF6C", Offset = "0xB5CF6C", VA = "0xB5CF6C")]
			internal Guid <ShowSuggestions>b__41_0(int x)
			{
				return default(Guid);
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xB5CFCC", Offset = "0xB5CFCC", VA = "0xB5CFCC")]
			internal void <HandleAudioPlayerDownloadTimeout>b__52_0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2FC4", Offset = "0x9E2FC4")]
		private struct <ShowSuggestions>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRFemale <>4__this;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action completionCallback;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass41_0 <>8__1;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<OutputData> <suggestionOutputDatas>5__2;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private object <>u__1;

			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xA82FE0", Offset = "0xA82FE0", VA = "0xA82FE0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0xA82FE8", Offset = "0xA82FE8", VA = "0xA82FE8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2FD4", Offset = "0x9E2FD4")]
		private sealed class <>c__DisplayClass48_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200048F")]
			private struct <<ShowChatbotResult>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x400175C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400175D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400175E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass48_0 <>4__this;

				[Token(Token = "0x400175F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private object <>u__1;

				[Token(Token = "0x6001DE6")]
				[Address(RVA = "0xA82FA4", Offset = "0xA82FA4", VA = "0xA82FA4", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DE7")]
				[Address(RVA = "0xA82FAC", Offset = "0xA82FAC", VA = "0xA82FAC", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRFemale <>4__this;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OutputData outputData;

			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> <>9__4;

			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<bool> <>9__5;

			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0xB5BBA0", Offset = "0xB5BBA0", VA = "0xB5BBA0")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0xB5D520", Offset = "0xB5D520", VA = "0xB5D520")]
			internal void <ShowChatbotResult>b__0()
			{
			}

			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0xB5D578", Offset = "0xB5D578", VA = "0xB5D578")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2CDC", Offset = "0x9F2CDC")]
			internal void <ShowChatbotResult>b__1()
			{
			}

			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xB5D640", Offset = "0xB5D640", VA = "0xB5D640")]
			internal bool <ShowChatbotResult>b__4()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xB5D678", Offset = "0xB5D678", VA = "0xB5D678")]
			internal bool <ShowChatbotResult>b__5()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xB5D6B0", Offset = "0xB5D6B0", VA = "0xB5D6B0")]
			internal void <ShowChatbotResult>b__3()
			{
			}
		}

		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2FE4", Offset = "0x9E2FE4")]
		private sealed class <>c__DisplayClass48_1
		{
			[StructLayout(3)]
			[Token(Token = "0x2000490")]
			private struct <<ShowChatbotResult>b__2>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001760")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001761")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001762")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass48_1 <>4__this;

				[Token(Token = "0x4001763")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private object <>u__1;

				[Token(Token = "0x6001DE8")]
				[Address(RVA = "0xA82FB8", Offset = "0xA82FB8", VA = "0xA82FB8", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DE9")]
				[Address(RVA = "0xA82FC0", Offset = "0xA82FC0", VA = "0xA82FC0", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool wasVisibleWhenAnimationStarted;

			[Token(Token = "0x40014D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass48_0 CS$<>8__locals1;

			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0xB5BBA8", Offset = "0xB5BBA8", VA = "0xB5BBA8")]
			public <>c__DisplayClass48_1()
			{
			}

			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xB5DA40", Offset = "0xB5DA40", VA = "0xB5DA40")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2D40", Offset = "0x9F2D40")]
			internal void <ShowChatbotResult>b__2()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E2FF4", Offset = "0x9E2FF4")]
		private struct <<StartComponent>b__35_2>d : IAsyncStateMachine
		{
			[Token(Token = "0x40014D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRFemale <>4__this;

			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xA82F7C", Offset = "0xA82F7C", VA = "0xA82F7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xA82F84", Offset = "0xA82F84", VA = "0xA82F84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7C98", Offset = "0x9E7C98")]
		private SuggestionsFeedbackPanel _suggestionsFeedbackPanel;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7CE4", Offset = "0x9E7CE4")]
		private ATiStudios.MondlyVR.UI.Panels.SubtitleFeedbackPanel _subtitleFeedbackPanel;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7D30", Offset = "0x9E7D30")]
		private int _botID;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private splineMove _splineMove;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private List<OutputData> _suggestionOutputDatas;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private List<List<int>> _displayedSuggestionsIDs;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool _isTutorialDone;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public VRCoachMarkView CoachMarkView;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[HideInInspector]
		public bool HasSetListenerForCurrentCharacter;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		[HideInInspector]
		public bool IsCharacterIdle;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
		private bool _showSuggestionsAfterAudioDownloadTimeout;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private Transform _playSubtitleAudioButtonTransform;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private VRGraphicRaycaster _panelsGraphicRaycaster;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private VRButton _playSubtitleAudioButtonHardDifficulty;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private VRRatingPointsManager _pointsManager;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private int _numberOfFallbacks;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private bool _showSuggestions;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		private bool _isMoveStarted;

		[Token(Token = "0x17000357")]
		public string Name
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xB5A054", Offset = "0xB5A054", VA = "0xB5A054", Slot = "52")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xB5A05C", Offset = "0xB5A05C", VA = "0xB5A05C", Slot = "53")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public SuggestionsFeedbackPanel SuggestionsFeedbackPanel
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xB5A064", Offset = "0xB5A064", VA = "0xB5A064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public ATiStudios.MondlyVR.UI.Panels.SubtitleFeedbackPanel SubtitleFeedbackPanel
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0xB5A06C", Offset = "0xB5A06C", VA = "0xB5A06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public UIButton TogglePhonetic
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0xB5A074", Offset = "0xB5A074", VA = "0xB5A074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public bool IsTutorialDone
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0xB5A1D4", Offset = "0xB5A1D4", VA = "0xB5A1D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127A")]
			[Address(RVA = "0xB5A1DC", Offset = "0xB5A1DC", VA = "0xB5A1DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public override AbstractLesson Lesson
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0xB5A1E8", Offset = "0xB5A1E8", VA = "0xB5A1E8", Slot = "47")]
			get
			{
				return null;
			}
			[Token(Token = "0x600127C")]
			[Address(RVA = "0xB5A1F0", Offset = "0xB5A1F0", VA = "0xB5A1F0", Slot = "48")]
			set
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<string> OnCoachMark
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0xB5A07C", Offset = "0xB5A07C", VA = "0xB5A07C", Slot = "54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED69C", Offset = "0x9ED69C")]
			add
			{
			}
			[Token(Token = "0x6001278")]
			[Address(RVA = "0xB5A128", Offset = "0xB5A128", VA = "0xB5A128", Slot = "55")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED6AC", Offset = "0x9ED6AC")]
			remove
			{
			}
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xB5A378", Offset = "0xB5A378", VA = "0xB5A378", Slot = "11")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED6BC", Offset = "0x9ED6BC")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xB5A440", Offset = "0xB5A440", VA = "0xB5A440", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xB5A994", Offset = "0xB5A994", VA = "0xB5A994")]
		public void LookAtCamera()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xB5AA80", Offset = "0xB5AA80", VA = "0xB5AA80", Slot = "50")]
		public override void Resume()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xB5AC14", Offset = "0xB5AC14", VA = "0xB5AC14", Slot = "49")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xB5AE08", Offset = "0xB5AE08", VA = "0xB5AE08")]
		public void EndLesson()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xB5AFB4", Offset = "0xB5AFB4", VA = "0xB5AFB4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED720", Offset = "0x9ED720")]
		public void ShowSuggestions(Action completionCallback)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xB5B07C", Offset = "0xB5B07C", VA = "0xB5B07C", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xB5B110", Offset = "0xB5B110", VA = "0xB5B110")]
		public void StartLesson()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xB5B2D4", Offset = "0xB5B2D4", VA = "0xB5B2D4")]
		public void StartMoving()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xB5B388", Offset = "0xB5B388", VA = "0xB5B388")]
		public void PauseMoving()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xB5B408", Offset = "0xB5B408", VA = "0xB5B408", Slot = "51")]
		protected override void Skip()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xB5B5CC", Offset = "0xB5B5CC", VA = "0xB5B5CC")]
		private void ShowChatbotResult(OutputData outputData, bool isFallback, bool isStart)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xB5BBB0", Offset = "0xB5BBB0", VA = "0xB5BBB0")]
		private void ShowPanels()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xB5AE5C", Offset = "0xB5AE5C", VA = "0xB5AE5C")]
		private void HidePanels()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xB5BC94", Offset = "0xB5BC94", VA = "0xB5BC94")]
		private void HidePanelsForIntermediateDifficulty()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xB5BDDC", Offset = "0xB5BDDC", VA = "0xB5BDDC")]
		private void HandleAudioPlayerDownloadTimeout()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xB5A640", Offset = "0xB5A640", VA = "0xB5A640")]
		private void SetupPhoneticButton()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xB5BF14", Offset = "0xB5BF14", VA = "0xB5BF14")]
		private void HandleChatBotLessonOnLessonReachedSuccess(AbstractLesson lesson, OutputData outputData)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xB5C1A0", Offset = "0xB5C1A0", VA = "0xB5C1A0")]
		private void HandleChatBotLessonOnLessonReachedRetry(AbstractLesson abstractLesson, OutputData outputData)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xB5C21C", Offset = "0xB5C21C", VA = "0xB5C21C")]
		public VRFemale()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xB5C22C", Offset = "0xB5C22C", VA = "0xB5C22C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED784", Offset = "0x9ED784")]
		private void <set_Lesson>b__27_0(AbstractLesson lesson)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xB5C230", Offset = "0xB5C230", VA = "0xB5C230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED794", Offset = "0x9ED794")]
		[DebuggerHidden]
		private void <>n__0()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xB5C234", Offset = "0xB5C234", VA = "0xB5C234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED7CC", Offset = "0x9ED7CC")]
		private void <StartComponent>b__35_0(Dictionary<string, object> additionalData)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xB5C308", Offset = "0xB5C308", VA = "0xB5C308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED7DC", Offset = "0x9ED7DC")]
		private void <StartComponent>b__35_1(Dictionary<string, object> additionalFlags)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xB5C6F8", Offset = "0xB5C6F8", VA = "0xB5C6F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED7EC", Offset = "0x9ED7EC")]
		private void <StartComponent>b__35_4()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xB5C704", Offset = "0xB5C704", VA = "0xB5C704")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED7FC", Offset = "0x9ED7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED7FC", Offset = "0x9ED7FC")]
		private void <StartComponent>b__35_2(IInteractable button)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xB5C7CC", Offset = "0xB5C7CC", VA = "0xB5C7CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED870", Offset = "0x9ED870")]
		private void <StartComponent>b__35_3()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xB5C828", Offset = "0xB5C828", VA = "0xB5C828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED880", Offset = "0x9ED880")]
		private float <LookAtCamera>b__36_0()
		{
			return default(float);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xB5C864", Offset = "0xB5C864", VA = "0xB5C864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED890", Offset = "0x9ED890")]
		private void <LookAtCamera>b__36_1(float value)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xB5C8AC", Offset = "0xB5C8AC", VA = "0xB5C8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED8A0", Offset = "0x9ED8A0")]
		private void <StartMoving>g__TimingHandlerAction|45_0()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xB5C928", Offset = "0xB5C928", VA = "0xB5C928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED8B0", Offset = "0x9ED8B0")]
		private void <HidePanels>b__50_0()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xB5C95C", Offset = "0xB5C95C", VA = "0xB5C95C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED8C0", Offset = "0x9ED8C0")]
		private void <SetupPhoneticButton>b__53_0(IInteractable button)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xB5C9D0", Offset = "0xB5C9D0", VA = "0xB5C9D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED8D0", Offset = "0x9ED8D0")]
		private void <SetupPhoneticButton>b__53_1(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class VRTeacher : VRCharacter
	{
		[StructLayout(3)]
		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3004", Offset = "0x9E3004")]
		private struct <HandleOnButtonReplayAudioClick>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTeacher <>4__this;

			[Token(Token = "0x40014DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xA83008", Offset = "0xA83008", VA = "0xA83008", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xA83010", Offset = "0xA83010", VA = "0xA83010", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3014", Offset = "0x9E3014")]
		private struct <HandleLearningLessonOnLessonRequestAudio>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QuizComponentType componentType;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTeacher <>4__this;

			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public OutputData component;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xA82FF4", Offset = "0xA82FF4", VA = "0xA82FF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xA82FFC", Offset = "0xA82FFC", VA = "0xA82FFC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E7DCC", Offset = "0x9E7DCC")]
		private TeacherActionView _teacherActionView;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private VRRatingPointsManager _ratingPointsManager;

		[Token(Token = "0x1700035D")]
		public TeacherActionView TeacherActionView
		{
			[Token(Token = "0x600129F")]
			[Address(RVA = "0xB5F534", Offset = "0xB5F534", VA = "0xB5F534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		public override AbstractLesson Lesson
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0xB5F53C", Offset = "0xB5F53C", VA = "0xB5F53C", Slot = "47")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0xB5F544", Offset = "0xB5F544", VA = "0xB5F544", Slot = "48")]
			set
			{
			}
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xB5F6CC", Offset = "0xB5F6CC", VA = "0xB5F6CC", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xB5F8A8", Offset = "0xB5F8A8", VA = "0xB5F8A8", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xB5F98C", Offset = "0xB5F98C", VA = "0xB5F98C", Slot = "50")]
		public override void Resume()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xB5FAFC", Offset = "0xB5FAFC", VA = "0xB5FAFC", Slot = "49")]
		public override void Pause()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xB5FBEC", Offset = "0xB5FBEC", VA = "0xB5FBEC", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xB5FCB4", Offset = "0xB5FCB4", VA = "0xB5FCB4", Slot = "51")]
		protected override void Skip()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xB5FD38", Offset = "0xB5FD38", VA = "0xB5FD38")]
		private void HandleOnButtonHintClick()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xB5FE80", Offset = "0xB5FE80", VA = "0xB5FE80")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED8E0", Offset = "0x9ED8E0")]
		private void HandleOnButtonReplayAudioClick()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xB5FF48", Offset = "0xB5FF48", VA = "0xB5FF48")]
		private void HandleOnAudioPlayerDidStartPlayingOutputData(OutputDataComponent component, Dictionary<string, object> additionalFlags)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xB5FF7C", Offset = "0xB5FF7C", VA = "0xB5FF7C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED944", Offset = "0x9ED944")]
		private void HandleLearningLessonOnLessonRequestAudio(AbstractLesson lesson, OutputData component, QuizComponentType componentType)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xB60048", Offset = "0xB60048", VA = "0xB60048")]
		private void HandleOnLessonReachedSuccess(AbstractLesson lesson, OutputData outputData)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xB601F8", Offset = "0xB601F8", VA = "0xB601F8")]
		private void HandleOnLessonReachedRetry(AbstractLesson lesson, OutputData outputData)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xB60348", Offset = "0xB60348", VA = "0xB60348")]
		private void HandleOnAudioDownloadTimeout()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xB603E4", Offset = "0xB603E4", VA = "0xB603E4")]
		public VRTeacher()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xB603F4", Offset = "0xB603F4", VA = "0xB603F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED9A8", Offset = "0x9ED9A8")]
		private void <AwakeComponent>b__7_0()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xB6049C", Offset = "0xB6049C", VA = "0xB6049C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9ED9B8", Offset = "0x9ED9B8")]
		private void <StartComponent>b__8_0(IInteractable button)
		{
		}
	}
}
namespace ATiStudios.VR.Popups
{
	[Token(Token = "0x2000223")]
	public class MultiplayerConnectionLostPopup : VRPopup
	{
		[StructLayout(3)]
		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3024", Offset = "0x9E3024")]
		private struct <StartCountdown>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MultiplayerConnectionLostPopup <>4__this;

			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xA82D88", Offset = "0xA82D88", VA = "0xA82D88", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xA82D90", Offset = "0xA82D90", VA = "0xA82D90", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D4D")]
		protected const string EDITOR_MENUBUTTON_GROUP_NAME = "Multiplayer connection lost popup";

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UILabel _countDownField;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private int _countDownSeconds;

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xB396B4", Offset = "0xB396B4", VA = "0xB396B4", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xB398B0", Offset = "0xB398B0", VA = "0xB398B0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9ED9C8", Offset = "0x9ED9C8")]
		private void StartCountdown()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xB39978", Offset = "0xB39978", VA = "0xB39978")]
		public MultiplayerConnectionLostPopup()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class QuitPopup : VRPopup
	{
		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3034", Offset = "0x9E3034")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RecalibrationPopup recalibrationPopup;

			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action <>9__3;

			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0xB3A22C", Offset = "0xB3A22C", VA = "0xB3A22C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xB3A2A0", Offset = "0xB3A2A0", VA = "0xB3A2A0")]
			internal void <AwakeComponent>b__2()
			{
			}

			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xB3A348", Offset = "0xB3A348", VA = "0xB3A348")]
			internal void <AwakeComponent>b__3()
			{
			}
		}

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UIButton UIButtonHome;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public UIButton UIButtonRedo;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public UIButton UIButtonRecalibrate;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public UIButton UIButtonClose;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public UIButton UIButtonTutorial;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public UILabel RedoTutorialButtonUiLabel;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private RectTransform _environmentTogglePosition;

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xB39DEC", Offset = "0xB39DEC", VA = "0xB39DEC", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xB3A130", Offset = "0xB3A130", VA = "0xB3A130")]
		public QuitPopup()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xB3A138", Offset = "0xB3A138", VA = "0xB3A138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDA2C", Offset = "0x9EDA2C")]
		private void <AwakeComponent>b__7_0(IInteractable button)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xB3A14C", Offset = "0xB3A14C", VA = "0xB3A14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDA3C", Offset = "0x9EDA3C")]
		private void <AwakeComponent>b__7_1(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class RecalibratePopup : VRPopup
	{
		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3044", Offset = "0x9E3044")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RecalibrationPopup recalibrationPopup;

			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action <>9__3;

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xB3A664", Offset = "0xB3A664", VA = "0xB3A664")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0xB3A66C", Offset = "0xB3A66C", VA = "0xB3A66C")]
			internal void <AwakeComponent>b__2()
			{
			}

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xB3A714", Offset = "0xB3A714", VA = "0xB3A714")]
			internal void <AwakeComponent>b__3()
			{
			}
		}

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UIButton UIButtonRecalibrate;

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xB3A400", Offset = "0xB3A400", VA = "0xB3A400", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xB3A538", Offset = "0xB3A538", VA = "0xB3A538")]
		public RecalibratePopup()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xB3A540", Offset = "0xB3A540", VA = "0xB3A540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDA4C", Offset = "0x9EDA4C")]
		private void <AwakeComponent>b__1_0(IInteractable button)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xB3A584", Offset = "0xB3A584", VA = "0xB3A584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDA5C", Offset = "0x9EDA5C")]
		private void <AwakeComponent>b__1_1(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class RecalibrationPopup : VRPopup
	{
		[StructLayout(3)]
		[Token(Token = "0x20003D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3054", Offset = "0x9E3054")]
		private struct <StartCountdown>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40014EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RecalibrationPopup <>4__this;

			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action completionCallback;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xA82D9C", Offset = "0xA82D9C", VA = "0xA82D9C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xA82DA4", Offset = "0xA82DA4", VA = "0xA82DA4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3064", Offset = "0x9E3064")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RecalibrationPopup <>4__this;

			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xB3A900", Offset = "0xB3A900", VA = "0xB3A900")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xB3A918", Offset = "0xB3A918", VA = "0xB3A918")]
			internal void <ShowCheckmark>b__0()
			{
			}

			[Token(Token = "0x6001C02")]
			[Address(RVA = "0xB3A9C4", Offset = "0xB3A9C4", VA = "0xB3A9C4")]
			internal void <ShowCheckmark>b__1()
			{
			}
		}

		[Token(Token = "0x4000D58")]
		protected const string EDITOR_MENUBUTTON_GROUP_NAME = "Recalibration Panel";

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UILabel _countDownText;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UILabel _title;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UIImage _checkmark;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public int CalibrationSeconds;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int _calibrationSeconds;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xB3A378", Offset = "0xB3A378", VA = "0xB3A378")]
		public void StartCalibration([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xB3A744", Offset = "0xB3A744", VA = "0xB3A744")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EDA6C", Offset = "0x9EDA6C")]
		private void StartCountdown(Action completionCallback)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xB3A804", Offset = "0xB3A804", VA = "0xB3A804")]
		private void ShowCheckmark(Action completionCallback)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xB3A908", Offset = "0xB3A908", VA = "0xB3A908")]
		public RecalibrationPopup()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class TableFullPopup : VRPopup
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UIButton UiButtonContinue;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public UIButton UiCloseButton;

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xB3AE78", Offset = "0xB3AE78", VA = "0xB3AE78", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xB3AF90", Offset = "0xB3AF90", VA = "0xB3AF90")]
		public TableFullPopup()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xB3AF98", Offset = "0xB3AF98", VA = "0xB3AF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDAD0", Offset = "0x9EDAD0")]
		private void <AwakeComponent>b__2_0(IInteractable button)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xB3AFAC", Offset = "0xB3AFAC", VA = "0xB3AFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDAE0", Offset = "0x9EDAE0")]
		private void <AwakeComponent>b__2_1(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class VRPopupManager : PopupManager<VRPopupManager>
	{
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xB3B218", Offset = "0xB3B218", VA = "0xB3B218")]
		public new NoInternetConnectionPopup GetConnectionLostPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xB3B284", Offset = "0xB3B284", VA = "0xB3B284")]
		public QuitPopup GetQuitPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xB3B2F0", Offset = "0xB3B2F0", VA = "0xB3B2F0")]
		public RecalibratePopup GetRecalibratePopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xB3B35C", Offset = "0xB3B35C", VA = "0xB3B35C")]
		public SceneEndPopup GetSceneEndPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xB3A234", Offset = "0xB3A234", VA = "0xB3A234")]
		public RecalibrationPopup GetRecalibrationPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xB3B3C8", Offset = "0xB3B3C8", VA = "0xB3B3C8")]
		public PermissionPopup GetPermissionPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xB3B434", Offset = "0xB3B434", VA = "0xB3B434")]
		public TableFullPopup GetTableFullPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xB3B4A0", Offset = "0xB3B4A0", VA = "0xB3B4A0")]
		public MultiplayerConnectionLostPopup GetMultiplayerConnectionLostPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xB3B50C", Offset = "0xB3B50C", VA = "0xB3B50C")]
		public MultiplayerQuitPopup GetMultiplayerQuitPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xB3B578", Offset = "0xB3B578", VA = "0xB3B578")]
		public MultiplayerUsersConnectionFeedbackPopup GetMultiplayerUsersConnectionFeedbackPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xB3B5E4", Offset = "0xB3B5E4", VA = "0xB3B5E4")]
		public MultiplayerTeleportWarningPopup GetMultiplayerTeleportWarningPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xB3B650", Offset = "0xB3B650", VA = "0xB3B650")]
		public DownloadTimeoutPopup GetDownloadTimeoutPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xB3B6BC", Offset = "0xB3B6BC", VA = "0xB3B6BC")]
		public ReviewUsPopup GetReviewUsPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xB3B728", Offset = "0xB3B728", VA = "0xB3B728")]
		public NoMicrophoneDetectedPopup GetNoMicrophoneDetectedPopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xB3B794", Offset = "0xB3B794", VA = "0xB3B794")]
		public CategoryCompletedPopup GetLessonsCompletePopup(bool hidden = false)
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xB3B800", Offset = "0xB3B800", VA = "0xB3B800")]
		public VRPopupManager()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class VRFullScreenPopup : VRPopup
	{
		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float _blackScreenAlphaValue;

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xB3AFC0", Offset = "0xB3AFC0", VA = "0xB3AFC0", Slot = "51")]
		public override Tween FadeInAnimation([Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xB3B0FC", Offset = "0xB3B0FC", VA = "0xB3B0FC", Slot = "52")]
		public override Tween FadeOutAnimation([Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xB3B208", Offset = "0xB3B208", VA = "0xB3B208")]
		public VRFullScreenPopup()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class VRPopup : Popup
	{
		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRFollowCamera _vrFollowCamera;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private VRGraphicRaycaster _graphicRaycaster;

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xB396F0", Offset = "0xB396F0", VA = "0xB396F0", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xB3B050", Offset = "0xB3B050", VA = "0xB3B050", Slot = "51")]
		public override Tween FadeInAnimation([Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xB3B17C", Offset = "0xB3B17C", VA = "0xB3B17C", Slot = "52")]
		public override Tween FadeOutAnimation([Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xB39988", Offset = "0xB39988", VA = "0xB39988")]
		public VRPopup()
		{
		}
	}
}
namespace ATiStudios.MondlyVR
{
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E2078", Offset = "0x9E2078")]
	public sealed class Cart : SceneObject, IStorylineActor
	{
		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private splineMove _splineMove;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private EAudioSource _audioSource;

		[Token(Token = "0x1700035F")]
		public string Name
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xAFA2D0", Offset = "0xAFA2D0", VA = "0xAFA2D0", Slot = "43")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xAFA2D8", Offset = "0xAFA2D8", VA = "0xAFA2D8", Slot = "44")]
			set
			{
			}
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xAFA254", Offset = "0xAFA254", VA = "0xAFA254", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xAFA2E0", Offset = "0xAFA2E0", VA = "0xAFA2E0")]
		public void StartMoving()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xAFA378", Offset = "0xAFA378", VA = "0xAFA378")]
		public Cart()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xAFA380", Offset = "0xAFA380", VA = "0xAFA380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDAF0", Offset = "0x9EDAF0")]
		private void <StartMoving>b__6_0()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public sealed class MondlyVRApp : App
	{
		[Token(Token = "0x20003D3")]
		public enum Difficulty
		{
			[Token(Token = "0x40014F3")]
			None,
			[Token(Token = "0x40014F4")]
			Easy,
			[Token(Token = "0x40014F5")]
			Intermediate,
			[Token(Token = "0x40014F6")]
			Hard
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xB06AF0", Offset = "0xB06AF0", VA = "0xB06AF0")]
		public MondlyVRApp()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public static class MondlyVRConstants
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string VocabularyLessonApiUrl;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int VocabularyLessonResourcesVersion;
	}
	[Token(Token = "0x200022E")]
	public class VRMenuSceneManager : VRSceneManager
	{
		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3074", Offset = "0x9E3074")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x40014F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LaunchDetails launchDetails;

			[Token(Token = "0x40014F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRMenuSceneManager <>4__this;

			[Token(Token = "0x6001C03")]
			[Address(RVA = "0xB522D8", Offset = "0xB522D8", VA = "0xB522D8")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001C04")]
			[Address(RVA = "0xB55358", Offset = "0xB55358", VA = "0xB55358")]
			internal void <AwakeComponent>b__4()
			{
			}
		}

		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3084", Offset = "0x9E3084")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LanguagePanelButton tempButton;

			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRMenuSceneManager <>4__this;

			[Token(Token = "0x6001C05")]
			[Address(RVA = "0xB553BC", Offset = "0xB553BC", VA = "0xB553BC")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xB553C4", Offset = "0xB553C4", VA = "0xB553C4")]
			internal void <StartComponent>b__1(IInteractable button)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3094", Offset = "0x9E3094")]
		private sealed class <>c
		{
			[StructLayout(3)]
			[Token(Token = "0x2000491")]
			private struct <<WaitToGetUsername>b__50_0>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001764")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001765")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x4001766")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private ATiStudios.Foundation.TimingHandler <handler>5__2;

				[Token(Token = "0x4001767")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private object <>u__1;

				[Token(Token = "0x6001DEA")]
				[Address(RVA = "0xA82F04", Offset = "0xA82F04", VA = "0xA82F04", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DEB")]
				[Address(RVA = "0xA82F0C", Offset = "0xA82F0C", VA = "0xA82F0C", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Message<User>.Callback <>9__37_0;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Task> <>9__50_0;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__52_0;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action <>9__52_1;

			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xB54BDC", Offset = "0xB54BDC", VA = "0xB54BDC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xB54BE4", Offset = "0xB54BE4", VA = "0xB54BE4")]
			internal void <StartComponent>b__37_0(Message<User> message)
			{
			}

			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xB54E90", Offset = "0xB54E90", VA = "0xB54E90")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2DF4", Offset = "0x9F2DF4")]
			internal Task <WaitToGetUsername>b__50_0()
			{
				return null;
			}

			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xB54F78", Offset = "0xB54F78", VA = "0xB54F78")]
			internal void <MigrateDatabase>b__52_0()
			{
			}

			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0xB54FD8", Offset = "0xB54FD8", VA = "0xB54FD8")]
			internal void <MigrateDatabase>b__52_1()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30A4", Offset = "0x9E30A4")]
		private struct <StartComponent>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRMenuSceneManager <>4__this;

			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0xA82F68", Offset = "0xA82F68", VA = "0xA82F68", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0xA82F70", Offset = "0xA82F70", VA = "0xA82F70", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30B4", Offset = "0x9E30B4")]
		private struct <OnResume>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRMenuSceneManager <>4__this;

			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isBackground;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001C0F")]
			[Address(RVA = "0xA82F54", Offset = "0xA82F54", VA = "0xA82F54", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xA82F5C", Offset = "0xA82F5C", VA = "0xA82F5C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30C4", Offset = "0x9E30C4")]
		private struct <HandleButtonLanguageSelectionClick>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRMenuSceneManager <>4__this;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xA82F2C", Offset = "0xA82F2C", VA = "0xA82F2C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xA82F34", Offset = "0xA82F34", VA = "0xA82F34", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30D4", Offset = "0x9E30D4")]
		private struct <ChangeIconForSelectedLanaguage>d__43 : IAsyncStateMachine
		{
			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRMenuSceneManager <>4__this;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Sprite flag;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xA82F18", Offset = "0xA82F18", VA = "0xA82F18", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C14")]
			[Address(RVA = "0xA82F20", Offset = "0xA82F20", VA = "0xA82F20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30E4", Offset = "0x9E30E4")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRMenuSceneManager <>4__this;

			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Language targetLanguage;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TweenCallback <>9__1;

			[Token(Token = "0x6001C15")]
			[Address(RVA = "0xB52F4C", Offset = "0xB52F4C", VA = "0xB52F4C")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xB55544", Offset = "0xB55544", VA = "0xB55544")]
			internal void <CheckIfFirstRun>b__0(IInteractable button)
			{
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xB55730", Offset = "0xB55730", VA = "0xB55730")]
			internal void <CheckIfFirstRun>b__1()
			{
			}

			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xB5578C", Offset = "0xB5578C", VA = "0xB5578C")]
			internal bool <CheckIfFirstRun>b__2(LanguagePanelButton languageButton)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E30F4", Offset = "0x9E30F4")]
		private struct <OculusDeeplinkLaunchCallback>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string deeplinkMessage;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRMenuSceneManager <>4__this;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private JObject <jsonData>5__2;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xA82F40", Offset = "0xA82F40", VA = "0xA82F40", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xA82F48", Offset = "0xA82F48", VA = "0xA82F48", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3104", Offset = "0x9E3104")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isTimedout;

			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0xB55344", Offset = "0xB55344", VA = "0xB55344")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xB55854", Offset = "0xB55854", VA = "0xB55854")]
			internal void <WaitToGetUsername>b__1()
			{
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xB55860", Offset = "0xB55860", VA = "0xB55860")]
			internal bool <WaitToGetUsername>b__2()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Language> s_supportedMotherLanguageForVocabulary;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Language> s_supportedTargetLanguageForVocabulary;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private LanguagePanelUIView _languagePanel;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private SelectLanguagesButton _buttonSelectMotherLanguage;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private UILabel _labelSelectMotherLanguage;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private SelectLanguagesButton _buttonSelectTargetLanguage;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UILabel _labelSelectTargetLanguage;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UIView _mainMenuView;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private VRTabGroup _tabGroup;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private LanguagePanelButton[] _selectLanguageButtons;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private SelectLanguagesButton _motherOrTargetPressed;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AvatarSelectionController _avatarSelectionController;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject PlayerNetworkPrefab;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private VRButton _settingsButton;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private UIView _settingsPanelUiView;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private VRTabGroup _settingsTabGroup;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private DifficultySelectionOnBoardingViewController _onBoardingDifficultySelectionView;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private DifficultySelectionViewController _difficultySelectionViewController;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private WelcomingMessageViewController _welcomingMessageView;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private StartHereTooltipView _startHereTooltipView;

		[Token(Token = "0x4000D7B")]
		private const string STORAGE_PERMISSION = "android.permission.READ_EXTERNAL_STORAGE";

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool s_hasDoneMigration;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private LessonType _lastCompletedLessonType;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int _lastCompletedLessonIndex;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public static bool _isReturningFromScene;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Transform _centerEyeAnchorTransform;

		[Token(Token = "0x17000360")]
		public new static VRMenuSceneManager Instance
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xB4D7CC", Offset = "0xB4D7CC", VA = "0xB4D7CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		public UIView MainMenuView
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xB4DE8C", Offset = "0xB4DE8C", VA = "0xB4DE8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		public UIView SettingsPanelUiView
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0xB51A84", Offset = "0xB51A84", VA = "0xB51A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		public DifficultySelectionViewController DifficultySelectionViewController
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xB51A8C", Offset = "0xB51A8C", VA = "0xB51A8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		public int LastCompletedLessonIndex
		{
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0xB4D850", Offset = "0xB4D850", VA = "0xB4D850")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xB51A94", Offset = "0xB51A94", VA = "0xB51A94", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xB522E0", Offset = "0xB522E0", VA = "0xB522E0", Slot = "12")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EDB00", Offset = "0x9EDB00")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xB5239C", Offset = "0xB5239C", VA = "0xB5239C", Slot = "23")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EDB64", Offset = "0x9EDB64")]
		protected override void OnResume(bool isBackground)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xB52464", Offset = "0xB52464", VA = "0xB52464", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xB524E8", Offset = "0xB524E8", VA = "0xB524E8")]
		private void HandleMotherOrTargetButtonClick()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xB525A8", Offset = "0xB525A8", VA = "0xB525A8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EDBC8", Offset = "0x9EDBC8")]
		private void HandleButtonLanguageSelectionClick()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xB52670", Offset = "0xB52670", VA = "0xB52670")]
		private void DisableVocabularyTabIfNeeded()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xB5293C", Offset = "0xB5293C", VA = "0xB5293C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EDC2C", Offset = "0x9EDC2C")]
		private void ChangeIconForSelectedLanaguage(Sprite flag)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xB529FC", Offset = "0xB529FC", VA = "0xB529FC")]
		private void CheckIfFirstRun()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xB5306C", Offset = "0xB5306C", VA = "0xB5306C")]
		private void DisablePhoneLanguageOnPanel()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xB5317C", Offset = "0xB5317C", VA = "0xB5317C")]
		private void HighlightChosenMotherLanguage()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xB52F54", Offset = "0xB52F54", VA = "0xB52F54")]
		private void HighlightChosenTargetLanguage()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xB53294", Offset = "0xB53294", VA = "0xB53294")]
		private void OculusEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xB53320", Offset = "0xB53320", VA = "0xB53320")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EDC90", Offset = "0x9EDC90")]
		private void OculusDeeplinkLaunchCallback(string deeplinkMessage)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xB533E4", Offset = "0xB533E4", VA = "0xB533E4")]
		private Task WaitToGetUsername()
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xB534E0", Offset = "0xB534E0", VA = "0xB534E0")]
		private void SetLastCompletedSceneCardInTheCenter()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xB52130", Offset = "0xB52130", VA = "0xB52130")]
		private void MigrateDatabase()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xB537E8", Offset = "0xB537E8", VA = "0xB537E8")]
		private void ResetVrPosition()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xB5388C", Offset = "0xB5388C", VA = "0xB5388C")]
		public VRMenuSceneManager()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xB53D38", Offset = "0xB53D38", VA = "0xB53D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDCF4", Offset = "0x9EDCF4")]
		private void <AwakeComponent>b__36_0(IInteractable button)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xB53FD0", Offset = "0xB53FD0", VA = "0xB53FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDD04", Offset = "0x9EDD04")]
		private void <AwakeComponent>b__36_5(IInteractable button1)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xB53FD4", Offset = "0xB53FD4", VA = "0xB53FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDD14", Offset = "0x9EDD14")]
		private void <AwakeComponent>b__36_1(IInteractable button)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xB54270", Offset = "0xB54270", VA = "0xB54270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDD24", Offset = "0x9EDD24")]
		private void <AwakeComponent>b__36_6(IInteractable button1)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xB54274", Offset = "0xB54274", VA = "0xB54274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDD34", Offset = "0x9EDD34")]
		private void <AwakeComponent>b__36_2(IInteractable button)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xB542C8", Offset = "0xB542C8", VA = "0xB542C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDD44", Offset = "0x9EDD44")]
		private void <AwakeComponent>b__36_3(IInteractable button)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xB543F4", Offset = "0xB543F4", VA = "0xB543F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDD54", Offset = "0x9EDD54")]
		private void <StartComponent>b__37_2(int page)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xB54820", Offset = "0xB54820", VA = "0xB54820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDD64", Offset = "0x9EDD64")]
		private void <StartComponent>b__37_3(int page, int length)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xB54B64", Offset = "0xB54B64", VA = "0xB54B64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDD74", Offset = "0x9EDD74")]
		[DebuggerHidden]
		private void <>n__0()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xB54B6C", Offset = "0xB54B6C", VA = "0xB54B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDDAC", Offset = "0x9EDDAC")]
		[DebuggerHidden]
		private void <>n__1(bool isBackground)
		{
		}
	}
	[Token(Token = "0x200022F")]
	public sealed class TaxiCar : SceneObject, IStorylineActor
	{
		[StructLayout(3)]
		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3114", Offset = "0x9E3114")]
		private struct <PauseMovingGradually>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TaxiCar <>4__this;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xA8438C", Offset = "0xA8438C", VA = "0xA8438C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xA84394", Offset = "0xA84394", VA = "0xA84394", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D81")]
		private const float START_STOP_DURATION = 10f;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<FloatRange> JunctionRanges;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[CanBeNull]
		private Tween _tweenAccelerate;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[CanBeNull]
		private Tween _tweenDecelerate;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Animator _animator;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _isMoving;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool _isInJunction;

		[Token(Token = "0x17000365")]
		public string Name
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0xCC7054", Offset = "0xCC7054", VA = "0xCC7054", Slot = "43")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001308")]
			[Address(RVA = "0xCC705C", Offset = "0xCC705C", VA = "0xCC705C", Slot = "44")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public bool IsMoving
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xCC7064", Offset = "0xCC7064", VA = "0xCC7064")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000367")]
		private float _currentCarSpeed
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xCC706C", Offset = "0xCC706C", VA = "0xCC706C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xCC712C", Offset = "0xCC712C", VA = "0xCC712C")]
			set
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action OnAccelerationEnded
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0xCC71EC", Offset = "0xCC71EC", VA = "0xCC71EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDDE4", Offset = "0x9EDDE4")]
			add
			{
			}
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xCC7298", Offset = "0xCC7298", VA = "0xCC7298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDDF4", Offset = "0x9EDDF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action OnDeccelerationEnded
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xCC7344", Offset = "0xCC7344", VA = "0xCC7344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDE04", Offset = "0x9EDE04")]
			add
			{
			}
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xCC73F0", Offset = "0xCC73F0", VA = "0xCC73F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDE14", Offset = "0x9EDE14")]
			remove
			{
			}
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xCC749C", Offset = "0xCC749C", VA = "0xCC749C", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xCC7500", Offset = "0xCC7500", VA = "0xCC7500")]
		public void StartMovingGradually()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xCC767C", Offset = "0xCC767C", VA = "0xCC767C")]
		public void StartMovingInstantly()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xCC7700", Offset = "0xCC7700", VA = "0xCC7700")]
		public void PauseMovingInstantly()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xCC776C", Offset = "0xCC776C", VA = "0xCC776C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EDE24", Offset = "0x9EDE24")]
		public void PauseMovingGradually()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xCC7834", Offset = "0xCC7834", VA = "0xCC7834")]
		public void PlayAnimation(string animationName)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xCC789C", Offset = "0xCC789C", VA = "0xCC789C")]
		public TaxiCar()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xCC790C", Offset = "0xCC790C", VA = "0xCC790C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDE88", Offset = "0x9EDE88")]
		private float <StartMovingGradually>b__22_0()
		{
			return default(float);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xCC7910", Offset = "0xCC7910", VA = "0xCC7910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDE98", Offset = "0x9EDE98")]
		private void <StartMovingGradually>b__22_1(float speed)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xCC7914", Offset = "0xCC7914", VA = "0xCC7914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDEA8", Offset = "0x9EDEA8")]
		private void <StartMovingGradually>b__22_2()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xCC791C", Offset = "0xCC791C", VA = "0xCC791C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDEB8", Offset = "0x9EDEB8")]
		private void <StartMovingGradually>b__22_3()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xCC7930", Offset = "0xCC7930", VA = "0xCC7930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDEC8", Offset = "0x9EDEC8")]
		private bool <PauseMovingGradually>b__25_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xCC7A9C", Offset = "0xCC7A9C", VA = "0xCC7A9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDED8", Offset = "0x9EDED8")]
		private float <PauseMovingGradually>b__25_1()
		{
			return default(float);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xCC7AA0", Offset = "0xCC7AA0", VA = "0xCC7AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDEE8", Offset = "0x9EDEE8")]
		private void <PauseMovingGradually>b__25_2(float speed)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xCC7AA4", Offset = "0xCC7AA4", VA = "0xCC7AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDEF8", Offset = "0x9EDEF8")]
		private void <PauseMovingGradually>b__25_3()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xCC7AAC", Offset = "0xCC7AAC", VA = "0xCC7AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF08", Offset = "0x9EDF08")]
		private void <PauseMovingGradually>b__25_4()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.UserPreferences
{
	[Token(Token = "0x2000230")]
	public sealed class MondlyVRUserSettings : AbstractVRUserSettings
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _shouldReadDifficulty;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _shouldCheckIfEnvironmentSoundIsMuted;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MondlyVRApp.Difficulty _difficulty;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _isEnvironmentAudioMuted;

		[Token(Token = "0x17000368")]
		public new static MondlyVRUserSettings Instance
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0xB4B540", Offset = "0xB4B540", VA = "0xB4B540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		public override Language MotherLanguage
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0xB5107C", Offset = "0xB5107C", VA = "0xB5107C", Slot = "4")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x6001328")]
			[Address(RVA = "0xB5111C", Offset = "0xB5111C", VA = "0xB5111C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public override Language TargetLanguage
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0xB5119C", Offset = "0xB5119C", VA = "0xB5119C", Slot = "6")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x600132A")]
			[Address(RVA = "0xB511F0", Offset = "0xB511F0", VA = "0xB511F0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public override bool IsFirstRun
		{
			[Token(Token = "0x600132B")]
			[Address(RVA = "0xB51270", Offset = "0xB51270", VA = "0xB51270", Slot = "12")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xB512BC", Offset = "0xB512BC", VA = "0xB512BC", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public static string OculusUserId
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xB51310", Offset = "0xB51310", VA = "0xB51310")]
			get
			{
				return null;
			}
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xB5135C", Offset = "0xB5135C", VA = "0xB5135C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public static string Username
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0xB4F110", Offset = "0xB4F110", VA = "0xB4F110")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0xB4F15C", Offset = "0xB4F15C", VA = "0xB4F15C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public static List<string> CompletedScenes
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0xB513B0", Offset = "0xB513B0", VA = "0xB513B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001332")]
			[Address(RVA = "0xB51490", Offset = "0xB51490", VA = "0xB51490")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public static int IsFirstMultiplayerRun
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xB51588", Offset = "0xB51588", VA = "0xB51588")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001334")]
			[Address(RVA = "0xB4E1E8", Offset = "0xB4E1E8", VA = "0xB4E1E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public override bool IsPhonetic
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xB515D4", Offset = "0xB515D4", VA = "0xB515D4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xB51630", Offset = "0xB51630", VA = "0xB51630", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public override bool IsTutorialDone
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xB516B0", Offset = "0xB516B0", VA = "0xB516B0", Slot = "14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001338")]
			[Address(RVA = "0xB5170C", Offset = "0xB5170C", VA = "0xB5170C", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public bool HasCompletedTutorialOnce
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0xB5178C", Offset = "0xB5178C", VA = "0xB5178C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0xB517E8", Offset = "0xB517E8", VA = "0xB517E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public string UserChosenAvatar
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xB5183C", Offset = "0xB5183C", VA = "0xB5183C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600133C")]
			[Address(RVA = "0xB51894", Offset = "0xB51894", VA = "0xB51894")]
			set
			{
			}
		}

		[Token(Token = "0x17000374")]
		public MondlyVRApp.Difficulty Difficulty
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xB4E584", Offset = "0xB4E584", VA = "0xB4E584")]
			get
			{
				return default(MondlyVRApp.Difficulty);
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xB518E8", Offset = "0xB518E8", VA = "0xB518E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public bool HasBeenSentToOculusStoreToReview
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xB5196C", Offset = "0xB5196C", VA = "0xB5196C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001340")]
			[Address(RVA = "0xB519C8", Offset = "0xB519C8", VA = "0xB519C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public bool IsEnvironmentAudioActive
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0xB4B5A0", Offset = "0xB4B5A0", VA = "0xB4B5A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001342")]
			[Address(RVA = "0xB4BD80", Offset = "0xB4BD80", VA = "0xB4BD80")]
			set
			{
			}
		}

		[Token(Token = "0x14000028")]
		public override event Action OnPhoneticChanged
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0xB50DDC", Offset = "0xB50DDC", VA = "0xB50DDC", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF18", Offset = "0x9EDF18")]
			add
			{
			}
			[Token(Token = "0x6001321")]
			[Address(RVA = "0xB50E84", Offset = "0xB50E84", VA = "0xB50E84", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF28", Offset = "0x9EDF28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action OnTutorialIsDoneValueChanged
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0xB50F2C", Offset = "0xB50F2C", VA = "0xB50F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF38", Offset = "0x9EDF38")]
			add
			{
			}
			[Token(Token = "0x6001323")]
			[Address(RVA = "0xB50FD4", Offset = "0xB50FD4", VA = "0xB50FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF48", Offset = "0x9EDF48")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action OnDifficultyChanged
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xB4D724", Offset = "0xB4D724", VA = "0xB4D724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF58", Offset = "0x9EDF58")]
			add
			{
			}
			[Token(Token = "0x6001325")]
			[Address(RVA = "0xB4D988", Offset = "0xB4D988", VA = "0xB4D988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF68", Offset = "0x9EDF68")]
			remove
			{
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xB51A1C", Offset = "0xB51A1C", VA = "0xB51A1C")]
		public MondlyVRUserSettings()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.UI
{
	[Token(Token = "0x2000231")]
	public class ClickMeTooltip : SceneObject
	{
		[Token(Token = "0x20003DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3124", Offset = "0x9E3124")]
		private sealed class <>c__DisplayClass5_0
		{
			[StructLayout(3)]
			[Token(Token = "0x2000492")]
			private struct <<OnPointerEnter>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001768")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001769")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400176A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass5_0 <>4__this;

				[Token(Token = "0x400176B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private object <>u__1;

				[Token(Token = "0x6001DEC")]
				[Address(RVA = "0xA844A4", Offset = "0xA844A4", VA = "0xA844A4", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DED")]
				[Address(RVA = "0xA844AC", Offset = "0xA844AC", VA = "0xA844AC", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ClickMeTooltip <>4__this;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PointerEventData eventData;

			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xCD5BF4", Offset = "0xCD5BF4", VA = "0xCD5BF4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xCD5F68", Offset = "0xCD5F68", VA = "0xCD5F68")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2EB8", Offset = "0x9F2EB8")]
			internal void <OnPointerEnter>b__0()
			{
			}
		}

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UIImage _clickIcon;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UIView _tooltipTextBackground;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private BoxCollider _boxCollider;

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xCD597C", Offset = "0xCD597C", VA = "0xCD597C", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xCD5A30", Offset = "0xCD5A30", VA = "0xCD5A30", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xCD5BFC", Offset = "0xCD5BFC", VA = "0xCD5BFC", Slot = "36")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xCD5CAC", Offset = "0xCD5CAC", VA = "0xCD5CAC", Slot = "42")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xCD5D60", Offset = "0xCD5D60", VA = "0xCD5D60")]
		public void ShowCutsceneToolTip()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xCD5DCC", Offset = "0xCD5DCC", VA = "0xCD5DCC")]
		private void ShakeAnimation()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xCD5F60", Offset = "0xCD5F60", VA = "0xCD5F60")]
		public ClickMeTooltip()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class LanguagePanelUIView : UIView
	{
		[Token(Token = "0x20003E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3134", Offset = "0x9E3134")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LanguagePanelButton languageButton;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LanguagePanelUIView <>4__this;

			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xCD64B0", Offset = "0xCD64B0", VA = "0xCD64B0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xCD6898", Offset = "0xCD6898", VA = "0xCD6898")]
			internal void <AwakeComponent>b__0(IInteractable button)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3144", Offset = "0x9E3144")]
		private sealed class <>c
		{
			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<LanguagePanelButton> <>9__9_0;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<LanguagePanelButton> <>9__9_1;

			[Token(Token = "0x6001C25")]
			[Address(RVA = "0xCD6790", Offset = "0xCD6790", VA = "0xCD6790")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C26")]
			[Address(RVA = "0xCD6798", Offset = "0xCD6798", VA = "0xCD6798")]
			internal void <ScaleAnimation>b__9_0(LanguagePanelButton languageButton)
			{
			}

			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xCD6868", Offset = "0xCD6868", VA = "0xCD6868")]
			internal void <ScaleAnimation>b__9_1(LanguagePanelButton languageButton)
			{
			}
		}

		[Token(Token = "0x4000D95")]
		protected const string EDITOR_MENUBUTTON_GROUP_NAME = "Language Panel";

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public bool IsTarget;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public VRButton BackButton;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UILabel PanelTitle;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public LanguagePanelButton CurrentMotherLanguageButton;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public LanguagePanelButton CurrentTargetLanguageButton;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject _languageButtonsParent;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public LanguagePanelButton[] LanguageButtons;

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xCD6324", Offset = "0xCD6324", VA = "0xCD6324", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xCD64B8", Offset = "0xCD64B8", VA = "0xCD64B8", Slot = "34")]
		public override Tween ScaleAnimation(Vector3 targetScale, float duration, [Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xCD6724", Offset = "0xCD6724", VA = "0xCD6724")]
		public LanguagePanelUIView()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public sealed class RoundedLoadingImage : UIImage
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Sequence _sequenceLoading;

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xCD3848", Offset = "0xCD3848", VA = "0xCD3848")]
		public void StartLoading()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xCD3A18", Offset = "0xCD3A18", VA = "0xCD3A18")]
		public void StopLoading()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xCDB8D4", Offset = "0xCDB8D4", VA = "0xCDB8D4")]
		public RoundedLoadingImage()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xCDB8DC", Offset = "0xCDB8DC", VA = "0xCDB8DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF78", Offset = "0x9EDF78")]
		private void <StopLoading>b__2_0()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class ScrollingDotsPaging : AbstractFlowView
	{
		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[CanBeNull]
		[SerializeField]
		private UIButton _buttonNext;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[CanBeNull]
		[SerializeField]
		private UIButton _buttonPrevious;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<Sequence> _scaleTweens;

		[Token(Token = "0x17000377")]
		public UIButton ButtonNext
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xCDB95C", Offset = "0xCDB95C", VA = "0xCDB95C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000378")]
		public UIButton ButtonPrevious
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0xCDB964", Offset = "0xCDB964", VA = "0xCDB964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<int, int> OnInvalidPageReached
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0xCDB96C", Offset = "0xCDB96C", VA = "0xCDB96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF88", Offset = "0x9EDF88")]
			add
			{
			}
			[Token(Token = "0x6001356")]
			[Address(RVA = "0xCDBA18", Offset = "0xCDBA18", VA = "0xCDBA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDF98", Offset = "0x9EDF98")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<int> OnPageReached
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0xCDBAC4", Offset = "0xCDBAC4", VA = "0xCDBAC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDFA8", Offset = "0x9EDFA8")]
			add
			{
			}
			[Token(Token = "0x6001358")]
			[Address(RVA = "0xCDBB70", Offset = "0xCDBB70", VA = "0xCDBB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDFB8", Offset = "0x9EDFB8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xCDBC1C", Offset = "0xCDBC1C", VA = "0xCDBC1C", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xCDBFA0", Offset = "0xCDBFA0", VA = "0xCDBFA0", Slot = "53")]
		public override void GoToPage(int page, bool animated = true)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xCDBD14", Offset = "0xCDBD14", VA = "0xCDBD14")]
		private Sequence CreateTweenForDot(UIView dotTransform)
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xCDC114", Offset = "0xCDC114", VA = "0xCDC114")]
		public ScrollingDotsPaging()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class SettingsPanel : UIView
	{
		[Token(Token = "0x4000DA3")]
		protected const string EDITOR_MENUBUTTON_GROUP_NAME = "Settings Panel";

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UIButton ChangeUsernameButton;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UIButton SelectAvatarButton;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public UIButton BackButton;

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xB4F7D4", Offset = "0xB4F7D4", VA = "0xB4F7D4")]
		public SettingsPanel()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class StartHereTooltipView : UIView
	{
		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIImage _iconImage;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILabel _startHereLabel;

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xB4F7DC", Offset = "0xB4F7DC", VA = "0xB4F7DC", Slot = "10")]
		protected override void EnableComponent()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xB4F87C", Offset = "0xB4F87C", VA = "0xB4F87C")]
		public void StartAnimation(float offset, float duration)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xB4F888", Offset = "0xB4F888", VA = "0xB4F888")]
		public StartHereTooltipView()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class VRTabGroup : UIView
	{
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3154", Offset = "0x9E3154")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRButton buttonKey;

			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UIView viewValue;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTabGroup <>4__this;

			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__1;

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xB50044", Offset = "0xB50044", VA = "0xB50044")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xB5004C", Offset = "0xB5004C", VA = "0xB5004C")]
			internal void <StartComponent>b__0(IInteractable button)
			{
			}

			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xB50134", Offset = "0xB50134", VA = "0xB50134")]
			internal void <StartComponent>b__1()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3164", Offset = "0x9E3164")]
		private struct <StartComponent>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTabGroup <>4__this;

			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isEditorMode;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0xA82EF0", Offset = "0xA82EF0", VA = "0xA82EF0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xA82EF8", Offset = "0xA82EF8", VA = "0xA82EF8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3174", Offset = "0x9E3174")]
		private sealed class <>c__DisplayClass26_0
		{
			[StructLayout(3)]
			[Token(Token = "0x2000493")]
			private struct <<Show>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x400176C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400176D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400176E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass26_0 <>4__this;

				[Token(Token = "0x400176F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private object <>u__1;

				[Token(Token = "0x6001DEE")]
				[Address(RVA = "0xA82EDC", Offset = "0xA82EDC", VA = "0xA82EDC", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DEF")]
				[Address(RVA = "0xA82EE4", Offset = "0xA82EE4", VA = "0xA82EE4", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTabGroup <>4__this;

			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRButton tabButton;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0xB4FD54", Offset = "0xB4FD54", VA = "0xB4FD54")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xB50180", Offset = "0xB50180", VA = "0xB50180")]
			internal void <Show>b__0()
			{
			}

			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0xB50194", Offset = "0xB50194", VA = "0xB50194")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2F2C", Offset = "0x9F2F2C")]
			internal void <Show>b__1()
			{
			}
		}

		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3184", Offset = "0x9E3184")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<VRButton, UIView> keyValuePair;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action completionCallback;

			[Token(Token = "0x6001C30")]
			[Address(RVA = "0xB4FEC8", Offset = "0xB4FEC8", VA = "0xB4FEC8")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001C31")]
			[Address(RVA = "0xB505BC", Offset = "0xB505BC", VA = "0xB505BC")]
			internal void <Hide>b__0()
			{
			}
		}

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private VRButton _firstSelectedTabButton;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[OdinSerialize]
		private Dictionary<VRButton, UIView> _tabPages;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private VRButton _buttonVocabulary;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private VRButton _buttonChatbot;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private VRButton _buttonMultiplayer;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UIImage _imageSelectionIndicator;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private KeyValuePair<VRButton, UIView> _currentSelectedTabPair;

		[Token(Token = "0x17000379")]
		public VRButton ButtonVocabulary
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xB4F890", Offset = "0xB4F890", VA = "0xB4F890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		public VRButton ButtonChatbot
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0xB4F898", Offset = "0xB4F898", VA = "0xB4F898")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		public VRButton ButtonMultiplayer
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0xB4F8A0", Offset = "0xB4F8A0", VA = "0xB4F8A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public KeyValuePair<VRButton, UIView> CurrentSelectedTabPair
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0xB4F8A8", Offset = "0xB4F8A8", VA = "0xB4F8A8")]
			get
			{
				return default(KeyValuePair<VRButton, UIView>);
			}
			[Token(Token = "0x6001365")]
			[Address(RVA = "0xB4F8B4", Offset = "0xB4F8B4", VA = "0xB4F8B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public VRButton CurrentSelectedTabButton
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0xB4F8BC", Offset = "0xB4F8BC", VA = "0xB4F8BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		public Dictionary<VRButton, UIView> TabPages
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0xB4F90C", Offset = "0xB4F90C", VA = "0xB4F90C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037F")]
		public PagingFlowView PagingFlowView
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0xB4F914", Offset = "0xB4F914", VA = "0xB4F914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		public ScrollingDotsPaging ScrollingDotsPaging
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xB4F9A4", Offset = "0xB4F9A4", VA = "0xB4F9A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xB4FA34", Offset = "0xB4FA34", VA = "0xB4FA34", Slot = "49")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EDFC8", Offset = "0x9EDFC8")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xB4FAFC", Offset = "0xB4FAFC", VA = "0xB4FAFC")]
		public void UpdateSelectionIndicator()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xB4FB88", Offset = "0xB4FB88", VA = "0xB4FB88")]
		public void Show(VRButton tabButton, UIView tabView, float duration = 0f, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xB4FD5C", Offset = "0xB4FD5C", VA = "0xB4FD5C")]
		public void Hide(KeyValuePair<VRButton, UIView> keyValuePair, float duration = 0f, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xB4FED0", Offset = "0xB4FED0", VA = "0xB4FED0")]
		public void DisableSelectionIndicator()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xB4FF4C", Offset = "0xB4FF4C", VA = "0xB4FF4C")]
		public void EnableSelectionIndicator()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xB4FFC8", Offset = "0xB4FFC8", VA = "0xB4FFC8")]
		public VRTabGroup()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xB50038", Offset = "0xB50038", VA = "0xB50038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF02C", Offset = "0x9EF02C")]
		[DebuggerHidden]
		private void <>n__0(bool isEditorMode)
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class WelcomingMessageViewController : UIView
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIButton _continueButton;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILabel _title;

		[Token(Token = "0x17000381")]
		public UIButton ContinueButton
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0xB50BD0", Offset = "0xB50BD0", VA = "0xB50BD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xB50BD8", Offset = "0xB50BD8", VA = "0xB50BD8")]
		public void SetUsernameInTitle(string username)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xB50DD4", Offset = "0xB50DD4", VA = "0xB50DD4")]
		public WelcomingMessageViewController()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.UI.Selectables
{
	[Token(Token = "0x2000239")]
	public class DifficultySelectionButton : VRButton
	{
		[StructLayout(3)]
		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3194", Offset = "0x9E3194")]
		private struct <SetProgressLabelOnMotherLanguageChange>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DifficultySelectionButton <>4__this;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xA844E0", Offset = "0xA844E0", VA = "0xA844E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xA844E8", Offset = "0xA844E8", VA = "0xA844E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[CanBeNull]
		private UILabel _label;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		[CanBeNull]
		private UIImage _difficultyTooltip;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		[CanBeNull]
		private UIImage _trophyProgressImage;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		[CanBeNull]
		private UIImage _selectionOutline;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		[CanBeNull]
		private UIImage _scenesCompletionRewardImage;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private MondlyVRApp.Difficulty _difficulty;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Sequence _sequence;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private bool _isSelected;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Vector3 _scaleInValue;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private int _maxStars;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private float _fillAmount;

		[Token(Token = "0x17000382")]
		public UILabel Label
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xCDC184", Offset = "0xCDC184", VA = "0xCDC184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		public UIImage DifficultyTooltip
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xCDC18C", Offset = "0xCDC18C", VA = "0xCDC18C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		private UIImage TrophyProgressImage
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0xCDC194", Offset = "0xCDC194", VA = "0xCDC194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public UIImage SelectionOutline
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0xCDC19C", Offset = "0xCDC19C", VA = "0xCDC19C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public UIImage SceneCompletionRewardImage
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0xCDC1A4", Offset = "0xCDC1A4", VA = "0xCDC1A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public MondlyVRApp.Difficulty Difficulty
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0xCDC1AC", Offset = "0xCDC1AC", VA = "0xCDC1AC")]
			get
			{
				return default(MondlyVRApp.Difficulty);
			}
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xCDC1B4", Offset = "0xCDC1B4", VA = "0xCDC1B4", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xCDC5EC", Offset = "0xCDC5EC", VA = "0xCDC5EC", Slot = "50")]
		protected override void DestroyComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xCDC724", Offset = "0xCDC724", VA = "0xCDC724")]
		public void ToggleActiveState()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xCDC7D4", Offset = "0xCDC7D4", VA = "0xCDC7D4")]
		public void ToggleInactiveState()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xCDC880", Offset = "0xCDC880", VA = "0xCDC880", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xCDC8E8", Offset = "0xCDC8E8", VA = "0xCDC8E8", Slot = "36")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xCDC950", Offset = "0xCDC950", VA = "0xCDC950", Slot = "55")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xCDC420", Offset = "0xCDC420", VA = "0xCDC420")]
		public void SetProgress(float progress)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xCDCCC8", Offset = "0xCDCCC8", VA = "0xCDCCC8")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xCDCCDC", Offset = "0xCDCCDC", VA = "0xCDCCDC")]
		public void Show()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xCDCCF0", Offset = "0xCDCCF0", VA = "0xCDCCF0")]
		public void StartCateogryCompletedOnDifficultyButtonAnimation()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xCDCB48", Offset = "0xCDCB48", VA = "0xCDCB48")]
		private void ResetButtonElementsAfterClick()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xCDCA18", Offset = "0xCDCA18", VA = "0xCDCA18")]
		private void PlayPulseAnimation()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xCDCBA8", Offset = "0xCDCBA8", VA = "0xCDCBA8")]
		private void SetCompletedElements()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xCDCEEC", Offset = "0xCDCEEC", VA = "0xCDCEEC")]
		private void SetProgressOnTargetLanguageChange()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xCDD010", Offset = "0xCDD010", VA = "0xCDD010")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF064", Offset = "0x9EF064")]
		private void SetProgressLabelOnMotherLanguageChange()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xCDD0D8", Offset = "0xCDD0D8", VA = "0xCDD0D8")]
		public DifficultySelectionButton()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class EnvironmentAudioToggleButton : VRButton
	{
		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private UIImage _slider;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private UIImage _knob;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private float _valueToMoveKnobBy;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private VRPlayableSceneManager _sceneManager;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private bool _isToggled;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Vector3 _valuesToMoveBy;

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xB4B20C", Offset = "0xB4B20C", VA = "0xB4B20C", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xB4B664", Offset = "0xB4B664", VA = "0xB4B664", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xB4B8CC", Offset = "0xB4B8CC", VA = "0xB4B8CC", Slot = "55")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xB4B9A0", Offset = "0xB4B9A0", VA = "0xB4B9A0")]
		private void ToggleSlider()
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xB4BA78", Offset = "0xB4BA78", VA = "0xB4BA78")]
		private void ToggleSliderOnAnimation()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xB4BBD8", Offset = "0xB4BBD8", VA = "0xB4BBD8")]
		private void ToggleSliderOffAnimation()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xB4B6A4", Offset = "0xB4B6A4", VA = "0xB4B6A4")]
		private void SetInitialToggleState()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xB4BDEC", Offset = "0xB4BDEC", VA = "0xB4BDEC")]
		public EnvironmentAudioToggleButton()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class LanguagePanelButton : VRButton
	{
		[Token(Token = "0x4000DC3")]
		protected new const string EDITOR_MENUBUTTON_GROUP_NAME = "Language";

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public Language Language;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public UILabel _text;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public UIImage Checkmark;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private string _localizedMother;

		[Token(Token = "0x1400002D")]
		public static event Action<Sprite> OnLanguageButtonClicked
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xB4BE50", Offset = "0xB4BE50", VA = "0xB4BE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF0C8", Offset = "0x9EF0C8")]
			add
			{
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xB4BF08", Offset = "0xB4BF08", VA = "0xB4BF08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF0D8", Offset = "0x9EF0D8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xB4BFC0", Offset = "0xB4BFC0", VA = "0xB4BFC0", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xB4C090", Offset = "0xB4C090", VA = "0xB4C090")]
		public void ShowLocalizedMother()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xB4C0C8", Offset = "0xB4C0C8", VA = "0xB4C0C8", Slot = "53")]
		public override void TransitionForState(TransitionState state)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xB4C6BC", Offset = "0xB4C6BC", VA = "0xB4C6BC")]
		public LanguagePanelButton()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xB4C6C0", Offset = "0xB4C6C0", VA = "0xB4C6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF0E8", Offset = "0x9EF0E8")]
		private void <AwakeComponent>b__8_0(IInteractable button)
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class PhoneticButton : VRButton
	{
		[Token(Token = "0x20003E7")]
		public enum MoveDirection
		{
			[Token(Token = "0x400153C")]
			Left,
			[Token(Token = "0x400153D")]
			Right
		}

		[StructLayout(3)]
		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E31A4", Offset = "0x9E31A4")]
		private struct <ChangePhoneticSprite>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PhoneticButton <>4__this;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<Sprite> <>u__1;

			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xA82E8C", Offset = "0xA82E8C", VA = "0xA82E8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xA82E94", Offset = "0xA82E94", VA = "0xA82E94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000DC9")]
		private const string EDITOR_PHONETICBUTTON_GROUP_NAME = "PhoneticButton";

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private UIImage FrontSelection;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private UIImage SecondarySelection;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private int _siblingIndexFrontSelection;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private int _siblingIndexSecondarySelection;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private AsyncOperationHandle<Sprite> _phoneticAlphabetSpriteAddressable;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[HideInInspector]
		public Vector3 OpenSubtitleButtonPosition;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xB4C7CC", Offset = "0xB4C7CC", VA = "0xB4C7CC", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xB4C868", Offset = "0xB4C868", VA = "0xB4C868", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xB4C9B4", Offset = "0xB4C9B4", VA = "0xB4C9B4", Slot = "55")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xB4CACC", Offset = "0xB4CACC", VA = "0xB4CACC")]
		public void MoveButton(Vector3 direction, float duration, Ease ease)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xB4CB70", Offset = "0xB4CB70", VA = "0xB4CB70")]
		private void PhoneticOnAnimation()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xB4CD8C", Offset = "0xB4CD8C", VA = "0xB4CD8C")]
		private void PhoneticOffAnimation()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xB4CFA8", Offset = "0xB4CFA8", VA = "0xB4CFA8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF0F8", Offset = "0x9EF0F8")]
		private void ChangePhoneticSprite()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xB4C8A8", Offset = "0xB4C8A8", VA = "0xB4C8A8")]
		private void SetupPhonetic()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xB4C9D8", Offset = "0xB4C9D8", VA = "0xB4C9D8")]
		private void ChangePhonetic()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xB4D070", Offset = "0xB4D070", VA = "0xB4D070")]
		public PhoneticButton()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class SceneButton : VRButton
	{
		[StructLayout(3)]
		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E31B4", Offset = "0x9E31B4")]
		private struct <StartLoadingScene>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneButton <>4__this;

			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xA82EB4", Offset = "0xA82EB4", VA = "0xA82EB4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xA82EBC", Offset = "0xA82EBC", VA = "0xA82EBC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E31C4", Offset = "0x9E31C4")]
		private sealed class <>c__DisplayClass31_0
		{
			[StructLayout(3)]
			[Token(Token = "0x2000494")]
			private struct <<SetupMicrophonePermissionPopup>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001770")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001771")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001772")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass31_0 <>4__this;

				[Token(Token = "0x4001773")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private TaskAwaiter <>u__1;

				[Token(Token = "0x4001774")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private TaskAwaiter<bool> <>u__2;

				[Token(Token = "0x6001DF0")]
				[Address(RVA = "0xA82EA0", Offset = "0xA82EA0", VA = "0xA82EA0", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DF1")]
				[Address(RVA = "0xA82EA8", Offset = "0xA82EA8", VA = "0xA82EA8", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PermissionPopup permissionPopup;

			[Token(Token = "0x4001546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneButton <>4__this;

			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xB4E768", Offset = "0xB4E768", VA = "0xB4E768")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xB4E7FC", Offset = "0xB4E7FC", VA = "0xB4E7FC")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2FC0", Offset = "0x9F2FC0")]
			internal void <SetupMicrophonePermissionPopup>b__0(IInteractable button)
			{
			}
		}

		[Token(Token = "0x4000DD0")]
		protected new const string EDITOR_MENUBUTTON_GROUP_NAME = "Scene Button";

		[Token(Token = "0x4000DD1")]
		private const string WINDOWS_SOUND_SETTINGS_LINK = "ms-settings:sound";

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private UIImage _playButtonIcon;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private UIImage _backgroundImage;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private string _sceneToLoad;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private bool _isVocabularyScene;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
		[SerializeField]
		private bool _isMultiplayerScene;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		private int _vocabularyLessonIndex;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private int _sceneIndex;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private CurvedUIVertexEffect _curvedUiVertexEffect;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private float _textCurrentPosition;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private float _bottomBarPosition;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		[CanBeNull]
		private DifficultyStarView _difficultyStarView;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private int _numberOfStars;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private Lazy<PermissionPopup> _lazyPermissionPopup;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool _hasAddedContinueButtonListener;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
		private bool _isPermissionGranted;

		[Token(Token = "0x4000DE1")]
		private const string MICROPHONE_PERMISSION = "android.permission.RECORD_AUDIO";

		[Token(Token = "0x17000388")]
		private PermissionPopup _permissionPopup
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xB4D384", Offset = "0xB4D384", VA = "0xB4D384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xB4D3E4", Offset = "0xB4D3E4", VA = "0xB4D3E4", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xB4D4D0", Offset = "0xB4D4D0", VA = "0xB4D4D0", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xB4D858", Offset = "0xB4D858", VA = "0xB4D858", Slot = "50")]
		protected override void DestroyComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xB4DA30", Offset = "0xB4DA30", VA = "0xB4DA30", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xB4DD68", Offset = "0xB4DD68", VA = "0xB4DD68", Slot = "55")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xB4DF40", Offset = "0xB4DF40", VA = "0xB4DF40", Slot = "36")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xB4DE94", Offset = "0xB4DE94", VA = "0xB4DE94")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF15C", Offset = "0x9EF15C")]
		private void StartLoadingScene()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xB4E148", Offset = "0xB4E148", VA = "0xB4E148")]
		public static void ConnectToPhoton()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xB4D710", Offset = "0xB4D710", VA = "0xB4D710")]
		private void CheckLessonState()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xB4E23C", Offset = "0xB4E23C", VA = "0xB4E23C")]
		private void CheckChatbotLessonState()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xB4E3FC", Offset = "0xB4E3FC", VA = "0xB4E3FC")]
		private void CheckVocabularyLessonState()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xB4E640", Offset = "0xB4E640", VA = "0xB4E640")]
		private PermissionPopup SetupMicrophonePermissionPopup()
		{
			return null;
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xB4E770", Offset = "0xB4E770", VA = "0xB4E770")]
		public SceneButton()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xB4E77C", Offset = "0xB4E77C", VA = "0xB4E77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF1C0", Offset = "0x9EF1C0")]
		private void <StartComponent>b__21_0()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xB4E79C", Offset = "0xB4E79C", VA = "0xB4E79C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF1D0", Offset = "0x9EF1D0")]
		private void <OnPointerEnter>b__23_0()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xB4E7CC", Offset = "0xB4E7CC", VA = "0xB4E7CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF1E0", Offset = "0x9EF1E0")]
		private void <OnPointerExit>b__25_0()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class SelectLanguagesButton : VRButton
	{
		[Token(Token = "0x4000DE2")]
		protected new const string EDITOR_MENUBUTTON_GROUP_NAME = "LanguageIcon";

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public UIImage LanguageIcon;

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xB4F1BC", Offset = "0xB4F1BC", VA = "0xB4F1BC")]
		public SelectLanguagesButton()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E20DC", Offset = "0x9E20DC")]
	public class VRButton : UIButton, IVRInteractable
	{
		[Token(Token = "0x20003EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E31D4", Offset = "0x9E31D4")]
		private sealed class <>c__DisplayClass26_0
		{
			[StructLayout(3)]
			[Token(Token = "0x2000495")]
			private struct <<OnPointerEnter>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001775")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001776")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001777")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass26_0 <>4__this;

				[Token(Token = "0x4001778")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private object <>u__1;

				[Token(Token = "0x6001DF2")]
				[Address(RVA = "0xA82EC8", Offset = "0xA82EC8", VA = "0xA82EC8", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DF3")]
				[Address(RVA = "0xA82ED0", Offset = "0xA82ED0", VA = "0xA82ED0", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRButton <>4__this;

			[Token(Token = "0x4001548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PointerEventData eventData;

			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xB4F1E4", Offset = "0xB4F1E4", VA = "0xB4F1E4")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xB4F428", Offset = "0xB4F428", VA = "0xB4F428")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F3024", Offset = "0x9F3024")]
			internal void <OnPointerEnter>b__0()
			{
			}
		}

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private float _gazeDuration;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[SerializeField]
		private bool _isGazable;

		[Token(Token = "0x4000DE6")]
		protected const string EDITOR_MENUBUTTON_GROUP_NAME = "VRButton";

		[Token(Token = "0x4000DE7")]
		protected const string FEEDBACK_NAME = "VRButton/Feedback";

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
		[SerializeField]
		protected bool _shouldScaleWhenHovering;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public UIImage _outline;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private float _scalePercent;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private float _animationDuration;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private bool shouldPlayHover;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		[SerializeField]
		private bool shouldPlayClick;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public Color ColorIconDisable;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private Vector3 _scaleInValues;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private AudioClip _audioClipClick;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private AsyncOperationHandle<AudioClip> _clickClipAddresable;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private AudioClip _audioClipHover;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private AsyncOperationHandle<AudioClip> _hoverClipAddresable;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private bool _hadPlayedHoverAudio;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
		private bool _hadPlayedClickAudio;

		[Token(Token = "0x17000389")]
		public float GazeDuration
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0xB4F1C0", Offset = "0xB4F1C0", VA = "0xB4F1C0", Slot = "56")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0xB4F1C8", Offset = "0xB4F1C8", VA = "0xB4F1C8", Slot = "57")]
			set
			{
			}
		}

		[Token(Token = "0x1700038A")]
		public bool IsGazable
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xB4F1D0", Offset = "0xB4F1D0", VA = "0xB4F1D0", Slot = "58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xB4F1D8", Offset = "0xB4F1D8", VA = "0xB4F1D8", Slot = "59")]
			set
			{
			}
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xB4B334", Offset = "0xB4B334", VA = "0xB4B334", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xB4DBD0", Offset = "0xB4DBD0", VA = "0xB4DBD0", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xB4E098", Offset = "0xB4E098", VA = "0xB4E098", Slot = "36")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xB4B8F0", Offset = "0xB4B8F0", VA = "0xB4B8F0", Slot = "55")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xB4C238", Offset = "0xB4C238", VA = "0xB4C238", Slot = "53")]
		public override void TransitionForState(TransitionState state)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xB4F2F4", Offset = "0xB4F2F4", VA = "0xB4F2F4")]
		private void HandleScaleInAnimation()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xB4F288", Offset = "0xB4F288", VA = "0xB4F288")]
		private void HandleScaleOutAnimation()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xB4BDF0", Offset = "0xB4BDF0", VA = "0xB4BDF0")]
		public VRButton()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xB4F360", Offset = "0xB4F360", VA = "0xB4F360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF1F0", Offset = "0x9EF1F0")]
		private void <AwakeComponent>b__25_0(AsyncOperationHandle<AudioClip> operation)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xB4F3C4", Offset = "0xB4F3C4", VA = "0xB4F3C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF200", Offset = "0x9EF200")]
		private void <AwakeComponent>b__25_1(AsyncOperationHandle<AudioClip> operation)
		{
		}
	}
}
namespace ATiStudios.MondlyVR.UI.Panels
{
	[Token(Token = "0x2000240")]
	public class ChatbotFeedbackPanel<T> : UIView where T : PanelWrapper
	{
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E31E4", Offset = "0x9E31E4")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ChatbotFeedbackPanel<T> <>4__this;

			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action completionCallback;

			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action <>9__1;

			[Token(Token = "0x6001C3C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001C3D")]
			internal void <Collapse>b__1()
			{
			}
		}

		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E31F4", Offset = "0x9E31F4")]
		private sealed class <>c__DisplayClass23_1
		{
			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SuggestionsFeedbackPanel suggestionsFeedbackPanel;

			[Token(Token = "0x400154D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass23_0 CS$<>8__locals1;

			[Token(Token = "0x6001C3E")]
			public <>c__DisplayClass23_1()
			{
			}

			[Token(Token = "0x6001C3F")]
			internal void <Collapse>b__0()
			{
			}
		}

		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3204", Offset = "0x9E3204")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UIImage bubbleImage;

			[Token(Token = "0x6001C40")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001C41")]
			internal void <ShowSuggestionContent>b__0()
			{
			}
		}

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private UIButton _buttonActive;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private UIButton _buttonClose;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIView CoachMarkView;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> Wrappers;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isCollapsed;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector2 _wrapperShowPivot;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Vector2 _wrapperHidePivot;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isSuggestionFeedbackPanel;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _wrappersMinSize;

		[Token(Token = "0x1700038B")]
		public UIButton ButtonActive
		{
			[Token(Token = "0x60013C5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		public UIButton ButtonClose
		{
			[Token(Token = "0x60013C6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		public bool IsVisible
		{
			[Token(Token = "0x60013C7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038E")]
		public int WrappersMinSize
		{
			[Token(Token = "0x60013C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action OnPlay
		{
			[Token(Token = "0x60013C9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF210", Offset = "0x9EF210")]
			add
			{
			}
			[Token(Token = "0x60013CA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF220", Offset = "0x9EF220")]
			remove
			{
			}
		}

		[Token(Token = "0x60013CB")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013CC")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013CD")]
		public Tween ShowOutputData(List<OutputData> outputDatas, bool instantly, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x60013CE")]
		public void Collapse([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60013CF")]
		public void Expand([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60013D0")]
		public void Hide([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60013D1")]
		public void Show([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60013D2")]
		public Tween HideContent()
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		public void DisablePlaybackButton()
		{
		}

		[Token(Token = "0x60013D4")]
		public void EnablePlaybackButton()
		{
		}

		[Token(Token = "0x60013D5")]
		private void HandleButtonActiveClick(IInteractable button)
		{
		}

		[Token(Token = "0x60013D6")]
		private void HandleButtonCloseClick(IInteractable button)
		{
		}

		[Token(Token = "0x60013D7")]
		private Sequence ShowSuggestionContent(SuggestionWrapper wrapper)
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		public ChatbotFeedbackPanel()
		{
		}

		[Token(Token = "0x60013D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF230", Offset = "0x9EF230")]
		private void <StartComponent>b__21_0(IInteractable interactable)
		{
		}

		[Token(Token = "0x60013DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF240", Offset = "0x9EF240")]
		private void <Expand>b__24_0()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public abstract class PanelWrapper : UIView
	{
		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3214", Offset = "0x9E3214")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PanelWrapper <>4__this;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public OutputData outputData;

			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xCD73C0", Offset = "0xCD73C0", VA = "0xCD73C0")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xCD7AA8", Offset = "0xCD7AA8", VA = "0xCD7AA8")]
			internal void <ShowOutputData>b__0()
			{
			}
		}

		[Token(Token = "0x4000E01")]
		protected const float ANIMATION_DURATION = 0.4f;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float yMoveValue;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILabel _labelTarget;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UILabel _labelMother;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private PopupButton _buttonPlay;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private RoundedLoadingImage _roundedLoadingImage;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool _shouldPlaySlowAudio;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private UIView _viewLabels;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private string _phoneticText;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private string _concatTargetOutput;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected float _initialTargetLabelYPosition;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Sprite _slowAudioSnailSprite;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Sprite _originalSprite;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Image _playButtonIcon;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected bool _isMotherTranslationRevealed;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Language _motherLanguage;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Language _targetLanguage;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Font _hindiFont;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Font _originalFont;

		[Token(Token = "0x1700038F")]
		public UILabel LabelTarget
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xCCF0CC", Offset = "0xCCF0CC", VA = "0xCCF0CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000390")]
		public UILabel LabelMother
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0xCD6B00", Offset = "0xCD6B00", VA = "0xCD6B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		public PopupButton ButtonPlay
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xCCB188", Offset = "0xCCB188", VA = "0xCCB188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		public RoundedLoadingImage RoundedLoadingImage
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xCD6B08", Offset = "0xCD6B08", VA = "0xCD6B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		public bool ShouldPlaySlowAudio
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xCD6B10", Offset = "0xCD6B10", VA = "0xCD6B10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xCD6B18", Offset = "0xCD6B18", VA = "0xCD6B18")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public UIView ViewLabels
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xCCB634", Offset = "0xCCB634", VA = "0xCCB634")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xCD6B9C", Offset = "0xCD6B9C", VA = "0xCD6B9C")]
			set
			{
			}
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xCD6BA4", Offset = "0xCD6BA4", VA = "0xCD6BA4", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xCD6E68", Offset = "0xCD6E68", VA = "0xCD6E68", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xCD70B0", Offset = "0xCD70B0", VA = "0xCD70B0", Slot = "50")]
		protected override void DestroyComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xCD71A8", Offset = "0xCD71A8", VA = "0xCD71A8")]
		public Tween Hide()
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xCD7280", Offset = "0xCD7280", VA = "0xCD7280", Slot = "51")]
		public virtual Tween ShowOutputData(OutputData outputData, bool instantly)
		{
			return null;
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xCD7780", Offset = "0xCD7780", VA = "0xCD7780", Slot = "52")]
		protected virtual void SwitchPhoneticOnWrapper()
		{
		}

		[Token(Token = "0x60013E9")]
		protected abstract void SetupWrapperInteraction();

		[Token(Token = "0x60013EA")]
		public abstract void RevealMotherTranslationOnPanels();

		[Token(Token = "0x60013EB")]
		public abstract void HideMotherTranslationOnPanels();

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xCD6DB8", Offset = "0xCD6DB8", VA = "0xCD6DB8")]
		private void SetupAudioButton()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xCD73C8", Offset = "0xCD73C8", VA = "0xCD73C8")]
		protected void SetOutputData(OutputData outputData)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xCD6B24", Offset = "0xCD6B24", VA = "0xCD6B24")]
		private void ChangeAudioButtonSprite()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xCD794C", Offset = "0xCD794C", VA = "0xCD794C")]
		protected PanelWrapper()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xCD795C", Offset = "0xCD795C", VA = "0xCD795C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF250", Offset = "0x9EF250")]
		private void <AwakeComponent>b__33_0(AsyncOperationHandle<Sprite> operation)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xCD79C0", Offset = "0xCD79C0", VA = "0xCD79C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF260", Offset = "0x9EF260")]
		private void <AwakeComponent>b__33_1(IInteractable button)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xCD7A10", Offset = "0xCD7A10", VA = "0xCD7A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF270", Offset = "0x9EF270")]
		private void <StartComponent>b__34_0(AsyncOperationHandle<Font> font)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xCD7A74", Offset = "0xCD7A74", VA = "0xCD7A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF280", Offset = "0x9EF280")]
		private void <Hide>b__36_0()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xCD7A7C", Offset = "0xCD7A7C", VA = "0xCD7A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF290", Offset = "0x9EF290")]
		private void <SetupAudioButton>b__42_0(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class SubtitleFeedbackPanel : ChatbotFeedbackPanel<SubtitleWrapper>
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private ThinkingDotsController _thinkingDotsController;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private UIImage _hardDifficultyBackground;

		[Token(Token = "0x17000395")]
		public ThinkingDotsController ThinkingDotsController
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0xCD7AD8", Offset = "0xCD7AD8", VA = "0xCD7AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public UIImage HardDifficultyBackground
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xCD7AE0", Offset = "0xCD7AE0", VA = "0xCD7AE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xCD7AE8", Offset = "0xCD7AE8", VA = "0xCD7AE8")]
		public SubtitleFeedbackPanel()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class SubtitleWrapper : PanelWrapper
	{
		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private UIView _motherTranslationView;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private UIImage _targetLanguageFlag;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private UIImage _motherLanguageFlag;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private readonly Vector3 _yValueToMoveBy;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int _originalTargetLabelFont;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private int _originalMotherLabelFont;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private bool _shouldAlwaysShowMother;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private AsyncOperationHandle<Sprite> _motherFlagSpriteAddressable;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private AsyncOperationHandle<Sprite> _targetFlagSpriteAddressable;

		[Token(Token = "0x17000397")]
		public bool IsMotherTextVisible
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xCCB180", Offset = "0xCCB180", VA = "0xCCB180")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xCD7B38", Offset = "0xCD7B38", VA = "0xCD7B38", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xCD7E10", Offset = "0xCD7E10", VA = "0xCD7E10", Slot = "53")]
		protected override void SetupWrapperInteraction()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xCD7F40", Offset = "0xCD7F40", VA = "0xCD7F40", Slot = "52")]
		protected override void SwitchPhoneticOnWrapper()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xCD80B8", Offset = "0xCD80B8", VA = "0xCD80B8", Slot = "54")]
		public override void RevealMotherTranslationOnPanels()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xCD81E0", Offset = "0xCD81E0", VA = "0xCD81E0", Slot = "55")]
		public override void HideMotherTranslationOnPanels()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xCD8298", Offset = "0xCD8298", VA = "0xCD8298")]
		public void ShowMotherTextForBeginner()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xCD7F64", Offset = "0xCD7F64", VA = "0xCD7F64")]
		private void SetTextFontSizeForPanel()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xCD8450", Offset = "0xCD8450", VA = "0xCD8450")]
		public SubtitleWrapper()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xCD84B8", Offset = "0xCD84B8", VA = "0xCD84B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF2A0", Offset = "0x9EF2A0")]
		private void <AwakeComponent>b__11_0(AsyncOperationHandle<Sprite> operation)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xCD8538", Offset = "0xCD8538", VA = "0xCD8538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF2B0", Offset = "0x9EF2B0")]
		private void <AwakeComponent>b__11_1(AsyncOperationHandle<Sprite> operation)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xCD85B8", Offset = "0xCD85B8", VA = "0xCD85B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF2C0", Offset = "0x9EF2C0")]
		private void <SetupWrapperInteraction>b__12_0(IInteractable wrapper)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xCD85C8", Offset = "0xCD85C8", VA = "0xCD85C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF2D0", Offset = "0x9EF2D0")]
		private void <SetupWrapperInteraction>b__12_1(IInteractable wrapper)
		{
		}
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E2140", Offset = "0x9E2140")]
	public sealed class SuggestionsFeedbackPanel : ChatbotFeedbackPanel<SuggestionWrapper>
	{
		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3224", Offset = "0x9E3224")]
		private sealed class <>c__DisplayClass14_0
		{
			[StructLayout(3)]
			[Token(Token = "0x2000496")]
			private struct <<AwakeComponent>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001779")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400177A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400177B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass14_0 <>4__this;

				[Token(Token = "0x400177C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private TaskAwaiter <>u__1;

				[Token(Token = "0x6001DF4")]
				[Address(RVA = "0xA844B8", Offset = "0xA844B8", VA = "0xA844B8", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DF5")]
				[Address(RVA = "0xA844C0", Offset = "0xA844C0", VA = "0xA844C0", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SuggestionWrapper suggestionWrapper;

			[Token(Token = "0x4001552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SuggestionsFeedbackPanel <>4__this;

			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xCD9718", Offset = "0xCD9718", VA = "0xCD9718")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001C45")]
			[Address(RVA = "0xCD9720", Offset = "0xCD9720", VA = "0xCD9720")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F3088", Offset = "0x9F3088")]
			internal void <AwakeComponent>b__0(IInteractable button)
			{
			}

			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xCD97E8", Offset = "0xCD97E8", VA = "0xCD97E8")]
			internal void <AwakeComponent>b__1(OutputDataComponent component, Dictionary<string, object> objects)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3234", Offset = "0x9E3234")]
		private struct <AwakeComponent>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SuggestionsFeedbackPanel <>4__this;

			[Token(Token = "0x4001556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isEditorMode;

			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<AudioClip> <>u__1;

			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xA844CC", Offset = "0xA844CC", VA = "0xA844CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xA844D4", Offset = "0xA844D4", VA = "0xA844D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3244", Offset = "0x9E3244")]
		private sealed class <>c
		{
			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__15_0;

			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xCD96B8", Offset = "0xCD96B8", VA = "0xCD96B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xCD96C0", Offset = "0xCD96C0", VA = "0xCD96C0")]
			internal void <StartComponent>b__15_0()
			{
			}
		}

		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3254", Offset = "0x9E3254")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sequence sequence;

			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SuggestionsFeedbackPanel <>4__this;

			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xCD90D8", Offset = "0xCD90D8", VA = "0xCD90D8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xCD9B54", Offset = "0xCD9B54", VA = "0xCD9B54")]
			internal void <PlayHintAnimationSequence>b__0()
			{
			}
		}

		[Token(Token = "0x20003F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3264", Offset = "0x9E3264")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SuggestionsFeedbackPanel <>4__this;

			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xCD9464", Offset = "0xCD9464", VA = "0xCD9464")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xCD9B8C", Offset = "0xCD9B8C", VA = "0xCD9B8C")]
			internal void <ShowHeaderScaled>b__0()
			{
			}
		}

		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3274", Offset = "0x9E3274")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SuggestionsFeedbackPanel <>4__this;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xCD9594", Offset = "0xCD9594", VA = "0xCD9594")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xCD9BE0", Offset = "0xCD9BE0", VA = "0xCD9BE0")]
			internal void <HideHeaderScaled>b__0()
			{
			}
		}

		[Token(Token = "0x20003F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3284", Offset = "0x9E3284")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index1;

			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SuggestionsFeedbackPanel <>4__this;

			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xCD959C", Offset = "0xCD959C", VA = "0xCD959C")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xCD9C34", Offset = "0xCD9C34", VA = "0xCD9C34")]
			internal void <StartHints>b__0()
			{
			}
		}

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private AudioPlayer _audioPlayer;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private UIView _suggestionHintTextView;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private UIView _header;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private AsyncOperationHandle<AudioClip> _firstHintClipAddresable;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private AsyncOperationHandle<AudioClip> _secondHintClipAddresable;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private AsyncOperationHandle<AudioClip> _thirdHintClipAddresable;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<AudioClip> _hintClips;

		[Token(Token = "0x17000398")]
		public AudioPlayer AudioPlayer
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xCD8CA4", Offset = "0xCD8CA4", VA = "0xCD8CA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public UIView SuggestionHintTextView
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xCD8CAC", Offset = "0xCD8CAC", VA = "0xCD8CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		public UIView Header
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xCD8CB4", Offset = "0xCD8CB4", VA = "0xCD8CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xCD8CBC", Offset = "0xCD8CBC", VA = "0xCD8CBC", Slot = "48")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF2E0", Offset = "0x9EF2E0")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xCD8D84", Offset = "0xCD8D84", VA = "0xCD8D84", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xCD8F94", Offset = "0xCD8F94", VA = "0xCD8F94")]
		public Tween PlayHintAnimationSequence()
		{
			return null;
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xCD9314", Offset = "0xCD9314", VA = "0xCD9314")]
		public void ShowHeaderScaled([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xCD946C", Offset = "0xCD946C", VA = "0xCD946C")]
		public void HideHeaderScaled([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xCD90E0", Offset = "0xCD90E0", VA = "0xCD90E0")]
		private Sequence StartHints()
		{
			return null;
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xCD95A4", Offset = "0xCD95A4", VA = "0xCD95A4")]
		public SuggestionsFeedbackPanel()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xCD95F4", Offset = "0xCD95F4", VA = "0xCD95F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF344", Offset = "0x9EF344")]
		[DebuggerHidden]
		private void <>n__0(bool isEditorMode)
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class SuggestionWrapper : PanelWrapper
	{
		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public UIImage Emoji;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8528", Offset = "0x9E8528")]
		private OutputData <DisplayedOutputData>k__BackingField;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private UIImage _bubble;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private float _valueToMove;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 _valuesToMoveBy;

		[Token(Token = "0x1700039B")]
		public OutputData DisplayedOutputData
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0xCD3A10", Offset = "0xCD3A10", VA = "0xCD3A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF37C", Offset = "0x9EF37C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001411")]
			[Address(RVA = "0xCD85D8", Offset = "0xCD85D8", VA = "0xCD85D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF38C", Offset = "0x9EF38C")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public UIImage Bubble
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0xCD85E0", Offset = "0xCD85E0", VA = "0xCD85E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		public Vector3 ValuesToMoveBy
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0xCD85E8", Offset = "0xCD85E8", VA = "0xCD85E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xCD85F8", Offset = "0xCD85F8", VA = "0xCD85F8", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xCD8754", Offset = "0xCD8754", VA = "0xCD8754", Slot = "51")]
		public override Tween ShowOutputData(OutputData outputData, bool instantly)
		{
			return null;
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xCD8930", Offset = "0xCD8930", VA = "0xCD8930")]
		public Sequence PlayHintAnimation()
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xCD8A08", Offset = "0xCD8A08", VA = "0xCD8A08", Slot = "53")]
		protected override void SetupWrapperInteraction()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xCD8B68", Offset = "0xCD8B68", VA = "0xCD8B68", Slot = "54")]
		public override void RevealMotherTranslationOnPanels()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xCD8BF0", Offset = "0xCD8BF0", VA = "0xCD8BF0", Slot = "55")]
		public override void HideMotherTranslationOnPanels()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xCD8C74", Offset = "0xCD8C74", VA = "0xCD8C74")]
		public SuggestionWrapper()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xCD8C84", Offset = "0xCD8C84", VA = "0xCD8C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF39C", Offset = "0x9EF39C")]
		private void <SetupWrapperInteraction>b__15_0(IInteractable wrapper)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xCD8C94", Offset = "0xCD8C94", VA = "0xCD8C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF3AC", Offset = "0x9EF3AC")]
		private void <SetupWrapperInteraction>b__15_1(IInteractable wrapper)
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class TeacherActionView : UIView
	{
		[Token(Token = "0x4000E2C")]
		private const float ANIMATION_DURATION = 0.4f;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TeacherFeedbackPanel _teacherFeedbackPanel;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UIButton _buttonHint;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UIButton _buttonContinue;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UIButton _buttonTogglePhonetic;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Sprite _slowAudioSnailSprite;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Sprite _originalButtonSprite;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Image _playButtonIcon;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _shouldPlaySlowAudio;

		[Token(Token = "0x1700039E")]
		public bool ShouldPlaySlowAudio
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xCDAA04", Offset = "0xCDAA04", VA = "0xCDAA04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xCDAA0C", Offset = "0xCDAA0C", VA = "0xCDAA0C")]
			set
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action OnButtonHintClick
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xCDA614", Offset = "0xCDA614", VA = "0xCDA614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF3BC", Offset = "0x9EF3BC")]
			add
			{
			}
			[Token(Token = "0x600141E")]
			[Address(RVA = "0xCDA6BC", Offset = "0xCDA6BC", VA = "0xCDA6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF3CC", Offset = "0x9EF3CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action OnButtonPlayAudioClick
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0xCDA764", Offset = "0xCDA764", VA = "0xCDA764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF3DC", Offset = "0x9EF3DC")]
			add
			{
			}
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xCDA80C", Offset = "0xCDA80C", VA = "0xCDA80C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF3EC", Offset = "0x9EF3EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action OnButtonContinueClick
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xCDA8B4", Offset = "0xCDA8B4", VA = "0xCDA8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF3FC", Offset = "0x9EF3FC")]
			add
			{
			}
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xCDA95C", Offset = "0xCDA95C", VA = "0xCDA95C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF40C", Offset = "0x9EF40C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xCDAA90", Offset = "0xCDAA90", VA = "0xCDAA90", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xCDAF40", Offset = "0xCDAF40", VA = "0xCDAF40")]
		public void Show()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xCDAF54", Offset = "0xCDAF54", VA = "0xCDAF54")]
		public void Show(OutputData outputData)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xCDB0F4", Offset = "0xCDB0F4", VA = "0xCDB0F4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xCDB108", Offset = "0xCDB108", VA = "0xCDB108")]
		public void HideAllComponents()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xCDB224", Offset = "0xCDB224", VA = "0xCDB224")]
		public void ShowButtonPlayAudio()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xCDB2BC", Offset = "0xCDB2BC", VA = "0xCDB2BC")]
		public void ShowContinueButton()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xCDB2F8", Offset = "0xCDB2F8", VA = "0xCDB2F8")]
		public void ShowHintButton()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xCDB334", Offset = "0xCDB334", VA = "0xCDB334")]
		public void StartLoadingAudioAnimation()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xCDB378", Offset = "0xCDB378", VA = "0xCDB378")]
		public void StopLoadingAudioAnimation()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xCDAA18", Offset = "0xCDAA18", VA = "0xCDAA18")]
		public void ChangeButtonSprite()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xCDB3B4", Offset = "0xCDB3B4", VA = "0xCDB3B4")]
		private void HandleButtonContinueClick(IInteractable button)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xCDB410", Offset = "0xCDB410", VA = "0xCDB410")]
		private void HandleButtonPlayAudioClick(IInteractable button)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xCDB424", Offset = "0xCDB424", VA = "0xCDB424")]
		private void HandleButtonHintClick(IInteractable button)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xCDB4AC", Offset = "0xCDB4AC", VA = "0xCDB4AC")]
		public TeacherActionView()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xCDB4B4", Offset = "0xCDB4B4", VA = "0xCDB4B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF41C", Offset = "0x9EF41C")]
		private void <AwakeComponent>b__21_0(AsyncOperationHandle<Sprite> operation)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xCDB518", Offset = "0xCDB518", VA = "0xCDB518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF42C", Offset = "0x9EF42C")]
		private void <HideAllComponents>b__25_0()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class TeacherFeedbackPanel : UIView
	{
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _labelMain;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIButton _buttonPlayAudio;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private RoundedLoadingImage _imageLoadingAudio;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private OutputData _currentOutputData;

		[Token(Token = "0x1700039F")]
		public UILabel LabelMain
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0xCDB574", Offset = "0xCDB574", VA = "0xCDB574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		public UIButton ButtonPlayAudio
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0xCDAF38", Offset = "0xCDAF38", VA = "0xCDAF38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		public RoundedLoadingImage ImageLoadingAudio
		{
			[Token(Token = "0x6001438")]
			[Address(RVA = "0xCDB370", Offset = "0xCDB370", VA = "0xCDB370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xCDB57C", Offset = "0xCDB57C", VA = "0xCDB57C", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xCDB690", Offset = "0xCDB690", VA = "0xCDB690", Slot = "50")]
		protected override void DestroyComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xCDAFBC", Offset = "0xCDAFBC", VA = "0xCDAFBC")]
		public void ShowOutputDataComponent(OutputData outputDataComponent)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xCDB77C", Offset = "0xCDB77C", VA = "0xCDB77C")]
		private void HandleMondlyVrUserSettingsOnPhoneticChanged()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xCDB8CC", Offset = "0xCDB8CC", VA = "0xCDB8CC")]
		public TeacherFeedbackPanel()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Tutorial
{
	[Token(Token = "0x2000248")]
	public class VRCoachMarkManager : AbstractCoachMarkManager
	{
		[Token(Token = "0x20003F7")]
		private enum TutorialReachedPanel
		{
			[Token(Token = "0x4001563")]
			InitialPanel,
			[Token(Token = "0x4001564")]
			SubtitleFeedbackPanel,
			[Token(Token = "0x4001565")]
			SuggestionsFeedbackPanel,
			[Token(Token = "0x4001566")]
			UserFeedbackPanel
		}

		[Token(Token = "0x20003F8")]
		private enum CoachMarkArrowPosition
		{
			[Token(Token = "0x4001568")]
			TopLeft,
			[Token(Token = "0x4001569")]
			TopRight,
			[Token(Token = "0x400156A")]
			MiddleLeft,
			[Token(Token = "0x400156B")]
			MiddleRight,
			[Token(Token = "0x400156C")]
			BottomRight,
			[Token(Token = "0x400156D")]
			Top,
			[Token(Token = "0x400156E")]
			Bottom
		}

		[Serializable]
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3294", Offset = "0x9E3294")]
		private sealed class <>c
		{
			[Token(Token = "0x400156F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__46_26;

			[Token(Token = "0x4001571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Dictionary<string, object>> <>9__46_46;

			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xCD3F80", Offset = "0xCD3F80", VA = "0xCD3F80")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xCD3F88", Offset = "0xCD3F88", VA = "0xCD3F88")]
			internal bool <HandleTutorialStart>b__46_26()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xCD400C", Offset = "0xCD400C", VA = "0xCD400C")]
			internal void <HandleTutorialStart>b__46_46(Dictionary<string, object> additionalData)
			{
			}
		}

		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E32A4", Offset = "0x9E32A4")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UILabel label;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xCCC814", Offset = "0xCCC814", VA = "0xCCC814")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xCD40A8", Offset = "0xCD40A8", VA = "0xCD40A8")]
			internal void <SetupPanelsActionsCheck>b__0()
			{
			}

			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xCD4130", Offset = "0xCD4130", VA = "0xCD4130")]
			internal void <SetupPanelsActionsCheck>b__1()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E32B4", Offset = "0x9E32B4")]
		private struct <SetupTutorialContinueButton>d__60 : IAsyncStateMachine
		{
			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xA84490", Offset = "0xA84490", VA = "0xA84490", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xA84498", Offset = "0xA84498", VA = "0xA84498", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E32C4", Offset = "0x9E32C4")]
		private sealed class <>c__DisplayClass64_0
		{
			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UILabel label;

			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xCCD1D0", Offset = "0xCCD1D0", VA = "0xCCD1D0")]
			public <>c__DisplayClass64_0()
			{
			}

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xCD4160", Offset = "0xCD4160", VA = "0xCD4160")]
			internal Vector2 <ShowContinueButton>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xCD41A8", Offset = "0xCD41A8", VA = "0xCD41A8")]
			internal void <ShowContinueButton>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E32D4", Offset = "0x9E32D4")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UILabel textToChange;

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xCCD1D8", Offset = "0xCCD1D8", VA = "0xCCD1D8")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xCD4208", Offset = "0xCD4208", VA = "0xCD4208")]
			internal void <SwitchText>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E32E4", Offset = "0x9E32E4")]
		private struct <HandleResumeEvent>d__68 : IAsyncStateMachine
		{
			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xA8447C", Offset = "0xA8447C", VA = "0xA8447C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xA84484", Offset = "0xA84484", VA = "0xA84484", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E32F4", Offset = "0x9E32F4")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UIView target;

			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoachMarkArrowPosition coachMarkArrowPosition;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TweenCallback <>9__1;

			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xCCD628", Offset = "0xCCD628", VA = "0xCCD628")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xCD42A4", Offset = "0xCD42A4", VA = "0xCD42A4")]
			internal void <ChangeTutorialArrowPosition>b__0()
			{
			}

			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xCD4D98", Offset = "0xCD4D98", VA = "0xCD4D98")]
			internal void <ChangeTutorialArrowPosition>b__1()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3304", Offset = "0x9E3304")]
		private struct <<HandleTutorialStart>b__46_3>d : IAsyncStateMachine
		{
			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xA84440", Offset = "0xA84440", VA = "0xA84440", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xA84448", Offset = "0xA84448", VA = "0xA84448", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3314", Offset = "0x9E3314")]
		private struct <<HandleTutorialStart>b__46_4>d : IAsyncStateMachine
		{
			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xA84468", Offset = "0xA84468", VA = "0xA84468", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0xA84470", Offset = "0xA84470", VA = "0xA84470", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3324", Offset = "0x9E3324")]
		private struct <<HandleTutorialStart>b__46_11>d : IAsyncStateMachine
		{
			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xA843A0", Offset = "0xA843A0", VA = "0xA843A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xA843A8", Offset = "0xA843A8", VA = "0xA843A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3334", Offset = "0x9E3334")]
		private struct <<HandleTutorialStart>b__46_16>d : IAsyncStateMachine
		{
			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xA843B4", Offset = "0xA843B4", VA = "0xA843B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xA843BC", Offset = "0xA843BC", VA = "0xA843BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3344", Offset = "0x9E3344")]
		private struct <<HandleTutorialStart>b__46_17>d : IAsyncStateMachine
		{
			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xA843C8", Offset = "0xA843C8", VA = "0xA843C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xA843D0", Offset = "0xA843D0", VA = "0xA843D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3354", Offset = "0x9E3354")]
		private struct <<HandleTutorialStart>b__46_18>d : IAsyncStateMachine
		{
			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xA843DC", Offset = "0xA843DC", VA = "0xA843DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xA843E4", Offset = "0xA843E4", VA = "0xA843E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3364", Offset = "0x9E3364")]
		private struct <<HandleTutorialStart>b__46_19>d : IAsyncStateMachine
		{
			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xA843F0", Offset = "0xA843F0", VA = "0xA843F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xA843F8", Offset = "0xA843F8", VA = "0xA843F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3374", Offset = "0x9E3374")]
		private struct <<HandleTutorialStart>b__46_20>d : IAsyncStateMachine
		{
			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xA84404", Offset = "0xA84404", VA = "0xA84404", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xA8440C", Offset = "0xA8440C", VA = "0xA8440C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3384", Offset = "0x9E3384")]
		private struct <<HandleTutorialStart>b__46_45>d : IAsyncStateMachine
		{
			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xA84454", Offset = "0xA84454", VA = "0xA84454", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xA8445C", Offset = "0xA8445C", VA = "0xA8445C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3394", Offset = "0x9E3394")]
		private struct <<HandleTutorialStart>b__46_22>d : IAsyncStateMachine
		{
			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xA84418", Offset = "0xA84418", VA = "0xA84418", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xA84420", Offset = "0xA84420", VA = "0xA84420", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E33A4", Offset = "0x9E33A4")]
		private struct <<HandleTutorialStart>b__46_23>d : IAsyncStateMachine
		{
			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRCoachMarkManager <>4__this;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xA8442C", Offset = "0xA8442C", VA = "0xA8442C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0xA84434", Offset = "0xA84434", VA = "0xA84434", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TutorialReachedPanel _tutorialReachedPanel;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<string> _rewardingWordsList;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UIView _subtitleCoachMark;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UIView _suggestionsCoachMark;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UIView _userFeedbackCoachMark;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UIView _initialCoachMark;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VRFemale _currentActiveCharacter;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PopupButton _tutorialContinueButton;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private UIImage _tutorialArrow;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string _trigger;

		[Token(Token = "0x4000E46")]
		private const float IN_FRONT = 1f;

		[Token(Token = "0x4000E47")]
		private const float BEHIND = 0.4f;

		[Token(Token = "0x4000E48")]
		private const int CONTINUE_BUTTON_SHOW_DELAY = 3;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Sequence _continueButtonSequence;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Sequence _tutorialArrowSequence;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private UIView _componentToScaleOut;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool _hasToScaleOutCoachMark;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private UILabel _subtitleFeedbackPanelCoachMarkText;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private UILabel _suggestionPanelCoachMarkText;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private UILabel _userFeedbackPanelCoachMarkText;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UILabel _initialCoachMarkText;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private AsyncOperationHandle<AudioClip> _panelActionSuccessClipAddresable;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private AsyncOperationHandle<AudioClip> _panelScaleOutClipAddresable;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private AsyncOperationHandle<AudioClip> _panelScaleInClipAddresable;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private AudioClip _panelActionSuccessAudioClip;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AudioClip _panelsScaleOutAudioClip;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private AudioClip _panelsScaleInAudioClip;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private AudioSource _tutorialAudioSource;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool _isTargetLanguagePhonetic;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		private bool _isPaused;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
		private bool _hasDonePanelAction;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
		private bool _shouldShowArrowAfterPause;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool _isRedoingTutorial;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		private bool _isSkipped;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private ATiStudios.Foundation.TimingHandler _showContinueButtonTimingHandler;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private UIButton _quitPopupRedoTutorialButton;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIButton _playbackButton;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private RoundedLoadingImage _roundedLoadingImage;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private AudioPlayer _audioPlayer;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Tween _panelsScaleAnimationTween;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool _showContinueButtonAfterPause;

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xCC7ED0", Offset = "0xCC7ED0", VA = "0xCC7ED0", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xCC87FC", Offset = "0xCC87FC", VA = "0xCC87FC", Slot = "16")]
		public override void Continue()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xCC88B0", Offset = "0xCC88B0", VA = "0xCC88B0", Slot = "17")]
		protected override void HandleOnCoachMark(string triggerName)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xCC8940", Offset = "0xCC8940", VA = "0xCC8940")]
		private void HandleTutorialStart()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xCCA7C4", Offset = "0xCCA7C4", VA = "0xCCA7C4")]
		private void ChangePositionOfElements()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xCCA8AC", Offset = "0xCCA8AC", VA = "0xCCA8AC")]
		private void GetCoachMarksLabels()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xCCAB9C", Offset = "0xCCAB9C", VA = "0xCCAB9C")]
		private void AddListenersToPanelElements()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xCC8404", Offset = "0xCC8404", VA = "0xCC8404")]
		private void LoadSoundEffectsUsingAddressables()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xCCA624", Offset = "0xCCA624", VA = "0xCCA624")]
		private void SetActiveCharacterCoachMarks()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xCCAA54", Offset = "0xCCAA54", VA = "0xCCAA54")]
		private void CheckIfPanelsAreClosedWhenTutorialStarts()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xCCB190", Offset = "0xCCB190", VA = "0xCCB190")]
		private void SwitchInteractableState(bool shouldBeInteractable)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xCCB63C", Offset = "0xCCB63C", VA = "0xCCB63C")]
		private void HandleControllerConnected(AbstractVrController controller)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xCCB6F0", Offset = "0xCCB6F0", VA = "0xCCB6F0")]
		private void HandleControllerDisconnected(AbstractVrController controller)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xCCB81C", Offset = "0xCCB81C", VA = "0xCCB81C")]
		private Sequence ShowTutorialCoachMarks(UIView panelToShow)
		{
			return null;
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xCCBA50", Offset = "0xCCBA50", VA = "0xCCBA50")]
		private void CleanupTutorial(bool isSkipped)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xCCC4B8", Offset = "0xCCC4B8", VA = "0xCCC4B8")]
		private void ChangeContinueButtonPosition(RectTransform target)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xCCC60C", Offset = "0xCCC60C", VA = "0xCCC60C")]
		private void SetupPanelsActionsCheck(int currentState, UILabel label)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xCCA718", Offset = "0xCCA718", VA = "0xCCA718")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF43C", Offset = "0x9EF43C")]
		private void SetupTutorialContinueButton()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xCCCA38", Offset = "0xCCCA38", VA = "0xCCCA38")]
		private void HandleStateMachineCompletion()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xCCCAD0", Offset = "0xCCCAD0", VA = "0xCCCAD0")]
		private Sequence PanelElementsScaleAnimation(UIView target, float scalePercentage, float duration, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xCCCD24", Offset = "0xCCCD24", VA = "0xCCCD24")]
		private void ChangeFromOnePanelToAnother()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xCCD054", Offset = "0xCCD054", VA = "0xCCD054")]
		private void ShowContinueButton(UILabel label)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xCCCF14", Offset = "0xCCCF14", VA = "0xCCCF14")]
		private void SetElementsBehindBlackScreen()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xCCC81C", Offset = "0xCCC81C", VA = "0xCCC81C")]
		private Sequence SwitchText(UILabel textToChange, string text)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xCCD1E0", Offset = "0xCCD1E0", VA = "0xCCD1E0")]
		private void HandlePauseEvent()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xCCD46C", Offset = "0xCCD46C", VA = "0xCCD46C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF4A0", Offset = "0x9EF4A0")]
		private void HandleResumeEvent()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xCCD534", Offset = "0xCCD534", VA = "0xCCD534")]
		private void ChangeTutorialArrowPosition(UIView target, CoachMarkArrowPosition coachMarkArrowPosition)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xCCD630", Offset = "0xCCD630", VA = "0xCCD630")]
		private void StartTutorialArrowAnimation(Vector3 direction)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xCCD7DC", Offset = "0xCCD7DC", VA = "0xCCD7DC")]
		private void StopTutorialArrowAnimation()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xCCC1C8", Offset = "0xCCC1C8", VA = "0xCCC1C8")]
		private void HideElementsWhenSkipped()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xCCD7EC", Offset = "0xCCD7EC", VA = "0xCCD7EC")]
		private void ResetCoachMarksForTutorialRestart()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xCC85C4", Offset = "0xCC85C4", VA = "0xCC85C4")]
		private void SetupRedoTutorialInQuitPopup()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xCC870C", Offset = "0xCC870C", VA = "0xCC870C")]
		private void SwitchRedoTutorialButtonStateInQuitPopup(bool shouldSkipTutorial)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xCC86A4", Offset = "0xCC86A4", VA = "0xCC86A4")]
		private string GetCoachMarkLocalizedText(string key)
		{
			return null;
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xCCDBD4", Offset = "0xCCDBD4", VA = "0xCCDBD4")]
		private void HandleTutorialIsDoneValueChange()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xCCDFAC", Offset = "0xCCDFAC", VA = "0xCCDFAC")]
		private void SkipStep()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xCCDFBC", Offset = "0xCCDFBC", VA = "0xCCDFBC")]
		public VRCoachMarkManager()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xCCDFC4", Offset = "0xCCDFC4", VA = "0xCCDFC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF504", Offset = "0x9EF504")]
		private void <HandleTutorialStart>b__46_0(IInteractable skipButton)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xCCDFCC", Offset = "0xCCDFCC", VA = "0xCCDFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF514", Offset = "0x9EF514")]
		private void <HandleTutorialStart>b__46_1(IInteractable button)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xCCE040", Offset = "0xCCE040", VA = "0xCCE040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF524", Offset = "0x9EF524")]
		private bool <HandleTutorialStart>b__46_2()
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xCCE094", Offset = "0xCCE094", VA = "0xCCE094")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF534", Offset = "0x9EF534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF534", Offset = "0x9EF534")]
		private void <HandleTutorialStart>b__46_3()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xCCE15C", Offset = "0xCCE15C", VA = "0xCCE15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF5A8", Offset = "0x9EF5A8")]
		private bool <HandleTutorialStart>b__46_24()
		{
			return default(bool);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xCCE16C", Offset = "0xCCE16C", VA = "0xCCE16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF5B8", Offset = "0x9EF5B8")]
		private void <HandleTutorialStart>b__46_25()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xCCE1E0", Offset = "0xCCE1E0", VA = "0xCCE1E0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF5C8", Offset = "0x9EF5C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF5C8", Offset = "0x9EF5C8")]
		private void <HandleTutorialStart>b__46_4()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xCCE2A8", Offset = "0xCCE2A8", VA = "0xCCE2A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF63C", Offset = "0x9EF63C")]
		private bool <HandleTutorialStart>b__46_27()
		{
			return default(bool);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xCCE2B8", Offset = "0xCCE2B8", VA = "0xCCE2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF64C", Offset = "0x9EF64C")]
		private void <HandleTutorialStart>b__46_28()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xCCE2FC", Offset = "0xCCE2FC", VA = "0xCCE2FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF65C", Offset = "0x9EF65C")]
		private void <HandleTutorialStart>b__46_29()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xCCE344", Offset = "0xCCE344", VA = "0xCCE344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF66C", Offset = "0x9EF66C")]
		private void <HandleTutorialStart>b__46_5()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xCCE4AC", Offset = "0xCCE4AC", VA = "0xCCE4AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF67C", Offset = "0x9EF67C")]
		private bool <HandleTutorialStart>b__46_30()
		{
			return default(bool);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xCCE4BC", Offset = "0xCCE4BC", VA = "0xCCE4BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF68C", Offset = "0x9EF68C")]
		private bool <HandleTutorialStart>b__46_31()
		{
			return default(bool);
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xCCE4C4", Offset = "0xCCE4C4", VA = "0xCCE4C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF69C", Offset = "0x9EF69C")]
		private void <HandleTutorialStart>b__46_6()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xCCE6A0", Offset = "0xCCE6A0", VA = "0xCCE6A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6AC", Offset = "0x9EF6AC")]
		private void <HandleTutorialStart>b__46_7()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xCCE924", Offset = "0xCCE924", VA = "0xCCE924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6BC", Offset = "0x9EF6BC")]
		private void <HandleTutorialStart>b__46_8()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xCCE98C", Offset = "0xCCE98C", VA = "0xCCE98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6CC", Offset = "0x9EF6CC")]
		private void <HandleTutorialStart>b__46_9()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xCCEC94", Offset = "0xCCEC94", VA = "0xCCEC94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6DC", Offset = "0x9EF6DC")]
		private void <HandleTutorialStart>b__46_10()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xCCEE08", Offset = "0xCCEE08", VA = "0xCCEE08")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF6EC", Offset = "0x9EF6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6EC", Offset = "0x9EF6EC")]
		private void <HandleTutorialStart>b__46_11()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xCCEED0", Offset = "0xCCEED0", VA = "0xCCEED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF760", Offset = "0x9EF760")]
		private bool <HandleTutorialStart>b__46_32()
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xCCEEE0", Offset = "0xCCEEE0", VA = "0xCCEEE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF770", Offset = "0x9EF770")]
		private void <HandleTutorialStart>b__46_33()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xCCEF24", Offset = "0xCCEF24", VA = "0xCCEF24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF780", Offset = "0x9EF780")]
		private void <HandleTutorialStart>b__46_34()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xCCEF70", Offset = "0xCCEF70", VA = "0xCCEF70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF790", Offset = "0x9EF790")]
		private void <HandleTutorialStart>b__46_12()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xCCF0D4", Offset = "0xCCF0D4", VA = "0xCCF0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7A0", Offset = "0x9EF7A0")]
		private void <HandleTutorialStart>b__46_13()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xCCF2AC", Offset = "0xCCF2AC", VA = "0xCCF2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7B0", Offset = "0x9EF7B0")]
		private void <HandleTutorialStart>b__46_14()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xCCF580", Offset = "0xCCF580", VA = "0xCCF580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7C0", Offset = "0x9EF7C0")]
		private void <HandleTutorialStart>b__46_15()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xCCF6F8", Offset = "0xCCF6F8", VA = "0xCCF6F8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF7D0", Offset = "0x9EF7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7D0", Offset = "0x9EF7D0")]
		private void <HandleTutorialStart>b__46_16()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xCCF7C0", Offset = "0xCCF7C0", VA = "0xCCF7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF844", Offset = "0x9EF844")]
		private bool <HandleTutorialStart>b__46_35()
		{
			return default(bool);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xCCF7D0", Offset = "0xCCF7D0", VA = "0xCCF7D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF854", Offset = "0x9EF854")]
		private void <HandleTutorialStart>b__46_36()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xCCF81C", Offset = "0xCCF81C", VA = "0xCCF81C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF864", Offset = "0x9EF864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF864", Offset = "0x9EF864")]
		private void <HandleTutorialStart>b__46_17()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xCCF8E4", Offset = "0xCCF8E4", VA = "0xCCF8E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF8D8", Offset = "0x9EF8D8")]
		private bool <HandleTutorialStart>b__46_37()
		{
			return default(bool);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xCCF8F4", Offset = "0xCCF8F4", VA = "0xCCF8F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF8E8", Offset = "0x9EF8E8")]
		private void <HandleTutorialStart>b__46_38()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xCCF8FC", Offset = "0xCCF8FC", VA = "0xCCF8FC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF8F8", Offset = "0x9EF8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF8F8", Offset = "0x9EF8F8")]
		private void <HandleTutorialStart>b__46_18()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xCCF9C4", Offset = "0xCCF9C4", VA = "0xCCF9C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF96C", Offset = "0x9EF96C")]
		private bool <HandleTutorialStart>b__46_39()
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xCCF9D4", Offset = "0xCCF9D4", VA = "0xCCF9D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF97C", Offset = "0x9EF97C")]
		private void <HandleTutorialStart>b__46_40()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xCCF9DC", Offset = "0xCCF9DC", VA = "0xCCF9DC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EF98C", Offset = "0x9EF98C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF98C", Offset = "0x9EF98C")]
		private void <HandleTutorialStart>b__46_19()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xCCFAA4", Offset = "0xCCFAA4", VA = "0xCCFAA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFA00", Offset = "0x9EFA00")]
		private bool <HandleTutorialStart>b__46_41()
		{
			return default(bool);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xCCFAB4", Offset = "0xCCFAB4", VA = "0xCCFAB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFA10", Offset = "0x9EFA10")]
		private void <HandleTutorialStart>b__46_42()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xCCFABC", Offset = "0xCCFABC", VA = "0xCCFABC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EFA20", Offset = "0x9EFA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFA20", Offset = "0x9EFA20")]
		private void <HandleTutorialStart>b__46_20()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xCCFB84", Offset = "0xCCFB84", VA = "0xCCFB84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFA94", Offset = "0x9EFA94")]
		private bool <HandleTutorialStart>b__46_43()
		{
			return default(bool);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xCCFB94", Offset = "0xCCFB94", VA = "0xCCFB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFAA4", Offset = "0x9EFAA4")]
		private void <HandleTutorialStart>b__46_44()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xCCFB9C", Offset = "0xCCFB9C", VA = "0xCCFB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFAB4", Offset = "0x9EFAB4")]
		private void <HandleTutorialStart>b__46_21()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xCD0210", Offset = "0xCD0210", VA = "0xCD0210")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EFAC4", Offset = "0x9EFAC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFAC4", Offset = "0x9EFAC4")]
		private void <HandleTutorialStart>b__46_45(IInteractable button)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xCD02D8", Offset = "0xCD02D8", VA = "0xCD02D8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EFB38", Offset = "0x9EFB38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFB38", Offset = "0x9EFB38")]
		private void <HandleTutorialStart>b__46_22()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xCD03A0", Offset = "0xCD03A0", VA = "0xCD03A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFBAC", Offset = "0x9EFBAC")]
		private bool <HandleTutorialStart>b__46_47()
		{
			return default(bool);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xCD03B0", Offset = "0xCD03B0", VA = "0xCD03B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFBBC", Offset = "0x9EFBBC")]
		private void <HandleTutorialStart>b__46_48()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xCD03B8", Offset = "0xCD03B8", VA = "0xCD03B8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EFBCC", Offset = "0x9EFBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFBCC", Offset = "0x9EFBCC")]
		private void <HandleTutorialStart>b__46_23()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xCD0480", Offset = "0xCD0480", VA = "0xCD0480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFC40", Offset = "0x9EFC40")]
		private bool <HandleTutorialStart>b__46_49()
		{
			return default(bool);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xCD0490", Offset = "0xCD0490", VA = "0xCD0490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFC50", Offset = "0x9EFC50")]
		private void <HandleTutorialStart>b__46_50()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xCD0498", Offset = "0xCD0498", VA = "0xCD0498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFC60", Offset = "0x9EFC60")]
		private void <AddListenersToPanelElements>b__49_6(IInteractable text)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xCD04A4", Offset = "0xCD04A4", VA = "0xCD04A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFC70", Offset = "0x9EFC70")]
		private void <AddListenersToPanelElements>b__49_7(IInteractable playButton)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xCD04B0", Offset = "0xCD04B0", VA = "0xCD04B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFC80", Offset = "0x9EFC80")]
		private void <AddListenersToPanelElements>b__49_0(IInteractable button)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xCD0514", Offset = "0xCD0514", VA = "0xCD0514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFC90", Offset = "0x9EFC90")]
		private void <AddListenersToPanelElements>b__49_1(IInteractable button)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xCD05CC", Offset = "0xCD05CC", VA = "0xCD05CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCA0", Offset = "0x9EFCA0")]
		private void <AddListenersToPanelElements>b__49_2(IInteractable button)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xCD0630", Offset = "0xCD0630", VA = "0xCD0630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCB0", Offset = "0x9EFCB0")]
		private void <AddListenersToPanelElements>b__49_3(IInteractable button)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xCD06E8", Offset = "0xCD06E8", VA = "0xCD06E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCC0", Offset = "0x9EFCC0")]
		private void <AddListenersToPanelElements>b__49_4(IInteractable text)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xCD06F4", Offset = "0xCD06F4", VA = "0xCD06F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCD0", Offset = "0x9EFCD0")]
		private void <AddListenersToPanelElements>b__49_5(IInteractable playButton)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xCD0700", Offset = "0xCD0700", VA = "0xCD0700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCE0", Offset = "0x9EFCE0")]
		private void <LoadSoundEffectsUsingAddressables>b__50_0(AsyncOperationHandle<AudioClip> operation)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xCD0764", Offset = "0xCD0764", VA = "0xCD0764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCF0", Offset = "0x9EFCF0")]
		private void <LoadSoundEffectsUsingAddressables>b__50_1(AsyncOperationHandle<AudioClip> operation)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xCD07C8", Offset = "0xCD07C8", VA = "0xCD07C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD00", Offset = "0x9EFD00")]
		private void <LoadSoundEffectsUsingAddressables>b__50_2(AsyncOperationHandle<AudioClip> operation)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xCD082C", Offset = "0xCD082C", VA = "0xCD082C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD10", Offset = "0x9EFD10")]
		private void <CleanupTutorial>b__57_0()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xCD083C", Offset = "0xCD083C", VA = "0xCD083C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD20", Offset = "0x9EFD20")]
		private void <SetupTutorialContinueButton>b__60_0(IInteractable button)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xCD0980", Offset = "0xCD0980", VA = "0xCD0980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD30", Offset = "0x9EFD30")]
		private void <ChangeFromOnePanelToAnother>b__63_0()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xCD0A08", Offset = "0xCD0A08", VA = "0xCD0A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD40", Offset = "0x9EFD40")]
		private void <HandleResumeEvent>b__68_0()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xCD0A14", Offset = "0xCD0A14", VA = "0xCD0A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD50", Offset = "0x9EFD50")]
		private bool <HandleResumeEvent>b__68_1()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xCD0A74", Offset = "0xCD0A74", VA = "0xCD0A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD60", Offset = "0x9EFD60")]
		private void <SetupRedoTutorialInQuitPopup>b__74_0(IInteractable tutorialButton)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xCD0ABC", Offset = "0xCD0ABC", VA = "0xCD0ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD70", Offset = "0x9EFD70")]
		private void <SwitchRedoTutorialButtonStateInQuitPopup>b__75_0()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xCD0E58", Offset = "0xCD0E58", VA = "0xCD0E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD80", Offset = "0x9EFD80")]
		private void <SwitchRedoTutorialButtonStateInQuitPopup>b__75_1()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class VRCoachMarkView : UIView
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UIView InitialCoachMark;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform CoachMarkTransitionPoint;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public PopupButton TutorialContinueButton;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public VRButton TutorialSkipButton;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xCD5818", Offset = "0xCD5818", VA = "0xCD5818", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xCD5974", Offset = "0xCD5974", VA = "0xCD5974")]
		public VRCoachMarkView()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Storyline
{
	[Token(Token = "0x200024A")]
	public interface IStorylineActor
	{
		[Token(Token = "0x170003A2")]
		string Name
		{
			[Token(Token = "0x60014A9")]
			get;
			[Token(Token = "0x60014AA")]
			set;
		}
	}
	[Token(Token = "0x200024B")]
	public class StorylineManager
	{
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E33B4", Offset = "0x9E33B4")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int triggerItemId;

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xCC7008", Offset = "0xCC7008", VA = "0xCC7008")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0xCC7018", Offset = "0xCC7018", VA = "0xCC7018")]
			internal bool <Analyze>b__0(TriggerItem item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<int, List<TriggerItem>> _map;

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xCC6078", Offset = "0xCC6078", VA = "0xCC6078")]
		public StorylineManager(string storylineJson)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xCC6CA8", Offset = "0xCC6CA8", VA = "0xCC6CA8")]
		public void Analyze(int chatbotId, int triggerItemId, StorylineActionOrder actionOrder, Func<string, IStorylineActor> actorGetter)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xCC6100", Offset = "0xCC6100", VA = "0xCC6100")]
		private void DecodeJson(string jsonData)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public enum StorylineActionOrder
	{
		[Token(Token = "0x4000E6B")]
		BeforeSound,
		[Token(Token = "0x4000E6C")]
		AfterSound,
		[Token(Token = "0x4000E6D")]
		Immediate
	}
	[Token(Token = "0x200024D")]
	public class StorylineActor
	{
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ActorName;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ActionName;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ActionParameter;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StorylineActionOrder ActionOrder;

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xCC6070", Offset = "0xCC6070", VA = "0xCC6070")]
		public StorylineActor()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class TriggerItem
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int TriggerItemId;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<StorylineActor> StorylineActors;

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xCC7010", Offset = "0xCC7010", VA = "0xCC7010")]
		public TriggerItem()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.SceneManager
{
	[Token(Token = "0x200024F")]
	public class VRIntermediateSceneManager : VRSceneManager
	{
		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E33C4", Offset = "0x9E33C4")]
		private sealed class <>c__DisplayClass17_0
		{
			[StructLayout(3)]
			[Token(Token = "0x2000497")]
			private struct <<StartLoadingScene>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x400177D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400177E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400177F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass17_0 <>4__this;

				[Token(Token = "0x6001DF6")]
				[Address(RVA = "0xA83260", Offset = "0xA83260", VA = "0xA83260", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DF7")]
				[Address(RVA = "0xA83268", Offset = "0xA83268", VA = "0xA83268", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRIntermediateSceneManager <>4__this;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.AsyncOperation loadScene;

			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xBB935C", Offset = "0xBB935C", VA = "0xBB935C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xBB9458", Offset = "0xBB9458", VA = "0xBB9458")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F31CC", Offset = "0x9F31CC")]
			internal void <StartLoadingScene>b__0()
			{
			}
		}

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string s_NextSceneName;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AsyncOperationHandle<SceneInstance> _sceneToBeLoadedButNotActivated;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private SkipCutsceneView _skipCutsceneView;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Dictionary<string, CutsceneTeleportPoint> _cutscenePointForNextScene;

		[Token(Token = "0x170003A3")]
		public new static VRIntermediateSceneManager Instance
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xBB8904", Offset = "0xBB8904", VA = "0xBB8904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000032")]
		public event Action OnCutsceneSkip
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xBB8988", Offset = "0xBB8988", VA = "0xBB8988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD90", Offset = "0x9EFD90")]
			add
			{
			}
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xBB8A30", Offset = "0xBB8A30", VA = "0xBB8A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFDA0", Offset = "0x9EFDA0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event Action OnHomeButtonPressed
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xBB8AD8", Offset = "0xBB8AD8", VA = "0xBB8AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFDB0", Offset = "0x9EFDB0")]
			add
			{
			}
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xBB8B84", Offset = "0xBB8B84", VA = "0xBB8B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFDC0", Offset = "0x9EFDC0")]
			remove
			{
			}
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xBB8C30", Offset = "0xBB8C30", VA = "0xBB8C30", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xBB8CB4", Offset = "0xBB8CB4", VA = "0xBB8CB4", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xBB904C", Offset = "0xBB904C", VA = "0xBB904C", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xBB90C0", Offset = "0xBB90C0", VA = "0xBB90C0", Slot = "22")]
		protected override void OnPause(bool isBackground)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xBB9184", Offset = "0xBB9184", VA = "0xBB9184", Slot = "23")]
		protected override void OnResume(bool isBackground)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xBB9248", Offset = "0xBB9248", VA = "0xBB9248")]
		public void StartLoadingScene()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xBB8EC8", Offset = "0xBB8EC8", VA = "0xBB8EC8")]
		private void SetPlayerPositionForCutscene()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xBB9364", Offset = "0xBB9364", VA = "0xBB9364")]
		private void SkipCutscene()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xBB93D8", Offset = "0xBB93D8", VA = "0xBB93D8")]
		private void HandleOnBackButtonPressed()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xBB93F4", Offset = "0xBB93F4", VA = "0xBB93F4")]
		private void HandleHomeButtonPressed(IInteractable button)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xBB9444", Offset = "0xBB9444", VA = "0xBB9444")]
		public VRIntermediateSceneManager()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xBB944C", Offset = "0xBB944C", VA = "0xBB944C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFDD0", Offset = "0x9EFDD0")]
		private void <StartComponent>b__13_0(IInteractable button)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xBB9450", Offset = "0xBB9450", VA = "0xBB9450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFDE0", Offset = "0x9EFDE0")]
		private void <StartComponent>b__13_1(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000250")]
	public abstract class VRPlayableSceneManager : VRSceneManager, ICoachMarkTrigger
	{
		[StructLayout(3)]
		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E33D4", Offset = "0x9E33D4")]
		private struct <AwakeComponent>d__53 : IAsyncStateMachine
		{
			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayableSceneManager <>4__this;

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xA83288", Offset = "0xA83288", VA = "0xA83288", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xA83290", Offset = "0xA83290", VA = "0xA83290", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E33E4", Offset = "0x9E33E4")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ChapterIntroView view;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRPlayableSceneManager <>4__this;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xBBF004", Offset = "0xBBF004", VA = "0xBBF004")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xBBF00C", Offset = "0xBBF00C", VA = "0xBBF00C")]
			internal void <StartComponent>b__0()
			{
			}

			[Token(Token = "0x6001C85")]
			[Address(RVA = "0xBBF0EC", Offset = "0xBBF0EC", VA = "0xBBF0EC")]
			internal void <StartComponent>b__1()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E33F4", Offset = "0x9E33F4")]
		private struct <StartComponent>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayableSceneManager <>4__this;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass54_0 <>8__1;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GameObject> <>u__1;

			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xA832C4", Offset = "0xA832C4", VA = "0xA832C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xA832CC", Offset = "0xA832CC", VA = "0xA832CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3404", Offset = "0x9E3404")]
		private struct <DisplaySceneEndPopup>d__71 : IAsyncStateMachine
		{
			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayableSceneManager <>4__this;

			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int numberOfAvailableScenes;

			[Token(Token = "0x40015C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001C88")]
			[Address(RVA = "0xA8329C", Offset = "0xA8329C", VA = "0xA8329C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C89")]
			[Address(RVA = "0xA832A4", Offset = "0xA832A4", VA = "0xA832A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3414", Offset = "0x9E3414")]
		private sealed class <>c__DisplayClass78_0
		{
			[Token(Token = "0x40015C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRCharacter character;

			[Token(Token = "0x40015C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRPlayableSceneManager <>4__this;

			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0xBBC73C", Offset = "0xBBC73C", VA = "0xBBC73C")]
			public <>c__DisplayClass78_0()
			{
			}

			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0xBBF190", Offset = "0xBBF190", VA = "0xBBF190")]
			internal void <SetupCharacters>b__0(IInteractable interactable)
			{
			}

			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0xBBF34C", Offset = "0xBBF34C", VA = "0xBBF34C")]
			internal void <SetupCharacters>b__1(IInteractable interactable)
			{
			}

			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xBBF628", Offset = "0xBBF628", VA = "0xBBF628")]
			internal void <SetupCharacters>b__2(IInteractable interactable)
			{
			}

			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xBBF6D4", Offset = "0xBBF6D4", VA = "0xBBF6D4")]
			internal void <SetupCharacters>b__3(IInteractable interactable)
			{
			}

			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xBBF794", Offset = "0xBBF794", VA = "0xBBF794")]
			internal void <SetupCharacters>b__4(IInteractable interactable)
			{
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3424", Offset = "0x9E3424")]
		private sealed class <>c__DisplayClass90_0
		{
			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneEndPopup popup;

			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRPlayableSceneManager <>4__this;

			[Token(Token = "0x6001C90")]
			[Address(RVA = "0xBBD3F0", Offset = "0xBBD3F0", VA = "0xBBD3F0")]
			public <>c__DisplayClass90_0()
			{
			}

			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xBBF888", Offset = "0xBBF888", VA = "0xBBF888")]
			internal void <HandleCategoryCompleted>b__0(IInteractable button)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3434", Offset = "0x9E3434")]
		private struct <HandleControllerHoldStarted>d__93 : IAsyncStateMachine
		{
			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayableSceneManager <>4__this;

			[Token(Token = "0x40015C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xA832B0", Offset = "0xA832B0", VA = "0xA832B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xA832B8", Offset = "0xA832B8", VA = "0xA832B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3444", Offset = "0x9E3444")]
		private struct <<ShowStartRecordingCoachMark>g__ShowCoachmark|64_0>d : IAsyncStateMachine
		{
			[Token(Token = "0x40015CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRPlayableSceneManager <>4__this;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xA83274", Offset = "0xA83274", VA = "0xA83274", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xA8327C", Offset = "0xA8327C", VA = "0xA8327C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E7A")]
		[DebugGroup]
		private const string DEBUG_GROUP = "AVERAGE_RATING";

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public bool IsRecordingForbidden;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected List<VRCharacter> _characters;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8668", Offset = "0x9E8668")]
		private VRCharacter <ActiveCharacterBeforePause>k__BackingField;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Lazy<QuitPopup> _lazyQuitPopup;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Lazy<SceneEndPopup> _lazySceneEndPopup;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Lazy<RecalibratePopup> _lazyRecalibratePopup;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Lazy<ReviewUsPopup> _lazyReviewUsPopup;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Lazy<CategoryCompletedPopup> _lazyLessonsCompleteCongratsPopup;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected SpeechRecognizer _speechRecognizer;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[CanBeNull]
		private ATiStudios.Foundation.TimingHandler _timingShowCoachMark;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[CanBeNull]
		private ATiStudios.Foundation.TimingHandler _timingHandlerStartRecognitionOnEnter;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool _isTutorialDone;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		[HideInInspector]
		public bool IsSceneCompleted;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		private bool _hasStartedListening;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<float> CompletedScenesRating;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<AudioSource> _environmentAudioSource;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GameObject[] _environmentAudioGameObjects;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private float _snapTurnValue;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int _numberOfStarsForCompletingAScene;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 _snapTurnVector;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private AsyncOperationHandle<GameObject> _chapterPrefab;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected string ChapterTitleLocalization;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected string ChapterDescriptionLocalization;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected string ChapterEndTitleLocalization;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected string ChapterEndDescriptionLocalization;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected AbstractAchievementsManager _achievementManager;

		[Token(Token = "0x170003A4")]
		public virtual bool CanStartRecording
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xBB981C", Offset = "0xBB981C", VA = "0xBB981C", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A5")]
		[CanBeNull]
		protected VRCharacter _currentActiveCharacter
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xBB9A68", Offset = "0xBB9A68", VA = "0xBB9A68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		[CanBeNull]
		public VRCharacter ActiveCharacterBeforePause
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xBB9C00", Offset = "0xBB9C00", VA = "0xBB9C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFDF0", Offset = "0x9EFDF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0xBB9C08", Offset = "0xBB9C08", VA = "0xBB9C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFE00", Offset = "0x9EFE00")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public QuitPopup QuitPopup
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0xBB9C10", Offset = "0xBB9C10", VA = "0xBB9C10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public SceneEndPopup SceneEndPopup
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0xBB9C70", Offset = "0xBB9C70", VA = "0xBB9C70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		public RecalibratePopup RecalibratePopup
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xBB9CD0", Offset = "0xBB9CD0", VA = "0xBB9CD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		public ReviewUsPopup ReviewUsPopup
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xBB9D30", Offset = "0xBB9D30", VA = "0xBB9D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		public CategoryCompletedPopup LessonsCompleteCongratulationsPopup
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xBB9D90", Offset = "0xBB9D90", VA = "0xBB9D90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		public string SceneName
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xBB9DF0", Offset = "0xBB9DF0", VA = "0xBB9DF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		public bool IsTutorialDone
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xBB9F78", Offset = "0xBB9F78", VA = "0xBB9F78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xBB9F80", Offset = "0xBB9F80", VA = "0xBB9F80")]
			set
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<string> OnCoachMark
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xBB9E20", Offset = "0xBB9E20", VA = "0xBB9E20", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFE10", Offset = "0x9EFE10")]
			add
			{
			}
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xBB9ECC", Offset = "0xBB9ECC", VA = "0xBB9ECC", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFE20", Offset = "0x9EFE20")]
			remove
			{
			}
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xBB9F8C", Offset = "0xBB9F8C", VA = "0xBB9F8C")]
		protected VRPlayableSceneManager()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xBBA1C8", Offset = "0xBBA1C8", VA = "0xBBA1C8", Slot = "11")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EFE30", Offset = "0x9EFE30")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xBBA274", Offset = "0xBBA274", VA = "0xBBA274", Slot = "12")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EFE94", Offset = "0x9EFE94")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xBBA330", Offset = "0xBBA330", VA = "0xBBA330", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xBBA934", Offset = "0xBBA934", VA = "0xBBA934", Slot = "23")]
		protected override void OnResume(bool isBackground)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xBBAB14", Offset = "0xBBAB14", VA = "0xBBAB14", Slot = "22")]
		protected override void OnPause(bool isBackground)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xBBAD18", Offset = "0xBBAD18", VA = "0xBBAD18")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xBBAF20", Offset = "0xBBAF20", VA = "0xBBAF20")]
		public float ComputeSceneSuccessRating()
		{
			return default(float);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xBBAA40", Offset = "0xBBAA40", VA = "0xBBAA40")]
		public void ChangeEnvironmentAudioState(bool isMuted)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xBBB0EC", Offset = "0xBBB0EC", VA = "0xBBB0EC")]
		protected void StartSpeechRecognition()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xBBB2DC", Offset = "0xBBB2DC", VA = "0xBBB2DC")]
		protected void StopSpeechRecognition()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xBBB3E8", Offset = "0xBBB3E8", VA = "0xBBB3E8")]
		protected void CancelSpeechRecognizer()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xBBB4E8", Offset = "0xBBB4E8", VA = "0xBBB4E8")]
		protected void ShowStartRecordingCoachMark(float delay = 1f)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xBBB5C4", Offset = "0xBBB5C4", VA = "0xBBB5C4")]
		protected void CancelShowingStartRecordingCoachMark()
		{
		}

		[Token(Token = "0x60014DE")]
		protected abstract void SetupCharacter(VRCharacter character);

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xBBB5D8", Offset = "0xBBB5D8", VA = "0xBBB5D8")]
		protected bool ShouldShowReviewUsPopup()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xBBB798", Offset = "0xBBB798", VA = "0xBBB798")]
		protected void MarkLessonAsCompleted()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xBBBC60", Offset = "0xBBBC60", VA = "0xBBBC60")]
		protected void MarkCategoryAsCompleted()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xBBBDFC", Offset = "0xBBBDFC", VA = "0xBBBDFC")]
		protected void DisplayLessonsCompletedCongratsPopup()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xBBBFB0", Offset = "0xBBBFB0", VA = "0xBBBFB0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EFEF8", Offset = "0x9EFEF8")]
		protected void DisplaySceneEndPopup(int numberOfAvailableScenes)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xBBC074", Offset = "0xBBC074", VA = "0xBBC074")]
		protected Tuple<string, string> GetIntroLocalizations(LessonType lessonType, int chapterNumber, string descriptionKey)
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xBBC1B0", Offset = "0xBBC1B0", VA = "0xBBC1B0")]
		protected Tuple<string, string> GetEndLocalizations(LessonType lessonType, int chapterNumber, string descriptionKey)
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xBBC310", Offset = "0xBBC310", VA = "0xBBC310")]
		private void UpdateEnvironmentAudio(bool isHeadphoneConnected)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xBBC3AC", Offset = "0xBBC3AC", VA = "0xBBC3AC")]
		private void ShowUserFeedbackState(UserFeedbackPanelState state)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xBBC404", Offset = "0xBBC404", VA = "0xBBC404")]
		private void HandleControllerOnBackButtonPressed()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xBBAD40", Offset = "0xBBAD40", VA = "0xBBAD40")]
		private void SendLevelQuitAnalyticsEvent(VRCharacter character)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xBBC41C", Offset = "0xBBC41C", VA = "0xBBC41C")]
		private void SetupCharacters()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xBBC744", Offset = "0xBBC744", VA = "0xBBC744")]
		private void SetupSpeechRecognition()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xBBC8C8", Offset = "0xBBC8C8", VA = "0xBBC8C8")]
		private QuitPopup SetupQuitPopup()
		{
			return null;
		}

		[Token(Token = "0x60014ED")]
		protected abstract void SetupSceneEndPopup(ref SceneEndPopup sceneEndPopup);

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xBBCAD0", Offset = "0xBBCAD0", VA = "0xBBCAD0")]
		private SceneEndPopup GetSceneEndPopup()
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xBBCC5C", Offset = "0xBBCC5C", VA = "0xBBCC5C")]
		private RecalibratePopup GetRecalibratePopup()
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xBBCCC0", Offset = "0xBBCCC0", VA = "0xBBCCC0")]
		private ReviewUsPopup GetReviewUsPopup()
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xBBCD24", Offset = "0xBBCD24", VA = "0xBBCD24")]
		private CategoryCompletedPopup GetLessonsCompleteCongratulationsPopup()
		{
			return null;
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xBBCD88", Offset = "0xBBCD88", VA = "0xBBCD88")]
		private void SetupEnvironmentAudio()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xBBCF3C", Offset = "0xBBCF3C", VA = "0xBBCF3C")]
		private void HandleHomeButton(IInteractable button)
		{
		}

		[Token(Token = "0x60014F4")]
		protected abstract void HandleRedoButton(IInteractable button);

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xBBCFD8", Offset = "0xBBCFD8", VA = "0xBBCFD8")]
		private void HandleOnSceneDidAppear()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xBBD0B4", Offset = "0xBBD0B4", VA = "0xBBD0B4")]
		private void HandleCategoryCompleted(int maxNumberOfAvailableScenes)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xBBD3F8", Offset = "0xBBD3F8", VA = "0xBBD3F8")]
		private void HandleMicrophoneCalibratorOnCompletionCallback(float newCalibratedValue)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xBBD55C", Offset = "0xBBD55C", VA = "0xBBD55C")]
		private void HandleControllerOnHoldWillStart()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xBBD5B4", Offset = "0xBBD5B4", VA = "0xBBD5B4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9EFF5C", Offset = "0x9EFF5C")]
		private void HandleControllerHoldStarted()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xBBD67C", Offset = "0xBBD67C", VA = "0xBBD67C")]
		private void HandleControllerHoldEnded()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xBBD6E0", Offset = "0xBBD6E0", VA = "0xBBD6E0")]
		private void HandleControllerOnHoldCanceled()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xBBD790", Offset = "0xBBD790", VA = "0xBBD790")]
		private void HandleControllerDisconnected(AbstractVrHandController controller)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xBBD838", Offset = "0xBBD838", VA = "0xBBD838")]
		private void HandleControllerConnected(AbstractVrHandController controller)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xBBD864", Offset = "0xBBD864", VA = "0xBBD864")]
		private void HandleSwipe(VRInputModule.SwipeDirection swipeDirection)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xBBDA3C", Offset = "0xBBDA3C", VA = "0xBBDA3C")]
		private void SetupSpeechRecognizerListeners()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xBBA3F0", Offset = "0xBBA3F0", VA = "0xBBA3F0")]
		private void RemoveSpeechRecognizerListeners()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xBBDCA4", Offset = "0xBBDCA4", VA = "0xBBDCA4")]
		private void HandleSpeechRecognizerOnListeningEnd(SpeechRecognizer recognizer)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xBBDCCC", Offset = "0xBBDCCC", VA = "0xBBDCCC")]
		private void HandleSpeechRecognizerOnCancel(SpeechRecognizer recognizer)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xBBDDDC", Offset = "0xBBDDDC", VA = "0xBBDDDC")]
		private void HandleSpeechRecognizerOnError(SpeechRecognizer recognizer, ATiStudios.Foundation.Error error)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xBBDFA0", Offset = "0xBBDFA0", VA = "0xBBDFA0")]
		private void HandleSpeechRecognizerOnUpdateVolume(SpeechRecognizer recognizer, float volume)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xBBDFD8", Offset = "0xBBDFD8", VA = "0xBBDFD8")]
		private void HandleSpeechRecognizerOnResult(SpeechRecognizer recognizer, string recognizedText, bool isFinal)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xBBE208", Offset = "0xBBE208", VA = "0xBBE208")]
		private void HandleSpeechRecognizerRecognizingStart(SpeechRecognizer obj)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xBBE2C0", Offset = "0xBBE2C0", VA = "0xBBE2C0")]
		private void HandleSpeechRecognizerListeningStart(SpeechRecognizer recognizer)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xBBE454", Offset = "0xBBE454", VA = "0xBBE454")]
		private void SetupInputListeners()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xBBA658", Offset = "0xBBA658", VA = "0xBBA658")]
		private void RemoveInputListeners()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xBBE730", Offset = "0xBBE730", VA = "0xBBE730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFFC0", Offset = "0x9EFFC0")]
		[DebuggerHidden]
		private void <>n__0()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xBBE738", Offset = "0xBBE738", VA = "0xBBE738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFFF8", Offset = "0x9EFFF8")]
		[DebuggerHidden]
		private void <>n__1()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xBBE740", Offset = "0xBBE740", VA = "0xBBE740")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0030", Offset = "0x9F0030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0030", Offset = "0x9F0030")]
		private void <ShowStartRecordingCoachMark>g__ShowCoachmark|64_0()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xBBE808", Offset = "0xBBE808", VA = "0xBBE808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F00A4", Offset = "0x9F00A4")]
		private bool <DisplaySceneEndPopup>b__71_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xBBE850", Offset = "0xBBE850", VA = "0xBBE850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F00B4", Offset = "0x9F00B4")]
		private bool <DisplaySceneEndPopup>b__71_1()
		{
			return default(bool);
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xBBE894", Offset = "0xBBE894", VA = "0xBBE894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F00C4", Offset = "0x9F00C4")]
		private void <DisplaySceneEndPopup>b__71_2()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xBBE9B0", Offset = "0xBBE9B0", VA = "0xBBE9B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F00D4", Offset = "0x9F00D4")]
		private void <DisplaySceneEndPopup>b__71_3()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xBBEA70", Offset = "0xBBEA70", VA = "0xBBEA70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F00E4", Offset = "0x9F00E4")]
		private void <DisplaySceneEndPopup>b__71_4()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xBBEAB8", Offset = "0xBBEAB8", VA = "0xBBEAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F00F4", Offset = "0x9F00F4")]
		private void <SetupQuitPopup>b__80_0(IInteractable button)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xBBEAC0", Offset = "0xBBEAC0", VA = "0xBBEAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0104", Offset = "0x9F0104")]
		private void <SetupQuitPopup>b__80_1(IInteractable button)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xBBEAC4", Offset = "0xBBEAC4", VA = "0xBBEAC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0114", Offset = "0x9F0114")]
		private void <HandleSpeechRecognizerOnCancel>g__TimingHandlerAction|102_0()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xBBEB7C", Offset = "0xBBEB7C", VA = "0xBBEB7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0124", Offset = "0x9F0124")]
		private void <HandleSpeechRecognizerOnError>g__TimingHandlerAction|103_0()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public abstract class VRStorySceneManager : VRPlayableSceneManager
	{
		[StructLayout(3)]
		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3454", Offset = "0x9E3454")]
		private struct <StartComponent>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRStorySceneManager <>4__this;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AbstractLeaderboardManager <>7__wrap1;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<AbstractLeaderboardManager.UserDetails> <>u__2;

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xA84378", Offset = "0xA84378", VA = "0xA84378", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xA84380", Offset = "0xA84380", VA = "0xA84380", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3464", Offset = "0x9E3464")]
		private sealed class <>c__DisplayClass23_0
		{
			[StructLayout(3)]
			[Token(Token = "0x2000498")]
			private struct <<SetupCharacter>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001780")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001781")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001782")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public AbstractLesson lesson;

				[Token(Token = "0x4001783")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public <>c__DisplayClass23_0 <>4__this;

				[Token(Token = "0x4001784")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int <itemIndex>5__2;

				[Token(Token = "0x4001785")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private object <>u__1;

				[Token(Token = "0x6001DF8")]
				[Address(RVA = "0xA832D8", Offset = "0xA832D8", VA = "0xA832D8", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DF9")]
				[Address(RVA = "0xA832E0", Offset = "0xA832E0", VA = "0xA832E0", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x2000499")]
			private struct <<SetupCharacter>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001786")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001787")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001788")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public Dictionary<string, object> additionalData;

				[Token(Token = "0x4001789")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public <>c__DisplayClass23_0 <>4__this;

				[Token(Token = "0x400178A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private object <>u__1;

				[Token(Token = "0x6001DFA")]
				[Address(RVA = "0xA832EC", Offset = "0xA832EC", VA = "0xA832EC", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DFB")]
				[Address(RVA = "0xA832F4", Offset = "0xA832F4", VA = "0xA832F4", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRStorySceneManager <>4__this;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRCharacter character;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> <>9__3;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<string, IStorylineActor> <>9__4;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Func<string, IStorylineActor> <>9__6;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Func<string, IStorylineActor> <>9__9;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action <>9__7;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Func<string, IStorylineActor> <>9__11;

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xBC165C", Offset = "0xBC165C", VA = "0xBC165C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xBC2004", Offset = "0xBC2004", VA = "0xBC2004")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F3290", Offset = "0x9F3290")]
			internal void <SetupCharacter>b__0(AbstractLesson lesson, OutputData outputData)
			{
			}

			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xBC20C8", Offset = "0xBC20C8", VA = "0xBC20C8")]
			internal bool <SetupCharacter>b__3()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xBC21A0", Offset = "0xBC21A0", VA = "0xBC21A0")]
			internal IStorylineActor <SetupCharacter>b__4(string objectName)
			{
				return null;
			}

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0xBC2280", Offset = "0xBC2280", VA = "0xBC2280")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F32F4", Offset = "0x9F32F4")]
			internal void <SetupCharacter>b__1(Dictionary<string, object> additionalData)
			{
			}

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0xBC2340", Offset = "0xBC2340", VA = "0xBC2340")]
			internal IStorylineActor <SetupCharacter>b__6(string objectName)
			{
				return null;
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0xBC2420", Offset = "0xBC2420", VA = "0xBC2420")]
			internal IStorylineActor <SetupCharacter>b__9(string objectName)
			{
				return null;
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xBC2500", Offset = "0xBC2500", VA = "0xBC2500")]
			internal void <SetupCharacter>b__7()
			{
			}

			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0xBC26B8", Offset = "0xBC26B8", VA = "0xBC26B8")]
			internal void <SetupCharacter>b__2(Dictionary<string, object> additionalData)
			{
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xBC2870", Offset = "0xBC2870", VA = "0xBC2870")]
			internal IStorylineActor <SetupCharacter>b__11(string objectName)
			{
				return null;
			}
		}

		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3474", Offset = "0x9E3474")]
		private sealed class <>c__DisplayClass23_1
		{
			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string objectName;

			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0xCC4AF4", Offset = "0xCC4AF4", VA = "0xCC4AF4")]
			public <>c__DisplayClass23_1()
			{
			}

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xCC4AFC", Offset = "0xCC4AFC", VA = "0xCC4AFC")]
			internal bool <SetupCharacter>b__5(IStorylineActor female)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3484", Offset = "0x9E3484")]
		private sealed class <>c__DisplayClass23_2
		{
			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string objectName;

			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xCC4BC4", Offset = "0xCC4BC4", VA = "0xCC4BC4")]
			public <>c__DisplayClass23_2()
			{
			}

			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xCC4BCC", Offset = "0xCC4BCC", VA = "0xCC4BCC")]
			internal bool <SetupCharacter>b__8(IStorylineActor female)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3494", Offset = "0x9E3494")]
		private sealed class <>c__DisplayClass23_3
		{
			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string objectName;

			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xCC4C94", Offset = "0xCC4C94", VA = "0xCC4C94")]
			public <>c__DisplayClass23_3()
			{
			}

			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xCC4C9C", Offset = "0xCC4C9C", VA = "0xCC4C9C")]
			internal bool <SetupCharacter>b__10(IStorylineActor female)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E34A4", Offset = "0x9E34A4")]
		private sealed class <>c__DisplayClass23_4
		{
			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string objectName;

			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xCC4D64", Offset = "0xCC4D64", VA = "0xCC4D64")]
			public <>c__DisplayClass23_4()
			{
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xCC4D6C", Offset = "0xCC4D6C", VA = "0xCC4D6C")]
			internal bool <SetupCharacter>b__12(IStorylineActor female)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E34B4", Offset = "0x9E34B4")]
		private sealed class <>c__DisplayClass24_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200049A")]
			private struct <<SetupSceneEndPopup>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x400178B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400178C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400178D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass24_0 <>4__this;

				[Token(Token = "0x6001DFC")]
				[Address(RVA = "0xA8432C", Offset = "0xA8432C", VA = "0xA8432C", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DFD")]
				[Address(RVA = "0xA84334", Offset = "0xA84334", VA = "0xA84334", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40015E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneEndPopup popup;

			[Token(Token = "0x40015E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRStorySceneManager <>4__this;

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xCC4E34", Offset = "0xCC4E34", VA = "0xCC4E34")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xCC4E3C", Offset = "0xCC4E3C", VA = "0xCC4E3C")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F3358", Offset = "0x9F3358")]
			internal void <SetupSceneEndPopup>b__0(IInteractable button)
			{
			}
		}

		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E34C4", Offset = "0x9E34C4")]
		private sealed class <>c__DisplayClass30_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200049B")]
			private struct <<ExecuteSceneEnd>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x400178E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400178F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x4001790")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass30_0 <>4__this;

				[Token(Token = "0x4001791")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private TaskAwaiter<AbstractLeaderboardManager.UserDetails> <>u__1;

				[Token(Token = "0x6001DFE")]
				[Address(RVA = "0xA84340", Offset = "0xA84340", VA = "0xA84340", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001DFF")]
				[Address(RVA = "0xA84348", Offset = "0xA84348", VA = "0xA84348", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40015E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRStorySceneManager <>4__this;

			[Token(Token = "0x40015E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LeaderboardView leaderboardView;

			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0xCC5124", Offset = "0xCC5124", VA = "0xCC5124")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xCC512C", Offset = "0xCC512C", VA = "0xCC512C")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F33BC", Offset = "0x9F33BC")]
			internal void <ExecuteSceneEnd>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E34D4", Offset = "0x9E34D4")]
		private struct <ExecuteSceneEnd>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x40015E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRStorySceneManager <>4__this;

			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass30_0 <>8__1;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <score>5__2;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<LeaderboardView> <>u__1;

			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xA84354", Offset = "0xA84354", VA = "0xA84354", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xA8435C", Offset = "0xA8435C", VA = "0xA8435C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E34E4", Offset = "0x9E34E4")]
		private struct <GetLeaderboardView>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<LeaderboardView> <>t__builder;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRStorySceneManager <>4__this;

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xA84368", Offset = "0xA84368", VA = "0xA84368", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xA84370", Offset = "0xA84370", VA = "0xA84370", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected List<IStorylineActor> _storylineActors;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected StorylineManager _storylineManager;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E86C8", Offset = "0x9E86C8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E86C8", Offset = "0x9E86C8")]
		protected string _nextSceneName;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private UnityEngine.AsyncOperation _loadIntermediateScene;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool _achievementUnlockedForTwoLanguages;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		private bool _achievementUnlockedForThreeLanguages;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private AbstractLeaderboardManager _leaderboardManager;

		[Token(Token = "0x170003AE")]
		public new static VRStorySceneManager Instance
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0xBC0CF0", Offset = "0xBC0CF0", VA = "0xBC0CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		public override bool CanStartRecording
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0xBC0D74", Offset = "0xBC0D74", VA = "0xBC0D74", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B0")]
		public VRFemale CurrentActiveCharacter
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xBC0E7C", Offset = "0xBC0E7C", VA = "0xBC0E7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		public List<VRFemale> Characters
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0xBC0F04", Offset = "0xBC0F04", VA = "0xBC0F04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		public AbstractLeaderboardManager LeaderboardManager
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xBC0F64", Offset = "0xBC0F64", VA = "0xBC0F64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xBC0F6C", Offset = "0xBC0F6C", VA = "0xBC0F6C", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xBC10E0", Offset = "0xBC10E0", VA = "0xBC10E0", Slot = "12")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0134", Offset = "0x9F0134")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xBC1198", Offset = "0xBC1198", VA = "0xBC1198", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x600151E")]
		protected abstract string GetStorylineFileName();

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xBC123C", Offset = "0xBC123C", VA = "0xBC123C", Slot = "31")]
		protected virtual bool CanResumeCharacterAfterPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xBC1244", Offset = "0xBC1244", VA = "0xBC1244", Slot = "23")]
		protected override void OnResume(bool isBackground)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xBC1444", Offset = "0xBC1444", VA = "0xBC1444", Slot = "27")]
		protected override void SetupCharacter(VRCharacter character)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xBC1664", Offset = "0xBC1664", VA = "0xBC1664", Slot = "28")]
		protected override void SetupSceneEndPopup(ref SceneEndPopup sceneEndPopup)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xBC1870", Offset = "0xBC1870", VA = "0xBC1870", Slot = "29")]
		protected override void HandleRedoButton(IInteractable button)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xBC18B4", Offset = "0xBC18B4", VA = "0xBC18B4")]
		public void StartSpeechRecognitionForTutorial()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xBC18B8", Offset = "0xBC18B8", VA = "0xBC18B8")]
		public void StopSpeechRecognitionForTutorial()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xBC18BC", Offset = "0xBC18BC", VA = "0xBC18BC")]
		public void AnalyzeInputAfterTutorial(string input)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xBC1918", Offset = "0xBC1918", VA = "0xBC1918")]
		private void HandleControllerHoldStarted()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xBC1A98", Offset = "0xBC1A98", VA = "0xBC1A98")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0198", Offset = "0x9F0198")]
		private void ExecuteSceneEnd()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xBC1B50", Offset = "0xBC1B50", VA = "0xBC1B50")]
		private void HandleSwipe(VRInputModule.SwipeDirection swipeDirection = VRInputModule.SwipeDirection.Up)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xBC1C60", Offset = "0xBC1C60", VA = "0xBC1C60")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F01FC", Offset = "0x9F01FC")]
		private Task<LeaderboardView> GetLeaderboardView()
		{
			return null;
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xBC1D64", Offset = "0xBC1D64", VA = "0xBC1D64")]
		protected VRStorySceneManager()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xBC1D68", Offset = "0xBC1D68", VA = "0xBC1D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0260", Offset = "0x9F0260")]
		private void <AwakeComponent>b__17_0()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xBC1E24", Offset = "0xBC1E24", VA = "0xBC1E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0270", Offset = "0x9F0270")]
		[DebuggerHidden]
		private void <>n__0()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xBC1E28", Offset = "0xBC1E28", VA = "0xBC1E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F02A8", Offset = "0x9F02A8")]
		private void <SetupSceneEndPopup>b__24_1()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.SceneManager.LoadingScene
{
	[Token(Token = "0x2000252")]
	public class MicrophoneCalibrationTestView : UIView
	{
		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E34F4", Offset = "0x9E34F4")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MicrophoneCalibrationTestView <>4__this;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xBB4C44", Offset = "0xBB4C44", VA = "0xBB4C44")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xBB4E7C", Offset = "0xBB4E7C", VA = "0xBB4E7C")]
			internal void <ShowMicrophoneTestSuccessLabel>b__0()
			{
			}
		}

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3504", Offset = "0x9E3504")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xBB4E6C", Offset = "0xBB4E6C", VA = "0xBB4E6C")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xBB4EE8", Offset = "0xBB4EE8", VA = "0xBB4EE8")]
			internal void <ShowMicrophoneTestFailedLabel>b__0()
			{
			}
		}

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _microphoneNotWorkingWarningLabel;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILabel _testYourMicrophoneLabel;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UILabel _microphoneTestSuccesLabel;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UILabel _microphoneTestFailedLabel;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UILabel _progressBarExplanationLabel;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UILabel _redirectToMainMenuLabel;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UIButton _homeButton;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UIImage _microphoneTestProgressBarImage;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private UIImage _microphoneTestProgressBarContourImage;

		[Token(Token = "0x170003B3")]
		public UIButton HomeButton
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xBB4778", Offset = "0xBB4778", VA = "0xBB4778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		public UIImage MicrophoneTestProgressBarImage
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0xBB4780", Offset = "0xBB4780", VA = "0xBB4780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B5")]
		public UIImage MicrophoneTestProgressBarContourImage
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0xBB4788", Offset = "0xBB4788", VA = "0xBB4788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xBB4790", Offset = "0xBB4790", VA = "0xBB4790", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xBB4928", Offset = "0xBB4928", VA = "0xBB4928")]
		public void ShowMicrophoneTestExplanationLabel()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xBB4A68", Offset = "0xBB4A68", VA = "0xBB4A68")]
		public void ShowMicrophoneTestSuccessLabel([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xBB4C4C", Offset = "0xBB4C4C", VA = "0xBB4C4C")]
		public void ShowMicrophoneTestFailedLabel([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xBB4E74", Offset = "0xBB4E74", VA = "0xBB4E74")]
		public MicrophoneCalibrationTestView()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class QuoteView : UIView
	{
		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UILabel QuoteText;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UILabel QuoteAuthor;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xBB4EFC", Offset = "0xBB4EFC", VA = "0xBB4EFC", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xBB5154", Offset = "0xBB5154", VA = "0xBB5154")]
		public QuoteView()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public sealed class VRLoadingSceneManager : VRSceneManager
	{
		[Serializable]
		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3514", Offset = "0x9E3514")]
		private sealed class <>c
		{
			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__35_0;

			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__39_0;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__42_1;

			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action <>9__46_5;

			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xBB6B3C", Offset = "0xBB6B3C", VA = "0xBB6B3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xBB6B44", Offset = "0xBB6B44", VA = "0xBB6B44")]
			internal void <LoadLoadingScene>b__35_0()
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xBB6BB0", Offset = "0xBB6BB0", VA = "0xBB6BB0")]
			internal void <StartLoadingTargetScene>b__39_0()
			{
			}

			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xBB6C1C", Offset = "0xBB6C1C", VA = "0xBB6C1C")]
			internal void <DownloadResources>b__42_1()
			{
			}

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xBB6C74", Offset = "0xBB6C74", VA = "0xBB6C74")]
			internal void <CheckIfMicrophoneIsGood>b__46_5()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3524", Offset = "0x9E3524")]
		private struct <StartLoadingTargetScene>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRLoadingSceneManager <>4__this;

			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0xA8324C", Offset = "0xA8324C", VA = "0xA8324C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0xA83254", Offset = "0xA83254", VA = "0xA83254", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3534", Offset = "0x9E3534")]
		private sealed class <LoadTargetSceneRoutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRLoadingSceneManager <>4__this;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneToBeLoaded;

			[Token(Token = "0x17000489")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC1")]
				[Address(RVA = "0xBB8184", Offset = "0xBB8184", VA = "0xBB8184", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC3")]
				[Address(RVA = "0xBB81F4", Offset = "0xBB81F4", VA = "0xBB81F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xBB5E20", Offset = "0xBB5E20", VA = "0xBB5E20")]
			[DebuggerHidden]
			public <LoadTargetSceneRoutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xBB8028", Offset = "0xBB8028", VA = "0xBB8028", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0xBB802C", Offset = "0xBB802C", VA = "0xBB802C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0xBB818C", Offset = "0xBB818C", VA = "0xBB818C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3544", Offset = "0x9E3544")]
		private struct <LoadTargetScene>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRLoadingSceneManager <>4__this;

			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xA83238", Offset = "0xA83238", VA = "0xA83238", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xA83240", Offset = "0xA83240", VA = "0xA83240", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3554", Offset = "0x9E3554")]
		private struct <HandleOnSceneDidAppear>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRLoadingSceneManager <>4__this;

			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private JObject <lessonConfigJson>5__2;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <baseUrl>5__3;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private JObject <objectsJson>5__4;

			[Token(Token = "0x4001608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<JObject> <>u__1;

			[Token(Token = "0x4001609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x400160A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private object <>u__3;

			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xA83224", Offset = "0xA83224", VA = "0xA83224", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xA8322C", Offset = "0xA8322C", VA = "0xA8322C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3564", Offset = "0x9E3564")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x400160B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRLoadingSceneManager <>4__this;

			[Token(Token = "0x400160C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float recordedVolume;

			[Token(Token = "0x400160D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__6;

			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xBB65B8", Offset = "0xBB65B8", VA = "0xBB65B8")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xBB6D84", Offset = "0xBB6D84", VA = "0xBB6D84")]
			internal void <CheckIfMicrophoneIsGood>b__3()
			{
			}

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xBB6E08", Offset = "0xBB6E08", VA = "0xBB6E08")]
			internal void <CheckIfMicrophoneIsGood>b__6()
			{
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xBB6EBC", Offset = "0xBB6EBC", VA = "0xBB6EBC")]
			internal void <CheckIfMicrophoneIsGood>b__4(IInteractable button)
			{
			}

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xBB6F54", Offset = "0xBB6F54", VA = "0xBB6F54")]
			internal void <CheckIfMicrophoneIsGood>b__2(float volume)
			{
			}
		}

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3574", Offset = "0x9E3574")]
		private sealed class <>c__DisplayClass46_1
		{
			[Token(Token = "0x400160E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityVoiceRecorder voiceRecorder;

			[Token(Token = "0x400160F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass46_0 CS$<>8__locals1;

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xBB65C0", Offset = "0xBB65C0", VA = "0xBB65C0")]
			public <>c__DisplayClass46_1()
			{
			}

			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xBB6FFC", Offset = "0xBB6FFC", VA = "0xBB6FFC")]
			internal void <CheckIfMicrophoneIsGood>g__HandleOnHoldStarted|0()
			{
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xBB70F8", Offset = "0xBB70F8", VA = "0xBB70F8")]
			internal void <CheckIfMicrophoneIsGood>g__HandleOnHoldEnded|1()
			{
			}
		}

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string s_SceneToBeLoadedName;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E87C8", Offset = "0x9E87C8")]
		private static int <VocabularyLessonIndex>k__BackingField;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static bool IsLoadingVocabularyLesson;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<string> s_sceneNamesForLessonIndex;

		[Token(Token = "0x4000EAC")]
		private const string SCENE_MAIN_MENU_NAME = "MainMenu";

		[Token(Token = "0x4000EAD")]
		private const string SCENE_LOADING_NAME = "LoadingScene";

		[Token(Token = "0x4000EAE")]
		private const float ANIMATION_DURATION = 0.5f;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private UIView PanelCalibrating;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIView PanelHeadphonesTip;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIView PanelQuote;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UIView PanelCheckingFiles;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UIView PanelDownloading;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UIView PanelReviewUs;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private MicrophoneCalibrationTestView PanelMicrophoneTest;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private RoundedLoadingImage ProgressbarIndeterminate;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UIImage ProgressbarDownloading;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private UnityEngine.AsyncOperation _asyncOperationLoading;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float _minimumLoadingTime;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[CanBeNull]
		private UnityDownloadManager _unityDownloadManager;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Task> _tasksToWaitUntilLoadingNewScene;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[CanBeNull]
		private Task _taskWaitForDownload;

		[Token(Token = "0x170003B6")]
		public static int VocabularyLessonIndex
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0xBB515C", Offset = "0xBB515C", VA = "0xBB515C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F02B8", Offset = "0x9F02B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600153A")]
			[Address(RVA = "0xBB51C4", Offset = "0xBB51C4", VA = "0xBB51C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F02C8", Offset = "0x9F02C8")]
			internal set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public static int NumberOfVocabularyLessons
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0xBB5230", Offset = "0xBB5230", VA = "0xBB5230")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B8")]
		private bool _isLoadingMainMenu
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0xBB5238", Offset = "0xBB5238", VA = "0xBB5238")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xBB52B0", Offset = "0xBB52B0", VA = "0xBB52B0", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xBB56A8", Offset = "0xBB56A8", VA = "0xBB56A8", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xBB57E4", Offset = "0xBB57E4", VA = "0xBB57E4")]
		public static void LoadSceneInstantlyAsync(string sceneName)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xBB57EC", Offset = "0xBB57EC", VA = "0xBB57EC")]
		public static void LoadSceneInstantlySync(string sceneName)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xBB57F4", Offset = "0xBB57F4", VA = "0xBB57F4")]
		public static void LoadSceneNamed(string sceneName)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xBB5960", Offset = "0xBB5960", VA = "0xBB5960")]
		public static void LoadVocabularyScene(int lessonIndex)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xBB139C", Offset = "0xBB139C", VA = "0xBB139C")]
		public static void LoadMainMenu()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xBB5860", Offset = "0xBB5860", VA = "0xBB5860")]
		private static void LoadLoadingScene()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xBB59F8", Offset = "0xBB59F8", VA = "0xBB59F8")]
		private void ShowCheckingFiles()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xBB5A74", Offset = "0xBB5A74", VA = "0xBB5A74")]
		private void ShowDownloading()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xBB5C2C", Offset = "0xBB5C2C", VA = "0xBB5C2C")]
		private void ShowCalibrating()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xBB5CCC", Offset = "0xBB5CCC", VA = "0xBB5CCC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F02D8", Offset = "0x9F02D8")]
		private void StartLoadingTargetScene()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xBB5D88", Offset = "0xBB5D88", VA = "0xBB5D88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F033C", Offset = "0x9F033C")]
		private IEnumerator LoadTargetSceneRoutine(string sceneToBeLoaded)
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xBB5E4C", Offset = "0xBB5E4C", VA = "0xBB5E4C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F03A0", Offset = "0x9F03A0")]
		private void LoadTargetScene()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xBB5F14", Offset = "0xBB5F14", VA = "0xBB5F14")]
		private void DownloadResources(List<DownloadBundle> downloadBundles)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xBB611C", Offset = "0xBB611C", VA = "0xBB611C")]
		private void HandleMicrophoneCalibratorOnCompletionCallback(float calibratedVolume)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xBB61B8", Offset = "0xBB61B8", VA = "0xBB61B8")]
		private void HandleHeadphoneStateChanged(bool isConnected)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xBB6288", Offset = "0xBB6288", VA = "0xBB6288")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0404", Offset = "0x9F0404")]
		private void HandleOnSceneDidAppear()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xBB6344", Offset = "0xBB6344", VA = "0xBB6344")]
		private void CheckIfMicrophoneIsGood()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xBB65C8", Offset = "0xBB65C8", VA = "0xBB65C8")]
		private void HideCalibrationPanels()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xBB6718", Offset = "0xBB6718", VA = "0xBB6718")]
		private float ComputeFillAmount(float volume)
		{
			return default(float);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xBB6740", Offset = "0xBB6740", VA = "0xBB6740")]
		public VRLoadingSceneManager()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xBB697C", Offset = "0xBB697C", VA = "0xBB697C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0468", Offset = "0x9F0468")]
		private void <ShowDownloading>b__37_0()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xBB69AC", Offset = "0xBB69AC", VA = "0xBB69AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0478", Offset = "0x9F0478")]
		private void <ShowDownloading>b__37_1()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xBB69DC", Offset = "0xBB69DC", VA = "0xBB69DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0488", Offset = "0x9F0488")]
		private void <ShowDownloading>b__37_2()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xBB6A38", Offset = "0xBB6A38", VA = "0xBB6A38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0498", Offset = "0x9F0498")]
		private void <LoadTargetScene>b__41_0()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xBB6A6C", Offset = "0xBB6A6C", VA = "0xBB6A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04A8", Offset = "0x9F04A8")]
		private void <DownloadResources>b__42_0()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xBB6AAC", Offset = "0xBB6AAC", VA = "0xBB6AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04B8", Offset = "0x9F04B8")]
		private void <HideCalibrationPanels>b__47_0()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.RatingPoints
{
	[Token(Token = "0x2000255")]
	public class VRRatingPointsManager : AbstractRatingPointsManager
	{
		[Token(Token = "0x4000EBD")]
		[DebugGroup]
		private const string DEBUG_GROUP = "RATING_MANAGER";

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _finalUserScore;

		[Token(Token = "0x4000EBF")]
		private const int POINTS_FOR_CORRECT_ANSWER = 3;

		[Token(Token = "0x4000EC0")]
		private const int POINTS_FOR_HELPER_USED = 1;

		[Token(Token = "0x170003B9")]
		public float FinalUserScore
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0xBB3EFC", Offset = "0xBB3EFC", VA = "0xBB3EFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xBB3F0C", Offset = "0xBB3F0C", VA = "0xBB3F0C", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xBB3F38", Offset = "0xBB3F38", VA = "0xBB3F38", Slot = "16")]
		public override void AddPoints()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xBB4000", Offset = "0xBB4000", VA = "0xBB4000", Slot = "17")]
		public override void AddSkips()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xBB40C8", Offset = "0xBB40C8", VA = "0xBB40C8", Slot = "18")]
		public override void AddHelpers()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xBB4190", Offset = "0xBB4190", VA = "0xBB4190", Slot = "19")]
		public override int ComputeFinalRating()
		{
			return default(int);
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xBB45F8", Offset = "0xBB45F8", VA = "0xBB45F8")]
		public int ComputeVocabularyLessonRating()
		{
			return default(int);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xBB4248", Offset = "0xBB4248", VA = "0xBB4248")]
		private int ComputeEasyRating()
		{
			return default(int);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xBB4330", Offset = "0xBB4330", VA = "0xBB4330")]
		private int ComputeIntermediateRating()
		{
			return default(int);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xBB4494", Offset = "0xBB4494", VA = "0xBB4494")]
		private int ComputeHardRating()
		{
			return default(int);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xBB475C", Offset = "0xBB475C", VA = "0xBB475C")]
		private float ComputeFinalUserScore()
		{
			return default(float);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xBB4770", Offset = "0xBB4770", VA = "0xBB4770")]
		public VRRatingPointsManager()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Popups
{
	[Token(Token = "0x2000256")]
	public class CategoryCompletedPopup : VRFullScreenPopup
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UILabel _title;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UILabel _categoryCompletedLabel;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private UILabel _redoCategoryLabel;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private DifficultySelectionViewController _difficultySelectionViewController;

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xBB0D30", Offset = "0xBB0D30", VA = "0xBB0D30")]
		public void Show(MondlyVRApp.Difficulty difficulty, float numberOfStars)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xBB0FAC", Offset = "0xBB0FAC", VA = "0xBB0FAC")]
		private void ChangeMessageDependingOnDifficultyAndNumberOfStars(MondlyVRApp.Difficulty difficulty, float numberOfStars)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xBB1208", Offset = "0xBB1208", VA = "0xBB1208")]
		private void HighlightCompletedDifficulty()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xBB131C", Offset = "0xBB131C", VA = "0xBB131C")]
		public CategoryCompletedPopup()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xBB1324", Offset = "0xBB1324", VA = "0xBB1324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04C8", Offset = "0x9F04C8")]
		private void <Show>b__4_0(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class DownloadTimeoutPopup : VRPopup
	{
		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public PopupButton ContinueButton;

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xBB1440", Offset = "0xBB1440", VA = "0xBB1440", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xBB151C", Offset = "0xBB151C", VA = "0xBB151C")]
		public DownloadTimeoutPopup()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xBB1524", Offset = "0xBB1524", VA = "0xBB1524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04D8", Offset = "0x9F04D8")]
		private void <AwakeComponent>b__1_0(IInteractable button)
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class MultiplayerQuitPopup : QuitPopup
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public MultiplayerFeedback MultyplayerUsersFeedback;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xBB1538", Offset = "0xBB1538", VA = "0xBB1538")]
		public MultiplayerQuitPopup()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class MultiplayerTeleportWarningPopup : VRPopup
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public PopupButton ContinueButton;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public PopupButton CancelButton;

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xBB1540", Offset = "0xBB1540", VA = "0xBB1540")]
		public MultiplayerTeleportWarningPopup()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class MultiplayerUsersConnectionFeedbackPopup : VRPopup
	{
		[StructLayout(3)]
		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3584", Offset = "0x9E3584")]
		private struct <AddPlayerConnectedElement>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4001610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MultiplayerUsersConnectionFeedbackPopup <>4__this;

			[Token(Token = "0x4001613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string username;

			[Token(Token = "0x4001614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xA831FC", Offset = "0xA831FC", VA = "0xA831FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xA83204", Offset = "0xA83204", VA = "0xA83204", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3594", Offset = "0x9E3594")]
		private struct <AddPlayerDisconnectedElement>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001616")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001617")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MultiplayerUsersConnectionFeedbackPopup <>4__this;

			[Token(Token = "0x4001618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string username;

			[Token(Token = "0x4001619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xA83210", Offset = "0xA83210", VA = "0xA83210", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xA83218", Offset = "0xA83218", VA = "0xA83218", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private MultiplayerConnectionFeedbackTextElement _playerConnectionFeedbackElementPrefab;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private AudioSource _audioSource;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private AsyncOperationHandle<AudioClip> _userJoinedRoomClipAddresable;

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xBB1548", Offset = "0xBB1548", VA = "0xBB1548", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xBB166C", Offset = "0xBB166C", VA = "0xBB166C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F04E8", Offset = "0x9F04E8")]
		public void AddPlayerConnectedElement(string username)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xBB172C", Offset = "0xBB172C", VA = "0xBB172C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F054C", Offset = "0x9F054C")]
		public void AddPlayerDisconnectedElement(string username)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xBB17EC", Offset = "0xBB17EC", VA = "0xBB17EC")]
		public MultiplayerUsersConnectionFeedbackPopup()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xBB17F4", Offset = "0xBB17F4", VA = "0xBB17F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05B0", Offset = "0x9F05B0")]
		private void <AwakeComponent>b__3_0(AsyncOperationHandle<AudioClip> operation)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xBB1874", Offset = "0xBB1874", VA = "0xBB1874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05C0", Offset = "0x9F05C0")]
		private bool <AddPlayerConnectedElement>b__4_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xBB18A0", Offset = "0xBB18A0", VA = "0xBB18A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05D0", Offset = "0x9F05D0")]
		private bool <AddPlayerDisconnectedElement>b__5_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200025B")]
	public class NoInternetConnectionPopup : Popup
	{
		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E35A4", Offset = "0x9E35A4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400161A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x400161B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NoInternetConnectionPopup <>4__this;

			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xBB22E8", Offset = "0xBB22E8", VA = "0xBB22E8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xBB22F8", Offset = "0xBB22F8", VA = "0xBB22F8")]
			internal void <FadeOutAnimation>b__0()
			{
			}
		}

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UIImage[] _wifiWaves;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Sequence _sequence;

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xBB1FB4", Offset = "0xBB1FB4", VA = "0xBB1FB4", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xBB21B4", Offset = "0xBB21B4", VA = "0xBB21B4", Slot = "51")]
		public override Tween FadeInAnimation([Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xBB2220", Offset = "0xBB2220", VA = "0xBB2220", Slot = "52")]
		public override Tween FadeOutAnimation([Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xBB22F0", Offset = "0xBB22F0", VA = "0xBB22F0")]
		public NoInternetConnectionPopup()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class NoMicrophoneDetectedPopup : VRFullScreenPopup
	{
		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private PopupButton _okButton;

		[Token(Token = "0x170003BA")]
		public PopupButton OkButton
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xBB2368", Offset = "0xBB2368", VA = "0xBB2368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xBB2370", Offset = "0xBB2370", VA = "0xBB2370")]
		public NoMicrophoneDetectedPopup()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class PermissionPopup : Popup
	{
		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UIButton _continueButton;

		[Token(Token = "0x170003BB")]
		public UIButton ContinueButton
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0xBB2378", Offset = "0xBB2378", VA = "0xBB2378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xBB2380", Offset = "0xBB2380", VA = "0xBB2380")]
		public void Show()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xBB2394", Offset = "0xBB2394", VA = "0xBB2394")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xBB23A8", Offset = "0xBB23A8", VA = "0xBB23A8")]
		public PermissionPopup()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class ReviewUsPopup : VRFullScreenPopup
	{
		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UILabel _thankYouLabel;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private UILabel _rateUsLabel;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private UIButton _goToStoreButton;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UIButton _laterButton;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private UIButton _iDontLikeLearningWithAppButton;

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xBB2EFC", Offset = "0xBB2EFC", VA = "0xBB2EFC", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xBB308C", Offset = "0xBB308C", VA = "0xBB308C", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xBB3360", Offset = "0xBB3360", VA = "0xBB3360")]
		private void OpenOculusMobileStore()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xBB38F4", Offset = "0xBB38F4", VA = "0xBB38F4")]
		public ReviewUsPopup()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xBB38FC", Offset = "0xBB38FC", VA = "0xBB38FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05E0", Offset = "0x9F05E0")]
		private void <AwakeComponent>b__5_0(IInteractable button)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xBB397C", Offset = "0xBB397C", VA = "0xBB397C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05F0", Offset = "0x9F05F0")]
		private void <AwakeComponent>b__5_3()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xBB39B4", Offset = "0xBB39B4", VA = "0xBB39B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0600", Offset = "0x9F0600")]
		private void <AwakeComponent>b__5_1(IInteractable button)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xBB3A78", Offset = "0xBB3A78", VA = "0xBB3A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0610", Offset = "0x9F0610")]
		private void <AwakeComponent>b__5_4()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xBB3AB0", Offset = "0xBB3AB0", VA = "0xBB3AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0620", Offset = "0x9F0620")]
		private void <AwakeComponent>b__5_2(IInteractable button)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xBB3B4C", Offset = "0xBB3B4C", VA = "0xBB3B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0630", Offset = "0x9F0630")]
		private void <AwakeComponent>b__5_5()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xBB3BD0", Offset = "0xBB3BD0", VA = "0xBB3BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0640", Offset = "0x9F0640")]
		private void <AwakeComponent>b__5_6()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class SceneEndPopup : VRPopup
	{
		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E35B4", Offset = "0x9E35B4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400161C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneEndPopup <>4__this;

			[Token(Token = "0x400161D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperationHandle<AudioClip> operation;

			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xBB3D60", Offset = "0xBB3D60", VA = "0xBB3D60")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xBB3E70", Offset = "0xBB3E70", VA = "0xBB3E70")]
			internal void <AwakeComponent>b__0(AsyncOperationHandle<AudioClip> result)
			{
			}
		}

		[Token(Token = "0x4000ED5")]
		private const string EDITOR_SCENE_END_POPUP_GROUP_NAME = "SceneEndPopup";

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UIButton ButtonRedo;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public UIButton ButtonHome;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public RoundedRectGraphic Icon;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private ATiStudios.MondlyVR.Popups.RatingStarAnimationController.RatingStarAnimationController _ratingStarAnimationController;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private AudioSource _audioSource;

		[Token(Token = "0x170003BC")]
		public ATiStudios.MondlyVR.Popups.RatingStarAnimationController.RatingStarAnimationController RatingStarAnimationController
		{
			[Token(Token = "0x600158C")]
			[Address(RVA = "0xBB3C08", Offset = "0xBB3C08", VA = "0xBB3C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xBB3C10", Offset = "0xBB3C10", VA = "0xBB3C10", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xBB3D68", Offset = "0xBB3D68", VA = "0xBB3D68")]
		public void PlaySceneEndSound()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xBB3E00", Offset = "0xBB3E00", VA = "0xBB3E00")]
		public void SetChapterLocalizations(string completedChapter, string description)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xBB3E68", Offset = "0xBB3E68", VA = "0xBB3E68")]
		public SceneEndPopup()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class SelectingScenePopup : VRPopup
	{
		[Token(Token = "0x6001591")]
		[Address(RVA = "0xBB3EF4", Offset = "0xBB3EF4", VA = "0xBB3EF4")]
		public SelectingScenePopup()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Popups.RatingStarAnimationController
{
	[Token(Token = "0x2000261")]
	public class RatingStarAnimationController : BaseMonoBehaviour
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UIImage _firstStar;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UIImage _secondStar;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UIImage _thirdStar;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Sprite _fullStarSprite;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Sprite _emptyStarSprite;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Sequence _sequence;

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xBB23B0", Offset = "0xBB23B0", VA = "0xBB23B0", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xBB23F4", Offset = "0xBB23F4", VA = "0xBB23F4")]
		public void AnimateRatingStars(int numberOfStars)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xBB241C", Offset = "0xBB241C", VA = "0xBB241C")]
		private void StartThreeStarAnimation()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xBB271C", Offset = "0xBB271C", VA = "0xBB271C")]
		private void StartTwoStarAnimation()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xBB296C", Offset = "0xBB296C", VA = "0xBB296C")]
		private void StartOneStarAnimation()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xBB2AF8", Offset = "0xBB2AF8", VA = "0xBB2AF8")]
		private void ResetRatingStars()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xBB2C90", Offset = "0xBB2C90", VA = "0xBB2C90")]
		public RatingStarAnimationController()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xBB2C98", Offset = "0xBB2C98", VA = "0xBB2C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0650", Offset = "0x9F0650")]
		private void <StartThreeStarAnimation>b__8_0()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xBB2D64", Offset = "0xBB2D64", VA = "0xBB2D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0660", Offset = "0x9F0660")]
		private void <StartThreeStarAnimation>b__8_1()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xBB2E30", Offset = "0xBB2E30", VA = "0xBB2E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0670", Offset = "0x9F0670")]
		private void <StartTwoStarAnimation>b__9_0()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.ObjectLabels
{
	[Token(Token = "0x2000262")]
	public class DatabaseWorker : SceneObject
	{
		[Token(Token = "0x600159C")]
		[Address(RVA = "0xBAF7C4", Offset = "0xBAF7C4", VA = "0xBAF7C4")]
		public DatabaseWorker()
		{
		}
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E21A4", Offset = "0x9E21A4")]
	public class LabelAnchor : UIView
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject _referenceLabelAnchor;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject _vrPlayer;

		[Token(Token = "0x4000EE3")]
		private const float ANIMATION_DURATION = 0.4f;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string _objectTag;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private UILabel _labelTarget;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public string LabelTargetText;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private UILabel _labelMother;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public string LabelMotherText;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public string LabelPhonetic;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private AudioSource _audioSource;

		[Token(Token = "0x170003BD")]
		public string ObjectTag
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0xBAF7CC", Offset = "0xBAF7CC", VA = "0xBAF7CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BE")]
		public AudioSource LabelAudioSource
		{
			[Token(Token = "0x600159E")]
			[Address(RVA = "0xBAF7D4", Offset = "0xBAF7D4", VA = "0xBAF7D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xBAF7DC", Offset = "0xBAF7DC", VA = "0xBAF7DC", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xBAFAC0", Offset = "0xBAFAC0", VA = "0xBAFAC0", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xBAFD28", Offset = "0xBAFD28", VA = "0xBAFD28", Slot = "50")]
		protected override void DestroyComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xBAFE14", Offset = "0xBAFE14", VA = "0xBAFE14")]
		public void SetAudioClip(AudioClip clip)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xBAFE4C", Offset = "0xBAFE4C", VA = "0xBAFE4C")]
		public void HoverEnterLabelAnimation()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xBAFEC8", Offset = "0xBAFEC8", VA = "0xBAFEC8")]
		public void HoverExitLabelAnimation()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xBAFF70", Offset = "0xBAFF70", VA = "0xBAFF70")]
		private float GetDistanceBetweenCameraAndReference()
		{
			return default(float);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xBB0084", Offset = "0xBB0084", VA = "0xBB0084")]
		private float GetDistanceBetweenCameraAndLabel()
		{
			return default(float);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xBAF970", Offset = "0xBAF970", VA = "0xBAF970")]
		private void SetScale()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xBAFC20", Offset = "0xBAFC20", VA = "0xBAFC20")]
		private void SwitchPhonetic()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xBB0188", Offset = "0xBB0188", VA = "0xBB0188")]
		public LabelAnchor()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class ObjectLabelName : SceneObject
	{
		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private LabelAnchor _labelAnchor;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Outline _outline;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ParticleSystem[] _hint;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Tween _labelFadeIn;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _hasChangedColor;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ParticleSystem _glow;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ParticleSystem _center;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private ParticleSystem _stars;

		[Token(Token = "0x170003BF")]
		public LabelAnchor LabelAchor
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0xBB0190", Offset = "0xBB0190", VA = "0xBB0190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000035")]
		public static event Action<string, string, AudioClip> OnLabelHovered
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xBB0198", Offset = "0xBB0198", VA = "0xBB0198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0680", Offset = "0x9F0680")]
			add
			{
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0xBB0250", Offset = "0xBB0250", VA = "0xBB0250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0690", Offset = "0x9F0690")]
			remove
			{
			}
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xBB0308", Offset = "0xBB0308", VA = "0xBB0308", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xBB0350", Offset = "0xBB0350", VA = "0xBB0350", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xBB0460", Offset = "0xBB0460", VA = "0xBB0460", Slot = "35")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xBB0548", Offset = "0xBB0548", VA = "0xBB0548", Slot = "36")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xBB05B8", Offset = "0xBB05B8", VA = "0xBB05B8", Slot = "42")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xBB06B4", Offset = "0xBB06B4", VA = "0xBB06B4")]
		private void ChangeHintColor()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xBB07CC", Offset = "0xBB07CC", VA = "0xBB07CC")]
		public ObjectLabelName()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xBB07D4", Offset = "0xBB07D4", VA = "0xBB07D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06A0", Offset = "0x9F06A0")]
		private void <OnPointerEnter>b__15_0()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class ObjectLabelsDatabaseManager : DatabaseWorker
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Language _targetLanguage;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private string _phonetic;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Language _motherLanguage;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ISpeechSynthesizer _synthesiser;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ObjectLabelName[] _labels;

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xBB0A24", Offset = "0xBB0A24", VA = "0xBB0A24", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xBB0BE8", Offset = "0xBB0BE8", VA = "0xBB0BE8")]
		public void DisableLabels()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xBB0C88", Offset = "0xBB0C88", VA = "0xBB0C88")]
		public void EnableLabels()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xBB0D28", Offset = "0xBB0D28", VA = "0xBB0D28")]
		public ObjectLabelsDatabaseManager()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.MultiplayerPhoton.Scripts
{
	[Token(Token = "0x2000266")]
	public class AvatarSelectionController : UIView
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private VRButton _nextAvatarButton;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private VRButton _previousAvatarButton;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private VRButton _randomAvatarButton;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private VRButton _saveButton;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject _parent;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private List<GameObject> _avatars;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<GameObject> _instantiatedAvatars;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int _index;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private OvrAvatar _avatar;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GameObject _currentActiveAvatar;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _isFirstTime;

		[Token(Token = "0x170003C0")]
		public GameObject CurrentActiveAvatar
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0xB06BC4", Offset = "0xB06BC4", VA = "0xB06BC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xB06BCC", Offset = "0xB06BCC", VA = "0xB06BCC", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xB071BC", Offset = "0xB071BC", VA = "0xB071BC", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xB071C8", Offset = "0xB071C8", VA = "0xB071C8")]
		public void DisableSelectedAvatar(bool toggle)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xB07200", Offset = "0xB07200", VA = "0xB07200")]
		public AvatarSelectionController()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xB07208", Offset = "0xB07208", VA = "0xB07208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06B0", Offset = "0x9F06B0")]
		private void <AwakeComponent>b__13_0(IInteractable button)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xB0731C", Offset = "0xB0731C", VA = "0xB0731C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06C0", Offset = "0x9F06C0")]
		private void <AwakeComponent>b__13_1(IInteractable button)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xB07420", Offset = "0xB07420", VA = "0xB07420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06D0", Offset = "0x9F06D0")]
		private void <AwakeComponent>b__13_2(IInteractable button)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xB07558", Offset = "0xB07558", VA = "0xB07558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06E0", Offset = "0x9F06E0")]
		private void <AwakeComponent>b__13_3(IInteractable saveButton)
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class CameraFacingBillboard : BaseMonoBehaviour
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera _camera;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion _lastRotation;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xB0771C", Offset = "0xB0771C", VA = "0xB0771C", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xB0774C", Offset = "0xB0774C", VA = "0xB0774C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xB078A8", Offset = "0xB078A8", VA = "0xB078A8")]
		public CameraFacingBillboard()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class DontDestroyOnLoad : BaseMonoBehaviour
	{
		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xB078B0", Offset = "0xB078B0", VA = "0xB078B0", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xB07924", Offset = "0xB07924", VA = "0xB07924")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class GoogleTranslate
	{
		[StructLayout(3)]
		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E35C4", Offset = "0x9E35C4")]
		private struct <TranslateText>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x400161E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400161F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4001620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GoogleTranslate <>4__this;

			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Language currentLanguage;

			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Language destinationLanguage;

			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string textToTranslate;

			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xA82C64", Offset = "0xA82C64", VA = "0xA82C64", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xA82C6C", Offset = "0xA82C6C", VA = "0xA82C6C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F06")]
		private const string API_URL = "https://www.googleapis.com/language/translate/v2?key={0}&source={1}&target={2}&q={3}&format=text";

		[Token(Token = "0x4000F07")]
		private const string API_KEY = "AIzaSyB-rWCC3Rc-DKNaJMZcGnw84WYeSD-gMSc";

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _motherTag;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _targetTag;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityWebRequest _unityWebRequest;

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xB0792C", Offset = "0xB0792C", VA = "0xB0792C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F06F0", Offset = "0x9F06F0")]
		public Task<string> TranslateText(string textToTranslate, Language currentLanguage, Language destinationLanguage)
		{
			return null;
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xB07A50", Offset = "0xB07A50", VA = "0xB07A50")]
		public GoogleTranslate()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class MultiplayerConnectionFeedbackTextElement : UIView
	{
		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _textElement;

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xB082DC", Offset = "0xB082DC", VA = "0xB082DC", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xB08388", Offset = "0xB08388", VA = "0xB08388")]
		public void SetUserConnectedText(string username)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xB08450", Offset = "0xB08450", VA = "0xB08450")]
		public void SetUserDisconnectedText(string username)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xB08518", Offset = "0xB08518", VA = "0xB08518")]
		public MultiplayerConnectionFeedbackTextElement()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xB08520", Offset = "0xB08520", VA = "0xB08520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0754", Offset = "0x9F0754")]
		private void <AwakeComponent>b__1_0()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class MultiplayerFeedback : UIView
	{
		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform _playerListParentTransform;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILabel _playerCounter;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private PlayerInLobby _playerInLobbyPrefab;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<string, PlayerInLobby> _activePlayersInLobby;

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xB0859C", Offset = "0xB0859C", VA = "0xB0859C", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xB08628", Offset = "0xB08628", VA = "0xB08628")]
		public void SetPlayerCounter(int playersInRoom, int roomCapacity)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xB086F0", Offset = "0xB086F0", VA = "0xB086F0")]
		public void AddUserInLobbyList(string username)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xB08984", Offset = "0xB08984", VA = "0xB08984")]
		public void RemoveFromLobbyList(string username)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xB08B3C", Offset = "0xB08B3C", VA = "0xB08B3C")]
		public MultiplayerFeedback()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class MultiplayerSuggestionsAnalyzer
	{
		[StructLayout(3)]
		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E35D4", Offset = "0x9E35D4")]
		private struct <HandleOnSocketConnect>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001627")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SocketIOEvent socketIoEvent;

			[Token(Token = "0x4001628")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MultiplayerSuggestionsAnalyzer <>4__this;

			[Token(Token = "0x4001629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xA82C74", Offset = "0xA82C74", VA = "0xA82C74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xA82C7C", Offset = "0xA82C7C", VA = "0xA82C7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F10")]
		private const string SECRET_KEY = "bd0f1493b1a02945589d33e01e3403a8dfbd70b75ab1a51a9d2b5a25cb50ef1a";

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SocketIOComponent _socketIoComponent;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _authKey;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, string> _dataToSend;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> _receivedTexts;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> _receivedAudios;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> _receivedPhoneticTexts;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _lastUserInput;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int UserRequestingIndex;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int CurrentUserIndex;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Language _targetLanguage;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _photonPlayerNickname;

		[Token(Token = "0x170003C1")]
		public string LastUserInput
		{
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xB08C94", Offset = "0xB08C94", VA = "0xB08C94")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xB08C9C", Offset = "0xB08C9C", VA = "0xB08C9C")]
			set
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<MultiplayerSuggestionsAnalyzer, string[], string[], string[], string, string, int> OnSuggestionsReceived
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xB08B44", Offset = "0xB08B44", VA = "0xB08B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0764", Offset = "0x9F0764")]
			add
			{
			}
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xB08BEC", Offset = "0xB08BEC", VA = "0xB08BEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0774", Offset = "0x9F0774")]
			remove
			{
			}
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xB08CA4", Offset = "0xB08CA4", VA = "0xB08CA4")]
		public MultiplayerSuggestionsAnalyzer(SocketIOComponent socketIoComponent, int userRequestingIndex, Language targetLanguage)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xB08EE4", Offset = "0xB08EE4", VA = "0xB08EE4")]
		private void HandleOnSocketOpen(SocketIOEvent socketIoEvent)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xB090D4", Offset = "0xB090D4", VA = "0xB090D4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0784", Offset = "0x9F0784")]
		private void HandleOnSocketConnect(SocketIOEvent socketIoEvent)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xB09194", Offset = "0xB09194", VA = "0xB09194")]
		private void HandleOnSuggestionReceived(SocketIOEvent socketIoEvent)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xB09CCC", Offset = "0xB09CCC", VA = "0xB09CCC")]
		private string sha256_hash(string stringToHash)
		{
			return null;
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xB09F10", Offset = "0xB09F10", VA = "0xB09F10")]
		public void SendUserInput(string userInput, int userIndex, int user, string photonPlayerNickname)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xB0A048", Offset = "0xB0A048", VA = "0xB0A048")]
		public void DeassignSocketHandlers()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xB0A194", Offset = "0xB0A194", VA = "0xB0A194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F07E8", Offset = "0x9F07E8")]
		private bool <HandleOnSocketConnect>b__20_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200026D")]
	public class MultiplayerUnityVoiceRecorder : UnityVoiceRecorder, IAudioReader<float>, IDataReader<float>, IDisposable, IAudioSource, IVoiceRecorder
	{
		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _micPreviousPosition;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _micLoopCount;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _readAbsPos;

		[Token(Token = "0x170003C2")]
		public int SamplingRate
		{
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0xB0A880", Offset = "0xB0A880", VA = "0xB0A880", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xB0A888", Offset = "0xB0A888", VA = "0xB0A888", Slot = "14")]
		public bool Read(float[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xB0AA30", Offset = "0xB0AA30", VA = "0xB0AA30", Slot = "15")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xB0AA7C", Offset = "0xB0AA7C", VA = "0xB0AA7C")]
		public MultiplayerUnityVoiceRecorder()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class ObjectNamePanel : UIView
	{
		[Token(Token = "0x4000F20")]
		private const double MIN_RMS = 30.0;

		[Token(Token = "0x4000F21")]
		private const double MAX_RMS = 80.0;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public UILabel UsernameText;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIImage _background;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Camera _camera;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color _maxVolumeColor;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Color _minVolumeColor;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Vector4 _maxVolumeColorVector;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector4 _minVolumeColorVector;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xB0B86C", Offset = "0xB0B86C", VA = "0xB0B86C", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xB0B8F0", Offset = "0xB0B8F0", VA = "0xB0B8F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xB0BA4C", Offset = "0xB0BA4C", VA = "0xB0BA4C")]
		public void UpdateLoudness(double volume)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xB0BC84", Offset = "0xB0BC84", VA = "0xB0BC84")]
		public ObjectNamePanel()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class OVRAvatarView : BaseMonoBehaviour
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PhotonView _photonView;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OvrAvatar _ovrAvatar;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OvrAvatarRemoteDriver _remoteDriver;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<byte[]> _packetData;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _localSequence;

		[Token(Token = "0x170003C3")]
		private bool NotReadyForSerialization
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xB0AA8C", Offset = "0xB0AA8C", VA = "0xB0AA8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xB0AB5C", Offset = "0xB0AB5C", VA = "0xB0AB5C", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xB0AD40", Offset = "0xB0AD40", VA = "0xB0AD40")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xB0AE58", Offset = "0xB0AE58", VA = "0xB0AE58")]
		public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xB0B154", Offset = "0xB0B154", VA = "0xB0B154")]
		private void DeserializeAndQueuePacketData(byte[] data)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xB0B400", Offset = "0xB0B400", VA = "0xB0B400")]
		private void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xB0B864", Offset = "0xB0B864", VA = "0xB0B864")]
		public OVRAvatarView()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class PhotonPlayerCounter : UIView
	{
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _currentPlayersInRoomLabel;

		[Token(Token = "0x170003C4")]
		public UILabel CurrentPlayersInRoomLabel
		{
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xB0BC8C", Offset = "0xB0BC8C", VA = "0xB0BC8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xB0BC94", Offset = "0xB0BC94", VA = "0xB0BC94")]
			set
			{
			}
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xB0BC9C", Offset = "0xB0BC9C", VA = "0xB0BC9C")]
		public PhotonPlayerCounter()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class PlayerInLobby : UILabel
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UIImage _separator;

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xB088D0", Offset = "0xB088D0", VA = "0xB088D0")]
		public void SetUsername(string username)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xB088D8", Offset = "0xB088D8", VA = "0xB088D8")]
		public void HideSeparator()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xB08914", Offset = "0xB08914", VA = "0xB08914")]
		public void ShowSeparator()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xB0BCA4", Offset = "0xB0BCA4", VA = "0xB0BCA4")]
		public PlayerInLobby()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class PlayerNetwork : MonoSingleton<PlayerNetwork>
	{
		[Serializable]
		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E35E4", Offset = "0x9E35E4")]
		private sealed class <>c
		{
			[Token(Token = "0x400162A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400162B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MultiplayerTeleportButton, int> <>9__34_0;

			[Token(Token = "0x400162C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Transform, Vector3> <>9__37_0;

			[Token(Token = "0x400162D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Transform, Quaternion> <>9__38_0;

			[Token(Token = "0x400162E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<VRMultiplayerUser, int> <>9__39_1;

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xB0F560", Offset = "0xB0F560", VA = "0xB0F560")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xB0F568", Offset = "0xB0F568", VA = "0xB0F568")]
			internal int <HandleOnSceneFinishedLoading>b__34_0(MultiplayerTeleportButton x)
			{
				return default(int);
			}

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xB0F594", Offset = "0xB0F594", VA = "0xB0F594")]
			internal Vector3 <GetSpawnPointsPositionsFromTable>b__37_0(Transform seat)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xB0F5C4", Offset = "0xB0F5C4", VA = "0xB0F5C4")]
			internal Quaternion <GetSpawnPointsRotationsFromTable>b__38_0(Transform seat)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xB0F5F4", Offset = "0xB0F5F4", VA = "0xB0F5F4")]
			internal int <HandleOnPhotonEvent>b__39_1(VRMultiplayerUser user)
			{
				return default(int);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E35F4", Offset = "0x9E35F4")]
		private struct <HandleOnPhotonEvent>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x400162F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerNetwork <>4__this;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public object content;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int senderid;

			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public byte eventcode;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private object <>u__1;

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xA831AC", Offset = "0xA831AC", VA = "0xA831AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xA831B4", Offset = "0xA831B4", VA = "0xA831B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3604", Offset = "0x9E3604")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PhotonMessageInfo messageInfo;

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xBA9620", Offset = "0xBA9620", VA = "0xBA9620")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xBA9628", Offset = "0xBA9628", VA = "0xBA9628")]
			internal bool <SetCurrentTableForUser>b__0(VRMultiplayerUser multiplayerUser)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3614", Offset = "0x9E3614")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PhotonMessageInfo messageInfo;

			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0xBA96CC", Offset = "0xBA96CC", VA = "0xBA96CC")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xBA96D4", Offset = "0xBA96D4", VA = "0xBA96D4")]
			internal bool <TeleportAvatar>b__0(VRMultiplayerUser multiplayerUser)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3624", Offset = "0x9E3624")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PhotonMessageInfo messageInfo;

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0xBA9770", Offset = "0xBA9770", VA = "0xBA9770")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0xBA9778", Offset = "0xBA9778", VA = "0xBA9778")]
			internal bool <ResetPanelContent>b__0(VRMultiplayerUser multiplayerUser)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3634", Offset = "0x9E3634")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4001639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerNetwork <>4__this;

			[Token(Token = "0x400163A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string photonPlayerNickname;

			[Token(Token = "0x400163B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRMultiplayerUser userToChange;

			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<OutputData> outputData;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<OutputData> receivedSuggestions;

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0xBA9814", Offset = "0xBA9814", VA = "0xBA9814")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xBA981C", Offset = "0xBA981C", VA = "0xBA981C")]
			internal bool <SetPanelsContent>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0xBA9848", Offset = "0xBA9848", VA = "0xBA9848")]
			internal bool <SetPanelsContent>b__1(VRMultiplayerUser multiplayerUser)
			{
				return default(bool);
			}

			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xBA98C4", Offset = "0xBA98C4", VA = "0xBA98C4")]
			internal void <SetPanelsContent>b__2()
			{
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xBA9A44", Offset = "0xBA9A44", VA = "0xBA9A44")]
			internal void <SetPanelsContent>b__3()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3644", Offset = "0x9E3644")]
		private struct <SetPanelsContent>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerNetwork <>4__this;

			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string photonPlayerNickname;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass47_0 <>8__1;

			[Token(Token = "0x4001643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string recognizedText;

			[Token(Token = "0x4001644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string[] texts;

			[Token(Token = "0x4001645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string[] audioURLs;

			[Token(Token = "0x4001646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string[] phoneticTexts;

			[Token(Token = "0x4001647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private object <>u__1;

			[Token(Token = "0x4001648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<OutputData> <>7__wrap1;

			[Token(Token = "0x4001649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private OutputData <>7__wrap2;

			[Token(Token = "0x400164A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private OutputDataComponent <>7__wrap3;

			[Token(Token = "0x400164B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private OutputData <>7__wrap4;

			[Token(Token = "0x400164C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<OutputData> <>7__wrap5;

			[Token(Token = "0x400164D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private TaskAwaiter<string> <>u__2;

			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private int <i>5__7;

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0xA831C0", Offset = "0xA831C0", VA = "0xA831C0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xA831C8", Offset = "0xA831C8", VA = "0xA831C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B28", Offset = "0x9E8B28")]
		private string <PlayerName>k__BackingField;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PhotonView _photonView;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public List<Vector3> SpawnPointsPositions;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public List<Quaternion> SpawnPointsRotations;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly byte InstantiateVrAvatarEventCode;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<string> OculusIDs;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject _avatarToInstantiate;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private VRMultiplayerUser _multiplayerUser;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<VRMultiplayerUser> MultiplayerUsers;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8B68", Offset = "0x9E8B68")]
		private string <SelectedAvatarId>k__BackingField;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool DidLoadStoryScene;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject _playerPrefab;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int TableSeatIndex;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public MultiplayerTeleportButton CurrentTable;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int CurrentTableIndex;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<MultiplayerTeleportButton> Tables;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SocketIOComponent SocketIoComponent;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public MultiplayerSuggestionsAnalyzer MultiplayerSuggestionsAnalyzer;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool IsAvatarInstatiated;

		[Token(Token = "0x170003C5")]
		public string PlayerName
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0xB0BCAC", Offset = "0xB0BCAC", VA = "0xB0BCAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F07F8", Offset = "0x9F07F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0xB0BCB4", Offset = "0xB0BCB4", VA = "0xB0BCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0808", Offset = "0x9F0808")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C6")]
		public string SelectedAvatarId
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xB0AD38", Offset = "0xB0AD38", VA = "0xB0AD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0818", Offset = "0x9F0818")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0xB07714", Offset = "0xB07714", VA = "0xB07714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0828", Offset = "0x9F0828")]
			set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public PhotonView PhotonView
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xB0BE0C", Offset = "0xB0BE0C", VA = "0xB0BE0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000037")]
		public event Action<VRMultiplayerUser> OnPlayerConnected
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xB0BCBC", Offset = "0xB0BCBC", VA = "0xB0BCBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0838", Offset = "0x9F0838")]
			add
			{
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xB0BD64", Offset = "0xB0BD64", VA = "0xB0BD64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0848", Offset = "0x9F0848")]
			remove
			{
			}
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xB0BE14", Offset = "0xB0BE14", VA = "0xB0BE14", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xB0C2E0", Offset = "0xB0C2E0", VA = "0xB0C2E0", Slot = "10")]
		protected override void EnableComponent()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xB0C380", Offset = "0xB0C380", VA = "0xB0C380", Slot = "15")]
		protected override void DisableComponent()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xB0C420", Offset = "0xB0C420", VA = "0xB0C420", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xB0C4C8", Offset = "0xB0C4C8", VA = "0xB0C4C8")]
		private void HandleOnSceneFinishedLoading(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xB0D374", Offset = "0xB0D374", VA = "0xB0D374")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xB0CECC", Offset = "0xB0CECC", VA = "0xB0CECC")]
		public void FindFirstEmptyTable()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xB0D0DC", Offset = "0xB0D0DC", VA = "0xB0D0DC")]
		private List<Vector3> GetSpawnPointsPositionsFromTable(int table)
		{
			return null;
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xB0D228", Offset = "0xB0D228", VA = "0xB0D228")]
		private List<Quaternion> GetSpawnPointsRotationsFromTable(int table)
		{
			return null;
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xB0D770", Offset = "0xB0D770", VA = "0xB0D770")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0858", Offset = "0x9F0858")]
		public void HandleOnPhotonEvent(byte eventcode, object content, int senderid)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xB0D84C", Offset = "0xB0D84C", VA = "0xB0D84C")]
		public void OnPhotonRandomJoinFailed()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xB0DA88", Offset = "0xB0DA88", VA = "0xB0DA88")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xB0DC00", Offset = "0xB0DC00", VA = "0xB0DC00")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xB0DE88", Offset = "0xB0DE88", VA = "0xB0DE88")]
		public void OnPhotonPlayerDisconnected(PhotonPlayer player)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xB0E380", Offset = "0xB0E380", VA = "0xB0E380")]
		[PunRPC]
		public void SetCurrentTableForUser(int user, int table, bool isOnSpawnPoint, PhotonMessageInfo messageInfo)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xB0E48C", Offset = "0xB0E48C", VA = "0xB0E48C")]
		[PunRPC]
		public void TeleportAvatar(int user, Vector3 position, Quaternion rotation, PhotonMessageInfo messageInfo)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xB0E6CC", Offset = "0xB0E6CC", VA = "0xB0E6CC")]
		[PunRPC]
		public void ResetPanelContent(int user, PhotonMessageInfo messageInfo)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xB0E8F8", Offset = "0xB0E8F8", VA = "0xB0E8F8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F08EC", Offset = "0x9F08EC")]
		[PunRPC]
		private void SetPanelsContent(int index, string[] texts, string[] audioURLs, string[] phoneticTexts, string recognizedText, string photonPlayerNickname)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xB0E9EC", Offset = "0xB0E9EC", VA = "0xB0E9EC")]
		[PunRPC]
		public void HidePanelAfterTeleport(int userIndex)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xB0EC44", Offset = "0xB0EC44", VA = "0xB0EC44")]
		[PunRPC]
		public void SendUserInputForUser(string userInput, int userIndex, int user, string photonPlayerNickname)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xB0ECA0", Offset = "0xB0ECA0", VA = "0xB0ECA0")]
		[PunRPC]
		public void ChangeTeleportButtonState(int table, bool trigger)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xB0EDC8", Offset = "0xB0EDC8", VA = "0xB0EDC8")]
		[PunRPC]
		public void ResetSocket(PhotonMessageInfo messageInfo)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xB0EEBC", Offset = "0xB0EEBC", VA = "0xB0EEBC")]
		public void HandleOnSuggestionsReceived(MultiplayerSuggestionsAnalyzer multiplayerSuggestionsAnalyzer, string[] texts, string[] audios, string[] phoneticTexts, string recognizedText, string photonPlayerNickname, int user)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xB0F158", Offset = "0xB0F158", VA = "0xB0F158")]
		public int GetLocalAvatarIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xB0F230", Offset = "0xB0F230", VA = "0xB0F230")]
		private void OnFailedToConnectToPhoton(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xB0F300", Offset = "0xB0F300", VA = "0xB0F300")]
		private void OnPhotonMaxCccuReached()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xB0F378", Offset = "0xB0F378", VA = "0xB0F378")]
		public PlayerNetwork()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xB0F3D0", Offset = "0xB0F3D0", VA = "0xB0F3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F09A0", Offset = "0x9F09A0")]
		private bool <HandleOnPhotonEvent>b__39_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xB0F3D8", Offset = "0xB0F3D8", VA = "0xB0F3D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F09B0", Offset = "0x9F09B0")]
		private void <OnPhotonPlayerDisconnected>b__43_0()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class TooltipAlphaController : BaseMonoBehaviour
	{
		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Camera _mainCamera;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _maxDistance;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _currectDistance;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LineRenderer[] _lineRenderers;

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xBABC50", Offset = "0xBABC50", VA = "0xBABC50", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xBABC80", Offset = "0xBABC80", VA = "0xBABC80")]
		private void Update()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xBAC07C", Offset = "0xBAC07C", VA = "0xBAC07C")]
		public TooltipAlphaController()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class VoiceManager : AutoMonoSingleton<VoiceManager>
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public MultiplayerUnityVoiceRecorder VoiceRecorder;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public GoogleTranslate GoogleTranslator;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public ISpeechSynthesizer Synthesiser;

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xBAF3E4", Offset = "0xBAF3E4", VA = "0xBAF3E4", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xBAF5AC", Offset = "0xBAF5AC", VA = "0xBAF5AC")]
		public VoiceManager()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xBAF5FC", Offset = "0xBAF5FC", VA = "0xBAF5FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F09C0", Offset = "0x9F09C0")]
		private IAudioSource <AwakeComponent>b__3_0(PhotonVoiceRecorder rec)
		{
			return null;
		}
	}
	[Token(Token = "0x2000275")]
	public class VoiceScript : MonoSingleton<VoiceScript>
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PhotonView _photonView;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public PhotonVoiceRecorder PhotonVoiceRecorder;

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xBAF604", Offset = "0xBAF604", VA = "0xBAF604", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xBAF774", Offset = "0xBAF774", VA = "0xBAF774")]
		public VoiceScript()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class VRMultiplayerUser : SceneObject, IVRInteractable
	{
		[StructLayout(3)]
		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3654", Offset = "0x9E3654")]
		private struct <AwakeComponent>d__46 : IAsyncStateMachine
		{
			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRMultiplayerUser <>4__this;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xA831D4", Offset = "0xA831D4", VA = "0xA831D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xA831DC", Offset = "0xA831DC", VA = "0xA831DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3664", Offset = "0x9E3664")]
		private struct <HandleSpeechRecognizerOnResult>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string recognizedText;

			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isFinal;

			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRMultiplayerUser <>4__this;

			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xA831E8", Offset = "0xA831E8", VA = "0xA831E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xA831F0", Offset = "0xA831F0", VA = "0xA831F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float _gazeDuration;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _isGazable;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private PhotonView _photonView;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _isStarted;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool _isFirstTime;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ATiStudios.Core.TimingHandler _handlerResult;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ATiStudios.Core.TimingHandler _handlerError;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public SuggestionsFeedbackPanel SuggestionsFeedbackPanel;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ATiStudios.MondlyVR.UI.Panels.SubtitleFeedbackPanel SubtitleFeedbackPanel;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public MultiplayerUserFeedbackPanel UserFeedbackPanel;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public ObjectNamePanel UsernamePanel;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AbstractVrController _abstractController;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool _isRecordingForbidden;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private TriggerBool _triggerForceStartRecording;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		private bool _isLocalAvatar;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private EAudioSource _audioSourceSubtitleTTS;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private UIButton _togglePhonetic;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private OvrAvatar _ovrAvatar;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private RoundedLoadingImage _roundedLoadingImage;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private UIImage _speakerImage;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private UIButton _closeSubtitlePanelButton;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private UIButton _closeSuggestionPanelButton;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private AudioClip _synthesiserAudioClip;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string Username;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int CurrentTable;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private PhotonPlayer _photonPlayer;

		[Token(Token = "0x170003C8")]
		public float GazeDuration
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0xBAC090", Offset = "0xBAC090", VA = "0xBAC090", Slot = "43")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001622")]
			[Address(RVA = "0xBAC098", Offset = "0xBAC098", VA = "0xBAC098", Slot = "44")]
			set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public bool IsGazable
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0xBAC0A0", Offset = "0xBAC0A0", VA = "0xBAC0A0", Slot = "45")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xBAC0A8", Offset = "0xBAC0A8", VA = "0xBAC0A8", Slot = "46")]
			set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public PhotonView PhotonView
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xBA96C4", Offset = "0xBA96C4", VA = "0xBA96C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		public bool IsLocalAvatar
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xBAC0B4", Offset = "0xBAC0B4", VA = "0xBAC0B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xBAAD28", Offset = "0xBAAD28", VA = "0xBAAD28")]
			set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public UIButton TogglePhonetic
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xBAC0BC", Offset = "0xBAC0BC", VA = "0xBAC0BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		public UIImage SpeakerImage
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xBAC0C4", Offset = "0xBAC0C4", VA = "0xBAC0C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		public AudioClip SynthesiserAudioClip
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xBAC0CC", Offset = "0xBAC0CC", VA = "0xBAC0CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600162B")]
			[Address(RVA = "0xBA9A3C", Offset = "0xBA9A3C", VA = "0xBA9A3C")]
			set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		public OvrAvatar OvrAvatar
		{
			[Token(Token = "0x600162C")]
			[Address(RVA = "0xBAAD34", Offset = "0xBAAD34", VA = "0xBAAD34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xBAC0D4", Offset = "0xBAC0D4", VA = "0xBAC0D4", Slot = "11")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F09D0", Offset = "0x9F09D0")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xBAC19C", Offset = "0xBAC19C", VA = "0xBAC19C", Slot = "12")]
		protected override void StartComponent()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xBAC6EC", Offset = "0xBAC6EC", VA = "0xBAC6EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xBAC71C", Offset = "0xBAC71C", VA = "0xBAC71C")]
		public void OnPointerEnterMultiplayerUser()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xBAC928", Offset = "0xBAC928", VA = "0xBAC928")]
		public void OnPointerExitMultiplayerUser()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xBACAA0", Offset = "0xBACAA0", VA = "0xBACAA0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xBACBD0", Offset = "0xBACBD0", VA = "0xBACBD0")]
		public void Resume()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xBACD94", Offset = "0xBACD94", VA = "0xBACD94")]
		public void HandleSpeechRecognizerOnUpdateVolume(SpeechRecognizer speechRecognizer, float volume)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xBAD034", Offset = "0xBAD034", VA = "0xBAD034")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0A34", Offset = "0x9F0A34")]
		public void HandleSpeechRecognizerOnResult(SpeechRecognizer speechRecognizer, string recognizedText, bool isFinal)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xBAD108", Offset = "0xBAD108", VA = "0xBAD108")]
		public void HandleSpeechRecognizerOnError(SpeechRecognizer speechRecognizer, ATiStudios.Foundation.Error error)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xBAD3C0", Offset = "0xBAD3C0", VA = "0xBAD3C0")]
		public void HandleSpeechRecognizerOnListeningEnd(SpeechRecognizer speechRecognizer)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xBAD5B4", Offset = "0xBAD5B4", VA = "0xBAD5B4")]
		[PunRPC]
		private void EnableUserSpeakingImage(int value, int index)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xBAD674", Offset = "0xBAD674", VA = "0xBAD674")]
		[PunRPC]
		private void HandleSubtitlePanelState(int state, int index)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xBAD9BC", Offset = "0xBAD9BC", VA = "0xBAD9BC")]
		[PunRPC]
		private void UpdateUsernamePanelColor(int index, float volume)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xBADA74", Offset = "0xBADA74", VA = "0xBADA74")]
		public void CallRPC(bool toggle)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xBACF38", Offset = "0xBACF38", VA = "0xBACF38")]
		private int GetLocalAvatarIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xBADEB4", Offset = "0xBADEB4", VA = "0xBADEB4")]
		public VRMultiplayerUser()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xBADEBC", Offset = "0xBADEBC", VA = "0xBADEBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0AC8", Offset = "0x9F0AC8")]
		private bool <AwakeComponent>b__46_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xBADEE8", Offset = "0xBADEE8", VA = "0xBADEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0AD8", Offset = "0x9F0AD8")]
		[DebuggerHidden]
		private void <>n__0()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xBADEF0", Offset = "0xBADEF0", VA = "0xBADEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B10", Offset = "0x9F0B10")]
		private void <StartComponent>b__47_0(IInteractable button)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xBADF90", Offset = "0xBADF90", VA = "0xBADF90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B20", Offset = "0x9F0B20")]
		private void <StartComponent>b__47_1(IInteractable button)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xBAE050", Offset = "0xBAE050", VA = "0xBAE050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B30", Offset = "0x9F0B30")]
		private void <StartComponent>b__47_2(IInteractable button)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xBAE61C", Offset = "0xBAE61C", VA = "0xBAE61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B40", Offset = "0x9F0B40")]
		private void <StartComponent>b__47_3(AudioClip audioclip)
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Models
{
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "TableAttribute", RVA = "0x9E2248", Offset = "0x9E2248")]
	public class CompletedCategory : IDatabaseModel
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8C98", Offset = "0x9E8C98")]
		private int <PrimaryKey>k__BackingField;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CA8", Offset = "0x9E8CA8")]
		private MondlyVRApp.Difficulty <Difficulty>k__BackingField;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CB8", Offset = "0x9E8CB8")]
		private Language <TargetLanguage>k__BackingField;

		[Token(Token = "0x170003D0")]
		[PrimaryKey]
		[AutoIncrement]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F4544", Offset = "0x9F4544")]
		public int PrimaryKey
		{
			[Token(Token = "0x6001644")]
			[Address(RVA = "0xB06A98", Offset = "0xB06A98", VA = "0xB06A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B50", Offset = "0x9F0B50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001645")]
			[Address(RVA = "0xB06AA0", Offset = "0xB06AA0", VA = "0xB06AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B60", Offset = "0x9F0B60")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F45A0", Offset = "0x9F45A0")]
		public MondlyVRApp.Difficulty Difficulty
		{
			[Token(Token = "0x6001646")]
			[Address(RVA = "0xAFE370", Offset = "0xAFE370", VA = "0xAFE370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B70", Offset = "0x9F0B70")]
			get
			{
				return default(MondlyVRApp.Difficulty);
			}
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xB06AA8", Offset = "0xB06AA8", VA = "0xB06AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B80", Offset = "0x9F0B80")]
			set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F45D8", Offset = "0x9F45D8")]
		public Language TargetLanguage
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0xAFE378", Offset = "0xAFE378", VA = "0xAFE378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0B90", Offset = "0x9F0B90")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x6001649")]
			[Address(RVA = "0xB06AB0", Offset = "0xB06AB0", VA = "0xB06AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0BA0", Offset = "0x9F0BA0")]
			set
			{
			}
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xB06AB8", Offset = "0xB06AB8", VA = "0xB06AB8")]
		public CompletedCategory()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "TableAttribute", RVA = "0x9E2280", Offset = "0x9E2280")]
	public class CompletedLesson : IDatabaseModel
	{
		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CC8", Offset = "0x9E8CC8")]
		private int <PrimaryKey>k__BackingField;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CD8", Offset = "0x9E8CD8")]
		private int <Id>k__BackingField;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CE8", Offset = "0x9E8CE8")]
		private LessonType <LessonType>k__BackingField;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8CF8", Offset = "0x9E8CF8")]
		private Language <TargetLanguage>k__BackingField;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8D08", Offset = "0x9E8D08")]
		private MondlyVRApp.Difficulty <Difficulty>k__BackingField;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8D18", Offset = "0x9E8D18")]
		private int <Stars>k__BackingField;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8D28", Offset = "0x9E8D28")]
		private int <CompletedCount>k__BackingField;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8D38", Offset = "0x9E8D38")]
		private int <PhrasesCount>k__BackingField;

		[Token(Token = "0x170003D3")]
		[PrimaryKey]
		[AutoIncrement]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F4610", Offset = "0x9F4610")]
		public int PrimaryKey
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0xAFD5C0", Offset = "0xAFD5C0", VA = "0xAFD5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0BB0", Offset = "0x9F0BB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600164C")]
			[Address(RVA = "0xAFD5C8", Offset = "0xAFD5C8", VA = "0xAFD5C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0BC0", Offset = "0x9F0BC0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F466C", Offset = "0x9F466C")]
		public int Id
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xAFE1B0", Offset = "0xAFE1B0", VA = "0xAFE1B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0BD0", Offset = "0x9F0BD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600164E")]
			[Address(RVA = "0xB06AC0", Offset = "0xB06AC0", VA = "0xB06AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0BE0", Offset = "0x9F0BE0")]
			set
			{
			}
		}

		[Token(Token = "0x170003D5")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F46A4", Offset = "0x9F46A4")]
		public LessonType LessonType
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xAFDE84", Offset = "0xAFDE84", VA = "0xAFDE84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0BF0", Offset = "0x9F0BF0")]
			get
			{
				return default(LessonType);
			}
			[Token(Token = "0x6001650")]
			[Address(RVA = "0xB06AC8", Offset = "0xB06AC8", VA = "0xB06AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C00", Offset = "0x9F0C00")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F46DC", Offset = "0x9F46DC")]
		public Language TargetLanguage
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0xAFEB94", Offset = "0xAFEB94", VA = "0xAFEB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C10", Offset = "0x9F0C10")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x6001652")]
			[Address(RVA = "0xB06AD0", Offset = "0xB06AD0", VA = "0xB06AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C20", Offset = "0x9F0C20")]
			set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F4714", Offset = "0x9F4714")]
		public MondlyVRApp.Difficulty Difficulty
		{
			[Token(Token = "0x6001653")]
			[Address(RVA = "0xAFEC14", Offset = "0xAFEC14", VA = "0xAFEC14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C30", Offset = "0x9F0C30")]
			get
			{
				return default(MondlyVRApp.Difficulty);
			}
			[Token(Token = "0x6001654")]
			[Address(RVA = "0xB06AD8", Offset = "0xB06AD8", VA = "0xB06AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C40", Offset = "0x9F0C40")]
			set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F474C", Offset = "0x9F474C")]
		public int Stars
		{
			[Token(Token = "0x6001655")]
			[Address(RVA = "0xAFD5B0", Offset = "0xAFD5B0", VA = "0xAFD5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C50", Offset = "0x9F0C50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001656")]
			[Address(RVA = "0xAFD5B8", Offset = "0xAFD5B8", VA = "0xAFD5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C60", Offset = "0x9F0C60")]
			set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F4784", Offset = "0x9F4784")]
		public int CompletedCount
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0xAFD5A0", Offset = "0xAFD5A0", VA = "0xAFD5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C70", Offset = "0x9F0C70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001658")]
			[Address(RVA = "0xAFD5A8", Offset = "0xAFD5A8", VA = "0xAFD5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C80", Offset = "0x9F0C80")]
			set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		[AttributeAttribute(Name = "ColumnAttribute", RVA = "0x9F47BC", Offset = "0x9F47BC")]
		public int PhrasesCount
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0xAFE988", Offset = "0xAFE988", VA = "0xAFE988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0C90", Offset = "0x9F0C90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600165A")]
			[Address(RVA = "0xB06AE0", Offset = "0xB06AE0", VA = "0xB06AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0CA0", Offset = "0x9F0CA0")]
			set
			{
			}
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xB06AE8", Offset = "0xB06AE8", VA = "0xB06AE8")]
		public CompletedLesson()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.MicrophoneCalibration
{
	[Token(Token = "0x2000279")]
	public enum EnvironmentNoiseLevel
	{
		[Token(Token = "0x4000F74")]
		VeryGood,
		[Token(Token = "0x4000F75")]
		Good,
		[Token(Token = "0x4000F76")]
		Bad
	}
	[Token(Token = "0x200027A")]
	public static class MicrophoneCalibrator
	{
		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3674", Offset = "0x9E3674")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityVoiceRecorder voiceRecorder;

			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<float> recordedVolumes;

			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0xB06704", Offset = "0xB06704", VA = "0xB06704")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xB067E4", Offset = "0xB067E4", VA = "0xB067E4")]
			internal void <Calibrate>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3684", Offset = "0x9E3684")]
		private sealed class <>c
		{
			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<float, bool> <>9__11_1;

			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xB067D0", Offset = "0xB067D0", VA = "0xB067D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xB067D8", Offset = "0xB067D8", VA = "0xB067D8")]
			internal bool <Calibrate>b__11_1(float value)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F77")]
		private const string LOG_SUBTYPE_NAME = "MicrophoneCalibrator";

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float MaxRecordedVolumeDuringCalibration;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool IsCalibrating;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float s_realCalibratedValue;

		[Token(Token = "0x170003DB")]
		public static float CalibratedValue
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0xB06188", Offset = "0xB06188", VA = "0xB06188")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DC")]
		public static EnvironmentNoiseLevel NoiseLevel
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0xB06200", Offset = "0xB06200", VA = "0xB06200")]
			get
			{
				return default(EnvironmentNoiseLevel);
			}
		}

		[Token(Token = "0x14000038")]
		public static event Action<float> CompletionCallback
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0xB062E4", Offset = "0xB062E4", VA = "0xB062E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0CB0", Offset = "0x9F0CB0")]
			add
			{
			}
			[Token(Token = "0x600165F")]
			[Address(RVA = "0xB063D8", Offset = "0xB063D8", VA = "0xB063D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0CC0", Offset = "0x9F0CC0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xB064CC", Offset = "0xB064CC", VA = "0xB064CC")]
		public static void Calibrate(float calibrationDuration)
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Localization
{
	[Token(Token = "0x200027B")]
	public sealed class MondlyVRLocalization : ILocalization
	{
		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, string> _localizations;

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xB05D34", Offset = "0xB05D34", VA = "0xB05D34")]
		public MondlyVRLocalization()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xB05EF8", Offset = "0xB05EF8", VA = "0xB05EF8", Slot = "1")]
		~MondlyVRLocalization()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xB05FFC", Offset = "0xB05FFC", VA = "0xB05FFC", Slot = "4")]
		public string GetLocalizationForKey(string localizationKey)
		{
			return null;
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xB05DE4", Offset = "0xB05DE4", VA = "0xB05DE4")]
		private void LoadLocalizationFile()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public sealed class MondlyVRLocalizationManager : LocalizationManager
	{
		[Token(Token = "0x6001666")]
		[Address(RVA = "0xB06128", Offset = "0xB06128", VA = "0xB06128", Slot = "19")]
		protected override ILocalization SetupLocalization()
		{
			return null;
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xB06180", Offset = "0xB06180", VA = "0xB06180")]
		public MondlyVRLocalizationManager()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Leaderboard
{
	[Token(Token = "0x200027D")]
	public class LeaderboardTitleView : UIView
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Text _titleLabel;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Image _flagImage;

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xB02160", Offset = "0xB02160", VA = "0xB02160")]
		public void SetLocalizationForLanguageTitle(Language language)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xB02214", Offset = "0xB02214", VA = "0xB02214")]
		public void SetFlagIcon(Language language)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xB02310", Offset = "0xB02310", VA = "0xB02310")]
		public LeaderboardTitleView()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class LeaderboardView : UIView
	{
		[StructLayout(3)]
		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3694", Offset = "0x9E3694")]
		private struct <PopulateLeaderboard>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LeaderboardView <>4__this;

			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int numberOfEntries;

			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AbstractLeaderboardManager.UserDetails currentUser;

			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<List<AbstractLeaderboardManager.UserDetails>> <>u__1;

			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xA82BE4", Offset = "0xA82BE4", VA = "0xA82BE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xA82BEC", Offset = "0xA82BEC", VA = "0xA82BEC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E36A4", Offset = "0x9E36A4")]
		private struct <AddEntry>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LeaderboardView <>4__this;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AbstractLeaderboardManager.UserDetails userDetails;

			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private AsyncOperationHandle<GameObject> <entryGameobject>5__2;

			[Token(Token = "0x4001668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private TaskAwaiter<GameObject> <>u__1;

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xA82BD0", Offset = "0xA82BD0", VA = "0xA82BD0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xA82BD8", Offset = "0xA82BD8", VA = "0xA82BD8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIView _entriesParent;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private LeaderboardTitleView _leaderboardTitleView;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private RoundedLoadingImage _roundedLoadingImage;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<AbstractLeaderboardManager.UserDetails> _users;

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xB02318", Offset = "0xB02318", VA = "0xB02318", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xB02474", Offset = "0xB02474", VA = "0xB02474")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0CD0", Offset = "0x9F0CD0")]
		public void PopulateLeaderboard(int numberOfEntries, AbstractLeaderboardManager.UserDetails currentUser)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xB0255C", Offset = "0xB0255C", VA = "0xB0255C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0D34", Offset = "0x9F0D34")]
		private void AddEntry(AbstractLeaderboardManager.UserDetails userDetails)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xB0263C", Offset = "0xB0263C", VA = "0xB0263C")]
		private void AddCurrentUserIfMissingFromLeaderboard(AbstractLeaderboardManager.UserDetails userDetails, int leaderboardEntries)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xB026A8", Offset = "0xB026A8", VA = "0xB026A8")]
		public LeaderboardView()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class MondlyLeaderboardEntry : UIView
	{
		[StructLayout(3)]
		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E36B4", Offset = "0x9E36B4")]
		private struct <LoadProfileImage>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400166A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400166B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x400166C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MondlyLeaderboardEntry <>4__this;

			[Token(Token = "0x400166D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private object <>u__1;

			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xA82BF8", Offset = "0xA82BF8", VA = "0xA82BF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0xA82C00", Offset = "0xA82C00", VA = "0xA82C00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Text _rankText;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Image _profileImage;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Text _displayNameText;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Text _displayScoreText;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UIImage _highlightImage;

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xB02A04", Offset = "0xB02A04", VA = "0xB02A04")]
		public void AddUserDetails(AbstractLeaderboardManager.UserDetails userDetails)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xB02B04", Offset = "0xB02B04", VA = "0xB02B04")]
		public void HighlightCurrentUser()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xB02F94", Offset = "0xB02F94", VA = "0xB02F94")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0D98", Offset = "0x9F0D98")]
		private void LoadProfileImage(string url)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xB03058", Offset = "0xB03058", VA = "0xB03058")]
		private Texture2D ScaleTexture(Texture2D source, int targetWidth, int targetHeight)
		{
			return null;
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xB03264", Offset = "0xB03264", VA = "0xB03264")]
		public MondlyLeaderboardEntry()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public sealed class OculusQuestLeaderboardManager : AbstractLeaderboardManager
	{
		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E36C4", Offset = "0x9E36C4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xB0386C", Offset = "0xB0386C", VA = "0xB0386C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001D01")]
			[Address(RVA = "0xB0436C", Offset = "0xB0436C", VA = "0xB0436C")]
			internal void <WriteScore>b__0(Message<bool> message)
			{
			}
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E36D4", Offset = "0x9E36D4")]
		private sealed class <>c__DisplayClass6_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200049C")]
			private struct <<GetLeaderboard>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001792")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001793")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x4001794")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass6_0 <>4__this;

				[Token(Token = "0x4001795")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private object <>u__1;

				[Token(Token = "0x6001E00")]
				[Address(RVA = "0xA82C0C", Offset = "0xA82C0C", VA = "0xA82C0C", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001E01")]
				[Address(RVA = "0xA82C14", Offset = "0xA82C14", VA = "0xA82C14", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isRunning;

			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<UserDetails> leaderboardEntries;

			[Token(Token = "0x6001D02")]
			[Address(RVA = "0xB0445C", Offset = "0xB0445C", VA = "0xB0445C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xB04464", Offset = "0xB04464", VA = "0xB04464")]
			internal void <GetLeaderboard>b__0(Message<LeaderboardEntryList> message)
			{
			}

			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xB048B4", Offset = "0xB048B4", VA = "0xB048B4")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F3570", Offset = "0x9F3570")]
			internal Task <GetLeaderboard>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E36E4", Offset = "0x9E36E4")]
		private struct <GetLeaderboard>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<UserDetails>> <>t__builder;

			[Token(Token = "0x4001674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string leaderboardName;

			[Token(Token = "0x4001675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass6_0 <>8__1;

			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xA82C54", Offset = "0xA82C54", VA = "0xA82C54", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xA82C5C", Offset = "0xA82C5C", VA = "0xA82C5C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E36F4", Offset = "0x9E36F4")]
		private struct <GetLanguageLeaderboard>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<UserDetails>> <>t__builder;

			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusQuestLeaderboardManager <>4__this;

			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<List<UserDetails>> <>u__1;

			[Token(Token = "0x6001D07")]
			[Address(RVA = "0xA82C44", Offset = "0xA82C44", VA = "0xA82C44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D08")]
			[Address(RVA = "0xA82C4C", Offset = "0xA82C4C", VA = "0xA82C4C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3704", Offset = "0x9E3704")]
		private sealed class <>c__DisplayClass8_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200049D")]
			private struct <<GetCurrentUserFromLeadeboard>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x4001796")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x4001797")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x4001798")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass8_0 <>4__this;

				[Token(Token = "0x4001799")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private object <>u__1;

				[Token(Token = "0x6001E02")]
				[Address(RVA = "0xA82C20", Offset = "0xA82C20", VA = "0xA82C20", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001E03")]
				[Address(RVA = "0xA82C28", Offset = "0xA82C28", VA = "0xA82C28", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isRunning;

			[Token(Token = "0x400167C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UserDetails userDetails;

			[Token(Token = "0x6001D09")]
			[Address(RVA = "0xB04CE4", Offset = "0xB04CE4", VA = "0xB04CE4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0xB04CEC", Offset = "0xB04CEC", VA = "0xB04CEC")]
			internal void <GetCurrentUserFromLeadeboard>b__0(Message<LeaderboardEntryList> message)
			{
			}

			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0xB04ED8", Offset = "0xB04ED8", VA = "0xB04ED8")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F35F4", Offset = "0x9F35F4")]
			internal Task <GetCurrentUserFromLeadeboard>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3714", Offset = "0x9E3714")]
		private struct <GetCurrentUserFromLeadeboard>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x400167D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400167E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<UserDetails> <>t__builder;

			[Token(Token = "0x400167F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string leaderboardName;

			[Token(Token = "0x4001680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x4001681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0xA82C34", Offset = "0xA82C34", VA = "0xA82C34", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0xA82C3C", Offset = "0xA82C3C", VA = "0xA82C3C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F88")]
		[DebugGroup]
		private const string DEBUG_GROUP = "OCULUS_LEADERBOARD";

		[Token(Token = "0x170003DD")]
		private string _languageLeaderboardName
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0xB03608", Offset = "0xB03608", VA = "0xB03608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xB036C0", Offset = "0xB036C0", VA = "0xB036C0")]
		public OculusQuestLeaderboardManager()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xB0377C", Offset = "0xB0377C", VA = "0xB0377C", Slot = "4")]
		public override void WriteScore(string leaderboardName, int score, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xB03874", Offset = "0xB03874", VA = "0xB03874", Slot = "5")]
		public override void WriteLanguageLeaderboardScore(int score, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB038BC", Offset = "0xB038BC", VA = "0xB038BC", Slot = "6")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0DFC", Offset = "0x9F0DFC")]
		public override Task<List<UserDetails>> GetLeaderboard(string leaderboardName)
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB039DC", Offset = "0xB039DC", VA = "0xB039DC", Slot = "7")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0E60", Offset = "0x9F0E60")]
		public override Task<List<UserDetails>> GetLanguageLeaderboard()
		{
			return null;
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xB03ADC", Offset = "0xB03ADC", VA = "0xB03ADC", Slot = "8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F0EC4", Offset = "0x9F0EC4")]
		public override Task<UserDetails> GetCurrentUserFromLeadeboard(string leaderboardName)
		{
			return null;
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xB03BFC", Offset = "0xB03BFC", VA = "0xB03BFC", Slot = "9")]
		public override Task<UserDetails> GetCurrentUserForLanguageLeaderboard()
		{
			return null;
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xB03C2C", Offset = "0xB03C2C", VA = "0xB03C2C")]
		private List<UserDetails> GetMockUsers()
		{
			return null;
		}
	}
}
namespace ATiStudios.MondlyVR.ImmersionLabels
{
	[Token(Token = "0x2000281")]
	public class ImmersionLabel : SceneObject
	{
		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private string _localizationKey;

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xB01C48", Offset = "0xB01C48", VA = "0xB01C48", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xB01F58", Offset = "0xB01F58", VA = "0xB01F58", Slot = "13")]
		protected override void DestroyComponent()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xB0201C", Offset = "0xB0201C", VA = "0xB0201C")]
		public ImmersionLabel()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class ImmersionLabelManager
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ImmersionLabelManager s_instance;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, string> _immersionLabels;

		[Token(Token = "0x170003DE")]
		public static ImmersionLabelManager Instance
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xB01DB0", Offset = "0xB01DB0", VA = "0xB01DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xB02024", Offset = "0xB02024", VA = "0xB02024")]
		private ImmersionLabelManager()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xB01E2C", Offset = "0xB01E2C", VA = "0xB01E2C")]
		public string GetImmersionLabel(string localizationKey)
		{
			return null;
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xB01FC4", Offset = "0xB01FC4", VA = "0xB01FC4")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xB0204C", Offset = "0xB0204C", VA = "0xB0204C")]
		private void LoadLocalizationFile()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Extensions
{
	[Token(Token = "0x2000283")]
	public static class AudioSourceExtensions
	{
		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3724", Offset = "0x9E3724")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource audioSource;

			[Token(Token = "0x4001683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0xB013E0", Offset = "0xB013E0", VA = "0xB013E0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xB013F0", Offset = "0xB013F0", VA = "0xB013F0")]
			internal float <VolumeFadeIn>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001D10")]
			[Address(RVA = "0xB01420", Offset = "0xB01420", VA = "0xB01420")]
			internal void <VolumeFadeIn>b__1(float value)
			{
			}

			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xB01460", Offset = "0xB01460", VA = "0xB01460")]
			internal void <VolumeFadeIn>b__2()
			{
			}
		}

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3734", Offset = "0x9E3734")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource audioSource;

			[Token(Token = "0x4001685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completionCallback;

			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xB013E8", Offset = "0xB013E8", VA = "0xB013E8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xB01474", Offset = "0xB01474", VA = "0xB01474")]
			internal float <VolumeFadeOut>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xB014A4", Offset = "0xB014A4", VA = "0xB014A4")]
			internal void <VolumeFadeOut>b__1(float value)
			{
			}

			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xB014E4", Offset = "0xB014E4", VA = "0xB014E4")]
			internal void <VolumeFadeOut>b__2()
			{
			}
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xAFADEC", Offset = "0xAFADEC", VA = "0xAFADEC")]
		public static void VolumeFadeIn(this AudioSource audioSource, float duration, [Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xAFB420", Offset = "0xAFB420", VA = "0xAFB420")]
		public static void VolumeFadeOut(this AudioSource audioSource, float duration, [Optional] Action completionCallback)
		{
		}
	}
	[Token(Token = "0x2000284")]
	public static class UIViewExtensions
	{
		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3744", Offset = "0x9E3744")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x6001D16")]
			[Address(RVA = "0xB014F8", Offset = "0xB014F8", VA = "0xB014F8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xB01BF8", Offset = "0xB01BF8", VA = "0xB01BF8")]
			internal void <HideAnimated>b__0()
			{
			}
		}

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3754", Offset = "0x9E3754")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xB01500", Offset = "0xB01500", VA = "0xB01500")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xB01C0C", Offset = "0xB01C0C", VA = "0xB01C0C")]
			internal void <ShowAnimated>b__0()
			{
			}
		}

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3764", Offset = "0x9E3764")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xB01888", Offset = "0xB01888", VA = "0xB01888")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0xB01C20", Offset = "0xB01C20", VA = "0xB01C20")]
			internal void <PulseAnimation>b__0()
			{
			}
		}

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3774", Offset = "0x9E3774")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0xB01A64", Offset = "0xB01A64", VA = "0xB01A64")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xB01C34", Offset = "0xB01C34", VA = "0xB01C34")]
			internal void <MoveHorizontallyAndReturnAnimation>b__0()
			{
			}
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xAFFB98", Offset = "0xAFFB98", VA = "0xAFFB98")]
		public static Tween HideAnimated(this UIView view, float duration, [Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xAFF9DC", Offset = "0xAFF9DC", VA = "0xAFF9DC")]
		public static Tween ShowAnimated(this UIView view, float duration, [Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xB01508", Offset = "0xB01508", VA = "0xB01508")]
		public static Tween PulseAnimation(this UIView view, float duration, float scalePercent, [Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xB01890", Offset = "0xB01890", VA = "0xB01890")]
		public static Tween MoveHorizontallyAndReturnAnimation(this UIView view, float duration, float offset, [Optional] Action completionCallback)
		{
			return null;
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xB01A6C", Offset = "0xB01A6C", VA = "0xB01A6C")]
		public static Tween HorizontalIndicationAnimation(this UIView view, float offset, float duration)
		{
			return null;
		}
	}
}
namespace ATiStudios.MondlyVR.DifficultySystem
{
	[Token(Token = "0x2000285")]
	public class DifficultySelectionOnBoardingViewController : DifficultySelectionViewController
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private VRButton _saveButton;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UILabel _explanationLabel;

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xAFEE94", Offset = "0xAFEE94", VA = "0xAFEE94", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xAFF260", Offset = "0xAFF260", VA = "0xAFF260", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xAFF2C0", Offset = "0xAFF2C0", VA = "0xAFF2C0", Slot = "51")]
		protected override void SetupEasyButton(IInteractable interactable)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xAFF530", Offset = "0xAFF530", VA = "0xAFF530", Slot = "52")]
		protected override void SetupMediumButton(IInteractable interactable)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xAFF6EC", Offset = "0xAFF6EC", VA = "0xAFF6EC", Slot = "53")]
		protected override void SetupHardButton(IInteractable interactable)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xAFF8A8", Offset = "0xAFF8A8", VA = "0xAFF8A8")]
		private void SetupSaveButton(IInteractable interactable)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xAFF364", Offset = "0xAFF364", VA = "0xAFF364")]
		private void ShowSaveButtonAtFirstRunAfterChoosingDifficulty()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xAFFF1C", Offset = "0xAFFF1C", VA = "0xAFFF1C")]
		public DifficultySelectionOnBoardingViewController()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xAFFF2C", Offset = "0xAFFF2C", VA = "0xAFFF2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0F98", Offset = "0x9F0F98")]
		private void <SetupSaveButton>b__7_0()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class DifficultySelectionViewController : UIView
	{
		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected DifficultySelectionButton _easyButton;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		protected DifficultySelectionButton _mediumButton;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected DifficultySelectionButton _hardButton;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private DifficultySelectionButton _currentActiveDifficultyButton;

		[Token(Token = "0x170003DF")]
		public DifficultySelectionButton EasyButton
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0xAFFF64", Offset = "0xAFFF64", VA = "0xAFFF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		public DifficultySelectionButton MediumButton
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xAFFF6C", Offset = "0xAFFF6C", VA = "0xAFFF6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		public DifficultySelectionButton HardButton
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xAFFF74", Offset = "0xAFFF74", VA = "0xAFFF74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xAFF0D4", Offset = "0xAFF0D4", VA = "0xAFF0D4", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xAFFD40", Offset = "0xAFFD40", VA = "0xAFFD40")]
		public void CheckForDifficulty()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xAFFF7C", Offset = "0xAFFF7C", VA = "0xAFFF7C")]
		public void Show()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xAFFF90", Offset = "0xAFFF90", VA = "0xAFFF90")]
		public void Hide()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xAFF418", Offset = "0xAFF418", VA = "0xAFF418", Slot = "51")]
		protected virtual void SetupEasyButton(IInteractable interactable)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xAFF5D4", Offset = "0xAFF5D4", VA = "0xAFF5D4", Slot = "52")]
		protected virtual void SetupMediumButton(IInteractable interactable)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xAFF790", Offset = "0xAFF790", VA = "0xAFF790", Slot = "53")]
		protected virtual void SetupHardButton(IInteractable interactable)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xAFFF24", Offset = "0xAFFF24", VA = "0xAFFF24")]
		public DifficultySelectionViewController()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class DifficultyStarView : UIView
	{
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIImage _firstStar;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIImage _secondStar;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UIImage _thirdStar;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private AudioClip _firstStarSoundEffect;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private AudioClip _secondStarSoundEffect;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private AudioClip _thirdStarSoundEffect;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Sequence _sequence;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float _duration;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float _delay;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private CurvedUIVertexEffect _firstStarVertexEffect;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private CurvedUIVertexEffect _secondStarVertexEffect;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private CurvedUIVertexEffect _thirdStarVertexEffect;

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xAFFFA4", Offset = "0xAFFFA4", VA = "0xAFFFA4", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xB00070", Offset = "0xB00070", VA = "0xB00070")]
		public void ShowStarsOnSceneCardHeader(int numberOfStarsToShow, bool animated)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xB00240", Offset = "0xB00240", VA = "0xB00240")]
		private void ShowThreeStars(bool shouldAnimate)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xB00150", Offset = "0xB00150", VA = "0xB00150")]
		private void ShowTwoStars(bool shouldAnimate)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xB000A4", Offset = "0xB000A4", VA = "0xB000A4")]
		private void ShowOneStar(bool shouldAnimate)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xB00E1C", Offset = "0xB00E1C", VA = "0xB00E1C")]
		public void ResetAllStarsOnView()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xB00F44", Offset = "0xB00F44", VA = "0xB00F44")]
		public void PrepareForAnimation()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB00368", Offset = "0xB00368", VA = "0xB00368")]
		private void ThreeStarAnimation()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xB00770", Offset = "0xB00770", VA = "0xB00770")]
		private void TwoStarAnimation()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xB00B04", Offset = "0xB00B04", VA = "0xB00B04")]
		private void OneStarAnimation()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xB01044", Offset = "0xB01044", VA = "0xB01044")]
		public DifficultyStarView()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xB01058", Offset = "0xB01058", VA = "0xB01058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0FA8", Offset = "0x9F0FA8")]
		private void <ThreeStarAnimation>b__20_0()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xB010B4", Offset = "0xB010B4", VA = "0xB010B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0FB8", Offset = "0x9F0FB8")]
		private void <ThreeStarAnimation>b__20_1()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xB01114", Offset = "0xB01114", VA = "0xB01114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0FC8", Offset = "0x9F0FC8")]
		private void <ThreeStarAnimation>b__20_2()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xB01174", Offset = "0xB01174", VA = "0xB01174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0FD8", Offset = "0x9F0FD8")]
		private void <ThreeStarAnimation>b__20_3()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xB011E0", Offset = "0xB011E0", VA = "0xB011E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0FE8", Offset = "0x9F0FE8")]
		private void <TwoStarAnimation>b__21_0()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xB0123C", Offset = "0xB0123C", VA = "0xB0123C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0FF8", Offset = "0x9F0FF8")]
		private void <TwoStarAnimation>b__21_1()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xB0129C", Offset = "0xB0129C", VA = "0xB0129C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1008", Offset = "0x9F1008")]
		private void <TwoStarAnimation>b__21_2()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xB01308", Offset = "0xB01308", VA = "0xB01308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1018", Offset = "0x9F1018")]
		private void <OneStarAnimation>b__22_0()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xB01364", Offset = "0xB01364", VA = "0xB01364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1028", Offset = "0x9F1028")]
		private void <OneStarAnimation>b__22_1()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class DifficultyTooltipView : UIView
	{
		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _difficultyExplanation;

		[Token(Token = "0x170003E2")]
		public UILabel DifficultyExplanation
		{
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0xB013D0", Offset = "0xB013D0", VA = "0xB013D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xB013D8", Offset = "0xB013D8", VA = "0xB013D8")]
		public DifficultyTooltipView()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Database
{
	[Token(Token = "0x2000289")]
	public class AppDatabaseHandler : DatabaseHandler
	{
		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3784", Offset = "0x9E3784")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CompletedLesson completedLesson;

			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xAFD598", Offset = "0xAFD598", VA = "0xAFD598")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xAFECD4", Offset = "0xAFECD4", VA = "0xAFECD4")]
			internal bool <MarkLessonCompleted>b__0(CompletedLesson lesson)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3794", Offset = "0x9E3794")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lessonId;

			[Token(Token = "0x400168C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Language targetLanguage;

			[Token(Token = "0x400168D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MondlyVRApp.Difficulty difficulty;

			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xAFD704", Offset = "0xAFD704", VA = "0xAFD704")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xAFED90", Offset = "0xAFED90", VA = "0xAFED90")]
			internal bool <IsLessonCompleted>b__0(CompletedLesson lesson)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E37A4", Offset = "0x9E37A4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400168E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int sceneIndex;

			[Token(Token = "0x400168F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MondlyVRApp.Difficulty difficulty;

			[Token(Token = "0x4001690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Language targetLanguage;

			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xAFD848", Offset = "0xAFD848", VA = "0xAFD848")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xAFEDF4", Offset = "0xAFEDF4", VA = "0xAFEDF4")]
			internal bool <GetCompletedLessonStars>b__0(CompletedLesson lesson)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E37B4", Offset = "0x9E37B4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MondlyVRApp.Difficulty difficulty;

			[Token(Token = "0x4001692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Language targetLanguage;

			[Token(Token = "0x6001D24")]
			[Address(RVA = "0xAFDD6C", Offset = "0xAFDD6C", VA = "0xAFDD6C")]
			public <>c__DisplayClass7_0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E37C4", Offset = "0x9E37C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CompletedLesson, int> <>9__7_1;

			[Token(Token = "0x4001695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<CompletedLesson, int> <>9__14_1;

			[Token(Token = "0x6001D26")]
			[Address(RVA = "0xAFEAE0", Offset = "0xAFEAE0", VA = "0xAFEAE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xAFEAE8", Offset = "0xAFEAE8", VA = "0xAFEAE8")]
			internal int <GetTotalStarsForDifficultyAndTargetLanguage>b__7_1(CompletedLesson lesson)
			{
				return default(int);
			}

			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xAFEB14", Offset = "0xAFEB14", VA = "0xAFEB14")]
			internal int <GetNumberOfCompletedLessonsType>b__14_1(CompletedLesson lesson)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E37D4", Offset = "0x9E37D4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Language targetLanguage;

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xAFDE7C", Offset = "0xAFDE7C", VA = "0xAFDE7C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xAFEE58", Offset = "0xAFEE58", VA = "0xAFEE58")]
			internal bool <GetLastCompletedLessonType>b__0(CompletedLesson lesson)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E37E4", Offset = "0x9E37E4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Language targetLanguage;

			[Token(Token = "0x4001698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LessonType lessonType;

			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xAFE1A0", Offset = "0xAFE1A0", VA = "0xAFE1A0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0xAFEB40", Offset = "0xAFEB40", VA = "0xAFEB40")]
			internal bool <GetLastCompletedScene>b__0(CompletedLesson lesson)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E37F4", Offset = "0x9E37F4")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x4001699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MondlyVRApp.Difficulty difficulty;

			[Token(Token = "0x400169A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xAFE1A8", Offset = "0xAFE1A8", VA = "0xAFE1A8")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0xAFEB9C", Offset = "0xAFEB9C", VA = "0xAFEB9C")]
			internal bool <GetLastCompletedScene>b__1(CompletedLesson lesson)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3804", Offset = "0x9E3804")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400169B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MondlyVRApp.Difficulty difficulty;

			[Token(Token = "0x400169C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Language targetLanguage;

			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xAFE2D4", Offset = "0xAFE2D4", VA = "0xAFE2D4")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001D30")]
			[Address(RVA = "0xAFEC1C", Offset = "0xAFEC1C", VA = "0xAFEC1C")]
			internal bool <IsCategoryCompletedForDifficultyAndLanguage>b__0(CompletedCategory cateogry)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3814", Offset = "0x9E3814")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400169D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LessonType lessonType;

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0xAFE844", Offset = "0xAFE844", VA = "0xAFE844")]
			public <>c__DisplayClass14_0()
			{
			}
		}

		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3824", Offset = "0x9E3824")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400169E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lessonID;

			[Token(Token = "0x400169F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Language language;

			[Token(Token = "0x40016A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MondlyVRApp.Difficulty difficulty;

			[Token(Token = "0x6001D32")]
			[Address(RVA = "0xAFE980", Offset = "0xAFE980", VA = "0xAFE980")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0xAFEC70", Offset = "0xAFEC70", VA = "0xAFEC70")]
			internal bool <GetNumberOfPhrasesForLesson>b__0(CompletedLesson lesson)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AppDatabaseHandler s_instance;

		[Token(Token = "0x170003E3")]
		public static AppDatabaseHandler Instance
		{
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0xAFD2CC", Offset = "0xAFD2CC", VA = "0xAFD2CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xAFD33C", Offset = "0xAFD33C", VA = "0xAFD33C")]
		private AppDatabaseHandler()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xAFD3AC", Offset = "0xAFD3AC", VA = "0xAFD3AC")]
		public void MarkLessonCompleted(CompletedLesson completedLesson)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xAFD5D0", Offset = "0xAFD5D0", VA = "0xAFD5D0")]
		public bool IsLessonCompleted(int lessonId, Language targetLanguage, MondlyVRApp.Difficulty difficulty)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xAFD70C", Offset = "0xAFD70C", VA = "0xAFD70C")]
		public int GetCompletedLessonStars(int sceneIndex, MondlyVRApp.Difficulty difficulty, Language targetLanguage)
		{
			return default(int);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xAFD850", Offset = "0xAFD850", VA = "0xAFD850")]
		public float GetTotalStarsForDifficultyAndTargetLanguage(MondlyVRApp.Difficulty difficulty, Language targetLanguage)
		{
			return default(float);
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xAFDD74", Offset = "0xAFDD74", VA = "0xAFDD74")]
		public LessonType GetLastCompletedLessonType(Language targetLanguage)
		{
			return default(LessonType);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xAFDE8C", Offset = "0xAFDE8C", VA = "0xAFDE8C")]
		public int GetTheNumberOfCompletedScenesOnDifficulty(MondlyVRApp.Difficulty difficulty, Language targetLanguage)
		{
			return default(int);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xAFDF9C", Offset = "0xAFDF9C", VA = "0xAFDF9C")]
		public int GetLastCompletedScene(Language targetLanguage, LessonType lessonType)
		{
			return default(int);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xAFE1B8", Offset = "0xAFE1B8", VA = "0xAFE1B8")]
		public bool IsCategoryCompletedForDifficultyAndLanguage(MondlyVRApp.Difficulty difficulty, Language targetLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xAFE2DC", Offset = "0xAFE2DC", VA = "0xAFE2DC")]
		public void MarkCategoryCompleted(CompletedCategory completedCategory)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xAFE380", Offset = "0xAFE380", VA = "0xAFE380")]
		public bool IsALessonCompletedinMultipleLanguages(int minNumberOfCompletedLessons)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xAFE480", Offset = "0xAFE480", VA = "0xAFE480")]
		public int GetNumberOfCompletedLessonsType(LessonType lessonType)
		{
			return default(int);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xAFE84C", Offset = "0xAFE84C", VA = "0xAFE84C")]
		public int GetNumberOfPhrasesForLesson(int lessonID, Language language, MondlyVRApp.Difficulty difficulty)
		{
			return default(int);
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xAFE990", Offset = "0xAFE990", VA = "0xAFE990")]
		public int GetTotalNumberOfLearnedPhrasesForLessonType(LessonType lessonType)
		{
			return default(int);
		}
	}
}
namespace ATiStudios.MondlyVR.Cutscenes
{
	[Serializable]
	[Token(Token = "0x200028A")]
	public class CutsceneAnimationAndSoundDelayer
	{
		[StructLayout(3)]
		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3834", Offset = "0x9E3834")]
		private struct <PlayAnimationDelayed>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x40016A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CutsceneAnimationAndSoundDelayer <>4__this;

			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001D34")]
			[Address(RVA = "0xA82B58", Offset = "0xA82B58", VA = "0xA82B58", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0xA82B60", Offset = "0xA82B60", VA = "0xA82B60", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3844", Offset = "0x9E3844")]
		private struct <PlaySoundDelayed>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40016A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CutsceneAnimationAndSoundDelayer <>4__this;

			[Token(Token = "0x40016A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0xA82B6C", Offset = "0xA82B6C", VA = "0xA82B6C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xA82B74", Offset = "0xA82B74", VA = "0xA82B74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000FA1")]
		private const string CUTSCENE_EXPERIENCE_GROUP = "Sounds and animations";

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _animationName;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _animationDelay;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _audioDelay;

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xAFA62C", Offset = "0xAFA62C", VA = "0xAFA62C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F1038", Offset = "0x9F1038")]
		public void PlayAnimationDelayed()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xAFA6F4", Offset = "0xAFA6F4", VA = "0xAFA6F4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F109C", Offset = "0x9F109C")]
		public void PlaySoundDelayed()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xAFA7BC", Offset = "0xAFA7BC", VA = "0xAFA7BC")]
		public CutsceneAnimationAndSoundDelayer()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E22D8", Offset = "0x9E22D8")]
	public class CutsceneAudioSource : BaseMonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3854", Offset = "0x9E3854")]
		private struct <StopAudioProgressively>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40016AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CutsceneAudioSource <>4__this;

			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private object <>u__1;

			[Token(Token = "0x6001D38")]
			[Address(RVA = "0xA82B80", Offset = "0xA82B80", VA = "0xA82B80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xA82B88", Offset = "0xA82B88", VA = "0xA82B88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _audioSource;

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xAFAD38", Offset = "0xAFAD38", VA = "0xAFAD38", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xAFAD9C", Offset = "0xAFAD9C", VA = "0xAFAD9C")]
		public void PlayAudioProgressively(float duration)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xAFAFD4", Offset = "0xAFAFD4", VA = "0xAFAFD4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F1100", Offset = "0x9F1100")]
		public void StopAudioProgressively(float duration)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xAFB0A0", Offset = "0xAFB0A0", VA = "0xAFB0A0")]
		public CutsceneAudioSource()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xAFB0A8", Offset = "0xAFB0A8", VA = "0xAFB0A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1164", Offset = "0x9F1164")]
		private bool <StopAudioProgressively>b__3_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200028C")]
	public class CutsceneTeleportPoint : SceneObject
	{
		[StructLayout(3)]
		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3864", Offset = "0x9E3864")]
		private struct <TeleportToNextPoint>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x40016AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40016B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CutsceneTeleportPoint <>4__this;

			[Token(Token = "0x40016B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0xA82BBC", Offset = "0xA82BBC", VA = "0xA82BBC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xA82BC4", Offset = "0xA82BC4", VA = "0xA82BC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3874", Offset = "0x9E3874")]
		private sealed class <>c__DisplayClass22_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200049E")]
			private struct <<SetPlayerPosition>b__0>d : IAsyncStateMachine
			{
				[Token(Token = "0x400179A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400179B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncVoidMethodBuilder <>t__builder;

				[Token(Token = "0x400179C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass22_0 <>4__this;

				[Token(Token = "0x400179D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private object <>u__1;

				[Token(Token = "0x6001E04")]
				[Address(RVA = "0xA82B94", Offset = "0xA82B94", VA = "0xA82B94", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001E05")]
				[Address(RVA = "0xA82B9C", Offset = "0xA82B9C", VA = "0xA82B9C", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40016B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CutsceneTeleportPoint <>4__this;

			[Token(Token = "0x40016B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform nextCutscenePoint;

			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0xAFB874", Offset = "0xAFB874", VA = "0xAFB874")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0xAFBB44", Offset = "0xAFBB44", VA = "0xAFBB44")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F36A8", Offset = "0x9F36A8")]
			internal void <SetPlayerPosition>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3884", Offset = "0x9E3884")]
		private struct <CheckForSceneToBeEnabled>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x40016B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CutsceneTeleportPoint <>4__this;

			[Token(Token = "0x40016B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private object <>u__1;

			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0xA82BA8", Offset = "0xA82BA8", VA = "0xA82BA8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0xA82BB0", Offset = "0xA82BB0", VA = "0xA82BB0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000FA8")]
		private const string SCENE_LOADING_MANAGEMENT_GROUP = "Point management";

		[Token(Token = "0x4000FA9")]
		private const string CUTSCENE_REACHED_THIS_POINT = "Cutscene reached this point";

		[Token(Token = "0x4000FAA")]
		private const string SCENE_END_POINT_GROUP = "End point";

		[Token(Token = "0x4000FAB")]
		private const string ANIMATIONS_AND_SOUNDS_GROUP = "Sounds and animations";

		[Token(Token = "0x4000FAC")]
		private const string CUTSCENE_LEAVING_THIS_POINT = "Cutscene leaving this point";

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool _shouldWaitForUserAction;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[CanBeNull]
		private ClickMeTooltip _cutsceneTooltip;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityEvent OnBeforeClick;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UnityEvent OnReachingCurrentPoint;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private UnityEvent OnLeavingCurrentPoint;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private CutsceneTeleportPoint _nextTeleportPoint;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float _delayToNextPoint;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool _shouldParentVRPlayerToObject;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Transform _gameObjectToParentVRPlayer;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private bool _shouldEnableScene;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float _delayToEnableTheScene;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private CutsceneAnimationAndSoundDelayer[] _soundsAndAnimations;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private VRIntermediateSceneManager _sceneManager;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool _shouldGoToNextPoint;

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xAFB5B0", Offset = "0xAFB5B0", VA = "0xAFB5B0", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xAFB6BC", Offset = "0xAFB6BC", VA = "0xAFB6BC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F1174", Offset = "0x9F1174")]
		public void TeleportToNextPoint()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xAFB784", Offset = "0xAFB784", VA = "0xAFB784")]
		public void ContinueCutscene()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xAFB78C", Offset = "0xAFB78C", VA = "0xAFB78C")]
		private void SetPlayerPosition(Transform nextCutscenePoint)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xAFB87C", Offset = "0xAFB87C", VA = "0xAFB87C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F11D8", Offset = "0x9F11D8")]
		private void CheckForSceneToBeEnabled()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xAFB944", Offset = "0xAFB944", VA = "0xAFB944")]
		private void PlaySoundAndAnimations()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xAFBA60", Offset = "0xAFBA60", VA = "0xAFBA60")]
		private void HandleOnCutsceneSkip()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xAFBA80", Offset = "0xAFBA80", VA = "0xAFBA80")]
		private void HandleOnHomeButtonPressed()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xAFBA8C", Offset = "0xAFBA8C", VA = "0xAFBA8C")]
		public CutsceneTeleportPoint()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xAFBB2C", Offset = "0xAFBB2C", VA = "0xAFBB2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F123C", Offset = "0x9F123C")]
		private void <AwakeComponent>b__19_0(IInteractable button)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xAFBB34", Offset = "0xAFBB34", VA = "0xAFBB34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F124C", Offset = "0x9F124C")]
		private bool <TeleportToNextPoint>b__20_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200028D")]
	public class ElevatorCounter : SceneObject
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UILabel _counterText;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float _startNumber;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private float _endNumber;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private float _delayToStartCounting;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private float _countingInterval;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ATiStudios.Core.TimingHandler _handler;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xAFCAC8", Offset = "0xAFCAC8", VA = "0xAFCAC8", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xAFCB18", Offset = "0xAFCB18", VA = "0xAFCB18")]
		public void StartCounter()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xAFCC58", Offset = "0xAFCC58", VA = "0xAFCC58")]
		public void SetStartingNumber(int number)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xAFCD18", Offset = "0xAFCD18", VA = "0xAFCD18")]
		public void SetEndNumber(int number)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xAFCB30", Offset = "0xAFCB30", VA = "0xAFCB30")]
		private void StartCountingUpwards(float startDelay)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xAFCBC4", Offset = "0xAFCBC4", VA = "0xAFCBC4")]
		private void StartCountingDownwards(float startDelay)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xAFCD24", Offset = "0xAFCD24", VA = "0xAFCD24")]
		public ElevatorCounter()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xAFCD2C", Offset = "0xAFCD2C", VA = "0xAFCD2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F125C", Offset = "0x9F125C")]
		private void <StartCountingUpwards>b__10_0()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xAFCDDC", Offset = "0xAFCDDC", VA = "0xAFCDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F126C", Offset = "0x9F126C")]
		private void <StartCountingDownwards>b__11_0()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class IntermediateSceneTrafficOptimiser : SceneObject
	{
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject[] _cars;

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xAFCEDC", Offset = "0xAFCEDC", VA = "0xAFCEDC", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xAFCF9C", Offset = "0xAFCF9C", VA = "0xAFCF9C")]
		public IntermediateSceneTrafficOptimiser()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class SkipCutsceneView : UIView
	{
		[Serializable]
		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3894", Offset = "0x9E3894")]
		private sealed class <>c
		{
			[Token(Token = "0x40016B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction<IInteractable> <>9__10_1;

			[Token(Token = "0x6001D41")]
			[Address(RVA = "0xAFD264", Offset = "0xAFD264", VA = "0xAFD264")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D42")]
			[Address(RVA = "0xAFD26C", Offset = "0xAFD26C", VA = "0xAFD26C")]
			internal void <StartComponent>b__10_1(IInteractable button)
			{
			}
		}

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIButton _skipButton;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UIButton _closeButton;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UIButton _homeButton;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UILabel _pleaseWaitLabel;

		[Token(Token = "0x170003E4")]
		public UIButton SkipButton
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xAFCFA4", Offset = "0xAFCFA4", VA = "0xAFCFA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		public UIButton CloseButton
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xAFCFAC", Offset = "0xAFCFAC", VA = "0xAFCFAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		public UIButton HomeButton
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xAFCFB4", Offset = "0xAFCFB4", VA = "0xAFCFB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xAFCFBC", Offset = "0xAFCFBC", VA = "0xAFCFBC", Slot = "49")]
		protected override void StartComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xAFD1A8", Offset = "0xAFD1A8", VA = "0xAFD1A8")]
		public void ShowPleaseWaitLabel()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xAFD1E4", Offset = "0xAFD1E4", VA = "0xAFD1E4")]
		public SkipCutsceneView()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xAFD1EC", Offset = "0xAFD1EC", VA = "0xAFD1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F127C", Offset = "0x9F127C")]
		private void <StartComponent>b__10_0(IInteractable button)
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Chapters.Scripts
{
	[Token(Token = "0x2000290")]
	public class ChapterIntroView : UIView
	{
		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E38A4", Offset = "0x9E38A4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40016BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action completionCallback;

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xAFA594", Offset = "0xAFA594", VA = "0xAFA594")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001D44")]
			[Address(RVA = "0xAFA618", Offset = "0xAFA618", VA = "0xAFA618")]
			internal void <ShowTitleAndDescriptionSequence>b__0()
			{
			}
		}

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UILabel _titleLabel;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UILabel _descriptionLabel;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Sequence _sequence;

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xAFA3B0", Offset = "0xAFA3B0", VA = "0xAFA3B0", Slot = "48")]
		protected override void AwakeComponent(bool isEditorMode)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xAFA438", Offset = "0xAFA438", VA = "0xAFA438")]
		public void ShowTitleAndDescriptionSequence([Optional] Action completionCallback)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xAFA59C", Offset = "0xAFA59C", VA = "0xAFA59C")]
		public void Hide(float duration)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xAFA5A8", Offset = "0xAFA5A8", VA = "0xAFA5A8")]
		public void SetLocalizations(string title, string description)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xAFA610", Offset = "0xAFA610", VA = "0xAFA610")]
		public ChapterIntroView()
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Analytics
{
	[Token(Token = "0x2000291")]
	public static class AnalyticsEvents
	{
		[Token(Token = "0x4000FC9")]
		private const string LOG_GROUP_NAME = "Analytics";

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xAF869C", Offset = "0xAF869C", VA = "0xAF869C")]
		public static void LevelStart(string sceneName, string deviceName, int lessonVersion)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xAF897C", Offset = "0xAF897C", VA = "0xAF897C")]
		public static void LevelComplete(string sceneName, string deviceName, int lessonVersion)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xAF8C5C", Offset = "0xAF8C5C", VA = "0xAF8C5C")]
		public static void LevelQuit(string sceneName, string deviceName, int lesson_id, int step_index, int lessonVersion)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xAF8FC4", Offset = "0xAF8FC4", VA = "0xAF8FC4")]
		public static void ChatbotStepPassed(int chatbotID, int stepIndex)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xAF924C", Offset = "0xAF924C", VA = "0xAF924C")]
		public static void ChatbotStepFailed(int chatbotID, int stepIndex)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xAF94D4", Offset = "0xAF94D4", VA = "0xAF94D4")]
		public static void ChatbotStepSkipped(int chatbotID, int stepIndex)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xAF975C", Offset = "0xAF975C", VA = "0xAF975C")]
		public static void TutorialStart(bool isRedo)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xAF98A0", Offset = "0xAF98A0", VA = "0xAF98A0")]
		public static void TutorialComplete()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xAF9988", Offset = "0xAF9988", VA = "0xAF9988")]
		public static void TutorialSkip(int tutorialStep)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xAF9ACC", Offset = "0xAF9ACC", VA = "0xAF9ACC")]
		public static void TutorialStep(int tutorialStep)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xAF9BC4", Offset = "0xAF9BC4", VA = "0xAF9BC4")]
		public static void AnimalClick(string animalName, int animalVersion, string deviceName, bool isHandController)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xAF9DA4", Offset = "0xAF9DA4", VA = "0xAF9DA4")]
		public static void DownloadStart(int resourcesVersion, string deviceName)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xAF9FFC", Offset = "0xAF9FFC", VA = "0xAF9FFC")]
		public static void DownloadComplete(int resourcesVersion, string deviceName)
		{
		}
	}
}
namespace ATiStudios.MondlyVR.Achievements
{
	[Token(Token = "0x2000292")]
	public class OculusQuestAchievementsManager : AbstractAchievementsManager
	{
		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E38B4", Offset = "0x9E38B4")]
		private sealed class <>c__DisplayClass2_0
		{
			[StructLayout(3)]
			[Token(Token = "0x200049F")]
			private struct <<GetAllAchievementsNames>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x400179E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400179F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x40017A0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass2_0 <>4__this;

				[Token(Token = "0x40017A1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private object <>u__1;

				[Token(Token = "0x6001E06")]
				[Address(RVA = "0xA82B10", Offset = "0xA82B10", VA = "0xA82B10", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001E07")]
				[Address(RVA = "0xA82B18", Offset = "0xA82B18", VA = "0xA82B18", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40016BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> achievements;

			[Token(Token = "0x40016BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isRunning;

			[Token(Token = "0x6001D45")]
			[Address(RVA = "0xAF71D8", Offset = "0xAF71D8", VA = "0xAF71D8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001D46")]
			[Address(RVA = "0xAF71E0", Offset = "0xAF71E0", VA = "0xAF71E0")]
			internal void <GetAllAchievementsNames>b__0(Message<AchievementDefinitionList> message)
			{
			}

			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xAF74E4", Offset = "0xAF74E4", VA = "0xAF74E4")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F371C", Offset = "0x9F371C")]
			internal Task <GetAllAchievementsNames>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E38C4", Offset = "0x9E38C4")]
		private struct <GetAllAchievementsNames>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x40016BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<string>> <>t__builder;

			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass2_0 <>8__1;

			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001D48")]
			[Address(RVA = "0xA82B48", Offset = "0xA82B48", VA = "0xA82B48", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xA82B50", Offset = "0xA82B50", VA = "0xA82B50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E38D4", Offset = "0x9E38D4")]
		private sealed class <>c__DisplayClass3_0
		{
			[StructLayout(3)]
			[Token(Token = "0x20004A0")]
			private struct <<CheckIfAchievementIsUnlocked>b__1>d : IAsyncStateMachine
			{
				[Token(Token = "0x40017A2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40017A3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x40017A4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass3_0 <>4__this;

				[Token(Token = "0x40017A5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private object <>u__1;

				[Token(Token = "0x6001E08")]
				[Address(RVA = "0xA82B24", Offset = "0xA82B24", VA = "0xA82B24", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001E09")]
				[Address(RVA = "0xA82B2C", Offset = "0xA82B2C", VA = "0xA82B2C", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isRunning;

			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool isUnlocked;

			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xAF7914", Offset = "0xAF7914", VA = "0xAF7914")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xAF791C", Offset = "0xAF791C", VA = "0xAF791C")]
			internal void <CheckIfAchievementIsUnlocked>b__0(Message<AchievementProgressList> message)
			{
			}

			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0xAF7A68", Offset = "0xAF7A68", VA = "0xAF7A68")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F3790", Offset = "0x9F3790")]
			internal Task <CheckIfAchievementIsUnlocked>b__1()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E38E4", Offset = "0x9E38E4")]
		private struct <CheckIfAchievementIsUnlocked>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x40016C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string achievementName;

			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass3_0 <>8__1;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xA82B38", Offset = "0xA82B38", VA = "0xA82B38", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xA82B40", Offset = "0xA82B40", VA = "0xA82B40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E38F4", Offset = "0x9E38F4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40016C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xAF6C18", Offset = "0xAF6C18", VA = "0xAF6C18")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xAF7E98", Offset = "0xAF7E98", VA = "0xAF7E98")]
			internal void <UnlockAchievement>b__0(Message<AchievementUpdate> message)
			{
			}
		}

		[Token(Token = "0x4000FCA")]
		[DebugGroup]
		private const string DEBUG_GROUP = "OCULUS_ACHIEVEMENTS";

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xAF6860", Offset = "0xAF6860", VA = "0xAF6860")]
		public OculusQuestAchievementsManager()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xAF690C", Offset = "0xAF690C", VA = "0xAF690C", Slot = "4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F128C", Offset = "0x9F128C")]
		public override Task<List<string>> GetAllAchievementsNames()
		{
			return null;
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xAF6A04", Offset = "0xAF6A04", VA = "0xAF6A04", Slot = "5")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F12F0", Offset = "0x9F12F0")]
		public override Task<bool> CheckIfAchievementIsUnlocked(string achievementName)
		{
			return null;
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xAF6B24", Offset = "0xAF6B24", VA = "0xAF6B24", Slot = "6")]
		public override void UnlockAchievement(string name)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xAF6C20", Offset = "0xAF6C20", VA = "0xAF6C20", Slot = "7")]
		public override void UnlockChatbotSceneEndAchievement(int sceneIndex)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xAF6CD4", Offset = "0xAF6CD4", VA = "0xAF6CD4", Slot = "8")]
		public override void UnlockCategoryCompleted(int difficulty)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xAF6D68", Offset = "0xAF6D68", VA = "0xAF6D68", Slot = "9")]
		public override void UnlockLessonsCompletedInTwoLanguages()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xAF6DC0", Offset = "0xAF6DC0", VA = "0xAF6DC0", Slot = "10")]
		public override void UnlockLessonsCompletedInThreeLanguages()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xAF6E18", Offset = "0xAF6E18", VA = "0xAF6E18", Slot = "11")]
		public override void UnlockNumberOfLessonsCompleted(int completedLessonsForUnlock)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xAF6EF4", Offset = "0xAF6EF4", VA = "0xAF6EF4", Slot = "12")]
		public override void UnlockNumberOfPhrasesLearnedAchievement(int phrasesLearnedToUnlock)
		{
		}
	}
}
namespace ATiStudios.Mondly.Animations
{
	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E233C", Offset = "0x9E233C")]
	public class MondlyCharacterAnimator : EAnimator
	{
		[Serializable]
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3904", Offset = "0x9E3904")]
		private sealed class <>c
		{
			[Token(Token = "0x40016C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AnimatorState> <>9__11_0;

			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xAF6468", Offset = "0xAF6468", VA = "0xAF6468")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xAF6470", Offset = "0xAF6470", VA = "0xAF6470")]
			internal bool <PlayIdleAnimation>b__11_0(AnimatorState state)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E90D0", Offset = "0x9E90D0")]
		public bool ShouldPlayRandomIdleAnimations;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E9108", Offset = "0x9E9108")]
		public bool ShouldPlayRandomSpeakingAnimations;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VRCharacter _vrCharacter;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E9140", Offset = "0x9E9140")]
		private List<string> _idleAnimations;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E918C", Offset = "0x9E918C")]
		private List<string> _speakingAnimations;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ATiStudios.Foundation.TimingHandler _timingHandlerIdleAnimation;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ATiStudios.Foundation.TimingHandler _timingHandlerSpeakingAnimation;

		[Token(Token = "0x170003E7")]
		public bool IsPlayingRandomIdle
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0xAF5B70", Offset = "0xAF5B70", VA = "0xAF5B70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xAF5B84", Offset = "0xAF5B84", VA = "0xAF5B84", Slot = "10")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xAF5BE8", Offset = "0xAF5BE8", VA = "0xAF5BE8", Slot = "11")]
		protected override void SetupStateMachineBehaviour(ref BaseAnimatorStateMachineBehaviour baseAnimatorStateMachineBehaviour)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xAF5D04", Offset = "0xAF5D04", VA = "0xAF5D04")]
		public void PlayIdleAnimation(bool force = false, bool ignorePriority = false)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xAF5E68", Offset = "0xAF5E68", VA = "0xAF5E68")]
		public void StartRandomIdleAnimation()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xAF5F58", Offset = "0xAF5F58", VA = "0xAF5F58")]
		public void StopRandomIdleAnimation()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xAF5F6C", Offset = "0xAF5F6C", VA = "0xAF5F6C")]
		public void StartRandomSpeakingAnimation(float delay = 5f)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xAF6068", Offset = "0xAF6068", VA = "0xAF6068")]
		public void StopRandomSpeakingAnimation()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xAF607C", Offset = "0xAF607C", VA = "0xAF607C")]
		private void PlayRandomIdleAnimation()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xAF6164", Offset = "0xAF6164", VA = "0xAF6164")]
		private void PlayRandomSpeakingAnimation()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xAF624C", Offset = "0xAF624C", VA = "0xAF624C")]
		public MondlyCharacterAnimator()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class MondlyCharacterAnimatorStateMachineBehaviour : BaseAnimatorStateMachineBehaviour
	{
		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E91D8", Offset = "0x9E91D8")]
		[SerializeField]
		private bool ShouldDisableIK;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LookAtIK _lookAtIk;

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xAF5C94", Offset = "0xAF5C94", VA = "0xAF5C94")]
		public void Initialize(VRCharacter vrCharacter)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xAF64CC", Offset = "0xAF64CC", VA = "0xAF64CC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xAF660C", Offset = "0xAF660C", VA = "0xAF660C", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xAF6524", Offset = "0xAF6524", VA = "0xAF6524")]
		private void RemoveIK()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xAF6664", Offset = "0xAF6664", VA = "0xAF6664")]
		private void RestoreIK()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xAF6750", Offset = "0xAF6750", VA = "0xAF6750")]
		public MondlyCharacterAnimatorStateMachineBehaviour()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xAF6758", Offset = "0xAF6758", VA = "0xAF6758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1354", Offset = "0x9F1354")]
		private float <RemoveIK>b__5_0()
		{
			return default(float);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xAF6794", Offset = "0xAF6794", VA = "0xAF6794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1364", Offset = "0x9F1364")]
		private void <RemoveIK>b__5_1(float value)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xAF67DC", Offset = "0xAF67DC", VA = "0xAF67DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1374", Offset = "0x9F1374")]
		private float <RestoreIK>b__6_0()
		{
			return default(float);
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xAF6818", Offset = "0xAF6818", VA = "0xAF6818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1384", Offset = "0x9F1384")]
		private void <RestoreIK>b__6_1(float value)
		{
		}
	}
}
namespace SoftMasking
{
	[Token(Token = "0x2000295")]
	internal struct ClearListAtExit<T> : IDisposable
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> _list;

		[Token(Token = "0x600171C")]
		public ClearListAtExit(List<T> list)
		{
		}

		[Token(Token = "0x600171D")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public interface ISoftMask
	{
		[Token(Token = "0x170003E8")]
		bool isAlive
		{
			[Token(Token = "0x600171E")]
			get;
		}

		[Token(Token = "0x170003E9")]
		bool isMaskingEnabled
		{
			[Token(Token = "0x600171F")]
			get;
		}

		[Token(Token = "0x6001720")]
		Material GetReplacement(Material original);

		[Token(Token = "0x6001721")]
		void ReleaseReplacement(Material replacement);

		[Token(Token = "0x6001722")]
		void UpdateTransformChildren(Transform transform);
	}
	[Token(Token = "0x2000297")]
	internal class MaterialReplacements
	{
		[Token(Token = "0x2000461")]
		private class MaterialOverride
		{
			[Token(Token = "0x40016CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _useCount;

			[Token(Token = "0x40016CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A0C", Offset = "0x9E9A0C")]
			private Material <original>k__BackingField;

			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A1C", Offset = "0x9E9A1C")]
			private Material <replacement>k__BackingField;

			[Token(Token = "0x1700048B")]
			public Material original
			{
				[Token(Token = "0x6001D55")]
				[Address(RVA = "0xC30104", Offset = "0xC30104", VA = "0xC30104")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F3804", Offset = "0x9F3804")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D56")]
				[Address(RVA = "0xC3051C", Offset = "0xC3051C", VA = "0xC3051C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F3814", Offset = "0x9F3814")]
				private set
				{
				}
			}

			[Token(Token = "0x1700048C")]
			public Material replacement
			{
				[Token(Token = "0x6001D57")]
				[Address(RVA = "0xC302D4", Offset = "0xC302D4", VA = "0xC302D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F3824", Offset = "0x9F3824")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D58")]
				[Address(RVA = "0xC30524", Offset = "0xC30524", VA = "0xC30524")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F3834", Offset = "0x9F3834")]
				private set
				{
				}
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xC30124", Offset = "0xC30124", VA = "0xC30124")]
			public MaterialOverride(Material original, Material replacement)
			{
			}

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xC3010C", Offset = "0xC3010C", VA = "0xC3010C")]
			public Material Get()
			{
				return null;
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xC302DC", Offset = "0xC302DC", VA = "0xC302DC")]
			public bool Release()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IMaterialReplacer _replacer;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<Material> _applyParameters;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MaterialOverride> _overrides;

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xC2FDDC", Offset = "0xC2FDDC", VA = "0xC2FDDC")]
		public MaterialReplacements(IMaterialReplacer replacer, Action<Material> applyParameters)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xC2FE64", Offset = "0xC2FE64", VA = "0xC2FE64")]
		public Material Get(Material original)
		{
			return null;
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xC30164", Offset = "0xC30164", VA = "0xC30164")]
		public void Release(Material replacement)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xC302F4", Offset = "0xC302F4", VA = "0xC302F4")]
		public void ApplyAll()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xC30414", Offset = "0xC30414", VA = "0xC30414")]
		public void DestroyAllAndClear()
		{
		}
	}
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9E23A0", Offset = "0x9E23A0")]
	public class GlobalMaterialReplacerAttribute : Attribute
	{
		[Token(Token = "0x6001728")]
		[Address(RVA = "0xC2FC48", Offset = "0xC2FC48", VA = "0xC2FC48")]
		public GlobalMaterialReplacerAttribute()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public interface IMaterialReplacer
	{
		[Token(Token = "0x170003EA")]
		int order
		{
			[Token(Token = "0x6001729")]
			get;
		}

		[Token(Token = "0x600172A")]
		Material Replace(Material material);
	}
	[Token(Token = "0x200029A")]
	public static class MaterialReplacer
	{
		[Serializable]
		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3914", Offset = "0x9E3914")]
		private sealed class <>c
		{
			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, IEnumerable<Type>> <>9__3_0;

			[Token(Token = "0x40016D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, bool> <>9__3_1;

			[Token(Token = "0x40016D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Type, IMaterialReplacer> <>9__3_2;

			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IMaterialReplacer, bool> <>9__3_3;

			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Type, bool> <>9__6_0;

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0xC30E44", Offset = "0xC30E44", VA = "0xC30E44")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0xC30E4C", Offset = "0xC30E4C", VA = "0xC30E4C")]
			internal IEnumerable<Type> <CollectGlobalReplacers>b__3_0(Assembly x)
			{
				return null;
			}

			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xC30E54", Offset = "0xC30E54", VA = "0xC30E54")]
			internal bool <CollectGlobalReplacers>b__3_1(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0xC30E5C", Offset = "0xC30E5C", VA = "0xC30E5C")]
			internal IMaterialReplacer <CollectGlobalReplacers>b__3_2(Type t)
			{
				return null;
			}

			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xC30E64", Offset = "0xC30E64", VA = "0xC30E64")]
			internal bool <CollectGlobalReplacers>b__3_3(IMaterialReplacer t)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xC30E70", Offset = "0xC30E70", VA = "0xC30E70")]
			internal bool <GetTypesSafe>b__6_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IMaterialReplacer> _globalReplacers;

		[Token(Token = "0x170003EB")]
		public static IEnumerable<IMaterialReplacer> globalReplacers
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0xC3052C", Offset = "0xC3052C", VA = "0xC3052C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xC305AC", Offset = "0xC305AC", VA = "0xC305AC")]
		private static IEnumerable<IMaterialReplacer> CollectGlobalReplacers()
		{
			return null;
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xC308C4", Offset = "0xC308C4", VA = "0xC308C4")]
		private static bool IsMaterialReplacerType(Type t)
		{
			return default(bool);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xC30A2C", Offset = "0xC30A2C", VA = "0xC30A2C")]
		private static IMaterialReplacer TryCreateInstance(Type t)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xC30C34", Offset = "0xC30C34", VA = "0xC30C34")]
		private static IEnumerable<Type> GetTypesSafe(this Assembly asm)
		{
			return null;
		}
	}
	[Token(Token = "0x200029B")]
	public class MaterialReplacerChain : IMaterialReplacer
	{
		[Serializable]
		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3924", Offset = "0x9E3924")]
		private sealed class <>c
		{
			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<IMaterialReplacer> <>9__7_0;

			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xC31318", Offset = "0xC31318", VA = "0xC31318")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xC31320", Offset = "0xC31320", VA = "0xC31320")]
			internal int <Initialize>b__7_0(IMaterialReplacer a, IMaterialReplacer b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<IMaterialReplacer> _replacers;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9224", Offset = "0x9E9224")]
		private int <order>k__BackingField;

		[Token(Token = "0x170003EC")]
		public int order
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0xC31128", Offset = "0xC31128", VA = "0xC31128", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13A4", Offset = "0x9F13A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001732")]
			[Address(RVA = "0xC31130", Offset = "0xC31130", VA = "0xC31130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13B4", Offset = "0x9F13B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xC30EDC", Offset = "0xC30EDC", VA = "0xC30EDC")]
		public MaterialReplacerChain(IEnumerable<IMaterialReplacer> replacers, IMaterialReplacer yetAnother)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xC31138", Offset = "0xC31138", VA = "0xC31138", Slot = "5")]
		public Material Replace(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xC30F78", Offset = "0xC30F78", VA = "0xC30F78")]
		private void Initialize()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public static class MaskChannel
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color alpha;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Color red;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Color green;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color blue;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Color gray;
	}
	[Token(Token = "0x200029D")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E23C4", Offset = "0x9E23C4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E23C4", Offset = "0x9E23C4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x9E23C4", Offset = "0x9E23C4")]
	public class SoftMask : UIBehaviour, ISoftMask, ICanvasRaycastFilter
	{
		[Serializable]
		[Token(Token = "0x2000464")]
		public enum MaskSource
		{
			[Token(Token = "0x40016D7")]
			Graphic,
			[Token(Token = "0x40016D8")]
			Sprite,
			[Token(Token = "0x40016D9")]
			Texture
		}

		[Serializable]
		[Token(Token = "0x2000465")]
		public enum BorderMode
		{
			[Token(Token = "0x40016DB")]
			Simple,
			[Token(Token = "0x40016DC")]
			Sliced,
			[Token(Token = "0x40016DD")]
			Tiled
		}

		[Serializable]
		[Token(Token = "0x2000466")]
		[Flags]
		public enum Errors
		{
			[Token(Token = "0x40016DF")]
			NoError = 0,
			[Token(Token = "0x40016E0")]
			UnsupportedShaders = 1,
			[Token(Token = "0x40016E1")]
			NestedMasks = 2,
			[Token(Token = "0x40016E2")]
			TightPackedSprite = 4,
			[Token(Token = "0x40016E3")]
			AlphaSplitSprite = 8,
			[Token(Token = "0x40016E4")]
			UnsupportedImageType = 0x10,
			[Token(Token = "0x40016E5")]
			UnreadableTexture = 0x20
		}

		[Token(Token = "0x2000467")]
		private struct SourceParameters
		{
			[Token(Token = "0x40016E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Image image;

			[Token(Token = "0x40016E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Sprite sprite;

			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BorderMode spriteBorderMode;

			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture2D texture;

			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rect textureUVRect;
		}

		[Token(Token = "0x2000468")]
		private class MaterialReplacerImpl : IMaterialReplacer
		{
			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly SoftMask _owner;

			[Token(Token = "0x1700048D")]
			public int order
			{
				[Token(Token = "0x6001D66")]
				[Address(RVA = "0xC36130", Offset = "0xC36130", VA = "0xC36130", Slot = "4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xC315DC", Offset = "0xC315DC", VA = "0xC315DC")]
			public MaterialReplacerImpl(SoftMask owner)
			{
			}

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xC36138", Offset = "0xC36138", VA = "0xC36138", Slot = "5")]
			public Material Replace(Material original)
			{
				return null;
			}

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xC36248", Offset = "0xC36248", VA = "0xC36248")]
			private static Material Replace(Material original, Shader defaultReplacementShader)
			{
				return null;
			}
		}

		[Token(Token = "0x2000469")]
		private static class Mathr
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xC34554", Offset = "0xC34554", VA = "0xC34554")]
			public static Vector4 ToVector(Rect r)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xC34668", Offset = "0xC34668", VA = "0xC34668")]
			public static Vector4 Div(Vector4 v, Vector2 s)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xC34C30", Offset = "0xC34C30", VA = "0xC34C30")]
			public static Vector2 Div(Vector2 v, Vector2 s)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xC346DC", Offset = "0xC346DC", VA = "0xC346DC")]
			public static Vector4 Mul(Vector4 v, Vector2 s)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xC346A8", Offset = "0xC346A8", VA = "0xC346A8")]
			public static Vector2 Size(Vector4 r)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xC345E8", Offset = "0xC345E8", VA = "0xC345E8")]
			public static Vector4 Move(Vector4 v, Vector2 o)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0xC34628", Offset = "0xC34628", VA = "0xC34628")]
			public static Vector4 BorderOf(Vector4 outer, Vector4 inner)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xC3471C", Offset = "0xC3471C", VA = "0xC3471C")]
			public static Vector4 ApplyBorder(Vector4 v, Vector4 b)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xC36358", Offset = "0xC36358", VA = "0xC36358")]
			public static Vector2 Min(Vector4 r)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xC36384", Offset = "0xC36384", VA = "0xC36384")]
			public static Vector2 Max(Vector4 r)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xC35C7C", Offset = "0xC35C7C", VA = "0xC35C7C")]
			public static Vector2 Remap(Vector2 c, Vector4 from, Vector4 to)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0xC322EC", Offset = "0xC322EC", VA = "0xC322EC")]
			public static bool Inside(Vector2 v, Vector4 r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200046A")]
		private struct MaterialParameters
		{
			[Token(Token = "0x20004A1")]
			private static class Ids
			{
				[Token(Token = "0x40017A6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly int SoftMask;

				[Token(Token = "0x40017A7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public static readonly int SoftMask_Rect;

				[Token(Token = "0x40017A8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static readonly int SoftMask_UVRect;

				[Token(Token = "0x40017A9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public static readonly int SoftMask_ChannelWeights;

				[Token(Token = "0x40017AA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static readonly int SoftMask_WorldToMask;

				[Token(Token = "0x40017AB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public static readonly int SoftMask_BorderRect;

				[Token(Token = "0x40017AC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public static readonly int SoftMask_UVBorderRect;

				[Token(Token = "0x40017AD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public static readonly int SoftMask_TileRepeat;
			}

			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector4 maskRect;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector4 maskBorder;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4 maskRectUV;

			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector4 maskBorderUV;

			[Token(Token = "0x40016F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2 tileRepeat;

			[Token(Token = "0x40016F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color maskChannelWeights;

			[Token(Token = "0x40016F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Matrix4x4 worldToMask;

			[Token(Token = "0x40016F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Texture2D texture;

			[Token(Token = "0x40016F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public BorderMode borderMode;

			[Token(Token = "0x1700048E")]
			public Texture2D activeTexture
			{
				[Token(Token = "0x6001D75")]
				[Address(RVA = "0xA83D34", Offset = "0xA83D34", VA = "0xA83D34")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D76")]
			[Address(RVA = "0xA83D3C", Offset = "0xA83D3C", VA = "0xA83D3C")]
			public bool SampleMask(Vector2 localPos, out float mask)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xA83D44", Offset = "0xA83D44", VA = "0xA83D44")]
			public void Apply(Material mat)
			{
			}

			[Token(Token = "0x6001D78")]
			[Address(RVA = "0xA83D4C", Offset = "0xA83D4C", VA = "0xA83D4C")]
			private Vector2 XY2UV(Vector2 localPos)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xA83D54", Offset = "0xA83D54", VA = "0xA83D54")]
			private Vector2 MapSimple(Vector2 localPos)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0xA83D5C", Offset = "0xA83D5C", VA = "0xA83D5C")]
			private Vector2 MapBorder(Vector2 localPos, bool repeat)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xA83D68", Offset = "0xA83D68", VA = "0xA83D68")]
			private float Inset(float v, float x1, float x2, float u1, float u2, float repeat = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xA83D70", Offset = "0xA83D70", VA = "0xA83D70")]
			private float Inset(float v, float x1, float x2, float x3, float x4, float u1, float u2, float u3, float u4, float repeat = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xA83D88", Offset = "0xA83D88", VA = "0xA83D88")]
			private float Frac(float v)
			{
				return default(float);
			}

			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xA83D8C", Offset = "0xA83D8C", VA = "0xA83D8C")]
			private float MaskValue(Color mask)
			{
				return default(float);
			}
		}

		[Token(Token = "0x200046B")]
		private struct Diagnostics
		{
			[Token(Token = "0x20004A2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3A44", Offset = "0x9E3A44")]
			private sealed class <>c__DisplayClass2_0
			{
				[Token(Token = "0x40017AE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SoftMask softMask;

				[Token(Token = "0x6001E0B")]
				[Address(RVA = "0xC35288", Offset = "0xC35288", VA = "0xC35288")]
				public <>c__DisplayClass2_0()
				{
				}

				[Token(Token = "0x6001E0C")]
				[Address(RVA = "0xC35A00", Offset = "0xC35A00", VA = "0xC35A00")]
				internal bool <PollErrors>b__0(SoftMaskable m)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x20004A3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3A54", Offset = "0x9E3A54")]
			private sealed class <>c__DisplayClass10_0
			{
				[Token(Token = "0x40017AF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SoftMask softMask;

				[Token(Token = "0x6001E0D")]
				[Address(RVA = "0xC35758", Offset = "0xC35758", VA = "0xC35758")]
				public <>c__DisplayClass10_0()
				{
				}

				[Token(Token = "0x6001E0E")]
				[Address(RVA = "0xC359F0", Offset = "0xC359F0", VA = "0xC359F0")]
				internal bool <ThereAreNestedMasks>b__0(SoftMask x)
				{
					return default(bool);
				}

				[Token(Token = "0x6001E0F")]
				[Address(RVA = "0xC359F8", Offset = "0xC359F8", VA = "0xC359F8")]
				internal bool <ThereAreNestedMasks>b__1(SoftMask x)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x40016F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SoftMask _softMask;

			[Token(Token = "0x1700048F")]
			private Image image
			{
				[Token(Token = "0x6001D82")]
				[Address(RVA = "0xA83CB8", Offset = "0xA83CB8", VA = "0xA83CB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000490")]
			private Sprite sprite
			{
				[Token(Token = "0x6001D83")]
				[Address(RVA = "0xA83CC0", Offset = "0xA83CC0", VA = "0xA83CC0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000491")]
			private Texture2D texture
			{
				[Token(Token = "0x6001D84")]
				[Address(RVA = "0xA83CC8", Offset = "0xA83CC8", VA = "0xA83CC8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xA83CA8", Offset = "0xA83CA8", VA = "0xA83CA8")]
			public Diagnostics(SoftMask softMask)
			{
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xA83CB0", Offset = "0xA83CB0", VA = "0xA83CB0")]
			public Errors PollErrors()
			{
				return default(Errors);
			}

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xC342F8", Offset = "0xC342F8", VA = "0xC342F8")]
			public static Errors CheckSprite(Sprite sprite)
			{
				return default(Errors);
			}

			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xA83CD0", Offset = "0xA83CD0", VA = "0xA83CD0")]
			private bool ThereAreNestedMasks()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xA83CD8", Offset = "0xA83CD8", VA = "0xA83CD8")]
			private Errors CheckImage()
			{
				return default(Errors);
			}

			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xA83CE0", Offset = "0xA83CE0", VA = "0xA83CE0")]
			private Errors CheckTexture()
			{
				return default(Errors);
			}

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xC35854", Offset = "0xC35854", VA = "0xC35854")]
			private static bool AreCompeting(SoftMask softMask, SoftMask other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D89")]
			private static T SelectChild<T>(T first, T second) where T : UnityEngine.Component
			{
				return null;
			}

			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xC3577C", Offset = "0xC3577C", VA = "0xC3577C")]
			private static bool IsReadable(Texture2D texture)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0xC35760", Offset = "0xC35760", VA = "0xC35760")]
			private static bool IsSupportedImageType(Image.Type type)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3944", Offset = "0x9E3944")]
		private sealed class <>c
		{
			[Token(Token = "0x40016F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SoftMaskable> <>9__91_0;

			[Token(Token = "0x40016F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SoftMaskable> <>9__92_0;

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xC3512C", Offset = "0xC3512C", VA = "0xC3512C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xC35134", Offset = "0xC35134", VA = "0xC35134")]
			internal void <InvalidateChildren>b__91_0(SoftMaskable x)
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xC35210", Offset = "0xC35210", VA = "0xC35210")]
			internal void <NotifyChildrenThatMaskMightChanged>b__92_0(SoftMaskable x)
			{
			}
		}

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader _defaultShader;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _defaultETC1Shader;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MaskSource _source;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform _separateMask;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite _sprite;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BorderMode _spriteBorderMode;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D _texture;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Rect _textureUVRect;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color _channelWeights;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _raycastThreshold;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MaterialReplacements _materials;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MaterialParameters _parameters;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Sprite _lastUsedSprite;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Rect _lastMaskRect;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool _maskingWasEnabled;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		private bool _destroyed;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		private bool _dirty;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private RectTransform _maskTransform;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Graphic _graphic;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Canvas _canvas;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Rect DefaultUVRect;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<SoftMask> s_masks;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<SoftMaskable> s_maskables;

		[Token(Token = "0x170003ED")]
		public Shader defaultShader
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0xC31608", Offset = "0xC31608", VA = "0xC31608")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001738")]
			[Address(RVA = "0xC31610", Offset = "0xC31610", VA = "0xC31610")]
			set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public Shader defaultETC1Shader
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0xC316EC", Offset = "0xC316EC", VA = "0xC316EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173A")]
			[Address(RVA = "0xC316F4", Offset = "0xC316F4", VA = "0xC316F4")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public MaskSource source
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0xC3170C", Offset = "0xC3170C", VA = "0xC3170C")]
			get
			{
				return default(MaskSource);
			}
			[Token(Token = "0x600173C")]
			[Address(RVA = "0xC31714", Offset = "0xC31714", VA = "0xC31714")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public RectTransform separateMask
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0xC31794", Offset = "0xC31794", VA = "0xC31794")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xC3179C", Offset = "0xC3179C", VA = "0xC3179C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public Sprite sprite
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0xC31844", Offset = "0xC31844", VA = "0xC31844")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001740")]
			[Address(RVA = "0xC3184C", Offset = "0xC3184C", VA = "0xC3184C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public BorderMode spriteBorderMode
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0xC318FC", Offset = "0xC318FC", VA = "0xC318FC")]
			get
			{
				return default(BorderMode);
			}
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xC31904", Offset = "0xC31904", VA = "0xC31904")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public Texture2D texture
		{
			[Token(Token = "0x6001743")]
			[Address(RVA = "0xC31984", Offset = "0xC31984", VA = "0xC31984")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001744")]
			[Address(RVA = "0xC3198C", Offset = "0xC3198C", VA = "0xC3198C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F4")]
		public Rect textureUVRect
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0xC31A3C", Offset = "0xC31A3C", VA = "0xC31A3C")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6001746")]
			[Address(RVA = "0xC31A48", Offset = "0xC31A48", VA = "0xC31A48")]
			set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public Color channelWeights
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0xC31B04", Offset = "0xC31B04", VA = "0xC31B04")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0xC31B10", Offset = "0xC31B10", VA = "0xC31B10")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public float raycastThreshold
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0xC31BCC", Offset = "0xC31BCC", VA = "0xC31BCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600174A")]
			[Address(RVA = "0xC31BD4", Offset = "0xC31BD4", VA = "0xC31BD4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public bool isUsingRaycastFiltering
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0xC31BDC", Offset = "0xC31BDC", VA = "0xC31BDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F8")]
		public bool isMaskingEnabled
		{
			[Token(Token = "0x600174C")]
			[Address(RVA = "0xC31BEC", Offset = "0xC31BEC", VA = "0xC31BEC", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F9")]
		private RectTransform maskTransform
		{
			[Token(Token = "0x600175D")]
			[Address(RVA = "0xC321B4", Offset = "0xC321B4", VA = "0xC321B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		private Canvas canvas
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xC31C84", Offset = "0xC31C84", VA = "0xC31C84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FB")]
		private bool isBasedOnGraphic
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0xC330F4", Offset = "0xC330F4", VA = "0xC330F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FC")]
		private bool SoftMasking.ISoftMask.isAlive
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0xC33104", Offset = "0xC33104", VA = "0xC33104", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xC31464", Offset = "0xC31464", VA = "0xC31464")]
		public SoftMask()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xC31D0C", Offset = "0xC31D0C", VA = "0xC31D0C")]
		public Errors PollErrors()
		{
			return default(Errors);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xC31F5C", Offset = "0xC31F5C", VA = "0xC31F5C", Slot = "22")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xC324C8", Offset = "0xC324C8", VA = "0xC324C8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xC325A4", Offset = "0xC325A4", VA = "0xC325A4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xC32C18", Offset = "0xC32C18", VA = "0xC32C18", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xC32DE8", Offset = "0xC32DE8", VA = "0xC32DE8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xC32E18", Offset = "0xC32E18", VA = "0xC32E18", Slot = "23")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xC32EF8", Offset = "0xC32EF8", VA = "0xC32EF8", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xC32F24", Offset = "0xC32F24", VA = "0xC32F24", Slot = "13")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xC32F50", Offset = "0xC32F50", VA = "0xC32F50", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xC32F80", Offset = "0xC32F80", VA = "0xC32F80", Slot = "15")]
		protected override void OnCanvasHierarchyChanged()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xC32FB4", Offset = "0xC32FB4", VA = "0xC32FB4")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xC32604", Offset = "0xC32604", VA = "0xC32604")]
		private void SubscribeOnWillRenderCanvases()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xC32D48", Offset = "0xC32D48", VA = "0xC32D48")]
		private void UnsubscribeFromWillRenderCanvases()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC32FD0", Offset = "0xC32FD0", VA = "0xC32FD0")]
		private void OnWillRenderCanvases()
		{
		}

		[Token(Token = "0x600175C")]
		private static T Touch<T>(T obj)
		{
			return (T)null;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xC33188", Offset = "0xC33188", VA = "0xC33188", Slot = "19")]
		private Material SoftMasking.ISoftMask.GetReplacement(Material original)
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xC331BC", Offset = "0xC331BC", VA = "0xC331BC", Slot = "20")]
		private void SoftMasking.ISoftMask.ReleaseReplacement(Material replacement)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xC331F0", Offset = "0xC331F0", VA = "0xC331F0", Slot = "21")]
		private void SoftMasking.ISoftMask.UpdateTransformChildren(Transform transform)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xC331F4", Offset = "0xC331F4", VA = "0xC331F4")]
		private void OnGraphicDirty()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xC328EC", Offset = "0xC328EC", VA = "0xC328EC")]
		private void FindGraphic()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xC33004", Offset = "0xC33004", VA = "0xC33004")]
		private Canvas NearestEnabledCanvas()
		{
			return null;
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xC32A68", Offset = "0xC32A68", VA = "0xC32A68")]
		private void UpdateMaskParameters()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xC326DC", Offset = "0xC326DC", VA = "0xC326DC")]
		private void SpawnMaskablesInChildren(Transform root)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xC33354", Offset = "0xC33354", VA = "0xC33354")]
		private void InvalidateChildren()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xC32B24", Offset = "0xC32B24", VA = "0xC32B24")]
		private void NotifyChildrenThatMaskMightChanged()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xC33448", Offset = "0xC33448", VA = "0xC33448")]
		private void ForEachChildMaskable(Action<SoftMaskable> f)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xC32DBC", Offset = "0xC32DBC", VA = "0xC32DBC")]
		private void DestroyMaterials()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xC33700", Offset = "0xC33700", VA = "0xC33700")]
		private SourceParameters DeduceSourceParameters()
		{
			return default(SourceParameters);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xC33A18", Offset = "0xC33A18", VA = "0xC33A18")]
		private BorderMode ToBorderMode(Image.Type imageType)
		{
			return default(BorderMode);
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xC3320C", Offset = "0xC3320C", VA = "0xC3320C")]
		private void CalculateMaskParameters()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xC33B38", Offset = "0xC33B38", VA = "0xC33B38")]
		private void CalculateSpriteBased(Sprite sprite, BorderMode borderMode)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xC3486C", Offset = "0xC3486C", VA = "0xC3486C")]
		private static Vector4 AdjustBorders(Vector4 border, Vector4 rect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xC34168", Offset = "0xC34168", VA = "0xC34168")]
		private void CalculateTextureBased(Texture2D texture, Rect uvRect)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xC34280", Offset = "0xC34280", VA = "0xC34280")]
		private void CalculateSolidFill()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xC344EC", Offset = "0xC344EC", VA = "0xC344EC")]
		private void FillCommonParameters()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xC3475C", Offset = "0xC3475C", VA = "0xC3475C")]
		private float GraphicToCanvasScale(Sprite sprite)
		{
			return default(float);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xC34B10", Offset = "0xC34B10", VA = "0xC34B10")]
		private Matrix4x4 WorldToMask()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xC32284", Offset = "0xC32284", VA = "0xC32284")]
		private Vector4 LocalMaskRect(Vector4 border)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xC3497C", Offset = "0xC3497C", VA = "0xC3497C")]
		private Vector2 MaskRepeat(Sprite sprite, Vector4 centralPart)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xC324F0", Offset = "0xC324F0", VA = "0xC324F0")]
		private void WarnIfDefaultShaderIsNotSet()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xC34414", Offset = "0xC34414", VA = "0xC34414")]
		private void WarnSpriteErrors(Errors errors)
		{
		}

		[Token(Token = "0x600177B")]
		private void Set<T>(ref T field, T value)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xC31628", Offset = "0xC31628", VA = "0xC31628")]
		private void SetShader(ref Shader field, Shader value, bool warnIfNotSet = true)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xC34D40", Offset = "0xC34D40", VA = "0xC34D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13C4", Offset = "0x9F13C4")]
		private void <.ctor>b__20_0(Material m)
		{
		}
	}
	[Token(Token = "0x200029E")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E2494", Offset = "0x9E2494")]
	public class SoftMaskable : UIBehaviour, IMaterialModifier
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ISoftMask _mask;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Graphic _graphic;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _replacement;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _affectedByMask;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _destroyed;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E92D4", Offset = "0x9E92D4")]
		private bool <shaderIsNotSupported>k__BackingField;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ISoftMask> s_softMasks;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Canvas> s_canvases;

		[Token(Token = "0x170003FD")]
		public bool shaderIsNotSupported
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0xC35A58", Offset = "0xC35A58", VA = "0xC35A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13D4", Offset = "0x9F13D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001780")]
			[Address(RVA = "0xC363B8", Offset = "0xC363B8", VA = "0xC363B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13E4", Offset = "0x9F13E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003FE")]
		public bool isMaskingEnabled
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0xC363C4", Offset = "0xC363C4", VA = "0xC363C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FF")]
		public ISoftMask mask
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0xC35A50", Offset = "0xC35A50", VA = "0xC35A50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001783")]
			[Address(RVA = "0xC3650C", Offset = "0xC3650C", VA = "0xC3650C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000400")]
		private Graphic graphic
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xC36A0C", Offset = "0xC36A0C", VA = "0xC36A0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		private Material replacement
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xC36894", Offset = "0xC36894", VA = "0xC36894")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xC3660C", Offset = "0xC3660C", VA = "0xC3660C")]
			set
			{
			}
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xC36740", Offset = "0xC36740", VA = "0xC36740", Slot = "17")]
		public Material GetModifiedMaterial(Material baseMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xC35160", Offset = "0xC35160", VA = "0xC35160")]
		public void Invalidate()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xC35254", Offset = "0xC35254", VA = "0xC35254")]
		public void MaskMightChanged()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xC36BD0", Offset = "0xC36BD0", VA = "0xC36BD0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xC36C00", Offset = "0xC36C00", VA = "0xC36C00", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xC36D10", Offset = "0xC36D10", VA = "0xC36D10", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xC36D3C", Offset = "0xC36D3C", VA = "0xC36D3C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xC36D68", Offset = "0xC36D68", VA = "0xC36D68", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xC36D90", Offset = "0xC36D90", VA = "0xC36D90", Slot = "15")]
		protected override void OnCanvasHierarchyChanged()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xC36DB8", Offset = "0xC36DB8", VA = "0xC36DB8")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xC36C40", Offset = "0xC36C40", VA = "0xC36C40")]
		private void RequestChildTransformUpdate()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xC36AA0", Offset = "0xC36AA0", VA = "0xC36AA0")]
		private bool FindMaskOrDie()
		{
			return default(bool);
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xC36DBC", Offset = "0xC36DBC", VA = "0xC36DBC")]
		private static ISoftMask NearestMask(Transform transform, out bool processedByThisMask, bool enabledOnly = true)
		{
			return null;
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xC36EFC", Offset = "0xC36EFC", VA = "0xC36EFC")]
		private static ISoftMask GetISoftMask(Transform current, bool shouldBeEnabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xC37070", Offset = "0xC37070", VA = "0xC37070")]
		private static bool IsOverridingSortingCanvas(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001796")]
		private static T GetComponent<T>(UnityEngine.Component component, List<T> cachedList) where T : class
		{
			return null;
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xC3689C", Offset = "0xC3689C", VA = "0xC3689C")]
		private void SetShaderNotSupported(Material material)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xC37150", Offset = "0xC37150", VA = "0xC37150")]
		public SoftMaskable()
		{
		}
	}
}
namespace SoftMasking.TextMeshPro
{
	[Token(Token = "0x200029F")]
	[GlobalMaterialReplacer]
	public class MaterialReplacer : IMaterialReplacer
	{
		[Token(Token = "0x17000402")]
		public int order
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0xC371FC", Offset = "0xC371FC", VA = "0xC371FC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xC37204", Offset = "0xC37204", VA = "0xC37204", Slot = "5")]
		public Material Replace(Material material)
		{
			return null;
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xC373F0", Offset = "0xC373F0", VA = "0xC373F0")]
		public MaterialReplacer()
		{
		}
	}
}
namespace SoftMasking.Extensions
{
	[Token(Token = "0x20002A0")]
	public static class MaterialOps
	{
		[Token(Token = "0x600179D")]
		[Address(RVA = "0xC2FA24", Offset = "0xC2FA24", VA = "0xC2FA24")]
		public static bool SupportsSoftMask(this Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xC2FA84", Offset = "0xC2FA84", VA = "0xC2FA84")]
		public static bool HasDefaultUIShader(this Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xC2FB34", Offset = "0xC2FB34", VA = "0xC2FB34")]
		public static bool HasDefaultETC1UIShader(this Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xC2FBE4", Offset = "0xC2FBE4", VA = "0xC2FBE4")]
		public static void EnableKeyword(this Material mat, string keyword, bool enabled)
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x20002A1")]
	public class CUI_AnimateCurvedFillOnStart : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xCFFE68", Offset = "0xCFFE68", VA = "0xCFFE68")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xD00080", Offset = "0xD00080", VA = "0xD00080")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class CUI_CameraController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xD00088", Offset = "0xD00088", VA = "0xD00088")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xD000DC", Offset = "0xD000DC", VA = "0xD000DC")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class CUI_ChangeValueOnHold : UnityEngine.MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xD000F4", Offset = "0xD000F4", VA = "0xD000F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xD0017C", Offset = "0xD0017C", VA = "0xD0017C")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xD00360", Offset = "0xD00360", VA = "0xD00360", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xD00434", Offset = "0xD00434", VA = "0xD00434", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xD004FC", Offset = "0xD004FC", VA = "0xD004FC")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class CUI_DragBetweenCanvases : UnityEngine.MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xD00504", Offset = "0xD00504", VA = "0xD00504", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xD008FC", Offset = "0xD008FC", VA = "0xD008FC", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xD0120C", Offset = "0xD0120C", VA = "0xD0120C", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xD006A8", Offset = "0xD006A8", VA = "0xD006A8")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xD01278", Offset = "0xD01278", VA = "0xD01278")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class CUI_draggable : UnityEngine.MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xD036C8", Offset = "0xD036C8", VA = "0xD036C8", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xD03AC8", Offset = "0xD03AC8", VA = "0xD03AC8", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xD03ACC", Offset = "0xD03ACC", VA = "0xD03ACC", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xD03B44", Offset = "0xD03B44", VA = "0xD03B44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xD03874", Offset = "0xD03874", VA = "0xD03874")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xD03C64", Offset = "0xD03C64", VA = "0xD03C64")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class CUI_GunController : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3954", Offset = "0x9E3954")]
		private sealed class <>c
		{
			[Token(Token = "0x40016F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0xD018A4", Offset = "0xD018A4", VA = "0xD018A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D92")]
			[Address(RVA = "0xD018AC", Offset = "0xD018AC", VA = "0xD018AC")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xD01280", Offset = "0xD01280", VA = "0xD01280")]
		private void Update()
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xD01838", Offset = "0xD01838", VA = "0xD01838")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class CUI_GunMovement : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xD01990", Offset = "0xD01990", VA = "0xD01990")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xD019BC", Offset = "0xD019BC", VA = "0xD019BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xD01C18", Offset = "0xD01C18", VA = "0xD01C18")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class CUI_inventory_paralax : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xD03C6C", Offset = "0xD03C6C", VA = "0xD03C6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xD03CD0", Offset = "0xD03CD0", VA = "0xD03CD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xD03FB8", Offset = "0xD03FB8", VA = "0xD03FB8")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class CUI_OrientOnCurvedSpace : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xD01C2C", Offset = "0xD01C2C", VA = "0xD01C2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xD01C84", Offset = "0xD01C84", VA = "0xD01C84")]
		private void Update()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xD02414", Offset = "0xD02414", VA = "0xD02414")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class CUI_PerlinNoisePosition : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xD0241C", Offset = "0xD0241C", VA = "0xD0241C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xD02490", Offset = "0xD02490", VA = "0xD02490")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xD025EC", Offset = "0xD025EC", VA = "0xD025EC")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class CUI_PerlinNoiseRotation : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xD025FC", Offset = "0xD025FC", VA = "0xD025FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xD02670", Offset = "0xD02670", VA = "0xD02670")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xD02768", Offset = "0xD02768", VA = "0xD02768")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class CUI_PickImageFromSet : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xD0277C", Offset = "0xD0277C", VA = "0xD0277C")]
		public void PickThis()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xD029DC", Offset = "0xD029DC", VA = "0xD029DC")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class CUI_RaycastToCanvas : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xD029E8", Offset = "0xD029E8", VA = "0xD029E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xD02A40", Offset = "0xD02A40", VA = "0xD02A40")]
		private void Update()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xD02B94", Offset = "0xD02B94", VA = "0xD02B94")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class CUI_RiseChildrenOverTime : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xD02B9C", Offset = "0xD02B9C", VA = "0xD02B9C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xD02BA0", Offset = "0xD02BA0", VA = "0xD02BA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xD02DF8", Offset = "0xD02DF8", VA = "0xD02DF8")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class CUI_TMPChecker : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xD02E0C", Offset = "0xD02E0C", VA = "0xD02E0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xD02ECC", Offset = "0xD02ECC", VA = "0xD02ECC")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class CUI_ViveButtonState : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200046E")]
		private enum ViveButton
		{
			[Token(Token = "0x40016FC")]
			Trigger,
			[Token(Token = "0x40016FD")]
			TouchpadTouch,
			[Token(Token = "0x40016FE")]
			TouchpadPress,
			[Token(Token = "0x40016FF")]
			Grip,
			[Token(Token = "0x4001700")]
			Menu
		}

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xD02ED4", Offset = "0xD02ED4", VA = "0xD02ED4")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class CUI_ViveHapticPulse : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xD02F18", Offset = "0xD02F18", VA = "0xD02F18")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xD02F24", Offset = "0xD02F24", VA = "0xD02F24")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xD02FA8", Offset = "0xD02FA8", VA = "0xD02FA8")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xD02FAC", Offset = "0xD02FAC", VA = "0xD02FAC")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class CUI_WorldSpaceCursorFollow : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xD02FB4", Offset = "0xD02FB4", VA = "0xD02FB4")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xD03170", Offset = "0xD03170", VA = "0xD03170")]
		private void Update()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xD03278", Offset = "0xD03278", VA = "0xD03278")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class CUI_WorldSpaceMouseMultipleCanvases : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xD03280", Offset = "0xD03280", VA = "0xD03280")]
		private void Start()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xD03284", Offset = "0xD03284", VA = "0xD03284")]
		private void Update()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xD036C0", Offset = "0xD036C0", VA = "0xD036C0")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xD03FC8", Offset = "0xD03FC8", VA = "0xD03FC8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xD04028", Offset = "0xD04028", VA = "0xD04028", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xD04034", Offset = "0xD04034", VA = "0xD04034")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xD0409C", Offset = "0xD0409C", VA = "0xD0409C")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xD025D0", Offset = "0xD025D0", VA = "0xD025D0")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xD04168", Offset = "0xD04168", VA = "0xD04168")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xD04214", Offset = "0xD04214", VA = "0xD04214")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xD04234", Offset = "0xD04234", VA = "0xD04234")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xD0418C", Offset = "0xD0418C", VA = "0xD0418C")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xD04250", Offset = "0xD04250", VA = "0xD04250")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xD042D8", Offset = "0xD042D8", VA = "0xD042D8")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xD04340", Offset = "0xD04340", VA = "0xD04340")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xD043AC", Offset = "0xD043AC", VA = "0xD043AC")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xD0441C", Offset = "0xD0441C", VA = "0xD0441C")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xD0448C", Offset = "0xD0448C", VA = "0xD0448C")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xD017C8", Offset = "0xD017C8", VA = "0xD017C8")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xD01800", Offset = "0xD01800", VA = "0xD01800")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xD01790", Offset = "0xD01790", VA = "0xD01790")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xD044FC", Offset = "0xD044FC", VA = "0xD044FC")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xD0459C", Offset = "0xD0459C", VA = "0xD0459C")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xD00E00", Offset = "0xD00E00", VA = "0xD00E00")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x60017F1")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x60017F2")]
		public static T AddComponentIfMissing<T>(this UnityEngine.Component go) where T : UnityEngine.Component
		{
			return null;
		}
	}
	[Token(Token = "0x20002B6")]
	public class CurvedUIHandSwitcher : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E9474", Offset = "0x9E9474")]
		private bool autoSwitchHands;

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xD0463C", Offset = "0xD0463C", VA = "0xD0463C")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class CurvedUIInputFieldCaret : UnityEngine.MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3964", Offset = "0x9E3964")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x17000492")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D96")]
				[Address(RVA = "0xD0570C", Offset = "0xD0570C", VA = "0xD0570C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000493")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D98")]
				[Address(RVA = "0xD0577C", Offset = "0xD0577C", VA = "0xD0577C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xD0517C", Offset = "0xD0517C", VA = "0xD0517C")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xD055A8", Offset = "0xD055A8", VA = "0xD055A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xD055AC", Offset = "0xD055AC", VA = "0xD055AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xD05714", Offset = "0xD05714", VA = "0xD05714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x17000403")]
		public Color CaretColor
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0xD054F8", Offset = "0xD054F8", VA = "0xD054F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xD05504", Offset = "0xD05504", VA = "0xD05504")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public Color SelectionColor
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xD05510", Offset = "0xD05510", VA = "0xD05510")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xD0551C", Offset = "0xD0551C", VA = "0xD0551C")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0xD05528", Offset = "0xD05528", VA = "0xD05528")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001801")]
			[Address(RVA = "0xD05558", Offset = "0xD05558", VA = "0xD05558")]
			set
			{
			}
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xD0464C", Offset = "0xD0464C", VA = "0xD0464C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xD046A4", Offset = "0xD046A4", VA = "0xD046A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xD04AE8", Offset = "0xD04AE8", VA = "0xD04AE8", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xD0512C", Offset = "0xD0512C", VA = "0xD0512C", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xD050B8", Offset = "0xD050B8", VA = "0xD050B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1574", Offset = "0x9F1574")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xD04BBC", Offset = "0xD04BBC", VA = "0xD04BBC")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xD046B4", Offset = "0xD046B4", VA = "0xD046B4")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xD051A8", Offset = "0xD051A8", VA = "0xD051A8")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xD05598", Offset = "0xD05598", VA = "0xD05598")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class CurvedUILaserBeam : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3974", Offset = "0x9E3974")]
		private sealed class <>c
		{
			[Token(Token = "0x4001704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__4_0;

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xD05D9C", Offset = "0xD05D9C", VA = "0xD05D9C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xD05DA4", Offset = "0xD05DA4", VA = "0xD05DA4")]
			internal bool <Update>b__4_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool CollideWithMyLayerOnly;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xD05784", Offset = "0xD05784", VA = "0xD05784")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xD05D30", Offset = "0xD05D30", VA = "0xD05D30")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x2000471")]
		public enum ControllerType
		{
			[Token(Token = "0x4001707")]
			NONE = -1,
			[Token(Token = "0x4001708")]
			VIVE
		}

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xD05E88", Offset = "0xD05E88", VA = "0xD05E88")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3984", Offset = "0x9E3984")]
		private sealed class <>c
		{
			[Token(Token = "0x4001709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400170A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__25_0;

			[Token(Token = "0x400170B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__53_0;

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xD0F214", Offset = "0xD0F214", VA = "0xD0F214")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0xD0F21C", Offset = "0xD0F21C", VA = "0xD0F21C")]
			internal bool <Update>b__25_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0xD0F300", Offset = "0xD0F300", VA = "0xD0F300")]
			internal int <GetObjectsHitByRay>b__53_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool gazeClickExecuted;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		private bool pointingAtCanvas;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		private bool pointingAtCanvasLastFrame;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9510", Offset = "0x9E9510")]
		private Ray <LastRay>k__BackingField;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9520", Offset = "0x9E9520")]
		private Vector3 <HitPoint>k__BackingField;

		[Token(Token = "0x17000406")]
		public Ray LastRay
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0xD05F10", Offset = "0xD05F10", VA = "0xD05F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F15D8", Offset = "0x9F15D8")]
			get
			{
				return default(Ray);
			}
			[Token(Token = "0x6001807")]
			[Address(RVA = "0xD05F24", Offset = "0xD05F24", VA = "0xD05F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F15E8", Offset = "0x9F15E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0xD05F38", Offset = "0xD05F38", VA = "0xD05F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F15F8", Offset = "0x9F15F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xD05F44", Offset = "0xD05F44", VA = "0xD05F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1608", Offset = "0x9F1608")]
			private set
			{
			}
		}

		[Token(Token = "0x17000408")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xD06E9C", Offset = "0xD06E9C", VA = "0xD06E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000409")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0xD0E810", Offset = "0xD0E810", VA = "0xD0E810")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xD05F50", Offset = "0xD05F50", VA = "0xD05F50", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xD0628C", Offset = "0xD0628C", VA = "0xD0628C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xD06850", Offset = "0xD06850", VA = "0xD06850", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xD06C4C", Offset = "0xD06C4C", VA = "0xD06C4C")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xD06F14", Offset = "0xD06F14", VA = "0xD06F14")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xD07490", Offset = "0xD07490", VA = "0xD07490", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xD0882C", Offset = "0xD0882C", VA = "0xD0882C")]
		private LayerMask GetLayerMaskForMyLayer()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xD088AC", Offset = "0xD088AC", VA = "0xD088AC", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xD09208", Offset = "0xD09208", VA = "0xD09208", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xD099FC", Offset = "0xD099FC", VA = "0xD099FC", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xD0A0F4", Offset = "0xD0A0F4", VA = "0xD0A0F4", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xD06290", Offset = "0xD06290", VA = "0xD06290")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xD0CDBC", Offset = "0xD0CDBC", VA = "0xD0CDBC")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xD0AE54", Offset = "0xD0AE54", VA = "0xD0AE54")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xD0BFDC", Offset = "0xD0BFDC", VA = "0xD0BFDC")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xD0CE84", Offset = "0xD0CE84", VA = "0xD0CE84")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xD090B4", Offset = "0xD090B4", VA = "0xD090B4")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xD0DCA4", Offset = "0xD0DCA4", VA = "0xD0DCA4")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xD0DD74", Offset = "0xD0DD74", VA = "0xD0DD74", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xD081E4", Offset = "0xD081E4", VA = "0xD081E4")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xD0DDEC", Offset = "0xD0DDEC", VA = "0xD0DDEC")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xD0E4B4", Offset = "0xD0E4B4", VA = "0xD0E4B4")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xD0E680", Offset = "0xD0E680", VA = "0xD0E680")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xD0E818", Offset = "0xD0E818", VA = "0xD0E818")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xD0171C", Offset = "0xD0171C", VA = "0xD0171C")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xD0E88C", Offset = "0xD0E88C", VA = "0xD0E88C")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xD0E9CC", Offset = "0xD0E9CC", VA = "0xD0E9CC")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xD06F40", Offset = "0xD06F40", VA = "0xD06F40")]
		public void Click()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xD0D878", Offset = "0xD0D878", VA = "0xD0D878")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xD0EE74", Offset = "0xD0EE74", VA = "0xD0EE74")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xD0F0B4", Offset = "0xD0F0B4", VA = "0xD0F0B4")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E2520", Offset = "0x9E2520")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E2520", Offset = "0x9E2520")]
	public class CurvedUISettings : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000473")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x400170D")]
			CYLINDER,
			[Token(Token = "0x400170E")]
			RING,
			[Token(Token = "0x400170F")]
			SPHERE,
			[Token(Token = "0x4001710")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool raycastMyLayerOnly;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x1700040A")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6001835")]
			[Address(RVA = "0xD0F428", Offset = "0xD0F428", VA = "0xD0F428")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xD0D61C", Offset = "0xD0D61C", VA = "0xD0D61C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040C")]
		public int Angle
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0xD0881C", Offset = "0xD0881C", VA = "0xD0881C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xD105E0", Offset = "0xD105E0", VA = "0xD105E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public float Quality
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xD105D8", Offset = "0xD105D8", VA = "0xD105D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xD105F4", Offset = "0xD105F4", VA = "0xD105F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xD08824", Offset = "0xD08824", VA = "0xD08824")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xD10610", Offset = "0xD10610", VA = "0xD10610")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public int VerticalAngle
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xD0AE3C", Offset = "0xD0AE3C", VA = "0xD0AE3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xD10630", Offset = "0xD10630", VA = "0xD10630")]
			set
			{
			}
		}

		[Token(Token = "0x17000410")]
		public float RingFill
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xD00078", Offset = "0xD00078", VA = "0xD00078")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xD0005C", Offset = "0xD0005C", VA = "0xD0005C")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public float SavedRadius
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xD0FCC4", Offset = "0xD0FCC4", VA = "0xD0FCC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000412")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xD0A0E4", Offset = "0xD0A0E4", VA = "0xD0A0E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600184B")]
			[Address(RVA = "0xD10650", Offset = "0xD10650", VA = "0xD10650")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0xD0A0EC", Offset = "0xD0A0EC", VA = "0xD0A0EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184D")]
			[Address(RVA = "0xD10670", Offset = "0xD10670", VA = "0xD10670")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public bool PreserveAspect
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0xD0AE34", Offset = "0xD0AE34", VA = "0xD0AE34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184F")]
			[Address(RVA = "0xD1069C", Offset = "0xD1069C", VA = "0xD1069C")]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public bool Interactable
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xD081DC", Offset = "0xD081DC", VA = "0xD081DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xD106C8", Offset = "0xD106C8", VA = "0xD106C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xD0AE4C", Offset = "0xD0AE4C", VA = "0xD0AE4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001853")]
			[Address(RVA = "0xD106D4", Offset = "0xD106D4", VA = "0xD106D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000417")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0xD0AE44", Offset = "0xD0AE44", VA = "0xD0AE44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001855")]
			[Address(RVA = "0xD106E0", Offset = "0xD106E0", VA = "0xD106E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000418")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xD088A4", Offset = "0xD088A4", VA = "0xD088A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xD107D0", Offset = "0xD107D0", VA = "0xD107D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xD108C0", Offset = "0xD108C0", VA = "0xD108C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041A")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xD0E454", Offset = "0xD0E454", VA = "0xD0E454")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xD10A7C", Offset = "0xD10A7C", VA = "0xD10A7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xD10D58", Offset = "0xD10D58", VA = "0xD10D58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xD10DD0", Offset = "0xD10DD0", VA = "0xD10DD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0xD10E50", Offset = "0xD10E50", VA = "0xD10E50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001863")]
			[Address(RVA = "0xD10EC8", Offset = "0xD10EC8", VA = "0xD10EC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6001864")]
			[Address(RVA = "0xD10F50", Offset = "0xD10F50", VA = "0xD10F50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xD10FC8", Offset = "0xD10FC8", VA = "0xD10FC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x6001866")]
			[Address(RVA = "0xD11050", Offset = "0xD11050", VA = "0xD11050")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xD0F370", Offset = "0xD0F370", VA = "0xD0F370")]
		private void Awake()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xD0F4D4", Offset = "0xD0F4D4", VA = "0xD0F4D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xD0F65C", Offset = "0xD0F65C", VA = "0xD0F65C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xD0F724", Offset = "0xD0F724", VA = "0xD0F724")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xD0F7EC", Offset = "0xD0F7EC", VA = "0xD0F7EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xD0F954", Offset = "0xD0F954", VA = "0xD0F954")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xD0FB94", Offset = "0xD0FB94", VA = "0xD0FB94")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xD0FCF8", Offset = "0xD0FCF8", VA = "0xD0FCF8")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xD0FE28", Offset = "0xD0FE28", VA = "0xD0FE28")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xD0FF60", Offset = "0xD0FF60", VA = "0xD0FF60")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xD10148", Offset = "0xD10148", VA = "0xD10148")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xD103A8", Offset = "0xD103A8", VA = "0xD103A8")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xD01F40", Offset = "0xD01F40", VA = "0xD01F40")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xD02068", Offset = "0xD02068", VA = "0xD02068")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xD01040", Offset = "0xD01040", VA = "0xD01040")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xD060F0", Offset = "0xD060F0", VA = "0xD060F0")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xD0D624", Offset = "0xD0D624", VA = "0xD0D624")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xD104D8", Offset = "0xD104D8", VA = "0xD104D8")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xD107DC", Offset = "0xD107DC", VA = "0xD107DC")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xD109B8", Offset = "0xD109B8", VA = "0xD109B8")]
		public void Click()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xD05C44", Offset = "0xD05C44", VA = "0xD05C44")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xD10AE4", Offset = "0xD10AE4", VA = "0xD10AE4")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xD10C40", Offset = "0xD10C40", VA = "0xD10C40")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xD110C8", Offset = "0xD110C8", VA = "0xD110C8")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E95F0", Offset = "0x9E95F0")]
		public bool DoNotTesselate;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool curvingRequired;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private UIVertex m_ret;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float[] m_weights;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Vector2 _uv0;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Vector2 _uv1;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 _pos;

		[Token(Token = "0x1700041F")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0xD11124", Offset = "0xD11124", VA = "0xD11124")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001869")]
			[Address(RVA = "0xD1112C", Offset = "0xD1112C", VA = "0xD1112C")]
			set
			{
			}
		}

		[Token(Token = "0x17000420")]
		public bool TesselationRequired
		{
			[Token(Token = "0x600187A")]
			[Address(RVA = "0xD14604", Offset = "0xD14604", VA = "0xD14604")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600187B")]
			[Address(RVA = "0xD00428", Offset = "0xD00428", VA = "0xD00428")]
			set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public bool CurvingRequired
		{
			[Token(Token = "0x600187C")]
			[Address(RVA = "0xD1460C", Offset = "0xD1460C", VA = "0xD1460C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600187D")]
			[Address(RVA = "0xD108B4", Offset = "0xD108B4", VA = "0xD108B4")]
			set
			{
			}
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xD11138", Offset = "0xD11138", VA = "0xD11138", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xD111B4", Offset = "0xD111B4", VA = "0xD111B4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xD11370", Offset = "0xD11370", VA = "0xD11370", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xD11AB0", Offset = "0xD11AB0", VA = "0xD11AB0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xD11C3C", Offset = "0xD11C3C", VA = "0xD11C3C")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xD11C48", Offset = "0xD11C48", VA = "0xD11C48")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xD11CF4", Offset = "0xD11CF4", VA = "0xD11CF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xD12330", Offset = "0xD12330", VA = "0xD12330", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xD12BF4", Offset = "0xD12BF4", VA = "0xD12BF4")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xD00F3C", Offset = "0xD00F3C", VA = "0xD00F3C")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xD130C4", Offset = "0xD130C4", VA = "0xD130C4")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xD12EEC", Offset = "0xD12EEC", VA = "0xD12EEC")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xD13830", Offset = "0xD13830", VA = "0xD13830")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xD135BC", Offset = "0xD135BC", VA = "0xD135BC")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xD14110", Offset = "0xD14110", VA = "0xD14110")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xD0FB88", Offset = "0xD0FB88", VA = "0xD0FB88")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xD14614", Offset = "0xD14614", VA = "0xD14614")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class CurvedUIViveController : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600187F")]
		[Address(RVA = "0xC4952C", Offset = "0xC4952C", VA = "0xC4952C")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x20002BF")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x20002C0")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x20002C1")]
	[ExecuteInEditMode]
	public class CurvedUITMP : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001888")]
		[Address(RVA = "0xD1110C", Offset = "0xD1110C", VA = "0xD1110C")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class CurvedUITMPInputFieldCaret : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x6001889")]
		[Address(RVA = "0xD11114", Offset = "0xD11114", VA = "0xD11114")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x600188A")]
		[Address(RVA = "0xD1111C", Offset = "0xD1111C", VA = "0xD1111C")]
		public CurvedUITMPSubmesh()
		{
		}
	}
}
namespace SWS
{
	[Token(Token = "0x20002C4")]
	public class MoveAnimator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private splineMove sMove;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NavMeshAgent nAgent;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastRotY;

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xC06F78", Offset = "0xC06F78", VA = "0xC06F78")]
		private void Start()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xC07034", Offset = "0xC07034", VA = "0xC07034", Slot = "4")]
		protected virtual void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xC0732C", Offset = "0xC0732C", VA = "0xC0732C")]
		public MoveAnimator()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class PathIndicator : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3994", Offset = "0x9E3994")]
		private sealed class <EmitParticles>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathIndicator <>4__this;

			[Token(Token = "0x17000494")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA3")]
				[Address(RVA = "0xC075CC", Offset = "0xC075CC", VA = "0xC075CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000495")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA5")]
				[Address(RVA = "0xC0763C", Offset = "0xC0763C", VA = "0xC0763C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0xC07414", Offset = "0xC07414", VA = "0xC07414")]
			[DebuggerHidden]
			public <EmitParticles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xC07448", Offset = "0xC07448", VA = "0xC07448", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xC0744C", Offset = "0xC0744C", VA = "0xC0744C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xC075D4", Offset = "0xC075D4", VA = "0xC075D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float modRotation;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem pSys;

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xC07334", Offset = "0xC07334", VA = "0xC07334")]
		private void Start()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xC073A0", Offset = "0xC073A0", VA = "0xC073A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1618", Offset = "0x9F1618")]
		private IEnumerator EmitParticles()
		{
			return null;
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xC07440", Offset = "0xC07440", VA = "0xC07440")]
		public PathIndicator()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E25C8", Offset = "0x9E25C8")]
	public class PathRenderer : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E39A4", Offset = "0x9E39A4")]
		private sealed class <StartRenderer>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathRenderer <>4__this;

			[Token(Token = "0x17000496")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA9")]
				[Address(RVA = "0xC08800", Offset = "0xC08800", VA = "0xC08800", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000497")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DAB")]
				[Address(RVA = "0xC08870", Offset = "0xC08870", VA = "0xC08870", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0xC07DB8", Offset = "0xC07DB8", VA = "0xC07DB8")]
			[DebuggerHidden]
			public <StartRenderer>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0xC08760", Offset = "0xC08760", VA = "0xC08760", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0xC08764", Offset = "0xC08764", VA = "0xC08764", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0xC08808", Offset = "0xC08808", VA = "0xC08808", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onUpdate;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spacing;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PathManager path;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer line;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] points;

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xC07C80", Offset = "0xC07C80", VA = "0xC07C80")]
		private void Start()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xC07D44", Offset = "0xC07D44", VA = "0xC07D44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F167C", Offset = "0x9F167C")]
		private IEnumerator StartRenderer()
		{
			return null;
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xC07DE4", Offset = "0xC07DE4", VA = "0xC07DE4")]
		private void Render()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xC08098", Offset = "0xC08098", VA = "0xC08098")]
		private void DrawCurved()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xC081D8", Offset = "0xC081D8", VA = "0xC081D8")]
		private void DrawLinear()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xC0874C", Offset = "0xC0874C", VA = "0xC0874C")]
		public PathRenderer()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class BezierPathManager : PathManager
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3[] pathPoints;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<BezierPoint> bPoints;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showHandles;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool connectHandles;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color color3;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float pathDetail;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool customDetail;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<float> segmentDetail;

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xC057CC", Offset = "0xC057CC", VA = "0xC057CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xC060B4", Offset = "0xC060B4", VA = "0xC060B4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xC06700", Offset = "0xC06700", VA = "0xC06700", Slot = "5")]
		public override Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xC06868", Offset = "0xC06868", VA = "0xC06868", Slot = "7")]
		public override int GetEventsCount()
		{
			return default(int);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xC068C8", Offset = "0xC068C8", VA = "0xC068C8", Slot = "6")]
		public override int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xC05D90", Offset = "0xC05D90", VA = "0xC05D90")]
		public void CalculatePath()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xC069F4", Offset = "0xC069F4", VA = "0xC069F4")]
		private List<Vector3> GetPoints(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float detail)
		{
			return null;
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xC06CD8", Offset = "0xC06CD8", VA = "0xC06CD8")]
		public BezierPathManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C8")]
	public class BezierPoint
	{
		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform wp;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] cp;

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xC06F18", Offset = "0xC06F18", VA = "0xC06F18")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class PathManager : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] waypoints;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool drawCurved;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool drawDirection;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color1;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color2;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 size;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float radius;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool skipCustomNames;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject replaceObject;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xC07644", Offset = "0xC07644", VA = "0xC07644")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xC076BC", Offset = "0xC076BC", VA = "0xC076BC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xC07A40", Offset = "0xC07A40", VA = "0xC07A40", Slot = "4")]
		public virtual float GetHandleSize(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xC07A48", Offset = "0xC07A48", VA = "0xC07A48", Slot = "5")]
		public virtual Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xC07C4C", Offset = "0xC07C4C", VA = "0xC07C4C", Slot = "6")]
		public virtual int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xC07C54", Offset = "0xC07C54", VA = "0xC07C54", Slot = "7")]
		public virtual int GetEventsCount()
		{
			return default(int);
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xC06DDC", Offset = "0xC06DDC", VA = "0xC06DDC")]
		public PathManager()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class WaypointManager : UnityEngine.MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E39B4", Offset = "0x9E39B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, PathManager>, bool> <>9__3_0;

			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<string, PathManager>, string> <>9__3_1;

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0xC0937C", Offset = "0xC0937C", VA = "0xC0937C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0xC09384", Offset = "0xC09384", VA = "0xC09384")]
			internal bool <CleanUp>b__3_0(KeyValuePair<string, PathManager> p)
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0xC0941C", Offset = "0xC0941C", VA = "0xC0941C")]
			internal string <CleanUp>b__3_1(KeyValuePair<string, PathManager> p)
			{
				return null;
			}
		}

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<string, PathManager> Paths;

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xC08878", Offset = "0xC08878", VA = "0xC08878")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xC05874", Offset = "0xC05874", VA = "0xC05874")]
		public static void AddPath(GameObject path)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xC088E4", Offset = "0xC088E4", VA = "0xC088E4")]
		public static void CleanUp()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xC08B5C", Offset = "0xC08B5C", VA = "0xC08B5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xC06630", Offset = "0xC06630", VA = "0xC06630")]
		public static void DrawStraight(Vector3[] waypoints)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xC06504", Offset = "0xC06504", VA = "0xC06504")]
		public static void DrawCurved(Vector3[] pathPoints)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xC08BE0", Offset = "0xC08BE0", VA = "0xC08BE0")]
		public static Vector3[] GetCurved(Vector3[] waypoints)
		{
			return null;
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xC082D8", Offset = "0xC082D8", VA = "0xC082D8")]
		public static Vector3 GetPoint(Vector3[] gizmoPoints, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xC08E18", Offset = "0xC08E18", VA = "0xC08E18")]
		public static float GetPathLength(Vector3[] waypoints)
		{
			return default(float);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xC08F60", Offset = "0xC08F60", VA = "0xC08F60")]
		public static List<Vector3> SmoothCurve(List<Vector3> pathToCurve, int interpolations)
		{
			return null;
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xC0929C", Offset = "0xC0929C", VA = "0xC0929C")]
		public WaypointManager()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E262C", Offset = "0x9E262C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E262C", Offset = "0x9E262C")]
	public class navMove : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000477")]
		public enum LoopType
		{
			[Token(Token = "0x400171B")]
			none,
			[Token(Token = "0x400171C")]
			loop,
			[Token(Token = "0x400171D")]
			pingPong,
			[Token(Token = "0x400171E")]
			random
		}

		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E39C4", Offset = "0x9E39C4")]
		private sealed class <Move>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400171F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000498")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB3")]
				[Address(RVA = "0xC0A76C", Offset = "0xC0A76C", VA = "0xC0A76C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000499")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB5")]
				[Address(RVA = "0xC0A7DC", Offset = "0xC0A7DC", VA = "0xC0A7DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0xC09888", Offset = "0xC09888", VA = "0xC09888")]
			[DebuggerHidden]
			public <Move>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0xC0A4F4", Offset = "0xC0A4F4", VA = "0xC0A4F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0xC0A4F8", Offset = "0xC0A4F8", VA = "0xC0A4F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xC0A774", Offset = "0xC0A774", VA = "0xC0A774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E39D4", Offset = "0x9E39D4")]
		private sealed class <NextWaypoint>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x1700049A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB9")]
				[Address(RVA = "0xC0ABE4", Offset = "0xC0ABE4", VA = "0xC0ABE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DBB")]
				[Address(RVA = "0xC0AC54", Offset = "0xC0AC54", VA = "0xC0AC54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xC09928", Offset = "0xC09928", VA = "0xC09928")]
			[DebuggerHidden]
			public <NextWaypoint>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xC0A7E4", Offset = "0xC0A7E4", VA = "0xC0A7E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xC0A7E8", Offset = "0xC0A7E8", VA = "0xC0A7E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0xC0ABEC", Offset = "0xC0ABEC", VA = "0xC0ABEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E39E4", Offset = "0x9E39E4")]
		private sealed class <WaitForDestination>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x4001728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <remain>5__2;

			[Token(Token = "0x1700049C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DBF")]
				[Address(RVA = "0xC0B1F8", Offset = "0xC0B1F8", VA = "0xC0B1F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC1")]
				[Address(RVA = "0xC0B268", Offset = "0xC0B268", VA = "0xC0B268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0xC099C8", Offset = "0xC099C8", VA = "0xC099C8")]
			[DebuggerHidden]
			public <WaitForDestination>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0xC0AFE8", Offset = "0xC0AFE8", VA = "0xC0AFE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0xC0AFEC", Offset = "0xC0AFEC", VA = "0xC0AFEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xC0B200", Offset = "0xC0B200", VA = "0xC0B200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E39F4", Offset = "0x9E39F4")]
		private sealed class <ReachedEnd>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400172A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400172B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x1700049E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC5")]
				[Address(RVA = "0xC0AE3C", Offset = "0xC0AE3C", VA = "0xC0AE3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC7")]
				[Address(RVA = "0xC0AEAC", Offset = "0xC0AEAC", VA = "0xC0AEAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0xC09B6C", Offset = "0xC09B6C", VA = "0xC09B6C")]
			[DebuggerHidden]
			public <ReachedEnd>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xC0AC5C", Offset = "0xC0AC5C", VA = "0xC0AC5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xC0AC60", Offset = "0xC0AC60", VA = "0xC0AC60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0xC0AE44", Offset = "0xC0AE44", VA = "0xC0AE44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3A04", Offset = "0x9E3A04")]
		private sealed class <Wait>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400172C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400172D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400172E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x400172F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public navMove <>4__this;

			[Token(Token = "0x170004A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DCB")]
				[Address(RVA = "0xC0AF70", Offset = "0xC0AF70", VA = "0xC0AF70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DCD")]
				[Address(RVA = "0xC0AFE0", Offset = "0xC0AFE0", VA = "0xC0AFE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0xC0A1C4", Offset = "0xC0A1C4", VA = "0xC0A1C4")]
			[DebuggerHidden]
			public <Wait>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xC0AEB4", Offset = "0xC0AEB4", VA = "0xC0AEB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xC0AEB8", Offset = "0xC0AEB8", VA = "0xC0AEB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xC0AF78", Offset = "0xC0AF78", VA = "0xC0AF78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool updateRotation;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LoopType loopType;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Transform[] waypoints;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool repeat;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshAgent agent;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private System.Random rand;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int rndIndex;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool waiting;

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xC09478", Offset = "0xC09478", VA = "0xC09478")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xC094D0", Offset = "0xC094D0", VA = "0xC094D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xC094E0", Offset = "0xC094E0", VA = "0xC094E0")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xC09814", Offset = "0xC09814", VA = "0xC09814")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F16E0", Offset = "0x9F16E0")]
		private IEnumerator Move()
		{
			return null;
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xC098B4", Offset = "0xC098B4", VA = "0xC098B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1744", Offset = "0x9F1744")]
		private IEnumerator NextWaypoint()
		{
			return null;
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xC09954", Offset = "0xC09954", VA = "0xC09954")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F17A8", Offset = "0x9F17A8")]
		private IEnumerator WaitForDestination()
		{
			return null;
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xC099F4", Offset = "0xC099F4", VA = "0xC099F4")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xC09AF8", Offset = "0xC09AF8", VA = "0xC09AF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F180C", Offset = "0x9F180C")]
		private IEnumerator ReachedEnd()
		{
			return null;
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xC09B98", Offset = "0xC09B98", VA = "0xC09B98")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xC09F98", Offset = "0xC09F98", VA = "0xC09F98")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xC0A098", Offset = "0xC0A098", VA = "0xC0A098")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xC0A12C", Offset = "0xC0A12C", VA = "0xC0A12C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1870", Offset = "0x9F1870")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xC0A1F0", Offset = "0xC0A1F0", VA = "0xC0A1F0")]
		public void Resume()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xC0A240", Offset = "0xC0A240", VA = "0xC0A240")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xC0A2B0", Offset = "0xC0A2B0", VA = "0xC0A2B0")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xC097AC", Offset = "0xC097AC", VA = "0xC097AC")]
		public void Stop()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xC0A2DC", Offset = "0xC0A2DC", VA = "0xC0A2DC")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xC0A41C", Offset = "0xC0A41C", VA = "0xC0A41C")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xC0A45C", Offset = "0xC0A45C", VA = "0xC0A45C")]
		public navMove()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E26B4", Offset = "0x9E26B4")]
	public class splineMove : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x200047D")]
		public enum TimeValue
		{
			[Token(Token = "0x4001731")]
			time,
			[Token(Token = "0x4001732")]
			speed
		}

		[Token(Token = "0x200047E")]
		public enum LoopType
		{
			[Token(Token = "0x4001734")]
			none,
			[Token(Token = "0x4001735")]
			loop,
			[Token(Token = "0x4001736")]
			pingPong,
			[Token(Token = "0x4001737")]
			random,
			[Token(Token = "0x4001738")]
			yoyo
		}

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3A14", Offset = "0x9E3A14")]
		private sealed class <Wait>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400173A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400173B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x400173C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splineMove <>4__this;

			[Token(Token = "0x170004A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD1")]
				[Address(RVA = "0xC0C988", Offset = "0xC0C988", VA = "0xC0C988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD3")]
				[Address(RVA = "0xC0C9F8", Offset = "0xC0C9F8", VA = "0xC0C9F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0xC0C4F0", Offset = "0xC0C4F0", VA = "0xC0C4F0")]
			[DebuggerHidden]
			public <Wait>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xC0C8CC", Offset = "0xC0C8CC", VA = "0xC0C8CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0xC0C8D0", Offset = "0xC0C8D0", VA = "0xC0C8D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xC0C990", Offset = "0xC0C990", VA = "0xC0C990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool local;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lookAhead;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float sizeToAdd;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TimeValue timeValue;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float originSpeed;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve animEaseType;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LoopType loopType;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3[] waypoints;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] wpPos;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PathType pathType;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public PathMode pathMode;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Ease easeType;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public AxisConstraint lockPosition;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AxisConstraint lockRotation;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Tweener tween;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private System.Random rand;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int[] rndArray;

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xC0B270", Offset = "0xC0B270", VA = "0xC0B270")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xC0B280", Offset = "0xC0B280", VA = "0xC0B280")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xC0B448", Offset = "0xC0B448", VA = "0xC0B448")]
		private void Initialize(int startAt = 0)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xC0B6E0", Offset = "0xC0B6E0", VA = "0xC0B6E0")]
		private void CreateTween()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xC0C0DC", Offset = "0xC0C0DC", VA = "0xC0C0DC")]
		private void OnWaypointReached(int index)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xC0C128", Offset = "0xC0C128", VA = "0xC0C128")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xC0C314", Offset = "0xC0C314", VA = "0xC0C314")]
		private void ReachedEnd()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xC0BB30", Offset = "0xC0BB30", VA = "0xC0BB30")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xC0C030", Offset = "0xC0C030", VA = "0xC0C030")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xC0C3A8", Offset = "0xC0C3A8", VA = "0xC0C3A8")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xC0C458", Offset = "0xC0C458", VA = "0xC0C458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F18D4", Offset = "0x9F18D4")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xC0C51C", Offset = "0xC0C51C", VA = "0xC0C51C")]
		public void Resume()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xC0C598", Offset = "0xC0C598", VA = "0xC0C598")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xC0C650", Offset = "0xC0C650", VA = "0xC0C650")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xC0B6A4", Offset = "0xC0B6A4", VA = "0xC0B6A4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xC0C67C", Offset = "0xC0C67C", VA = "0xC0C67C")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xC0C0B0", Offset = "0xC0C0B0", VA = "0xC0C0B0")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xC0C824", Offset = "0xC0C824", VA = "0xC0C824")]
		public splineMove()
		{
		}
	}
}
namespace EscalatorPro
{
	[Token(Token = "0x20002CD")]
	public class EscalatorPro : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x2000480")]
		public enum Destination
		{
			[Token(Token = "0x400173E")]
			ToSlopeStartPoint,
			[Token(Token = "0x400173F")]
			ToSlopeEndPoint,
			[Token(Token = "0x4001740")]
			ToEndPoint,
			[Token(Token = "0x4001741")]
			ToEndPointDown,
			[Token(Token = "0x4001742")]
			ToSlopeEndPointReturn,
			[Token(Token = "0x4001743")]
			ToSlopeStartPointReturn,
			[Token(Token = "0x4001744")]
			ToStartPointDown,
			[Token(Token = "0x4001745")]
			ToSartPoint
		}

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E97E8", Offset = "0x9E97E8")]
		public GameObject stairPrefab;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float stairOffsetX;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float stairOffsetY;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int step;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int stepBefore;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int stepAfter;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E9820", Offset = "0x9E9820")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9820", Offset = "0x9E9820")]
		public float speed;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool stopped;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool reversed;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E9874", Offset = "0x9E9874")]
		public bool disableCollider;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool disableMesh;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] destPoints;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float stairSpacing;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stair[] allStair;

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xC51C3C", Offset = "0xC51C3C", VA = "0xC51C3C")]
		public Vector3 GetTargetPointFromDestination(Destination dest)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xC51C98", Offset = "0xC51C98", VA = "0xC51C98")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xC51CF4", Offset = "0xC51CF4", VA = "0xC51CF4")]
		private void UpdateConnectedStair()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xC51F2C", Offset = "0xC51F2C", VA = "0xC51F2C")]
		public void SetReversed(bool reversed)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xC52004", Offset = "0xC52004", VA = "0xC52004")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xC52048", Offset = "0xC52048", VA = "0xC52048")]
		public EscalatorPro()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class Stair : UnityEngine.MonoBehaviour
	{
		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody body;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Stair connectedStair;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public EscalatorPro.Destination nextDestination;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EscalatorPro escalator;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer mesh;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider col;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 targetPos;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xC520D4", Offset = "0xC520D4", VA = "0xC520D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xC52224", Offset = "0xC52224", VA = "0xC52224")]
		private void HandleVisibility()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xC52548", Offset = "0xC52548", VA = "0xC52548")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xC521D8", Offset = "0xC521D8", VA = "0xC521D8")]
		private void BeginTween()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xC51FE8", Offset = "0xC51FE8", VA = "0xC51FE8")]
		public void ReverseDirection()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xC52818", Offset = "0xC52818", VA = "0xC52818")]
		public Stair()
		{
		}
	}
}
namespace Categories.Space.Sun
{
	[Token(Token = "0x20002CF")]
	internal class AnimateSunTexture : BaseMonoBehaviour
	{
		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E3A24", Offset = "0x9E3A24")]
		private sealed class <UpdateTiling>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimateSunTexture <>4__this;

			[Token(Token = "0x170004A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD7")]
				[Address(RVA = "0xCFBAF0", Offset = "0xCFBAF0", VA = "0xCFBAF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD9")]
				[Address(RVA = "0xCFBB60", Offset = "0xCFBB60", VA = "0xCFBB60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xCFB8D0", Offset = "0xCFB8D0", VA = "0xCFB8D0")]
			[DebuggerHidden]
			public <UpdateTiling>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xCFB918", Offset = "0xCFB918", VA = "0xCFB918", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xCFB91C", Offset = "0xCFB91C", VA = "0xCFB91C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0xCFBAF8", Offset = "0xCFBAF8", VA = "0xCFBAF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int _columns;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int _rows;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _rotationSpeed;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _framesPerSecond;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int index;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine _routineUpdateTilling;

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xCFB65C", Offset = "0xCFB65C", VA = "0xCFB65C", Slot = "10")]
		protected override void EnableComponent()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xCFB7CC", Offset = "0xCFB7CC", VA = "0xCFB7CC", Slot = "14")]
		protected override void UpdateComponent()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xCFB8A0", Offset = "0xCFB8A0", VA = "0xCFB8A0", Slot = "15")]
		protected override void DisableComponent()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xCFB758", Offset = "0xCFB758", VA = "0xCFB758")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1938", Offset = "0x9F1938")]
		private IEnumerator UpdateTiling()
		{
			return null;
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xCFB8FC", Offset = "0xCFB8FC", VA = "0xCFB8FC")]
		public AnimateSunTexture()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class SunFlares : BaseMonoBehaviour
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _currentScale;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _glow;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _flares;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _flaresBig;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _saturationOld;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _contrastOld;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _brightnessOld;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _edgeBrightnessOld;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _hueOld;

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xCFBB68", Offset = "0xCFBB68", VA = "0xCFBB68", Slot = "11")]
		protected override void AwakeComponent()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xCFBDF8", Offset = "0xCFBDF8", VA = "0xCFBDF8")]
		public SunFlares()
		{
		}
	}
}
