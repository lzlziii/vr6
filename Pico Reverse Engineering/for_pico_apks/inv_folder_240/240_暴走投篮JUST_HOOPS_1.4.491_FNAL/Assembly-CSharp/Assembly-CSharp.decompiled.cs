using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net.Http;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using Dissonance;
using Dissonance.Integrations.MirrorIgnorance;
using Febucci.UI;
using Il2CppDummyDll;
using Mirror;
using Pico.Platform;
using Pico.Platform.Models;
using PlayFab;
using PlayFab.ClientModels;
using PlayFab.Multiplayer;
using ReadyPlayerMe;
using Realcast.Toolkit.Avatars;
using Realcast.Toolkit.Core;
using Realcast.Toolkit.MixedReality;
using Realcast.Toolkit.Motion;
using Realcast.Toolkit.Network;
using Realcast.Toolkit.Story;
using RealisticEyeMovements;
using Smooth;
using TMPro;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.VFX;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class BounceScroll : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _offset;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _timeScroll;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _timeZoom;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material mat;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedScroll;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedZoom;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 coefScroll;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float coefZoom;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1146870", Offset = "0x1146870", VA = "0x1146870")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x11468C0", Offset = "0x11468C0", VA = "0x11468C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x11469E4", Offset = "0x11469E4", VA = "0x11469E4")]
	public BounceScroll()
	{
	}
}
[Token(Token = "0x2000003")]
public class rcCRTParams : ScriptableObject
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fGamma;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fBrightThresold;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fBrightness;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fBloomFactor;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fRadialDist;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1146A08", Offset = "0x1146A08", VA = "0x1146A08")]
	public rcCRTParams()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteAlways]
public class rcCRTRender : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	private struct RenderTargetInfo
	{
		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int w;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int h;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int iUsage;
	}

	[Token(Token = "0x2000006")]
	private struct OtherParams
	{
		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int BackBufferWidth;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int BackBufferHeight;
	}

	[Token(Token = "0x2000007")]
	private enum ERenderTarget
	{
		[Token(Token = "0x400003E")]
		ATARI_SCREEN,
		[Token(Token = "0x400003F")]
		BUFFER_A,
		[Token(Token = "0x4000040")]
		BUFFER_B,
		[Token(Token = "0x4000041")]
		FINAL_SCREEN,
		[Token(Token = "0x4000042")]
		PHOSPHORE_MASK,
		[Token(Token = "0x4000043")]
		RENDER_TARGET_MAX
	}

	[Token(Token = "0x2000008")]
	private enum EShaders
	{
		[Token(Token = "0x4000045")]
		DOWNSCALE_BRIGHT,
		[Token(Token = "0x4000046")]
		GAUSSIAN_BLUR,
		[Token(Token = "0x4000047")]
		CRT_EMUL,
		[Token(Token = "0x4000048")]
		RADIAL_DIST,
		[Token(Token = "0x4000049")]
		SHADER_MAX
	}

	[Token(Token = "0x2000009")]
	private struct TLVERTEXUV3
	{
		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float tu;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float tv;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float tu2;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float tv2;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float tu3;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float tv3;
	}

	[Token(Token = "0x200000A")]
	private enum RenderState
	{
		[Token(Token = "0x4000054")]
		off,
		[Token(Token = "0x4000055")]
		renderCamera,
		[Token(Token = "0x4000056")]
		renderScreen
	}

	[Token(Token = "0x200000B")]
	private class FColor
	{
		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_r;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_g;

		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_b;

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x114701C", Offset = "0x114701C", VA = "0x114701C")]
		public FColor(float r, float g, float b)
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x11470F0", Offset = "0x11470F0", VA = "0x11470F0")]
		public void Scale(float fRatio)
		{
		}

		[Token(Token = "0x6000012")]
		[Address(RVA = "0x1147058", Offset = "0x1147058", VA = "0x1147058")]
		public uint AsInt()
		{
			return default(uint);
		}
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcCRTParams renderingParams;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int internalResolutionW;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int internalResolutionH;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fGaussianMultiplier;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fFrameRateWhenOccluded;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int g_iGameHostWidth;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture[] g_pRenderTargets;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader[] g_pPixelShaders;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTargetInfo[] s_oTargetDesc;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector4[] s_uvNeighboor;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4[] s_GaussianOffsetH;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector4[] s_GaussianOffsetV;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private uint[] s_iGammaPal;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TLVERTEXUV3[] _pVertex;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OtherParams g_oPresentParams;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly int PROP_SHADER_TEXTURE_S0;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private readonly int PROP_SHADER_TEXTURE_S1;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly int PROP_SHADER_TEXTURE_S2;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private readonly int PROP_SHADER_VECT_CRTPARAMS;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly int PROP_SHADER_VECT_SOURCERES;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private readonly int PROP_SHADER_VECTARRAY_UVOFFSETBRIGHT;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly int PROP_SHADER_VECTARRAY_GAUSSOFFSET;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RenderState _renderState;

	[Token(Token = "0x4000025")]
	private const float PHOSPHORE_LOW = 0.6f;

	[Token(Token = "0x4000026")]
	private const float PHOSPHORE_MASK_SCALE = 0.8f;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RenderTexture backbuffer;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Camera source;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject cameraPositions;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float cameraPositionDelay;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool cameraPositionsRandom;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _cameraPositionTime;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int _cameraPositionIndex;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform[] _cameraPositions;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public RenderTexture destination;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Material _material;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Renderer _renderer;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Mesh m;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Rect _rect;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector4 _radial;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector4 _crtParams;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector4 _crtInternalRes;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float _lastTimeRendered;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1146A30", Offset = "0x1146A30", VA = "0x1146A30")]
	private void CreateRenderTargetsAndShaders()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1146D2C", Offset = "0x1146D2C", VA = "0x1146D2C")]
	private void CreatePhosphoreMask()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x114710C", Offset = "0x114710C", VA = "0x114710C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1147A88", Offset = "0x1147A88", VA = "0x1147A88")]
	private void setupGaussian(float invInternalResW, float invInternalResH)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1147BA4", Offset = "0x1147BA4", VA = "0x1147BA4")]
	private void downSampleAndSaturate()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1147D40", Offset = "0x1147D40", VA = "0x1147D40")]
	private void GaussianBlur()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1147EF8", Offset = "0x1147EF8", VA = "0x1147EF8")]
	private void DrawFinalPass()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x11483DC", Offset = "0x11483DC", VA = "0x11483DC")]
	private void DrawRadialDist()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x11484D4", Offset = "0x11484D4", VA = "0x11484D4")]
	private void wiWillRenderObject()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x11485CC", Offset = "0x11485CC", VA = "0x11485CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x11487B8", Offset = "0x11487B8", VA = "0x11487B8")]
	public rcCRTRender()
	{
	}
}
[Token(Token = "0x200000C")]
public class GBADebugMenuInit : rcFSM
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcSceneManager _sm;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _textZOffset;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1148F40", Offset = "0x1148F40", VA = "0x1148F40", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x11491A4", Offset = "0x11491A4", VA = "0x11491A4", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x11492B0", Offset = "0x11492B0", VA = "0x11492B0")]
	private float interp(float curr, float inRngStart, float inRngEnd, float outRngStart, float outRngEnd)
	{
		return default(float);
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x11492CC", Offset = "0x11492CC", VA = "0x11492CC", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x11496F8", Offset = "0x11496F8", VA = "0x11496F8")]
	public GBADebugMenuInit()
	{
	}
}
[Token(Token = "0x200000D")]
public class rcPhyHandsTweakerControlTool : rcFSM
{
	[Token(Token = "0x200000E")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x4000065")]
		BACK,
		[Token(Token = "0x4000066")]
		CONTROL_TOOL,
		[Token(Token = "0x4000067")]
		COUNT
	}

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _highColor;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _baseColor;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _validColor;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _bControl;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1149700", Offset = "0x1149700", VA = "0x1149700", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x11497D8", Offset = "0x11497D8", VA = "0x11497D8", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x11497DC", Offset = "0x11497DC", VA = "0x11497DC", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1149EBC", Offset = "0x1149EBC", VA = "0x1149EBC")]
	public rcPhyHandsTweakerControlTool()
	{
	}
}
[Token(Token = "0x200000F")]
public class rcPhyHandsTweakerMagnet : rcFSM
{
	[Token(Token = "0x2000010")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x4000071")]
		BACK,
		[Token(Token = "0x4000072")]
		FORCE_SCALER,
		[Token(Token = "0x4000073")]
		FORCE_MODE,
		[Token(Token = "0x4000074")]
		MAGNET_LENGTH,
		[Token(Token = "0x4000075")]
		MAGNET_CONE,
		[Token(Token = "0x4000076")]
		GRAB_TYPE_TOGGLE,
		[Token(Token = "0x4000077")]
		GRAB_END_DELAY,
		[Token(Token = "0x4000078")]
		MAGNET_TOGGLE,
		[Token(Token = "0x4000079")]
		FRICTION_CHANGE_TOGGLE,
		[Token(Token = "0x400007A")]
		FRICTION_COOLDOWN_DELAY,
		[Token(Token = "0x400007B")]
		COUNT
	}

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _highColor;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _baseColor;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _validColor;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MENU_ITEMS _items;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BasketBall2HandMagnet _magnet;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x114A06C", Offset = "0x114A06C", VA = "0x114A06C", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x114A1C8", Offset = "0x114A1C8", VA = "0x114A1C8", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x114A1CC", Offset = "0x114A1CC", VA = "0x114A1CC")]
	private void getValWithTriggers(ref float value, float min, float max, float step = 0.01f)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x114A210", Offset = "0x114A210", VA = "0x114A210", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x114AC34", Offset = "0x114AC34", VA = "0x114AC34")]
	public rcPhyHandsTweakerMagnet()
	{
	}
}
[Token(Token = "0x2000011")]
public class rcPhyHandsTweakerMain : rcFSM
{
	[Token(Token = "0x2000012")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x4000084")]
		ASW_TOGGLE,
		[Token(Token = "0x4000085")]
		PASSTHROUGH_COLOR,
		[Token(Token = "0x4000086")]
		PHT_MAGNET,
		[Token(Token = "0x4000087")]
		PHT_MATERIAL,
		[Token(Token = "0x4000088")]
		DISPLAYFPS,
		[Token(Token = "0x4000089")]
		DISPLAYLOG,
		[Token(Token = "0x400008A")]
		DISPLAYXRINPUTSDBG,
		[Token(Token = "0x400008B")]
		CONTROL_TOOL,
		[Token(Token = "0x400008C")]
		QUIT,
		[Token(Token = "0x400008D")]
		COUNT
	}

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _lastPreset;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _highColor;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _baseColor;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _validColor;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x114ACDC", Offset = "0x114ACDC", VA = "0x114ACDC", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x114AE00", Offset = "0x114AE00", VA = "0x114AE00", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x114AE6C", Offset = "0x114AE6C", VA = "0x114AE6C", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x114B3B0", Offset = "0x114B3B0", VA = "0x114B3B0")]
	public rcPhyHandsTweakerMain()
	{
	}
}
[Token(Token = "0x2000013")]
public class rcPhyHandsTweakerMaterials : rcFSM
{
	[Token(Token = "0x2000014")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x400009C")]
		BACK,
		[Token(Token = "0x400009D")]
		COUNT
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _highColor;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _baseColor;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _validColor;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private uint _backupCurItem;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider[] _colliders;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<PhysicMaterial> _phyMaterials;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PhysicMaterial _currentEditingMaterial;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _editInProgress;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _staticDynamicDiff;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x114B7B8", Offset = "0x114B7B8", VA = "0x114B7B8", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x114BA74", Offset = "0x114BA74", VA = "0x114BA74", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x114BAA0", Offset = "0x114BAA0", VA = "0x114BAA0", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x114CB10", Offset = "0x114CB10", VA = "0x114CB10")]
	public rcPhyHandsTweakerMaterials()
	{
	}
}
[Token(Token = "0x2000015")]
public class rcPhyHandsTweakerPassthrough : rcFSM
{
	[Token(Token = "0x2000016")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x40000A7")]
		BACK,
		[Token(Token = "0x40000A8")]
		PASSTHROUGH,
		[Token(Token = "0x40000A9")]
		COUNT
	}

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private rcPlatformManager _pf;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _highColor;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _baseColor;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _validColor;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MENU_ITEMS _items;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x114CC48", Offset = "0x114CC48", VA = "0x114CC48", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x114CD74", Offset = "0x114CD74", VA = "0x114CD74", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x114CD78", Offset = "0x114CD78", VA = "0x114CD78", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x114D0DC", Offset = "0x114D0DC", VA = "0x114D0DC")]
	private bool getValWithTriggers(ref float value, float min, float max, float step = 0.01f)
	{
		return default(bool);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x114D128", Offset = "0x114D128", VA = "0x114D128")]
	private bool getValWithLeftStickX(ref float value, float min, float max, float step = 0.01f)
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x114D174", Offset = "0x114D174", VA = "0x114D174")]
	private bool getValWithLeftStickY(ref float value, float min, float max, float step = 0.01f)
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x114D1C0", Offset = "0x114D1C0", VA = "0x114D1C0")]
	private bool getValWithRightStickX(ref float value, float min, float max, float step = 0.01f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x114D20C", Offset = "0x114D20C", VA = "0x114D20C")]
	private bool getValWithRightStickY(ref float value, float min, float max, float step = 0.01f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x114D258", Offset = "0x114D258", VA = "0x114D258")]
	public rcPhyHandsTweakerPassthrough()
	{
	}
}
[Token(Token = "0x2000017")]
public class rcPhyHandsTweakerPhysicEngine : rcFSM
{
	[Token(Token = "0x2000018")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x40000B2")]
		BACK,
		[Token(Token = "0x40000B3")]
		AMB_INTENSITY,
		[Token(Token = "0x40000B4")]
		ITEM_2,
		[Token(Token = "0x40000B5")]
		COUNT
	}

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _highColor;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _baseColor;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _validColor;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x114D300", Offset = "0x114D300", VA = "0x114D300", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x114D3D8", Offset = "0x114D3D8", VA = "0x114D3D8", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x114D3DC", Offset = "0x114D3DC", VA = "0x114D3DC", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x114DA0C", Offset = "0x114DA0C", VA = "0x114DA0C")]
	public rcPhyHandsTweakerPhysicEngine()
	{
	}
}
[Token(Token = "0x2000019")]
public class rcPhyHandsTweakerSubTemplate : rcFSM
{
	[Token(Token = "0x200001A")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x40000BE")]
		BACK,
		[Token(Token = "0x40000BF")]
		AMB_INTENSITY,
		[Token(Token = "0x40000C0")]
		ITEM_2,
		[Token(Token = "0x40000C1")]
		COUNT
	}

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _highColor;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _baseColor;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _validColor;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x114DC18", Offset = "0x114DC18", VA = "0x114DC18", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x114DCF0", Offset = "0x114DCF0", VA = "0x114DCF0", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x114DCF4", Offset = "0x114DCF4", VA = "0x114DCF4", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x114E324", Offset = "0x114E324", VA = "0x114E324")]
	public rcPhyHandsTweakerSubTemplate()
	{
	}
}
[Token(Token = "0x200001B")]
[ExecuteInEditMode]
public class ScreenShotRenderer : MonoBehaviour
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _mainPath;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(1f, 10f)]
	public int ResolutionScale;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x114E530", Offset = "0x114E530", VA = "0x114E530")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x114E590", Offset = "0x114E590", VA = "0x114E590")]
	[ContextMenu("Take A Screenshot")]
	public void TakeAScreenshot()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x114E678", Offset = "0x114E678", VA = "0x114E678")]
	private void Capture(string name)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x114E70C", Offset = "0x114E70C", VA = "0x114E70C")]
	[ContextMenu("Open Folder")]
	private void OpenFolder()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x114E780", Offset = "0x114E780", VA = "0x114E780")]
	public ScreenShotRenderer()
	{
	}
}
[Token(Token = "0x200001C")]
public abstract class AnalyticsProvider
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private StringBuilder _logBuilder;

	[Token(Token = "0x17000001")]
	public abstract bool Enabled
	{
		[Token(Token = "0x600003F")]
		get;
		[Token(Token = "0x6000040")]
		set;
	}

	[Token(Token = "0x6000041")]
	public abstract void SendEvent(string eventName, Dictionary<string, object> eventData);

	[Token(Token = "0x6000042")]
	[Conditional("RC_ENABLE_LOGS")]
	protected void LogResult<T>(T result, string eventName, [Optional] Dictionary<string, object> eventData)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x114E790", Offset = "0x114E790", VA = "0x114E790")]
	protected AnalyticsProvider()
	{
	}
}
[Token(Token = "0x200001E")]
public class ChallengeAnalytics : MonoBehaviour
{
	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _usingController;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcStringGameParameter _campaignGroupName;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcStringGameParameter _campaignName;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _challengeIsPlaying;

	[Token(Token = "0x17000002")]
	private bool ChallengeWillUnlockContent
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x114E804", Offset = "0x114E804", VA = "0x114E804")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x114E8AC", Offset = "0x114E8AC", VA = "0x114E8AC")]
	public void ChallengeStart()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x114E8B8", Offset = "0x114E8B8", VA = "0x114E8B8")]
	public void ChallengeQuit()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x114EB34", Offset = "0x114EB34", VA = "0x114EB34")]
	public void ChallengeComplete()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x114F2C4", Offset = "0x114F2C4", VA = "0x114F2C4")]
	public ChallengeAnalytics()
	{
	}
}
[Token(Token = "0x200001F")]
public class EditorAnalytics : AnalyticsProvider
{
	[Token(Token = "0x17000003")]
	public override bool Enabled
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x114F2CC", Offset = "0x114F2CC", VA = "0x114F2CC", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x114F2D4", Offset = "0x114F2D4", VA = "0x114F2D4", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x114F2E0", Offset = "0x114F2E0", VA = "0x114F2E0", Slot = "6")]
	public override void SendEvent(string eventName, Dictionary<string, object> eventData)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x114F2E4", Offset = "0x114F2E4", VA = "0x114F2E4")]
	public EditorAnalytics()
	{
	}
}
[Token(Token = "0x2000020")]
public class GameSessionAnalytics : MonoBehaviour
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _useControllers;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _entitlementCheck;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcIntGameParameter _totalSessionPlayedGames;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcIntGameParameter _totalSessionScores;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcIntGameParameter _totalSessionSpawnedBalls;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TimeTracking _timeTracking;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _useRoomScale;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _roomScaleSize;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x114F2F0", Offset = "0x114F2F0", VA = "0x114F2F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x114F2FC", Offset = "0x114F2FC", VA = "0x114F2FC")]
	private void updateRoomScaleStats()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x114F308", Offset = "0x114F308", VA = "0x114F308")]
	private string getCurrentPlatform()
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x114F44C", Offset = "0x114F44C", VA = "0x114F44C")]
	private void sendSessionAnalytics()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x114FC24", Offset = "0x114FC24", VA = "0x114FC24")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x114FC30", Offset = "0x114FC30", VA = "0x114FC30")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x114FC34", Offset = "0x114FC34", VA = "0x114FC34")]
	public GameSessionAnalytics()
	{
	}
}
[Token(Token = "0x2000021")]
public class GBAAnalytics : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	public struct ChallengeCompleteAnalytics
	{
		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int FinalScore;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int BestCombo;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float GoalRatio;
	}

	[Token(Token = "0x2000023")]
	public struct LevelAnalytics
	{
		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ScoredHoops;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int SpawnedBalls;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int DurationSeconds;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int PlayerHeight;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int AntiCheatActivations;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int EarnedStars;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GoalRatio;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CampaignName;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string CampaignGroupName;
	}

	[Token(Token = "0x2000024")]
	public struct SessionAnalytics
	{
		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool UseHandTracking;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Platform;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool EntitlementCheck;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool UseRoomScale;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float RoomscaleSize;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TimeSpentInMenuSeconds;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Completion1Star;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Completion2Star;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Completion3Star;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int TotalScores;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int TotalSpawnedBalls;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int PlayedGames;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int ActiveTimeSeconds;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int TotalPlayTimeSeconds;
	}

	[Token(Token = "0x2000025")]
	public struct ProgressionAnalytics
	{
		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int UnlockedLevels;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Level1Star;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Level2Star;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Level3Star;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int LevelCount;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CampaignName;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CampaignGroupName;
	}

	[Token(Token = "0x2000026")]
	public struct OnlineMatchmakingPlayerFoundAnalytics
	{
		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OpponentID;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SearchDuration;
	}

	[Token(Token = "0x2000027")]
	public struct OnlineMatchmakingStopAnalytics
	{
		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string StopType;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Duration;
	}

	[Token(Token = "0x2000028")]
	public struct Online1v1LobbyEnterAnalytics
	{
		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string LobbyID;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string HostID;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ClientID;
	}

	[Token(Token = "0x2000029")]
	public struct Online1v1LobbyPlayAgainAnalytics
	{
		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string LobbyID;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string HostID;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ClientID;
	}

	[Token(Token = "0x200002A")]
	public struct Online1v1LobbyExitAnalytics
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string LobbyID;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string HostID;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ClientID;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ExitType;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Duration;
	}

	[Token(Token = "0x200002B")]
	public struct Online1v1MatchStartAnalytics
	{
		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Challenge1;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Challenge2;
	}

	[Token(Token = "0x200002C")]
	public struct Online1v1MatchEndAnalytics
	{
		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Duration;
	}

	[Token(Token = "0x200002D")]
	public struct Online1v1MatchStopAnalytics
	{
		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ExitType;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Duration;
	}

	[Token(Token = "0x200002E")]
	public struct OnlinePrivateRoomCreateAnalytics
	{
		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string HostID;
	}

	[Token(Token = "0x200002F")]
	public struct OnlinePrivateRoomJoinAnalytics
	{
		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string HostID;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Client1ID;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Client2ID;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Client3ID;
	}

	[Token(Token = "0x2000030")]
	public struct OnlinePrivateRoomDeleteAnalytics
	{
		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ExitType;
	}

	[Token(Token = "0x2000031")]
	public struct OnlinePrivateRoomMatchStartAnalytics
	{
		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Challenge;
	}

	[Token(Token = "0x2000032")]
	public struct OnlinePrivateRoomMatchEndAnalytics
	{
		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Duration;
	}

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, object> _levelStats;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<string, object> _sessionStats;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<string, object> _sessionStatsPart2;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Dictionary<string, object> _challengeComplete;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly Dictionary<string, object> _challengeQuit;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly Dictionary<string, object> _progression;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Dictionary<string, object> _passthrough;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly Dictionary<string, object> _onlineMatchmakingStart;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly Dictionary<string, object> _onlineMatchmakingPlayerFound;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Dictionary<string, object> _onlineMatchmakingStop;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly Dictionary<string, object> _online1v1LobbyPlayAgain;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<string, object> _online1v1LobbyEnter;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<string, object> _online1v1LobbyExit;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static readonly Dictionary<string, object> _online1v1MatchStart;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Dictionary<string, object> _online1v1MatchEnd;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static readonly Dictionary<string, object> _online1v1MatchStop;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Dictionary<string, object> _onlinePrivateRoomCreate;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static readonly Dictionary<string, object> _onlinePrivateRoomJoin;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Dictionary<string, object> _onlinePrivateRoomDelete;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static readonly Dictionary<string, object> _onlinePrivateRoomMatchStart;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Dictionary<string, object> _onlinePrivateRoomMatchEnd;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static readonly string VersionPrefix;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static readonly string LevelPrefix;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static readonly string ChallengePrefix;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static readonly string ControllerPrefix;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private static readonly string HandTrackingPrefix;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private static readonly string LevelFailEvent;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private static readonly string LevelCompleteEvent;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private static readonly string ChallengeQuitEvent;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private static readonly string ChallengeCompleteEvent;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private static readonly string SessionStatisticsEvent;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private static readonly string ProgressionEvent;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private static readonly string PassthroughUsageEvent;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static readonly string ButtonClickEvent;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private static readonly string OnlineMatchmakingEvent;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private static readonly string Online1v1MatchEvent;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private static readonly string Online1v1LobbyEvent;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private static readonly string OnlinePrivateRoomEvent;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private static readonly string OnlinePrivateRoomMatchEvent;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private static AnalyticsProvider _analytics;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private static Transform _centerEyeAnchor;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x114FC3C", Offset = "0x114FC3C", VA = "0x114FC3C")]
	public static int GetPlayerHeight()
	{
		return default(int);
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x114FD60", Offset = "0x114FD60", VA = "0x114FD60")]
	public static void LevelFail(LevelSettings levelId, LevelAnalytics stats, bool usingControllers)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x11501A0", Offset = "0x11501A0", VA = "0x11501A0")]
	public static void LevelComplete(LevelSettings levelId, LevelAnalytics stats, bool usingControllers)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x114EA00", Offset = "0x114EA00", VA = "0x114EA00")]
	public static void ChallengeQuit(string challengeName, LevelSettings quittedLevelId, bool usingControllers)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x114EE20", Offset = "0x114EE20", VA = "0x114EE20")]
	public static void ChallengeComplete(string challengeName, ChallengeCompleteAnalytics stats, bool usingControllers)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x114F030", Offset = "0x114F030", VA = "0x114F030")]
	public static void Progression(ProgressionAnalytics progression, bool usingControllers)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x115025C", Offset = "0x115025C", VA = "0x115025C")]
	public static void ReportPassthroughUsage(float passthroughRatio)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x11503FC", Offset = "0x11503FC", VA = "0x11503FC")]
	public static int ComputeGoalRatio(int scoredHoops, int failedShotsCount)
	{
		return default(int);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x114FE1C", Offset = "0x114FE1C", VA = "0x114FE1C")]
	private static void PrepareLevelStatsDictionary(ref LevelAnalytics stats, Dictionary<string, object> levelStats)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x114F690", Offset = "0x114F690", VA = "0x114F690")]
	public static void SessionStats(SessionAnalytics stats)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1150440", Offset = "0x1150440", VA = "0x1150440")]
	public static void OnlineMenuButtonClickOnline()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x11504BC", Offset = "0x11504BC", VA = "0x11504BC")]
	public static void OnlineMenuButtonClick1v1()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1150538", Offset = "0x1150538", VA = "0x1150538")]
	public static void OnlineMenuButtonClickCreateRoom()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x11505B4", Offset = "0x11505B4", VA = "0x11505B4")]
	public static void OnlineMenuButtonClickJoinRoom()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1150630", Offset = "0x1150630", VA = "0x1150630")]
	public static void OnlineMenuButtonClickPlayAgain(bool playAgain)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1150694", Offset = "0x1150694", VA = "0x1150694")]
	public static void OnlineMenuButtonClickPlayAgainYes()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1150710", Offset = "0x1150710", VA = "0x1150710")]
	public static void OnlineMenuButtonClickPlayAgainNo()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x115078C", Offset = "0x115078C", VA = "0x115078C")]
	public static void OnlineMatchmakingStartStats(string matchmakingType)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1150860", Offset = "0x1150860", VA = "0x1150860")]
	public static void OnlineMatchmakingPlayerFoundStats(OnlineMatchmakingPlayerFoundAnalytics stats)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x11509A8", Offset = "0x11509A8", VA = "0x11509A8")]
	public static void OnlineMatchmakingStopStats(OnlineMatchmakingStopAnalytics stats)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1150AF0", Offset = "0x1150AF0", VA = "0x1150AF0")]
	public static void Online1v1LobbyPlayAgainStats(Online1v1LobbyPlayAgainAnalytics stats)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1150C2C", Offset = "0x1150C2C", VA = "0x1150C2C")]
	public static void Online1v1LobbyEnterStats(Online1v1LobbyEnterAnalytics stats)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1150D68", Offset = "0x1150D68", VA = "0x1150D68")]
	public static void Online1v1LobbyExitStats(Online1v1LobbyExitAnalytics stats)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1150F44", Offset = "0x1150F44", VA = "0x1150F44")]
	public static void Online1v1MatchStartStats(Online1v1MatchStartAnalytics stats)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1151058", Offset = "0x1151058", VA = "0x1151058")]
	public static void Online1v1MatchEndStats(Online1v1MatchEndAnalytics stats)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1151160", Offset = "0x1151160", VA = "0x1151160")]
	public static void Online1v1MatchStopStats(Online1v1MatchStopAnalytics stats)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x11512A8", Offset = "0x11512A8", VA = "0x11512A8")]
	public static void OnlinePrivateRoomCreateStats(OnlinePrivateRoomCreateAnalytics stats)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x115137C", Offset = "0x115137C", VA = "0x115137C")]
	public static void OnlinePrivateRoomJoinStats(OnlinePrivateRoomJoinAnalytics stats)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x11514EC", Offset = "0x11514EC", VA = "0x11514EC")]
	public static void OnlinePrivateRoomMatchStartStats(OnlinePrivateRoomMatchStartAnalytics stats)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x11515C0", Offset = "0x11515C0", VA = "0x11515C0")]
	public static void OnlinePrivateRoomMatchEndStats(OnlinePrivateRoomMatchEndAnalytics stats)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x11516C8", Offset = "0x11516C8", VA = "0x11516C8")]
	public static void OnlinePrivateRoomDeleteStats(OnlinePrivateRoomDeleteAnalytics stats)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1150098", Offset = "0x1150098", VA = "0x1150098")]
	private static void SendCustomEvent(string eventName, bool usingControllers, [Optional] Dictionary<string, object> eventData)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x115033C", Offset = "0x115033C", VA = "0x115033C")]
	private static void SendCustomEvent(string eventName, [Optional] Dictionary<string, object> eventData)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x115179C", Offset = "0x115179C", VA = "0x115179C")]
	public GBAAnalytics()
	{
	}
}
[Token(Token = "0x2000033")]
public class LevelAnalytics : rcSingleton<LevelAnalytics>
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GBAEventsListenerBehaviour _eventListener;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcIntGameParameter _antiCheatActivations;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcIntGameParameter _spawnedBalls;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcIntGameParameter _scoredHoops;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcIntGameParameter _shotsFailedCount;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private rcStringGameParameter _campaignName;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcStringGameParameter _campaignGroupName;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcBoolGameParameter _usingController;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _playerHeight;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x1152060", Offset = "0x1152060", VA = "0x1152060")]
	private void Start()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1152160", Offset = "0x1152160", VA = "0x1152160")]
	private void OnUserStart()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x11521B8", Offset = "0x11521B8", VA = "0x11521B8")]
	private void OnLevelEnd()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1152660", Offset = "0x1152660", VA = "0x1152660")]
	public LevelAnalytics()
	{
	}
}
[Token(Token = "0x2000034")]
public class OnlineAnalytics : rcSingleton<OnlineAnalytics>
{
	[Token(Token = "0x2000035")]
	public struct MatchmakingInfo
	{
		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool SearchStarted;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool BackgroundSearch;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string OpponentFound;
	}

	[Token(Token = "0x2000036")]
	public struct LobbyInfo
	{
		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string LobbyID;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string HostID;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ClientID;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Duration;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ExitType;
	}

	[Token(Token = "0x2000037")]
	public struct RoomInfo
	{
		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string HostID;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] ClientsID;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Challenge;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float StartMatchTime;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float EndMatchTime;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ExitType;
	}

	[Token(Token = "0x2000038")]
	[CompilerGenerated]
	private sealed class <onRoomCreatedDelayed>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnlineAnalytics <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A3")]
			[Address(RVA = "0x1155C70", Offset = "0x1155C70", VA = "0x1155C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A5")]
			[Address(RVA = "0x1155CB8", Offset = "0x1155CB8", VA = "0x1155CB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x1152B40", Offset = "0x1152B40", VA = "0x1152B40")]
		[DebuggerHidden]
		public <onRoomCreatedDelayed>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x1155B8C", Offset = "0x1155B8C", VA = "0x1155B8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x1155B90", Offset = "0x1155B90", VA = "0x1155B90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x1155C78", Offset = "0x1155C78", VA = "0x1155C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000039")]
	[CompilerGenerated]
	private sealed class <onRoomJoinedDeleyed>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnlineAnalytics <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A9")]
			[Address(RVA = "0x1155F60", Offset = "0x1155F60", VA = "0x1155F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000AB")]
			[Address(RVA = "0x1155FA8", Offset = "0x1155FA8", VA = "0x1155FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x1152C84", Offset = "0x1152C84", VA = "0x1152C84")]
		[DebuggerHidden]
		public <onRoomJoinedDeleyed>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x1155CC0", Offset = "0x1155CC0", VA = "0x1155CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x1155CC4", Offset = "0x1155CC4", VA = "0x1155CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x1155F68", Offset = "0x1155F68", VA = "0x1155F68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OnlineMatchFlow _onlineMatchFlow;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private OnlinePartyRoomFlow _onlinePartyRoomFlow;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ChallengePresetsSettings _challengeOnlinePresetsSettings;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayersManager _playersManager;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OnlineSelectChallenge _onlineSelectChallenge;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcIntGameParameter _onlineChallengeId;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private OnlineModeGameParameter _onlineMode;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MatchmakingInfo _matchmakingInfo;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LobbyInfo _lobbyInfo;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RoomInfo _roomInfo;

	[Token(Token = "0x17000004")]
	private bool isBackgroundMatchmaking
	{
		[Token(Token = "0x600007E")]
		[Address(RVA = "0x11526CC", Offset = "0x11526CC", VA = "0x11526CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x11527A4", Offset = "0x11527A4", VA = "0x11527A4")]
	private void OnBothPlayAgain()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x115286C", Offset = "0x115286C", VA = "0x115286C")]
	private void OnRoomCreated()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1152ABC", Offset = "0x1152ABC", VA = "0x1152ABC")]
	[IteratorStateMachine(typeof(<onRoomCreatedDelayed>d__20))]
	private IEnumerator onRoomCreatedDelayed(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1152B68", Offset = "0x1152B68", VA = "0x1152B68")]
	private void OnRoomJoined()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1152C00", Offset = "0x1152C00", VA = "0x1152C00")]
	[IteratorStateMachine(typeof(<onRoomJoinedDeleyed>d__22))]
	private IEnumerator onRoomJoinedDeleyed(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1152CAC", Offset = "0x1152CAC", VA = "0x1152CAC")]
	private void OnRoomMatchStarted()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1152DD4", Offset = "0x1152DD4", VA = "0x1152DD4")]
	private void OnRoomMatchEnded()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1152E80", Offset = "0x1152E80", VA = "0x1152E80")]
	private void OnRoomDeleted(int exitType)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1152F98", Offset = "0x1152F98", VA = "0x1152F98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1153F94", Offset = "0x1153F94", VA = "0x1153F94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x11539FC", Offset = "0x11539FC", VA = "0x11539FC")]
	private void initializeOnlineFeatures()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1153DCC", Offset = "0x1153DCC", VA = "0x1153DCC")]
	private void initializePlayersManager()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1153E30", Offset = "0x1153E30", VA = "0x1153E30")]
	private void initializeOnlineSelectChallenge()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1154B10", Offset = "0x1154B10", VA = "0x1154B10")]
	private void onMatchmakerStateUpdated()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1154CC8", Offset = "0x1154CC8", VA = "0x1154CC8")]
	private void onMatchmakerStartSearch()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1154DE0", Offset = "0x1154DE0", VA = "0x1154DE0")]
	private void getLobbyInfo()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1154D50", Offset = "0x1154D50", VA = "0x1154D50")]
	private void sendOnlineMatchmakingStartAnalytics(bool isBackgroundSearch)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1154F84", Offset = "0x1154F84", VA = "0x1154F84")]
	private void sendOnlineMatchmakingPlayerFoundAnalytics()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1154BE4", Offset = "0x1154BE4", VA = "0x1154BE4")]
	private void sendOnlineMatchmakingStopAnalytics()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1155360", Offset = "0x1155360", VA = "0x1155360")]
	private void sendLobbyEnterAnalytics()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1155494", Offset = "0x1155494", VA = "0x1155494")]
	private void sendLobbyExitAnalytics(OnlineMatchFlow.LeaveLobbyType leaveLobbyType)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x11555D4", Offset = "0x11555D4", VA = "0x11555D4")]
	private void sendOnline1v1MatchStartAnalytics()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x11557E0", Offset = "0x11557E0", VA = "0x11557E0")]
	private void sendOnline1v1MatchEndAnalytics()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1155864", Offset = "0x1155864", VA = "0x1155864")]
	private void sendOnline1v1MatchStopAnalytics(OnlineMatchFlow.MatchStopType stopType = OnlineMatchFlow.MatchStopType.ConnectionLost)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x11527A8", Offset = "0x11527A8", VA = "0x11527A8")]
	private void sendOnline1v1LobbyPlayAgainAnalytics()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1155948", Offset = "0x1155948", VA = "0x1155948")]
	private void sendOnlinePrivateRoomCreateAnalytics()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x11559BC", Offset = "0x11559BC", VA = "0x11559BC")]
	private void sendOnlinePrivateRoomJoinAnalytics()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1152D20", Offset = "0x1152D20", VA = "0x1152D20")]
	private void sendOnlinePrivateRoomStartMatchAnalytics()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1152E04", Offset = "0x1152E04", VA = "0x1152E04")]
	private void sendOnlinePrivateRoomEndMatchAnalytics()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1152E88", Offset = "0x1152E88", VA = "0x1152E88")]
	private void sendOnlinePrivateRoomDeleteAnalytics()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x115295C", Offset = "0x115295C", VA = "0x115295C")]
	private void ClearRoomInfoValues()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x11528AC", Offset = "0x11528AC", VA = "0x11528AC")]
	private bool IsLocalPlayerRoomHost()
	{
		return default(bool);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1155ABC", Offset = "0x1155ABC", VA = "0x1155ABC")]
	public OnlineAnalytics()
	{
	}
}
[Token(Token = "0x200003A")]
public class PlayerStatistics : MonoBehaviour
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcIntGameParameter _totalScore;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcIntGameParameter _totalScoredHoops;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcIntGameParameter _totalFailedHoops;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcIntGameParameter _scoreRatio;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcIntGameParameter _bestScore;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private rcIntGameParameter _bestCombo;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TimeTracking _timeTracking;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ComboDetection _comboDetection;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LeaderboardGameParameter _currentLeaderboardParameter;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _cachedStatsPath;

	[Token(Token = "0x17000009")]
	private string StatsPath
	{
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x1155FB0", Offset = "0x1155FB0", VA = "0x1155FB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x11560AC", Offset = "0x11560AC", VA = "0x11560AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1156820", Offset = "0x1156820", VA = "0x1156820")]
	private void OnLeaderboardChanged(Leaderboard to, Leaderboard from, object changedBy)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x115695C", Offset = "0x115695C", VA = "0x115695C")]
	private void OnLeaderboardDataUpdated()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1156CEC", Offset = "0x1156CEC", VA = "0x1156CEC")]
	private void OnScoreRatioChange(int to, int from, object changedBy)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1156A54", Offset = "0x1156A54", VA = "0x1156A54")]
	private void UpdateBestScore(IList<Leaderboard> leaderboards)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1156DB4", Offset = "0x1156DB4", VA = "0x1156DB4")]
	private void CheckBestCombo(int combo)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1156E1C", Offset = "0x1156E1C", VA = "0x1156E1C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x115730C", Offset = "0x115730C", VA = "0x115730C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x115628C", Offset = "0x115628C", VA = "0x115628C")]
	private void Load()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1156E20", Offset = "0x1156E20", VA = "0x1156E20")]
	private void Save()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1157318", Offset = "0x1157318", VA = "0x1157318")]
	public PlayerStatistics()
	{
	}
}
[Token(Token = "0x200003B")]
public class PlayerStatisticsDisplay : MonoBehaviour
{
	[Token(Token = "0x200003C")]
	[CompilerGenerated]
	private sealed class <UpdateTimeParameters>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerStatisticsDisplay <>4__this;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitOneSecond>5__2;

		[Token(Token = "0x1700000A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CF")]
			[Address(RVA = "0x1157EFC", Offset = "0x1157EFC", VA = "0x1157EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0x1157F44", Offset = "0x1157F44", VA = "0x1157F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x1157ADC", Offset = "0x1157ADC", VA = "0x1157ADC")]
		[DebuggerHidden]
		public <UpdateTimeParameters>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x1157E08", Offset = "0x1157E08", VA = "0x1157E08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x1157E0C", Offset = "0x1157E0C", VA = "0x1157E0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x1157F04", Offset = "0x1157F04", VA = "0x1157F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("UI Fields")]
	[SerializeField]
	private TextMeshProUGUI _timeInGame;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _playTime;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _totalScore;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI _totalHoop;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI _completion1Star;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI _completion2Star;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI _completion3Star;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI _scoreRatio;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI _bestScore;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI _bestCombo;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI _bestOnlineRank;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Header("Game Parameters fields")]
	private rcIntGameParameter _timeInGameParam;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcIntGameParameter _playTimeParam;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcIntGameParameter _totalScoreParam;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcIntGameParameter _totalHoopParam;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private rcIntGameParameter _scoreRatioParam;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private rcIntGameParameter _bestScoreParam;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private rcIntGameParameter _bestComboParam;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private rcIntGameParameter _bestOnlineRankParam;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private rcBoolGameParameter _usingControllers;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Localization")]
	[SerializeField]
	private rcLocalizedText _scoreLocalizedFormat;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Game Events")]
	[SerializeField]
	private GBAEventsListenerBehaviour _eventsListener;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1157320", Offset = "0x1157320", VA = "0x1157320")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x11577FC", Offset = "0x11577FC", VA = "0x11577FC")]
	private void OnInputMethodChanged(bool usingControllers, bool wasUsingControllers, UnityEngine.Object _)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x11576BC", Offset = "0x11576BC", VA = "0x11576BC")]
	private void InitializeBoard()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x1157648", Offset = "0x1157648", VA = "0x1157648")]
	[IteratorStateMachine(typeof(<UpdateTimeParameters>d__25))]
	private IEnumerator UpdateTimeParameters()
	{
		return null;
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1157B04", Offset = "0x1157B04", VA = "0x1157B04")]
	public void UpdateTimeInGame(int seconds)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1157BB8", Offset = "0x1157BB8", VA = "0x1157BB8")]
	public void UpdatePlayTime(int seconds)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1157800", Offset = "0x1157800", VA = "0x1157800")]
	public void UpdateTotalScore(int score, int _, object __)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1157830", Offset = "0x1157830", VA = "0x1157830")]
	public void UpdateTotalHoop(int hoops, int _, object __)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1157878", Offset = "0x1157878", VA = "0x1157878")]
	public void UpdateCompletion1Star(int completion)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x11578A8", Offset = "0x11578A8", VA = "0x11578A8")]
	public void UpdateCompletion2Star(int completion)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x11578D8", Offset = "0x11578D8", VA = "0x11578D8")]
	public void UpdateCompletion3Star(int completion)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1157908", Offset = "0x1157908", VA = "0x1157908")]
	public void UpdateScoreRatio(int ratio, int _, object __)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1157938", Offset = "0x1157938", VA = "0x1157938")]
	public void UpdateBestScore(int score, int _, object __)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1157968", Offset = "0x1157968", VA = "0x1157968")]
	public void UpdateBestCombo(int combo, int _, object __)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x11579F8", Offset = "0x11579F8", VA = "0x11579F8")]
	public void UpdateBestOnlineRank(int rank, int _, object __)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x1157BE8", Offset = "0x1157BE8", VA = "0x1157BE8")]
	private string UpdateFieldPoints(int points)
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1157CEC", Offset = "0x1157CEC", VA = "0x1157CEC")]
	private string UpdateFieldPercentage(int percentage)
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1157B34", Offset = "0x1157B34", VA = "0x1157B34")]
	private string UpdateTimeField(int seconds)
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1157D44", Offset = "0x1157D44", VA = "0x1157D44")]
	public PlayerStatisticsDisplay()
	{
	}
}
[Token(Token = "0x200003D")]
public class PlayFabAnalytics : AnalyticsProvider
{
	[Token(Token = "0x1700000C")]
	public override bool Enabled
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x1157F4C", Offset = "0x1157F4C", VA = "0x1157F4C", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x1157F54", Offset = "0x1157F54", VA = "0x1157F54", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1157F60", Offset = "0x1157F60", VA = "0x1157F60")]
	[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
	private static void DisableUnityAnalytics()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1157F6C", Offset = "0x1157F6C", VA = "0x1157F6C", Slot = "6")]
	public override void SendEvent(string eventName, Dictionary<string, object> eventData)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1152054", Offset = "0x1152054", VA = "0x1152054")]
	public PlayFabAnalytics()
	{
	}
}
[Token(Token = "0x200003F")]
public class Timer
{
	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _elapsedTime;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _startTime;

	[Token(Token = "0x1700000D")]
	public bool Running
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x115823C", Offset = "0x115823C", VA = "0x115823C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x1158244", Offset = "0x1158244", VA = "0x1158244")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float ElapsedTime
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1158250", Offset = "0x1158250", VA = "0x1158250")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x115828C", Offset = "0x115828C", VA = "0x115828C")]
	public Timer(float elapsedTime = 0f)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x11582BC", Offset = "0x11582BC", VA = "0x11582BC")]
	public void Initialize(float elapsedTime = 0f)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x11582CC", Offset = "0x11582CC", VA = "0x11582CC")]
	public void Start()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x11582F0", Offset = "0x11582F0", VA = "0x11582F0")]
	public void Stop()
	{
	}
}
[Token(Token = "0x2000040")]
public class TimeTracking : MonoBehaviour
{
	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GBAEventsListenerBehaviour _eventsListener;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer _menuRenderer;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcIntGameParameter _totalTimeInGame;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcIntGameParameter _totalPlayTime;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _menuWasVisible;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _isPlaying;

	[Token(Token = "0x1700000F")]
	public Timer SessionTime
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x1158328", Offset = "0x1158328", VA = "0x1158328")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x1158330", Offset = "0x1158330", VA = "0x1158330")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Timer SessionPlayTime
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1158338", Offset = "0x1158338", VA = "0x1158338")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1158340", Offset = "0x1158340", VA = "0x1158340")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public Timer SessionMenuTime
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x1158348", Offset = "0x1158348", VA = "0x1158348")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x1158350", Offset = "0x1158350", VA = "0x1158350")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public Timer TotalTime
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x1158358", Offset = "0x1158358", VA = "0x1158358")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x1158360", Offset = "0x1158360", VA = "0x1158360")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Timer TotalPlayTime
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x1158368", Offset = "0x1158368", VA = "0x1158368")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x1158370", Offset = "0x1158370", VA = "0x1158370")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Timer TotalMenuTime
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x1158378", Offset = "0x1158378", VA = "0x1158378")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x1158380", Offset = "0x1158380", VA = "0x1158380")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1158388", Offset = "0x1158388", VA = "0x1158388")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x11585E8", Offset = "0x11585E8", VA = "0x11585E8")]
	private void StartPlayTimeTracking()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x1158648", Offset = "0x1158648", VA = "0x1158648")]
	private void StopPlayTimeTracking()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x11586C8", Offset = "0x11586C8", VA = "0x11586C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x11588EC", Offset = "0x11588EC", VA = "0x11588EC")]
	public TimeTracking()
	{
	}
}
[Token(Token = "0x2000041")]
public class UnityAnalytics : AnalyticsProvider
{
	[Token(Token = "0x17000015")]
	public override bool Enabled
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1158A58", Offset = "0x1158A58", VA = "0x1158A58", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1158A60", Offset = "0x1158A60", VA = "0x1158A60", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1158A6C", Offset = "0x1158A6C", VA = "0x1158A6C", Slot = "6")]
	public override void SendEvent(string eventName, Dictionary<string, object> eventData)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1158AE4", Offset = "0x1158AE4", VA = "0x1158AE4")]
	public UnityAnalytics()
	{
	}
}
[Token(Token = "0x2000042")]
[ExecuteInEditMode]
public class ArcadeGameDefaultSetup : MonoBehaviour
{
	[Token(Token = "0x2000043")]
	[CompilerGenerated]
	private sealed class <updateLengthCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArcadeGameDefaultSetup <>4__this;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float length;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startLength>5__3;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <startYPos>5__4;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <endYPos>5__5;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0x1159110", Offset = "0x1159110", VA = "0x1159110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0x1159158", Offset = "0x1159158", VA = "0x1159158", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x1158E14", Offset = "0x1158E14", VA = "0x1158E14")]
		[DebuggerHidden]
		public <updateLengthCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x1158E60", Offset = "0x1158E60", VA = "0x1158E60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x1158E64", Offset = "0x1158E64", VA = "0x1158E64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x1159118", Offset = "0x1159118", VA = "0x1159118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RailGuidParent;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minPos;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxPos;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MoveSpeed;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float NewLength;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer RampeTop;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SkinnedMeshRenderer RampeTopApparition;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SkinnedMeshRenderer RampeBottom;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkinnedMeshRenderer RampeBottomApparition;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("SFX")]
	public rcAudioSource MovementAudioSource;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcAudioEvent MoveUpAudioEvent;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcAudioEvent MoveDownAudioEvent;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _angle;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _currentRatio;

	[Token(Token = "0x17000016")]
	private float zRatio
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x1158AEC", Offset = "0x1158AEC", VA = "0x1158AEC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1158B2C", Offset = "0x1158B2C", VA = "0x1158B2C")]
	[ContextMenu("UpdateLength")]
	public void UpdateLengthWithAnimation()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1158BD4", Offset = "0x1158BD4", VA = "0x1158BD4")]
	public void NewLenghtByRatio(float ratio)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1158BFC", Offset = "0x1158BFC", VA = "0x1158BFC")]
	public void UpdateLength(float newLength)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1158B50", Offset = "0x1158B50", VA = "0x1158B50")]
	[IteratorStateMachine(typeof(<updateLengthCoroutine>d__19))]
	private IEnumerator updateLengthCoroutine(float length)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1158CF8", Offset = "0x1158CF8", VA = "0x1158CF8")]
	private void UpdateRampeLength()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1158E3C", Offset = "0x1158E3C", VA = "0x1158E3C")]
	public ArcadeGameDefaultSetup()
	{
	}
}
[Token(Token = "0x2000044")]
public class ArcadeGameMovingHoop : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MovingDuration;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArcadeGameDefaultSetup SetupScript;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve MovingCurve;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public GameObject DispensableList;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("SFX")]
	public rcAudioSource MovementAudioSource;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public rcAudioEvent MoveUpAudioEvent;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public rcAudioEvent MoveDownAudioEvent;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _currentPositionOnCurve;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _moving;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _wasMovingUp;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _time;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1159160", Offset = "0x1159160", VA = "0x1159160")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1159224", Offset = "0x1159224", VA = "0x1159224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x11592C8", Offset = "0x11592C8", VA = "0x11592C8")]
	public void StartMoving()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1159300", Offset = "0x1159300", VA = "0x1159300")]
	private void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1159514", Offset = "0x1159514", VA = "0x1159514")]
	public void ResetFromMoving()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1159558", Offset = "0x1159558", VA = "0x1159558")]
	public void StopMoving()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1159408", Offset = "0x1159408", VA = "0x1159408")]
	private void updateMovementSfx(float previousPosition, float newPosition)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x11595E0", Offset = "0x11595E0", VA = "0x11595E0")]
	public ArcadeGameMovingHoop()
	{
	}
}
[Token(Token = "0x2000045")]
public class ArcadeGameStepingHoop : MonoBehaviour
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float OverrideSetupScriptMoveSpeed;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArcadeGameDefaultSetup SetupScript;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve MovingCurve;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public bool ResetIfFail;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] StepDistance;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int _currentStepIndex;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public GameObject DispensableList;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("SFX")]
	public rcAudioSource MovementAudioSource;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcAudioEvent MoveUpAudioEvent;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcAudioEvent MoveDownAudioEvent;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _currentPositionOnCurve;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _moving;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool _wasMovingUp;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _time;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x11595F0", Offset = "0x11595F0", VA = "0x11595F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x11596B4", Offset = "0x11596B4", VA = "0x11596B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1159760", Offset = "0x1159760", VA = "0x1159760")]
	public void StartMoving()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1159798", Offset = "0x1159798", VA = "0x1159798")]
	private void Update()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x11599B4", Offset = "0x11599B4", VA = "0x11599B4")]
	[ContextMenu("IncreaseStep")]
	public void IncreaseStep()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1159A1C", Offset = "0x1159A1C", VA = "0x1159A1C")]
	[ContextMenu("Reset Fail")]
	public void ResetFail()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1159A2C", Offset = "0x1159A2C", VA = "0x1159A2C")]
	public void ResetFromMoving()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1159A78", Offset = "0x1159A78", VA = "0x1159A78")]
	public void StopMoving()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x11598A8", Offset = "0x11598A8", VA = "0x11598A8")]
	private void updateMovementSfx(float previousPosition, float newPosition)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1159B00", Offset = "0x1159B00", VA = "0x1159B00")]
	public ArcadeGameStepingHoop()
	{
	}
}
[Token(Token = "0x2000046")]
public class BasketballAudio : MonoBehaviour
{
	[Token(Token = "0x2000047")]
	public class PooledAudioSource
	{
		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly rcAudioSource AudioSource;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _playbackStartTime;

		[Token(Token = "0x17000019")]
		public float PlaybackStartTime
		{
			[Token(Token = "0x600011D")]
			[Address(RVA = "0x115ABE4", Offset = "0x115ABE4", VA = "0x115ABE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x115AC68", Offset = "0x115AC68", VA = "0x115AC68")]
		public PooledAudioSource(rcAudioSource audioSource)
		{
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0x115AC98", Offset = "0x115AC98", VA = "0x115AC98")]
		public bool IsAvailableForPooling()
		{
			return default(bool);
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0x115AD20", Offset = "0x115AD20", VA = "0x115AD20")]
		public void PoolObject()
		{
		}
	}

	[Token(Token = "0x2000048")]
	public class AudioSourcePool
	{
		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<PooledAudioSource> _audioSourcesPool;

		[Token(Token = "0x1700001A")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000121")]
			[Address(RVA = "0x115A730", Offset = "0x115A730", VA = "0x115A730")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0x1159BFC", Offset = "0x1159BFC", VA = "0x1159BFC")]
		public void InitializePool(IList<rcAudioSource> audioSources)
		{
		}

		[Token(Token = "0x6000123")]
		[Address(RVA = "0x115A780", Offset = "0x115A780", VA = "0x115A780")]
		public rcAudioSource GetPooledObject()
		{
			return null;
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0x115AB5C", Offset = "0x115AB5C", VA = "0x115AB5C")]
		public AudioSourcePool()
		{
		}
	}

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask PlayerLayers;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Ranges")]
	public bool UseVelocity;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 VelocityForSFXSmall;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Audio")]
	public Transform AudioSourcesParent;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	[Range(0f, 1f)]
	public float SoundCooldown;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public rcAudioEvent BasketballPlayerGrab;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BasketballImpactSettings ImpactAudioSettings;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSourcePool _audioSourcesPool;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _collisionImpulse;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _velocity;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ImpactAudioEvent _lastImpact;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _lastImpactTime;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _ignoreCollisions;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1159B10", Offset = "0x1159B10", VA = "0x1159B10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1159ED8", Offset = "0x1159ED8", VA = "0x1159ED8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x115A350", Offset = "0x115A350", VA = "0x115A350")]
	private void PlayImpactSound(float collisionForce, [Optional] ImpactAudioEvent impactEvent)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x115A550", Offset = "0x115A550", VA = "0x115A550")]
	private void PlayPlayerGrabSound(float collisionForce)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x115AAC4", Offset = "0x115AAC4", VA = "0x115AAC4")]
	public void StopListeningCollision()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x115AAD0", Offset = "0x115AAD0", VA = "0x115AAD0")]
	public void ResumeListeningCollision()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x115AAD8", Offset = "0x115AAD8", VA = "0x115AAD8")]
	public BasketballAudio()
	{
	}
}
[Token(Token = "0x2000049")]
[CreateAssetMenu(fileName = "BIS_BasketballImpactSettings", menuName = "GBA/Audio/Basketball Impact Settings")]
public class BasketballImpactSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200004A")]
	public struct ImpactType
	{
		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ObjectTag;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ImpactAudioEvent ImpactSound;
	}

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ImpactAudioEvent _defaultImpactSound;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ImpactType[] _impactSounds;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, ImpactAudioEvent> _impactSoundsIndex;

	[Token(Token = "0x1700001B")]
	public ImpactAudioEvent DefaultImpactSound
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x115AD3C", Offset = "0x115AD3C", VA = "0x115AD3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x115A204", Offset = "0x115A204", VA = "0x115A204")]
	public bool IsImpactObject(string objectTag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x115A2C8", Offset = "0x115A2C8", VA = "0x115A2C8")]
	public ImpactAudioEvent GetImpactSound(string objectTag)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x115AD44", Offset = "0x115AD44", VA = "0x115AD44")]
	private void setupIndex()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x115AE80", Offset = "0x115AE80", VA = "0x115AE80")]
	public BasketballImpactSettings()
	{
	}
}
[Token(Token = "0x200004B")]
public class ChallengeGameAmbiance : StepGameAmbianceManager
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ChallengeManager _challengeManager;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SkinGameParameter _currentSkinParameter;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ChallengeLevelData[] _levelsSequence;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] _ambianceSequence;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x115AE88", Offset = "0x115AE88", VA = "0x115AE88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x115AF98", Offset = "0x115AF98", VA = "0x115AF98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x115B07C", Offset = "0x115B07C", VA = "0x115B07C")]
	private void onSkinUpdated(SkinParameter toValue, SkinParameter fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x115B0D4", Offset = "0x115B0D4", VA = "0x115B0D4")]
	public void SetAmbianceSequence()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x115B30C", Offset = "0x115B30C", VA = "0x115B30C")]
	public new void PlayCurrentStep()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x115B404", Offset = "0x115B404", VA = "0x115B404", Slot = "4")]
	protected override void updateNextStep()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x115B4B4", Offset = "0x115B4B4", VA = "0x115B4B4")]
	public ChallengeGameAmbiance()
	{
	}
}
[Token(Token = "0x200004C")]
public class GameAmbianceManager : MonoBehaviour
{
	[Token(Token = "0x200004D")]
	[CompilerGenerated]
	private sealed class <switchGameAmbianceCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameAmbianceManager <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000145")]
			[Address(RVA = "0x115BFD8", Offset = "0x115BFD8", VA = "0x115BFD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000147")]
			[Address(RVA = "0x115C020", Offset = "0x115C020", VA = "0x115C020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0x115BC10", Offset = "0x115BC10", VA = "0x115BC10")]
		[DebuggerHidden]
		public <switchGameAmbianceCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000143")]
		[Address(RVA = "0x115BEA8", Offset = "0x115BEA8", VA = "0x115BEA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0x115BEAC", Offset = "0x115BEAC", VA = "0x115BEAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0x115BFE0", Offset = "0x115BFE0", VA = "0x115BFE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameAmbianceManagerReference _managerReference;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcAudioEventGameParameter _currentGameAmbianceParameter;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinGameParameter CurrentSkinParameter;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcAudioEvent _menuAmbiance;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LoopAudioSource _menuSource;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LoopAudioSource _gameSource;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LoopAudioSource _comboSource;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcAudioSource _countdownSource;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcIntGameParameter _comboCounterParameter;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine _gameAmbianceSwitchCoroutine;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _listenToCombo;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x115B4C4", Offset = "0x115B4C4", VA = "0x115B4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x115B5CC", Offset = "0x115B5CC", VA = "0x115B5CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x115B65C", Offset = "0x115B65C", VA = "0x115B65C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x115B7E4", Offset = "0x115B7E4", VA = "0x115B7E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x115B96C", Offset = "0x115B96C", VA = "0x115B96C")]
	public void ListenToCombo(bool listen)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x115B978", Offset = "0x115B978", VA = "0x115B978")]
	private void onComboUpdated(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x115BA20", Offset = "0x115BA20", VA = "0x115BA20")]
	private void onGameAmbianceUpdated(rcAudioEvent toValue, rcAudioEvent fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x115BB9C", Offset = "0x115BB9C", VA = "0x115BB9C")]
	[IteratorStateMachine(typeof(<switchGameAmbianceCoroutine>d__18))]
	private IEnumerator switchGameAmbianceCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x115BC38", Offset = "0x115BC38", VA = "0x115BC38")]
	public void GameToMenuAmbiance()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x115BC8C", Offset = "0x115BC8C", VA = "0x115BC8C")]
	public void MenuToGameAmbiance()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x115BCBC", Offset = "0x115BCBC", VA = "0x115BCBC")]
	public void TryStartComboLoop()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x115BD7C", Offset = "0x115BD7C", VA = "0x115BD7C")]
	public void StopComboLoop()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x115BD98", Offset = "0x115BD98", VA = "0x115BD98")]
	public void StartGameAmbiance()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x115BDC8", Offset = "0x115BDC8", VA = "0x115BDC8")]
	public void StopGameAmbiance()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x115BE08", Offset = "0x115BE08", VA = "0x115BE08")]
	public void StartCountdown()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x115BE84", Offset = "0x115BE84", VA = "0x115BE84")]
	public GameAmbianceManager()
	{
	}
}
[Token(Token = "0x200004E")]
[CreateAssetMenu(fileName = "GameAmbianceManagerReference", menuName = "GBA/Audio/Game Ambiance Manager Reference")]
public class GameAmbianceManagerReference : ScriptableObject
{
	[Token(Token = "0x1700001E")]
	public GameAmbianceManager Reference
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x115C028", Offset = "0x115C028", VA = "0x115C028")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x115C030", Offset = "0x115C030", VA = "0x115C030")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x115B544", Offset = "0x115B544", VA = "0x115B544")]
	public void Init(GameAmbianceManager gameAmbianceManager)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x115B650", Offset = "0x115B650", VA = "0x115B650")]
	public void Reset()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x115C038", Offset = "0x115C038", VA = "0x115C038")]
	public void StartGameAmbiance()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x115C0B8", Offset = "0x115C0B8", VA = "0x115C0B8")]
	public void StopGameAmbiance()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x115C138", Offset = "0x115C138", VA = "0x115C138")]
	public void GameToMenuAmbiance()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x115C1B8", Offset = "0x115C1B8", VA = "0x115C1B8")]
	public void TryStartComboLoop()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x115C238", Offset = "0x115C238", VA = "0x115C238")]
	public void StopComboLoop()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x115C2C4", Offset = "0x115C2C4", VA = "0x115C2C4")]
	public void StartCountdown()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x115C344", Offset = "0x115C344", VA = "0x115C344")]
	public GameAmbianceManagerReference()
	{
	}
}
[Token(Token = "0x200004F")]
[CreateAssetMenu(fileName = "IAE_ImpactAudioEvent", menuName = "GBA/Audio/Impact Audio Event")]
public class ImpactAudioEvent : ScriptableObject
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcAudioEvent _smallImpactEvent;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcAudioEvent _mediumImpactEvent;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcAudioEvent _strongImpactEvent;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x115A89C", Offset = "0x115A89C", VA = "0x115A89C")]
	public void PlaySmallImpactEvent(rcAudioSource audioSource)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x115A954", Offset = "0x115A954", VA = "0x115A954")]
	public void PlayMediumImpactEvent(rcAudioSource audioSource)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x115AA0C", Offset = "0x115AA0C", VA = "0x115AA0C")]
	public void PlayStrongImpactEvent(rcAudioSource audioSource)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x115C34C", Offset = "0x115C34C", VA = "0x115C34C")]
	public ImpactAudioEvent()
	{
	}
}
[Token(Token = "0x2000050")]
public class LoopAudioSource : rcAudioSource
{
	[Token(Token = "0x6000157")]
	[Address(RVA = "0x115BADC", Offset = "0x115BADC", VA = "0x115BADC")]
	public void PlayAudioEvent(rcAudioEventGameParameter eventParameter)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x115C354", Offset = "0x115C354", VA = "0x115C354")]
	public LoopAudioSource()
	{
	}
}
[Token(Token = "0x2000051")]
public class MissionStatePlayAudioSource : StateMachineBehaviour
{
	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcAudioEvent EventToPlayOnEnter;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool StopOnExit;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private rcAudioSource _audioSource;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x115C35C", Offset = "0x115C35C", VA = "0x115C35C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x115C47C", Offset = "0x115C47C", VA = "0x115C47C", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x115C504", Offset = "0x115C504", VA = "0x115C504")]
	public MissionStatePlayAudioSource()
	{
	}
}
[Token(Token = "0x2000052")]
[CreateAssetMenu(fileName = "AEP_AudioEventParameter", menuName = "GBA/Audio/Audio Event Parameter")]
public class rcAudioEventGameParameter : rcGameParameter<rcAudioEvent>
{
	[Token(Token = "0x600015C")]
	[Address(RVA = "0x115C50C", Offset = "0x115C50C", VA = "0x115C50C")]
	public void Set(rcAudioEvent value)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x115C56C", Offset = "0x115C56C", VA = "0x115C56C")]
	public void PlayAudioEvent(rcAudioSource audiosource)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x115C684", Offset = "0x115C684", VA = "0x115C684")]
	[ContextMenu("Play Audio Event")]
	public void PlayAudioEvent()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x115C704", Offset = "0x115C704", VA = "0x115C704")]
	[ContextMenu("Stop Audio Event")]
	public void StopAudioEvent()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x115C784", Offset = "0x115C784", VA = "0x115C784")]
	public rcAudioEventGameParameter()
	{
	}
}
[Token(Token = "0x2000053")]
public class StepGameAmbianceManager : MonoBehaviour
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameAmbianceManagerReference _gameAmbianceManager;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected rcAudioEventGameParameter _gameAmbianceParameter;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected bool _loopSteps;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected StepGameAmbianceSettings _gameAmbianceSteps;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int _currentStep;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x115B354", Offset = "0x115B354", VA = "0x115B354")]
	public void PlayCurrentStep()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x115C820", Offset = "0x115C820", VA = "0x115C820", Slot = "4")]
	protected virtual void updateNextStep()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x115C874", Offset = "0x115C874", VA = "0x115C874")]
	public void ResetSequence()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x115B4BC", Offset = "0x115B4BC", VA = "0x115B4BC")]
	public StepGameAmbianceManager()
	{
	}
}
[Token(Token = "0x2000054")]
[CreateAssetMenu(fileName = "SGA_StepGameAmbiance", menuName = "GBA/Audio/Step Game Ambiance")]
public class StepGameAmbianceSettings : ScriptableObject
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcAudioEvent[] _gameAmbiances;

	[Token(Token = "0x1700001F")]
	public int AmbiancesCount
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0x115B2F4", Offset = "0x115B2F4", VA = "0x115B2F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000020")]
	public rcAudioEvent this[int index]
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x115C7CC", Offset = "0x115C7CC", VA = "0x115C7CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x115C87C", Offset = "0x115C87C", VA = "0x115C87C")]
	public StepGameAmbianceSettings()
	{
	}
}
[Token(Token = "0x2000055")]
public class AudioMixerController : MonoBehaviour
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer _masterMixer;

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x115C884", Offset = "0x115C884", VA = "0x115C884")]
	private void setVolume(string groupName, float soundLevel)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x115C930", Offset = "0x115C930", VA = "0x115C930")]
	public void SetMusicVolume(float soundLevel)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x115C988", Offset = "0x115C988", VA = "0x115C988")]
	public void SetJingleVolume(float soundLevel)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x115C9E0", Offset = "0x115C9E0", VA = "0x115C9E0")]
	public void SetSFXVolume(float soundLevel)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x115CA38", Offset = "0x115CA38", VA = "0x115CA38")]
	public void SetAmbianceVolume(float soundLevel)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x115CA90", Offset = "0x115CA90", VA = "0x115CA90")]
	public void SetSpecialJingleVolume(float soundLevel)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x115CAE8", Offset = "0x115CAE8", VA = "0x115CAE8")]
	public AudioMixerController()
	{
	}
}
[Token(Token = "0x2000056")]
public class Dispenser : NetworkBehaviour
{
	[Token(Token = "0x2000057")]
	[CompilerGenerated]
	private sealed class <registerStoppableCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dispenser <>4__this;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator coroutine;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0x1160134", Offset = "0x1160134", VA = "0x1160134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A3")]
			[Address(RVA = "0x116017C", Offset = "0x116017C", VA = "0x116017C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0x115FA70", Offset = "0x115FA70", VA = "0x115FA70")]
		[DebuggerHidden]
		public <registerStoppableCoroutine>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0x1160004", Offset = "0x1160004", VA = "0x1160004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x1160008", Offset = "0x1160008", VA = "0x1160008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x116013C", Offset = "0x116013C", VA = "0x116013C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000058")]
	[CompilerGenerated]
	private sealed class <DispenserStartObjectAmountEnum>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dispenser <>4__this;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A7")]
			[Address(RVA = "0x1160240", Offset = "0x1160240", VA = "0x1160240", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A9")]
			[Address(RVA = "0x1160288", Offset = "0x1160288", VA = "0x1160288", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x115FA98", Offset = "0x115FA98", VA = "0x115FA98")]
		[DebuggerHidden]
		public <DispenserStartObjectAmountEnum>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x1160184", Offset = "0x1160184", VA = "0x1160184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x1160188", Offset = "0x1160188", VA = "0x1160188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x1160248", Offset = "0x1160248", VA = "0x1160248", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000059")]
	[CompilerGenerated]
	private sealed class <dispenseObjectAmountCoroutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dispenser <>4__this;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int amount;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AD")]
			[Address(RVA = "0x11603FC", Offset = "0x11603FC", VA = "0x11603FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AF")]
			[Address(RVA = "0x1160444", Offset = "0x1160444", VA = "0x1160444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x115FAC0", Offset = "0x115FAC0", VA = "0x115FAC0")]
		[DebuggerHidden]
		public <dispenseObjectAmountCoroutine>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x1160290", Offset = "0x1160290", VA = "0x1160290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1160294", Offset = "0x1160294", VA = "0x1160294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x1160404", Offset = "0x1160404", VA = "0x1160404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200005A")]
	[CompilerGenerated]
	private sealed class <dispenseObjectsInQueue>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dispenser <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B3")]
			[Address(RVA = "0x116052C", Offset = "0x116052C", VA = "0x116052C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B5")]
			[Address(RVA = "0x1160574", Offset = "0x1160574", VA = "0x1160574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x115FB5C", Offset = "0x115FB5C", VA = "0x115FB5C")]
		[DebuggerHidden]
		public <dispenseObjectsInQueue>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x116044C", Offset = "0x116044C", VA = "0x116044C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1160450", Offset = "0x1160450", VA = "0x1160450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x1160534", Offset = "0x1160534", VA = "0x1160534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200005B")]
	[CompilerGenerated]
	private sealed class <lerpDispenseObject>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dispenser <>4__this;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject obj;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDispensable <dispensable>5__2;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <endTargetOffset>5__3;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <t>5__4;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001B9")]
			[Address(RVA = "0x1160D2C", Offset = "0x1160D2C", VA = "0x1160D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BB")]
			[Address(RVA = "0x1160D74", Offset = "0x1160D74", VA = "0x1160D74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x115FC14", Offset = "0x115FC14", VA = "0x115FC14")]
		[DebuggerHidden]
		public <lerpDispenseObject>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x116057C", Offset = "0x116057C", VA = "0x116057C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x1160580", Offset = "0x1160580", VA = "0x1160580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x1160D34", Offset = "0x1160D34", VA = "0x1160D34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DispenserSettings _dispenserSettings;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private DispenserModelSettings _dispenserModelSettings;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SyncVar(hook = "ownerUpdatedHook")]
	private GBAPlayerSystem _owner;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GBAEventsListenerBehaviour _gbaEventsListener;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BallsPool _ballsPool;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<IDispensable> _pooledDispensables;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _dispensablesReady;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaitUntil _yieldUntilDispensablesReady;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Action _onPooledDispensablesReady;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _processingQueue;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Queue<GameObject> _objectQueue;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForSeconds _delayBetweenObjects;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private System.Random _randomGenerator;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<IEnumerator> _stoppableCoroutines;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly SyncList<GameObject> _syncedPool;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly int STATENAME_HASH_DISPENSE;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private readonly int TRIGGER_HASH_RESET;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private NetworkBehaviourSyncVar ____ownerNetId;

	[Token(Token = "0x17000021")]
	public DispenserSettings Settings
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x115CAF0", Offset = "0x115CAF0", VA = "0x115CAF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x115CAF8", Offset = "0x115CAF8", VA = "0x115CAF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public ReadOnlyCollection<IDispensable> PooledObjects
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x115CEC8", Offset = "0x115CEC8", VA = "0x115CEC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public bool IsLocallyOwned
	{
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x115CF18", Offset = "0x115CF18", VA = "0x115CF18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public int ObjectAmountInDispenser
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x115D08C", Offset = "0x115D08C", VA = "0x115D08C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000025")]
	public Transform StartLerpTarget
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0x115D0A8", Offset = "0x115D0A8", VA = "0x115D0A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public Transform EndLerpTarget
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0x115D0C4", Offset = "0x115D0C4", VA = "0x115D0C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000027")]
	public bool RespawnRequestOnBallMove
	{
		[Token(Token = "0x6000176")]
		[Address(RVA = "0x115D0E0", Offset = "0x115D0E0", VA = "0x115D0E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000028")]
	public float RespawnRequestMinDistance
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x115D0FC", Offset = "0x115D0FC", VA = "0x115D0FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000029")]
	public GBAPlayerSystem Network_owner
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x115D03C", Offset = "0x115D03C", VA = "0x115D03C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x115DD2C", Offset = "0x115DD2C", VA = "0x115DD2C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event UnityAction OnClientPooledObjectsReachedStartLevel
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x115D118", Offset = "0x115D118", VA = "0x115D118")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x115D1B4", Offset = "0x115D1B4", VA = "0x115D1B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x115D250", Offset = "0x115D250", VA = "0x115D250")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x115D30C", Offset = "0x115D30C", VA = "0x115D30C", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x115D4CC", Offset = "0x115D4CC", VA = "0x115D4CC", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x115D7F4", Offset = "0x115D7F4", VA = "0x115D7F4", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x115DAD4", Offset = "0x115DAD4", VA = "0x115DAD4", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x115DC38", Offset = "0x115DC38", VA = "0x115DC38")]
	[Server]
	public void ServerSetOwner(GBAPlayerSystem owner)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x115D760", Offset = "0x115D760", VA = "0x115D760")]
	private void ownerUpdatedHook(GBAPlayerSystem previousOwner, GBAPlayerSystem newOwner)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x115DE4C", Offset = "0x115DE4C", VA = "0x115DE4C")]
	private void poolObjectsUpdated(SyncList<GameObject>.Operation op, int itemIndex, GameObject oldItem, GameObject newItem)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x115E1C4", Offset = "0x115E1C4", VA = "0x115E1C4")]
	public void SetDispenserModelSettings(DispenserModelSettings dispenserModelSettings)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x115CBC0", Offset = "0x115CBC0", VA = "0x115CBC0")]
	public void SetupDispenser()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x115E1CC", Offset = "0x115E1CC", VA = "0x115E1CC")]
	private void GetBallsFromGameWidePool()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x115D9BC", Offset = "0x115D9BC", VA = "0x115D9BC")]
	public void ClearPool()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x115EA80", Offset = "0x115EA80", VA = "0x115EA80")]
	public void StopDispensables()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x115EC3C", Offset = "0x115EC3C", VA = "0x115EC3C")]
	public void ResetDispensables()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x115F0CC", Offset = "0x115F0CC", VA = "0x115F0CC")]
	private void getPooledDispensables()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x115E1F8", Offset = "0x115E1F8", VA = "0x115E1F8")]
	private void updatePooledDispensables(IReadOnlyList<IDispensable> dispensables)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x115E5FC", Offset = "0x115E5FC", VA = "0x115E5FC")]
	private void setDispensablesReady()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x115F0E8", Offset = "0x115F0E8", VA = "0x115F0E8")]
	private GameObject getPooledObject()
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x115F638", Offset = "0x115F638", VA = "0x115F638")]
	[ContextMenu("Dispense Object")]
	public void DispenseObject()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x115F640", Offset = "0x115F640", VA = "0x115F640")]
	public void DispenseObjectAmount(int objectAmountRequested)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x115F7AC", Offset = "0x115F7AC", VA = "0x115F7AC")]
	public void DispenseStartObjectAmount()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x115F9C0", Offset = "0x115F9C0", VA = "0x115F9C0")]
	public void DispenseStartObjectAmountWithDelay(float delay)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x115F71C", Offset = "0x115F71C", VA = "0x115F71C")]
	[IteratorStateMachine(typeof(<registerStoppableCoroutine>d__59))]
	private IEnumerator registerStoppableCoroutine(IEnumerator coroutine)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x115F9EC", Offset = "0x115F9EC", VA = "0x115F9EC")]
	[IteratorStateMachine(typeof(<DispenserStartObjectAmountEnum>d__60))]
	private IEnumerator DispenserStartObjectAmountEnum(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x115F698", Offset = "0x115F698", VA = "0x115F698")]
	[IteratorStateMachine(typeof(<dispenseObjectAmountCoroutine>d__61))]
	private IEnumerator dispenseObjectAmountCoroutine(int amount)
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x115FAE8", Offset = "0x115FAE8", VA = "0x115FAE8")]
	[IteratorStateMachine(typeof(<dispenseObjectsInQueue>d__62))]
	private IEnumerator dispenseObjectsInQueue()
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x115FB84", Offset = "0x115FB84", VA = "0x115FB84")]
	[IteratorStateMachine(typeof(<lerpDispenseObject>d__63))]
	private IEnumerator lerpDispenseObject(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x115F7F4", Offset = "0x115F7F4", VA = "0x115F7F4")]
	public int GetObjectsInUse()
	{
		return default(int);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x115FC3C", Offset = "0x115FC3C", VA = "0x115FC3C")]
	public Dispenser()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x115FE20", Offset = "0x115FE20", VA = "0x115FE20")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x115FE24", Offset = "0x115FE24", VA = "0x115FE24")]
	static Dispenser()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x115FE28", Offset = "0x115FE28", VA = "0x115FE28", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x115FEF8", Offset = "0x115FEF8", VA = "0x115FEF8", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Serializable]
[Token(Token = "0x200005C")]
public class DispenserModelSettings : MonoBehaviour
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _startLerpTarget;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _endLerpTarget;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _impulseTargetA;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _impulseTargetB;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator _dispenserAnimator;

	[Token(Token = "0x17000034")]
	public Transform StartLerpTarget
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x1160D7C", Offset = "0x1160D7C", VA = "0x1160D7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public Transform EndLerpTarget
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x1160D84", Offset = "0x1160D84", VA = "0x1160D84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public Transform ImpulseTargetA
	{
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x1160D8C", Offset = "0x1160D8C", VA = "0x1160D8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public Transform ImpulseTargetB
	{
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x1160D94", Offset = "0x1160D94", VA = "0x1160D94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	public Animator DispenserAnimator
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x1160D9C", Offset = "0x1160D9C", VA = "0x1160D9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1160DA4", Offset = "0x1160DA4", VA = "0x1160DA4")]
	public DispenserModelSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200005D")]
public class DispenserSettings
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[Header("Balls Pool")]
	private bool _useGameWideObjectPool;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BallsPool.BallSearchCriteria[] _ballSearchCriterias;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Dispenser")]
	private Transform _dispensablesRoot;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _autoDispenseAtStart;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool _earlyColliderEnabling;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _dispenserSpeed;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int _dispensedAtStart;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _delayBetweenObjects;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Range(0f, 1f)]
	private float _maxOffset;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int _randomSeed;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent _onBallDispensed;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Header("Random Impulse")]
	private bool _addImpulseOnDispense;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _impulseMagnitude;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Pull Options")]
	[SerializeField]
	private int _objectAmountInDispenser;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool _respawnRequestOnBallMove;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _respawnRequestMinDistance;

	[Token(Token = "0x17000039")]
	public bool UseGameWideObjectPool
	{
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x1160DAC", Offset = "0x1160DAC", VA = "0x1160DAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003A")]
	public BallsPool.BallSearchCriteria[] BallSearchCriterias
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x1160DB4", Offset = "0x1160DB4", VA = "0x1160DB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public Transform DispensablesRoot
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x1160DBC", Offset = "0x1160DBC", VA = "0x1160DBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003C")]
	public bool AutoDispenseAtStart
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x1160DC4", Offset = "0x1160DC4", VA = "0x1160DC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003D")]
	public bool EarlyColliderEnabling
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x1160DCC", Offset = "0x1160DCC", VA = "0x1160DCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003E")]
	public float DispenserSpeed
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x1160DD4", Offset = "0x1160DD4", VA = "0x1160DD4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003F")]
	public int DispensedAtStart
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x1160DDC", Offset = "0x1160DDC", VA = "0x1160DDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000040")]
	public float DelayBetweenObjects
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0x1160DE4", Offset = "0x1160DE4", VA = "0x1160DE4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000041")]
	public float MaxOffset
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x1160DEC", Offset = "0x1160DEC", VA = "0x1160DEC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000042")]
	public int RandomSeed
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0x1160DF4", Offset = "0x1160DF4", VA = "0x1160DF4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000043")]
	public UnityEvent OnBallDispensed
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0x1160DFC", Offset = "0x1160DFC", VA = "0x1160DFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public bool AddImpulseOnDispense
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x1160E04", Offset = "0x1160E04", VA = "0x1160E04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000045")]
	public float ImpulseMagnitude
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x1160E0C", Offset = "0x1160E0C", VA = "0x1160E0C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000046")]
	public int ObjectAmountInDispenser
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x1160E14", Offset = "0x1160E14", VA = "0x1160E14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x1160E1C", Offset = "0x1160E1C", VA = "0x1160E1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public bool RespawnRequestOnBallMove
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x1160E24", Offset = "0x1160E24", VA = "0x1160E24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000048")]
	public float RespawnRequestMinDistance
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x1160E2C", Offset = "0x1160E2C", VA = "0x1160E2C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000049")]
	public int DesiredBallsAmount
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x115E164", Offset = "0x115E164", VA = "0x115E164")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x115CB24", Offset = "0x115CB24", VA = "0x115CB24")]
	public void CopyTo(DispenserSettings dispenserSettings)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x1160E34", Offset = "0x1160E34", VA = "0x1160E34")]
	public DispenserSettings()
	{
	}
}
[Token(Token = "0x200005E")]
[RequireComponent(typeof(NetworkedDispenserRespawn))]
public class DistanceRespawner : MonoBehaviour
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxDistance;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer BasketballMeshRenderer;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NetworkedDispenserRespawn RespawnManager;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnRespawnCall;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _mainCameraTransform;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _sqrMaxDistance;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1160E74", Offset = "0x1160E74", VA = "0x1160E74")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1160EC8", Offset = "0x1160EC8", VA = "0x1160EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1160EB8", Offset = "0x1160EB8", VA = "0x1160EB8")]
	[ContextMenu("Refresh Distance Threshold")]
	private void refreshSqrMaxDistance()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1161000", Offset = "0x1161000", VA = "0x1161000")]
	public void RespawnObject()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x116130C", Offset = "0x116130C", VA = "0x116130C")]
	public DistanceRespawner()
	{
	}
}
[Token(Token = "0x200005F")]
[RequireComponent(typeof(NetworkedDispenserRespawn))]
public class FloorCollisionRespawn : MonoBehaviour
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask FloorMask;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcProxyBehaviour ColliderBehaviour;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NetworkedDispenserRespawn RespawnManager;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnRespawnCall;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x116131C", Offset = "0x116131C", VA = "0x116131C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x116143C", Offset = "0x116143C", VA = "0x116143C", Slot = "5")]
	protected virtual void collisionEnterEvent(Collision collision)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1161468", Offset = "0x1161468", VA = "0x1161468")]
	public void RespawnObject()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1161508", Offset = "0x1161508", VA = "0x1161508", Slot = "6")]
	public virtual bool ShouldRespawn(Collision collision)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1161560", Offset = "0x1161560", VA = "0x1161560")]
	public FloorCollisionRespawn()
	{
	}
}
[Token(Token = "0x2000060")]
public class NetworkedDispenserRespawn : NetworkBehaviour, IDispensable
{
	[Token(Token = "0x2000061")]
	[CompilerGenerated]
	private sealed class <RespawnBall>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkedDispenserRespawn <>4__this;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000213")]
			[Address(RVA = "0x1163034", Offset = "0x1163034", VA = "0x1163034", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000215")]
			[Address(RVA = "0x116307C", Offset = "0x116307C", VA = "0x116307C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x1162130", Offset = "0x1162130", VA = "0x1162130")]
		[DebuggerHidden]
		public <RespawnBall>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x1162F44", Offset = "0x1162F44", VA = "0x1162F44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x1162F48", Offset = "0x1162F48", VA = "0x1162F48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x116303C", Offset = "0x116303C", VA = "0x116303C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000062")]
	[CompilerGenerated]
	private sealed class <distanceCheckWhileGrabbedRoutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkedDispenserRespawn <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000219")]
			[Address(RVA = "0x11631DC", Offset = "0x11631DC", VA = "0x11631DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021B")]
			[Address(RVA = "0x1163224", Offset = "0x1163224", VA = "0x1163224", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0x1162538", Offset = "0x1162538", VA = "0x1162538")]
		[DebuggerHidden]
		public <distanceCheckWhileGrabbedRoutine>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0x1163084", Offset = "0x1163084", VA = "0x1163084", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0x1163088", Offset = "0x1163088", VA = "0x1163088", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x11631E4", Offset = "0x11631E4", VA = "0x11631E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Rigidbody RigidBody;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider[] Colliders;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer[] Renderers;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ObjectApparition ObjectApparitionScript;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float RespawnDelay;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AuthorityProvider AuthorityManager;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent OnReset;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent OnVisible;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent OnInvisible;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent OnPhysicsEnabled;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent OnPhysicsDisabled;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UnityAction _onDispensed;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dispenser _dispenser;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _respawning;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool _respawnAllowed;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	[SyncVar]
	private bool _isCurrentlyUsed;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	[SyncVar(hook = "showObjectHook")]
	private bool _visible;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SyncVar(hook = "enablePhysicsHook")]
	private bool _physicsEnabled;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	[SyncVar(hook = "enableCollidersHook")]
	private bool _collidersEnabled;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool _checkDistanceTraveled;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 _positionOnDispense;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine _respawnCoroutine;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine _distanceCheckCoroutine;

	[Token(Token = "0x1700004A")]
	public Dispenser Dispenser
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x1161568", Offset = "0x1161568", VA = "0x1161568", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x1161570", Offset = "0x1161570", VA = "0x1161570", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public bool RespawnRequestOnBallMove
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x1161578", Offset = "0x1161578", VA = "0x1161578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004C")]
	public bool IsNetworked
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x1161604", Offset = "0x1161604", VA = "0x1161604", Slot = "26")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004D")]
	public bool IsAvailableForPooling
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x1161634", Offset = "0x1161634", VA = "0x1161634", Slot = "27")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004E")]
	public bool IsInUse
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1161654", Offset = "0x1161654", VA = "0x1161654", Slot = "28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004F")]
	public bool IsVisible
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x116165C", Offset = "0x116165C", VA = "0x116165C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000050")]
	public bool Network_isCurrentlyUsed
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0x1162680", Offset = "0x1162680", VA = "0x1162680")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x11616AC", Offset = "0x11616AC", VA = "0x11616AC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public bool Network_visible
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x1162688", Offset = "0x1162688", VA = "0x1162688")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000204")]
		[Address(RVA = "0x1162158", Offset = "0x1162158", VA = "0x1162158")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool Network_physicsEnabled
	{
		[Token(Token = "0x6000205")]
		[Address(RVA = "0x1162690", Offset = "0x1162690", VA = "0x1162690")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000206")]
		[Address(RVA = "0x116227C", Offset = "0x116227C", VA = "0x116227C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public bool Network_collidersEnabled
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x1162698", Offset = "0x1162698", VA = "0x1162698")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x11623A0", Offset = "0x11623A0", VA = "0x11623A0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1161664", Offset = "0x1161664", VA = "0x1161664")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1161AB4", Offset = "0x1161AB4", VA = "0x1161AB4", Slot = "15")]
	public GameObject GetObject()
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1161B2C", Offset = "0x1161B2C", VA = "0x1161B2C", Slot = "19")]
	public void EnableDispensable(bool enabled)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x1161B44", Offset = "0x1161B44", VA = "0x1161B44", Slot = "21")]
	public void StopRespawn()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1161B88", Offset = "0x1161B88", VA = "0x1161B88", Slot = "22")]
	public void LocalShutdown()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x11610AC", Offset = "0x11610AC", VA = "0x11610AC", Slot = "20")]
	public void ResetDispensable()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x11611A4", Offset = "0x11611A4", VA = "0x11611A4")]
	public void SetRespawning()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1161E48", Offset = "0x1161E48", VA = "0x1161E48")]
	[Command(requiresAuthority = false)]
	private void CmdRespawnBall()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1161F34", Offset = "0x1161F34", VA = "0x1161F34")]
	private void doServerRespawnBall()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1162044", Offset = "0x1162044", VA = "0x1162044")]
	[ClientRpc]
	private void RpcObjectRespawned()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1161FD0", Offset = "0x1161FD0", VA = "0x1161FD0")]
	[IteratorStateMachine(typeof(<RespawnBall>d__46))]
	private IEnumerator RespawnBall()
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1161BB4", Offset = "0x1161BB4", VA = "0x1161BB4", Slot = "16")]
	[ServerCallback]
	public void ShowObject(bool show)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1162274", Offset = "0x1162274", VA = "0x1162274")]
	private void showObjectHook(bool _, bool show)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1161750", Offset = "0x1161750", VA = "0x1161750")]
	private void doShowObject(bool show)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1161C90", Offset = "0x1161C90", VA = "0x1161C90", Slot = "17")]
	[ServerCallback]
	public void EnablePhysics(bool enabled)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1162398", Offset = "0x1162398", VA = "0x1162398")]
	private void enablePhysicsHook(bool _, bool enabled)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x116188C", Offset = "0x116188C", VA = "0x116188C")]
	private void doEnablePhysics(bool enabled)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1161D6C", Offset = "0x1161D6C", VA = "0x1161D6C", Slot = "18")]
	[ServerCallback]
	public void EnableColliders(bool enabled)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x11624BC", Offset = "0x11624BC", VA = "0x11624BC")]
	private void enableCollidersHook(bool _, bool enabled)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x11619D8", Offset = "0x11619D8", VA = "0x11619D8")]
	private void doEnableColliders(bool enabled)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x11624C4", Offset = "0x11624C4", VA = "0x11624C4")]
	[IteratorStateMachine(typeof(<distanceCheckWhileGrabbedRoutine>d__56))]
	private IEnumerator distanceCheckWhileGrabbedRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1162560", Offset = "0x1162560", VA = "0x1162560", Slot = "23")]
	public void OnDispensed()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1162600", Offset = "0x1162600", VA = "0x1162600", Slot = "24")]
	public UnityAction GetOnDispensedCallbacks()
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1162608", Offset = "0x1162608", VA = "0x1162608", Slot = "25")]
	public void SetOnDispensedCallbacks(UnityAction callback)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1162610", Offset = "0x1162610", VA = "0x1162610")]
	public NetworkedDispenserRespawn()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x116267C", Offset = "0x116267C", VA = "0x116267C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x11626A0", Offset = "0x11626A0", VA = "0x11626A0")]
	protected void UserCode_CmdRespawnBall()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x11626B8", Offset = "0x11626B8", VA = "0x11626B8")]
	protected static void InvokeUserCode_CmdRespawnBall(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1162804", Offset = "0x1162804", VA = "0x1162804")]
	protected void UserCode_RpcObjectRespawned()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1162834", Offset = "0x1162834", VA = "0x1162834")]
	protected static void InvokeUserCode_RpcObjectRespawned(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1162930", Offset = "0x1162930", VA = "0x1162930")]
	static NetworkedDispenserRespawn()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1162AC0", Offset = "0x1162AC0", VA = "0x1162AC0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1162C90", Offset = "0x1162C90", VA = "0x1162C90", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000063")]
[RequireComponent(typeof(IDispensable), typeof(NetworkIdentity), typeof(Rigidbody))]
public class BallManager : MonoBehaviour
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BallTag _tag;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IDispensable _dispensable;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _body;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetworkIdentity _networkIdentity;

	[Token(Token = "0x17000058")]
	public BallTag Tag
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x116322C", Offset = "0x116322C", VA = "0x116322C")]
		get
		{
			return default(BallTag);
		}
	}

	[Token(Token = "0x17000059")]
	public IDispensable Dispensable
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1163234", Offset = "0x1163234", VA = "0x1163234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public Rigidbody Body
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x11632A0", Offset = "0x11632A0", VA = "0x11632A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public NetworkIdentity NetworkIdenty
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x1163344", Offset = "0x1163344", VA = "0x1163344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x11633E8", Offset = "0x11633E8", VA = "0x11633E8")]
	public BallManager()
	{
	}
}
[Token(Token = "0x2000064")]
[CreateAssetMenu(fileName = "BallPrefabCollection", menuName = "GBA/Balls/Prefab Collection")]
public class BallPrefabCollection : ScriptableObject
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> _ballPrefabs;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<BallTag> _ballTags;

	[Token(Token = "0x1700005C")]
	public List<GameObject> BallPrefabs
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x11633F0", Offset = "0x11633F0", VA = "0x11633F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public ReadOnlyCollection<BallTag> BallTags
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x11633F8", Offset = "0x11633F8", VA = "0x11633F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1163448", Offset = "0x1163448", VA = "0x1163448")]
	public BallPrefabCollection()
	{
	}
}
[Token(Token = "0x2000065")]
public class BallsPool : NetworkBehaviour
{
	[Serializable]
	[Token(Token = "0x2000066")]
	public struct BallSearchCriteria
	{
		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BallTag Tag;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Amount;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Randomize;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BallTag[] BlackList;
	}

	[Serializable]
	[Token(Token = "0x2000067")]
	private struct NetworkBallSearchCriteria
	{
		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Tag;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Amount;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Randomize;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] BlackList;
	}

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UnityAction<BallsPool> OnLocalInstanceUpdated;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly SyncList<NetworkIdentity> _ballsSyncList;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _poolTransform;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private BallsPoolSettings _settings;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar]
	private int _randomSeed;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private System.Random _random;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SyncVar]
	private int _currentBallRequestSize;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action _onRequestedBallsSpawned;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<BallManager> _randomizeBallsWorkList;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<IDispensable> _activeBalls;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityAction OnBallsBorrowed;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityAction OnBallsReturned;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityAction<GBAPlayerSystem, GBAPlayerSystem> OnOwnerUpdated;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SyncVar(hook = "ownerUpdatedHook")]
	private GBAPlayerSystem _owner;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GBAPlayerSystem _localPlayer;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private NetworkBehaviourSyncVar ____ownerNetId;

	[Token(Token = "0x1700005E")]
	public static BallsPool LocalInstance
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x1163450", Offset = "0x1163450", VA = "0x1163450")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x11634A8", Offset = "0x11634A8", VA = "0x11634A8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public IReadOnlyList<IDispensable> ActiveBalls
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x1163510", Offset = "0x1163510", VA = "0x1163510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public bool IsLocallyOwned
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x1163518", Offset = "0x1163518", VA = "0x1163518")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000061")]
	private GBAPlayerSystem localPlayer
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x11635E0", Offset = "0x11635E0", VA = "0x11635E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public int Network_randomSeed
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x11655A0", Offset = "0x11655A0", VA = "0x11655A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x1163B48", Offset = "0x1163B48", VA = "0x1163B48")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public int Network_currentBallRequestSize
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x11655A8", Offset = "0x11655A8", VA = "0x11655A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x11655B0", Offset = "0x11655B0", VA = "0x11655B0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public GBAPlayerSystem Network_owner
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x1163590", Offset = "0x1163590", VA = "0x1163590")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x1164158", Offset = "0x1164158", VA = "0x1164158")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x116372C", Offset = "0x116372C", VA = "0x116372C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1163904", Offset = "0x1163904", VA = "0x1163904")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1163A54", Offset = "0x1163A54", VA = "0x1163A54", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1163BE8", Offset = "0x1163BE8", VA = "0x1163BE8", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1163EF8", Offset = "0x1163EF8", VA = "0x1163EF8", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1163F4C", Offset = "0x1163F4C", VA = "0x1163F4C", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1164040", Offset = "0x1164040", VA = "0x1164040")]
	[Server]
	public void ServerSetOwner(GBAPlayerSystem owner)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1164460", Offset = "0x1164460", VA = "0x1164460")]
	private void ownerUpdatedHook(GBAPlayerSystem previousOwner, GBAPlayerSystem newOwner)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x11642A0", Offset = "0x11642A0", VA = "0x11642A0")]
	private void onOwnerUpdated(GBAPlayerSystem previousOwner, GBAPlayerSystem newOwner)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x11644A4", Offset = "0x11644A4", VA = "0x11644A4")]
	private NetworkBallSearchCriteria ballSearchCriteriaToNetwork(BallSearchCriteria criteria)
	{
		return default(NetworkBallSearchCriteria);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x116460C", Offset = "0x116460C", VA = "0x116460C")]
	private BallSearchCriteria networkToBallSearchCriteria(NetworkBallSearchCriteria networkCriteria)
	{
		return default(BallSearchCriteria);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x115E608", Offset = "0x115E608", VA = "0x115E608")]
	public void SpawnBalls(BallSearchCriteria[] criterias, [Optional] Action onBallsSpawned)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1164770", Offset = "0x1164770", VA = "0x1164770")]
	[Command(requiresAuthority = false)]
	private void CmdSpawnBalls(NetworkBallSearchCriteria[] networkCriterias)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1164870", Offset = "0x1164870", VA = "0x1164870")]
	private void spawnedBallsListUpdated(SyncList<NetworkIdentity>.Operation op, int itemIndex, NetworkIdentity oldItem, NetworkIdentity newItem)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1164A04", Offset = "0x1164A04", VA = "0x1164A04")]
	private int getBallSearchSize(BallSearchCriteria[] search)
	{
		return default(int);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x115E768", Offset = "0x115E768", VA = "0x115E768")]
	public void ReturnBalls(IList<IDispensable> dispensables)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1164A60", Offset = "0x1164A60", VA = "0x1164A60")]
	[Command(requiresAuthority = false)]
	private void CmdDestroyBall(NetworkIdentity ballToDestroy)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1164B8C", Offset = "0x1164B8C", VA = "0x1164B8C")]
	private void spawnBallsByCriteria(BallSearchCriteria criteria, [Optional] UnityAction<BallManager> executeWhenSpawned)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1164EB4", Offset = "0x1164EB4", VA = "0x1164EB4")]
	private void spawnBallsByRandomizedCriteria(BallSearchCriteria criteria, [Optional] UnityAction<BallManager> executeWhenSpawned)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x116528C", Offset = "0x116528C", VA = "0x116528C")]
	private void removeBallsByTag(IList<BallManager> balls, BallTag[] blackList)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1165464", Offset = "0x1165464", VA = "0x1165464")]
	public BallsPool()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x116559C", Offset = "0x116559C", VA = "0x116559C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1165650", Offset = "0x1165650", VA = "0x1165650")]
	protected void UserCode_CmdSpawnBalls(NetworkBallSearchCriteria[] networkCriterias)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1165804", Offset = "0x1165804", VA = "0x1165804")]
	protected static void InvokeUserCode_CmdSpawnBalls(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1165958", Offset = "0x1165958", VA = "0x1165958")]
	protected void UserCode_CmdDestroyBall(NetworkIdentity ballToDestroy)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1165A34", Offset = "0x1165A34", VA = "0x1165A34")]
	protected static void InvokeUserCode_CmdDestroyBall(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1165BAC", Offset = "0x1165BAC", VA = "0x1165BAC")]
	static BallsPool()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1165D40", Offset = "0x1165D40", VA = "0x1165D40", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1165EC0", Offset = "0x1165EC0", VA = "0x1165EC0", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000068")]
[CreateAssetMenu(fileName = "BallsPoolSettings", menuName = "GBA/Balls/Pool Settings")]
public class BallsPoolSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000069")]
	public struct BallSpawnSettings
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Prefab;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Range(1f, 10f)]
		public int Quantity;
	}

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<BallSpawnSettings> _spawnSettings;

	[Token(Token = "0x17000065")]
	public ReadOnlyCollection<BallSpawnSettings> SpawnSettings
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0x1164E5C", Offset = "0x1164E5C", VA = "0x1164E5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1163744", Offset = "0x1163744", VA = "0x1163744")]
	public void InitSpawnables()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x11660A8", Offset = "0x11660A8", VA = "0x11660A8")]
	public BallsPoolSettings()
	{
	}
}
[Token(Token = "0x200006A")]
[CreateAssetMenu(fileName = "BallTags", menuName = "GBA/Balls/Ball Tags")]
public class BallTagsList : ScriptableObject
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> Tags;

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x11660B0", Offset = "0x11660B0", VA = "0x11660B0")]
	public BallTagsList()
	{
	}
}
[Serializable]
[Token(Token = "0x200006B")]
public struct BallTag
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private string _tag;

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x11660B8", Offset = "0x11660B8", VA = "0x11660B8")]
	public BallTag(string tag)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x11660C0", Offset = "0x11660C0", VA = "0x11660C0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x11660C8", Offset = "0x11660C8", VA = "0x11660C8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1166144", Offset = "0x1166144", VA = "0x1166144", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1164EAC", Offset = "0x1164EAC", VA = "0x1164EAC")]
	public static bool operator ==(BallTag a, BallTag b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1166164", Offset = "0x1166164", VA = "0x1166164")]
	public static bool operator ==(BallTag tag, string stringTag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x116616C", Offset = "0x116616C", VA = "0x116616C")]
	public static bool operator !=(BallTag a, BallTag b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1166188", Offset = "0x1166188", VA = "0x1166188")]
	public static bool operator !=(BallTag tag, string stringTag)
	{
		return default(bool);
	}
}
[Token(Token = "0x200006C")]
public class BallTriggerableArea : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _ballTriggerAmount;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _ballsCounter;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _triggered;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LayerMask _triggerLayer;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _onTrigger;

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x11661A4", Offset = "0x11661A4", VA = "0x11661A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x116623C", Offset = "0x116623C", VA = "0x116623C")]
	public void Reset()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1166248", Offset = "0x1166248", VA = "0x1166248")]
	public BallTriggerableArea()
	{
	}
}
[Token(Token = "0x200006D")]
public class BasketBall2HandMagnet : MonoBehaviour
{
	[Token(Token = "0x200006E")]
	public enum MagnetEnd
	{
		[Token(Token = "0x40002BE")]
		Off = 0,
		[Token(Token = "0x40002BF")]
		Time = 0,
		[Token(Token = "0x40002C0")]
		Height = 1,
		[Token(Token = "0x40002C1")]
		Count = 2
	}

	[Token(Token = "0x200006F")]
	public enum HandIndex
	{
		[Token(Token = "0x40002C3")]
		Left,
		[Token(Token = "0x40002C4")]
		Right,
		[Token(Token = "0x40002C5")]
		Count
	}

	[Token(Token = "0x2000070")]
	[CompilerGenerated]
	private sealed class <findPlayer>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketBall2HandMagnet <>4__this;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitForOneSec>5__2;

		[Token(Token = "0x17000067")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0x116A8F8", Offset = "0x116A8F8", VA = "0x116A8F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x116A940", Offset = "0x116A940", VA = "0x116A940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x1169B40", Offset = "0x1169B40", VA = "0x1169B40")]
		[DebuggerHidden]
		public <findPlayer>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x116A1AC", Offset = "0x116A1AC", VA = "0x116A1AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x116A1B0", Offset = "0x116A1B0", VA = "0x116A1B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x116A900", Offset = "0x116A900", VA = "0x116A900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000071")]
	[CompilerGenerated]
	private sealed class <resetHandPosingDrive>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketBall2HandMagnet <>4__this;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public rcAvatar.AvatarHand avatarHand;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public rcInteractiveHand interactiveHand;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int index;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0x116AAC8", Offset = "0x116AAC8", VA = "0x116AAC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x116AB10", Offset = "0x116AB10", VA = "0x116AB10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1169E0C", Offset = "0x1169E0C", VA = "0x1169E0C")]
		[DebuggerHidden]
		public <resetHandPosingDrive>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x116A948", Offset = "0x116A948", VA = "0x116A948", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x116A94C", Offset = "0x116A94C", VA = "0x116A94C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x116AAD0", Offset = "0x116AAD0", VA = "0x116AAD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private rcAvatar _player;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private rcXRInputs _inputs;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private rcInteractiveHand _interactiveHandLeft;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private rcInteractiveHand _interactiveHandRight;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine _getPlayerCoroutine;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody[] _curBall;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FixedJoint[] _curBallJoint;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SphereCollider[] _curBallCol;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] _grabTime;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] _ballToWristOffset;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] _midToWristOffset;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float forceScaler;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public ForceMode forceMode;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float magnetLength;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float magnetCone;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float abortCone;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool[] _magnetOn;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine[] _resetHandPosingDriveRoutine;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly float _ballDefaultRadius;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private BBallTouchable _touchedBall;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PhysicMaterial _refHandPhysicMaterial;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public PhysicMaterial NoGripHandPhysicMaterial;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float magnetEndDelay;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public MagnetEnd endType;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool magnetEnable;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool frictionChangeEnable;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float frictionChangeCoolDownDelay;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly rcAvatar.AvatarHand.HandPose _drivePose;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private readonly rcAvatar.AvatarHand.HandPose _magnetPose;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent[] OnHandGrabbed;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent[] OnHandReleased;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ParticleSystem[] _magnetFx;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<BallsPool> _ballPools;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _hasActiveBalls;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject[] _fxPrefab;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SkinMaterialSwapper _materialSwapper;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ComboDetectionReference _comboDetectionReference;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private ComboDetection _comboDetection;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private rcBoolGameParameter _isInChallenge;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _useComboDetection;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform _cacheCameraTransform;

	[Token(Token = "0x17000066")]
	private Transform cacheCameraTransform
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x1166258", Offset = "0x1166258", VA = "0x1166258")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x116631C", Offset = "0x116631C", VA = "0x116631C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1166AC0", Offset = "0x1166AC0", VA = "0x1166AC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1166DA4", Offset = "0x1166DA4", VA = "0x1166DA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x11668A8", Offset = "0x11668A8", VA = "0x11668A8")]
	private void onPlayersManagerInitialized()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1168F14", Offset = "0x1168F14", VA = "0x1168F14")]
	private void refreshBallsPools()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1169604", Offset = "0x1169604", VA = "0x1169604")]
	private void inputLeftTrackingChange(bool isTracking)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x116993C", Offset = "0x116993C", VA = "0x116993C")]
	private void inputRightTrackingChange(bool isTracking)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x11699A0", Offset = "0x11699A0", VA = "0x11699A0")]
	private void onBallsBorrowedFromPool()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x11699BC", Offset = "0x11699BC", VA = "0x11699BC")]
	private void onBallsReturnedToPool()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1166A4C", Offset = "0x1166A4C", VA = "0x1166A4C")]
	[IteratorStateMachine(typeof(<findPlayer>d__55))]
	private IEnumerator findPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x11699B8", Offset = "0x11699B8", VA = "0x11699B8")]
	public void InitHandMagnets()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1166D54", Offset = "0x1166D54", VA = "0x1166D54")]
	public void ResetHandMagnets()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1169664", Offset = "0x1169664", VA = "0x1169664")]
	private void stopMagnet(int handIndex, bool cancel = true)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1169B68", Offset = "0x1169B68", VA = "0x1169B68")]
	private Vector3 computeHandPalmDirection(rcAvatar.AvatarHand hand, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1169DD4", Offset = "0x1169DD4", VA = "0x1169DD4")]
	private bool isHandFree(rcAvatar.AvatarHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1167C00", Offset = "0x1167C00", VA = "0x1167C00")]
	private void checkMagnet(rcAvatar.AvatarHand hand, Vector3 up, bool grabJOn, bool grabJOff, int handIndex, GameObject oppositeBall)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1168E60", Offset = "0x1168E60", VA = "0x1168E60")]
	[IteratorStateMachine(typeof(<resetHandPosingDrive>d__62))]
	private IEnumerator resetHandPosingDrive(rcAvatar.AvatarHand avatarHand, rcInteractiveHand interactiveHand, int index)
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1168E00", Offset = "0x1168E00", VA = "0x1168E00")]
	private void setHandPosingDrive(rcAvatar.AvatarHand avatarHand, rcInteractiveHand interactiveHand, int index)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1169880", Offset = "0x1169880", VA = "0x1169880")]
	private void resetHandFriction(rcInteractiveHand interactiveHand, int index)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1169E34", Offset = "0x1169E34", VA = "0x1169E34")]
	private void clearHandFriction(rcInteractiveHand interactiveHand, int index)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1169EF0", Offset = "0x1169EF0", VA = "0x1169EF0")]
	public void GetBallStates()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1169F18", Offset = "0x1169F18", VA = "0x1169F18")]
	public void CleanBallStates()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1169F2C", Offset = "0x1169F2C", VA = "0x1169F2C")]
	public void updateUseComboDetection()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x116A020", Offset = "0x116A020", VA = "0x116A020")]
	public BasketBall2HandMagnet()
	{
	}
}
[Token(Token = "0x2000072")]
public class BasketballFX : MonoBehaviour
{
	[Token(Token = "0x2000073")]
	[CompilerGenerated]
	private sealed class <ResetFX>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballFX <>4__this;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject fxToReset;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000289")]
			[Address(RVA = "0x116B4EC", Offset = "0x116B4EC", VA = "0x116B4EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028B")]
			[Address(RVA = "0x116B534", Offset = "0x116B534", VA = "0x116B534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x116B404", Offset = "0x116B404", VA = "0x116B404")]
		[DebuggerHidden]
		public <ResetFX>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x116B434", Offset = "0x116B434", VA = "0x116B434", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x116B438", Offset = "0x116B438", VA = "0x116B438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x116B4F4", Offset = "0x116B4F4", VA = "0x116B4F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask ColliderMask;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcProxyBehaviour ColliderBehaviour;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ImpactForLimit;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FXListParent;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] _fxPullingList;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] _fxPullingListLifeTime;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds _delay;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x116AB18", Offset = "0x116AB18", VA = "0x116AB18", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x116ADFC", Offset = "0x116ADFC", VA = "0x116ADFC")]
	private void CollisionHit(Collision collision)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x116AFB0", Offset = "0x116AFB0", VA = "0x116AFB0")]
	private void SpawnFX(Vector3 position, Vector3 orientation)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x116B388", Offset = "0x116B388", VA = "0x116B388")]
	private int GetOlderFxIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x116B2F8", Offset = "0x116B2F8", VA = "0x116B2F8")]
	[IteratorStateMachine(typeof(<ResetFX>d__11))]
	private IEnumerator ResetFX(GameObject fxToReset)
	{
		return null;
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x116B42C", Offset = "0x116B42C", VA = "0x116B42C")]
	public BasketballFX()
	{
	}
}
[Token(Token = "0x2000074")]
public class BasketballGlass : FloorCollisionRespawn
{
	[Token(Token = "0x2000075")]
	[CompilerGenerated]
	private sealed class <delayedRespawnCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasketballGlass <>4__this;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000297")]
			[Address(RVA = "0x116BEBC", Offset = "0x116BEBC", VA = "0x116BEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000299")]
			[Address(RVA = "0x116BF04", Offset = "0x116BF04", VA = "0x116BF04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x116BD84", Offset = "0x116BD84", VA = "0x116BD84")]
		[DebuggerHidden]
		public <delayedRespawnCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x116BDBC", Offset = "0x116BDBC", VA = "0x116BDBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x116BDC0", Offset = "0x116BDC0", VA = "0x116BDC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x116BEC4", Offset = "0x116BEC4", VA = "0x116BEC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Ranges")]
	public Vector3 MaxVelocity;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float collisionForce;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody BallRigidbody;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float RespawnDelay;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Header("Object")]
	public LayerMask AvoidMask;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject BasketballGlassMesh;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject BasketballCollider;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject BasketballGlassBrokenMesh;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector3> PositionBrokenMeshes;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> RotationBrokenMeshes;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Audio")]
	public rcAudioSource BasketballAudioSource;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Space]
	public ImpactAudioEvent BreakingGlassAudioEvent;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x116B53C", Offset = "0x116B53C", VA = "0x116B53C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x116B98C", Offset = "0x116B98C", VA = "0x116B98C", Slot = "5")]
	protected override void collisionEnterEvent(Collision collision)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x116BAF4", Offset = "0x116BAF4", VA = "0x116BAF4")]
	private bool tryBreakBasketBall(float collisionForce, bool shouldRespawn)
	{
		return default(bool);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x116BD58", Offset = "0x116BD58", VA = "0x116BD58")]
	public void BreakBasketball()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x116BD64", Offset = "0x116BD64", VA = "0x116BD64")]
	public void PlayReboundMediumSound()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x116B764", Offset = "0x116B764", VA = "0x116B764")]
	[ContextMenu("Reset Broken Meshes")]
	public void ResetBrokenMeshes()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x116BCE4", Offset = "0x116BCE4", VA = "0x116BCE4")]
	[IteratorStateMachine(typeof(<delayedRespawnCoroutine>d__18))]
	private IEnumerator delayedRespawnCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x116BDAC", Offset = "0x116BDAC", VA = "0x116BDAC")]
	public BasketballGlass()
	{
	}
}
[Token(Token = "0x2000076")]
public class BBallTouchable : MonoBehaviour, rcITouchable
{
	[Token(Token = "0x2000077")]
	public enum TouchingHand
	{
		[Token(Token = "0x40002EC")]
		None,
		[Token(Token = "0x40002ED")]
		Left,
		[Token(Token = "0x40002EE")]
		Right,
		[Token(Token = "0x40002EF")]
		Both
	}

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TouchingHand _currentTouch;

	[Token(Token = "0x1700006F")]
	public TouchingHand CurrentTouch
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x116BF0C", Offset = "0x116BF0C", VA = "0x116BF0C")]
		get
		{
			return default(TouchingHand);
		}
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x116BF14", Offset = "0x116BF14", VA = "0x116BF14", Slot = "7")]
	public GameObject GetObject()
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x116BF1C", Offset = "0x116BF1C", VA = "0x116BF1C", Slot = "8")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x116BF5C", Offset = "0x116BF5C", VA = "0x116BF5C", Slot = "6")]
	public void RemoveOwner()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x116BF60", Offset = "0x116BF60", VA = "0x116BF60", Slot = "4")]
	public void StartTouching(rcInteractiveHand hand)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x116BFA8", Offset = "0x116BFA8", VA = "0x116BFA8", Slot = "5")]
	public void StopTouching(rcInteractiveHand hand)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x116BFF0", Offset = "0x116BFF0", VA = "0x116BFF0")]
	public BBallTouchable()
	{
	}
}
[Token(Token = "0x2000078")]
public class BonusShotManager : MonoBehaviour
{
	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HoopManager _hoopManager;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcGameEvent rcBonusGameEvent;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x116BFF8", Offset = "0x116BFF8", VA = "0x116BFF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x116C0C8", Offset = "0x116C0C8", VA = "0x116C0C8")]
	private void onGoal(Collider _)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x116C0EC", Offset = "0x116C0EC", VA = "0x116C0EC")]
	public BonusShotManager()
	{
	}
}
[Token(Token = "0x2000079")]
public class BorneButtonHilighable : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcGameEvent HilightEvent;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x116C0F4", Offset = "0x116C0F4", VA = "0x116C0F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x116C118", Offset = "0x116C118", VA = "0x116C118")]
	public BorneButtonHilighable()
	{
	}
}
[Token(Token = "0x200007A")]
public class BotBehaviour : NetworkBehaviour
{
	[Token(Token = "0x200007B")]
	[CompilerGenerated]
	private sealed class <BotUpdate>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotBehaviour <>4__this;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <j>5__2;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BC")]
			[Address(RVA = "0x1251DCC", Offset = "0x1251DCC", VA = "0x1251DCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0x1251E14", Offset = "0x1251E14", VA = "0x1251E14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x1251874", Offset = "0x1251874", VA = "0x1251874")]
		[DebuggerHidden]
		public <BotUpdate>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x125189C", Offset = "0x125189C", VA = "0x125189C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x12518A0", Offset = "0x12518A0", VA = "0x12518A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x1251DD4", Offset = "0x1251DD4", VA = "0x1251DD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ComboDetectionReference _comboDetectionRef;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GBAPlayerSystem _playerSystem;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GBAEventsListenerBehaviour _eventsListener;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Range(0f, 5f)]
	[SerializeField]
	private float _heightOffset;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float _ballMaxSqrDistance;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> _targets;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<IDispensable> _ownedBalls;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody[] _ballsRigidBody;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AuthorityProvider[] _authorityProviders;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine _botRoutine;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WaitForSeconds _delay;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x116C120", Offset = "0x116C120", VA = "0x116C120", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x116C31C", Offset = "0x116C31C", VA = "0x116C31C", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x116C518", Offset = "0x116C518", VA = "0x116C518")]
	private void OnPlayerSlotUpdated()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x116C6E4", Offset = "0x116C6E4", VA = "0x116C6E4")]
	private void OnLevelStart()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x116C938", Offset = "0x116C938", VA = "0x116C938")]
	private void FetchBalls()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x116CD30", Offset = "0x116CD30", VA = "0x116CD30")]
	private void Clean()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x116CDD8", Offset = "0x116CDD8", VA = "0x116CDD8")]
	private void BallShot(Rigidbody ball, Vector3 target, float heightOffset)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x116C8C4", Offset = "0x116C8C4", VA = "0x116C8C4")]
	[IteratorStateMachine(typeof(<BotUpdate>d__18))]
	private IEnumerator BotUpdate()
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x116CFA8", Offset = "0x116CFA8", VA = "0x116CFA8")]
	private void MoveToSlot()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x116D044", Offset = "0x116D044", VA = "0x116D044")]
	[Command]
	private void CmdMoveToSlot()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x116D130", Offset = "0x116D130", VA = "0x116D130")]
	[ClientRpc(includeOwner = false)]
	private void RpcMoveToSlot()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x116D21C", Offset = "0x116D21C", VA = "0x116D21C")]
	private void moveToSlot()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x116D26C", Offset = "0x116D26C", VA = "0x116D26C")]
	public BotBehaviour()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x116D38C", Offset = "0x116D38C", VA = "0x116D38C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x116D390", Offset = "0x116D390", VA = "0x116D390")]
	protected void UserCode_CmdMoveToSlot()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x116D394", Offset = "0x116D394", VA = "0x116D394")]
	protected static void InvokeUserCode_CmdMoveToSlot(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x116D4C4", Offset = "0x116D4C4", VA = "0x116D4C4")]
	protected void UserCode_RpcMoveToSlot()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x116D4C8", Offset = "0x116D4C8", VA = "0x116D4C8")]
	protected static void InvokeUserCode_RpcMoveToSlot(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x116D5C4", Offset = "0x116D5C4", VA = "0x116D5C4")]
	static BotBehaviour()
	{
	}
}
[Token(Token = "0x200007C")]
public class BotConfig
{
	[Serializable]
	[Token(Token = "0x200007D")]
	public struct Config
	{
		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string AppId;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string OwnerToFind;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BotUsername;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BotPassword;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AccessToken;
	}

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Config _config;

	[Token(Token = "0x17000072")]
	public string AppId
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x1251E1C", Offset = "0x1251E1C", VA = "0x1251E1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public string OwnerToFind
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x1251E24", Offset = "0x1251E24", VA = "0x1251E24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public string Username
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x1251E2C", Offset = "0x1251E2C", VA = "0x1251E2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000075")]
	public string Password
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x1251E34", Offset = "0x1251E34", VA = "0x1251E34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000076")]
	public string AccessToken
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x1251E3C", Offset = "0x1251E3C", VA = "0x1251E3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1251E44", Offset = "0x1251E44", VA = "0x1251E44")]
	public bool ReadConfig()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1251FA0", Offset = "0x1251FA0", VA = "0x1251FA0")]
	public BotConfig()
	{
	}
}
[Token(Token = "0x200007E")]
public class BotInitialization : NetworkBehaviour
{
	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1251FA8", Offset = "0x1251FA8", VA = "0x1251FA8", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x12520AC", Offset = "0x12520AC", VA = "0x12520AC")]
	private void OnBotLoggedIn()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1252120", Offset = "0x1252120", VA = "0x1252120")]
	public BotInitialization()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1252128", Offset = "0x1252128", VA = "0x1252128")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x200007F")]
public class BotMatchFinder : MonoBehaviour
{
	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x125212C", Offset = "0x125212C", VA = "0x125212C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1252250", Offset = "0x1252250", VA = "0x1252250")]
	private void OnUserLoggedIn()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1252548", Offset = "0x1252548", VA = "0x1252548")]
	private void OnMatchmakerStateChanged()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x12523F0", Offset = "0x12523F0", VA = "0x12523F0")]
	private void SearchMatch()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1252608", Offset = "0x1252608", VA = "0x1252608")]
	public BotMatchFinder()
	{
	}
}
[Token(Token = "0x2000081")]
public class BotOculusAuthentication
{
	[Serializable]
	[Token(Token = "0x2000082")]
	public class AccessTokenResponse
	{
		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string access_token;

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x125294C", Offset = "0x125294C", VA = "0x125294C")]
		public AccessTokenResponse()
		{
		}
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x125268C", Offset = "0x125268C", VA = "0x125268C")]
	public static void SendGetAccessTokenRequest(UnityAction<string, string> onReceivedAccessToken)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1252740", Offset = "0x1252740", VA = "0x1252740")]
	private static void GetOAuthToken(string appId, string email, string password, UnityAction<string, string> onReceivedAccessToken)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1252944", Offset = "0x1252944", VA = "0x1252944")]
	public BotOculusAuthentication()
	{
	}
}
[Token(Token = "0x2000084")]
public class BotRoomFinder : MonoBehaviour
{
	[Token(Token = "0x2000085")]
	[CompilerGenerated]
	private sealed class <SearchRoomAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotRoomFinder <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E8")]
			[Address(RVA = "0x1253528", Offset = "0x1253528", VA = "0x1253528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002EA")]
			[Address(RVA = "0x1253570", Offset = "0x1253570", VA = "0x1253570", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x1252FCC", Offset = "0x1252FCC", VA = "0x1252FCC")]
		[DebuggerHidden]
		public <SearchRoomAfterDelay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x12534C0", Offset = "0x12534C0", VA = "0x12534C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x12534C4", Offset = "0x12534C4", VA = "0x12534C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x1253530", Offset = "0x1253530", VA = "0x1253530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IRoomBrowser _matchmaker;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GBANetworkManager _networkManager;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _connected;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _ownerToFind;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds _delay;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x12529E8", Offset = "0x12529E8", VA = "0x12529E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1252B60", Offset = "0x1252B60", VA = "0x1252B60")]
	private void OnUserLoggedIn()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1252E68", Offset = "0x1252E68", VA = "0x1252E68")]
	private void SearchRoom()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1252F58", Offset = "0x1252F58", VA = "0x1252F58")]
	[IteratorStateMachine(typeof(<SearchRoomAfterDelay>d__9))]
	private IEnumerator SearchRoomAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1252FF4", Offset = "0x1252FF4", VA = "0x1252FF4")]
	private void OnRoomFound(IReadOnlyList<HostRoom> foundRooms, bool isError, string errorMsg)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x12532E8", Offset = "0x12532E8", VA = "0x12532E8")]
	private void OnRoomJoined(ConnectToRoomResult connectResult, string errorDetails)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x12532FC", Offset = "0x12532FC", VA = "0x12532FC")]
	private void OnDisconnectedFromServer(NetworkConnection info)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1253410", Offset = "0x1253410", VA = "0x1253410")]
	private void OnFatalError()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1253414", Offset = "0x1253414", VA = "0x1253414")]
	private void OnServerDisconnected(GBANetworkManager.ServerDisconnectingMessage msg)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1253418", Offset = "0x1253418", VA = "0x1253418")]
	private void OnPlayerCountChanged(int to, int from, UnityEngine.Object _)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1253304", Offset = "0x1253304", VA = "0x1253304")]
	private void LeaveRoomAndSearchGame()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1253438", Offset = "0x1253438", VA = "0x1253438")]
	private void OnRoomLeft(bool isError, string errorMsg)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1253448", Offset = "0x1253448", VA = "0x1253448")]
	public BotRoomFinder()
	{
	}
}
[Token(Token = "0x2000086")]
public class rcFollowRotation : MonoBehaviour
{
	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1253578", Offset = "0x1253578", VA = "0x1253578")]
	public rcFollowRotation()
	{
	}
}
[Token(Token = "0x2000087")]
public class BreakableGrave : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcProxyBehaviour GraveProxy;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OneHitTrigger OneHitTriggerScript;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	public GameObject GraveCollider;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject GravePart1;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject GravePart2;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject GraveSpawnAnimator;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public int CurrentDamageLevel;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Timer")]
	public bool TimedRespawn;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float RespawnDelay;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Audio")]
	public rcAudioSource RcAudioSourceRef;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcAudioEvent SFXDamageSmall;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcAudioEvent SFXDamage;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("FX")]
	public GameObject BreakableFX;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool IsEnable;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1253580", Offset = "0x1253580", VA = "0x1253580", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1253604", Offset = "0x1253604", VA = "0x1253604")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x12537D8", Offset = "0x12537D8", VA = "0x12537D8")]
	[ContextMenu("Hit Grave")]
	public void OnGraveHit()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x12537EC", Offset = "0x12537EC", VA = "0x12537EC")]
	public void TakeDamage(bool playAudio)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1253A04", Offset = "0x1253A04", VA = "0x1253A04")]
	[ContextMenu("Destroy")]
	public void TakeAllDamage()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1253A14", Offset = "0x1253A14", VA = "0x1253A14")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1253B18", Offset = "0x1253B18", VA = "0x1253B18")]
	public void EnableGravePart1()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1253BA4", Offset = "0x1253BA4", VA = "0x1253BA4")]
	public BreakableGrave()
	{
	}
}
[Token(Token = "0x2000088")]
public class BreakableGraveAnimatorEnabler : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Breakable Grave")]
	public BreakableGrave BreakbaleGraveScript;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Grave")]
	public GameObject GravePart1Object;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Audio")]
	public rcAudioSource AudioSourceScript;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcAudioEvent GraveSpawnEvent;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1253BB4", Offset = "0x1253BB4", VA = "0x1253BB4")]
	public void EnableGravePart1()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1253C8C", Offset = "0x1253C8C", VA = "0x1253C8C")]
	public void EnableGraveSpawnAudio()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1253D34", Offset = "0x1253D34", VA = "0x1253D34")]
	public BreakableGraveAnimatorEnabler()
	{
	}
}
[Token(Token = "0x2000089")]
public class BreakableGraveBonusPoint : BreakableGraveManager
{
	[Token(Token = "0x200008A")]
	[CompilerGenerated]
	private sealed class <DestroyBreakableGrave>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BreakableGraveBonusPoint <>4__this;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000300")]
			[Address(RVA = "0x1254674", Offset = "0x1254674", VA = "0x1254674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000302")]
			[Address(RVA = "0x12546BC", Offset = "0x12546BC", VA = "0x12546BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x12543FC", Offset = "0x12543FC", VA = "0x12543FC")]
		[DebuggerHidden]
		public <DestroyBreakableGrave>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x1254450", Offset = "0x1254450", VA = "0x1254450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x1254454", Offset = "0x1254454", VA = "0x1254454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x125467C", Offset = "0x125467C", VA = "0x125467C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OneHitTrigger OneHitTriggerScript;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Lissajous> LissajousScripts;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	public UnityEvent CheckForBonusPointEvent;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent AllGraveDestroyedBeforeDelay;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent AllGraveDestroyedEvent;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1253D3C", Offset = "0x1253D3C", VA = "0x1253D3C")]
	public void ClearAllGravesAndCallbacks()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1253F20", Offset = "0x1253F20", VA = "0x1253F20")]
	[ContextMenu("Get all grave in active lissajous")]
	public void GetAllGraveInActiveLissajous()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1254354", Offset = "0x1254354", VA = "0x1254354")]
	[ContextMenu("Check for bonus point")]
	public void CheckForBonusPoint()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1254388", Offset = "0x1254388", VA = "0x1254388")]
	[IteratorStateMachine(typeof(<DestroyBreakableGrave>d__8))]
	private IEnumerator DestroyBreakableGrave()
	{
		return null;
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1254424", Offset = "0x1254424", VA = "0x1254424")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1254440", Offset = "0x1254440", VA = "0x1254440")]
	public BreakableGraveBonusPoint()
	{
	}
}
[Token(Token = "0x200008B")]
public class BreakableGraveManager : MonoBehaviour
{
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BreakableGrave> Graves;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcAudioSource GraveDestroySource;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcAudioEvent GraveDestroyEvent;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x12546C4", Offset = "0x12546C4", VA = "0x12546C4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x12547A8", Offset = "0x12547A8", VA = "0x12547A8")]
	public void DestroyAll()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1254448", Offset = "0x1254448", VA = "0x1254448")]
	public BreakableGraveManager()
	{
	}
}
[Token(Token = "0x200008C")]
public class BreakableGraveNoComboReset : BreakableGrave, IGoalEmitter
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	[Space]
	private LayerMask _detectedLayer;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[Header("Combo")]
	private rcIntGameParameter _comboCount;

	[Token(Token = "0x1700007B")]
	public UnityAction<Collider> OnGoal
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x125499C", Offset = "0x125499C", VA = "0x125499C", Slot = "5")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x12549A4", Offset = "0x12549A4", VA = "0x12549A4", Slot = "6")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public bool IgnoreBalls
	{
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x12549AC", Offset = "0x12549AC", VA = "0x12549AC", Slot = "7")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x12549B4", Offset = "0x12549B4", VA = "0x12549B4", Slot = "8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x12549C0", Offset = "0x12549C0", VA = "0x12549C0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1254B88", Offset = "0x1254B88", VA = "0x1254B88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1254D48", Offset = "0x1254D48", VA = "0x1254D48")]
	private void OnCollistionEnterEventCollisionGoalEvent(Collision collision)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1254E70", Offset = "0x1254E70", VA = "0x1254E70")]
	public BreakableGraveNoComboReset()
	{
	}
}
[Token(Token = "0x200008D")]
[CreateAssetMenu(fileName = "BuildProcessorSettings", menuName = "GBA/BuildProcessorSettings")]
public class BuildProcessorSettings : ScriptableObject
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint SteamAppId;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1254E80", Offset = "0x1254E80", VA = "0x1254E80")]
	public BuildProcessorSettings()
	{
	}
}
[Token(Token = "0x200008E")]
[ExecuteAlways]
public class ButtonAnimation : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	public enum MoveAxis
	{
		[Token(Token = "0x4000342")]
		MoveOnForwardAxis,
		[Token(Token = "0x4000343")]
		MoveOnRightAxis,
		[Token(Token = "0x4000344")]
		MoveOnUpAxis
	}

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isButtonPressed;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Space]
	public MoveAxis MoveOnAxis;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MoveOffset;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ChangeButtonColor;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color ColorButtonReleased;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color ColorButtonPressed;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1254E88", Offset = "0x1254E88", VA = "0x1254E88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1254EF0", Offset = "0x1254EF0", VA = "0x1254EF0")]
	[ContextMenu("Pressed")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1255118", Offset = "0x1255118", VA = "0x1255118")]
	[ContextMenu("Released")]
	public void ButtonReleased()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x125533C", Offset = "0x125533C", VA = "0x125533C")]
	public ButtonAnimation()
	{
	}
}
[Token(Token = "0x2000090")]
public class CameraChangeClearFlags : MonoBehaviour
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x125535C", Offset = "0x125535C", VA = "0x125535C")]
	public void EnableSolid()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x125537C", Offset = "0x125537C", VA = "0x125537C")]
	public void DisableClear()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x125539C", Offset = "0x125539C", VA = "0x125539C")]
	public CameraChangeClearFlags()
	{
	}
}
[Token(Token = "0x2000091")]
public class CanvasFadeOut : MonoBehaviour
{
	[Token(Token = "0x2000092")]
	[CompilerGenerated]
	private sealed class <fadeInAnimationCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasFadeOut <>4__this;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityAction onEndAnim;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <ambianceFadeInTime>5__2;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color <opaqueBlack>5__3;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <transparentBlack>5__4;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <elapsedTime>5__5;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <animLengthSeconds>5__6;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600032B")]
			[Address(RVA = "0x125606C", Offset = "0x125606C", VA = "0x125606C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600032D")]
			[Address(RVA = "0x12560B4", Offset = "0x12560B4", VA = "0x12560B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x125582C", Offset = "0x125582C", VA = "0x125582C")]
		[DebuggerHidden]
		public <fadeInAnimationCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1255D44", Offset = "0x1255D44", VA = "0x1255D44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x1255D48", Offset = "0x1255D48", VA = "0x1255D48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x1256074", Offset = "0x1256074", VA = "0x1256074", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private sealed class <SimpleFadeAnimation>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasFadeOut <>4__this;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color startColor;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color endColor;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool disableCanvasAtEnd;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__2;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000339")]
			[Address(RVA = "0x12565B4", Offset = "0x12565B4", VA = "0x12565B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600033B")]
			[Address(RVA = "0x12565FC", Offset = "0x12565FC", VA = "0x12565FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x1255C38", Offset = "0x1255C38", VA = "0x1255C38")]
		[DebuggerHidden]
		public <SimpleFadeAnimation>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x125637C", Offset = "0x125637C", VA = "0x125637C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x1256380", Offset = "0x1256380", VA = "0x1256380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x12565BC", Offset = "0x12565BC", VA = "0x12565BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _hasFadeOut;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _xrDeviceReadyParameter;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool FadeInOnStart;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image _fadeInOutImage;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Menu_LoadingIcone _loadingIcone;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve _fadeCurve;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _simpleFadeSpeed;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcAudioEvent _menuAmbiance;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent _onDoneFading;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PassthroughConfigManager _passthroughConfigManager;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayerRoom;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[Header("Editor")]
	private bool _enableXRCheckInEditor;

	[Token(Token = "0x1700007D")]
	public bool IsFadeOut
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x12554DC", Offset = "0x12554DC", VA = "0x12554DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007E")]
	public bool HasFadeOut
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x1255504", Offset = "0x1255504", VA = "0x1255504")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	public bool HasFadeIn
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x125550C", Offset = "0x125550C", VA = "0x125550C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000002")]
	public event UnityAction OnEndFadeOut
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x12553A4", Offset = "0x12553A4", VA = "0x12553A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x1255440", Offset = "0x1255440", VA = "0x1255440")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x125553C", Offset = "0x125553C", VA = "0x125553C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1255648", Offset = "0x1255648", VA = "0x1255648")]
	private void Start()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x125577C", Offset = "0x125577C", VA = "0x125577C")]
	public void StartFadeInAnimation([Optional] UnityAction onEndAnim)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x125579C", Offset = "0x125579C", VA = "0x125579C")]
	[IteratorStateMachine(typeof(<fadeInAnimationCoroutine>d__24))]
	private IEnumerator fadeInAnimationCoroutine([Optional] UnityAction onEndAnim)
	{
		return null;
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1255854", Offset = "0x1255854", VA = "0x1255854")]
	[ContextMenu("FadeOut")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x12558EC", Offset = "0x12558EC", VA = "0x12558EC")]
	public void FadeOut(float speed)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x12559FC", Offset = "0x12559FC", VA = "0x12559FC")]
	[ContextMenu("SimpleFadeOut")]
	public void SimpleFadeOut()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1255B40", Offset = "0x1255B40", VA = "0x1255B40")]
	[ContextMenu("SimpleFadeIn")]
	public void SimpleFadeIn()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1255A5C", Offset = "0x1255A5C", VA = "0x1255A5C")]
	[IteratorStateMachine(typeof(<SimpleFadeAnimation>d__29))]
	public IEnumerator SimpleFadeAnimation(Color startColor, Color endColor, float speed = 0f, bool disableCanvasAtEnd = true)
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1255C60", Offset = "0x1255C60", VA = "0x1255C60")]
	private void onXRDeviceReadyStateUpdated(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1255C8C", Offset = "0x1255C8C", VA = "0x1255C8C")]
	private void initPassthroughConfigManager()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1255D04", Offset = "0x1255D04", VA = "0x1255D04")]
	public CanvasFadeOut()
	{
	}
}
[Token(Token = "0x2000097")]
public class ChallengeBreakCanvas : MonoBehaviour
{
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _canvasAnimator;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _startCanvasTrigger;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _nextLevelTitleMesh;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ChallengeJauge _jauge;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1256828", Offset = "0x1256828", VA = "0x1256828")]
	public void StartBreak(ChallengeManagerReference challengeManager)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1256C80", Offset = "0x1256C80", VA = "0x1256C80")]
	public void EndBreak()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1256D38", Offset = "0x1256D38", VA = "0x1256D38")]
	public ChallengeBreakCanvas()
	{
	}
}
[Token(Token = "0x2000098")]
public class ChallengeCanvasManager : MonoBehaviour
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ChallengePlayerSlot _originalChallengeSlot;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _localPoseCached;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _pseudoSlotLocalPosition;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion _pseudoSlotLocalRotation;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ReadOnlyCollection<GBAPlayerSystem> _playersList;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _updateSlots;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly ChallengePlayerSlot[] _challengePlayerSlots;

	[Token(Token = "0x400037E")]
	private const int MAX_PLAYERS_COUNT = 4;

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1256D90", Offset = "0x1256D90", VA = "0x1256D90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1257064", Offset = "0x1257064", VA = "0x1257064")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1256F58", Offset = "0x1256F58", VA = "0x1256F58")]
	private void onPlayersManagerInitialized()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x12572A8", Offset = "0x12572A8", VA = "0x12572A8")]
	private void updatePlayersList()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1257320", Offset = "0x1257320", VA = "0x1257320")]
	private void Update()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x12574D4", Offset = "0x12574D4", VA = "0x12574D4")]
	public void SetupCanvases()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1257778", Offset = "0x1257778", VA = "0x1257778")]
	public void DestroyDuplicateCanvases()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x125788C", Offset = "0x125788C", VA = "0x125788C")]
	public void ShowBreakCanvases(ChallengeManagerReference challengeManagerRef)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1257A18", Offset = "0x1257A18", VA = "0x1257A18")]
	public void CloseBreakCanvases()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1257B88", Offset = "0x1257B88", VA = "0x1257B88")]
	public void ShowCompleteCanvases(bool show)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1257D24", Offset = "0x1257D24", VA = "0x1257D24")]
	public ChallengeCanvasManager()
	{
	}
}
[Token(Token = "0x2000099")]
public class ChallengeCompleteCanvas : MonoBehaviour
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _canvasAnimator;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _completeText;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextAnimatorPlayer _completeTextAnimator;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _completeTextObject;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _startCanvasTrigger;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ChallengeJauge _jauge;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _delayBeforeJaugeFillUp;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1257D88", Offset = "0x1257D88", VA = "0x1257D88")]
	public void StartComplete(ChallengeManagerReference challengeManager, bool show)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1257E94", Offset = "0x1257E94", VA = "0x1257E94")]
	[ContextMenu("Show Complete Text")]
	public void ShowCompleteText()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1257ECC", Offset = "0x1257ECC", VA = "0x1257ECC")]
	public ChallengeCompleteCanvas()
	{
	}
}
[Serializable]
[Token(Token = "0x200009A")]
public class ChallengeEventsListener
{
	[Token(Token = "0x200009B")]
	private class StopEventListener : rcIGameEventListener
	{
		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ChallengeEventsListener _eventsListener;

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x125843C", Offset = "0x125843C", VA = "0x125843C")]
		public StopEventListener(ChallengeEventsListener listener)
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x12585EC", Offset = "0x12585EC", VA = "0x12585EC", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x200009C")]
	private class StartEventListener : rcIGameEventListener
	{
		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChallengeEventsListener _eventsListener;

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x12583DC", Offset = "0x12583DC", VA = "0x12583DC")]
		public StartEventListener(ChallengeEventsListener listener)
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x1258618", Offset = "0x1258618", VA = "0x1258618", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x200009D")]
	private class RestartEventListener : rcIGameEventListener
	{
		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChallengeEventsListener _eventsListener;

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x125840C", Offset = "0x125840C", VA = "0x125840C")]
		public RestartEventListener(ChallengeEventsListener listener)
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x1258644", Offset = "0x1258644", VA = "0x1258644", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x200009E")]
	private class EndEventListener : rcIGameEventListener
	{
		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChallengeEventsListener _eventsListener;

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x125846C", Offset = "0x125846C", VA = "0x125846C")]
		public EndEventListener(ChallengeEventsListener listener)
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x1258670", Offset = "0x1258670", VA = "0x1258670", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private rcGameEvent _challengeStartEvent;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcGameEvent _challengeRestartEvent;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcGameEvent _challengeStopEvent;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcGameEvent _challengeEndEvent;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEvent _challengeStartResponse;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEvent _challengeRestartResponse;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEvent _challengeStopResponse;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityEvent _challengeEndResponse;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StartEventListener _challengeStartListener;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RestartEventListener _challengeRestartListener;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private StopEventListener _challengeStopListener;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EndEventListener _challengeEndListener;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public readonly string ChallengeStartEventPath;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public readonly string ChallengeRestartEventPath;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public readonly string ChallengeStopEventPath;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public readonly string ChallengeEndEventPath;

	[Token(Token = "0x17000088")]
	public rcGameEvent ChallengeStartEvent
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x1257F58", Offset = "0x1257F58", VA = "0x1257F58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000089")]
	public rcGameEvent ChallengeRestartEvent
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x1257F60", Offset = "0x1257F60", VA = "0x1257F60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	public rcGameEvent ChallengeStopEvent
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1257F68", Offset = "0x1257F68", VA = "0x1257F68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008B")]
	public rcGameEvent ChallengeEndEvent
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1257F70", Offset = "0x1257F70", VA = "0x1257F70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008C")]
	public bool Ready
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1257F78", Offset = "0x1257F78", VA = "0x1257F78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1258038", Offset = "0x1258038", VA = "0x1258038")]
	public static ChallengeEventsListener CreateChallengeEventsListeners()
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1258164", Offset = "0x1258164", VA = "0x1258164")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x125849C", Offset = "0x125849C", VA = "0x125849C")]
	public void UnregisterListeners()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x12585C8", Offset = "0x12585C8", VA = "0x12585C8")]
	public void FindChallengeGameEventParameters()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x12585CC", Offset = "0x12585CC", VA = "0x12585CC")]
	public void SetStartResponse(UnityEvent startReponse)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x12585D4", Offset = "0x12585D4", VA = "0x12585D4")]
	public void SetRestartResponse(UnityEvent restartReponse)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x12585DC", Offset = "0x12585DC", VA = "0x12585DC")]
	public void SetStopResponse(UnityEvent startReponse)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x12585E4", Offset = "0x12585E4", VA = "0x12585E4")]
	public void SetEndResponse(UnityEvent startReponse)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1258090", Offset = "0x1258090", VA = "0x1258090")]
	public ChallengeEventsListener()
	{
	}
}
[Token(Token = "0x200009F")]
public class ChallengeEventsListenerBehaviour : MonoBehaviour
{
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ContextMenuItem("Find Events", "OnValidate")]
	[SerializeField]
	private ChallengeEventsListener _challengeEventsListener;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent ChallengeStartResponse;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent ChallengeStopResponse;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent ChallengeEndResponse;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x125869C", Offset = "0x125869C", VA = "0x125869C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x12586E4", Offset = "0x12586E4", VA = "0x12586E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x125873C", Offset = "0x125873C", VA = "0x125873C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1258754", Offset = "0x1258754", VA = "0x1258754")]
	public ChallengeEventsListenerBehaviour()
	{
	}
}
[Token(Token = "0x20000A0")]
public class ChallengeJauge : MonoBehaviour
{
	[Token(Token = "0x20000A1")]
	[CompilerGenerated]
	private sealed class <LerpJaugeValue>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChallengeJauge <>4__this;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float startAmount;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float newAmount;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__2;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000374")]
			[Address(RVA = "0x1258B60", Offset = "0x1258B60", VA = "0x1258B60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000376")]
			[Address(RVA = "0x1258BA8", Offset = "0x1258BA8", VA = "0x1258BA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x12587F4", Offset = "0x12587F4", VA = "0x12587F4")]
		[DebuggerHidden]
		public <LerpJaugeValue>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x1258874", Offset = "0x1258874", VA = "0x1258874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x1258878", Offset = "0x1258878", VA = "0x1258878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x1258B68", Offset = "0x1258B68", VA = "0x1258B68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _canvasAnimator;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _canvasFillUpTrigger;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[SerializeField]
	[Header("Jauge")]
	private Image _jauge;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve _jaugeLerpCurve;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<GameObject> _separators;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Audio")]
	private rcAudioSource JaugeAudioSource;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcAudioEvent JaugeAudioProgressEvent;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcAudioEvent JaugeAudioCompleteEvent;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcAudioEvent JaugeAudioOnJaugeUpdateEvent;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1256B50", Offset = "0x1256B50", VA = "0x1256B50")]
	public void InitJauge(ChallengeManagerReference challengeManagerReference, float delay = 0f)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x125875C", Offset = "0x125875C", VA = "0x125875C")]
	[IteratorStateMachine(typeof(<LerpJaugeValue>d__10))]
	private IEnumerator LerpJaugeValue(float startAmount, float newAmount, float delay)
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1256D30", Offset = "0x1256D30", VA = "0x1256D30")]
	public void StopJauge()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x125881C", Offset = "0x125881C", VA = "0x125881C")]
	public ChallengeJauge()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A2")]
public class ChallengeLevelData
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private LevelSettings _levelId;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Range(1f, 300f)]
	private int _levelDurationInSec;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 30f)]
	[SerializeField]
	private float _breakDurationInSec;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _useComboDetection;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool _overrideAmbiance;

	[Token(Token = "0x1700008F")]
	public LevelSettings LevelId
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x1258BB0", Offset = "0x1258BB0", VA = "0x1258BB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	public int LevelDurationInSec
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1258BB8", Offset = "0x1258BB8", VA = "0x1258BB8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000091")]
	public float BreakDurationInSec
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x1258BC0", Offset = "0x1258BC0", VA = "0x1258BC0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000092")]
	public bool UseComboDetection
	{
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x1258BC8", Offset = "0x1258BC8", VA = "0x1258BC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000093")]
	public bool OverrideAmbiance
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x1258BD0", Offset = "0x1258BD0", VA = "0x1258BD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1258BD8", Offset = "0x1258BD8", VA = "0x1258BD8")]
	public ChallengeLevelData()
	{
	}
}
[Token(Token = "0x20000A3")]
public class ChallengeManager : NetworkBehaviour
{
	[Token(Token = "0x20000A4")]
	[CompilerGenerated]
	private sealed class <breakTimeCoroutine>d__105 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeManager <>4__this;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0x125D1A8", Offset = "0x125D1A8", VA = "0x125D1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0x125D1F0", Offset = "0x125D1F0", VA = "0x125D1F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x125A794", Offset = "0x125A794", VA = "0x125A794")]
		[DebuggerHidden]
		public <breakTimeCoroutine>d__105(int <>1__state)
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x125CF48", Offset = "0x125CF48", VA = "0x125CF48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x125CF4C", Offset = "0x125CF4C", VA = "0x125CF4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x125D1B0", Offset = "0x125D1B0", VA = "0x125D1B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Settings")]
	[SerializeField]
	private ChallengeManagerReference _managerReference;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ChallengePresetsSettings _presetsSettings;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ChallengePresetsSettings _onlinePresetsSettings;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private NetworkedTimer _breakTimer;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Header("Play Parameters")]
	private rcIntGameParameter _scoreParameter;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcIntGameParameter _comboCountParameter;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcIntGameParameter _successfulShotsParameter;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcIntGameParameter _failedShotsParameter;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Displays")]
	[SerializeField]
	private rcLocalizedText _timeLimitLocalizedRule;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Play Events")]
	public UnityEvent OnLevelCompleted;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent OnStartBreak;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UnityEvent OnEndBreak;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent OnStartChallenge;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnStopChallenge;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnRestartChallenge;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnEndChallenge;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("End Events")]
	public UnityEvent OnOpenChallengeEndRecap;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEvent OnCloseChallengeEndRecap;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[ContextMenuItem("Find Events", "OnValidate")]
	[SerializeField]
	private GBAEventsListener _gbaEventsListener;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ChallengeLevelData[] _currentLevelsList;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int _currentLevelIndex;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private ChallengeRecapData _currentRecapData;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int _currentScore;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int _currentSuccessfulShots;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _currentFailedShots;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private LeaderboardManager _leaderboardManager;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine _breakTimeCoroutine;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _isBreakTime;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float _delayBeforeLevelSwitch;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private WaitUntil _waitForLevelSwitchDelay;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WaitWhile _waitForBreakEnd;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Unlockable[] _unlockables;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ChallengePresetsSettings _currentPresetsSettings;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private ChallengePreset _currentPreset;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool _wasLastUnlockedPreset;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UnityAction OnPresetApplied;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UnityAction<int, int> OnLoadLevelEvent;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public UnityAction OnQuitChallengeEvent;

	[Token(Token = "0x17000094")]
	public string CurrentTitle
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x1258BF4", Offset = "0x1258BF4", VA = "0x1258BF4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x1258BFC", Offset = "0x1258BFC", VA = "0x1258BFC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public string LocalizedPlayRule
	{
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x1258C0C", Offset = "0x1258C0C", VA = "0x1258C0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000096")]
	public ChallengeLevelData[] CurrentLevelsData
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x1258CF0", Offset = "0x1258CF0", VA = "0x1258CF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000097")]
	public ChallengeLevelData CurrentLevelData
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x1258CF8", Offset = "0x1258CF8", VA = "0x1258CF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public LevelSettings CurrentLevel
	{
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x1258D3C", Offset = "0x1258D3C", VA = "0x1258D3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public int CurrentProgression
	{
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1256AE4", Offset = "0x1256AE4", VA = "0x1256AE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009A")]
	public int CurrentLength
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x1258D8C", Offset = "0x1258D8C", VA = "0x1258D8C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009B")]
	public int CurrentScore
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1258DA4", Offset = "0x1258DA4", VA = "0x1258DA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009C")]
	public float TotalDuration
	{
		[Token(Token = "0x6000386")]
		[Address(RVA = "0x1258DAC", Offset = "0x1258DAC", VA = "0x1258DAC")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1258DB4", Offset = "0x1258DB4", VA = "0x1258DB4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public bool PendingEndedChallenge
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1258DBC", Offset = "0x1258DBC", VA = "0x1258DBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	public ChallengeRecapData CurrentRecapData
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1258DC4", Offset = "0x1258DC4", VA = "0x1258DC4")]
		get
		{
			return default(ChallengeRecapData);
		}
	}

	[Token(Token = "0x1700009F")]
	public NetworkedTimer BreakTimer
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x1258DD0", Offset = "0x1258DD0", VA = "0x1258DD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A0")]
	public Unlockable[] Unlockables
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1258DD8", Offset = "0x1258DD8", VA = "0x1258DD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public List<Unlockable> LastUnlockedUnlockables
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1258DE0", Offset = "0x1258DE0", VA = "0x1258DE0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1258DE8", Offset = "0x1258DE8", VA = "0x1258DE8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public ChallengePresetsSettings CurrentPresetSettings
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1258DF8", Offset = "0x1258DF8", VA = "0x1258DF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A3")]
	public ChallengePreset CurrentPreset
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x1258E00", Offset = "0x1258E00", VA = "0x1258E00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A4")]
	public bool CurrentIsLastUnlockedPreset
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1258E08", Offset = "0x1258E08", VA = "0x1258E08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A5")]
	public bool CurrentWasLastUnlockedPreset
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x1258EC4", Offset = "0x1258EC4", VA = "0x1258EC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	public ChallengePresetsSettings OnlinePresetsSettings
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x1258ECC", Offset = "0x1258ECC", VA = "0x1258ECC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A7")]
	public ChallengePresetsSettings PresetsSettings
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x1258ED4", Offset = "0x1258ED4", VA = "0x1258ED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A8")]
	private bool isCurrentLevelIndexValid
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x1258CC8", Offset = "0x1258CC8", VA = "0x1258CC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1258EDC", Offset = "0x1258EDC", VA = "0x1258EDC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1258F34", Offset = "0x1258F34", VA = "0x1258F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x125918C", Offset = "0x125918C", VA = "0x125918C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x125921C", Offset = "0x125921C", VA = "0x125921C")]
	public void SetPreset(ChallengePreset preset)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x12593B8", Offset = "0x12593B8", VA = "0x12593B8")]
	[Command(requiresAuthority = false)]
	private void CmdSetPreset(int presetIndex, bool isOnlinePreset)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x12594F8", Offset = "0x12594F8", VA = "0x12594F8")]
	[ClientRpc]
	private void RpcSetPreset(int presetIndex, bool isOnlinePreset)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1259638", Offset = "0x1259638", VA = "0x1259638")]
	private void setPreset(ChallengePreset preset)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1259830", Offset = "0x1259830", VA = "0x1259830")]
	public void SetLevelsList(ChallengeLevelData[] levelsList, string displayTitle, float totalDuration, [Optional] Leaderboard handsLeaderboard, [Optional] Leaderboard controllersLeaderboard)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1259990", Offset = "0x1259990", VA = "0x1259990")]
	public void SetUnlockables(Unlockable[] unlockables)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1256B0C", Offset = "0x1256B0C", VA = "0x1256B0C")]
	public ChallengeLevelData GetLevelData(int levelIndex)
	{
		return null;
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x12599A0", Offset = "0x12599A0", VA = "0x12599A0")]
	public void ClearPendingEndedChallenge()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x12599A4", Offset = "0x12599A4", VA = "0x12599A4")]
	private void setupLevel(int levelDataIndex)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1259BA8", Offset = "0x1259BA8", VA = "0x1259BA8")]
	private void destroyLevels()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1259CBC", Offset = "0x1259CBC", VA = "0x1259CBC")]
	private void resetMetrics()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1259D78", Offset = "0x1259D78", VA = "0x1259D78")]
	private void registerMetricsListeners()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1259F54", Offset = "0x1259F54", VA = "0x1259F54")]
	private void unregisterMetricsListeners()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x125A130", Offset = "0x125A130", VA = "0x125A130")]
	private void onLevelEnded()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x125A564", Offset = "0x125A564", VA = "0x125A564")]
	private void tryUnlockContent()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x125A460", Offset = "0x125A460", VA = "0x125A460")]
	[IteratorStateMachine(typeof(<breakTimeCoroutine>d__105))]
	private IEnumerator breakTimeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x125A7BC", Offset = "0x125A7BC", VA = "0x125A7BC")]
	private void stopBreakTime()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x125A7C4", Offset = "0x125A7C4", VA = "0x125A7C4")]
	[ContextMenu("Start Challenge")]
	public void StartChallenge()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x125A7EC", Offset = "0x125A7EC", VA = "0x125A7EC")]
	[Command(requiresAuthority = false)]
	private void CmdStartChallenge()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x125A8D8", Offset = "0x125A8D8", VA = "0x125A8D8")]
	[ClientRpc]
	private void RpcStartChallenge()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x125A9C4", Offset = "0x125A9C4", VA = "0x125A9C4")]
	private void startChallenge()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x125AB2C", Offset = "0x125AB2C", VA = "0x125AB2C")]
	[ContextMenu("Restart Challenge")]
	public void RestartChallenge()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x125AB54", Offset = "0x125AB54", VA = "0x125AB54")]
	[Command(requiresAuthority = false)]
	private void CmdRestartChallenge()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x125AC40", Offset = "0x125AC40", VA = "0x125AC40")]
	[ClientRpc]
	private void RpcRestartChallenge()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x125AD2C", Offset = "0x125AD2C", VA = "0x125AD2C")]
	private void restartChallenge()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x125AE24", Offset = "0x125AE24", VA = "0x125AE24")]
	[ContextMenu("Stop Challenge")]
	public void StopChallenge()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x125AE4C", Offset = "0x125AE4C", VA = "0x125AE4C")]
	[Command(requiresAuthority = false)]
	private void CmdStopChallenge()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x125AF38", Offset = "0x125AF38", VA = "0x125AF38")]
	[ClientRpc]
	private void RpcStopChallenge()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x125B024", Offset = "0x125B024", VA = "0x125B024")]
	private void stopChallenge()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x125B1C4", Offset = "0x125B1C4", VA = "0x125B1C4")]
	[ContextMenu("Leave Challenge Mode")]
	public void LeaveChallengeMode()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x125B2D8", Offset = "0x125B2D8", VA = "0x125B2D8")]
	public void LeaveChallengeModeLocally()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x125B1EC", Offset = "0x125B1EC", VA = "0x125B1EC")]
	[Command(requiresAuthority = false)]
	private void CmdLeaveChallengeMode()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x125B388", Offset = "0x125B388", VA = "0x125B388")]
	[ClientRpc]
	private void RpcLeaveChallengeMode()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x125B2DC", Offset = "0x125B2DC", VA = "0x125B2DC")]
	private void leaveChallengeMode()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x125B474", Offset = "0x125B474", VA = "0x125B474")]
	public void ResetChallenge()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1259988", Offset = "0x1259988", VA = "0x1259988")]
	public void EnableFirstLevel()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x125B59C", Offset = "0x125B59C", VA = "0x125B59C")]
	public void SetNetworkedOpenChallengeIntent()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x125B5A0", Offset = "0x125B5A0", VA = "0x125B5A0")]
	[Command(requiresAuthority = false)]
	private void CmdSetOpenChallengeIntent()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x125B68C", Offset = "0x125B68C", VA = "0x125B68C")]
	[ClientRpc]
	private void RpcSetOpenChallengeIntent()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1259708", Offset = "0x1259708", VA = "0x1259708")]
	private void resetScore()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x125B778", Offset = "0x125B778", VA = "0x125B778")]
	private void updateBestCombo(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x125B7A8", Offset = "0x125B7A8", VA = "0x125B7A8")]
	private void updateSuccessfulShots(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x125B7C4", Offset = "0x125B7C4", VA = "0x125B7C4")]
	private void updateFailedShots(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x125B7E0", Offset = "0x125B7E0", VA = "0x125B7E0")]
	public ChallengeManager()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x125B8A8", Offset = "0x125B8A8", VA = "0x125B8A8")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x125B8AC", Offset = "0x125B8AC", VA = "0x125B8AC")]
	protected void UserCode_CmdSetPreset(int presetIndex, bool isOnlinePreset)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x125B9D4", Offset = "0x125B9D4", VA = "0x125B9D4")]
	protected static void InvokeUserCode_CmdSetPreset(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x125BB5C", Offset = "0x125BB5C", VA = "0x125BB5C")]
	protected void UserCode_RpcSetPreset(int presetIndex, bool isOnlinePreset)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x125BC64", Offset = "0x125BC64", VA = "0x125BC64")]
	protected static void InvokeUserCode_RpcSetPreset(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x125BDB8", Offset = "0x125BDB8", VA = "0x125BDB8")]
	protected void UserCode_CmdStartChallenge()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x125BDE0", Offset = "0x125BDE0", VA = "0x125BDE0")]
	protected static void InvokeUserCode_CmdStartChallenge(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x125BF10", Offset = "0x125BF10", VA = "0x125BF10")]
	protected void UserCode_RpcStartChallenge()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x125BF14", Offset = "0x125BF14", VA = "0x125BF14")]
	protected static void InvokeUserCode_RpcStartChallenge(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x125C010", Offset = "0x125C010", VA = "0x125C010")]
	protected void UserCode_CmdRestartChallenge()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x125C038", Offset = "0x125C038", VA = "0x125C038")]
	protected static void InvokeUserCode_CmdRestartChallenge(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x125C168", Offset = "0x125C168", VA = "0x125C168")]
	protected void UserCode_RpcRestartChallenge()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x125C16C", Offset = "0x125C16C", VA = "0x125C16C")]
	protected static void InvokeUserCode_RpcRestartChallenge(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x125C268", Offset = "0x125C268", VA = "0x125C268")]
	protected void UserCode_CmdStopChallenge()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x125C290", Offset = "0x125C290", VA = "0x125C290")]
	protected static void InvokeUserCode_CmdStopChallenge(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x125C3C0", Offset = "0x125C3C0", VA = "0x125C3C0")]
	protected void UserCode_RpcStopChallenge()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x125C3C4", Offset = "0x125C3C4", VA = "0x125C3C4")]
	protected static void InvokeUserCode_RpcStopChallenge(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x125C4C0", Offset = "0x125C4C0", VA = "0x125C4C0")]
	protected void UserCode_CmdLeaveChallengeMode()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x125C4E8", Offset = "0x125C4E8", VA = "0x125C4E8")]
	protected static void InvokeUserCode_CmdLeaveChallengeMode(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x125C618", Offset = "0x125C618", VA = "0x125C618")]
	protected void UserCode_RpcLeaveChallengeMode()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x125C61C", Offset = "0x125C61C", VA = "0x125C61C")]
	protected static void InvokeUserCode_RpcLeaveChallengeMode(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x125C718", Offset = "0x125C718", VA = "0x125C718")]
	protected void UserCode_CmdSetOpenChallengeIntent()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x125C71C", Offset = "0x125C71C", VA = "0x125C71C")]
	protected static void InvokeUserCode_CmdSetOpenChallengeIntent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x125C848", Offset = "0x125C848", VA = "0x125C848")]
	protected void UserCode_RpcSetOpenChallengeIntent()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x125C84C", Offset = "0x125C84C", VA = "0x125C84C")]
	protected static void InvokeUserCode_RpcSetOpenChallengeIntent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x125C944", Offset = "0x125C944", VA = "0x125C944")]
	static ChallengeManager()
	{
	}
}
[Token(Token = "0x20000A5")]
[CreateAssetMenu(fileName = "ChallengeManagerReference", menuName = "GBA/Challenge/Challenge Manager Reference")]
public class ChallengeManagerReference : ScriptableObject
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _isChallengeModeParameter;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _isPartyModeParameter;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("User Intents")]
	private MenuUserIntentGameParameter _userIntentGameParameter;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MenuUserIntent _openChallengeIntent;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MenuUserIntent _leaveChallengeIntent;

	[Token(Token = "0x170000AB")]
	public ChallengeManager Reference
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x125D330", Offset = "0x125D330", VA = "0x125D330")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x125D338", Offset = "0x125D338", VA = "0x125D338")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public rcBoolGameParameter ChallengeModeParameter
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x125D340", Offset = "0x125D340", VA = "0x125D340")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	public bool IsChallengeMode
	{
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x125D348", Offset = "0x125D348", VA = "0x125D348")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AE")]
	public bool IsPartyMode
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x125A4D4", Offset = "0x125A4D4", VA = "0x125A4D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AF")]
	public bool PendingEndedChallenge
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x125D3D8", Offset = "0x125D3D8", VA = "0x125D3D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000003")]
	public event UnityAction OnInitialized
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x125D1F8", Offset = "0x125D1F8", VA = "0x125D1F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x125D294", Offset = "0x125D294", VA = "0x125D294")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x12590EC", Offset = "0x12590EC", VA = "0x12590EC")]
	public void Init(ChallengeManager challengeManager)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1259210", Offset = "0x1259210", VA = "0x1259210")]
	public void Reset()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x125D450", Offset = "0x125D450", VA = "0x125D450")]
	public void ClearPendingEndedChallenge()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x125D4C4", Offset = "0x125D4C4", VA = "0x125D4C4")]
	public void SetPreset(ChallengePreset preset)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x125D57C", Offset = "0x125D57C", VA = "0x125D57C")]
	public void StartChallenge()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x125D610", Offset = "0x125D610", VA = "0x125D610")]
	public void RestartChallenge()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x125D6A4", Offset = "0x125D6A4", VA = "0x125D6A4")]
	public void LeaveChallengeMode()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x125D744", Offset = "0x125D744", VA = "0x125D744")]
	public void LeaveChallengeModeLocally()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x125D7D0", Offset = "0x125D7D0", VA = "0x125D7D0")]
	public void OpenChallengeInfoMenu()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x125D838", Offset = "0x125D838", VA = "0x125D838")]
	public void SetNetworkedOpenChallengeUserIntent()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x125D83C", Offset = "0x125D83C", VA = "0x125D83C")]
	public void SetOpenChallengeUserIntent()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x125D840", Offset = "0x125D840", VA = "0x125D840")]
	public void SetLeaveChallengeUserIntent()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x125D844", Offset = "0x125D844", VA = "0x125D844")]
	public ChallengeManagerReference()
	{
	}
}
[Token(Token = "0x20000A6")]
public class ChallengePlayerSlot : MonoBehaviour
{
	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ChallengeBreakCanvas _breakCanvas;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ChallengeCompleteCanvas _completeCanvas;

	[Token(Token = "0x170000B0")]
	public ChallengeBreakCanvas BreakCanvas
	{
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x125D84C", Offset = "0x125D84C", VA = "0x125D84C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B1")]
	public ChallengeCompleteCanvas CompleteCanvas
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x125D854", Offset = "0x125D854", VA = "0x125D854")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x125D85C", Offset = "0x125D85C", VA = "0x125D85C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1257988", Offset = "0x1257988", VA = "0x1257988")]
	public void ShowBreakCanvas(ChallengeManagerReference challengeManager)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1257B0C", Offset = "0x1257B0C", VA = "0x1257B0C")]
	public void CloseBreakCanvas()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1257C8C", Offset = "0x1257C8C", VA = "0x1257C8C")]
	public void ShowCompleteCanvas(ChallengeManagerReference challengeManager, bool show)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x125D8EC", Offset = "0x125D8EC", VA = "0x125D8EC")]
	public ChallengePlayerSlot()
	{
	}
}
[Token(Token = "0x20000A7")]
[CreateAssetMenu(fileName = "CP_ChallengePreset", menuName = "GBA/Challenge/Preset")]
public class ChallengePreset : ScriptableObject
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LevelDisplaySettings _displaySettings;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnlockableGameplay _unlockable;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _buttonCacheId;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ChallengeLevelData[] _levelsList;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Leaderboard _handsLeaderboard;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Leaderboard _controllersLeaderboard;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Unlockable[] _unlockables;

	[Token(Token = "0x170000B2")]
	public string DisplayName
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x125D8F4", Offset = "0x125D8F4", VA = "0x125D8F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	public Sprite ChallengeIcon
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x125D97C", Offset = "0x125D97C", VA = "0x125D97C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B4")]
	public Leaderboard HandsLeaderboard
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x125D9F8", Offset = "0x125D9F8", VA = "0x125D9F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B5")]
	public Leaderboard ControllersLeaderboard
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0x125DA00", Offset = "0x125DA00", VA = "0x125DA00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B6")]
	public UnlockableGameplay Unlockable
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0x125DA08", Offset = "0x125DA08", VA = "0x125DA08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B7")]
	public string CacheId
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x125DA10", Offset = "0x125DA10", VA = "0x125DA10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B8")]
	public ReadOnlyCollection<ChallengeLevelData> LevelsList
	{
		[Token(Token = "0x6000408")]
		[Address(RVA = "0x125DA18", Offset = "0x125DA18", VA = "0x125DA18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x12597C4", Offset = "0x12597C4", VA = "0x12597C4")]
	public void ApplyPreset(ChallengeManager challengeManager)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x125DA60", Offset = "0x125DA60", VA = "0x125DA60")]
	public float GetPresetTotalDuration()
	{
		return default(float);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x125DAE8", Offset = "0x125DAE8", VA = "0x125DAE8")]
	public ChallengePreset()
	{
	}
}
[Token(Token = "0x20000A8")]
[CreateAssetMenu(fileName = "ChallengePresetsSettings", menuName = "GBA/Challenge/Presets Settings")]
public class ChallengePresetsSettings : ScriptableObject
{
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _presetsPath;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<ChallengePreset> _presets;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<int> OnPresetLoaded;

	[Token(Token = "0x170000B9")]
	public ReadOnlyCollection<ChallengePreset> PresetsList
	{
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1259368", Offset = "0x1259368", VA = "0x1259368")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1258EA4", Offset = "0x1258EA4", VA = "0x1258EA4")]
	public bool IsLastUnlockedPreset(ChallengePreset preset)
	{
		return default(bool);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x125DAF0", Offset = "0x125DAF0", VA = "0x125DAF0")]
	public bool TryGetNextUnlockedPreset(ChallengePreset preset, out int nextPresetIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x125DC5C", Offset = "0x125DC5C", VA = "0x125DC5C")]
	public void OpenNextPreset(ChallengeManagerReference challengeManagerRef)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x125DDA0", Offset = "0x125DDA0", VA = "0x125DDA0")]
	public ChallengePresetsSettings()
	{
	}
}
[Token(Token = "0x20000A9")]
public struct ChallengeRecapData
{
	[Token(Token = "0x20000AA")]
	public struct LevelRecapData
	{
		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LevelSettings LevelId;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Score;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int AttemptedShots;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SuccessfulShots;

		[Token(Token = "0x170000BA")]
		public float SuccessRate
		{
			[Token(Token = "0x6000415")]
			[Address(RVA = "0x125DE90", Offset = "0x125DE90", VA = "0x125DE90")]
			get
			{
				return default(float);
			}
		}
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int FinalScore;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int BestCombo;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public LevelRecapData[] LevelsRecapData;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1259D10", Offset = "0x1259D10", VA = "0x1259D10")]
	public ChallengeRecapData(int levelCount)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x125A38C", Offset = "0x125A38C", VA = "0x125A38C")]
	public void SetLevelRecapData(int levelIndex, LevelSettings levelId, int levelScore, int levelAttemptedShots, int levelSuccessfulShots)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x125DDF8", Offset = "0x125DDF8", VA = "0x125DDF8")]
	public void SetLevelRecapData(int levelIndex, LevelRecapData levelData)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x125B794", Offset = "0x125B794", VA = "0x125B794")]
	public void UpdateBestCombo(int bestCombo)
	{
	}
}
[Token(Token = "0x20000AB")]
[RequireComponent(typeof(GBAEventsListenerBehaviour))]
public class GBAEventsChallengeOverride : MonoBehaviour
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _challengeModeParameter;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _userStartOnChallengeStart;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool _restartOnChallengeRestart;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool _stopOnChallengeStop;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[SerializeField]
	private bool _endOnChallengeEnd;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ContextMenuItem("Find Events", "OnValidate")]
	[SerializeField]
	private ChallengeEventsListener _challengeEventsListener;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GBAEventsListenerBehaviour _gbaEventsListener;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x125DEB8", Offset = "0x125DEB8", VA = "0x125DEB8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x125DF54", Offset = "0x125DF54", VA = "0x125DF54")]
	public void FindChallengeGameParameters()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x125DF58", Offset = "0x125DF58", VA = "0x125DF58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x125E204", Offset = "0x125E204", VA = "0x125E204")]
	private void tryChallengeOverride()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x125E340", Offset = "0x125E340", VA = "0x125E340")]
	private void tryChallengeUnregistration()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x125E470", Offset = "0x125E470", VA = "0x125E470")]
	private void onChallengeModeUpdated(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x125E30C", Offset = "0x125E30C", VA = "0x125E30C")]
	private void overrideGBAEvents()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x125E42C", Offset = "0x125E42C", VA = "0x125E42C")]
	private void cancelEventsOverride()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x125E47C", Offset = "0x125E47C", VA = "0x125E47C")]
	public GBAEventsChallengeOverride()
	{
	}
}
[Token(Token = "0x20000AC")]
public class BallCollisionDetection : MonoBehaviour
{
	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _serverOnly;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask _ballsLayer;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Range(0f, 1f)]
	private float _collisionCoolDown;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcGameEvent _ballCollisionEvent;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, float> _impactsRegistry;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x125E48C", Offset = "0x125E48C", VA = "0x125E48C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x125E4DC", Offset = "0x125E4DC", VA = "0x125E4DC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x125E748", Offset = "0x125E748", VA = "0x125E748")]
	public BallCollisionDetection()
	{
	}
}
[Token(Token = "0x20000AD")]
public class BallTriggerDetection : MonoBehaviour
{
	[Token(Token = "0x20000AE")]
	private struct DetectableBall
	{
		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject BallObject;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NetworkedDispenserRespawn RespawnManager;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityAction OnPhysicsDisabled;
	}

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask _ballsLayer;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _ballsDetectedParam;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<DetectableBall> _currentBalls;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x125E7D8", Offset = "0x125E7D8", VA = "0x125E7D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x125E940", Offset = "0x125E940", VA = "0x125E940")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x125E944", Offset = "0x125E944", VA = "0x125E944")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x125ECCC", Offset = "0x125ECCC", VA = "0x125ECCC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x125EDD8", Offset = "0x125EDD8", VA = "0x125EDD8")]
	private void unregisterBall(GameObject ballObject)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x125E7DC", Offset = "0x125E7DC", VA = "0x125E7DC")]
	public void ResetDetection()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x125EFE8", Offset = "0x125EFE8", VA = "0x125EFE8")]
	public BallTriggerDetection()
	{
	}
}
[Token(Token = "0x20000B1")]
public class HandsCoffinAnimatorController : MonoBehaviour
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Hands")]
	[SerializeField]
	private Animator _handRightTopAnimator;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator _handRightAnimator;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator _handLeftAnimator;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Animator CoffinAnimator;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _handsOut;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _shakeLevel;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	[SerializeField]
	private rcIntGameParameter ComboCounterParameter;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int PARAM_ID_HAND_START;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int PARAM_ID_HANDS_OUT;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly int PARAM_ID_SHAKE;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly int PARAM_ID_SHAKE_ONCE;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x125F170", Offset = "0x125F170", VA = "0x125F170")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x125F254", Offset = "0x125F254", VA = "0x125F254")]
	[ContextMenu("Combo Increase")]
	public void TestOnComboIncrease()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x125F2A4", Offset = "0x125F2A4", VA = "0x125F2A4")]
	[ContextMenu("Combo Decrease")]
	public void TestOnComboDecrease()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x125F2C4", Offset = "0x125F2C4", VA = "0x125F2C4")]
	private void OnComboChange(int toValue, int fromValue, object changedBy)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x125F47C", Offset = "0x125F47C", VA = "0x125F47C")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x125F46C", Offset = "0x125F46C", VA = "0x125F46C")]
	private int GetRandomValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x125F250", Offset = "0x125F250", VA = "0x125F250")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x125F53C", Offset = "0x125F53C", VA = "0x125F53C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x125F620", Offset = "0x125F620", VA = "0x125F620")]
	public HandsCoffinAnimatorController()
	{
	}
}
[Token(Token = "0x20000B2")]
public class StateIdRandomizer : StateMachineBehaviour
{
	[Token(Token = "0x20000B3")]
	public enum ConditionType
	{
		[Token(Token = "0x4000421")]
		EQUALS,
		[Token(Token = "0x4000422")]
		SUPERIOR,
		[Token(Token = "0x4000423")]
		INFERIOR
	}

	[Token(Token = "0x20000B4")]
	public abstract class ConditionalStateIds<T>
	{
		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Value;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int[] StateIds;

		[Token(Token = "0x6000439")]
		public abstract void TryAddConditionalIds(List<int> stateIds);

		[Token(Token = "0x600043A")]
		protected void doAddConditionalIds(List<int> stateIds)
		{
		}

		[Token(Token = "0x600043B")]
		protected ConditionalStateIds()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000B5")]
	public class BoolConditionalStateIds : ConditionalStateIds<bool>
	{
		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public rcBoolGameParameter Parameter;

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x125F948", Offset = "0x125F948", VA = "0x125F948", Slot = "4")]
		public override void TryAddConditionalIds(List<int> stateIds)
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x125F9CC", Offset = "0x125F9CC", VA = "0x125F9CC")]
		public BoolConditionalStateIds()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000B6")]
	public class IntConditionalStateIds : ConditionalStateIds<int>
	{
		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public rcIntGameParameter Parameter;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConditionType Condition;

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x125FA14", Offset = "0x125FA14", VA = "0x125FA14", Slot = "4")]
		public override void TryAddConditionalIds(List<int> stateIds)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x125FAE4", Offset = "0x125FAE4", VA = "0x125FAE4")]
		public IntConditionalStateIds()
		{
		}
	}

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcIntGameParameter StateIdParameter;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ServerOnly;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] StateIds;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoolConditionalStateIds[] BoolConditions;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntConditionalStateIds[] IntConditions;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<int> _runtimeStateIds;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x125F6F4", Offset = "0x125F6F4", VA = "0x125F6F4", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x125F940", Offset = "0x125F940", VA = "0x125F940")]
	public StateIdRandomizer()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TriggerAfterDelay : StateMachineBehaviour
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcGameEvent TriggerEvent;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.1f, 60f)]
	public float Delay;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ServerOnly;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _timer;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x125FB2C", Offset = "0x125FB2C", VA = "0x125FB2C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x125FB34", Offset = "0x125FB34", VA = "0x125FB34", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x125FC14", Offset = "0x125FC14", VA = "0x125FC14")]
	public TriggerAfterDelay()
	{
	}
}
[Token(Token = "0x20000B8")]
public class ChildCountObserver : MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent<int> OnChildCountChange;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x125FC24", Offset = "0x125FC24", VA = "0x125FC24")]
	[ContextMenu("Force Update")]
	public void SendNotification()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x125FCA0", Offset = "0x125FCA0", VA = "0x125FCA0")]
	public ChildCountObserver()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ComboCounter : MonoBehaviour
{
	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator ComboAnimator;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI CounterText;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _challengeModeParameter;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GBAPlayerSystem _owningPlayer;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ComboDetection _comboDetection;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _callbacksReady;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int INIT_STATE_HASH;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly int PLUS_STATE_HASH;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly int COMBO_STATE_HASH;

	[Token(Token = "0x170000BB")]
	public bool IsLocallyOwned
	{
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x125FCA8", Offset = "0x125FCA8", VA = "0x125FCA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x125FD30", Offset = "0x125FD30", VA = "0x125FD30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x126019C", Offset = "0x126019C", VA = "0x126019C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x12604B8", Offset = "0x12604B8", VA = "0x12604B8")]
	public void SetOwningPlayer(GBAPlayerSystem owningPlayer)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x12601A0", Offset = "0x12601A0", VA = "0x12601A0")]
	private void cleanCallbacks()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x125FE80", Offset = "0x125FE80", VA = "0x125FE80")]
	private void setupCallbacks()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1260738", Offset = "0x1260738", VA = "0x1260738")]
	public void Setup(ComboDetection comboDetection)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x125FDDC", Offset = "0x125FDDC", VA = "0x125FDDC")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x125FE2C", Offset = "0x125FE2C", VA = "0x125FE2C")]
	public void OnCombo(int comboCount)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x126085C", Offset = "0x126085C", VA = "0x126085C")]
	public void OnComboBreak()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1260884", Offset = "0x1260884", VA = "0x1260884")]
	private void onRemoteCombo()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x12606F0", Offset = "0x12606F0", VA = "0x12606F0")]
	private void updateCounterText(int count)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x12608A0", Offset = "0x12608A0", VA = "0x12608A0")]
	public ComboCounter()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ComboDetection : HoopGoalListener
{
	[Token(Token = "0x20000BB")]
	public enum BallState
	{
		[Token(Token = "0x400044F")]
		Dispensing,
		[Token(Token = "0x4000450")]
		Ready,
		[Token(Token = "0x4000451")]
		WaitingPlayer,
		[Token(Token = "0x4000452")]
		InGame,
		[Token(Token = "0x4000453")]
		Ignored
	}

	[Serializable]
	[Token(Token = "0x20000BC")]
	public struct DispensableState
	{
		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IDispensable Dispensable;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NetworkedComboState NetworkComboState;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BallState _state;

		[Token(Token = "0x170000BE")]
		public BallState State
		{
			[Token(Token = "0x6000467")]
			[Address(RVA = "0x12626A4", Offset = "0x12626A4", VA = "0x12626A4")]
			get
			{
				return default(BallState);
			}
			[Token(Token = "0x6000468")]
			[Address(RVA = "0x1262234", Offset = "0x1262234", VA = "0x1262234")]
			set
			{
			}
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x1262254", Offset = "0x1262254", VA = "0x1262254")]
		public void RefreshNetworkedState()
		{
		}
	}

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ComboDetection Instance;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcIntGameParameter _comboCountParameter;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _challengeModeParameter;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask _leftHandLayer;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private LayerMask _rightHandLayer;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent<int> OnCombo;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnComboBroken;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnShotSuccess;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnShotFailed;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ComboDetectionReference ComboDetectionReference;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject[] _spawnBalls;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider[] _ballColliders;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private DispensableState[] _ballStates;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private rcProxyBehaviour[] _ballProxies;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UnityAction[] _ballUnspawnedCallbacks;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UnityAction[] _ballDispensedCallbacks;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UnityAction<Collision>[] _ballTouchedHandsCallbacks;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ReadOnlyCollection<ShotArea> _shotAreas;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isDetecting;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _initialized;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[HideInInspector]
	public bool IsSuperCombo;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	public bool UseDispensingState;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dispenser _temporaryDispenser;

	[Token(Token = "0x170000BC")]
	public ReadOnlyCollection<DispensableState> BallStates
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x1260948", Offset = "0x1260948", VA = "0x1260948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public int ComboCount
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x12606A8", Offset = "0x12606A8", VA = "0x12606A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000454")]
		[Address(RVA = "0x1260A80", Offset = "0x1260A80", VA = "0x1260A80")]
		set
		{
		}
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x12609A0", Offset = "0x12609A0", VA = "0x12609A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1260A9C", Offset = "0x1260A9C", VA = "0x1260A9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1260B20", Offset = "0x1260B20", VA = "0x1260B20")]
	public void StartComboDetection(Dispenser dispenser)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1260EE0", Offset = "0x1260EE0", VA = "0x1260EE0")]
	private void DelayedStart()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1260C9C", Offset = "0x1260C9C", VA = "0x1260C9C")]
	private void ImmediateStart(Dispenser dispenser)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1261FD8", Offset = "0x1261FD8", VA = "0x1261FD8")]
	public void StopComboDetection()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x12620CC", Offset = "0x12620CC", VA = "0x12620CC", Slot = "4")]
	public override void OnGoal(Collider ballCollider)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x126154C", Offset = "0x126154C", VA = "0x126154C")]
	private void initializeBalls(GameObject[] spawnBalls)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1261E08", Offset = "0x1261E08", VA = "0x1261E08")]
	private void initializeShotAreas()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1261390", Offset = "0x1261390", VA = "0x1261390")]
	private void cleanUpShotAreas()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1260F78", Offset = "0x1260F78", VA = "0x1260F78")]
	public void CleanUpBalls()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x12622D4", Offset = "0x12622D4", VA = "0x12622D4")]
	private void onShotAreaEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1262390", Offset = "0x1262390", VA = "0x1262390")]
	private void onShotAreaExit(Collider collider)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x12624E0", Offset = "0x12624E0", VA = "0x12624E0")]
	private void onBallTouchHand(Collision collision, int ballIndex)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x12625D4", Offset = "0x12625D4", VA = "0x12625D4")]
	private void onBallDispensed(int ballIndex)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1262638", Offset = "0x1262638", VA = "0x1262638")]
	private void onBallUnspawned(int ballIndex)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1262464", Offset = "0x1262464", VA = "0x1262464")]
	private void shotFailed()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x126269C", Offset = "0x126269C", VA = "0x126269C")]
	public ComboDetection()
	{
	}
}
[Token(Token = "0x20000BE")]
[CreateAssetMenu(fileName = "ComboDetectionReference", menuName = "GBA/Combo Detection Reference")]
public class ComboDetectionReference : ScriptableObject
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ComboDetection Reference;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1262710", Offset = "0x1262710", VA = "0x1262710")]
	public ComboDetectionReference()
	{
	}
}
[Token(Token = "0x20000BF")]
public class NetworkedComboState : NetworkBehaviour
{
	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SyncVar]
	private ComboDetection.BallState _comboState;

	[Token(Token = "0x170000BF")]
	public ComboDetection.BallState ComboState
	{
		[Token(Token = "0x600046F")]
		[Address(RVA = "0x1262718", Offset = "0x1262718", VA = "0x1262718")]
		get
		{
			return default(ComboDetection.BallState);
		}
	}

	[Token(Token = "0x170000C0")]
	public ComboDetection.BallState Network_comboState
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0x126282C", Offset = "0x126282C", VA = "0x126282C")]
		get
		{
			return default(ComboDetection.BallState);
		}
		[Token(Token = "0x6000475")]
		[Address(RVA = "0x1262834", Offset = "0x1262834", VA = "0x1262834")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x12626AC", Offset = "0x12626AC", VA = "0x12626AC")]
	public void SetComboState(ComboDetection.BallState comboState)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1262720", Offset = "0x1262720", VA = "0x1262720")]
	[Command(requiresAuthority = false)]
	public void CmdSetComboState(ComboDetection.BallState comboState)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1262820", Offset = "0x1262820", VA = "0x1262820")]
	public NetworkedComboState()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1262828", Offset = "0x1262828", VA = "0x1262828")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x12628D4", Offset = "0x12628D4", VA = "0x12628D4")]
	protected void UserCode_CmdSetComboState(ComboDetection.BallState comboState)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x12628D8", Offset = "0x12628D8", VA = "0x12628D8")]
	protected static void InvokeUserCode_CmdSetComboState(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x1262A2C", Offset = "0x1262A2C", VA = "0x1262A2C")]
	static NetworkedComboState()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1262B44", Offset = "0x1262B44", VA = "0x1262B44", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1262BF4", Offset = "0x1262BF4", VA = "0x1262BF4", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x20000C0")]
public class SuperCombo : MonoBehaviour
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ComboDetectionReference _comboDetectionReference;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ComboDetection _comboDetection;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _initialized;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Space]
	private int _comboAtSuperComboStart;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int ComboDuringSuperCombo;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	public Animator SuperComboAnimator;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly int INIT_STATE_HASH;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int ENABLE_BOOL_HASH;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI SuperComboText;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space]
	public GameObject ComboToReplace;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ComboCounter _comboCounter;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x1262CA0", Offset = "0x1262CA0", VA = "0x1262CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x1262D54", Offset = "0x1262D54", VA = "0x1262D54")]
	public void EnableSuperCombo()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x1262DDC", Offset = "0x1262DDC", VA = "0x1262DDC")]
	public void DisableCombo()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1262E68", Offset = "0x1262E68", VA = "0x1262E68")]
	public void ResetSuperCombo()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1262EC0", Offset = "0x1262EC0", VA = "0x1262EC0")]
	public SuperCombo()
	{
	}
}
[Token(Token = "0x20000C1")]
public class SuperComboScheme : MonoBehaviour
{
	[Token(Token = "0x20000C2")]
	[CompilerGenerated]
	private sealed class <StartSuperComboScheme>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SuperComboScheme <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0x1263130", Offset = "0x1263130", VA = "0x1263130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0x1263178", Offset = "0x1263178", VA = "0x1263178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x1263010", Offset = "0x1263010", VA = "0x1263010")]
		[DebuggerHidden]
		public <StartSuperComboScheme>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x1263048", Offset = "0x1263048", VA = "0x1263048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x126304C", Offset = "0x126304C", VA = "0x126304C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x1263138", Offset = "0x1263138", VA = "0x1263138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SuperCombo superCombo;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SuperComboActivationDelay;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _superComboEnable;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1262F4C", Offset = "0x1262F4C", VA = "0x1262F4C")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1262F9C", Offset = "0x1262F9C", VA = "0x1262F9C")]
	[IteratorStateMachine(typeof(<StartSuperComboScheme>d__4))]
	private IEnumerator StartSuperComboScheme()
	{
		return null;
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1262F74", Offset = "0x1262F74", VA = "0x1262F74")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1263038", Offset = "0x1263038", VA = "0x1263038")]
	public SuperComboScheme()
	{
	}
}
[Token(Token = "0x20000C3")]
public class CompleteHauntedAudioDisabler : MonoBehaviour
{
	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcAudioEvent CompleteAudioEventTostop;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1263180", Offset = "0x1263180", VA = "0x1263180")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1263200", Offset = "0x1263200", VA = "0x1263200")]
	public CompleteHauntedAudioDisabler()
	{
	}
}
[Token(Token = "0x20000C4")]
public class DaltonismeEnabler : MonoBehaviour
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcBoolGameParameter DaltonismeParameter;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _currentDaltonismeStatus;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer BallRenderer;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MaterialIndex;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _material;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _daltonismeMaterialParameterName;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject FigureIcone;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1263208", Offset = "0x1263208", VA = "0x1263208")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1263388", Offset = "0x1263388", VA = "0x1263388")]
	public DaltonismeEnabler()
	{
	}
}
[Token(Token = "0x20000C5")]
public class DebugCombo : MonoBehaviour
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcIntGameParameter _comboParameter;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ComboDetection _comboDetection;

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x12633E0", Offset = "0x12633E0", VA = "0x12633E0")]
	[ContextMenu("Increment Combo")]
	public void IncrementCombo()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1263470", Offset = "0x1263470", VA = "0x1263470")]
	[ContextMenu("Break Combo")]
	public void BreakCombo()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x12634B4", Offset = "0x12634B4", VA = "0x12634B4")]
	public DebugCombo()
	{
	}
}
[Token(Token = "0x20000C6")]
public class LocalRankingDisplay : MonoBehaviour
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayersRankingReference _rankingManagerReference;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RankedPlayerDisplay[] _playerDisplays;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x12634BC", Offset = "0x12634BC", VA = "0x12634BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1263808", Offset = "0x1263808", VA = "0x1263808")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x12635A0", Offset = "0x12635A0", VA = "0x12635A0")]
	private void refreshDisplay()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1263C04", Offset = "0x1263C04", VA = "0x1263C04")]
	public LocalRankingDisplay()
	{
	}
}
[Token(Token = "0x20000C7")]
public class MenuArcadeInput : rcFSM
{
	[Token(Token = "0x20000C8")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x4000482")]
		BACK,
		[Token(Token = "0x4000483")]
		COUNT
	}

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _baseColor;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _validColor;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public JoystickInputData InputData;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 NewHeadOffset;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _cachedHeadOffset;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x1263C0C", Offset = "0x1263C0C", VA = "0x1263C0C", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1263D34", Offset = "0x1263D34", VA = "0x1263D34", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1263D7C", Offset = "0x1263D7C", VA = "0x1263D7C", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x12642A4", Offset = "0x12642A4", VA = "0x12642A4")]
	public MenuArcadeInput()
	{
	}
}
[Token(Token = "0x20000C9")]
public class MenuGameParametersDisplay : rcFSM
{
	[Token(Token = "0x20000CA")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x4000496")]
		BACK,
		[Token(Token = "0x4000497")]
		COUNT
	}

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _highColor;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _baseColor;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _validColor;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcBoolGameParameter[] BoolParameters;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcIntGameParameter[] IntParameters;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public rcFloatGameParameter[] FloatParameters;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public rcStringGameParameter[] StringParameters;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public rcVector3GameParameter[] Vector3Parameters;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public rcQuaternionGameParameter[] QuaternionParameters;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public rcTransformGameParameter[] TransformParameters;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public rcGameObjectGameParameter[] GameObjectParameters;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 NewHeadOffset;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 _cachedHeadOffset;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x12643DC", Offset = "0x12643DC", VA = "0x12643DC", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1264504", Offset = "0x1264504", VA = "0x1264504", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x126454C", Offset = "0x126454C", VA = "0x126454C", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1264F58", Offset = "0x1264F58", VA = "0x1264F58")]
	public MenuGameParametersDisplay()
	{
	}
}
[Token(Token = "0x20000CB")]
public class MenuSteamVr : rcFSM
{
	[Token(Token = "0x20000CC")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x40004A1")]
		BACK,
		[Token(Token = "0x40004A2")]
		COUNT
	}

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _baseColor;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _validColor;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 NewHeadOffset;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _cachedHeadOffset;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x12650BC", Offset = "0x12650BC", VA = "0x12650BC", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x12651E4", Offset = "0x12651E4", VA = "0x12651E4", Slot = "19")]
	protected override void OnStateExited()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x126522C", Offset = "0x126522C", VA = "0x126522C", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x126542C", Offset = "0x126542C", VA = "0x126542C")]
	public MenuSteamVr()
	{
	}
}
[Token(Token = "0x20000CD")]
public class RankedPlayerDisplay : MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _playerNameText;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _trophyIcone;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Text _scoreText;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FontType IdleFont;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private FontType LocalPlayerFont;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LocalizedFontManager _fontManager;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GBAPlayerSystem _player;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _rank;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1265564", Offset = "0x1265564", VA = "0x1265564")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1265670", Offset = "0x1265670", VA = "0x1265670")]
	private void setFontManager()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x12638D8", Offset = "0x12638D8", VA = "0x12638D8")]
	public void SetDisplay(GBAPlayerSystem player, int displayRank)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x12657D0", Offset = "0x12657D0", VA = "0x12657D0")]
	private void updateFont(TMP_FontAsset font)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x12656E8", Offset = "0x12656E8", VA = "0x12656E8")]
	private void refreshPlayerDisplay(string newName)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x126589C", Offset = "0x126589C", VA = "0x126589C")]
	public RankedPlayerDisplay()
	{
	}
}
[Token(Token = "0x20000CE")]
public class DelayUnityEvent : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000CF")]
	public class DelayEvent
	{
		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Delay;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent Event;

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x1265A00", Offset = "0x1265A00", VA = "0x1265A00")]
		public DelayEvent()
		{
		}
	}

	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <DelayEventEnum>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent delayEvent;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AF")]
			[Address(RVA = "0x1266AF0", Offset = "0x1266AF0", VA = "0x1266AF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B1")]
			[Address(RVA = "0x1266B38", Offset = "0x1266B38", VA = "0x1266B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x1266A08", Offset = "0x1266A08", VA = "0x1266A08")]
		[DebuggerHidden]
		public <DelayEventEnum>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x1266A30", Offset = "0x1266A30", VA = "0x1266A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x1266A34", Offset = "0x1266A34", VA = "0x1266A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x1266AF8", Offset = "0x1266AF8", VA = "0x1266AF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<DelayEvent> Events;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x12658A4", Offset = "0x12658A4", VA = "0x12658A4")]
	public void Enable()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x126596C", Offset = "0x126596C", VA = "0x126596C")]
	[IteratorStateMachine(typeof(<DelayEventEnum>d__3))]
	private IEnumerator DelayEventEnum(float delay, UnityEvent delayEvent)
	{
		return null;
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x12659F0", Offset = "0x12659F0", VA = "0x12659F0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x12659F8", Offset = "0x12659F8", VA = "0x12659F8")]
	public DelayUnityEvent()
	{
	}
}
[Token(Token = "0x20000D1")]
public class DemoBannerEnabler : MonoBehaviour
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Banner;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1266B40", Offset = "0x1266B40", VA = "0x1266B40")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1266B44", Offset = "0x1266B44", VA = "0x1266B44")]
	public DemoBannerEnabler()
	{
	}
}
[Token(Token = "0x20000D2")]
public class DemoBuyButton : MonoBehaviour
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject CanvasBuyGame;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _SteamURL;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _storeSteamURL;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1266B4C", Offset = "0x1266B4C", VA = "0x1266B4C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1266B50", Offset = "0x1266B50", VA = "0x1266B50")]
	public void OnBuyByttonPressed()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1266B54", Offset = "0x1266B54", VA = "0x1266B54")]
	public DemoBuyButton()
	{
	}
}
[Token(Token = "0x20000D3")]
public class DemoObjectEnabler : MonoBehaviour
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _enableInDemo;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1266BD8", Offset = "0x1266BD8", VA = "0x1266BD8")]
	public void TryEnable()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1266BDC", Offset = "0x1266BDC", VA = "0x1266BDC")]
	public DemoObjectEnabler()
	{
	}
}
[Token(Token = "0x20000D4")]
public class DemoMenuButtonEnabler : MonoBehaviour
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Button;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ButtonLock;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1266BE4", Offset = "0x1266BE4", VA = "0x1266BE4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1266BE8", Offset = "0x1266BE8", VA = "0x1266BE8")]
	private void BlockButton()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1266C20", Offset = "0x1266C20", VA = "0x1266C20")]
	private void UnBlockButton()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1266C58", Offset = "0x1266C58", VA = "0x1266C58")]
	public DemoMenuButtonEnabler()
	{
	}
}
[Token(Token = "0x20000D5")]
public class FTEManager : rcSingleton<FTEManager>
{
	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnlockableManagerSettings _settings;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _userFolderCache;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _FTECompleted;

	[Token(Token = "0x170000C5")]
	private string UserFolderPathCache
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x1266C60", Offset = "0x1266C60", VA = "0x1266C60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C6")]
	private string FTEFilePath
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x1266CD4", Offset = "0x1266CD4", VA = "0x1266CD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public bool FTECompleted
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x1266D54", Offset = "0x1266D54", VA = "0x1266D54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1266D5C", Offset = "0x1266D5C", VA = "0x1266D5C")]
	public void CompleteFTE()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1266D68", Offset = "0x1266D68", VA = "0x1266D68")]
	private void Save()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1266DF4", Offset = "0x1266DF4", VA = "0x1266DF4")]
	private void Load()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1266E34", Offset = "0x1266E34", VA = "0x1266E34", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1266E84", Offset = "0x1266E84", VA = "0x1266E84")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1266E88", Offset = "0x1266E88", VA = "0x1266E88")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1266E94", Offset = "0x1266E94", VA = "0x1266E94")]
	public FTEManager()
	{
	}
}
[Token(Token = "0x20000D6")]
public class FTEUtility : MonoBehaviour
{
	[Token(Token = "0x20000D7")]
	[CompilerGenerated]
	private sealed class <flipArcadeControlsCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FTEUtility <>4__this;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Bounds <controlsBounds>5__2;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <handsTooClose>5__3;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <bonesCount>5__4;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WaitForSeconds <yieldForSeconds>5__5;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0x12676F4", Offset = "0x12676F4", VA = "0x12676F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x126773C", Offset = "0x126773C", VA = "0x126773C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1267158", Offset = "0x1267158", VA = "0x1267158")]
		[DebuggerHidden]
		public <flipArcadeControlsCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x12674E4", Offset = "0x12674E4", VA = "0x12674E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x12674E8", Offset = "0x12674E8", VA = "0x12674E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x12676FC", Offset = "0x12676FC", VA = "0x12676FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _handsScanningRoot;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer _arcadeControlsRenderer;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator _arcadeControlsAnimator;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Range(0f, 1f)]
	private float _minHands2ControlsDistance;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	[SerializeField]
	private float _distanceRefreshTime;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _buttonValidateHighlight;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IEnumerator _flipControlsCoroutine;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Transform> _handsBones;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _sqrMinDistance;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly int ANIM_BOOL_HASH_FTE_COMPLETED;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1266F00", Offset = "0x1266F00", VA = "0x1266F00")]
	public void MarkFTELevelAsCompleted()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1266F78", Offset = "0x1266F78", VA = "0x1266F78")]
	public void InitArcadeControls()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x126708C", Offset = "0x126708C", VA = "0x126708C")]
	public void ShowArcadeControls(bool show)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x12670E4", Offset = "0x12670E4", VA = "0x12670E4")]
	[IteratorStateMachine(typeof(<flipArcadeControlsCoroutine>d__13))]
	private IEnumerator flipArcadeControlsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1267180", Offset = "0x1267180", VA = "0x1267180")]
	private void getHandBones()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x12673EC", Offset = "0x12673EC", VA = "0x12673EC")]
	public void ShowFTEObjects(bool show)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x126740C", Offset = "0x126740C", VA = "0x126740C")]
	public void ShowButtonValidateHilight()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x126742C", Offset = "0x126742C", VA = "0x126742C")]
	public FTEUtility()
	{
	}
}
[Token(Token = "0x20000D8")]
public class GameModeManager : MonoBehaviour
{
	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayerRoom;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayerModeParam;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NetworkedRoomManager roomManager;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1267744", Offset = "0x1267744", VA = "0x1267744")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x12678B0", Offset = "0x12678B0", VA = "0x12678B0")]
	private void updateNetworkMode(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1267920", Offset = "0x1267920", VA = "0x1267920")]
	private void updateNetworkModeIfClient(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1267940", Offset = "0x1267940", VA = "0x1267940")]
	public GameModeManager()
	{
	}
}
[Token(Token = "0x20000D9")]
public class GameVersionHandler : MonoBehaviour
{
	[Token(Token = "0x20000DA")]
	public struct GameVersion
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Major;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Minor;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Patch;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameVersion DefaultVersion;

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x12682BC", Offset = "0x12682BC", VA = "0x12682BC")]
		public GameVersion(int major = 0, int minor = 0, int patch = 0)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x12679C8", Offset = "0x12679C8", VA = "0x12679C8")]
		public static GameVersion FromString(string version)
		{
			return default(GameVersion);
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x1268284", Offset = "0x1268284", VA = "0x1268284")]
		public static bool operator ==(GameVersion a, GameVersion b)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x12682C8", Offset = "0x12682C8", VA = "0x12682C8")]
		public static bool operator !=(GameVersion a, GameVersion b)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1267BAC", Offset = "0x1267BAC", VA = "0x1267BAC")]
		public static bool operator >(GameVersion a, GameVersion b)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1268360", Offset = "0x1268360", VA = "0x1268360")]
		public static bool operator <(GameVersion a, GameVersion b)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x126842C", Offset = "0x126842C", VA = "0x126842C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x12684E4", Offset = "0x12684E4", VA = "0x12684E4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x12686D8", Offset = "0x12686D8", VA = "0x12686D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnNewMajorVersion;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnNewMinorVersion;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnNewPatch;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameVersion _oldVersion;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private GameVersion _newVersion;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1267948", Offset = "0x1267948", VA = "0x1267948")]
	public void SetVersions(string oldVersionStr, string newVersionStr)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1267AC4", Offset = "0x1267AC4", VA = "0x1267AC4")]
	public void CallVersionChangedCallbacks()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1267BE8", Offset = "0x1267BE8", VA = "0x1267BE8")]
	public bool IncreasedGameVersion()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1267C88", Offset = "0x1267C88", VA = "0x1267C88")]
	public void HandleSaveConversion(UnlockableManager unlockManager, UnlockableManagerSettings unlockSettings, string oldSaveContentStr)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x12680D8", Offset = "0x12680D8", VA = "0x12680D8")]
	public void HandlePostSaveConversion(UnlockableManagerSettings unlockSettings)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1267CA0", Offset = "0x1267CA0", VA = "0x1267CA0")]
	private static void ConvertDefault_To_1_2_X(GameVersion oldVersion, UnlockableManager unlockManager, string oldSaveContentStr)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x12680F8", Offset = "0x12680F8", VA = "0x12680F8")]
	private static void Convert_1_2_X_To_1_3_X(GameVersion oldVersion, GameVersion newVersion, UnlockableManagerSettings unlockSettings)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x12682B4", Offset = "0x12682B4", VA = "0x12682B4")]
	public GameVersionHandler()
	{
	}
}
[Token(Token = "0x20000DC")]
public class GBAStoryManager : rcStoryManager
{
	[Serializable]
	[Token(Token = "0x20000DD")]
	public struct SystemLanguageMapping
	{
		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SystemLanguage UnityLanguage;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public rcLanguage RcLanguage;
	}

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("Custom Localization")]
	private List<SystemLanguageMapping> _languageMapping;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1268990", Offset = "0x1268990", VA = "0x1268990", Slot = "13")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1268B88", Offset = "0x1268B88", VA = "0x1268B88")]
	public void SetSystemLanguage()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1268C80", Offset = "0x1268C80", VA = "0x1268C80")]
	public GBAStoryManager()
	{
	}
}
[Token(Token = "0x20000DE")]
public class GBATouchable : MonoBehaviour, rcITouchable
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnTouched;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnUnTouched;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private rcInteractiveHand _touchingHand;

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1268DFC", Offset = "0x1268DFC", VA = "0x1268DFC", Slot = "7")]
	public GameObject GetObject()
	{
		return null;
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1268E04", Offset = "0x1268E04", VA = "0x1268E04", Slot = "8")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1268E44", Offset = "0x1268E44", VA = "0x1268E44", Slot = "6")]
	public void RemoveOwner()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1268E48", Offset = "0x1268E48", VA = "0x1268E48", Slot = "4")]
	public void StartTouching(rcInteractiveHand hand)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1268EE8", Offset = "0x1268EE8", VA = "0x1268EE8", Slot = "5")]
	public void StopTouching(rcInteractiveHand hand)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1268F8C", Offset = "0x1268F8C", VA = "0x1268F8C")]
	[ContextMenu("Touch")]
	private void SimulateTouch()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1268FA0", Offset = "0x1268FA0", VA = "0x1268FA0")]
	[ContextMenu("UnTouch")]
	private void SimulateUnTouch()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1268FB4", Offset = "0x1268FB4", VA = "0x1268FB4")]
	public GBATouchable()
	{
	}
}
[Token(Token = "0x20000DF")]
public class GetAnchorOffset : MonoBehaviour
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcFloatGameParameter _anchorOffsetParameter;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _localPlayerSpawnedParameter;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _neckTransform;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1268FBC", Offset = "0x1268FBC", VA = "0x1268FBC")]
	public void SetupAnchorOffset()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x12690D8", Offset = "0x12690D8", VA = "0x12690D8")]
	private void setAvatarNeckOffset()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x12692E8", Offset = "0x12692E8", VA = "0x12692E8")]
	private void onLocalPlayerSpawned(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1269448", Offset = "0x1269448", VA = "0x1269448")]
	public GetAnchorOffset()
	{
	}
}
[Token(Token = "0x20000E0")]
public class HandMagnetEnabler : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcGameObjectGameParameter _magnetObjectParameter;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LevelsManager _levelsManager;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayStateParameter _playState;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ChallengeManager _challengeManager;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isInitialized;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1269450", Offset = "0x1269450", VA = "0x1269450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1269AF8", Offset = "0x1269AF8", VA = "0x1269AF8")]
	private void enableHandMagnet(bool enable)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1269C64", Offset = "0x1269C64", VA = "0x1269C64")]
	private void disableAtStart(GameObject toValue, GameObject fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1269740", Offset = "0x1269740", VA = "0x1269740")]
	private void initLevelsManager()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1269998", Offset = "0x1269998", VA = "0x1269998")]
	private void initChallengeManager()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1269D10", Offset = "0x1269D10", VA = "0x1269D10")]
	public HandMagnetEnabler()
	{
	}
}
[Token(Token = "0x20000E1")]
public class GrabJauge : Jauge
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GrabObjectPlayType GrabPlayType;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1269D38", Offset = "0x1269D38", VA = "0x1269D38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1269DD4", Offset = "0x1269DD4", VA = "0x1269DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1269F34", Offset = "0x1269F34", VA = "0x1269F34")]
	public GrabJauge()
	{
	}
}
[Token(Token = "0x20000E2")]
public class HandMagnetDisabler : MonoBehaviour
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcGameObjectGameParameter _magnetObjectParameter;

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1269F44", Offset = "0x1269F44", VA = "0x1269F44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x126A010", Offset = "0x126A010", VA = "0x126A010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x126A0DC", Offset = "0x126A0DC", VA = "0x126A0DC")]
	public HandMagnetDisabler()
	{
	}
}
[Token(Token = "0x20000E3")]
public class HandPoseTrigger : MonoBehaviour
{
	[Token(Token = "0x20000E4")]
	[CompilerGenerated]
	private sealed class <WaitToResetLeftHandPose>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandPoseTrigger <>4__this;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0x126AD90", Offset = "0x126AD90", VA = "0x126AD90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0x126ADD8", Offset = "0x126ADD8", VA = "0x126ADD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x126AA94", Offset = "0x126AA94", VA = "0x126AA94")]
		[DebuggerHidden]
		public <WaitToResetLeftHandPose>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x126AC8C", Offset = "0x126AC8C", VA = "0x126AC8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x126AC90", Offset = "0x126AC90", VA = "0x126AC90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x126AD98", Offset = "0x126AD98", VA = "0x126AD98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private sealed class <WaitToResetRightHandPose>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandPoseTrigger <>4__this;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0x126AEE8", Offset = "0x126AEE8", VA = "0x126AEE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x126AF30", Offset = "0x126AF30", VA = "0x126AF30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x126AABC", Offset = "0x126AABC", VA = "0x126AABC")]
		[DebuggerHidden]
		public <WaitToResetRightHandPose>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x126ADE0", Offset = "0x126ADE0", VA = "0x126ADE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x126ADE4", Offset = "0x126ADE4", VA = "0x126ADE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x126AEF0", Offset = "0x126AEF0", VA = "0x126AEF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask AvatarLeftHandLayerMask;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask AvatarRightHandLayerMask;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MinCollidersHandInTriggerZone;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DelayBeforeResetingHandPose;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Collider> _leftHandColliders;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Collider> _rightHandColliders;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine[] _waitToResetHands;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds _resetYieldInstruction;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private rcAvatar _cachedLocalAvatar;

	[Token(Token = "0x170000CA")]
	private rcAvatar localAvatar
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x126A0E4", Offset = "0x126A0E4", VA = "0x126A0E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x126A2E4", Offset = "0x126A2E4", VA = "0x126A2E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x126A78C", Offset = "0x126A78C", VA = "0x126A78C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x126A9AC", Offset = "0x126A9AC", VA = "0x126A9AC")]
	[IteratorStateMachine(typeof(<WaitToResetLeftHandPose>d__13))]
	private IEnumerator WaitToResetLeftHandPose()
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x126AA20", Offset = "0x126AA20", VA = "0x126AA20")]
	[IteratorStateMachine(typeof(<WaitToResetRightHandPose>d__14))]
	private IEnumerator WaitToResetRightHandPose()
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x126AAE4", Offset = "0x126AAE4", VA = "0x126AAE4")]
	private void ResetHandPose(bool leftHand)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x126AB98", Offset = "0x126AB98", VA = "0x126AB98")]
	public HandPoseTrigger()
	{
	}
}
[Token(Token = "0x20000E6")]
public class HideOnBuild : MonoBehaviour
{
	[Token(Token = "0x6000520")]
	[Address(RVA = "0x126AF38", Offset = "0x126AF38", VA = "0x126AF38")]
	public HideOnBuild()
	{
	}
}
[Token(Token = "0x20000E7")]
public class HoopAudio : MonoBehaviour
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcProxyBehaviour ProxyBehaviour;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask BallLayer;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcAudioEvent ScoreSound;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcAudioSource AudioSource;

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x126AF40", Offset = "0x126AF40", VA = "0x126AF40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x126B070", Offset = "0x126B070", VA = "0x126B070")]
	private void onCollisionEnter(Collider col)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x126B10C", Offset = "0x126B10C", VA = "0x126B10C")]
	public HoopAudio()
	{
	}
}
[Token(Token = "0x20000E8")]
public class HoopBonusCounter : MonoBehaviour
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator BonusAnimator;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI CounterText;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _currentBonusCount;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShotsManager ShotsManagerScript;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StepingHoop StepingHoopScript;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _scoreAtEachStep;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x126B114", Offset = "0x126B114", VA = "0x126B114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x126B138", Offset = "0x126B138", VA = "0x126B138")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x126B1A0", Offset = "0x126B1A0", VA = "0x126B1A0")]
	public void BonusCountChange(int bonusCount, bool score)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x126B244", Offset = "0x126B244", VA = "0x126B244")]
	private void updateShotManager()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x126B1E0", Offset = "0x126B1E0", VA = "0x126B1E0")]
	public void OnBonus(int bonusCount)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x126B2F4", Offset = "0x126B2F4", VA = "0x126B2F4")]
	private void updateCounterText(int count)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x126B33C", Offset = "0x126B33C", VA = "0x126B33C")]
	public HoopBonusCounter()
	{
	}
}
[Token(Token = "0x20000E9")]
[RequireComponent(typeof(HoopCapManager))]
public class HoopCapClosedCounter : MonoBehaviour
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HoopCapManager _hoopCapManager;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _hoopCapCount;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _currentCapClosed;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int CapToCloseLeftCount;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent AllHoopCapClosedEvent;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x126B344", Offset = "0x126B344", VA = "0x126B344")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x126B4DC", Offset = "0x126B4DC", VA = "0x126B4DC")]
	public void OneCapClosed(GameObject cap)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x126B4D0", Offset = "0x126B4D0", VA = "0x126B4D0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x126B51C", Offset = "0x126B51C", VA = "0x126B51C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x126B604", Offset = "0x126B604", VA = "0x126B604")]
	public HoopCapClosedCounter()
	{
	}
}
[Token(Token = "0x20000EA")]
public class HoopCapCloseSFX : MonoBehaviour
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HoopCapClosedCounter CapCounter;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcAudioSource CloseAudioSource;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcAudioEvent HoopCapAllCloseEvent;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcAudioEvent HoopCapCloseEvent;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x126B60C", Offset = "0x126B60C", VA = "0x126B60C")]
	public void PlayClosedSFX()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x126B668", Offset = "0x126B668", VA = "0x126B668")]
	public HoopCapCloseSFX()
	{
	}
}
[Token(Token = "0x20000EB")]
public class HoopCapGrabbable : MonoBehaviour
{
	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeToOpen;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform HoopCap;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _openState;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcBoolGameParameter BooleanGrabbed;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _defaultCapRotationX;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _openCapRotationX;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _defaultCapRotation;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _openCapRotation;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _capOpen;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Audio")]
	public rcAudioSource AudioSourceScript;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcAudioEvent HoopCapOpenningAudioEvent;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public rcAudioEvent HoopCapClosingAudioEvent;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public rcAudioEvent HoopCapOpennedAudioEvent;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x126B670", Offset = "0x126B670", VA = "0x126B670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x126B68C", Offset = "0x126B68C", VA = "0x126B68C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x126B774", Offset = "0x126B774", VA = "0x126B774")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x126B884", Offset = "0x126B884", VA = "0x126B884")]
	public void GrabbedStateChanged(bool toValue, bool fromValue, object changedBy)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x126B8F4", Offset = "0x126B8F4", VA = "0x126B8F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x126B780", Offset = "0x126B780", VA = "0x126B780")]
	private void UpdateCapRotation()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x126B9E8", Offset = "0x126B9E8", VA = "0x126B9E8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x126B9F0", Offset = "0x126B9F0", VA = "0x126B9F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x126BAD4", Offset = "0x126BAD4", VA = "0x126BAD4")]
	public HoopCapGrabbable()
	{
	}
}
[Token(Token = "0x20000EC")]
[RequireComponent(typeof(HoopCapManager), typeof(HoopCapClosedCounter))]
public class HoopCapTimedCloser : MonoBehaviour
{
	[Token(Token = "0x20000ED")]
	[CompilerGenerated]
	private sealed class <ClosingCapEnum>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HoopCapTimedCloser <>4__this;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <nearCloseDelay>5__2;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000545")]
			[Address(RVA = "0x126C324", Offset = "0x126C324", VA = "0x126C324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000547")]
			[Address(RVA = "0x126C36C", Offset = "0x126C36C", VA = "0x126C36C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x126BE74", Offset = "0x126BE74", VA = "0x126BE74")]
		[DebuggerHidden]
		public <ClosingCapEnum>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x126C0B0", Offset = "0x126C0B0", VA = "0x126C0B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x126C0B4", Offset = "0x126C0B4", VA = "0x126C0B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x126C32C", Offset = "0x126C32C", VA = "0x126C32C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HoopCapManager _hoopCapManagerScript;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Ring RingScript;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _totalDuration;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _delayBetweenCloseCap;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> _hoopCap;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> _hoopCapAvailable;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _time;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int TRIGGER_HASH_NEAR_CLOSE;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x126BAEC", Offset = "0x126BAEC", VA = "0x126BAEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x126BC54", Offset = "0x126BC54", VA = "0x126BC54")]
	public void StartClosingCap()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x126BDF0", Offset = "0x126BDF0", VA = "0x126BDF0")]
	[IteratorStateMachine(typeof(<ClosingCapEnum>d__10))]
	private IEnumerator ClosingCapEnum(float delay)
	{
		return null;
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x126BE9C", Offset = "0x126BE9C", VA = "0x126BE9C")]
	public void OneCapClosed(GameObject cap)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x126BF60", Offset = "0x126BF60", VA = "0x126BF60")]
	public void StopClosingCap()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x126BF68", Offset = "0x126BF68", VA = "0x126BF68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x126C050", Offset = "0x126C050", VA = "0x126C050")]
	public HoopCapTimedCloser()
	{
	}
}
[Token(Token = "0x20000EE")]
public abstract class HoopGoalListener : MonoBehaviour
{
	[Token(Token = "0x6000548")]
	public abstract void OnGoal(Collider ballCollider);

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x126C374", Offset = "0x126C374", VA = "0x126C374")]
	protected HoopGoalListener()
	{
	}
}
[Token(Token = "0x20000EF")]
public class HoopManager : MonoBehaviour, IGoalEmitter
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected LayerMask BallLayers;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcProxyBehaviour _proxy;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GBAPlayerSystem _owningPlayer;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Collider _collider;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<Collider> _colliding;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnGoalEvent;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnLocalGoalEvent;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnReplicatedGoalEvent;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GBAPlayerSystem _localPlayerSystem;

	[Token(Token = "0x170000D1")]
	public rcProxyBehaviour Proxy
	{
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x126C37C", Offset = "0x126C37C", VA = "0x126C37C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D2")]
	public UnityAction<Collider> OnGoal
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x126C384", Offset = "0x126C384", VA = "0x126C384", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x126C38C", Offset = "0x126C38C", VA = "0x126C38C", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	private GBAPlayerSystem cacheLocalPlayerSystem
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x126C394", Offset = "0x126C394", VA = "0x126C394")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	public bool IgnoreBalls
	{
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x126C524", Offset = "0x126C524", VA = "0x126C524", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x126C52C", Offset = "0x126C52C", VA = "0x126C52C", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public bool IsLocallyOwned
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0x126C538", Offset = "0x126C538", VA = "0x126C538")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x126C5C0", Offset = "0x126C5C0", VA = "0x126C5C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x126CA64", Offset = "0x126CA64", VA = "0x126CA64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x126CE7C", Offset = "0x126CE7C", VA = "0x126CE7C")]
	public void SetOwningPlayer(GBAPlayerSystem owningPlayer)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x126CE84", Offset = "0x126CE84", VA = "0x126CE84")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x126D144", Offset = "0x126D144", VA = "0x126D144")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x126CF10", Offset = "0x126CF10", VA = "0x126CF10")]
	private void onBallEnterCollider(Collider ballCollider)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x126D1D8", Offset = "0x126D1D8", VA = "0x126D1D8", Slot = "8")]
	protected virtual void onBallExitCollider(Collider ballCollider)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x126D328", Offset = "0x126D328", VA = "0x126D328")]
	public void RaiseLocalScoreEvent(Collider collidingObject)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x126D508", Offset = "0x126D508", VA = "0x126D508")]
	public void RaiseRemoteScoreEvent(Collider collidingObject, bool localScore)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x126D584", Offset = "0x126D584", VA = "0x126D584")]
	public HoopManager()
	{
	}
}
[Token(Token = "0x20000F0")]
internal class HoopProxyManager : rcSingleton<HoopProxyManager>
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<IGoalEmitter> _goalEmitters;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HoopGoalListener[] _goalListeners;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x126C844", Offset = "0x126C844", VA = "0x126C844")]
	public void Register(IGoalEmitter emitter)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x126CCB4", Offset = "0x126CCB4", VA = "0x126CCB4")]
	public void Unregister(IGoalEmitter scorable)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x126D60C", Offset = "0x126D60C", VA = "0x126D60C")]
	private void onGoal(Collider ballCollider)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x126D688", Offset = "0x126D688", VA = "0x126D688")]
	public void EnableHoops(bool enable)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x126D844", Offset = "0x126D844", VA = "0x126D844")]
	public HoopProxyManager()
	{
	}
}
[Token(Token = "0x20000F1")]
public interface IDispensable
{
	[Token(Token = "0x170000D6")]
	bool IsNetworked
	{
		[Token(Token = "0x600056B")]
		get;
	}

	[Token(Token = "0x170000D7")]
	bool IsAvailableForPooling
	{
		[Token(Token = "0x600056C")]
		get;
	}

	[Token(Token = "0x170000D8")]
	bool IsInUse
	{
		[Token(Token = "0x600056D")]
		get;
	}

	[Token(Token = "0x170000D9")]
	Dispenser Dispenser
	{
		[Token(Token = "0x600056E")]
		get;
		[Token(Token = "0x600056F")]
		set;
	}

	[Token(Token = "0x6000560")]
	GameObject GetObject();

	[Token(Token = "0x6000561")]
	void ShowObject(bool show);

	[Token(Token = "0x6000562")]
	void EnablePhysics(bool enabled);

	[Token(Token = "0x6000563")]
	void EnableColliders(bool enabled);

	[Token(Token = "0x6000564")]
	void EnableDispensable(bool enabled);

	[Token(Token = "0x6000565")]
	void ResetDispensable();

	[Token(Token = "0x6000566")]
	void StopRespawn();

	[Token(Token = "0x6000567")]
	void LocalShutdown();

	[Token(Token = "0x6000568")]
	void OnDispensed();

	[Token(Token = "0x6000569")]
	UnityAction GetOnDispensedCallbacks();

	[Token(Token = "0x600056A")]
	void SetOnDispensedCallbacks(UnityAction callbacks);
}
[Token(Token = "0x20000F2")]
public interface IGoalEmitter
{
	[Token(Token = "0x170000DA")]
	UnityAction<Collider> OnGoal
	{
		[Token(Token = "0x6000570")]
		get;
		[Token(Token = "0x6000571")]
		set;
	}

	[Token(Token = "0x170000DB")]
	bool IgnoreBalls
	{
		[Token(Token = "0x6000572")]
		get;
		[Token(Token = "0x6000573")]
		set;
	}
}
[Token(Token = "0x20000F3")]
public class ImpulseTool : MonoBehaviour
{
	[Token(Token = "0x6000574")]
	[Address(RVA = "0x126D90C", Offset = "0x126D90C", VA = "0x126D90C")]
	public ImpulseTool()
	{
	}
}
[Token(Token = "0x20000F4")]
[CreateAssetMenu(fileName = "ArcadeInput", menuName = "GBA/Input/Arcade Input Data")]
public class ArcadeInputData : ScriptableObject
{
	[Token(Token = "0x20000F5")]
	public enum ButtonType
	{
		[Token(Token = "0x400053D")]
		ENTER,
		[Token(Token = "0x400053E")]
		BACK,
		[Token(Token = "0x400053F")]
		UP,
		[Token(Token = "0x4000540")]
		DOWN,
		[Token(Token = "0x4000541")]
		LEFT,
		[Token(Token = "0x4000542")]
		RIGHT,
		[Token(Token = "0x4000543")]
		HOME
	}

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private JoystickInputData _joystickData;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("User Intents")]
	[SerializeField]
	private MenuUserIntentGameParameter _currentUserIntentParameter;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MenuUserIntent _backIntent;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MenuUserIntent _homeIntent;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] _inputStates;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action<bool, bool, UnityEngine.Object>[] _inputCallbacks;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly List<IArcadeInputListener> _listeners;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly List<IArcadeInputListener> _bufferListeners;

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x126D914", Offset = "0x126D914", VA = "0x126D914")]
	public void SetUserIntent(MenuUserIntent userIntent)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x126D9C8", Offset = "0x126D9C8", VA = "0x126D9C8")]
	public void SetUserIntentBack()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x126D9D0", Offset = "0x126D9D0", VA = "0x126D9D0")]
	public void SetUserIntentHome()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x126D9D8", Offset = "0x126D9D8", VA = "0x126D9D8")]
	public void InitInputCallbacks()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x126DDE4", Offset = "0x126DDE4", VA = "0x126DDE4")]
	public void SetInputState(ButtonType buttonType, bool inputState)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x126DE74", Offset = "0x126DE74", VA = "0x126DE74")]
	public void RegisterListener(IArcadeInputListener listener)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x126E088", Offset = "0x126E088", VA = "0x126E088")]
	public void UnregisterListener(IArcadeInputListener listener)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x126E1F0", Offset = "0x126E1F0", VA = "0x126E1F0")]
	public void ResetListeners()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x126E260", Offset = "0x126E260", VA = "0x126E260")]
	public bool GetButton(ButtonType buttonType)
	{
		return default(bool);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x126E2A4", Offset = "0x126E2A4", VA = "0x126E2A4")]
	public bool GetEnterButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x126E2AC", Offset = "0x126E2AC", VA = "0x126E2AC")]
	public bool GetBackButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x126E2B4", Offset = "0x126E2B4", VA = "0x126E2B4")]
	public bool GetHomeButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x126E2BC", Offset = "0x126E2BC", VA = "0x126E2BC")]
	public bool GetUpButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x126E2C4", Offset = "0x126E2C4", VA = "0x126E2C4")]
	public bool GetDownButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x126E2CC", Offset = "0x126E2CC", VA = "0x126E2CC")]
	public bool GetLeftButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x126E2D4", Offset = "0x126E2D4", VA = "0x126E2D4")]
	public bool GetRightButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x126E2DC", Offset = "0x126E2DC", VA = "0x126E2DC")]
	private void onEnterButtonPressUpdate(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x126E43C", Offset = "0x126E43C", VA = "0x126E43C")]
	private void onBackButtonPressUpdate(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x126E5A0", Offset = "0x126E5A0", VA = "0x126E5A0")]
	private void onHomeButtonPressUpdate(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x126E704", Offset = "0x126E704", VA = "0x126E704")]
	private void onUpButtonPressUpdate(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x126E874", Offset = "0x126E874", VA = "0x126E874")]
	private void onDownButtonPressUpdate(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x126E9E8", Offset = "0x126E9E8", VA = "0x126E9E8")]
	private void onLeftButtonPressUpdate(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x126EB5C", Offset = "0x126EB5C", VA = "0x126EB5C")]
	private void onRightButtonPressUpdate(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x126ECD0", Offset = "0x126ECD0", VA = "0x126ECD0")]
	[ContextMenu("Simulate Enter")]
	public void SimulateEnterButton()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x126ECDC", Offset = "0x126ECDC", VA = "0x126ECDC")]
	[ContextMenu("Simulate Back")]
	public void SimulateBackButton()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x126ECE8", Offset = "0x126ECE8", VA = "0x126ECE8")]
	[ContextMenu("Simulate Joystick Up")]
	public void SimulateJoystickUp()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x126ECF4", Offset = "0x126ECF4", VA = "0x126ECF4")]
	[ContextMenu("Simulate Joystick Down")]
	public void SimulateJoystickDown()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x126ED00", Offset = "0x126ED00", VA = "0x126ED00")]
	[ContextMenu("Simulate Joystick Left")]
	public void SimulateJoystickLeft()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x126ED0C", Offset = "0x126ED0C", VA = "0x126ED0C")]
	[ContextMenu("Simulate Joystick Right")]
	public void SimulateJoystickRight()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x126ED18", Offset = "0x126ED18", VA = "0x126ED18")]
	[ContextMenu("Simulate Home")]
	public void SimulateHomeButton()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x126ED24", Offset = "0x126ED24", VA = "0x126ED24")]
	public ArcadeInputData()
	{
	}
}
[Token(Token = "0x20000F6")]
public class ArcadeInputManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000F7")]
	public struct ArcadeButton
	{
		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ArcadeInputData.ButtonType ButtonType;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public rcBoolGameParameter ButtonPressedParameter;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 2f)]
		public float TriggerTime;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 2f)]
		public float AutorepeatDelay;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 2f)]
		public float AutorepeatTime;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<ArcadeInputData.ButtonType, bool> _inputAction;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _wasPressed;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isTriggered;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool _isAutorepeating;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _currentPressedTimer;

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x126F6F0", Offset = "0x126F6F0", VA = "0x126F6F0")]
		public ArcadeButton(ArcadeInputData.ButtonType buttonType, float triggerTime = 0f, float autorepeatDelay = 0f, float autorepeatTime = 0f)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x126F760", Offset = "0x126F760", VA = "0x126F760")]
		public void SetInputAction(Action<ArcadeInputData.ButtonType, bool> inputAction)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x126EFE4", Offset = "0x126EFE4", VA = "0x126EFE4")]
		public void ResetTriggerState()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x126F114", Offset = "0x126F114", VA = "0x126F114")]
		public void UpdateTriggerState()
		{
		}
	}

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ArcadeInputData _inputData;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArcadeButton[] Buttons;

	[Token(Token = "0x170000DC")]
	public ArcadeInputData InputData
	{
		[Token(Token = "0x6000594")]
		[Address(RVA = "0x126EE9C", Offset = "0x126EE9C", VA = "0x126EE9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x126EEA4", Offset = "0x126EEA4", VA = "0x126EEA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x126EFF0", Offset = "0x126EFF0", VA = "0x126EFF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x126F0B4", Offset = "0x126F0B4", VA = "0x126F0B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x126F2BC", Offset = "0x126F2BC", VA = "0x126F2BC")]
	public ArcadeInputManager()
	{
	}
}
[Token(Token = "0x20000F8")]
public interface IArcadeInputListener : IJoystickInputListener
{
	[Token(Token = "0x600059D")]
	void OnEnterButtonPressed();

	[Token(Token = "0x600059E")]
	void OnBackButtonPressed();

	[Token(Token = "0x600059F")]
	void OnHomeButtonPressed();
}
[Token(Token = "0x20000F9")]
public interface IJoystickInputListener
{
	[Token(Token = "0x60005A0")]
	void OnJoystickUpEvent(bool triggered);

	[Token(Token = "0x60005A1")]
	void OnJoystickDownEvent(bool triggered);

	[Token(Token = "0x60005A2")]
	void OnJoystickLeftEvent(bool triggered);

	[Token(Token = "0x60005A3")]
	void OnJoystickRightEvent(bool triggered);
}
[Token(Token = "0x20000FA")]
[CreateAssetMenu(fileName = "JoystickInput", menuName = "GBA/Input")]
public class JoystickInputData : ScriptableObject
{
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _rawInput;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _wasUp;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _wasDown;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool _wasLeft;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool _wasRight;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<IJoystickInputListener> _listeners;

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x126DFA0", Offset = "0x126DFA0", VA = "0x126DFA0")]
	public void RegisterListener(IJoystickInputListener listener)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x126E160", Offset = "0x126E160", VA = "0x126E160")]
	public void UnregisterListener(IJoystickInputListener listener)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x126F768", Offset = "0x126F768", VA = "0x126F768")]
	public void ResetListeners()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x126F7D8", Offset = "0x126F7D8", VA = "0x126F7D8")]
	private void updateHorizontalInput(float horizontalInput, bool triggerEvents = true)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x126FB54", Offset = "0x126FB54", VA = "0x126FB54")]
	private void updateVerticalInput(float verticalInput, bool triggerEvents = true)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x126FEC8", Offset = "0x126FEC8", VA = "0x126FEC8")]
	public Vector2 GetRawData()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x126FED0", Offset = "0x126FED0", VA = "0x126FED0")]
	public float GetRawHorizontal()
	{
		return default(float);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x126FED8", Offset = "0x126FED8", VA = "0x126FED8")]
	public float GetRawVertical()
	{
		return default(float);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x126FEE0", Offset = "0x126FEE0", VA = "0x126FEE0")]
	public bool GetJoystickLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x126FEF4", Offset = "0x126FEF4", VA = "0x126FEF4")]
	public bool GetJoystickRight()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x126FF08", Offset = "0x126FF08", VA = "0x126FF08")]
	public bool GetJoystickUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x126FF1C", Offset = "0x126FF1C", VA = "0x126FF1C")]
	public bool GetJoystickDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x126FF30", Offset = "0x126FF30", VA = "0x126FF30")]
	public JoystickInputData()
	{
	}
}
[Token(Token = "0x20000FB")]
public class rcInteractable : MonoBehaviour
{
	[Token(Token = "0x20000FC")]
	public enum State
	{
		[Token(Token = "0x4000565")]
		NEUTRAL,
		[Token(Token = "0x4000566")]
		HOVER,
		[Token(Token = "0x4000567")]
		SCROLL
	}

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State CurrentState;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcInteractable _parentScroller;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color[] _stateColors;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _canScrollHorizontally;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _canScrollVertically;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool _canBeSelected;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _scrollSensitivity;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent _onTrigger;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent _onHover;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent _onHoverExit;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent _onStartScroll;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent _onEndScroll;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Guid _id;

	[Token(Token = "0x170000DD")]
	public Guid ID
	{
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x126FFB8", Offset = "0x126FFB8", VA = "0x126FFB8")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x126FFC4", Offset = "0x126FFC4", VA = "0x126FFC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1270028", Offset = "0x1270028", VA = "0x1270028")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x12700E8", Offset = "0x12700E8", VA = "0x12700E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x12708D8", Offset = "0x12708D8", VA = "0x12708D8")]
	private void subscribeToInteractionManager()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1271010", Offset = "0x1271010", VA = "0x1271010")]
	private void updateScroll(Guid id, float x, float y)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x12710E0", Offset = "0x12710E0", VA = "0x12710E0")]
	private void onInteractableHover(Guid id)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x127112C", Offset = "0x127112C", VA = "0x127112C")]
	private void onInteractableHoverExit(Guid id)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1271174", Offset = "0x1271174", VA = "0x1271174")]
	private void onOtherInteractableHover(Guid id)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x12711D8", Offset = "0x12711D8", VA = "0x12711D8")]
	private void onInteractableTriggered(Guid id)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x1271224", Offset = "0x1271224", VA = "0x1271224")]
	private void onInteractableStartScroll(Guid id)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x12712A0", Offset = "0x12712A0", VA = "0x12712A0")]
	private void onInteractableEndScroll(Guid id)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x12712F8", Offset = "0x12712F8", VA = "0x12712F8")]
	private void changeState(State newState)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1271280", Offset = "0x1271280", VA = "0x1271280")]
	public bool CanScroll()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1271300", Offset = "0x1271300", VA = "0x1271300")]
	public bool CanParentScroll(out rcInteractable parentScroll)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x12713B0", Offset = "0x12713B0", VA = "0x12713B0")]
	public rcInteractable()
	{
	}
}
[Token(Token = "0x20000FD")]
public class rcInteractionManager : rcSingleton<rcInteractionManager>
{
	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Canvas> CanvasList;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform RootRectTransform;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _scrollOldInteractorPosition;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _scrollOldInteractorRotation;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _distance;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _deadZoneMax;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _deadZone;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _isDeadZoneActive;

	[Token(Token = "0x14000004")]
	public event Action<Guid> onInteractableHover
	{
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1270B40", Offset = "0x1270B40", VA = "0x1270B40")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x1270408", Offset = "0x1270408", VA = "0x1270408")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnScrolling
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x127148C", Offset = "0x127148C", VA = "0x127148C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x1271528", Offset = "0x1271528", VA = "0x1271528")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action<Guid> onInteractableHoverExit
	{
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1270BF0", Offset = "0x1270BF0", VA = "0x1270BF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x12704B8", Offset = "0x12704B8", VA = "0x12704B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<Guid> onHoverOtherInteractable
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x1270CA0", Offset = "0x1270CA0", VA = "0x1270CA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1270568", Offset = "0x1270568", VA = "0x1270568")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action<Guid> onInteractableStartScroll
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x1270D50", Offset = "0x1270D50", VA = "0x1270D50")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x12706C8", Offset = "0x12706C8", VA = "0x12706C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action<Guid, float, float> onInteractableScrollUpdate
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x1270E00", Offset = "0x1270E00", VA = "0x1270E00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x1270778", Offset = "0x1270778", VA = "0x1270778")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action<Guid> onInteractableEndScroll
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1270EB0", Offset = "0x1270EB0", VA = "0x1270EB0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1270828", Offset = "0x1270828", VA = "0x1270828")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Guid> onInteractableTriggered
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x1270F60", Offset = "0x1270F60", VA = "0x1270F60")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1270618", Offset = "0x1270618", VA = "0x1270618")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<rcXRInputs.Feature, Camera> onInteractorSwitch
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x127182C", Offset = "0x127182C", VA = "0x127182C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x12718DC", Offset = "0x12718DC", VA = "0x12718DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x12715C4", Offset = "0x12715C4", VA = "0x12715C4")]
	public void InteractableHover(Guid id)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x12715E0", Offset = "0x12715E0", VA = "0x12715E0")]
	public void InteractableHoverExit(Guid id)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x12715FC", Offset = "0x12715FC", VA = "0x12715FC")]
	public void HoverOtherInteractable(Guid id)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1271618", Offset = "0x1271618", VA = "0x1271618")]
	public void InteractableStartScroll(Guid id, Vector3 startInteractorPosition, Vector3 startInteractorRotation, float distance)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1271650", Offset = "0x1271650", VA = "0x1271650")]
	public void InteractableScrollUpdate(Guid id, Vector3 interactorPosition, Vector3 interactorRotation)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x12717E8", Offset = "0x12717E8", VA = "0x12717E8")]
	public void InteractableEndScroll(Guid id)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1271810", Offset = "0x1271810", VA = "0x1271810")]
	public void InteractableTriggered(Guid id)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x127198C", Offset = "0x127198C", VA = "0x127198C")]
	public void InteractorSwitch(rcXRInputs.Feature feature, Camera camera)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1271B0C", Offset = "0x1271B0C", VA = "0x1271B0C")]
	public rcInteractionManager()
	{
	}
}
[Token(Token = "0x20000FE")]
public class rcInteractor : MonoBehaviour
{
	[Token(Token = "0x20000FF")]
	private delegate bool InputMethodDelegate(rcXRInputs.Feature feature, rcXRInputs.Button button);

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _isActive;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool _isRightHand;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _isScrolling;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool _isInDeadZone;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private rcXRInputs.Feature _feature;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Camera _camera;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string _tagName;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _tagNameOnPopup;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _pointerMaxDistance;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _layerMask;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcInteractable _oldInteractable;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PointerEventData _pointerEventData;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<RaycastResult> _resultList;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private rcXRInputs _inputs;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private XRInputTracker _xrInputTracker;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private rcInteractionManager _interactionManager;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EventSystem _eventSystem;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MenuBackgroundRotation backgroundRotation;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public bool isOn;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[SerializeField]
	public bool isJon;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	[SerializeField]
	public bool isJOff;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform _parentForController;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 _posOffsetHandTracking;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion _rotOffsetHandTracking;

	[Token(Token = "0x170000DE")]
	private string _uiTag
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1271B88", Offset = "0x1271B88", VA = "0x1271B88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	private Camera CurrentCamera
	{
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1271C18", Offset = "0x1271C18", VA = "0x1271C18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1271C20", Offset = "0x1271C20", VA = "0x1271C20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1272068", Offset = "0x1272068", VA = "0x1272068")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x12722D8", Offset = "0x12722D8", VA = "0x12722D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x127334C", Offset = "0x127334C", VA = "0x127334C")]
	private void onInteractionManagerInitialized()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x12731F4", Offset = "0x12731F4", VA = "0x12731F4")]
	private RaycastResult getDeepestUIElement(List<RaycastResult> raycastHits)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1273020", Offset = "0x1273020", VA = "0x1273020")]
	private Vector2 getPointerPosition()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x12735B0", Offset = "0x12735B0", VA = "0x12735B0")]
	private Vector3 getPointerPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x127361C", Offset = "0x127361C", VA = "0x127361C")]
	private Quaternion getPointerRot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1272BA4", Offset = "0x1272BA4", VA = "0x1272BA4")]
	private bool isAnyInput(rcXRInputs.Feature feature, InputMethodDelegate inputMethod)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1273688", Offset = "0x1273688", VA = "0x1273688")]
	private bool isGachette(rcXRInputs.Feature feature, InputMethodDelegate inputMethod)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x1273964", Offset = "0x1273964", VA = "0x1273964")]
	private void deactivateInteractor(rcXRInputs.Feature feature, Camera camera)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1273978", Offset = "0x1273978", VA = "0x1273978")]
	private void onScrolling()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1273998", Offset = "0x1273998", VA = "0x1273998")]
	private void switchInteractorFeature(XRInputTracker.XRInputSystem oldXRInputSystem, XRInputTracker.XRInputSystem currentXRInputSystem)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1273AC0", Offset = "0x1273AC0", VA = "0x1273AC0")]
	public void SetOffsetHandTracking(Vector3 posOffset, Quaternion rotOffset)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1272EFC", Offset = "0x1272EFC", VA = "0x1272EFC")]
	private bool isHandTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x12730A8", Offset = "0x12730A8", VA = "0x12730A8")]
	private void whatToDoIfNoHit()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1272F10", Offset = "0x1272F10", VA = "0x1272F10")]
	private void updateInteractorTransform()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1273AD4", Offset = "0x1273AD4", VA = "0x1273AD4")]
	public rcInteractor()
	{
	}
}
[Token(Token = "0x2000100")]
public class Jauge : MonoBehaviour
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image JaugeImage;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcAudioSource AudioSource;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcAudioEvent JaugeLoopAudioEvent;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcAudioEvent JaugeCompleteAudioEvent;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public rcAudioEvent JaugeWrongAudioEvent;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _oldFillAmount;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _decreasing;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool _completed;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x1273F88", Offset = "0x1273F88", VA = "0x1273F88")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1269D3C", Offset = "0x1269D3C", VA = "0x1269D3C")]
	public void ResetFillAmount()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x1269E80", Offset = "0x1269E80", VA = "0x1269E80")]
	public void UpdateFillAmount(float amount)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x1273F90", Offset = "0x1273F90", VA = "0x1273F90")]
	private void PlayIncreaseJaugeSound(float amount)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1274138", Offset = "0x1274138", VA = "0x1274138")]
	private void PlayDecreaseJaugeSound()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1269F3C", Offset = "0x1269F3C", VA = "0x1269F3C")]
	public Jauge()
	{
	}
}
[Token(Token = "0x2000101")]
[CreateAssetMenu(menuName = "GBA/Leaderboards/Leaderboard")]
public class Leaderboard : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000102")]
	public struct EntryData
	{
		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string PlayerName;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long Score;
	}

	[Token(Token = "0x2000103")]
	public enum ScoreFormat
	{
		[Token(Token = "0x40005B1")]
		TIME,
		[Token(Token = "0x40005B2")]
		SHOTS
	}

	[Serializable]
	[Token(Token = "0x2000104")]
	public class LeaderboardData
	{
		[Serializable]
		[Token(Token = "0x2000105")]
		public class LeaderboardEntry
		{
			[Token(Token = "0x40005B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _playerName;

			[Token(Token = "0x40005B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private long _highScore;

			[Token(Token = "0x40005B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private long _timestamp;

			[Token(Token = "0x40005B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private bool _prefilled;

			[Token(Token = "0x170000F1")]
			public string PlayerName
			{
				[Token(Token = "0x6000630")]
				[Address(RVA = "0x1276A10", Offset = "0x1276A10", VA = "0x1276A10")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			public long HighScore
			{
				[Token(Token = "0x6000631")]
				[Address(RVA = "0x1276A18", Offset = "0x1276A18", VA = "0x1276A18")]
				get
				{
					return default(long);
				}
			}

			[Token(Token = "0x170000F3")]
			public DateTime Timestamp
			{
				[Token(Token = "0x6000632")]
				[Address(RVA = "0x1276A20", Offset = "0x1276A20", VA = "0x1276A20")]
				get
				{
					return default(DateTime);
				}
			}

			[Token(Token = "0x170000F4")]
			public bool IsPrefilledEntry
			{
				[Token(Token = "0x6000633")]
				[Address(RVA = "0x1276A7C", Offset = "0x1276A7C", VA = "0x1276A7C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000634")]
			[Address(RVA = "0x1275554", Offset = "0x1275554", VA = "0x1275554")]
			public LeaderboardEntry(string playerName, long highScore, bool prefilled = false)
			{
			}

			[Token(Token = "0x6000635")]
			[Address(RVA = "0x1276900", Offset = "0x1276900", VA = "0x1276900")]
			public LeaderboardEntry(BinaryReader reader)
			{
			}

			[Token(Token = "0x6000636")]
			[Address(RVA = "0x1276A84", Offset = "0x1276A84", VA = "0x1276A84")]
			public void UpdateHighScore(long highScore)
			{
			}

			[Token(Token = "0x6000637")]
			[Address(RVA = "0x1276994", Offset = "0x1276994", VA = "0x1276994")]
			public void SaveEntry(BinaryWriter writer)
			{
			}
		}

		[Token(Token = "0x2000106")]
		public class EntryComparer : IComparer<LeaderboardEntry>
		{
			[Token(Token = "0x40005B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ScoreComparer _scoreComparer;

			[Token(Token = "0x6000638")]
			[Address(RVA = "0x1274A50", Offset = "0x1274A50", VA = "0x1274A50")]
			public EntryComparer(ScoreComparer scoreComparer)
			{
			}

			[Token(Token = "0x6000639")]
			[Address(RVA = "0x1276B04", Offset = "0x1276B04", VA = "0x1276B04", Slot = "4")]
			public int Compare(LeaderboardEntry x, LeaderboardEntry y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000107")]
		public class ScoreComparer : IComparer<long>
		{
			[Token(Token = "0x40005B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Leaderboard _leaderboard;

			[Token(Token = "0x600063A")]
			[Address(RVA = "0x1274A20", Offset = "0x1274A20", VA = "0x1274A20")]
			public ScoreComparer(Leaderboard leaderboard)
			{
			}

			[Token(Token = "0x600063B")]
			[Address(RVA = "0x12746AC", Offset = "0x12746AC", VA = "0x12746AC", Slot = "4")]
			public int Compare(long x, long y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<LeaderboardEntry> LeaderboardEntries;

		[Token(Token = "0x170000EF")]
		public int TopPlayerEntryIndex
		{
			[Token(Token = "0x600062A")]
			[Address(RVA = "0x12745C0", Offset = "0x12745C0", VA = "0x12745C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F0")]
		public bool HasPlayerEntries
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0x1274594", Offset = "0x1274594", VA = "0x1274594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x1274A80", Offset = "0x1274A80", VA = "0x1274A80")]
		public LeaderboardData(string filepath)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x1275E00", Offset = "0x1275E00", VA = "0x1275E00")]
		public long GetHighScore()
		{
			return default(long);
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x1275ED4", Offset = "0x1275ED4", VA = "0x1275ED4")]
		public string GetTopPlayer()
		{
			return null;
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x12763F0", Offset = "0x12763F0", VA = "0x12763F0")]
		public void SaveToFile(string filepath)
		{
		}
	}

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x400059C")]
	public const int MAX_ENTRIES = 100;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScoreFormat _scoreFormat;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _apiName;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _controllers;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LevelDisplaySettings _displaySettings;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string OculusLocaleMap;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EntryData[] _prefilledEntries;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LeaderboardData _leaderboardData;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LeaderboardData.EntryComparer _entryComparer;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LeaderboardData.ScoreComparer _scoreComparer;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private long _currentPlayerHighscore;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _saveFileName;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _entriesLimit;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action _onLocalDataUpdated;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action<bool> _onOnlineEntryUpdated;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OnlineLeaderboardInterface _onlineLeaderboardInterface;

	[Token(Token = "0x170000E0")]
	private static string LeaderboardsSaveFolder
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x1274248", Offset = "0x1274248", VA = "0x1274248")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E1")]
	public ScoreFormat Format
	{
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x127431C", Offset = "0x127431C", VA = "0x127431C")]
		get
		{
			return default(ScoreFormat);
		}
	}

	[Token(Token = "0x170000E2")]
	public string ApiName
	{
		[Token(Token = "0x6000600")]
		[Address(RVA = "0x1274324", Offset = "0x1274324", VA = "0x1274324")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E3")]
	public OnlineLeaderboardInterface OnlineInterface
	{
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x127432C", Offset = "0x127432C", VA = "0x127432C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E4")]
	public bool Controllers
	{
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1274334", Offset = "0x1274334", VA = "0x1274334")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E5")]
	public string DisplayName
	{
		[Token(Token = "0x6000603")]
		[Address(RVA = "0x127433C", Offset = "0x127433C", VA = "0x127433C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E6")]
	public string ShortDisplayName
	{
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x12743DC", Offset = "0x12743DC", VA = "0x12743DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E7")]
	public Sprite LeaderboardIcon
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x127447C", Offset = "0x127447C", VA = "0x127447C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E8")]
	public bool DataLoaded
	{
		[Token(Token = "0x6000606")]
		[Address(RVA = "0x12744F8", Offset = "0x12744F8", VA = "0x12744F8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x1274500", Offset = "0x1274500", VA = "0x1274500")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public bool SaveEnabled
	{
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x127450C", Offset = "0x127450C", VA = "0x127450C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1274514", Offset = "0x1274514", VA = "0x1274514")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public int EntriesCount
	{
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x1274520", Offset = "0x1274520", VA = "0x1274520")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000EB")]
	public bool HasPlayerEntries
	{
		[Token(Token = "0x600060B")]
		[Address(RVA = "0x1274574", Offset = "0x1274574", VA = "0x1274574")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EC")]
	public int TopPlayerEntryIndex
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0x12745AC", Offset = "0x12745AC", VA = "0x12745AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000ED")]
	public long CurrentPlayerHighscore
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1274654", Offset = "0x1274654", VA = "0x1274654")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x127465C", Offset = "0x127465C", VA = "0x127465C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public bool HasPendingUploads
	{
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x12746F4", Offset = "0x12746F4", VA = "0x12746F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1274708", Offset = "0x1274708", VA = "0x1274708")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1274780", Offset = "0x1274780", VA = "0x1274780")]
	public void Init()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1274ED0", Offset = "0x1274ED0", VA = "0x1274ED0")]
	public void InitDataContainers()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1275120", Offset = "0x1275120", VA = "0x1275120")]
	[ContextMenu("Sort Prefilled Entries")]
	private void sortPrefilledEntries()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1275638", Offset = "0x1275638", VA = "0x1275638")]
	public void ApplyEntriesLimit(int limit)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x12756E0", Offset = "0x12756E0", VA = "0x12756E0")]
	public int AddEntry(string playerName, long highScore)
	{
		return default(int);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1275A18", Offset = "0x1275A18", VA = "0x1275A18")]
	public void TryUpdateCurrentPlayerHighscore(long highscore)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1275A1C", Offset = "0x1275A1C", VA = "0x1275A1C")]
	private void onOnlineHighscoreUpdate(OnlineFeaturesMessage<bool> message)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1275A68", Offset = "0x1275A68", VA = "0x1275A68")]
	public void RegisterForLocalUpdates(Action onLocalUpdate)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1275AF8", Offset = "0x1275AF8", VA = "0x1275AF8")]
	public void UnregisterForLocalUpdates(Action onLocalUpdate)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1275B88", Offset = "0x1275B88", VA = "0x1275B88")]
	public void RegisterForGlobalUpdates(Action<bool> onGlobalUpdate)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1275C30", Offset = "0x1275C30", VA = "0x1275C30")]
	public void UnregisterForGlobalUpdates(Action<bool> onGlobalUpdate)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1275608", Offset = "0x1275608", VA = "0x1275608")]
	private void leaderboardUpdated()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1275D9C", Offset = "0x1275D9C", VA = "0x1275D9C")]
	public IReadOnlyList<LeaderboardData.LeaderboardEntry> GetEntries()
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1275110", Offset = "0x1275110", VA = "0x1275110")]
	public long GetHighScore()
	{
		return default(long);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1275E74", Offset = "0x1275E74", VA = "0x1275E74")]
	public string GetTopPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1275F64", Offset = "0x1275F64", VA = "0x1275F64")]
	public LeaderboardData.LeaderboardEntry GetEntry(int index)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1276008", Offset = "0x1276008", VA = "0x1276008")]
	public int GetVirtualRank(long score)
	{
		return default(int);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1276100", Offset = "0x1276100", VA = "0x1276100")]
	public string GetScoreDisplay(long score)
	{
		return null;
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1276234", Offset = "0x1276234", VA = "0x1276234")]
	public string GetScoreShortDisplay(long score)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1276374", Offset = "0x1276374", VA = "0x1276374")]
	[ContextMenu("Reset Entries")]
	public void ResetEntries()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1275CD8", Offset = "0x1275CD8", VA = "0x1275CD8")]
	public void SaveToFile(bool forceSave = false)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x12767C0", Offset = "0x12767C0", VA = "0x12767C0")]
	[ContextMenu("Save To File")]
	public void ForceSaveToFile()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x12767C8", Offset = "0x12767C8", VA = "0x12767C8")]
	[ContextMenu("Erase File")]
	public void ForceEraseFile()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1276858", Offset = "0x1276858", VA = "0x1276858")]
	public static Leaderboard CreateLeaderboard(ScoreFormat scoreFormat, bool controllers, [Optional] LevelDisplaySettings levelDisplaySettings)
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x12768E8", Offset = "0x12768E8", VA = "0x12768E8")]
	public Leaderboard()
	{
	}
}
[Token(Token = "0x2000109")]
public class LeaderboardManager : MonoBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardGameParameter _leaderboardParameter;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Leaderboard _leaderboard;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Leaderboard _controllersLeaderboard;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent _onNewHighscore;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Leaderboard _currentLeaderboard;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EndGameState _currentEndGameState;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private long _currentScore;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _inputSubscribed;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action OnCurrentLeaderboardUpdated;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x170000F5")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1276C68", Offset = "0x1276C68", VA = "0x1276C68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F6")]
	public bool WaitingForControllers
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1276D04", Offset = "0x1276D04", VA = "0x1276D04")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1276D0C", Offset = "0x1276D0C", VA = "0x1276D0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public string DisplayName
	{
		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1276D18", Offset = "0x1276D18", VA = "0x1276D18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F8")]
	public string CurrentScoreDisplay
	{
		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1276DB8", Offset = "0x1276DB8", VA = "0x1276DB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F9")]
	public Leaderboard CurrentLeaderboard
	{
		[Token(Token = "0x6000644")]
		[Address(RVA = "0x1276E5C", Offset = "0x1276E5C", VA = "0x1276E5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FA")]
	public EndGameState CurrentEndGameState
	{
		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1276E64", Offset = "0x1276E64", VA = "0x1276E64")]
		get
		{
			return default(EndGameState);
		}
	}

	[Token(Token = "0x170000FB")]
	public long CurrentScore
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1276E70", Offset = "0x1276E70", VA = "0x1276E70")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000FC")]
	public int CurrentVirtualRank
	{
		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1276E78", Offset = "0x1276E78", VA = "0x1276E78")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1276F18", Offset = "0x1276F18", VA = "0x1276F18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x12771A8", Offset = "0x12771A8", VA = "0x12771A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1277018", Offset = "0x1277018", VA = "0x1277018")]
	public void SubscribeToInputSwitch()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x1277244", Offset = "0x1277244", VA = "0x1277244")]
	public void UnsubscribeFromInputSwitch()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x12773C8", Offset = "0x12773C8", VA = "0x12773C8")]
	private void onInputSwitch(XRInputTracker.XRInputSystem previousSystem, XRInputTracker.XRInputSystem newSystem)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x127750C", Offset = "0x127750C", VA = "0x127750C")]
	public void SetLeaderboards(Leaderboard handsLeaderboard, Leaderboard controllersLeaderboard)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1276F30", Offset = "0x1276F30", VA = "0x1276F30")]
	private void setCurrentLeaderboard()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1277404", Offset = "0x1277404", VA = "0x1277404")]
	private void setCurrentLeaderboard(XRInputTracker.XRInputSystem currentInput)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1277650", Offset = "0x1277650", VA = "0x1277650")]
	public void UpdateEndGameState(EndGameState endGameState, [Optional] RewardParameters rewards)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x12777C8", Offset = "0x12777C8", VA = "0x12777C8")]
	public int AddCurrentEntry(string playerName)
	{
		return default(int);
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1276E80", Offset = "0x1276E80", VA = "0x1276E80")]
	public int GetVirtualRank(long score)
	{
		return default(int);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x12777E8", Offset = "0x12777E8", VA = "0x12777E8")]
	public LeaderboardManager()
	{
	}
}
[Token(Token = "0x200010A")]
[CreateAssetMenu(menuName = "GBA/Leaderboards/Leaderboards Settings")]
public class LeaderboardsSettings : ScriptableObject
{
	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Story Leaderboards")]
	[SerializeField]
	private List<LevelList> _storyLevelLists;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Leaderboard> _storyLeaderboards;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<Leaderboard> _storyLeaderboardsCtrl;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Challenge Leaderboards")]
	[SerializeField]
	private string _challengeLeaderboardsPath;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Leaderboard> _challengeLeaderboards;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Leaderboard> _challengeLeaderboardsCtrl;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(1f, 100f)]
	[SerializeField]
	[Header("Settings")]
	private int _leaderboardSizeLimit;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[Header("DEBUG")]
	private bool _saveEnabled;

	[Token(Token = "0x170000FD")]
	public int EntriesLimit
	{
		[Token(Token = "0x6000654")]
		[Address(RVA = "0x12777F0", Offset = "0x12777F0", VA = "0x12777F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000FE")]
	public bool SaveEnabled
	{
		[Token(Token = "0x6000655")]
		[Address(RVA = "0x12777F8", Offset = "0x12777F8", VA = "0x12777F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FF")]
	public ReadOnlyCollection<LevelList> StoryLevelLists
	{
		[Token(Token = "0x6000656")]
		[Address(RVA = "0x1277800", Offset = "0x1277800", VA = "0x1277800")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000100")]
	public ReadOnlyCollection<Leaderboard> StoryHandsLeaderboards
	{
		[Token(Token = "0x6000657")]
		[Address(RVA = "0x1277850", Offset = "0x1277850", VA = "0x1277850")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000101")]
	public ReadOnlyCollection<Leaderboard> StoryControllersLeaderboards
	{
		[Token(Token = "0x6000658")]
		[Address(RVA = "0x12778A0", Offset = "0x12778A0", VA = "0x12778A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000102")]
	public ReadOnlyCollection<Leaderboard> AllStoryLeaderboards
	{
		[Token(Token = "0x6000659")]
		[Address(RVA = "0x12778F0", Offset = "0x12778F0", VA = "0x12778F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000103")]
	public ReadOnlyCollection<Leaderboard> ChallengeHandsLeaderboards
	{
		[Token(Token = "0x600065A")]
		[Address(RVA = "0x12779B8", Offset = "0x12779B8", VA = "0x12779B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000104")]
	public ReadOnlyCollection<Leaderboard> ChallengeControllersLeaderboards
	{
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1277A08", Offset = "0x1277A08", VA = "0x1277A08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000105")]
	public ReadOnlyCollection<Leaderboard> AllChallengeLeaderboards
	{
		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1277A58", Offset = "0x1277A58", VA = "0x1277A58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000106")]
	public ReadOnlyCollection<Leaderboard> AllControllersLeaderboards
	{
		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1277A60", Offset = "0x1277A60", VA = "0x1277A60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000107")]
	public ReadOnlyCollection<Leaderboard> AllHandsLeaderboards
	{
		[Token(Token = "0x600065E")]
		[Address(RVA = "0x1277A6C", Offset = "0x1277A6C", VA = "0x1277A6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000108")]
	public ReadOnlyCollection<Leaderboard> AllLeaderboards
	{
		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1277A78", Offset = "0x1277A78", VA = "0x1277A78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x12778F8", Offset = "0x12778F8", VA = "0x12778F8")]
	private ReadOnlyCollection<Leaderboard> concatenateLeaderboards(IList<Leaderboard> leaderboardsListA, IList<Leaderboard> leaderboardsListB)
	{
		return null;
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x1277AA4", Offset = "0x1277AA4", VA = "0x1277AA4")]
	public void UpdateSaveSystem()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x1277C04", Offset = "0x1277C04", VA = "0x1277C04")]
	public void ApplyEntriesLimit()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x1277D64", Offset = "0x1277D64", VA = "0x1277D64")]
	public Leaderboard GetLeaderboard(string apiName)
	{
		return null;
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x1277F40", Offset = "0x1277F40", VA = "0x1277F40")]
	public LeaderboardsSettings()
	{
	}
}
[Token(Token = "0x200010B")]
public class LeaderboardsSettingsManager : rcSingleton<LeaderboardsSettingsManager>
{
	[Token(Token = "0x200010C")]
	[DataContract(Name = "GeolocationData")]
	public class GeolocationData
	{
		[StructLayout(3)]
		[Token(Token = "0x200010D")]
		[CompilerGenerated]
		private struct <QueryGeolocationAsync>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40005D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40005D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40005D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GeolocationData <>4__this;

			[Token(Token = "0x40005D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onGeolocationFound;

			[Token(Token = "0x40005D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <serviceIndex>5__2;

			[Token(Token = "0x40005DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HttpClient <client>5__3;

			[Token(Token = "0x40005DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<HttpResponseMessage> <>u__1;

			[Token(Token = "0x40005DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<string> <>u__2;

			[Token(Token = "0x6000670")]
			[Address(RVA = "0x1278C80", Offset = "0x1278C80", VA = "0x1278C80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000671")]
			[Address(RVA = "0x127942C", Offset = "0x127942C", VA = "0x127942C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[DataMember(Name = "ExternalIp")]
		private string _externalIp;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string[] services;

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x1278C78", Offset = "0x1278C78", VA = "0x1278C78", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x12781B8", Offset = "0x12781B8", VA = "0x12781B8")]
		public static GeolocationData TryGetGeolocation(byte[] serializedGeolocation, DataContractSerializer serializer)
		{
			return null;
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x1278704", Offset = "0x1278704", VA = "0x1278704")]
		[AsyncStateMachine(typeof(<QueryGeolocationAsync>d__4))]
		public void QueryGeolocationAsync([Optional] Action onGeolocationFound)
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x1278488", Offset = "0x1278488", VA = "0x1278488")]
		public GeolocationData()
		{
		}
	}

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardsSettings _settings;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GeolocationData _geolocationData;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DataContractSerializer _geolocationSerializer;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private byte[] _serializedGeolocation;

	[Token(Token = "0x17000109")]
	public LeaderboardsSettings Settings
	{
		[Token(Token = "0x6000665")]
		[Address(RVA = "0x1277FA8", Offset = "0x1277FA8", VA = "0x1277FA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010A")]
	public byte[] SerializedGeolocation
	{
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x1277FB0", Offset = "0x1277FB0", VA = "0x1277FB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1277FB8", Offset = "0x1277FB8", VA = "0x1277FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x12781A8", Offset = "0x12781A8", VA = "0x12781A8")]
	public GeolocationData TryGetGeolocation(byte[] serializedGeolocation)
	{
		return null;
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x12780C4", Offset = "0x12780C4", VA = "0x12780C4")]
	public void QueryGeolocation()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x12787E0", Offset = "0x12787E0", VA = "0x12787E0")]
	private void onGeolocationFound()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x1278B70", Offset = "0x1278B70", VA = "0x1278B70")]
	public LeaderboardsSettingsManager()
	{
	}
}
[Token(Token = "0x200010E")]
public class OnlineLeaderboardsManager : MonoBehaviour
{
	[Token(Token = "0x200010F")]
	[CompilerGenerated]
	private sealed class <sendNewDelayedQuery>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlineLeaderboardsManager <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x1279F38", Offset = "0x1279F38", VA = "0x1279F38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0x1279F80", Offset = "0x1279F80", VA = "0x1279F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x1279D78", Offset = "0x1279D78", VA = "0x1279D78")]
		[DebuggerHidden]
		public <sendNewDelayedQuery>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x1279E38", Offset = "0x1279E38", VA = "0x1279E38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x1279E3C", Offset = "0x1279E3C", VA = "0x1279E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x1279F40", Offset = "0x1279F40", VA = "0x1279F40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LeaderboardsSettings _leaderboardsSettings;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcIntGameParameter _highestGlobalRankParameter;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _usingControllers;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _refreshTimeInSec;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ReadOnlyCollection<Leaderboard> _controllerLeaderboards;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ReadOnlyCollection<Leaderboard> _handTrackingLeaderboards;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Guid> _currentRequests;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OnlineLeaderboardInterface[] _onlineHandsLeaderboardInterfaces;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OnlineLeaderboardInterface[] _onlineControllersLeaderboardInterfaces;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentHighestRank;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine _requestsCoroutine;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WaitForSeconds _refreshYieldInstruction;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1279438", Offset = "0x1279438", VA = "0x1279438")]
	private void Start()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x12796DC", Offset = "0x12796DC", VA = "0x12796DC")]
	private void setupOnlineLeaderboardsInterfaces(bool controllers, bool hands)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1279B38", Offset = "0x1279B38", VA = "0x1279B38")]
	private void onInputMethodChanged(bool isUsingControllers, bool wasUsingControllers, UnityEngine.Object _)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1279BA0", Offset = "0x1279BA0", VA = "0x1279BA0")]
	private void restartRequestCoroutine()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1279968", Offset = "0x1279968", VA = "0x1279968")]
	public void QueryOnlineLeaderboards()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1279C68", Offset = "0x1279C68", VA = "0x1279C68")]
	private void onGetUserHighscore(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1279BF4", Offset = "0x1279BF4", VA = "0x1279BF4")]
	[IteratorStateMachine(typeof(<sendNewDelayedQuery>d__19))]
	private IEnumerator sendNewDelayedQuery()
	{
		return null;
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1279DA0", Offset = "0x1279DA0", VA = "0x1279DA0")]
	public OnlineLeaderboardsManager()
	{
	}
}
[Token(Token = "0x2000110")]
[CreateAssetMenu(fileName = "LevelCreationSettings", menuName = "GBA/Levels/Level Creation Settings")]
public class LevelCreationSettings : ScriptableObject
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General Settings")]
	public string LevelIdsFolder;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string LevelDisplaySettingsFolder;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string LocalizedTextsFolder;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcAudioEvent DefaultGameAmbianceEvent;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public rcLocalizedText LocalizedRuleShotsLimit;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public rcLocalizedText LocalizedRuleTimeLimit;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public rcLocalizedText LocalizedRuleNoTimeLimit;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Naming Settings")]
	public rcLocalizedText LocalizedStoryGameMode;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcLocalizedText LocalizedStoryLevelType;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string LocalizedLevelTitleBase;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string LevelIdBase;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string LevelDisplaySettingsBase;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string HandsLeaderboardsFolder;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string ControllersLeaderboardsFolder;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string LeaderboardAssetNameBase;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string LeaderboardApiNameBase;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string LeaderboardApiNameBaseSuffix;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Leaderboards Settings")]
	public LeaderboardsSettings LeaderboardsSettings;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string ControllersLeaderboardAssetSuffix;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string ControllersLeaderboardApiSuffix;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private int _lastLevelSettingsId;

	[Token(Token = "0x1700010D")]
	public bool AllAssetsFound
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x1279F88", Offset = "0x1279F88", VA = "0x1279F88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010E")]
	public bool LeaderboardsSettingsFound
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x1279FB0", Offset = "0x1279FB0", VA = "0x1279FB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010F")]
	public bool LocalizedTextsFound
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x127A010", Offset = "0x127A010", VA = "0x127A010")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x127A120", Offset = "0x127A120", VA = "0x127A120")]
	public string GetHandsLeaderboardAssetName(string levelIndex)
	{
		return null;
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x127A17C", Offset = "0x127A17C", VA = "0x127A17C")]
	public string GetControllersLeaderboardAssetName(string levelIndex)
	{
		return null;
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x127A1DC", Offset = "0x127A1DC", VA = "0x127A1DC")]
	public string GetHandsLeaderboardApiName(int levelIndex, string levelName)
	{
		return null;
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x127A438", Offset = "0x127A438", VA = "0x127A438")]
	public string GetControllersLeaderboardApiName(int levelIndex, string levelName)
	{
		return null;
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x127A6CC", Offset = "0x127A6CC", VA = "0x127A6CC")]
	public string GetHandsLeaderboardFullPath(string levelName)
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x127A750", Offset = "0x127A750", VA = "0x127A750")]
	public string GetControllersLeaderboardFullPath(string levelName)
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x127A7D4", Offset = "0x127A7D4", VA = "0x127A7D4")]
	public LevelCreationSettings()
	{
	}
}
[Token(Token = "0x2000111")]
[CreateAssetMenu(fileName = "LevelList", menuName = "GBA/Levels/Level List")]
public class LevelList : ScriptableObject
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<LevelSettings> _levels;

	[NonSerialized]
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RuntimeIndex;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _displayLevelsIndex;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Unlockable _unlockable;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcLocalizedText _levelListLocalizedName;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite LevelListIcon;

	[Token(Token = "0x17000110")]
	public bool DisplayLevelsIndex
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x127A9DC", Offset = "0x127A9DC", VA = "0x127A9DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000111")]
	public Unlockable Unlockable
	{
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x127A9E4", Offset = "0x127A9E4", VA = "0x127A9E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000112")]
	public rcLocalizedText LevelListLocalizedName
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x127A9EC", Offset = "0x127A9EC", VA = "0x127A9EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000113")]
	public LevelSettings this[int index]
	{
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x127A9F4", Offset = "0x127A9F4", VA = "0x127A9F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000114")]
	public ReadOnlyCollection<LevelSettings> LevelsCollection
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x127AA4C", Offset = "0x127AA4C", VA = "0x127AA4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public int Count
	{
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x127AA9C", Offset = "0x127AA9C", VA = "0x127AA9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x127AAE4", Offset = "0x127AAE4", VA = "0x127AAE4")]
	public int IndexOf(LevelSettings levelId)
	{
		return default(int);
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x127AB48", Offset = "0x127AB48", VA = "0x127AB48")]
	public string GetLevelListName()
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x127ABC8", Offset = "0x127ABC8", VA = "0x127ABC8")]
	public LevelList()
	{
	}
}
[Token(Token = "0x2000112")]
[CreateAssetMenu(fileName = "LI_LevelId", menuName = "GBA/Levels/Level ID")]
public class LevelSettings : ScriptableObject
{
	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LevelPrefab;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcAudioEvent[] GameAmbianceEvents;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Display")]
	[SerializeField]
	private LevelDisplaySettings _displaySettings;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite LevelBossIcone;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int _id;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D spriteSheet;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[Header("Leaderboards")]
	private Leaderboard _handsLeaderboard;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Leaderboard _controllersLeaderboard;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool _unlockedByDefault;

	[Token(Token = "0x17000116")]
	public GameObject RuntimeRoot
	{
		[Token(Token = "0x6000693")]
		[Address(RVA = "0x127ABD8", Offset = "0x127ABD8", VA = "0x127ABD8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000694")]
		[Address(RVA = "0x127ABE0", Offset = "0x127ABE0", VA = "0x127ABE0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public PlayManager RuntimePlayManager
	{
		[Token(Token = "0x6000695")]
		[Address(RVA = "0x127ABE8", Offset = "0x127ABE8", VA = "0x127ABE8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000696")]
		[Address(RVA = "0x127ABF0", Offset = "0x127ABF0", VA = "0x127ABF0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public RewardManager RuntimeRewardManager
	{
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x127ABF8", Offset = "0x127ABF8", VA = "0x127ABF8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x127AC00", Offset = "0x127AC00", VA = "0x127AC00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public LevelList RuntimeLevelList
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x127AC08", Offset = "0x127AC08", VA = "0x127AC08")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x127AC10", Offset = "0x127AC10", VA = "0x127AC10")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public int RuntimeIndex
	{
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x127AC18", Offset = "0x127AC18", VA = "0x127AC18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011B")]
	public int Id
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x127ACA0", Offset = "0x127ACA0", VA = "0x127ACA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011C")]
	public LevelDisplaySettings DisplaySettings
	{
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x127ACA8", Offset = "0x127ACA8", VA = "0x127ACA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public bool Unlocked
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x127ACB0", Offset = "0x127ACB0", VA = "0x127ACB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011E")]
	public Leaderboard HandsLeaderboard
	{
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x127AD2C", Offset = "0x127AD2C", VA = "0x127AD2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public Leaderboard ControllersLeaderboard
	{
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x127AD34", Offset = "0x127AD34", VA = "0x127AD34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000120")]
	public bool UnlockedByDefault
	{
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x127AD3C", Offset = "0x127AD3C", VA = "0x127AD3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x127AD44", Offset = "0x127AD44", VA = "0x127AD44")]
	public void Init(GameObject runtimeRoot, PlayManager runtimePlayManager, RewardManager runtimeRewardManager)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x127AD88", Offset = "0x127AD88", VA = "0x127AD88")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x127ADC0", Offset = "0x127ADC0", VA = "0x127ADC0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x127B0B0", Offset = "0x127B0B0", VA = "0x127B0B0")]
	public static string GetLevelName(LevelSettings levelSettings)
	{
		return null;
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x127B15C", Offset = "0x127B15C", VA = "0x127B15C")]
	public LevelSettings()
	{
	}
}
[Token(Token = "0x2000113")]
public class LevelsManager : NetworkBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelsManager Instance;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private List<LevelList> _levelLists;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _spawnedLevelRoot;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Space]
	public UnityEvent OnLevelLoad;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent OnLevelQuit;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<rcBoolGameParameter> BooleansToReset;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<rcIntGameParameter> IntegersToReset;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public rcAudioEventGameParameter GameAmbianceParameter;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Tutorial")]
	[SerializeField]
	private TutorialManager _tutorialManager;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<int, int> OnLoadLevelEvent;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject _levelGameObject;

	[Token(Token = "0x17000121")]
	public PlayStateParameter CurrentPlayState
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x127B240", Offset = "0x127B240", VA = "0x127B240")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000122")]
	public ReadOnlyCollection<LevelList> LevelLists
	{
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x127B248", Offset = "0x127B248", VA = "0x127B248")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000123")]
	public LevelList CurrentLevelList
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x127B298", Offset = "0x127B298", VA = "0x127B298")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x127B2A0", Offset = "0x127B2A0", VA = "0x127B2A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public int CurrentLevelListIndex
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x127B2A8", Offset = "0x127B2A8", VA = "0x127B2A8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x127B2B0", Offset = "0x127B2B0", VA = "0x127B2B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public int CurrentLevelIndex
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x127B2B8", Offset = "0x127B2B8", VA = "0x127B2B8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x127B2C0", Offset = "0x127B2C0", VA = "0x127B2C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public LevelSettings CurrentLevel
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x127B2C8", Offset = "0x127B2C8", VA = "0x127B2C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000127")]
	public bool CurrentLevelIsLast
	{
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x127B3A4", Offset = "0x127B3A4", VA = "0x127B3A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000128")]
	public bool CurrentLevelIsActive
	{
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x127B444", Offset = "0x127B444", VA = "0x127B444")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000129")]
	public bool CurrentLevelIsLastUnlocked
	{
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x127B4E0", Offset = "0x127B4E0", VA = "0x127B4E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012A")]
	private PlayManager ActiveTutoPlayManager
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x127B770", Offset = "0x127B770", VA = "0x127B770")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000D")]
	public static event UnityAction OnInitialized
	{
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x12698BC", Offset = "0x12698BC", VA = "0x12698BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x127B164", Offset = "0x127B164", VA = "0x127B164")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x127B830", Offset = "0x127B830", VA = "0x127B830")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x127BA4C", Offset = "0x127BA4C", VA = "0x127BA4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x127B904", Offset = "0x127B904", VA = "0x127B904")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x127BB60", Offset = "0x127BB60", VA = "0x127BB60")]
	public LevelSettings GetCurrentLevelId()
	{
		return null;
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x127BC20", Offset = "0x127BC20", VA = "0x127BC20")]
	public PlayManager GetCurrentPlayManager()
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x127BCEC", Offset = "0x127BCEC", VA = "0x127BCEC")]
	public RewardManager GetCurrentRewardManager()
	{
		return null;
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x127B504", Offset = "0x127B504", VA = "0x127B504")]
	public bool TryGetNextUnlockedLevel(out int nextLevelListIndex, out int nextLevelIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x127BDD4", Offset = "0x127BDD4", VA = "0x127BDD4")]
	public void OpenLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x127BE18", Offset = "0x127BE18", VA = "0x127BE18")]
	[Command(requiresAuthority = false)]
	private void CmdOpenLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x127BF58", Offset = "0x127BF58", VA = "0x127BF58")]
	[ClientRpc]
	private void RpcOpenLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x127C098", Offset = "0x127C098", VA = "0x127C098")]
	private void openLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x127C4F8", Offset = "0x127C4F8", VA = "0x127C4F8")]
	public void OpenLocalLevel(LevelSettings levelId)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x127C740", Offset = "0x127C740", VA = "0x127C740")]
	public void QuitLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x127C8C4", Offset = "0x127C8C4", VA = "0x127C8C4")]
	public void QuitLocalLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x127C784", Offset = "0x127C784", VA = "0x127C784")]
	[Command(requiresAuthority = false)]
	private void CmdQuitLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x127C8C8", Offset = "0x127C8C8", VA = "0x127C8C8")]
	[ClientRpc]
	private void RpcQuitLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x127C3B0", Offset = "0x127C3B0", VA = "0x127C3B0")]
	private void quitLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x127CB74", Offset = "0x127CB74", VA = "0x127CB74")]
	[ContextMenu("Next Level")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x127CB9C", Offset = "0x127CB9C", VA = "0x127CB9C")]
	[Command(requiresAuthority = false)]
	private void CmdNextLevel()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x127CC88", Offset = "0x127CC88", VA = "0x127CC88")]
	[ClientRpc]
	private void RpcNextLevel()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x127CD74", Offset = "0x127CD74", VA = "0x127CD74")]
	private void nextLevel()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x127CDC0", Offset = "0x127CDC0", VA = "0x127CDC0")]
	public void QuitPlayMode()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x127CA08", Offset = "0x127CA08", VA = "0x127CA08")]
	public bool IsLevelOpened(int levelListIndex, int levelIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x127C644", Offset = "0x127C644", VA = "0x127C644")]
	public void ResetParameters()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x127CE78", Offset = "0x127CE78", VA = "0x127CE78")]
	public void ShowTutorial(XRInputTracker.XRInputSystem currentInputSystem)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x127CF0C", Offset = "0x127CF0C", VA = "0x127CF0C")]
	public bool TryShowNextTutorialLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x127CF94", Offset = "0x127CF94", VA = "0x127CF94")]
	public LevelsManager()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x127CF9C", Offset = "0x127CF9C", VA = "0x127CF9C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x127CFA0", Offset = "0x127CFA0", VA = "0x127CFA0")]
	protected void UserCode_CmdOpenLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x127D000", Offset = "0x127D000", VA = "0x127D000")]
	protected static void InvokeUserCode_CmdOpenLevel(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x127D188", Offset = "0x127D188", VA = "0x127D188")]
	protected void UserCode_RpcOpenLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x127D18C", Offset = "0x127D18C", VA = "0x127D18C")]
	protected static void InvokeUserCode_RpcOpenLevel(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x127D2E0", Offset = "0x127D2E0", VA = "0x127D2E0")]
	protected void UserCode_CmdQuitLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x127D340", Offset = "0x127D340", VA = "0x127D340")]
	protected static void InvokeUserCode_CmdQuitLevel(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x127D4C8", Offset = "0x127D4C8", VA = "0x127D4C8")]
	protected void UserCode_RpcQuitLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x127D4CC", Offset = "0x127D4CC", VA = "0x127D4CC")]
	protected static void InvokeUserCode_RpcQuitLevel(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x127D620", Offset = "0x127D620", VA = "0x127D620")]
	protected void UserCode_CmdNextLevel()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x127D648", Offset = "0x127D648", VA = "0x127D648")]
	protected static void InvokeUserCode_CmdNextLevel(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x127D778", Offset = "0x127D778", VA = "0x127D778")]
	protected void UserCode_RpcNextLevel()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x127D77C", Offset = "0x127D77C", VA = "0x127D77C")]
	protected static void InvokeUserCode_RpcNextLevel(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x127D878", Offset = "0x127D878", VA = "0x127D878")]
	static LevelsManager()
	{
	}
}
[Token(Token = "0x2000114")]
[CreateAssetMenu(menuName = "GBA/Rewards/UnlockNextLevel Unlockable")]
public class NextLevelUnlock : Unlockable
{
	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x127EBD0", Offset = "0x127EBD0", VA = "0x127EBD0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x127EBD4", Offset = "0x127EBD4", VA = "0x127EBD4", Slot = "11")]
	public override void Unlock()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x127ED80", Offset = "0x127ED80", VA = "0x127ED80")]
	public NextLevelUnlock()
	{
	}
}
[Token(Token = "0x2000115")]
public class TutorialLevelAnimation : MonoBehaviour
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _tutorialAnimationPrefab;

	[Token(Token = "0x1700012B")]
	public GameObject TutorialAnimationPrefab
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x127EDD8", Offset = "0x127EDD8", VA = "0x127EDD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x127EDE0", Offset = "0x127EDE0", VA = "0x127EDE0")]
	public TutorialLevelAnimation()
	{
	}
}
[Token(Token = "0x2000116")]
public class TutorialManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000117")]
	public struct InputSpecificTutorialLevels
	{
		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public XRInputTracker.XRInputSystem InputSystem;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LevelSettings[] LevelsList;
	}

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputSpecificTutorialLevels[] _tutorialLevels;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _showControllersTutoParam;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcGameEvent _tutorialCompletedEvent;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<XRInputTracker.XRInputSystem, List<LevelSettings>> _levelsIndex;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LevelSettings> _currentTutorialList;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentTutorialLevelIndex;

	[Token(Token = "0x1700012C")]
	public LevelSettings CurrentTutorialLevel
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x127EDE8", Offset = "0x127EDE8", VA = "0x127EDE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public LevelSettings NextTutorialLevel
	{
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x127EE64", Offset = "0x127EE64", VA = "0x127EE64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x127EEE8", Offset = "0x127EEE8", VA = "0x127EEE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x127F15C", Offset = "0x127F15C", VA = "0x127F15C")]
	public ReadOnlyCollection<LevelSettings> GetTutorialLevelsList(XRInputTracker.XRInputSystem inputSystem)
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x127F200", Offset = "0x127F200", VA = "0x127F200")]
	public void ShowTutorial(XRInputSystemParameter inputSystemParmeter)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x127F298", Offset = "0x127F298", VA = "0x127F298")]
	public void ShowTutorial(XRInputTracker.XRInputSystem currentInputSystem)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x127F4D8", Offset = "0x127F4D8", VA = "0x127F4D8")]
	public bool TryShowNextTutorialLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x127F6F8", Offset = "0x127F6F8", VA = "0x127F6F8")]
	public void OnTutoLevelCompleted(XRInputSystemParameter saveCreatedWithInputParameter)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x127F83C", Offset = "0x127F83C", VA = "0x127F83C")]
	public void DisableTutorialLevel()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x127FAB4", Offset = "0x127FAB4", VA = "0x127FAB4")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x2000118")]
public class Lissajous : MonoBehaviour
{
	[Token(Token = "0x2000119")]
	public enum Type
	{
		[Token(Token = "0x4000640")]
		L3D,
		[Token(Token = "0x4000641")]
		L3DN,
		[Token(Token = "0x4000642")]
		L3DN2,
		[Token(Token = "0x4000643")]
		L3D1OverN2,
		[Token(Token = "0x4000644")]
		COUNT
	}

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public GameObject[] _cubes;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int CubesCount;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float CubesDelay;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _cubesInternalDelay;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material TestMaterial;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float speed;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _internalSpeed;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _initialized;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Type type;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 abc;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _t;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float n;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float phi;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float psi;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool orienteTowards;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x127FABC", Offset = "0x127FABC", VA = "0x127FABC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x127FE7C", Offset = "0x127FE7C", VA = "0x127FE7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x127FF34", Offset = "0x127FF34", VA = "0x127FF34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x127FFF0", Offset = "0x127FFF0", VA = "0x127FFF0")]
	private Vector3 computePos(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x128016C", Offset = "0x128016C", VA = "0x128016C")]
	[ContextMenu("Enable")]
	public void Enable()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1280188", Offset = "0x1280188", VA = "0x1280188")]
	public void UpdateSpeed(float newSpeed)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x128017C", Offset = "0x128017C", VA = "0x128017C")]
	public void ResetSpeed()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1280190", Offset = "0x1280190", VA = "0x1280190")]
	public void Pause(bool enable)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x12801B4", Offset = "0x12801B4", VA = "0x12801B4")]
	[ContextMenu("Reset")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x12801C4", Offset = "0x12801C4", VA = "0x12801C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x12804F4", Offset = "0x12804F4", VA = "0x12804F4")]
	public Lissajous()
	{
	}
}
[Token(Token = "0x200011A")]
[RequireComponent(typeof(Lissajous))]
public class LissajousPlayerOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Lissajous _lissajous;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1280538", Offset = "0x1280538", VA = "0x1280538")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1280600", Offset = "0x1280600", VA = "0x1280600")]
	public LissajousPlayerOnEnable()
	{
	}
}
[Token(Token = "0x200011B")]
public class LissajousSpeedUpdater : MonoBehaviour
{
	[Token(Token = "0x200011C")]
	[CompilerGenerated]
	private sealed class <TransitionSpeed>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LissajousSpeedUpdater <>4__this;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000703")]
			[Address(RVA = "0x1280860", Offset = "0x1280860", VA = "0x1280860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x12808A8", Offset = "0x12808A8", VA = "0x12808A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x12806BC", Offset = "0x12806BC", VA = "0x12806BC")]
		[DebuggerHidden]
		public <TransitionSpeed>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x12806FC", Offset = "0x12806FC", VA = "0x12806FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1280700", Offset = "0x1280700", VA = "0x1280700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1280868", Offset = "0x1280868", VA = "0x1280868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Lissajous lissajous;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public float TransitionStartDelay;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve TransitionCurve;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TransitionDuration;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Space]
	public float TargetSpeed;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _speed;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1280608", Offset = "0x1280608", VA = "0x1280608")]
	public void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1280628", Offset = "0x1280628", VA = "0x1280628")]
	public void Enable()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1280648", Offset = "0x1280648", VA = "0x1280648")]
	[IteratorStateMachine(typeof(<TransitionSpeed>d__8))]
	private IEnumerator TransitionSpeed()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x12806E4", Offset = "0x12806E4", VA = "0x12806E4")]
	public void Disable()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x12806EC", Offset = "0x12806EC", VA = "0x12806EC")]
	public LissajousSpeedUpdater()
	{
	}
}
[Token(Token = "0x200011D")]
public class LissajousUpdater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200011E")]
	public class MutlipleCurvesObject
	{
		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Lissajous> CurvesObject;

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1281514", Offset = "0x1281514", VA = "0x1281514")]
		public MutlipleCurvesObject()
		{
		}
	}

	[Token(Token = "0x200011F")]
	[CompilerGenerated]
	private sealed class <TimeBaseChangeOfCurve>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LissajousUpdater <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000712")]
			[Address(RVA = "0x12815E4", Offset = "0x12815E4", VA = "0x12815E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000714")]
			[Address(RVA = "0x128162C", Offset = "0x128162C", VA = "0x128162C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x1280AF0", Offset = "0x1280AF0", VA = "0x1280AF0")]
		[DebuggerHidden]
		public <TimeBaseChangeOfCurve>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x128151C", Offset = "0x128151C", VA = "0x128151C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1281520", Offset = "0x1281520", VA = "0x1281520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x12815EC", Offset = "0x12815EC", VA = "0x12815EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000120")]
	[CompilerGenerated]
	private sealed class <DisableCurveObject>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject lissajousObject;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0x12816EC", Offset = "0x12816EC", VA = "0x12816EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0x1281734", Offset = "0x1281734", VA = "0x1281734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1280F54", Offset = "0x1280F54", VA = "0x1280F54")]
		[DebuggerHidden]
		public <DisableCurveObject>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x1281634", Offset = "0x1281634", VA = "0x1281634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x1281638", Offset = "0x1281638", VA = "0x1281638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x12816F4", Offset = "0x12816F4", VA = "0x12816F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DestroyOnChange;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _isUpdating;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MutlipleCurvesObject> CurvesObject;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _lastIndex;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int _currentSelectedCurve;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public rcAudioSource DestroyedGraveSource;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public rcAudioEvent DestroyGraveEvent;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	public bool TimeBaseChange;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float TimeToChangeToNextCurve;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnBeforeCurveChanged;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnCurveChanged;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnCurveChangedAudio;

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x12808B0", Offset = "0x12808B0", VA = "0x12808B0")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1280A7C", Offset = "0x1280A7C", VA = "0x1280A7C")]
	[IteratorStateMachine(typeof(<TimeBaseChangeOfCurve>d__14))]
	private IEnumerator TimeBaseChangeOfCurve()
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1280B18", Offset = "0x1280B18", VA = "0x1280B18")]
	private void ChangeCurve(bool enableOnChange)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1280EE0", Offset = "0x1280EE0", VA = "0x1280EE0")]
	[IteratorStateMachine(typeof(<DisableCurveObject>d__16))]
	private IEnumerator DisableCurveObject(GameObject lissajousObject)
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1280F7C", Offset = "0x1280F7C", VA = "0x1280F7C")]
	public void DisableCurrentCurve()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x12811A0", Offset = "0x12811A0", VA = "0x12811A0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1281498", Offset = "0x1281498", VA = "0x1281498")]
	[ContextMenu("Change To Next Curve")]
	public void ChangeToNextCurve()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1281504", Offset = "0x1281504", VA = "0x1281504")]
	public LissajousUpdater()
	{
	}
}
[Token(Token = "0x2000121")]
[CreateAssetMenu(fileName = "SLS_ScenesLoadingSettings", menuName = "GBA/Scene Loading/Scenes Loading Settings")]
public class GBASceneLoadingSettings : ScriptableObject
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SceneSettings _bootSceneSettings;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SceneSettings _mainSceneSettings;

	[Token(Token = "0x17000134")]
	public SceneSettings BootSceneSettings
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x128173C", Offset = "0x128173C", VA = "0x128173C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000135")]
	public SceneSettings MainSceneSettings
	{
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1281744", Offset = "0x1281744", VA = "0x1281744")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x128174C", Offset = "0x128174C", VA = "0x128174C")]
	public GBASceneLoadingSettings()
	{
	}
}
[Token(Token = "0x2000122")]
public class LevelChallengeSelectedIndexSave : MonoBehaviour
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _loggedInUserID;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityAction _onPlayerLoggedIn;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcIntGameParameter _defaultSelectedLevelIndex;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcIntGameParameter _defaultSelectedChallengeIndex;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LevelList _defaultLevelList;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Menu_Level_Manager _menuLevelManager;

	[Token(Token = "0x17000136")]
	private string _defaultSelectedLevelIndexKey
	{
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1281754", Offset = "0x1281754", VA = "0x1281754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000137")]
	private string _defaultSelectedChallengeIndexKey
	{
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x12817A0", Offset = "0x12817A0", VA = "0x12817A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000138")]
	private string _defaultSelectedLevelListKey
	{
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x12817EC", Offset = "0x12817EC", VA = "0x12817EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1281838", Offset = "0x1281838", VA = "0x1281838")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x12819A4", Offset = "0x12819A4", VA = "0x12819A4")]
	private void loadIndex()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1281C9C", Offset = "0x1281C9C", VA = "0x1281C9C")]
	private void saveIndex()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1281D40", Offset = "0x1281D40", VA = "0x1281D40")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1281D44", Offset = "0x1281D44", VA = "0x1281D44")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1281D50", Offset = "0x1281D50", VA = "0x1281D50")]
	public LevelChallengeSelectedIndexSave()
	{
	}
}
[Token(Token = "0x2000123")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000124")]
	[CompilerGenerated]
	private sealed class <onAudioReadyCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0x1282010", Offset = "0x1282010", VA = "0x1282010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0x1282058", Offset = "0x1282058", VA = "0x1282058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1281E9C", Offset = "0x1281E9C", VA = "0x1281E9C")]
		[DebuggerHidden]
		public <onAudioReadyCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1281F84", Offset = "0x1281F84", VA = "0x1281F84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1281F88", Offset = "0x1281F88", VA = "0x1281F88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1282018", Offset = "0x1282018", VA = "0x1282018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000125")]
	[CompilerGenerated]
	private sealed class <loadSceneAsyncCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0x1282250", Offset = "0x1282250", VA = "0x1282250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x1282298", Offset = "0x1282298", VA = "0x1282298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1281F38", Offset = "0x1281F38", VA = "0x1281F38")]
		[DebuggerHidden]
		public <loadSceneAsyncCoroutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1282060", Offset = "0x1282060", VA = "0x1282060", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1282064", Offset = "0x1282064", VA = "0x1282064", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1282258", Offset = "0x1282258", VA = "0x1282258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GBASceneLoadingSettings _sceneLoadingSettings;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip _audioClip;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CanvasFadeOut _fadeOut;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AsyncOperation _asyncLoadOperation;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _animationAndAudioEnded;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1281D58", Offset = "0x1281D58", VA = "0x1281D58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1281DFC", Offset = "0x1281DFC", VA = "0x1281DFC")]
	public void EnableSceneActivation()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1281D88", Offset = "0x1281D88", VA = "0x1281D88")]
	[IteratorStateMachine(typeof(<onAudioReadyCoroutine>d__7))]
	private IEnumerator onAudioReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1281EC4", Offset = "0x1281EC4", VA = "0x1281EC4")]
	[IteratorStateMachine(typeof(<loadSceneAsyncCoroutine>d__8))]
	private IEnumerator loadSceneAsyncCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1281F60", Offset = "0x1281F60", VA = "0x1281F60")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x2000126")]
[CreateAssetMenu(fileName = "SS_SceneSettings", menuName = "GBA/Scene Loading/Scene Settings")]
public class SceneSettings : ScriptableObject
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _scenePath;

	[Token(Token = "0x1700013D")]
	public string ScenePath
	{
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x12822A0", Offset = "0x12822A0", VA = "0x12822A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x12822A8", Offset = "0x12822A8", VA = "0x12822A8")]
	public SceneSettings()
	{
	}
}
[Token(Token = "0x2000127")]
public enum FontType
{
	[Token(Token = "0x4000679")]
	Title,
	[Token(Token = "0x400067A")]
	TitleOutline,
	[Token(Token = "0x400067B")]
	Corps,
	[Token(Token = "0x400067C")]
	CorpsOutline
}
[Token(Token = "0x2000128")]
public class LocalizedFontManager : rcSingleton<LocalizedFontManager>
{
	[Serializable]
	[Token(Token = "0x2000129")]
	public struct LocalizedFontType
	{
		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FontType Type;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LocalizedFont LocalizedFontAsset;
	}

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<LocalizedFontType> LocalizedFonts;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x12822B0", Offset = "0x12822B0", VA = "0x12822B0")]
	public TMP_FontAsset GetFontAsset(FontType type)
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1282464", Offset = "0x1282464", VA = "0x1282464")]
	public LocalizedFontManager()
	{
	}
}
[Token(Token = "0x200012A")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _cameraTransform;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _newPos;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Offset")]
	public float _offSetX;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _offSetY;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _offSetZ;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("LockAxis")]
	public bool LockVerticalRotation;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[Header("Elastic")]
	public bool elastic;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float elasticMultiplier;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool DrawDebug;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x12826F8", Offset = "0x12826F8", VA = "0x12826F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x128272C", Offset = "0x128272C", VA = "0x128272C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x12828DC", Offset = "0x12828DC", VA = "0x12828DC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1282948", Offset = "0x1282948", VA = "0x1282948")]
	public LookAt()
	{
	}
}
[Token(Token = "0x200012B")]
public class MaterialSwapper : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200012C")]
	public class MaterialsToChange
	{
		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material ApparitionMaterial;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material NormalMaterial;

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1282DE4", Offset = "0x1282DE4", VA = "0x1282DE4")]
		public MaterialsToChange()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200012D")]
	public class Swapper
	{
		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ObjectToSwapMaterial;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<MaterialsToChange> Materials;

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1282DEC", Offset = "0x1282DEC", VA = "0x1282DEC")]
		public Swapper()
		{
		}
	}

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<Swapper> Swappers;

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x12829BC", Offset = "0x12829BC", VA = "0x12829BC")]
	[ContextMenu("Swap to Normal")]
	public void SwapToNormalMaterial()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1282BCC", Offset = "0x1282BCC", VA = "0x1282BCC")]
	[ContextMenu("Swap to Apparition")]
	public void SwapToApparitionMaterial()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1282DDC", Offset = "0x1282DDC", VA = "0x1282DDC")]
	public MaterialSwapper()
	{
	}
}
[Token(Token = "0x200012E")]
public class MontreChronometre : MonoBehaviour
{
	[Token(Token = "0x200012F")]
	[CompilerGenerated]
	private sealed class <UpdateTime>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToWait;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MontreChronometre <>4__this;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <yieldInstruction>5__2;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600074F")]
			[Address(RVA = "0x1283304", Offset = "0x1283304", VA = "0x1283304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000751")]
			[Address(RVA = "0x128334C", Offset = "0x128334C", VA = "0x128334C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1282F34", Offset = "0x1282F34", VA = "0x1282F34")]
		[DebuggerHidden]
		public <UpdateTime>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x12830A8", Offset = "0x12830A8", VA = "0x12830A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x12830AC", Offset = "0x12830AC", VA = "0x12830AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x128330C", Offset = "0x128330C", VA = "0x128330C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Chronometre;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Timer _timer;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcFloatGameParameter _watchTime;

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1282DF4", Offset = "0x1282DF4", VA = "0x1282DF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1282EB0", Offset = "0x1282EB0", VA = "0x1282EB0")]
	[IteratorStateMachine(typeof(<UpdateTime>d__4))]
	private IEnumerator UpdateTime(float TimeToWait)
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1282F5C", Offset = "0x1282F5C", VA = "0x1282F5C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1282F88", Offset = "0x1282F88", VA = "0x1282F88")]
	private void updateDisplay(string hours, string minutes, string seconds)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x128306C", Offset = "0x128306C", VA = "0x128306C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x12830A0", Offset = "0x12830A0", VA = "0x12830A0")]
	public MontreChronometre()
	{
	}
}
[Token(Token = "0x2000130")]
public class Movement3DSpace : MonoBehaviour
{
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Lenght;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Width;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Height;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1283354", Offset = "0x1283354", VA = "0x1283354")]
	public void MoveObject(GameObject objectToMove)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x1283488", Offset = "0x1283488", VA = "0x1283488")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x12834D8", Offset = "0x12834D8", VA = "0x12834D8")]
	public Movement3DSpace()
	{
	}
}
[Token(Token = "0x2000131")]
public class MovementPivotRail : MonoBehaviour
{
	[Token(Token = "0x2000132")]
	public enum LoopType
	{
		[Token(Token = "0x40006A3")]
		NoLoop,
		[Token(Token = "0x40006A4")]
		Loop,
		[Token(Token = "0x40006A5")]
		PingPong
	}

	[Token(Token = "0x2000133")]
	[CompilerGenerated]
	private sealed class <LerpRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementPivotRail <>4__this;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startRot>5__3;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <endRot>5__4;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600075E")]
			[Address(RVA = "0x1283B8C", Offset = "0x1283B8C", VA = "0x1283B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x1283BD4", Offset = "0x1283BD4", VA = "0x1283BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1283818", Offset = "0x1283818", VA = "0x1283818")]
		[DebuggerHidden]
		public <LerpRotation>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x1283848", Offset = "0x1283848", VA = "0x1283848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x128384C", Offset = "0x128384C", VA = "0x128384C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x1283B94", Offset = "0x1283B94", VA = "0x1283B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RotatingObjectParent;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] Giroscopes;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Quaternion> GiroscopesStartRot;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _objectParentStartRot;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float RotationSpeed;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve LerpCurve;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 RotatingAxis;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public LoopType Loop;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _pongReturn;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x12834F0", Offset = "0x12834F0", VA = "0x12834F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x1283664", Offset = "0x1283664", VA = "0x1283664")]
	[ContextMenu("Start Rotation")]
	public void StartRotating()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x1283704", Offset = "0x1283704", VA = "0x1283704")]
	[ContextMenu("Stop Rotating")]
	public void StopRotating()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x128370C", Offset = "0x128370C", VA = "0x128370C")]
	[ContextMenu("Reset")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1283690", Offset = "0x1283690", VA = "0x1283690")]
	[IteratorStateMachine(typeof(<LerpRotation>d__14))]
	public IEnumerator LerpRotation()
	{
		return null;
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x1283840", Offset = "0x1283840", VA = "0x1283840")]
	public MovementPivotRail()
	{
	}
}
[Token(Token = "0x2000134")]
public class MovementRail : MonoBehaviour
{
	[Token(Token = "0x2000135")]
	public enum LoopType
	{
		[Token(Token = "0x40006C0")]
		NoLoop,
		[Token(Token = "0x40006C1")]
		Loop,
		[Token(Token = "0x40006C2")]
		PingPong,
		[Token(Token = "0x40006C3")]
		Step
	}

	[Token(Token = "0x2000136")]
	private enum BlockedAxis
	{
		[Token(Token = "0x40006C5")]
		None,
		[Token(Token = "0x40006C6")]
		X,
		[Token(Token = "0x40006C7")]
		Y,
		[Token(Token = "0x40006C8")]
		Z,
		[Token(Token = "0x40006C9")]
		XY,
		[Token(Token = "0x40006CA")]
		XZ,
		[Token(Token = "0x40006CB")]
		YZ
	}

	[Token(Token = "0x2000137")]
	[CompilerGenerated]
	private sealed class <LerpMovable>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementRail <>4__this;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int waypointIndex;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <endPos>5__4;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion <startRot>5__5;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion <endRot>5__6;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float <uniformT>5__7;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0x1284BBC", Offset = "0x1284BBC", VA = "0x1284BBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0x1284C04", Offset = "0x1284C04", VA = "0x1284C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1283F4C", Offset = "0x1283F4C", VA = "0x1283F4C")]
		[DebuggerHidden]
		public <LerpMovable>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x12841A4", Offset = "0x12841A4", VA = "0x12841A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x12841A8", Offset = "0x12841A8", VA = "0x12841A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1284BC4", Offset = "0x1284BC4", VA = "0x1284BC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Waypoints")]
	public MovementRailWaypointList WaypointList;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] WaypointPosition;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int StartWaypointIndex;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public GameObject MovableObjectParent;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Movements")]
	public bool UniformSpeed;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MovementSpeed;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve LerpCurve;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LoopType Loop;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action OnMovementEnd;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private BlockedAxis AxisToBlock;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool Teleportation;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool AffectRotation;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool _pongReturn;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool _isLerping;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _currentWaypointIndex;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Difficulty")]
	public rcFloatGameParameter DifficultyMultiplier;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Events")]
	public UnityEvent OnStart;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent OnWaypointReach;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent OnEndReach;

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1283BDC", Offset = "0x1283BDC", VA = "0x1283BDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1283C2C", Offset = "0x1283C2C", VA = "0x1283C2C")]
	[ContextMenu("Start Moving")]
	public void StartMoving()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1283E98", Offset = "0x1283E98", VA = "0x1283E98")]
	public void StartMoving(int waypointIndex)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1283ED8", Offset = "0x1283ED8", VA = "0x1283ED8")]
	public void IncreaseStep()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1283F0C", Offset = "0x1283F0C", VA = "0x1283F0C")]
	public void PauseMoving()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1283F28", Offset = "0x1283F28", VA = "0x1283F28")]
	public void ResumeMoving()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1283D38", Offset = "0x1283D38", VA = "0x1283D38")]
	[ContextMenu("StopMoving")]
	public void StopMoving()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1283F30", Offset = "0x1283F30", VA = "0x1283F30")]
	[ContextMenu("Restart Moving")]
	public void RestartMoving()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1283C04", Offset = "0x1283C04", VA = "0x1283C04")]
	[ContextMenu("Reset")]
	public void Reset()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1283E14", Offset = "0x1283E14", VA = "0x1283E14")]
	[IteratorStateMachine(typeof(<LerpMovable>d__30))]
	public IEnumerator LerpMovable(int waypointIndex)
	{
		return null;
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1283D5C", Offset = "0x1283D5C", VA = "0x1283D5C")]
	public void Teleport(int waypointIndex)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x1283F74", Offset = "0x1283F74", VA = "0x1283F74")]
	private Transform GetCurrentWaypointTransform(int waypointIndex)
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1284044", Offset = "0x1284044", VA = "0x1284044")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x128419C", Offset = "0x128419C", VA = "0x128419C")]
	public MovementRail()
	{
	}
}
[Token(Token = "0x2000138")]
public class MovementRailManager : MonoBehaviour
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MovementRail> Rails;

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1284C0C", Offset = "0x1284C0C", VA = "0x1284C0C")]
	public void StartMoving()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1284C94", Offset = "0x1284C94", VA = "0x1284C94")]
	public void StopMoving()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1284D38", Offset = "0x1284D38", VA = "0x1284D38")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1284DE4", Offset = "0x1284DE4", VA = "0x1284DE4")]
	public MovementRailManager()
	{
	}
}
[Token(Token = "0x2000139")]
[ExecuteInEditMode]
public class MovementRailWaypointList : MonoBehaviour
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> Waypoints;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1284DEC", Offset = "0x1284DEC", VA = "0x1284DEC")]
	public MovementRailWaypointList()
	{
	}
}
[Token(Token = "0x200013A")]
public class RandomMovementRailStart : MonoBehaviour
{
	[Token(Token = "0x200013B")]
	[CompilerGenerated]
	private sealed class <StartAllMovementCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomMovementRailStart <>4__this;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x128520C", Offset = "0x128520C", VA = "0x128520C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x1285254", Offset = "0x1285254", VA = "0x1285254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1284F2C", Offset = "0x1284F2C", VA = "0x1284F2C")]
		[DebuggerHidden]
		public <StartAllMovementCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1285034", Offset = "0x1285034", VA = "0x1285034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1285038", Offset = "0x1285038", VA = "0x1285038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1285214", Offset = "0x1285214", VA = "0x1285214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Can be null if no override needed")]
	public List<MovementRail> OverrideStartMovementRail;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MovementRail> MovementRailScripts;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<MovementRail> _movementRails;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DelayBetweenStart;

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x1284DF4", Offset = "0x1284DF4", VA = "0x1284DF4")]
	public void StartAllMovement()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1284EB8", Offset = "0x1284EB8", VA = "0x1284EB8")]
	[IteratorStateMachine(typeof(<StartAllMovementCoroutine>d__5))]
	private IEnumerator StartAllMovementCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1284F54", Offset = "0x1284F54", VA = "0x1284F54")]
	public void StopAllMovement()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x1285024", Offset = "0x1285024", VA = "0x1285024")]
	public RandomMovementRailStart()
	{
	}
}
[Token(Token = "0x200013C")]
public class MRCLivMenuButtonEnabler : MonoBehaviour
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> ObjectToDisableOnWrongPlateform;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> ObjectToEnableOnRightPlateform;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x128525C", Offset = "0x128525C", VA = "0x128525C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1285380", Offset = "0x1285380", VA = "0x1285380")]
	public MRCLivMenuButtonEnabler()
	{
	}
}
[Token(Token = "0x200013D")]
public class AuthorityIndicator : NetworkBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material _hasAuthorityMat;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material _noAuthorityMat;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AuthorityProvider _authorityProvider;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _hadAuthority;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshRenderer _renderer;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x1285388", Offset = "0x1285388", VA = "0x1285388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1285418", Offset = "0x1285418", VA = "0x1285418")]
	private bool HasAuthority()
	{
		return default(bool);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1285594", Offset = "0x1285594", VA = "0x1285594")]
	private void Update()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x12855F4", Offset = "0x12855F4", VA = "0x12855F4")]
	public AuthorityIndicator()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x12855FC", Offset = "0x12855FC", VA = "0x12855FC")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x200013E")]
public class AuthorityProvider : NetworkBehaviour
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<NetworkIdentity> OnAuthorityUpdated;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool _applyMirrorAuthority;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	private bool _displayAuthorityOwner;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _authorityOwnerName;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _authorityRequestSent;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SyncVar(hook = "authorityHook")]
	private NetworkIdentity _owner;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private uint ____ownerNetId;

	[Token(Token = "0x17000146")]
	public NetworkIdentity Network_owner
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x1285600", Offset = "0x1285600", VA = "0x1285600")]
		get
		{
			return null;
		}
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1285898", Offset = "0x1285898", VA = "0x1285898")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x12854E4", Offset = "0x12854E4", VA = "0x12854E4")]
	public bool LocalClientHasAuthority()
	{
		return default(bool);
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x128546C", Offset = "0x128546C", VA = "0x128546C")]
	public bool ServerHasAuthority()
	{
		return default(bool);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1285610", Offset = "0x1285610", VA = "0x1285610", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x1285790", Offset = "0x1285790", VA = "0x1285790")]
	private void serverDisconnectFromClientHandler(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1285860", Offset = "0x1285860", VA = "0x1285860")]
	public void RevoqueClientAuthority()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x12859B4", Offset = "0x12859B4", VA = "0x12859B4")]
	public void TryRevoqueLocalClientAuthority()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1285BB0", Offset = "0x1285BB0", VA = "0x1285BB0")]
	public void RequestClientAuthority()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1285E38", Offset = "0x1285E38", VA = "0x1285E38")]
	private NetworkIdentity getOwnerLocalPlayer(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1285A70", Offset = "0x1285A70", VA = "0x1285A70")]
	[Command(requiresAuthority = false)]
	private void CmdRevokeAuthority(NetworkIdentity objectId, NetworkIdentity newOwner)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1285CF8", Offset = "0x1285CF8", VA = "0x1285CF8")]
	[Command(requiresAuthority = false)]
	public void CmdRequestAuthority(NetworkIdentity objectId, NetworkIdentity newOwner)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1285F70", Offset = "0x1285F70", VA = "0x1285F70")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1286038", Offset = "0x1286038", VA = "0x1286038")]
	private void authorityHook(NetworkIdentity _, NetworkIdentity newOwner)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x1285C74", Offset = "0x1285C74", VA = "0x1285C74")]
	private bool IsOwner(NetworkIdentity playerIdentity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x128605C", Offset = "0x128605C", VA = "0x128605C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1286064", Offset = "0x1286064", VA = "0x1286064")]
	public AuthorityProvider()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x12860CC", Offset = "0x12860CC", VA = "0x12860CC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x12860D0", Offset = "0x12860D0", VA = "0x12860D0")]
	protected void UserCode_CmdRevokeAuthority(NetworkIdentity objectId, NetworkIdentity newOwner)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x1286210", Offset = "0x1286210", VA = "0x1286210")]
	protected static void InvokeUserCode_CmdRevokeAuthority(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x1286398", Offset = "0x1286398", VA = "0x1286398")]
	protected void UserCode_CmdRequestAuthority(NetworkIdentity objectId, NetworkIdentity newOwner)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x128654C", Offset = "0x128654C", VA = "0x128654C")]
	protected static void InvokeUserCode_CmdRequestAuthority(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x12866D4", Offset = "0x12866D4", VA = "0x12866D4")]
	static AuthorityProvider()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x1286868", Offset = "0x1286868", VA = "0x1286868", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1286944", Offset = "0x1286944", VA = "0x1286944", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200013F")]
public class GBANetworkStory : NetworkBehaviour, INetworkStory
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NetworkManager NetworkManager;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcStorySettings StorySettings;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private rcNetworkGameEventParameter[] _networkGameEventParameters;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private rcNetworkBoolGameParameter[] _networkBoolGameParameters;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private rcNetworkIntGameParameter[] _networkIntGameParameters;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private rcNetworkFloatGameParameter[] _networkFloatGameParameters;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private rcNetworkStringGameParameter[] _networkStringGameParameters;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private rcNetworkTransformGameParameter[] _networkTranformGameParameters;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private rcNetworkVector3GameParameter[] _networkVector3GameParameters;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private rcNetworkQuaternionGameParameter[] _networkQuaternionGameParameters;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private rcNetworkGameObjectGameParameter[] _networkGameObjectGameParameters;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private rcNetworkFocusableObject[] _networkFocusableObjects;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private rcNetworkTouchableObject[] _networkTouchableObjects;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1286A80", Offset = "0x1286A80", VA = "0x1286A80", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1287DD4", Offset = "0x1287DD4", VA = "0x1287DD4", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1286AB4", Offset = "0x1286AB4", VA = "0x1286AB4")]
	private void RegisterClientListeners()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1287DF0", Offset = "0x1287DF0", VA = "0x1287DF0")]
	[ClientRpc]
	public void RpcRaiseGameEvent(int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1287F30", Offset = "0x1287F30", VA = "0x1287F30", Slot = "18")]
	[TargetRpc]
	public void TargetRaiseGameEvent(NetworkConnection target, int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x128807C", Offset = "0x128807C", VA = "0x128807C")]
	[ClientRpc]
	public void RpcSetBoolGameParameter(int index, bool newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x12881D8", Offset = "0x12881D8", VA = "0x12881D8", Slot = "19")]
	[TargetRpc]
	public void TargetSetBoolGameParameter(NetworkConnection target, int index, bool newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1288338", Offset = "0x1288338", VA = "0x1288338")]
	[ClientRpc]
	public void RpcSetIntGameParameter(int index, int newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1288494", Offset = "0x1288494", VA = "0x1288494", Slot = "20")]
	[TargetRpc]
	public void TargetSetIntGameParameter(NetworkConnection target, int index, int newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x12885F4", Offset = "0x12885F4", VA = "0x12885F4")]
	[ClientRpc]
	public void RpcSetFloatGameParameter(int index, float newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1288750", Offset = "0x1288750", VA = "0x1288750", Slot = "22")]
	[TargetRpc]
	public void TargetSetFloatGameParameter(NetworkConnection target, int index, float newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x12888B8", Offset = "0x12888B8", VA = "0x12888B8")]
	[ClientRpc]
	public void RpcSetStringGameParameter(int index, string newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x1288A14", Offset = "0x1288A14", VA = "0x1288A14", Slot = "21")]
	[TargetRpc]
	public void TargetSetStringGameParameter(NetworkConnection target, int index, string newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1288B74", Offset = "0x1288B74", VA = "0x1288B74")]
	[ClientRpc]
	public void RpcSetVector3GameParameter(int index, Vector3 newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x1288CE8", Offset = "0x1288CE8", VA = "0x1288CE8", Slot = "23")]
	[TargetRpc]
	public void TargetSetVector3GameParameter(NetworkConnection target, int index, Vector3 newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1288E68", Offset = "0x1288E68", VA = "0x1288E68")]
	[ClientRpc]
	public void RpcSetQuaternionGameParameter(int index, Quaternion newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x1288FE4", Offset = "0x1288FE4", VA = "0x1288FE4", Slot = "24")]
	[TargetRpc]
	public void TargetSetQuaternionGameParameter(NetworkConnection target, int index, Quaternion newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x128916C", Offset = "0x128916C", VA = "0x128916C")]
	[ClientRpc]
	public void RpcSetGameObjectGameParameter(int index, GameObject newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x12892C8", Offset = "0x12892C8", VA = "0x12892C8", Slot = "26")]
	[TargetRpc]
	public void TargetSetGameObjectGameParameter(NetworkConnection target, int index, GameObject newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1289428", Offset = "0x1289428", VA = "0x1289428")]
	[ClientRpc]
	public void RpcSetTransformGameParameter(int index, GameObject newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x1289584", Offset = "0x1289584", VA = "0x1289584", Slot = "25")]
	[TargetRpc]
	public void TargetSetTransformGameParameter(NetworkConnection target, int index, GameObject newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x12896E4", Offset = "0x12896E4", VA = "0x12896E4")]
	[ClientRpc]
	public void RpcSetOwnerFocusableObject(int index, GameObject newOwner, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1289840", Offset = "0x1289840", VA = "0x1289840", Slot = "27")]
	[TargetRpc]
	public void TargetSetOwnerFocusableObject(NetworkConnection target, int index, GameObject newOwner, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x12899A0", Offset = "0x12899A0", VA = "0x12899A0")]
	[ClientRpc]
	public void RpcRemoveOwnerFocusableObject(int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1289AE0", Offset = "0x1289AE0", VA = "0x1289AE0", Slot = "29")]
	[TargetRpc]
	public void TargetRemoveOwnerFocusableObject(NetworkConnection target, int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1289C2C", Offset = "0x1289C2C", VA = "0x1289C2C")]
	[ClientRpc]
	public void RpcSetOwnerTouchableObject(int index, GameObject newOwner, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1289D88", Offset = "0x1289D88", VA = "0x1289D88", Slot = "28")]
	[TargetRpc]
	public void TargetSetOwnerTouchableObject(NetworkConnection target, int index, GameObject newOwner, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1289EE8", Offset = "0x1289EE8", VA = "0x1289EE8")]
	[ClientRpc]
	public void RpcRemoveOwnerTouchableObject(int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x128A028", Offset = "0x128A028", VA = "0x128A028", Slot = "30")]
	[TargetRpc]
	public void TargetRemoveOwnerTouchableObject(NetworkConnection target, int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x128A174", Offset = "0x128A174", VA = "0x128A174")]
	[ClientRpc]
	public void RpcSetOwningHandTouchableObject(int index, int userHand, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x128A2D0", Offset = "0x128A2D0", VA = "0x128A2D0", Slot = "31")]
	[TargetRpc]
	public void TargetSetOwningHandTouchableObject(NetworkConnection target, int index, int userHand, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x128A430", Offset = "0x128A430", VA = "0x128A430")]
	public GBANetworkStory()
	{
	}

	[SpecialName]
	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x128A438", Offset = "0x128A438", VA = "0x128A438", Slot = "15")]
	private bool Realcast.Toolkit.Network.INetworkStory.get_isClient()
	{
		return default(bool);
	}

	[SpecialName]
	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x128A440", Offset = "0x128A440", VA = "0x128A440", Slot = "16")]
	private bool Realcast.Toolkit.Network.INetworkStory.get_isServer()
	{
		return default(bool);
	}

	[SpecialName]
	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x128A448", Offset = "0x128A448", VA = "0x128A448", Slot = "17")]
	private NetworkIdentity Realcast.Toolkit.Network.INetworkStory.get_netIdentity()
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x128A450", Offset = "0x128A450", VA = "0x128A450")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x128A454", Offset = "0x128A454", VA = "0x128A454")]
	protected void UserCode_RpcRaiseGameEvent(int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x128A4D4", Offset = "0x128A4D4", VA = "0x128A4D4")]
	protected static void InvokeUserCode_RpcRaiseGameEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x128A628", Offset = "0x128A628", VA = "0x128A628", Slot = "32")]
	protected void UserCode_TargetRaiseGameEvent(NetworkConnection target, int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x128A6A8", Offset = "0x128A6A8", VA = "0x128A6A8")]
	protected static void InvokeUserCode_TargetRaiseGameEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x128A814", Offset = "0x128A814", VA = "0x128A814")]
	protected void UserCode_RpcSetBoolGameParameter(int index, bool newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x128A8B0", Offset = "0x128A8B0", VA = "0x128A8B0")]
	protected static void InvokeUserCode_RpcSetBoolGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x128AA18", Offset = "0x128AA18", VA = "0x128AA18", Slot = "33")]
	protected void UserCode_TargetSetBoolGameParameter(NetworkConnection target, int index, bool newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x128AAB4", Offset = "0x128AAB4", VA = "0x128AAB4")]
	protected static void InvokeUserCode_TargetSetBoolGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x128AC34", Offset = "0x128AC34", VA = "0x128AC34")]
	protected void UserCode_RpcSetIntGameParameter(int index, int newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x128ACD0", Offset = "0x128ACD0", VA = "0x128ACD0")]
	protected static void InvokeUserCode_RpcSetIntGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x128AE38", Offset = "0x128AE38", VA = "0x128AE38", Slot = "34")]
	protected void UserCode_TargetSetIntGameParameter(NetworkConnection target, int index, int newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x128AED4", Offset = "0x128AED4", VA = "0x128AED4")]
	protected static void InvokeUserCode_TargetSetIntGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x128B054", Offset = "0x128B054", VA = "0x128B054")]
	protected void UserCode_RpcSetFloatGameParameter(int index, float newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x128B0F8", Offset = "0x128B0F8", VA = "0x128B0F8")]
	protected static void InvokeUserCode_RpcSetFloatGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x128B26C", Offset = "0x128B26C", VA = "0x128B26C", Slot = "35")]
	protected void UserCode_TargetSetFloatGameParameter(NetworkConnection target, int index, float newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x128B310", Offset = "0x128B310", VA = "0x128B310")]
	protected static void InvokeUserCode_TargetSetFloatGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x128B49C", Offset = "0x128B49C", VA = "0x128B49C")]
	protected void UserCode_RpcSetStringGameParameter(int index, string newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x128B538", Offset = "0x128B538", VA = "0x128B538")]
	protected static void InvokeUserCode_RpcSetStringGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x128B6A0", Offset = "0x128B6A0", VA = "0x128B6A0", Slot = "36")]
	protected void UserCode_TargetSetStringGameParameter(NetworkConnection target, int index, string newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x128B73C", Offset = "0x128B73C", VA = "0x128B73C")]
	protected static void InvokeUserCode_TargetSetStringGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x128B8BC", Offset = "0x128B8BC", VA = "0x128B8BC")]
	protected void UserCode_RpcSetVector3GameParameter(int index, Vector3 newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x128B978", Offset = "0x128B978", VA = "0x128B978")]
	protected static void InvokeUserCode_RpcSetVector3GameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x128BB08", Offset = "0x128BB08", VA = "0x128BB08", Slot = "37")]
	protected void UserCode_TargetSetVector3GameParameter(NetworkConnection target, int index, Vector3 newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x128BBC4", Offset = "0x128BBC4", VA = "0x128BBC4")]
	protected static void InvokeUserCode_TargetSetVector3GameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x128BD6C", Offset = "0x128BD6C", VA = "0x128BD6C")]
	protected void UserCode_RpcSetQuaternionGameParameter(int index, Quaternion newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x128BE30", Offset = "0x128BE30", VA = "0x128BE30")]
	protected static void InvokeUserCode_RpcSetQuaternionGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x128BFC8", Offset = "0x128BFC8", VA = "0x128BFC8", Slot = "38")]
	protected void UserCode_TargetSetQuaternionGameParameter(NetworkConnection target, int index, Quaternion newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x128C08C", Offset = "0x128C08C", VA = "0x128C08C")]
	protected static void InvokeUserCode_TargetSetQuaternionGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x128C23C", Offset = "0x128C23C", VA = "0x128C23C")]
	protected void UserCode_RpcSetGameObjectGameParameter(int index, GameObject newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x128C2D8", Offset = "0x128C2D8", VA = "0x128C2D8")]
	protected static void InvokeUserCode_RpcSetGameObjectGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x128C440", Offset = "0x128C440", VA = "0x128C440", Slot = "39")]
	protected void UserCode_TargetSetGameObjectGameParameter(NetworkConnection target, int index, GameObject newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x128C4DC", Offset = "0x128C4DC", VA = "0x128C4DC")]
	protected static void InvokeUserCode_TargetSetGameObjectGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x128C65C", Offset = "0x128C65C", VA = "0x128C65C")]
	protected void UserCode_RpcSetTransformGameParameter(int index, GameObject newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x128C710", Offset = "0x128C710", VA = "0x128C710")]
	protected static void InvokeUserCode_RpcSetTransformGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x128C878", Offset = "0x128C878", VA = "0x128C878", Slot = "40")]
	protected void UserCode_TargetSetTransformGameParameter(NetworkConnection target, int index, GameObject newValue, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x128C92C", Offset = "0x128C92C", VA = "0x128C92C")]
	protected static void InvokeUserCode_TargetSetTransformGameParameter(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x128CAAC", Offset = "0x128CAAC", VA = "0x128CAAC")]
	protected void UserCode_RpcSetOwnerFocusableObject(int index, GameObject newOwner, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x128CB30", Offset = "0x128CB30", VA = "0x128CB30")]
	protected static void InvokeUserCode_RpcSetOwnerFocusableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x128CC98", Offset = "0x128CC98", VA = "0x128CC98", Slot = "41")]
	protected void UserCode_TargetSetOwnerFocusableObject(NetworkConnection target, int index, GameObject newOwner, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x128CD1C", Offset = "0x128CD1C", VA = "0x128CD1C")]
	protected static void InvokeUserCode_TargetSetOwnerFocusableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x128CE9C", Offset = "0x128CE9C", VA = "0x128CE9C")]
	protected void UserCode_RpcRemoveOwnerFocusableObject(int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x128CF18", Offset = "0x128CF18", VA = "0x128CF18")]
	protected static void InvokeUserCode_RpcRemoveOwnerFocusableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x128D06C", Offset = "0x128D06C", VA = "0x128D06C", Slot = "42")]
	protected void UserCode_TargetRemoveOwnerFocusableObject(NetworkConnection target, int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x128D0E8", Offset = "0x128D0E8", VA = "0x128D0E8")]
	protected static void InvokeUserCode_TargetRemoveOwnerFocusableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x128D254", Offset = "0x128D254", VA = "0x128D254")]
	protected void UserCode_RpcSetOwnerTouchableObject(int index, GameObject newOwner, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x128D3F0", Offset = "0x128D3F0", VA = "0x128D3F0")]
	protected static void InvokeUserCode_RpcSetOwnerTouchableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x128D558", Offset = "0x128D558", VA = "0x128D558", Slot = "43")]
	protected void UserCode_TargetSetOwnerTouchableObject(NetworkConnection target, int index, GameObject newOwner, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x128D6F4", Offset = "0x128D6F4", VA = "0x128D6F4")]
	protected static void InvokeUserCode_TargetSetOwnerTouchableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x128D874", Offset = "0x128D874", VA = "0x128D874")]
	protected void UserCode_RpcRemoveOwnerTouchableObject(int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x128D8F0", Offset = "0x128D8F0", VA = "0x128D8F0")]
	protected static void InvokeUserCode_RpcRemoveOwnerTouchableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x128DA44", Offset = "0x128DA44", VA = "0x128DA44", Slot = "44")]
	protected void UserCode_TargetRemoveOwnerTouchableObject(NetworkConnection target, int index, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x128DAC0", Offset = "0x128DAC0", VA = "0x128DAC0")]
	protected static void InvokeUserCode_TargetRemoveOwnerTouchableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x128DC2C", Offset = "0x128DC2C", VA = "0x128DC2C")]
	protected void UserCode_RpcSetOwningHandTouchableObject(int index, int userHand, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x128DCA4", Offset = "0x128DCA4", VA = "0x128DCA4")]
	protected static void InvokeUserCode_RpcSetOwningHandTouchableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x128DE08", Offset = "0x128DE08", VA = "0x128DE08", Slot = "45")]
	protected void UserCode_TargetSetOwningHandTouchableObject(NetworkConnection target, int index, int userHand, NetworkIdentity Server)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x128DE80", Offset = "0x128DE80", VA = "0x128DE80")]
	protected static void InvokeUserCode_TargetSetOwningHandTouchableObject(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x128DFFC", Offset = "0x128DFFC", VA = "0x128DFFC")]
	static GBANetworkStory()
	{
	}
}
[Token(Token = "0x2000140")]
public interface INetworkModeListener
{
	[Token(Token = "0x6000801")]
	void OnSoloMode();

	[Token(Token = "0x6000802")]
	void OnMultiplayerMode();
}
[Token(Token = "0x2000141")]
public class PS5PlayFabBackfiller
{
	[Token(Token = "0x2000142")]
	public delegate void MatchFoundCallback(Lobby _lobby);

	[Token(Token = "0x2000143")]
	public delegate void MatchNotFoundCallback();

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PlayFabAuthenticationContext _authenticationContext;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MatchmakingTicket _matchmakingTicket;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _hostAttributesJson;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _playersExpectedInMatch;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Lobby _lobby;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Lobby _oldLobby;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MatchFoundCallback _onMatchFound;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MatchNotFoundCallback _onMatchNotFound;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<PFEntityKey> _usersInLobby;

	[Token(Token = "0x17000147")]
	public Lobby NewLobby
	{
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x128ECE8", Offset = "0x128ECE8", VA = "0x128ECE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x128ECF0", Offset = "0x128ECF0", VA = "0x128ECF0")]
	public PS5PlayFabBackfiller(PlayFabAuthenticationContext authenticationContext)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x128EE3C", Offset = "0x128EE3C", VA = "0x128EE3C")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x128EE68", Offset = "0x128EE68", VA = "0x128EE68")]
	public void FindMatchForRoom(Lobby oldLobby, List<PFEntityKey> membersToMatchWith, MatchFoundCallback onMatchFound, MatchNotFoundCallback onMatchNotFound)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x128F4C0", Offset = "0x128F4C0", VA = "0x128F4C0")]
	private void OnMatchmakingTicketChanged(MatchmakingTicket ticket)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x128F7D0", Offset = "0x128F7D0", VA = "0x128F7D0")]
	private static Dictionary<string, string> MemberDataJsonToDictionary(string json)
	{
		return null;
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x128F100", Offset = "0x128F100", VA = "0x128F100")]
	private static string MemberDataDictionaryToJson(IDictionary<string, string> memberData)
	{
		return null;
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x128F5EC", Offset = "0x128F5EC", VA = "0x128F5EC")]
	private void OnMatchFound()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x128F848", Offset = "0x128F848", VA = "0x128F848")]
	private void OnJoinArrangedLobby(Lobby lobby, PFEntityKey newMember, int result)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x128F92C", Offset = "0x128F92C", VA = "0x128F92C")]
	private void OnMemberJoinedLobby(Lobby lobby, PFEntityKey member)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x128FA08", Offset = "0x128FA08", VA = "0x128FA08")]
	private void OnMemberLeftLobby(Lobby lobby, PFEntityKey member, LobbyMemberRemovedReason reason)
	{
	}
}
[Token(Token = "0x2000144")]
public class PS5PlayFabMatchmaker : MonoBehaviour, IMatchmaker, IPlayFabAuthenticatedSystem
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IMatchmaker.State _matchmakerState;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayFabAuthenticationContext _authenticationContext;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PFEntityKey _entityKey;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Lobby _lobby;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OnMatchFound _onMatchFound;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<PFEntityKey> _connectedMembers;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _playersExpectedInMatch;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GBANetworkManager _networkManager;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _hostAddress;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int _hostPort;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PFEntityKey _hostEntity;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MatchmakingLimitsManager _limitsManager;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MatchmakingTicket _matchmakingTicket;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private OnSearchStopped _stopSearchCallback;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PS5PlayFabBackfiller _backfiller;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _timeoutCounter;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool _isTimeoutStarted;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int _maxTimeoutCounter;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _isTicket;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _hostingProbability;

	[Token(Token = "0x17000148")]
	public UnityAction OnMatchmakerInitialized
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x128FD50", Offset = "0x128FD50", VA = "0x128FD50", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x128FD58", Offset = "0x128FD58", VA = "0x128FD58", Slot = "11")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public UnityAction OnStateChanged
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x128FD60", Offset = "0x128FD60", VA = "0x128FD60", Slot = "12")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x128FD68", Offset = "0x128FD68", VA = "0x128FD68", Slot = "13")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public UnityAction OnIdle
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x128FD70", Offset = "0x128FD70", VA = "0x128FD70", Slot = "14")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600081B")]
		[Address(RVA = "0x128FD78", Offset = "0x128FD78", VA = "0x128FD78", Slot = "15")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public UnityAction OnJoiningGame
	{
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x128FD80", Offset = "0x128FD80", VA = "0x128FD80", Slot = "16")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x128FD88", Offset = "0x128FD88", VA = "0x128FD88", Slot = "17")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public UnityAction OnJoinedGame
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x128FD90", Offset = "0x128FD90", VA = "0x128FD90", Slot = "18")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x128FD98", Offset = "0x128FD98", VA = "0x128FD98", Slot = "19")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public UnityAction OnStartSearch
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x128FDA0", Offset = "0x128FDA0", VA = "0x128FDA0", Slot = "20")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x128FDA8", Offset = "0x128FDA8", VA = "0x128FDA8", Slot = "21")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public UnityAction OnLeaveMatch
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x128FDB0", Offset = "0x128FDB0", VA = "0x128FDB0", Slot = "22")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x128FDB8", Offset = "0x128FDB8", VA = "0x128FDB8", Slot = "23")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public UnityAction OnCancelAllTickets
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x128FDC0", Offset = "0x128FDC0", VA = "0x128FDC0", Slot = "24")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000825")]
		[Address(RVA = "0x128FDC8", Offset = "0x128FDC8", VA = "0x128FDC8", Slot = "25")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public UnityAction OnMatchFound
	{
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x128FDD0", Offset = "0x128FDD0", VA = "0x128FDD0", Slot = "26")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x128FDD8", Offset = "0x128FDD8", VA = "0x128FDD8", Slot = "27")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public UnityAction OnTicketCancelled
	{
		[Token(Token = "0x6000828")]
		[Address(RVA = "0x128FDE0", Offset = "0x128FDE0", VA = "0x128FDE0", Slot = "28")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000829")]
		[Address(RVA = "0x128FDE8", Offset = "0x128FDE8", VA = "0x128FDE8", Slot = "29")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public UnityAction OnConnectToRoomTimeout
	{
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x128FDF0", Offset = "0x128FDF0", VA = "0x128FDF0", Slot = "30")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600082B")]
		[Address(RVA = "0x128FDF8", Offset = "0x128FDF8", VA = "0x128FDF8", Slot = "31")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public IMatchmaker.Type ClientType
	{
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x128FE00", Offset = "0x128FE00", VA = "0x128FE00", Slot = "32")]
		[CompilerGenerated]
		get
		{
			return default(IMatchmaker.Type);
		}
		[Token(Token = "0x600082D")]
		[Address(RVA = "0x128FE08", Offset = "0x128FE08", VA = "0x128FE08")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public bool IsJoiningGame
	{
		[Token(Token = "0x600082E")]
		[Address(RVA = "0x128FE10", Offset = "0x128FE10", VA = "0x128FE10", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000155")]
	public MatchmakingLimitsManager LimitsManager
	{
		[Token(Token = "0x600082F")]
		[Address(RVA = "0x128FE40", Offset = "0x128FE40", VA = "0x128FE40", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000156")]
	public IMatchmaker.State MatchmakerState
	{
		[Token(Token = "0x6000830")]
		[Address(RVA = "0x128FE48", Offset = "0x128FE48", VA = "0x128FE48", Slot = "33")]
		get
		{
			return default(IMatchmaker.State);
		}
		[Token(Token = "0x6000831")]
		[Address(RVA = "0x128FE50", Offset = "0x128FE50", VA = "0x128FE50")]
		private set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public IMatchmaker.State MatchmakerOldState
	{
		[Token(Token = "0x6000832")]
		[Address(RVA = "0x128FF38", Offset = "0x128FF38", VA = "0x128FF38", Slot = "34")]
		[CompilerGenerated]
		get
		{
			return default(IMatchmaker.State);
		}
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x128FF40", Offset = "0x128FF40", VA = "0x128FF40")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public PlayFabAuthenticationContext AuthenticationContext
	{
		[Token(Token = "0x6000834")]
		[Address(RVA = "0x128FF48", Offset = "0x128FF48", VA = "0x128FF48", Slot = "41")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x128FF50", Offset = "0x128FF50", VA = "0x128FF50", Slot = "42")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public string LobbyID
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0x1290214", Offset = "0x1290214", VA = "0x1290214", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015A")]
	public bool IsTicket
	{
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x12903E0", Offset = "0x12903E0", VA = "0x12903E0", Slot = "7")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600083A")]
		[Address(RVA = "0x12903E8", Offset = "0x12903E8", VA = "0x12903E8")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event UnityAction<bool> OnIsTicketUpdate
	{
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x1290278", Offset = "0x1290278", VA = "0x1290278", Slot = "5")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000838")]
		[Address(RVA = "0x129032C", Offset = "0x129032C", VA = "0x129032C", Slot = "6")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x129041C", Offset = "0x129041C", VA = "0x129041C")]
	private float GetHostingProbability()
	{
		return default(float);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x128FF6C", Offset = "0x128FF6C", VA = "0x128FF6C")]
	private void initialize()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x12904EC", Offset = "0x12904EC", VA = "0x12904EC", Slot = "40")]
	public void SetMatchmakingLimitsManager(MatchmakingLimitsManager limitsManager)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x12905F4", Offset = "0x12905F4", VA = "0x12905F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x12906A4", Offset = "0x12906A4", VA = "0x12906A4", Slot = "36")]
	public void SearchMatch(OnMatchFound callback)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x12907AC", Offset = "0x12907AC", VA = "0x12907AC")]
	private void OnMatchmakingTicketChanged(MatchmakingTicket ticket)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1290B94", Offset = "0x1290B94", VA = "0x1290B94")]
	private void OnJoinArrangedLobby(Lobby lobby, PFEntityKey newMember, int result)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1290CF8", Offset = "0x1290CF8", VA = "0x1290CF8")]
	private void TryFindAndConnectToHost(Lobby lobby)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x12911B4", Offset = "0x12911B4", VA = "0x12911B4")]
	private void OnMemberJoinedLobby(Lobby lobby, PFEntityKey member)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x129188C", Offset = "0x129188C", VA = "0x129188C")]
	private void OnLobbyUpdated(Lobby lobby, bool ownerUpdated, bool maxMembersUpdated, bool accessPolicyUpdated, bool membershipLockUpdated, IList<string> updatedSearchPropertyKeys, IList<string> updatedLobbyPropertyKeys, IList<LobbyMemberUpdateSummary> memberUpdates)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1291018", Offset = "0x1291018", VA = "0x1291018")]
	private void ConnectToRoom(string hostAddress, string hostPort)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x1291CD0", Offset = "0x1291CD0", VA = "0x1291CD0")]
	private void OnConnectedToRoom(ConnectToRoomResult connectToRoomResult, string errorDetails)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1291E40", Offset = "0x1291E40", VA = "0x1291E40")]
	private void OnDisconnectedFromServer(NetworkConnection connection)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1292188", Offset = "0x1292188", VA = "0x1292188")]
	private void UpdateLobbyWithHostInfos(string address, int port)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x12923D8", Offset = "0x12923D8", VA = "0x12923D8")]
	private void OnLobbyPostUpdatedCompleted(Lobby lobby, PFEntityKey localUser, int result)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x12924E4", Offset = "0x12924E4", VA = "0x12924E4")]
	private void StartBackfillingRoom()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x12927F4", Offset = "0x12927F4", VA = "0x12927F4")]
	private void OnBackfillingPlayerFound(Lobby newLobby)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x12927FC", Offset = "0x12927FC", VA = "0x12927FC")]
	private void OnFailedBackfilling()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x12914F0", Offset = "0x12914F0", VA = "0x12914F0")]
	private PFEntityKey ElectGameHost()
	{
		return null;
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1292800", Offset = "0x1292800", VA = "0x1292800")]
	private void OnMemberLeftLobby(Lobby lobby, PFEntityKey member, LobbyMemberRemovedReason reason)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1291E44", Offset = "0x1291E44", VA = "0x1291E44", Slot = "38")]
	public void LeaveMatch()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x12929A8", Offset = "0x12929A8", VA = "0x12929A8", Slot = "39")]
	public void CancelAllTicketsAndLeaveMatch()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x12928F0", Offset = "0x12928F0", VA = "0x12928F0")]
	private void QuitLobby()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1290B90", Offset = "0x1290B90", VA = "0x1290B90")]
	private void HandleError(string msg)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x129042C", Offset = "0x129042C", VA = "0x129042C", Slot = "37")]
	public void StopSearch([Optional] OnSearchStopped callback, bool updateMatchmakerState = true)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x12929E8", Offset = "0x12929E8", VA = "0x12929E8")]
	private void onMatchmakingTicketCancelled(MatchmakingTicket ticket, int result)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1290688", Offset = "0x1290688", VA = "0x1290688")]
	private void onTimeoutEnd(string msg)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1290CEC", Offset = "0x1290CEC", VA = "0x1290CEC")]
	private void resetTimeout()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1292ABC", Offset = "0x1292ABC", VA = "0x1292ABC")]
	public PS5PlayFabMatchmaker()
	{
	}
}
[Token(Token = "0x2000146")]
public class PlayFabMatchmakingLimitsManager : MatchmakingLimitsManager
{
	[Token(Token = "0x1700015B")]
	public override int MaxTicketsOwnedPerMinute
	{
		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1292BA4", Offset = "0x1292BA4", VA = "0x1292BA4", Slot = "4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015C")]
	public override int MaxCancelTicketPerMinute
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1292BAC", Offset = "0x1292BAC", VA = "0x1292BAC", Slot = "5")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015D")]
	public override int MaxCancelAllTicketsPerMinute
	{
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1292BB4", Offset = "0x1292BB4", VA = "0x1292BB4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1292BBC", Offset = "0x1292BBC", VA = "0x1292BBC")]
	public PlayFabMatchmakingLimitsManager()
	{
	}
}
[Token(Token = "0x2000147")]
public class NetworkedRoomManager : MonoBehaviour, INetworkModeListener
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _soloRoom;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> _objectsForSolo;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _multiplayerRoom;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> _objectsForMultiplayer;

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1292BC4", Offset = "0x1292BC4", VA = "0x1292BC4", Slot = "4")]
	public void OnSoloMode()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1292CC0", Offset = "0x1292CC0", VA = "0x1292CC0", Slot = "5")]
	public void OnMultiplayerMode()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x1292CC4", Offset = "0x1292CC4", VA = "0x1292CC4")]
	public void OnMultiplayerMode(bool isClient)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x1292DC8", Offset = "0x1292DC8", VA = "0x1292DC8")]
	public void OnObjectForMultiplayerMode(bool mode)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1292EB0", Offset = "0x1292EB0", VA = "0x1292EB0")]
	public NetworkedRoomManager()
	{
	}
}
[Token(Token = "0x2000148")]
public class NetworkManagerEvents : NetworkBehaviour
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GBANetworkManager NetworkManager;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnRemoteClientAdded;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnRemoteClientDisconnected;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnAllRemoteClientDisconnected;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<NetworkConnection> _connectedPlayersConnection;

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1292EB8", Offset = "0x1292EB8", VA = "0x1292EB8", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1293050", Offset = "0x1293050", VA = "0x1293050")]
	private void OnServerAddedPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x12933C0", Offset = "0x12933C0", VA = "0x12933C0")]
	private void OnServerDisconnectedPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x12932D0", Offset = "0x12932D0", VA = "0x12932D0")]
	[TargetRpc]
	private void TargetSendAddedClient(NetworkConnection target)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1293618", Offset = "0x1293618", VA = "0x1293618")]
	[TargetRpc]
	private void TargetSendDisconnectedClient(NetworkConnection target)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1293708", Offset = "0x1293708", VA = "0x1293708")]
	public NetworkManagerEvents()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1293790", Offset = "0x1293790", VA = "0x1293790")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1293794", Offset = "0x1293794", VA = "0x1293794")]
	protected void UserCode_TargetSendAddedClient(NetworkConnection target)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x12937A8", Offset = "0x12937A8", VA = "0x12937A8")]
	protected static void InvokeUserCode_TargetSendAddedClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x12938D0", Offset = "0x12938D0", VA = "0x12938D0")]
	protected void UserCode_TargetSendDisconnectedClient(NetworkConnection target)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x12938E4", Offset = "0x12938E4", VA = "0x12938E4")]
	protected static void InvokeUserCode_TargetSendDisconnectedClient(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1293A0C", Offset = "0x1293A0C", VA = "0x1293A0C")]
	static NetworkManagerEvents()
	{
	}
}
[Token(Token = "0x2000149")]
public class FollowLocalPlayerSlot : MonoBehaviour
{
	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcTransformGameParameter _localPlayerSlotParameter;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _hasPlayerSlot;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _currentPlayerSlot;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _poseCached;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _originalPosition;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion _originalRotation;

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1293B98", Offset = "0x1293B98", VA = "0x1293B98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1293CF8", Offset = "0x1293CF8", VA = "0x1293CF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1293E50", Offset = "0x1293E50", VA = "0x1293E50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1293FF4", Offset = "0x1293FF4", VA = "0x1293FF4")]
	private void onLocalPlayerSlotUpdated(Transform toValue, Transform fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1293E04", Offset = "0x1293E04", VA = "0x1293E04")]
	private void resetPose()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1294098", Offset = "0x1294098", VA = "0x1294098")]
	public FollowLocalPlayerSlot()
	{
	}
}
[Token(Token = "0x200014A")]
public class GBAPlayerSystem : NetworkBehaviour
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _dispenserPrefab;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _ballsPoolPrefab;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private rcStringGameParameter _displayNameParameter;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private rcStringGameParameter _userIdParameter;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private rcStringGameParameter _userOnlineIdParameter;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcTransformGameParameter _localPlayerSlotParameter;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcTransformGameParameter _ownedObjectsRootParameter;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcIntGameParameter _localScoreParameter;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private rcIntGameParameter _localComboParameter;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private rcFloatGameParameter _anchorOffsetParameter;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SyncVar(hook = "onUserIdSynced")]
	private string _userId;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SyncVar(hook = "onUserOnlineIdSynced")]
	private string _userOnlineId;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SyncVar(hook = "onCurrentScoreSynced")]
	private int _currentScore;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SyncVar(hook = "updateCurrentOnlineScoreSynced")]
	private int _currentOnlineScore;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SyncVar(hook = "onCurrentComboCountSynced")]
	private int _currentCombo;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SyncVar(hook = "onOwnedDispenserSynced")]
	private Dispenser _ownedDispenser;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SyncVar(hook = "onOwnedBallsPoolSynced")]
	private BallsPool _ownedBallsPool;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SyncVar(hook = "onAnchorOffsetSynced")]
	private float _anchorOffset;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private rcPlayerDataSystem _dataSystem;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private NetworkedPlayerSlot _currentPlayerSlot;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Action<string> OnDisplayNameUpdated;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Action<string> OnUserIdUpdated;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Action<string> OnUserOnlineIdUpdated;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Action OnScoreUpdated;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Action OnScoreReset;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Action OnOnlineScoreUpdated;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Action OnOnlineScoreReset;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Action OnComboStart;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Action OnComboIncreased;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Action OnComboBreak;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Action OnSlotUpdated;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Action OnBallsPoolUpdated;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Action<float> OnAnchorOffsetUpdated;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public int CurrentRank;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[HideInInspector]
	public int CurrentOnlineRank;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private rcInteractor _rightInteractor;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private rcInteractor _leftInteractor;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private NetworkBehaviourSyncVar ____ownedDispenserNetId;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private NetworkBehaviourSyncVar ____ownedBallsPoolNetId;

	[Token(Token = "0x1700015E")]
	public string DisplayName
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0x12940A0", Offset = "0x12940A0", VA = "0x12940A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015F")]
	public string UserId
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1294138", Offset = "0x1294138", VA = "0x1294138")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000160")]
	public string UserOnlineId
	{
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1294140", Offset = "0x1294140", VA = "0x1294140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000161")]
	public int CurrentScore
	{
		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1294148", Offset = "0x1294148", VA = "0x1294148")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000162")]
	public int CurrentOnlineScore
	{
		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1294150", Offset = "0x1294150", VA = "0x1294150")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000163")]
	public int CurrentCombo
	{
		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1294158", Offset = "0x1294158", VA = "0x1294158")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000164")]
	public NetworkedPlayerSlot CurrentPlayerSlot
	{
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1294160", Offset = "0x1294160", VA = "0x1294160")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public Dispenser OwnedDispenser
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1294168", Offset = "0x1294168", VA = "0x1294168")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000166")]
	public BallsPool OwnedBallsPool
	{
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x12941BC", Offset = "0x12941BC", VA = "0x12941BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000167")]
	public string Network_userId
	{
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1296B74", Offset = "0x1296B74", VA = "0x1296B74")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1296B7C", Offset = "0x1296B7C", VA = "0x1296B7C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000168")]
	public string Network_userOnlineId
	{
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1296CA4", Offset = "0x1296CA4", VA = "0x1296CA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1296CAC", Offset = "0x1296CAC", VA = "0x1296CAC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public int Network_currentScore
	{
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1296DD4", Offset = "0x1296DD4", VA = "0x1296DD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1294EA0", Offset = "0x1294EA0", VA = "0x1294EA0")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700016A")]
	public int Network_currentOnlineScore
	{
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1296DDC", Offset = "0x1296DDC", VA = "0x1296DDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x12962F8", Offset = "0x12962F8", VA = "0x12962F8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public int Network_currentCombo
	{
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1296DE4", Offset = "0x1296DE4", VA = "0x1296DE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1294FB8", Offset = "0x1294FB8", VA = "0x1294FB8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public Dispenser Network_ownedDispenser
	{
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x129416C", Offset = "0x129416C", VA = "0x129416C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1296DEC", Offset = "0x1296DEC", VA = "0x1296DEC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public BallsPool Network_ownedBallsPool
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x12941C0", Offset = "0x12941C0", VA = "0x12941C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1296F10", Offset = "0x1296F10", VA = "0x1296F10")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public float Network_anchorOffset
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1297048", Offset = "0x1297048", VA = "0x1297048")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x12950D8", Offset = "0x12950D8", VA = "0x12950D8")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1294210", Offset = "0x1294210", VA = "0x1294210", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1294714", Offset = "0x1294714", VA = "0x1294714", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x1295200", Offset = "0x1295200", VA = "0x1295200")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x129567C", Offset = "0x129567C", VA = "0x129567C")]
	private void onPlayerNameUpdated(string newName)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1294BB8", Offset = "0x1294BB8", VA = "0x1294BB8")]
	private void onLocalDisplayNameUpdated(string newName, string oldName, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x1294C50", Offset = "0x1294C50", VA = "0x1294C50")]
	private void onLocalUserIdUpdated(string newId, string oldId, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x1294C8C", Offset = "0x1294C8C", VA = "0x1294C8C")]
	private void onLocalUserOnlineIdUpdated(string newId, string oldId, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x12958F0", Offset = "0x12958F0", VA = "0x12958F0")]
	private void onLocalScoreUpdated(int newScore, int oldScore, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1295B88", Offset = "0x1295B88", VA = "0x1295B88")]
	private void onLocalOnlineScoreUpdated(int newScore, int oldScore, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1295B8C", Offset = "0x1295B8C", VA = "0x1295B8C")]
	private void onLocalComboUpdated(int newCombo, int oldCombo, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x1295CBC", Offset = "0x1295CBC", VA = "0x1295CBC")]
	private void onAnchorOffsetUpdated(float newOffset, float oldOffset, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1295DEC", Offset = "0x1295DEC", VA = "0x1295DEC")]
	private void onUserIdSynced(string oldUserId, string newUserId)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1295E10", Offset = "0x1295E10", VA = "0x1295E10")]
	private void onUserOnlineIdSynced(string oldUserId, string newUserId)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1295E34", Offset = "0x1295E34", VA = "0x1295E34")]
	private void onCurrentScoreSynced(int oldScore, int newScore)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1295E5C", Offset = "0x1295E5C", VA = "0x1295E5C")]
	private void updateCurrentOnlineScoreSynced(int oldOnlineScore, int newOnlineScore)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1295E84", Offset = "0x1295E84", VA = "0x1295E84")]
	private void onCurrentComboCountSynced(int oldComboCount, int newComboCount)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x129439C", Offset = "0x129439C", VA = "0x129439C")]
	private void onOwnedDispenserSynced(Dispenser oldValue, Dispenser newValue)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x129450C", Offset = "0x129450C", VA = "0x129450C")]
	private void onOwnedBallsPoolSynced(BallsPool oldPool, BallsPool newPool)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1295ED4", Offset = "0x1295ED4", VA = "0x1295ED4")]
	private void onAnchorOffsetSynced(float oldOffset, float newOffset)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1295EF4", Offset = "0x1295EF4", VA = "0x1295EF4")]
	public void SetCurrentPlayerSlot(NetworkedPlayerSlot playerSlot)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1295698", Offset = "0x1295698", VA = "0x1295698")]
	[Command]
	private void CmdUpdatePlayerUserId(string newUserId)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x12957C4", Offset = "0x12957C4", VA = "0x12957C4")]
	[Command]
	private void CmdUpdatePlayerUserOnlineId(string newUserId)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1294CC8", Offset = "0x1294CC8", VA = "0x1294CC8")]
	[Command]
	private void CmdSpawnOwnedDispenser([Optional] NetworkConnectionToClient sender)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x129602C", Offset = "0x129602C", VA = "0x129602C")]
	[Command]
	private void CmdDestroyOwnedDispenser()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1294DB4", Offset = "0x1294DB4", VA = "0x1294DB4")]
	[Command]
	private void CmdSpawnOwnedBallsPool([Optional] NetworkConnectionToClient sender)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1296118", Offset = "0x1296118", VA = "0x1296118")]
	[Command]
	private void CmdDestroyOwnedBallsPool()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1295A5C", Offset = "0x1295A5C", VA = "0x1295A5C")]
	[Command]
	public void CmdSetCurrentScore(int currentScore)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1295930", Offset = "0x1295930", VA = "0x1295930")]
	[Command]
	public void CmdSetCurrentOnlineScore(int currentOnlineScore)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x1296204", Offset = "0x1296204", VA = "0x1296204")]
	[Server]
	public void ServerSetCurrentOnlineScore(int currentOnlineScore)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x1295B90", Offset = "0x1295B90", VA = "0x1295B90")]
	[Command]
	public void CmdSetCurrentCombo(int currentCombo)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x1296410", Offset = "0x1296410", VA = "0x1296410")]
	[Command]
	public void CmdRaiseScoreEvent(NetworkIdentity scoringObject, GBAPlayerSystem owningPlayer, int hoopManagerIndex)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1295CC0", Offset = "0x1295CC0", VA = "0x1295CC0")]
	[Command]
	public void CmdSetAnchorOffset(float anchorOffset)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x129656C", Offset = "0x129656C", VA = "0x129656C")]
	[ClientRpc(includeOwner = false)]
	private void RpcRaiseScoreEvent(NetworkIdentity scoringObject, GBAPlayerSystem owningPlayer, int hoopManagerIndex)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x12966C8", Offset = "0x12966C8", VA = "0x12966C8")]
	private void doRaiseScoreEvent(NetworkIdentity scoringObject, GBAPlayerSystem owningPlayer, int hoopManagerIndex)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x12967D8", Offset = "0x12967D8", VA = "0x12967D8")]
	[Command]
	public void CmdTriggerPinballBallPoint(GBAPlayerSystem owningPlayer, int pinballBallPointIndex)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1296918", Offset = "0x1296918", VA = "0x1296918")]
	[ClientRpc(includeOwner = false)]
	private void RpcTriggerPinballBallPoint(GBAPlayerSystem owningPlayer, int pinballBallPointIndex)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1296A58", Offset = "0x1296A58", VA = "0x1296A58")]
	private void triggerPinballBallPoint(GBAPlayerSystem owningPlayer, int pinballBallPointIndex)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1296AF8", Offset = "0x1296AF8", VA = "0x1296AF8")]
	public GBAPlayerSystem()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1296B70", Offset = "0x1296B70", VA = "0x1296B70")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1297050", Offset = "0x1297050", VA = "0x1297050")]
	protected void UserCode_CmdUpdatePlayerUserId(string newUserId)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1297054", Offset = "0x1297054", VA = "0x1297054")]
	protected static void InvokeUserCode_CmdUpdatePlayerUserId(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x12971CC", Offset = "0x12971CC", VA = "0x12971CC")]
	protected void UserCode_CmdUpdatePlayerUserOnlineId(string newUserId)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x12971D0", Offset = "0x12971D0", VA = "0x12971D0")]
	protected static void InvokeUserCode_CmdUpdatePlayerUserOnlineId(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1297348", Offset = "0x1297348", VA = "0x1297348")]
	protected void UserCode_CmdSpawnOwnedDispenser(NetworkConnectionToClient sender)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1297578", Offset = "0x1297578", VA = "0x1297578")]
	protected static void InvokeUserCode_CmdSpawnOwnedDispenser(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x12976BC", Offset = "0x12976BC", VA = "0x12976BC")]
	protected void UserCode_CmdDestroyOwnedDispenser()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1297760", Offset = "0x1297760", VA = "0x1297760")]
	protected static void InvokeUserCode_CmdDestroyOwnedDispenser(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1297890", Offset = "0x1297890", VA = "0x1297890")]
	protected void UserCode_CmdSpawnOwnedBallsPool(NetworkConnectionToClient sender)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1297AD8", Offset = "0x1297AD8", VA = "0x1297AD8")]
	protected static void InvokeUserCode_CmdSpawnOwnedBallsPool(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1297C1C", Offset = "0x1297C1C", VA = "0x1297C1C")]
	protected void UserCode_CmdDestroyOwnedBallsPool()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1297CC0", Offset = "0x1297CC0", VA = "0x1297CC0")]
	protected static void InvokeUserCode_CmdDestroyOwnedBallsPool(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1297DF0", Offset = "0x1297DF0", VA = "0x1297DF0")]
	protected void UserCode_CmdSetCurrentScore(int currentScore)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1297DF4", Offset = "0x1297DF4", VA = "0x1297DF4")]
	protected static void InvokeUserCode_CmdSetCurrentScore(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1297F6C", Offset = "0x1297F6C", VA = "0x1297F6C")]
	protected void UserCode_CmdSetCurrentOnlineScore(int currentOnlineScore)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1297F70", Offset = "0x1297F70", VA = "0x1297F70")]
	protected static void InvokeUserCode_CmdSetCurrentOnlineScore(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x12980E8", Offset = "0x12980E8", VA = "0x12980E8")]
	protected void UserCode_CmdSetCurrentCombo(int currentCombo)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x12980EC", Offset = "0x12980EC", VA = "0x12980EC")]
	protected static void InvokeUserCode_CmdSetCurrentCombo(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1298264", Offset = "0x1298264", VA = "0x1298264")]
	protected void UserCode_CmdRaiseScoreEvent(NetworkIdentity scoringObject, GBAPlayerSystem owningPlayer, int hoopManagerIndex)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x12982C0", Offset = "0x12982C0", VA = "0x12982C0")]
	protected static void InvokeUserCode_CmdRaiseScoreEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1298470", Offset = "0x1298470", VA = "0x1298470")]
	protected void UserCode_CmdSetAnchorOffset(float anchorOffset)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1298474", Offset = "0x1298474", VA = "0x1298474")]
	protected static void InvokeUserCode_CmdSetAnchorOffset(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x12985E4", Offset = "0x12985E4", VA = "0x12985E4")]
	protected void UserCode_RpcRaiseScoreEvent(NetworkIdentity scoringObject, GBAPlayerSystem owningPlayer, int hoopManagerIndex)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x12985E8", Offset = "0x12985E8", VA = "0x12985E8")]
	protected static void InvokeUserCode_RpcRaiseScoreEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1298764", Offset = "0x1298764", VA = "0x1298764")]
	protected void UserCode_CmdTriggerPinballBallPoint(GBAPlayerSystem owningPlayer, int pinballBallPointIndex)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x12987A8", Offset = "0x12987A8", VA = "0x12987A8")]
	protected static void InvokeUserCode_CmdTriggerPinballBallPoint(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1298944", Offset = "0x1298944", VA = "0x1298944")]
	protected void UserCode_RpcTriggerPinballBallPoint(GBAPlayerSystem owningPlayer, int pinballBallPointIndex)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x1298948", Offset = "0x1298948", VA = "0x1298948")]
	protected static void InvokeUserCode_RpcTriggerPinballBallPoint(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x1298AAC", Offset = "0x1298AAC", VA = "0x1298AAC")]
	static GBAPlayerSystem()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x12991A8", Offset = "0x12991A8", VA = "0x12991A8", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x1299498", Offset = "0x1299498", VA = "0x1299498", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x200014B")]
public class NetworkedLevelManager : MonoBehaviour
{
	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Level Settings")]
	[SerializeField]
	private PlayManager _playManager;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RewardManager _rewardManager;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LeaderboardManager _leaderboardManager;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Player Slots")]
	[SerializeField]
	private NetworkedPlayerSlot _originalPlayerSlot;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform[] _playerSlotsRoots;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Range(0f, 10f)]
	private float _slotRankStepOffset;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NetworkedPlayerSlot[] _playerSlots;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dispenser[] _dispensers;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CameraTeleportManager _teleportManager;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _playerSlotsInitialized;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlayersRankingReference _playersRankingReference;

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1299B48", Offset = "0x1299B48", VA = "0x1299B48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x129A0FC", Offset = "0x129A0FC", VA = "0x129A0FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x129A478", Offset = "0x129A478", VA = "0x129A478")]
	public void RemoveSoloComponents(bool replaceRewardManager)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x129A6E8", Offset = "0x129A6E8", VA = "0x129A6E8")]
	public NetworkedPlayerSlot GetPlayerSlot(GBAPlayerSystem playerSystem)
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x129A828", Offset = "0x129A828", VA = "0x129A828")]
	private void initPlayerSlots(ReadOnlyCollection<GBAPlayerSystem> players, PlayersRankingReference rankingManager)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1299FC4", Offset = "0x1299FC4", VA = "0x1299FC4")]
	private void refreshSlotsRankingOffset()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x129B224", Offset = "0x129B224", VA = "0x129B224")]
	public void SetupPlayerSlots(ReadOnlyCollection<GBAPlayerSystem> players, PlayersRankingReference rankingManager, ComboDetection comboDetection)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x129B43C", Offset = "0x129B43C", VA = "0x129B43C")]
	private void teleportCameraToSlot(Transform teleportDestination)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x129B5B0", Offset = "0x129B5B0", VA = "0x129B5B0")]
	public void PlugOwnedDispensers()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x129BB24", Offset = "0x129BB24", VA = "0x129BB24")]
	public void PlugNetworkedTimer(NetworkedTimer networkedTimer)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x129BD28", Offset = "0x129BD28", VA = "0x129BD28")]
	public NetworkedLevelManager()
	{
	}
}
[Token(Token = "0x200014D")]
public class NetworkedLevelsManager : rcSingleton<NetworkedLevelsManager>
{
	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Parameters")]
	[SerializeField]
	private rcBoolGameParameter _isInPartyModeParameter;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerRef;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayersRankingReference _playersRankingRef;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Play Settings")]
	[SerializeField]
	private NetworkedTimer _networkedTimer;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ComboDetectionReference _comboDetectionReference;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 _slotRankOffset;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[Range(0f, 10f)]
	private float _slotMoveSpeed;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NetworkedLevelManager _currentLevel;

	[Token(Token = "0x1700016F")]
	public Vector3 SlotRankOffset
	{
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x129BDA8", Offset = "0x129BDA8", VA = "0x129BDA8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000170")]
	public float SlotMoveSpeed
	{
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x129BDB4", Offset = "0x129BDB4", VA = "0x129BDB4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000171")]
	public List<Dispenser> DispensersList
	{
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x129B758", Offset = "0x129B758", VA = "0x129B758")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public NetworkedLevelManager CurrentLevel
	{
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x129BE0C", Offset = "0x129BE0C", VA = "0x129BE0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1299CC8", Offset = "0x1299CC8", VA = "0x1299CC8")]
	public void SetupNetworkedLevel(NetworkedLevelManager networkedLevelManager)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x129A3E8", Offset = "0x129A3E8", VA = "0x129A3E8")]
	public void QuitNetworkedLevel(NetworkedLevelManager networkedLevelManager)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x129BE14", Offset = "0x129BE14", VA = "0x129BE14")]
	public NetworkedLevelsManager()
	{
	}
}
[Token(Token = "0x200014E")]
public class NetworkedPlayerSlot : MonoBehaviour
{
	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UserStartManager _userStartManager;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Networked Hoops")]
	[SerializeField]
	private HoopManager[] _hoopManagers;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ShotArea[] _shotAreas;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ComboCounter[] _comboCounters;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Networked Displays")]
	[SerializeField]
	private ScoreManager[] _scoreManagers;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TimerDisplay[] _timerDisplays;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Networked Dispenser")]
	[SerializeField]
	private DispenserModelSettings _dispenserModelSettings;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DispenserSettings _dispenserSettings;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PhysicsHoopManager[] _physicsHoopManagers;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private OneHitTrigger[] _oneHitTriggers;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PinballBallPoint[] _pinballBallPoints;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SizeAdjuster _sizeAdjuster;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GBAPlayerSystem _owningPlayer;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CameraTeleportManager _ownerTeleportManager;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _checkDistanceToTarget;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _localPositionOffset;

	[Token(Token = "0x17000173")]
	public HoopManager[] HoopManagers
	{
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x129BEC4", Offset = "0x129BEC4", VA = "0x129BEC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000174")]
	public GBAPlayerSystem OwningPlayer
	{
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x129BECC", Offset = "0x129BECC", VA = "0x129BECC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x129AD00", Offset = "0x129AD00", VA = "0x129AD00")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public Dispenser OwnedDispenser
	{
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x129BED4", Offset = "0x129BED4", VA = "0x129BED4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000176")]
	public UserStartManager UserStartManager
	{
		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x129BF58", Offset = "0x129BF58", VA = "0x129BF58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000177")]
	public DispenserSettings DispenserSettings
	{
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x129BF60", Offset = "0x129BF60", VA = "0x129BF60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000178")]
	public DispenserModelSettings DispenserModelSettings
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x129BF68", Offset = "0x129BF68", VA = "0x129BF68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x129BF70", Offset = "0x129BF70", VA = "0x129BF70")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x129B210", Offset = "0x129B210", VA = "0x129B210")]
	public void SetSlotTarget(Vector3 localTargetPosition)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x129C254", Offset = "0x129C254", VA = "0x129C254")]
	public void ResetSlotTarget()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x129C2B4", Offset = "0x129C2B4", VA = "0x129C2B4")]
	public int GetHoopManagerIndex(HoopManager hoopManager)
	{
		return default(int);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x129C358", Offset = "0x129C358", VA = "0x129C358")]
	public int GetPinballballPointIndex(PinballBallPoint pinballBallPoint)
	{
		return default(int);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x129BC50", Offset = "0x129BC50", VA = "0x129BC50")]
	public void PlugNetworkedTimer(NetworkedTimer networkedTimer)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x129B9D0", Offset = "0x129B9D0", VA = "0x129B9D0")]
	public void PlugAllDispensers(List<Dispenser> networkedDispensers)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x129B3D4", Offset = "0x129B3D4", VA = "0x129B3D4")]
	public void PlugComboDetection(ComboDetection comboDetection)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x129C488", Offset = "0x129C488", VA = "0x129C488")]
	public void RaiseRemoteScoreEvent(Collider collidingObject, int hoopManagerIndex, GBAPlayerSystem owningPlayer)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x129C4CC", Offset = "0x129C4CC", VA = "0x129C4CC")]
	public void RaiseRemoteScoreEvent(Collider collidingObject, int hoopManagerIndex, bool locallyOwned)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x129C5BC", Offset = "0x129C5BC", VA = "0x129C5BC")]
	public void RaiseRemoteScorePinballBallPoint(int pinballBallPointIndex, bool locallyOwned)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x129C6A4", Offset = "0x129C6A4", VA = "0x129C6A4")]
	public NetworkedPlayerSlot()
	{
	}
}
[Token(Token = "0x200014F")]
public class NetworkedPlayManager : NetworkBehaviour
{
	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NetworkedPlayManagerReference _managerReference;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[ContextMenuItem("Find Events", "OnValidate")]
	private GBAEventsListener _gbaEventsListener;

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x129C704", Offset = "0x129C704", VA = "0x129C704")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x129C75C", Offset = "0x129C75C", VA = "0x129C75C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x129C868", Offset = "0x129C868", VA = "0x129C868")]
	public void NetworkedUserStartPlayEvent()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x129C9E4", Offset = "0x129C9E4", VA = "0x129C9E4")]
	[Command(requiresAuthority = false)]
	private void CmdUserStartPlayEvent()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x129C8F8", Offset = "0x129C8F8", VA = "0x129C8F8")]
	[ClientRpc]
	private void RpcUserStartPlayEvent()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x129C8CC", Offset = "0x129C8CC", VA = "0x129C8CC")]
	private void doUserStartPlayEvent()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x129CAD0", Offset = "0x129CAD0", VA = "0x129CAD0")]
	public void NetworkedStartPlayEvent()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x129CC4C", Offset = "0x129CC4C", VA = "0x129CC4C")]
	[Command(requiresAuthority = false)]
	private void CmdStartPlayEvent()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x129CB60", Offset = "0x129CB60", VA = "0x129CB60")]
	[ClientRpc]
	private void RpcStartPlayEvent()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x129CB34", Offset = "0x129CB34", VA = "0x129CB34")]
	private void doStartPlayEvent()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x129CD38", Offset = "0x129CD38", VA = "0x129CD38")]
	public void NetworkedRestartPlayEvent()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x129CEB4", Offset = "0x129CEB4", VA = "0x129CEB4")]
	[Command(requiresAuthority = false)]
	private void CmdRestartPlayEvent()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x129CDC8", Offset = "0x129CDC8", VA = "0x129CDC8")]
	[ClientRpc]
	private void RpcRestartPlayEvent()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x129CD9C", Offset = "0x129CD9C", VA = "0x129CD9C")]
	private void doRestartPlayEvent()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x129CFA0", Offset = "0x129CFA0", VA = "0x129CFA0")]
	public void NetworkedStopPlayEvent()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x129D11C", Offset = "0x129D11C", VA = "0x129D11C")]
	[Command(requiresAuthority = false)]
	private void CmdStopPlayEvent()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x129D030", Offset = "0x129D030", VA = "0x129D030")]
	[ClientRpc]
	private void RpcStopPlayEvent()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x129D004", Offset = "0x129D004", VA = "0x129D004")]
	private void doStopPlayEvent()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x129D208", Offset = "0x129D208", VA = "0x129D208")]
	public NetworkedPlayManager()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x129D238", Offset = "0x129D238", VA = "0x129D238")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x129D23C", Offset = "0x129D23C", VA = "0x129D23C")]
	protected void UserCode_CmdUserStartPlayEvent()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x129D240", Offset = "0x129D240", VA = "0x129D240")]
	protected static void InvokeUserCode_CmdUserStartPlayEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x129D370", Offset = "0x129D370", VA = "0x129D370")]
	protected void UserCode_RpcUserStartPlayEvent()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x129D374", Offset = "0x129D374", VA = "0x129D374")]
	protected static void InvokeUserCode_RpcUserStartPlayEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x129D470", Offset = "0x129D470", VA = "0x129D470")]
	protected void UserCode_CmdStartPlayEvent()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x129D474", Offset = "0x129D474", VA = "0x129D474")]
	protected static void InvokeUserCode_CmdStartPlayEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x129D5A4", Offset = "0x129D5A4", VA = "0x129D5A4")]
	protected void UserCode_RpcStartPlayEvent()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x129D5A8", Offset = "0x129D5A8", VA = "0x129D5A8")]
	protected static void InvokeUserCode_RpcStartPlayEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x129D6A4", Offset = "0x129D6A4", VA = "0x129D6A4")]
	protected void UserCode_CmdRestartPlayEvent()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x129D6A8", Offset = "0x129D6A8", VA = "0x129D6A8")]
	protected static void InvokeUserCode_CmdRestartPlayEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x129D7D8", Offset = "0x129D7D8", VA = "0x129D7D8")]
	protected void UserCode_RpcRestartPlayEvent()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x129D7DC", Offset = "0x129D7DC", VA = "0x129D7DC")]
	protected static void InvokeUserCode_RpcRestartPlayEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x129D8D8", Offset = "0x129D8D8", VA = "0x129D8D8")]
	protected void UserCode_CmdStopPlayEvent()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x129D8DC", Offset = "0x129D8DC", VA = "0x129D8DC")]
	protected static void InvokeUserCode_CmdStopPlayEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x129DA0C", Offset = "0x129DA0C", VA = "0x129DA0C")]
	protected void UserCode_RpcStopPlayEvent()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x129DA10", Offset = "0x129DA10", VA = "0x129DA10")]
	protected static void InvokeUserCode_RpcStopPlayEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x129DB0C", Offset = "0x129DB0C", VA = "0x129DB0C")]
	static NetworkedPlayManager()
	{
	}
}
[Token(Token = "0x2000150")]
[CreateAssetMenu(fileName = "NetworkedPlayManagerReference", menuName = "GBA/Network/Networked Play Manager Reference")]
public class NetworkedPlayManagerReference : ScriptableObject
{
	[Token(Token = "0x17000179")]
	public NetworkedPlayManager Reference
	{
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x129DF48", Offset = "0x129DF48", VA = "0x129DF48")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x129DF50", Offset = "0x129DF50", VA = "0x129DF50")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x129C7E0", Offset = "0x129C7E0", VA = "0x129C7E0")]
	public void Init(NetworkedPlayManager manager)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x129DF58", Offset = "0x129DF58", VA = "0x129DF58")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x129DF64", Offset = "0x129DF64", VA = "0x129DF64")]
	public void NetworkedUserStartPlay()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x129DFE4", Offset = "0x129DFE4", VA = "0x129DFE4")]
	public void NetworkedStartPlay()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x129E064", Offset = "0x129E064", VA = "0x129E064")]
	public void NetworkedRestartPlay()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x129E0E4", Offset = "0x129E0E4", VA = "0x129E0E4")]
	public void NetworkedStopPlay()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x129E164", Offset = "0x129E164", VA = "0x129E164")]
	public NetworkedPlayManagerReference()
	{
	}
}
[Token(Token = "0x2000151")]
public class PartyLevelEndManager : MonoBehaviour
{
	[Token(Token = "0x2000152")]
	[CompilerGenerated]
	private sealed class <delayedSuccessCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PartyLevelEndManager <>4__this;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x129E428", Offset = "0x129E428", VA = "0x129E428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0x129E470", Offset = "0x129E470", VA = "0x129E470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x129E310", Offset = "0x129E310", VA = "0x129E310")]
		[DebuggerHidden]
		public <delayedSuccessCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x129E340", Offset = "0x129E340", VA = "0x129E340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x129E344", Offset = "0x129E344", VA = "0x129E344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x129E430", Offset = "0x129E430", VA = "0x129E430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayManager _playManager;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _onSuccessDelay;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEvent _onLevelEnded;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds _successDelayYield;

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x129E16C", Offset = "0x129E16C", VA = "0x129E16C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x129A5D0", Offset = "0x129A5D0", VA = "0x129A5D0")]
	public void SetupEndSettings(PlayManager playManager, float successDelay, UnityEvent onEndEvent)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x129E244", Offset = "0x129E244", VA = "0x129E244")]
	private void setLevelEnded()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x129E29C", Offset = "0x129E29C", VA = "0x129E29C")]
	[IteratorStateMachine(typeof(<delayedSuccessCoroutine>d__7))]
	private IEnumerator delayedSuccessCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x129E338", Offset = "0x129E338", VA = "0x129E338")]
	public PartyLevelEndManager()
	{
	}
}
[Token(Token = "0x2000153")]
public class PlayersManager : NetworkBehaviour
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayersManager Instance;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnInitialized;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool IsInitialized;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcIntGameParameter _playerCountParameter;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GBAPlayerSystem> _playersList;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly SyncList<uint> _playersSyncList;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<string> OnBeforeRemovingPlayerFromPlayerList;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action OnPlayersListUpdated;

	[Token(Token = "0x1700017C")]
	public int PlayersCount
	{
		[Token(Token = "0x6000936")]
		[Address(RVA = "0x129E478", Offset = "0x129E478", VA = "0x129E478")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700017D")]
	public ReadOnlyCollection<GBAPlayerSystem> PlayersList
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0x129BDBC", Offset = "0x129BDBC", VA = "0x129BDBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017E")]
	public GBAPlayerSystem HostingPlayer
	{
		[Token(Token = "0x6000938")]
		[Address(RVA = "0x129E4C8", Offset = "0x129E4C8", VA = "0x129E4C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x129E540", Offset = "0x129E540", VA = "0x129E540")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x129E6A8", Offset = "0x129E6A8", VA = "0x129E6A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x129E78C", Offset = "0x129E78C", VA = "0x129E78C", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x129EA78", Offset = "0x129EA78", VA = "0x129EA78", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x129ED14", Offset = "0x129ED14", VA = "0x129ED14", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x129F01C", Offset = "0x129F01C", VA = "0x129F01C", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x129F10C", Offset = "0x129F10C", VA = "0x129F10C")]
	private void playersListUpdated(SyncList<uint>.Operation op, int itemIndex, uint oldItem, uint newItem)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x129F3C0", Offset = "0x129F3C0", VA = "0x129F3C0")]
	[Server]
	private void registerPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x129F65C", Offset = "0x129F65C", VA = "0x129F65C")]
	[Server]
	private void unregisterPlayer(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x129F8BC", Offset = "0x129F8BC", VA = "0x129F8BC")]
	public GBAPlayerSystem GetGBAPlayerSystem(uint playerNetID)
	{
		return null;
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x129F9E4", Offset = "0x129F9E4", VA = "0x129F9E4")]
	public PlayersManager()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x129FAD0", Offset = "0x129FAD0", VA = "0x129FAD0")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x129FAD4", Offset = "0x129FAD4", VA = "0x129FAD4")]
	static PlayersManager()
	{
	}
}
[Token(Token = "0x2000154")]
public class PlayersRankingManager : MonoBehaviour
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayersRankingReference _reference;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnRankingUpdated;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action On1v1RankingUpdated;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ReadOnlyCollection<GBAPlayerSystem> _playersList;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] _playersRanks;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] _playersOnlineRanks;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly List<GBAPlayerSystem> _subscribedPlayers;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly List<List<GBAPlayerSystem>> _currentRanking;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<List<GBAPlayerSystem>> _currentOnlineRanking;

	[Token(Token = "0x1700017F")]
	public int MaxRank
	{
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x129FAD8", Offset = "0x129FAD8", VA = "0x129FAD8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000180")]
	public int MaxOnlineRank
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x129FB24", Offset = "0x129FB24", VA = "0x129FB24")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x129FB70", Offset = "0x129FB70", VA = "0x129FB70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x129FCFC", Offset = "0x129FCFC", VA = "0x129FCFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x129FDBC", Offset = "0x129FDBC", VA = "0x129FDBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x12A00BC", Offset = "0x12A00BC", VA = "0x12A00BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x12A0678", Offset = "0x12A0678", VA = "0x12A0678")]
	public ReadOnlyCollection<GBAPlayerSystem> GetPlayersPerRank(int rank)
	{
		return null;
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x12A071C", Offset = "0x12A071C", VA = "0x12A071C")]
	public ReadOnlyCollection<GBAPlayerSystem> GetPlayersPerOnlineRank(int rank)
	{
		return null;
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x129FFB0", Offset = "0x129FFB0", VA = "0x129FFB0")]
	private void subscribeToPlayersListUpdates()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x12A07C0", Offset = "0x12A07C0", VA = "0x12A07C0")]
	private void onPlayersListUpdated()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x12A1140", Offset = "0x12A1140", VA = "0x12A1140")]
	private void refreshRanking()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x12A17E8", Offset = "0x12A17E8", VA = "0x12A17E8")]
	private void refreshOnlineRanking()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x12A1E90", Offset = "0x12A1E90", VA = "0x12A1E90")]
	private static int comparePlayersByScore(GBAPlayerSystem player1, GBAPlayerSystem player2)
	{
		return default(int);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x12A1F88", Offset = "0x12A1F88", VA = "0x12A1F88")]
	private static int comparePlayersByOnlineScore(GBAPlayerSystem player1, GBAPlayerSystem player2)
	{
		return default(int);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x12A2080", Offset = "0x12A2080", VA = "0x12A2080")]
	public PlayersRankingManager()
	{
	}
}
[Token(Token = "0x2000155")]
public class PlayersRankingReference : ScriptableObject
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayersRankingManager _manager;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action _pendingRankingCallbacks;

	[Token(Token = "0x17000181")]
	public int MaxRank
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0x12A2188", Offset = "0x12A2188", VA = "0x12A2188")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000182")]
	public int MaxOnlineRank
	{
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x129B190", Offset = "0x129B190", VA = "0x129B190")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x129FBF0", Offset = "0x129FBF0", VA = "0x129FBF0")]
	public void Init(PlayersRankingManager rankingManager)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x129FD94", Offset = "0x129FD94", VA = "0x129FD94")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1299EE0", Offset = "0x1299EE0", VA = "0x1299EE0")]
	public void SubscribeToRankingUpdates(Action callback)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x129A2FC", Offset = "0x129A2FC", VA = "0x129A2FC")]
	public void UnsubscribeFromRankingUpdates(Action callback)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x12A2208", Offset = "0x12A2208", VA = "0x12A2208")]
	public ReadOnlyCollection<GBAPlayerSystem> GetPlayersPerRank(int rank)
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x12A229C", Offset = "0x12A229C", VA = "0x12A229C")]
	public ReadOnlyCollection<GBAPlayerSystem> GetPlayersPerOnlineRank(int rank)
	{
		return null;
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x12A2330", Offset = "0x12A2330", VA = "0x12A2330")]
	public PlayersRankingReference()
	{
	}
}
[Token(Token = "0x2000156")]
public class UserStartManager : MonoBehaviour
{
	[Token(Token = "0x2000157")]
	[CompilerGenerated]
	private sealed class <raiseStartPlayEventAfterUserStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UserStartManager <>4__this;

		[Token(Token = "0x17000183")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x12A262C", Offset = "0x12A262C", VA = "0x12A262C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x12A2674", Offset = "0x12A2674", VA = "0x12A2674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x12A24C8", Offset = "0x12A24C8", VA = "0x12A24C8")]
		[DebuggerHidden]
		public <raiseStartPlayEventAfterUserStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x12A2520", Offset = "0x12A2520", VA = "0x12A2520", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x12A2524", Offset = "0x12A2524", VA = "0x12A2524", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x12A2634", Offset = "0x12A2634", VA = "0x12A2634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[ContextMenuItem("Find Events", "OnValidate")]
	private GBAEventsListener _gbaEventsListener;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x12A2338", Offset = "0x12A2338", VA = "0x12A2338")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x12A2390", Offset = "0x12A2390", VA = "0x12A2390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x12A2434", Offset = "0x12A2434", VA = "0x12A2434")]
	private void delayedStartPlayEvent()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x12A2454", Offset = "0x12A2454", VA = "0x12A2454")]
	[IteratorStateMachine(typeof(<raiseStartPlayEventAfterUserStart>d__4))]
	private IEnumerator raiseStartPlayEventAfterUserStart()
	{
		return null;
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x12A24F0", Offset = "0x12A24F0", VA = "0x12A24F0")]
	public UserStartManager()
	{
	}
}
[Token(Token = "0x2000158")]
public class NetworkStartEvents : NetworkBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent _onStartServer;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEvent _onStartClient;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent _onStartLocalPlayer;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent _onStopServer;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UnityEvent _onStopClient;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action OnServerStarted;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action OnClientStarted;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action OnLocalPlayerStarted;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action OnServerStopped;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action OnClientStopped;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x12A267C", Offset = "0x12A267C", VA = "0x12A267C", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x12A26C0", Offset = "0x12A26C0", VA = "0x12A26C0", Slot = "9")]
	public override void OnStopServer()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x12A2704", Offset = "0x12A2704", VA = "0x12A2704", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x12A2748", Offset = "0x12A2748", VA = "0x12A2748", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x12A278C", Offset = "0x12A278C", VA = "0x12A278C", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x12A27D0", Offset = "0x12A27D0", VA = "0x12A27D0")]
	public NetworkStartEvents()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x12A27D8", Offset = "0x12A27D8", VA = "0x12A27D8")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000159")]
public class UnparentOnNetworkStart : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	public enum Tracker
	{
		[Token(Token = "0x40007B4")]
		None,
		[Token(Token = "0x40007B5")]
		Scene,
		[Token(Token = "0x40007B6")]
		Space,
		[Token(Token = "0x40007B7")]
		Left,
		[Token(Token = "0x40007B8")]
		Right
	}

	[Token(Token = "0x200015B")]
	public enum Mode
	{
		[Token(Token = "0x40007BA")]
		EDITOR_ONLY,
		[Token(Token = "0x40007BB")]
		ALL_BUT_EDITOR,
		[Token(Token = "0x40007BC")]
		ALL
	}

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode PlayMode;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Tracker tracker;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetworkStartEvents _networkStartEvents;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _unparentOnServer;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool _unparentOnClient;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool _unparentOnLocalPlayer;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _root;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x12A27DC", Offset = "0x12A27DC", VA = "0x12A27DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x12A2B8C", Offset = "0x12A2B8C", VA = "0x12A2B8C")]
	private void tryDestroy()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x12A2BF8", Offset = "0x12A2BF8", VA = "0x12A2BF8")]
	private void tryUnparent()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x12A2D58", Offset = "0x12A2D58", VA = "0x12A2D58")]
	public UnparentOnNetworkStart()
	{
	}
}
[Token(Token = "0x200015C")]
public class ObjectApparition : MonoBehaviour
{
	[Token(Token = "0x200015D")]
	[CompilerGenerated]
	private sealed class <LerpApparition>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectApparition <>4__this;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <middleReached>5__3;

		[Token(Token = "0x17000185")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x12A33AC", Offset = "0x12A33AC", VA = "0x12A33AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x12A33F4", Offset = "0x12A33F4", VA = "0x12A33F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x12A3188", Offset = "0x12A3188", VA = "0x12A3188")]
		[DebuggerHidden]
		public <LerpApparition>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x12A3270", Offset = "0x12A3270", VA = "0x12A3270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x12A3274", Offset = "0x12A3274", VA = "0x12A3274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x12A33B4", Offset = "0x12A33B4", VA = "0x12A33B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015E")]
	[CompilerGenerated]
	private sealed class <LerpDisparition>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectApparition <>4__this;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <middleReached>5__3;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x12A3538", Offset = "0x12A3538", VA = "0x12A3538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x12A3580", Offset = "0x12A3580", VA = "0x12A3580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x12A31B0", Offset = "0x12A31B0", VA = "0x12A31B0")]
		[DebuggerHidden]
		public <LerpDisparition>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x12A33FC", Offset = "0x12A33FC", VA = "0x12A33FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x12A3400", Offset = "0x12A3400", VA = "0x12A3400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x12A3540", Offset = "0x12A3540", VA = "0x12A3540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Start")]
	public bool AppearAtStart;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool SetAppearAtStart;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> ObjectToAppear;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ApparitionDuration;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _apparitionDurationRealTime;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _alreadyAppeared;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent StartAppearingEvent;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent MiddleAppearingEvent;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent EndAppearingEvent;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float DisappearanceTime;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _disparitionDurationRealtime;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent StartDisappearingEvent;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent MiddleDisappearingEvent;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent EndDisappearingEvent;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly int PROPERTY_ID_APPARITION;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private readonly int PROPERTY_ID_DISPARITION;

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x12A2D68", Offset = "0x12A2D68", VA = "0x12A2D68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x12A2DE4", Offset = "0x12A2DE4", VA = "0x12A2DE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x12A2DE8", Offset = "0x12A2DE8", VA = "0x12A2DE8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x12A2E30", Offset = "0x12A2E30", VA = "0x12A2E30")]
	[ContextMenu("StartAppearing")]
	public void StartAppearing()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x12A2F94", Offset = "0x12A2F94", VA = "0x12A2F94")]
	[ContextMenu("StartDisappearing")]
	public void StartDisappearing()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x12A3034", Offset = "0x12A3034", VA = "0x12A3034")]
	private void updateAppearGraphic(float newFloat)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x12A2DC4", Offset = "0x12A2DC4", VA = "0x12A2DC4")]
	[ContextMenu("SetAppear")]
	public void SetAppear()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x12A2D98", Offset = "0x12A2D98", VA = "0x12A2D98")]
	[ContextMenu("SetDisapear")]
	public void SetDiseapear()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x12A2F20", Offset = "0x12A2F20", VA = "0x12A2F20")]
	[IteratorStateMachine(typeof(<LerpApparition>d__24))]
	private IEnumerator LerpApparition()
	{
		return null;
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x12A2FC0", Offset = "0x12A2FC0", VA = "0x12A2FC0")]
	[IteratorStateMachine(typeof(<LerpDisparition>d__25))]
	private IEnumerator LerpDisparition()
	{
		return null;
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x12A2E80", Offset = "0x12A2E80", VA = "0x12A2E80")]
	public void ShowAppearingObject(bool show)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x12A31D8", Offset = "0x12A31D8", VA = "0x12A31D8")]
	public ObjectApparition()
	{
	}
}
[Token(Token = "0x200015F")]
public class OneHitTrigger : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	private class HitSource
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Hit;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Body;

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x12A4B44", Offset = "0x12A4B44", VA = "0x12A4B44")]
		public HitSource(Rigidbody body)
		{
		}
	}

	[Token(Token = "0x2000161")]
	private class DispensableBody
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDispensable Dispensable;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Body;

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x12A41F8", Offset = "0x12A41F8", VA = "0x12A41F8")]
		public DispensableBody(IDispensable dispensable, Rigidbody body)
		{
		}
	}

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool InitializeOnEnable;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask _detectedLayer;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<rcProxyBehaviour> _physicsObjectProxies;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcProxyBehaviour[] _watchAreaProxies;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityAction[] _perObjectHitCallback;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityAction<Collision>[] _collisionCallbacks;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Dispenser> _dispensers;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<HitSource> _watchedBodies;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<DispensableBody> _dispensables;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<UnityAction> _dispensableCallbacks;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _ready;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x129C3FC", Offset = "0x129C3FC", VA = "0x129C3FC")]
	public void SetDispensers(IList<Dispenser> dispensers)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x12A3588", Offset = "0x12A3588", VA = "0x12A3588")]
	public void AddHitCallbackForProxy(rcProxyBehaviour proxy, UnityAction onHit)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x12A3BB4", Offset = "0x12A3BB4", VA = "0x12A3BB4")]
	public void RemoveHitCallbackForProxy(rcProxyBehaviour proxy, UnityAction onHit)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x12A3D4C", Offset = "0x12A3D4C", VA = "0x12A3D4C")]
	public void AddCallbackToPooledBalls()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x12A423C", Offset = "0x12A423C", VA = "0x12A423C")]
	public void RemoveCallbackFromPooledBalls()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x12A4508", Offset = "0x12A4508", VA = "0x12A4508")]
	[Obsolete]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x12A3728", Offset = "0x12A3728", VA = "0x12A3728")]
	public void Initialize(List<rcProxyBehaviour> proxys)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x12A4514", Offset = "0x12A4514", VA = "0x12A4514")]
	public void Clean(bool clearObjectProxies = false)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x12A48C0", Offset = "0x12A48C0", VA = "0x12A48C0")]
	private void TriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x12A4B7C", Offset = "0x12A4B7C", VA = "0x12A4B7C")]
	private void CollisionEnter(Collision collision, int hitProxyIndex)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x12A4D64", Offset = "0x12A4D64", VA = "0x12A4D64")]
	private void TriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x12A4F00", Offset = "0x12A4F00", VA = "0x12A4F00")]
	private void OnBallDispensed(Rigidbody body)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x12A4FF0", Offset = "0x12A4FF0", VA = "0x12A4FF0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x12A4FF8", Offset = "0x12A4FF8", VA = "0x12A4FF8")]
	public OneHitTrigger()
	{
	}
}
[Token(Token = "0x200016A")]
public class OculusLeaderboardManager : OnlineLeaderboardManager
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<ulong, Guid> _requestsIndex;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, OnlineFeaturesMessage<bool>.Callback> _highscoreUploadCallbacks;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback> _getHighscoresCallbacks;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string _leaderboardApiName;

	[Token(Token = "0x17000189")]
	public override bool Initialized
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x12A543C", Offset = "0x12A543C", VA = "0x12A543C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018A")]
	public override bool HasPendingUploads
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x12A5444", Offset = "0x12A5444", VA = "0x12A5444", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x12A549C", Offset = "0x12A549C", VA = "0x12A549C")]
	public OculusLeaderboardManager(Leaderboard leaderboard)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x12A561C", Offset = "0x12A561C", VA = "0x12A561C", Slot = "6")]
	public override Guid UploadHighscore(long highscore, byte[] extraData, OnlineFeaturesMessage<bool>.Callback onComplete)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x12A56C8", Offset = "0x12A56C8", VA = "0x12A56C8", Slot = "7")]
	public override Guid GetTopEntries(int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x12A5774", Offset = "0x12A5774", VA = "0x12A5774", Slot = "8")]
	public override Guid GetEntriesFromRank(int startRank, int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x12A5820", Offset = "0x12A5820", VA = "0x12A5820", Slot = "9")]
	public override Guid GetUserCenteredEntries(int higherRange, int lowerRange, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x12A58CC", Offset = "0x12A58CC", VA = "0x12A58CC", Slot = "10")]
	public override void CancelRequest(Guid requestId)
	{
	}
}
[Token(Token = "0x200016B")]
public class OnlineLeaderboardEntry
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string Username;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string UserId;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly int Rank;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly long Highscore;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public readonly byte[] ExtraData;

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x12A5B04", Offset = "0x12A5B04", VA = "0x12A5B04")]
	public OnlineLeaderboardEntry(string username, string userId, int rank, long score, byte[] extraData)
	{
	}
}
[Token(Token = "0x200016C")]
public class OnlineLeaderboardInterface
{
	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly Leaderboard LeaderboardReference;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OnlineLeaderboardManager _currentPlatformManager;

	[Token(Token = "0x1700018B")]
	public bool HasPendingUploads
	{
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x12A5B7C", Offset = "0x12A5B7C", VA = "0x12A5B7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x12A5B94", Offset = "0x12A5B94", VA = "0x12A5B94")]
	public OnlineLeaderboardInterface(Leaderboard leaderboard)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x12A5F3C", Offset = "0x12A5F3C", VA = "0x12A5F3C")]
	public Guid UploadHighscore(long highscore, byte[] extraData, OnlineFeaturesMessage<bool>.Callback onComplete)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x12A5FC0", Offset = "0x12A5FC0", VA = "0x12A5FC0")]
	public Guid GetTopEntries(int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x12A603C", Offset = "0x12A603C", VA = "0x12A603C")]
	public Guid GetEntriesFromRank(int startRank, int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x12A60C0", Offset = "0x12A60C0", VA = "0x12A60C0")]
	public Guid GetUserCenteredEntries(int higherRange, int lowerRange, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x12A6144", Offset = "0x12A6144", VA = "0x12A6144")]
	public void CancelRequest(Guid requestId)
	{
	}
}
[Token(Token = "0x200016D")]
public abstract class OnlineLeaderboardManager
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly Leaderboard LeaderboardReference;

	[Token(Token = "0x1700018C")]
	public abstract bool Initialized
	{
		[Token(Token = "0x60009BC")]
		get;
	}

	[Token(Token = "0x1700018D")]
	public abstract bool HasPendingUploads
	{
		[Token(Token = "0x60009BD")]
		get;
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x12A55EC", Offset = "0x12A55EC", VA = "0x12A55EC")]
	public OnlineLeaderboardManager(Leaderboard leaderboard)
	{
	}

	[Token(Token = "0x60009BF")]
	public abstract Guid UploadHighscore(long highscore, byte[] extraData, OnlineFeaturesMessage<bool>.Callback onComplete);

	[Token(Token = "0x60009C0")]
	public abstract Guid GetTopEntries(int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived);

	[Token(Token = "0x60009C1")]
	public abstract Guid GetEntriesFromRank(int startRank, int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived);

	[Token(Token = "0x60009C2")]
	public abstract Guid GetUserCenteredEntries(int higherRange, int lowerRange, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived);

	[Token(Token = "0x60009C3")]
	public abstract void CancelRequest(Guid requestId);
}
[Token(Token = "0x200016E")]
public class PlayFabLeaderboardManager : OnlineLeaderboardManager
{
	[Token(Token = "0x200016F")]
	private enum RequestType
	{
		[Token(Token = "0x4000800")]
		UPLOAD,
		[Token(Token = "0x4000801")]
		GET,
		[Token(Token = "0x4000802")]
		GET_TOP
	}

	[Token(Token = "0x2000170")]
	private class Request
	{
		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RequestType Type;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Guid Id;

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x12A65D8", Offset = "0x12A65D8", VA = "0x12A65D8")]
		public Request()
		{
		}
	}

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int FixPlayFabDescendingOrderLeaderboards;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float DelayBetweenUploadAndGet;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Request> _pendingRequests;

	[Token(Token = "0x1700018E")]
	public override bool Initialized
	{
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x12A615C", Offset = "0x12A615C", VA = "0x12A615C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018F")]
	public override bool HasPendingUploads
	{
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x12A6164", Offset = "0x12A6164", VA = "0x12A6164", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x12A5D9C", Offset = "0x12A5D9C", VA = "0x12A5D9C")]
	public PlayFabLeaderboardManager(Leaderboard leaderboard)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x12A61FC", Offset = "0x12A61FC", VA = "0x12A61FC", Slot = "10")]
	public override void CancelRequest(Guid requestId)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x12A62F4", Offset = "0x12A62F4", VA = "0x12A62F4", Slot = "8")]
	public override Guid GetEntriesFromRank(int startRank, int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x12A65BC", Offset = "0x12A65BC", VA = "0x12A65BC", Slot = "7")]
	public override Guid GetTopEntries(int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x12A6300", Offset = "0x12A6300", VA = "0x12A6300")]
	private Guid GetEntriesFromRank(int startRank, int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived, RequestType requestType)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x12A65E0", Offset = "0x12A65E0", VA = "0x12A65E0", Slot = "9")]
	public override Guid GetUserCenteredEntries(int higherRange, int lowerRange, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x12A68A4", Offset = "0x12A68A4", VA = "0x12A68A4", Slot = "6")]
	public override Guid UploadHighscore(long highscore, byte[] extraData, OnlineFeaturesMessage<bool>.Callback onComplete)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x12A6C58", Offset = "0x12A6C58", VA = "0x12A6C58")]
	private void OnGetEntriesSuccess(List<PlayerLeaderboardEntry> result, Guid requestId, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback callback)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x12A6EAC", Offset = "0x12A6EAC", VA = "0x12A6EAC")]
	private void ConvertEntries(List<PlayerLeaderboardEntry> receivedEntries, List<OnlineLeaderboardEntry> convertedEntries)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x12A7150", Offset = "0x12A7150", VA = "0x12A7150")]
	private void OnGetEntriesError(PlayFabError error, Guid requestId, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback callback)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x12A6D9C", Offset = "0x12A6D9C", VA = "0x12A6D9C")]
	private Request RemovePendingRequest(Guid requestId)
	{
		return null;
	}
}
[Token(Token = "0x2000174")]
public class SteamLeaderboardManager : OnlineLeaderboardManager
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _initialized;

	[Token(Token = "0x4000810")]
	private const int INT_BYTE_COUNT = 4;

	[Token(Token = "0x4000811")]
	private const int CURRENT_DATA_VERSION = 0;

	[Token(Token = "0x17000190")]
	public override bool Initialized
	{
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x12A75AC", Offset = "0x12A75AC", VA = "0x12A75AC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000191")]
	public override bool HasPendingUploads
	{
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x12A75B4", Offset = "0x12A75B4", VA = "0x12A75B4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x12A5D6C", Offset = "0x12A5D6C", VA = "0x12A5D6C")]
	public SteamLeaderboardManager(Leaderboard leaderboard)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x12A75BC", Offset = "0x12A75BC", VA = "0x12A75BC", Slot = "7")]
	public override Guid GetTopEntries(int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x12A7604", Offset = "0x12A7604", VA = "0x12A7604", Slot = "8")]
	public override Guid GetEntriesFromRank(int startRank, int range, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x12A764C", Offset = "0x12A764C", VA = "0x12A764C", Slot = "9")]
	public override Guid GetUserCenteredEntries(int higherRange, int lowerRange, OnlineFeaturesMessage<OnlineLeaderboardEntry[]>.Callback onEntriesReceived)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x12A7694", Offset = "0x12A7694", VA = "0x12A7694", Slot = "6")]
	public override Guid UploadHighscore(long highscore, byte[] extraData, OnlineFeaturesMessage<bool>.Callback onComplete)
	{
		return default(Guid);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x12A76DC", Offset = "0x12A76DC", VA = "0x12A76DC", Slot = "10")]
	public override void CancelRequest(Guid requestId)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x12A76E0", Offset = "0x12A76E0", VA = "0x12A76E0")]
	public static byte[] IntToByteExtraData(int[] intExtraData)
	{
		return null;
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x12A7914", Offset = "0x12A7914", VA = "0x12A7914")]
	public static int[] ByteToIntExtraData(byte[] binExtraData)
	{
		return null;
	}
}
[Token(Token = "0x2000175")]
public class SteamLeaderboardUploadScheduler : rcSingleton<SteamLeaderboardUploadScheduler>
{
	[Token(Token = "0x2000176")]
	private struct UploadsLimitCheck
	{
		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action OnUploadAllowed;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Queue<float> History;
	}

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, UploadsLimitCheck> _uploadsLimitChecks;

	[Token(Token = "0x4000813")]
	public const int UPLOADS_COUNT_LIMIT = 10;

	[Token(Token = "0x4000814")]
	public const float UPLOADS_TIME_LIMIT = 600f;

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x12A7C48", Offset = "0x12A7C48", VA = "0x12A7C48")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x12A7E64", Offset = "0x12A7E64", VA = "0x12A7E64")]
	public void AddScheduler(string apiName, Queue<float> uploadsQueue, Action onUploadAllowed)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x12A7F38", Offset = "0x12A7F38", VA = "0x12A7F38")]
	public SteamLeaderboardUploadScheduler()
	{
	}
}
[Token(Token = "0x2000177")]
public class OnlineFeaturesManager : rcServiceBase<OnlineFeaturesSettings>
{
	[Token(Token = "0x2000178")]
	public enum PlatformAPI
	{
		[Token(Token = "0x4000825")]
		UNKNOWN,
		[Token(Token = "0x4000826")]
		OCULUS,
		[Token(Token = "0x4000827")]
		STEAM,
		[Token(Token = "0x4000828")]
		PLAYFAB,
		[Token(Token = "0x4000829")]
		PSN
	}

	[Serializable]
	[Token(Token = "0x2000179")]
	public struct PlatformOnlineHandler
	{
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlatformAPI Api;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public rcPlatformManager.SubPlatform[] Platforms;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlatformOnlineManager OnlineHandler;
	}

	[Token(Token = "0x200017A")]
	public enum InternetConnexion
	{
		[Token(Token = "0x400082E")]
		Checking,
		[Token(Token = "0x400082F")]
		OK,
		[Token(Token = "0x4000830")]
		KO
	}

	[StructLayout(3)]
	[Token(Token = "0x200017B")]
	[CompilerGenerated]
	private struct <checkInternetConnection>d__43 : IAsyncStateMachine
	{
		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnlineFeaturesManager <>4__this;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool> onCheckCompleted;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <internetOk>5__2;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <serviceIndex>5__3;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <servicesCount>5__4;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HttpClient <client>5__5;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter<HttpResponseMessage> <>u__1;

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x12A8D94", Offset = "0x12A8D94", VA = "0x12A8D94", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x12A94A4", Offset = "0x12A94A4", VA = "0x12A94A4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlatformOnlineHandler[] _runtimeOnlineHandlers;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlatformOnlineHandler[] _editorOnlineHandlers;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent UserFailedEntitlementCheck;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent UserPassedEntitlementCheck;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnUserLoggedIn;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlatformAPI _currentPlatformApi;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlatformOnlineManager _currentPlatformManager;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent<int, int> OnBundleVersionSet;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent _onInternetOK;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UnityEvent _onInternetNOK;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<bool> OnInternetResult;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public InternetConnexion _internetConnection;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly string[] services;

	[Token(Token = "0x17000192")]
	public bool IsLoggedIn
	{
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x12A8000", Offset = "0x12A8000", VA = "0x12A8000")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000193")]
	public string LoggedInUsername
	{
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x12A801C", Offset = "0x12A801C", VA = "0x12A801C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000194")]
	public string LoggedInUserID
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x12A8038", Offset = "0x12A8038", VA = "0x12A8038")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000195")]
	public string LoggedInUserOnlineID
	{
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x12A8054", Offset = "0x12A8054", VA = "0x12A8054")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000196")]
	public PlatformAPI CurrentPlatformApi
	{
		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x12A8070", Offset = "0x12A8070", VA = "0x12A8070")]
		get
		{
			return default(PlatformAPI);
		}
	}

	[Token(Token = "0x17000197")]
	public string UserFolderPath
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x12A8078", Offset = "0x12A8078", VA = "0x12A8078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000198")]
	public IMatchmaker Matchmaker
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x12A8100", Offset = "0x12A8100", VA = "0x12A8100")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000199")]
	public IRoomBrowser RoomBrowser
	{
		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x12A8184", Offset = "0x12A8184", VA = "0x12A8184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019A")]
	public int CurrentBundleCode
	{
		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x12A8208", Offset = "0x12A8208", VA = "0x12A8208")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700019B")]
	public int LatestBundleCode
	{
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x12A8224", Offset = "0x12A8224", VA = "0x12A8224")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700019C")]
	public bool IsCheckingGameVersion
	{
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x12A8240", Offset = "0x12A8240", VA = "0x12A8240")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019D")]
	public bool IsLatestGameVersion
	{
		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x12A82A8", Offset = "0x12A82A8", VA = "0x12A82A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x12A8310", Offset = "0x12A8310", VA = "0x12A8310")]
	public void SetBundleCodes(int currentBundleCode, int latestBundleCode)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x12A83C8", Offset = "0x12A83C8", VA = "0x12A83C8")]
	public void LaunchStore()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x12A844C", Offset = "0x12A844C", VA = "0x12A844C")]
	public InternetConnexion CheckInternetConnexion()
	{
		return default(InternetConnexion);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x12A8454", Offset = "0x12A8454", VA = "0x12A8454")]
	[AsyncStateMachine(typeof(<checkInternetConnection>d__43))]
	private void checkInternetConnection(Action<bool> onCheckCompleted)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x12A8530", Offset = "0x12A8530", VA = "0x12A8530", Slot = "13")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x12A8758", Offset = "0x12A8758", VA = "0x12A8758")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x12A87F8", Offset = "0x12A87F8", VA = "0x12A87F8", Slot = "14")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x12A8850", Offset = "0x12A8850", VA = "0x12A8850", Slot = "20")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x12A88A8", Offset = "0x12A88A8", VA = "0x12A88A8")]
	public void SetSystemCountryCode(string countryCode)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x12A88E8", Offset = "0x12A88E8", VA = "0x12A88E8")]
	public void SetSystemLanguageCode(string languageCode)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x12A8928", Offset = "0x12A8928", VA = "0x12A8928")]
	public void SetUserLoggedIn(string userID, string username)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x12A8A74", Offset = "0x12A8A74", VA = "0x12A8A74")]
	public void SetUserOnlineID(string userOnlineID)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x12A8AC8", Offset = "0x12A8AC8", VA = "0x12A8AC8")]
	public bool IsLoggedInUser(string userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x12A8B18", Offset = "0x12A8B18", VA = "0x12A8B18")]
	public OnlineFeaturesManager()
	{
	}
}
[Token(Token = "0x200017C")]
public class OnlineFeaturesMessage<T> : OnlineFeaturesMessage
{
	[Token(Token = "0x200017D")]
	public new delegate void Callback(OnlineFeaturesMessage<T> message);

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public readonly T Data;

	[Token(Token = "0x6000A07")]
	public OnlineFeaturesMessage(Guid requestId, T data)
	{
	}

	[Token(Token = "0x6000A08")]
	public OnlineFeaturesMessage(Guid requestId, OnlineFeaturesError error)
	{
	}

	[Token(Token = "0x6000A09")]
	public static OnlineFeaturesMessage<T> CreateResponseMessage(Guid requestId, T data)
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	public new static OnlineFeaturesMessage<T> CreateErrorMessage(Guid requestId, int httpCode, string message)
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	public new static OnlineFeaturesMessage<T> CreateErrorMessage(Guid requestId, HttpCode httpCode, string message)
	{
		return null;
	}
}
[Token(Token = "0x200017E")]
public class OnlineFeaturesMessage
{
	[Token(Token = "0x200017F")]
	public delegate void Callback(OnlineFeaturesMessage message);

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly Guid RequestId;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly bool IsError;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly OnlineFeaturesError Error;

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x12A94B0", Offset = "0x12A94B0", VA = "0x12A94B0")]
	public OnlineFeaturesMessage(Guid requestId)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x12A94F0", Offset = "0x12A94F0", VA = "0x12A94F0")]
	public OnlineFeaturesMessage(Guid requestId, OnlineFeaturesError error)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x12A9544", Offset = "0x12A9544", VA = "0x12A9544")]
	public static OnlineFeaturesMessage CreateErrorMessage(Guid requestId, int httpCode, string message)
	{
		return null;
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x12A9654", Offset = "0x12A9654", VA = "0x12A9654")]
	public static OnlineFeaturesMessage CreateErrorMessage(Guid requestId, HttpCode httpCode, string message)
	{
		return null;
	}
}
[Token(Token = "0x2000180")]
public class OnlineFeaturesError
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly int HttpCode;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string Message;

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x12A961C", Offset = "0x12A961C", VA = "0x12A961C")]
	public OnlineFeaturesError(int httpCode, string message)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x12A972C", Offset = "0x12A972C", VA = "0x12A972C")]
	public OnlineFeaturesError(HttpCode httpCode, string message)
	{
	}
}
[Token(Token = "0x2000181")]
public enum HttpCode
{
	[Token(Token = "0x4000841")]
	OK = 200,
	[Token(Token = "0x4000842")]
	CREATED = 201,
	[Token(Token = "0x4000843")]
	BAD_REQUEST = 400,
	[Token(Token = "0x4000844")]
	NOT_FOUND = 404,
	[Token(Token = "0x4000845")]
	REQUEST_TIMEOUT = 408,
	[Token(Token = "0x4000846")]
	INTERNAL_SERVER_ERROR = 500
}
[Token(Token = "0x2000182")]
[CreateAssetMenu(fileName = "OnlineFeaturesSettings", menuName = "GBA/Online/Online Features Settings")]
public class OnlineFeaturesSettings : rcServiceSettings
{
	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcStringGameParameter _loggedInUsernameParameter;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcStringGameParameter _loggedInUserIdParameter;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcStringGameParameter _loggedInUserOnlineIdParameter;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcStringGameParameter _systemCountryCodeParameter;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcStringGameParameter _systemLanguageCodeParameter;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private rcIntGameParameter _isLatestGameVersionParameter;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isLoggedIn;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _loggedInUserID;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _loggedInUserOnlineID;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _loggedInUsername;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentBundleCode;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _latestBundleCode;

	[Token(Token = "0x1700019E")]
	public bool IsLoggedIn
	{
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x12A98E0", Offset = "0x12A98E0", VA = "0x12A98E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019F")]
	public string LoggedInUsername
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x12A98E8", Offset = "0x12A98E8", VA = "0x12A98E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A0")]
	public string LoggedInUserID
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x12A98F0", Offset = "0x12A98F0", VA = "0x12A98F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A1")]
	public string LoggedInUserOnlineID
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x12A98F8", Offset = "0x12A98F8", VA = "0x12A98F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A2")]
	public string SystemCountryCode
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x12A9900", Offset = "0x12A9900", VA = "0x12A9900")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A3")]
	public string SystemLanguageCode
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x12A9948", Offset = "0x12A9948", VA = "0x12A9948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A4")]
	public int CurrentBundleCode
	{
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x12A9990", Offset = "0x12A9990", VA = "0x12A9990")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A5")]
	public int LatestBundleCode
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x12A9998", Offset = "0x12A9998", VA = "0x12A9998")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A6")]
	public bool IsCheckingGameVersion
	{
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x12A8258", Offset = "0x12A8258", VA = "0x12A8258")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A7")]
	public bool IsLatestGameVersion
	{
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x12A82C0", Offset = "0x12A82C0", VA = "0x12A82C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x12A8770", Offset = "0x12A8770", VA = "0x12A8770")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x12A8AE0", Offset = "0x12A8AE0", VA = "0x12A8AE0")]
	public bool IsLoggedInUser(string userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x12A88CC", Offset = "0x12A88CC", VA = "0x12A88CC")]
	public void SetSystemCountryCode(string countryCode)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x12A890C", Offset = "0x12A890C", VA = "0x12A890C")]
	public void SetSystemLanguageCode(string languageCode)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x12A8968", Offset = "0x12A8968", VA = "0x12A8968")]
	public void SetUserLoggedIn(string userID, string username, IPlatformOnlineHandler platformOnlineHandler)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x12A8A8C", Offset = "0x12A8A8C", VA = "0x12A8A8C")]
	public void SetUserOnlineID(string userOnlineID)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x12A839C", Offset = "0x12A839C", VA = "0x12A839C")]
	public void SetBundleCodes(int currentCode, int latestCode)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x12A99A0", Offset = "0x12A99A0", VA = "0x12A99A0")]
	public OnlineFeaturesSettings()
	{
	}
}
[Token(Token = "0x2000183")]
public class OnlineFlowEnabler : NetworkBehaviour
{
	[Token(Token = "0x2000184")]
	public enum OnlineMode
	{
		[Token(Token = "0x400085C")]
		Idle,
		[Token(Token = "0x400085D")]
		PartyMode,
		[Token(Token = "0x400085E")]
		QuickPlay
	}

	[Token(Token = "0x2000185")]
	public delegate void InitializationDelegate();

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private OnlineModeGameParameter _onlineModePlayState;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OnlineMatchFlow _onlineMatchFlow;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OnlinePartyRoomFlow _onlinePartyRoomFlow;

	[Token(Token = "0x170001A8")]
	public static OnlineFlowEnabler Instance
	{
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x12AA470", Offset = "0x12AA470", VA = "0x12AA470")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x12AA4B8", Offset = "0x12AA4B8", VA = "0x12AA4B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001A9")]
	public static bool IsInitialized
	{
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x12A9BBC", Offset = "0x12A9BBC", VA = "0x12A9BBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000F")]
	public static event InitializationDelegate OnInitialized
	{
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x12AA510", Offset = "0x12AA510", VA = "0x12AA510")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x12AA5CC", Offset = "0x12AA5CC", VA = "0x12AA5CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x12A9A38", Offset = "0x12A9A38", VA = "0x12A9A38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x12A9C48", Offset = "0x12A9C48", VA = "0x12A9C48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x12AA120", Offset = "0x12AA120", VA = "0x12AA120")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x12A9DD8", Offset = "0x12A9DD8", VA = "0x12A9DD8")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x12AA1B4", Offset = "0x12AA1B4", VA = "0x12AA1B4")]
	private void switchOnlineMode(bool enableQuickPlay)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x12AA31C", Offset = "0x12AA31C", VA = "0x12AA31C")]
	private void tryToSetPlayStateToIdle()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x12AA688", Offset = "0x12AA688", VA = "0x12AA688", Slot = "15")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x12AA790", Offset = "0x12AA790", VA = "0x12AA790")]
	public static void RunWhenInitialized(InitializationDelegate callback)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x12AA844", Offset = "0x12AA844", VA = "0x12AA844")]
	public static void UnregisterInitializationCallback(InitializationDelegate callback)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x12AA850", Offset = "0x12AA850", VA = "0x12AA850")]
	public OnlineFlowEnabler()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x12AA92C", Offset = "0x12AA92C", VA = "0x12AA92C")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000186")]
public class OnlineMatchFlow : NetworkBehaviour
{
	[Token(Token = "0x2000187")]
	private enum SearchingAnalyticsTimerState
	{
		[Token(Token = "0x400089A")]
		Idle,
		[Token(Token = "0x400089B")]
		Running,
		[Token(Token = "0x400089C")]
		Pause
	}

	[Token(Token = "0x2000188")]
	private enum SessionAnalyticsTimerState
	{
		[Token(Token = "0x400089E")]
		Idle,
		[Token(Token = "0x400089F")]
		Running,
		[Token(Token = "0x40008A0")]
		Pause
	}

	[Token(Token = "0x2000189")]
	private enum MatchAnalyticsTimerState
	{
		[Token(Token = "0x40008A2")]
		Idle,
		[Token(Token = "0x40008A3")]
		Running,
		[Token(Token = "0x40008A4")]
		Pause
	}

	[Token(Token = "0x200018A")]
	public class PlayAgainChoice : IEquatable<PlayAgainChoice>
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool PlayAgain;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint PlayerNetID;

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x12B1848", Offset = "0x12B1848", VA = "0x12B1848")]
		public PlayAgainChoice()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x12B1850", Offset = "0x12B1850", VA = "0x12B1850")]
		public PlayAgainChoice(bool playAgain)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x12AE1F4", Offset = "0x12AE1F4", VA = "0x12AE1F4")]
		public PlayAgainChoice(bool playAgain, uint playerNetID)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x12B1878", Offset = "0x12B1878", VA = "0x12B1878", Slot = "4")]
		public bool Equals(PlayAgainChoice other)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200018B")]
	public enum LeaveLobbyType
	{
		[Token(Token = "0x40008A8")]
		ConnectionLost,
		[Token(Token = "0x40008A9")]
		HostQuit,
		[Token(Token = "0x40008AA")]
		ClientQuit
	}

	[Token(Token = "0x200018C")]
	public enum MatchStopType
	{
		[Token(Token = "0x40008AC")]
		HostQuit,
		[Token(Token = "0x40008AD")]
		ClientQuit,
		[Token(Token = "0x40008AE")]
		ConnectionLost
	}

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityAction OnMatchmakingCountdownEnd;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityAction OnJoinedGame;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityAction OnLeaveGame;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityAction OnStartOnlinePlayersPresentation;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityAction OnEndOnlinePlayersPresentation;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityAction OnShowRoundNumber;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityAction OnHideRoundNumber;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityAction OnShowChallengeName;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityAction OnHideChallengeName;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityAction OnShowRecapScore;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityAction OnHideRecapScore;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityAction OnStartOnline1v1Match;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UnityAction<uint> OnWinnerKnown;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityAction OnShowPopupPlayAgain;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityAction OnMatchEnd;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityAction HostOnMatchEnd;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityAction OnPlayAgain;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityAction OnPlayAgainAnalytics;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityAction OnClientJoinedHost;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityAction<bool> OnChoosePlayAgain;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityAction<LeaveLobbyType> OnLobbyExitTypeUpdate;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private LeaveLobbyType _leaveLobbyType;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UnityAction<MatchStopType> OnMatchStop;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private MatchStopType _matchStopType;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Header("Timers")]
	[SerializeField]
	private NetworkedTimer _matchmakingCountdownTimer;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private NetworkedTimer _interMatchCountdownTimer;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private NetworkedTimer _endMatchCountdownTimer;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _searchingAnalyticsTimer;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private SearchingAnalyticsTimerState _searchingAnalyticsTimerState;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _sessionAnalyticsTimer;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private SessionAnalyticsTimerState _sessionAnalyticsTimerState;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float _matchAnalyticsTimer;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private MatchAnalyticsTimerState _matchAnalyticsTimerState;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Header("Managers")]
	[SerializeField]
	private ChallengeCanvasManager _challengeCanvasManager;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private PlayersRankingReference _playersRankingReference;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	[Space(10f)]
	private Menu_Settings _menuSettings;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private ChallengePresetsSettings _challengeOnlinePresetsSettings;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private OnlineSelectChallenge _onlineSelectChallenge;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private PlayersManager _playersManager;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GBANetworkManager _networkManager;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private CanvasFadeOut _fadeOutManager;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool _isMatchmakingCountdownEnd;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	private bool _searchingMatch;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float _timeSinceStartSearch;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SyncVar]
	private int _currentChallenge;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayer;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private readonly SyncList<PlayAgainChoice> _playAgainSyncList;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public int PlayAgainSyncListMaxLength;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[Space]
	public rcLocalizedText LocalizedPopUpPlayAgainTitle;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public rcLocalizedText LocalizedPopUpPlayAgainOkButton;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public rcLocalizedText LocalizedPopUpPlayAgainCancelButton;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[Header("Editor Debug")]
	[SerializeField]
	private bool _editorWantToPlayAgain;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int _nbRound;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public UnityAction<int> OnNbRoundUpdate;

	[Token(Token = "0x170001AA")]
	public NetworkedTimer MatchMakingCountDownTimer
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x12AAA3C", Offset = "0x12AAA3C", VA = "0x12AAA3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AB")]
	public float SearchingAnalyticsTimer
	{
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x12AAA44", Offset = "0x12AAA44", VA = "0x12AAA44")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AC")]
	public float SessionAnalyticsTimer
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x12AAA4C", Offset = "0x12AAA4C", VA = "0x12AAA4C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AD")]
	public float MatchAnalyticsTimer
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x12AAA54", Offset = "0x12AAA54", VA = "0x12AAA54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001AE")]
	public int TimeSinceStartSearchInSeconds
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x12AAA5C", Offset = "0x12AAA5C", VA = "0x12AAA5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AF")]
	public int CurrentChallenge
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x12AAA7C", Offset = "0x12AAA7C", VA = "0x12AAA7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B0")]
	public SyncList<PlayAgainChoice> PlayAgainSyncList
	{
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x12AAA84", Offset = "0x12AAA84", VA = "0x12AAA84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B1")]
	public int NbRound
	{
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x12AAA8C", Offset = "0x12AAA8C", VA = "0x12AAA8C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x12AAA94", Offset = "0x12AAA94", VA = "0x12AAA94")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B2")]
	public int Network_currentChallenge
	{
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x12AF2B0", Offset = "0x12AF2B0", VA = "0x12AF2B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x12AACBC", Offset = "0x12AACBC", VA = "0x12AACBC")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x12AAAC0", Offset = "0x12AAAC0", VA = "0x12AAAC0")]
	private void onLeaveGame(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x12AABFC", Offset = "0x12AABFC", VA = "0x12AABFC", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x12AB04C", Offset = "0x12AB04C", VA = "0x12AB04C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x12ABC48", Offset = "0x12ABC48", VA = "0x12ABC48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x12AB81C", Offset = "0x12AB81C", VA = "0x12AB81C")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x12AC0AC", Offset = "0x12AC0AC", VA = "0x12AC0AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x12AA2C0", Offset = "0x12AA2C0", VA = "0x12AA2C0")]
	public void EnableOnlineMatchFlowFeatures(bool enable)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x12AB5D8", Offset = "0x12AB5D8", VA = "0x12AB5D8")]
	private void onPlayersManagerInitialized()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x12AC124", Offset = "0x12AC124", VA = "0x12AC124")]
	private void onMenuManagerInitialized()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x12AC210", Offset = "0x12AC210", VA = "0x12AC210")]
	private void startCountdownMatchmaking(float time)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x12AC3BC", Offset = "0x12AC3BC", VA = "0x12AC3BC")]
	[ClientRpc]
	private void RpcAddSelectedChallengeToServerListWhenPlayerConnect()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x12AC290", Offset = "0x12AC290", VA = "0x12AC290")]
	[ClientRpc]
	private void RpcSetCountDownDuration(float time)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x12AC4A8", Offset = "0x12AC4A8", VA = "0x12AC4A8")]
	private void updateCountdownMatchmaking()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x12AC574", Offset = "0x12AC574", VA = "0x12AC574")]
	private void serverStartCountdown(NetworkedTimer networkedTimer, float countdownDuration)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x12AC5D4", Offset = "0x12AC5D4", VA = "0x12AC5D4")]
	public void OnEndCountdownMatchmaking()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x12ACBB8", Offset = "0x12ACBB8", VA = "0x12ACBB8")]
	public void OnEndCountdownIntermatch()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x12ACC4C", Offset = "0x12ACC4C", VA = "0x12ACC4C")]
	private void onChallengesListFull()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x12ACC84", Offset = "0x12ACC84", VA = "0x12ACC84")]
	private void onJoinedGame()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x12ACD08", Offset = "0x12ACD08", VA = "0x12ACD08")]
	[Command(requiresAuthority = false)]
	private void CmdOnJoinedGame()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x12ACDF4", Offset = "0x12ACDF4", VA = "0x12ACDF4")]
	[ClientRpc]
	private void RpcOnjoinedGame()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x12ACC5C", Offset = "0x12ACC5C", VA = "0x12ACC5C")]
	private void OnlineStartMatch()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x12ACF34", Offset = "0x12ACF34", VA = "0x12ACF34")]
	[ClientRpc]
	private void RpcStartMatch()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x12ACEE0", Offset = "0x12ACEE0", VA = "0x12ACEE0")]
	private void startMatch()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x12AD094", Offset = "0x12AD094", VA = "0x12AD094")]
	private void loadAndStartNextChallenge()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x12AAD5C", Offset = "0x12AAD5C", VA = "0x12AAD5C")]
	public void ShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x12AD224", Offset = "0x12AD224", VA = "0x12AD224")]
	[Command(requiresAuthority = false)]
	private void CmdShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x12AD350", Offset = "0x12AD350", VA = "0x12AD350")]
	[ClientRpc]
	private void RpcShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x12AC92C", Offset = "0x12AC92C", VA = "0x12AC92C")]
	private void serverCheckChallengesListCount()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x12AD47C", Offset = "0x12AD47C", VA = "0x12AD47C")]
	private bool hasPlayerSelectedChallenge(uint playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x12AD56C", Offset = "0x12AD56C", VA = "0x12AD56C")]
	[TargetRpc]
	private void TargetAddRandomChallengeToList(NetworkConnection target)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x12AD664", Offset = "0x12AD664", VA = "0x12AD664")]
	private void onChallengeEnd()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x12AD754", Offset = "0x12AD754", VA = "0x12AD754")]
	[ClientRpc]
	private void RpcNbRoundReset()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x12AD840", Offset = "0x12AD840", VA = "0x12AD840")]
	[ClientRpc]
	private void RpcInvokeOnWinnerKnown(uint param)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x12AD96C", Offset = "0x12AD96C", VA = "0x12AD96C")]
	[ClientRpc]
	private void RpcInvokeOnMatchEnd()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x12AC708", Offset = "0x12AC708", VA = "0x12AC708")]
	[ClientRpc]
	private void RpcInvokeOnMatchmakingCountdownEnd()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x12AAD98", Offset = "0x12AAD98", VA = "0x12AAD98")]
	public void ResetOnlineScores()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x12ADA58", Offset = "0x12ADA58", VA = "0x12ADA58")]
	[Server]
	private void ServerResetOnlineScores()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x12ADDA0", Offset = "0x12ADDA0", VA = "0x12ADDA0")]
	public void OnGiveUpMatchmakingAfterSeconds()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x12ADDA4", Offset = "0x12ADDA4", VA = "0x12ADDA4")]
	public void ShowPopupPlayAgain()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x12ADF18", Offset = "0x12ADF18", VA = "0x12ADF18")]
	[ContextMenu("Play Again")]
	private void editorPlayAgain()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x12ADF20", Offset = "0x12ADF20", VA = "0x12ADF20")]
	public void PlayAgain(bool wantToPlayAgain)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x12AE374", Offset = "0x12AE374", VA = "0x12AE374")]
	private void leaveMatchOnDoneFading()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x12AE324", Offset = "0x12AE324", VA = "0x12AE324")]
	public void DestroyLobbyForAllPlayers()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x12AE558", Offset = "0x12AE558", VA = "0x12AE558")]
	[Command(requiresAuthority = false)]
	private void CmdDestroyLobbyForAllPlayers(LeaveLobbyType leaveLobbyType)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x12AE658", Offset = "0x12AE658", VA = "0x12AE658")]
	[ClientRpc]
	private void RpcDestroyLobbyForAllPlayers()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x12AE744", Offset = "0x12AE744", VA = "0x12AE744")]
	private void destroyLobbyForAllPlayers()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x12AE224", Offset = "0x12AE224", VA = "0x12AE224")]
	[Command(requiresAuthority = false)]
	private void CmdPlayAgain(PlayAgainChoice playAgainChoice)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x12AE830", Offset = "0x12AE830", VA = "0x12AE830")]
	[ClientRpc]
	private void RpcPlayAgain(PlayAgainChoice playAgainChoice)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x12AE930", Offset = "0x12AE930", VA = "0x12AE930")]
	[Server]
	private void serverPlayAgain(PlayAgainChoice playAgainChoice)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x12AEC14", Offset = "0x12AEC14", VA = "0x12AEC14")]
	public void VSCustomEvent(Menu_Manager.VSManager vsManager, string eventName)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x12AEC58", Offset = "0x12AEC58", VA = "0x12AEC58")]
	[Command]
	private void CmdVSCustomEvent(Menu_Manager.VSManager vsManager, string eventName)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x12AC7F4", Offset = "0x12AC7F4", VA = "0x12AC7F4")]
	[ClientRpc]
	private void RpcVSCustomEvent(Menu_Manager.VSManager vsManager, string eventName)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x12AED90", Offset = "0x12AED90", VA = "0x12AED90")]
	private void vsCustomEvent(Menu_Manager.VSManager vsManager, string name)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x12AEB28", Offset = "0x12AEB28", VA = "0x12AEB28")]
	[ClientRpc]
	private void RpcInvokePlayAgain()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x12AEDAC", Offset = "0x12AEDAC", VA = "0x12AEDAC")]
	private void onClientDisconnectFromHost(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x12AEEE8", Offset = "0x12AEEE8", VA = "0x12AEEE8")]
	public OnlineMatchFlow()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x12AF2AC", Offset = "0x12AF2AC", VA = "0x12AF2AC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x12AF2B8", Offset = "0x12AF2B8", VA = "0x12AF2B8")]
	protected void UserCode_RpcAddSelectedChallengeToServerListWhenPlayerConnect()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x12AF2D4", Offset = "0x12AF2D4", VA = "0x12AF2D4")]
	protected static void InvokeUserCode_RpcAddSelectedChallengeToServerListWhenPlayerConnect(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x12AF3D8", Offset = "0x12AF3D8", VA = "0x12AF3D8")]
	protected void UserCode_RpcSetCountDownDuration(float time)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x12AF3F4", Offset = "0x12AF3F4", VA = "0x12AF3F4")]
	protected static void InvokeUserCode_RpcSetCountDownDuration(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x12AF538", Offset = "0x12AF538", VA = "0x12AF538")]
	protected void UserCode_CmdOnJoinedGame()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x12AF580", Offset = "0x12AF580", VA = "0x12AF580")]
	protected static void InvokeUserCode_CmdOnJoinedGame(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x12AF6B0", Offset = "0x12AF6B0", VA = "0x12AF6B0")]
	protected void UserCode_RpcOnjoinedGame()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x12AF6EC", Offset = "0x12AF6EC", VA = "0x12AF6EC")]
	protected static void InvokeUserCode_RpcOnjoinedGame(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x12AF7E8", Offset = "0x12AF7E8", VA = "0x12AF7E8")]
	protected void UserCode_RpcStartMatch()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x12AF7EC", Offset = "0x12AF7EC", VA = "0x12AF7EC")]
	protected static void InvokeUserCode_RpcStartMatch(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x12AF8E8", Offset = "0x12AF8E8", VA = "0x12AF8E8")]
	protected void UserCode_CmdShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x12AF930", Offset = "0x12AF930", VA = "0x12AF930")]
	protected static void InvokeUserCode_CmdShowCanvasOnComplete(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x12AFAA4", Offset = "0x12AFAA4", VA = "0x12AFAA4")]
	protected void UserCode_RpcShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x12AFAC4", Offset = "0x12AFAC4", VA = "0x12AFAC4")]
	protected static void InvokeUserCode_RpcShowCanvasOnComplete(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x12AFC10", Offset = "0x12AFC10", VA = "0x12AFC10")]
	protected void UserCode_TargetAddRandomChallengeToList(NetworkConnection target)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x12AFC2C", Offset = "0x12AFC2C", VA = "0x12AFC2C")]
	protected static void InvokeUserCode_TargetAddRandomChallengeToList(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x12AFD48", Offset = "0x12AFD48", VA = "0x12AFD48")]
	protected void UserCode_RpcNbRoundReset()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x12AFD74", Offset = "0x12AFD74", VA = "0x12AFD74")]
	protected static void InvokeUserCode_RpcNbRoundReset(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x12AFE9C", Offset = "0x12AFE9C", VA = "0x12AFE9C")]
	protected void UserCode_RpcInvokeOnWinnerKnown(uint param)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x12AFEB8", Offset = "0x12AFEB8", VA = "0x12AFEB8")]
	protected static void InvokeUserCode_RpcInvokeOnWinnerKnown(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x12B001C", Offset = "0x12B001C", VA = "0x12B001C")]
	protected void UserCode_RpcInvokeOnMatchEnd()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x12B0040", Offset = "0x12B0040", VA = "0x12B0040")]
	protected static void InvokeUserCode_RpcInvokeOnMatchEnd(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x12B0160", Offset = "0x12B0160", VA = "0x12B0160")]
	protected void UserCode_RpcInvokeOnMatchmakingCountdownEnd()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x12B017C", Offset = "0x12B017C", VA = "0x12B017C")]
	protected static void InvokeUserCode_RpcInvokeOnMatchmakingCountdownEnd(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x12B0294", Offset = "0x12B0294", VA = "0x12B0294")]
	protected void UserCode_CmdDestroyLobbyForAllPlayers(LeaveLobbyType leaveLobbyType)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x12B03C0", Offset = "0x12B03C0", VA = "0x12B03C0")]
	protected static void InvokeUserCode_CmdDestroyLobbyForAllPlayers(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x12B0514", Offset = "0x12B0514", VA = "0x12B0514")]
	protected void UserCode_RpcDestroyLobbyForAllPlayers()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x12B0518", Offset = "0x12B0518", VA = "0x12B0518")]
	protected static void InvokeUserCode_RpcDestroyLobbyForAllPlayers(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x12B0614", Offset = "0x12B0614", VA = "0x12B0614")]
	protected void UserCode_CmdPlayAgain(PlayAgainChoice playAgainChoice)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x12B0650", Offset = "0x12B0650", VA = "0x12B0650")]
	protected static void InvokeUserCode_CmdPlayAgain(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x12B07A4", Offset = "0x12B07A4", VA = "0x12B07A4")]
	protected void UserCode_RpcPlayAgain(PlayAgainChoice playAgainChoice)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x12B07E0", Offset = "0x12B07E0", VA = "0x12B07E0")]
	protected static void InvokeUserCode_RpcPlayAgain(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x12B0920", Offset = "0x12B0920", VA = "0x12B0920")]
	protected void UserCode_CmdVSCustomEvent(Menu_Manager.VSManager vsManager, string eventName)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x12B0974", Offset = "0x12B0974", VA = "0x12B0974")]
	protected static void InvokeUserCode_CmdVSCustomEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x12B0B00", Offset = "0x12B0B00", VA = "0x12B0B00")]
	protected void UserCode_RpcVSCustomEvent(Menu_Manager.VSManager vsManager, string eventName)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x12B0B1C", Offset = "0x12B0B1C", VA = "0x12B0B1C")]
	protected static void InvokeUserCode_RpcVSCustomEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x12B0C7C", Offset = "0x12B0C7C", VA = "0x12B0C7C")]
	protected void UserCode_RpcInvokePlayAgain()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x12B0C98", Offset = "0x12B0C98", VA = "0x12B0C98")]
	protected static void InvokeUserCode_RpcInvokePlayAgain(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x12B0DB0", Offset = "0x12B0DB0", VA = "0x12B0DB0")]
	static OnlineMatchFlow()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x12B16C0", Offset = "0x12B16C0", VA = "0x12B16C0", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x12B1784", Offset = "0x12B1784", VA = "0x12B1784", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000191")]
public class OnlinePartyRoomFlow : NetworkBehaviour
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ChallengeCanvasManager _challengeCanvasManager;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PlayersManager _playersManager;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OnlineSelectChallenge _onlineSelectChallenge;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ChallengePresetsSettings _challengeOnlinePresetsSettings;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SyncVar]
	private int _currentChallenge;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayer;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private PlayersRankingReference _playersRankingReference;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _oldPlayerCount;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int _currentPlayerCount;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private rcAudioEvent _menuMusicAudioEvent;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private rcAudioSource _menuMusicAudioSource;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private OnlineFeaturesManager _featuresManager;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private NetworkedTimer _sessionAnalyticsTimer;

	[Token(Token = "0x170001B9")]
	public int CurrentChallenge
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x12B2AD4", Offset = "0x12B2AD4", VA = "0x12B2AD4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001BA")]
	public NetworkedTimer SessionAnalyticsTimer
	{
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x12B2ADC", Offset = "0x12B2ADC", VA = "0x12B2ADC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BB")]
	public int Network_currentChallenge
	{
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x12B477C", Offset = "0x12B477C", VA = "0x12B477C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x12B3F8C", Offset = "0x12B3F8C", VA = "0x12B3F8C")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event UnityAction OnJoinedGame
	{
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x12B20EC", Offset = "0x12B20EC", VA = "0x12B20EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x12B2188", Offset = "0x12B2188", VA = "0x12B2188")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event UnityAction OnLeaveGame
	{
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x12B2224", Offset = "0x12B2224", VA = "0x12B2224")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x12B22C0", Offset = "0x12B22C0", VA = "0x12B22C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event UnityAction OnStartOnlinePlayersPresentation
	{
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x12B235C", Offset = "0x12B235C", VA = "0x12B235C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x12B23F8", Offset = "0x12B23F8", VA = "0x12B23F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event UnityAction OnEndOnlinePlayersPresentation
	{
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x12B2494", Offset = "0x12B2494", VA = "0x12B2494")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x12B2530", Offset = "0x12B2530", VA = "0x12B2530")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event UnityAction OnShowChallengeName
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x12B25CC", Offset = "0x12B25CC", VA = "0x12B25CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x12B2668", Offset = "0x12B2668", VA = "0x12B2668")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event UnityAction OnHideChallengeName
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x12B2704", Offset = "0x12B2704", VA = "0x12B2704")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x12B27A0", Offset = "0x12B27A0", VA = "0x12B27A0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event UnityAction<uint> OnWinnerKnown
	{
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x12B283C", Offset = "0x12B283C", VA = "0x12B283C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x12B28EC", Offset = "0x12B28EC", VA = "0x12B28EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event UnityAction OnMatchEnd
	{
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x12B299C", Offset = "0x12B299C", VA = "0x12B299C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x12B2A38", Offset = "0x12B2A38", VA = "0x12B2A38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x12B2AE4", Offset = "0x12B2AE4", VA = "0x12B2AE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x12B3040", Offset = "0x12B3040", VA = "0x12B3040")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x12B32B8", Offset = "0x12B32B8", VA = "0x12B32B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x12B33F4", Offset = "0x12B33F4", VA = "0x12B33F4")]
	private void FindRoomBrowser()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x12B3504", Offset = "0x12B3504", VA = "0x12B3504", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x12B2EB4", Offset = "0x12B2EB4", VA = "0x12B2EB4")]
	private void initPlayersManager()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x12B38B0", Offset = "0x12B38B0", VA = "0x12B38B0")]
	private void onMenuManagerInitialized()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x12B399C", Offset = "0x12B399C", VA = "0x12B399C")]
	[Server]
	private void onlineStartMatch()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x12B3AC4", Offset = "0x12B3AC4", VA = "0x12B3AC4")]
	[ClientRpc]
	private void RpcStartMatch()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x12B3AA4", Offset = "0x12B3AA4", VA = "0x12B3AA4")]
	private void startMatch()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x12B3C24", Offset = "0x12B3C24", VA = "0x12B3C24")]
	private void loadAndStartChallenge()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x12B3DE4", Offset = "0x12B3DE4", VA = "0x12B3DE4")]
	private void onChallengeEnd()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x12B3ED4", Offset = "0x12B3ED4", VA = "0x12B3ED4")]
	public void ClearOnlineFlow(bool clearChallengeList = true)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x12B402C", Offset = "0x12B402C", VA = "0x12B402C")]
	private void onPlayersListUpdated()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x12B40C0", Offset = "0x12B40C0", VA = "0x12B40C0")]
	private void onJoinedGame()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x12B3620", Offset = "0x12B3620", VA = "0x12B3620")]
	private void resetOnlineScores()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x12B40DC", Offset = "0x12B40DC", VA = "0x12B40DC")]
	[ClientRpc]
	private void RpcResetOnlinesScore()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x12B3DA8", Offset = "0x12B3DA8", VA = "0x12B3DA8")]
	private void showCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x12B41C8", Offset = "0x12B41C8", VA = "0x12B41C8")]
	[Command(requiresAuthority = false)]
	private void CmdShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x12B42F4", Offset = "0x12B42F4", VA = "0x12B42F4")]
	[ClientRpc]
	private void RpcShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x12B4420", Offset = "0x12B4420", VA = "0x12B4420")]
	[ClientRpc]
	private void RpcInvokeOnWinnerKnown(uint param)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x12B454C", Offset = "0x12B454C", VA = "0x12B454C")]
	[ClientRpc]
	private void RpcInvokeOnMatchEnd()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x12B4638", Offset = "0x12B4638", VA = "0x12B4638")]
	[ClientRpc]
	private void RpcVSCustomEvent(Menu_Manager.VSManager vsManager, string name)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x12B4770", Offset = "0x12B4770", VA = "0x12B4770")]
	public OnlinePartyRoomFlow()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x12B4778", Offset = "0x12B4778", VA = "0x12B4778")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x12B4784", Offset = "0x12B4784", VA = "0x12B4784")]
	protected void UserCode_RpcStartMatch()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x12B47A4", Offset = "0x12B47A4", VA = "0x12B47A4")]
	protected static void InvokeUserCode_RpcStartMatch(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x12B48B0", Offset = "0x12B48B0", VA = "0x12B48B0")]
	protected void UserCode_RpcResetOnlinesScore()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x12B48B4", Offset = "0x12B48B4", VA = "0x12B48B4")]
	protected static void InvokeUserCode_RpcResetOnlinesScore(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x12B49B0", Offset = "0x12B49B0", VA = "0x12B49B0")]
	protected void UserCode_CmdShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x12B49F8", Offset = "0x12B49F8", VA = "0x12B49F8")]
	protected static void InvokeUserCode_CmdShowCanvasOnComplete(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x12B4B6C", Offset = "0x12B4B6C", VA = "0x12B4B6C")]
	protected void UserCode_RpcShowCanvasOnComplete(bool show)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x12B4B8C", Offset = "0x12B4B8C", VA = "0x12B4B8C")]
	protected static void InvokeUserCode_RpcShowCanvasOnComplete(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x12B4CD8", Offset = "0x12B4CD8", VA = "0x12B4CD8")]
	protected void UserCode_RpcInvokeOnWinnerKnown(uint param)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x12B4CF4", Offset = "0x12B4CF4", VA = "0x12B4CF4")]
	protected static void InvokeUserCode_RpcInvokeOnWinnerKnown(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x12B4E58", Offset = "0x12B4E58", VA = "0x12B4E58")]
	protected void UserCode_RpcInvokeOnMatchEnd()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x12B4E74", Offset = "0x12B4E74", VA = "0x12B4E74")]
	protected static void InvokeUserCode_RpcInvokeOnMatchEnd(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x12B4F8C", Offset = "0x12B4F8C", VA = "0x12B4F8C")]
	protected void UserCode_RpcVSCustomEvent(Menu_Manager.VSManager vsManager, string name)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x12B4FA8", Offset = "0x12B4FA8", VA = "0x12B4FA8")]
	protected static void InvokeUserCode_RpcVSCustomEvent(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x12B5108", Offset = "0x12B5108", VA = "0x12B5108")]
	static OnlinePartyRoomFlow()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x12B54C8", Offset = "0x12B54C8", VA = "0x12B54C8", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x12B558C", Offset = "0x12B558C", VA = "0x12B558C", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000194")]
[RequireComponent(typeof(OnlinePartyRoomFlow))]
public class OnlineRoomCleaner : NetworkBehaviour
{
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayersManager _playersManager;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OnlinePartyRoomFlow _onlinePartyRoomFlow;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _cleaningProcedureEngaged;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _timeSinceLastClean;

	[Token(Token = "0x40008DD")]
	private const float _timeBetweenClean = 15f;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _timeSinceLastWaitingForPlayerConnection;

	[Token(Token = "0x40008DF")]
	private const float _timeWaitingForPlayerConnection = 15f;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x12B6C70", Offset = "0x12B6C70", VA = "0x12B6C70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x12B7274", Offset = "0x12B7274", VA = "0x12B7274")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x12B7140", Offset = "0x12B7140", VA = "0x12B7140")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x12B6F68", Offset = "0x12B6F68", VA = "0x12B6F68")]
	private void onPlayersManagerInitialized()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x12B73A8", Offset = "0x12B73A8", VA = "0x12B73A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x12B77CC", Offset = "0x12B77CC", VA = "0x12B77CC")]
	private void tellServerToRemoveSelfFromLobby(string playerOnlineID)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x12B74D4", Offset = "0x12B74D4", VA = "0x12B74D4")]
	private void checkGhostPlayers()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x12B7650", Offset = "0x12B7650", VA = "0x12B7650")]
	private void tryCleanGhostPlayers()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x12B7884", Offset = "0x12B7884", VA = "0x12B7884")]
	private List<string> getUserOnlineIDs()
	{
		return null;
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x12B7C54", Offset = "0x12B7C54", VA = "0x12B7C54")]
	private void launchCleaningProcedure()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x12B7C60", Offset = "0x12B7C60", VA = "0x12B7C60")]
	public OnlineRoomCleaner()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x12B7C68", Offset = "0x12B7C68", VA = "0x12B7C68")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000196")]
[RequireComponent(typeof(OnlinePartyRoomFlow))]
public class OnlineRoomLocker : MonoBehaviour
{
	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _roomLocked;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnlinePartyRoomFlow _onlineRoomFlow;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Menu_RoomManager _roomManager;

	[Token(Token = "0x170001C0")]
	public bool RoomLocked
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x12B7CFC", Offset = "0x12B7CFC", VA = "0x12B7CFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x12B7D04", Offset = "0x12B7D04", VA = "0x12B7D04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x12B7EB4", Offset = "0x12B7EB4", VA = "0x12B7EB4")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x12B8054", Offset = "0x12B8054", VA = "0x12B8054")]
	private void swicthMembershipLock(bool roomLocked)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x12B8104", Offset = "0x12B8104", VA = "0x12B8104")]
	private void openMembershipLock()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x12B810C", Offset = "0x12B810C", VA = "0x12B810C")]
	private void closeMembershipLock()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x12B8114", Offset = "0x12B8114", VA = "0x12B8114")]
	public OnlineRoomLocker()
	{
	}
}
[Token(Token = "0x2000197")]
public class OnlineSelectChallenge : NetworkBehaviour
{
	[Token(Token = "0x2000198")]
	public class ChallengeSelected : IEquatable<ChallengeSelected>
	{
		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ChallengeIndex;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint PlayerNetID;

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x12BA890", Offset = "0x12BA890", VA = "0x12BA890")]
		public ChallengeSelected()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x12BA898", Offset = "0x12BA898", VA = "0x12BA898")]
		public ChallengeSelected(int challengeIndex)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x12B9290", Offset = "0x12B9290", VA = "0x12B9290")]
		public ChallengeSelected(int challengeIndex, uint playerNetID)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x12BA8C0", Offset = "0x12BA8C0", VA = "0x12BA8C0", Slot = "4")]
		public bool Equals(ChallengeSelected other)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OnlineSelectChallenge Instance;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnInitialized;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<ChallengeSelected> OnChallengeAdded;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<ChallengeSelected> OnChallengeRemoved;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnChallengeListUpdated;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnChallengesListFullForServer;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action OnChallengesListFullForAllClients;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private int _quickPlayChallengesSelectedListMaxCount;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private int _partyModeChallengesSelectedListMaxCount;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly SyncList<ChallengeSelected> _challengesSelectedSyncList;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ChallengeSelected _challengeSelected;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool _isChallengeRandomSelected;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private int _indexChallengeNotRandomSelected;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ChallengePresetsSettings _challengeOnlinePresetsSettings;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private OnlineModeGameParameter _onlineMode;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int _nbClientReady;

	[Token(Token = "0x170001C1")]
	public int ChallengesSelectedListMaxCount
	{
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x12B6B8C", Offset = "0x12B6B8C", VA = "0x12B6B8C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C2")]
	public SyncList<ChallengeSelected> ChallengesSelectedSyncList
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x12B811C", Offset = "0x12B811C", VA = "0x12B811C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x12B8124", Offset = "0x12B8124", VA = "0x12B8124")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x12B8284", Offset = "0x12B8284", VA = "0x12B8284")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x12B8718", Offset = "0x12B8718", VA = "0x12B8718")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x12B8514", Offset = "0x12B8514", VA = "0x12B8514")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x12B87F4", Offset = "0x12B87F4", VA = "0x12B87F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x12B88D4", Offset = "0x12B88D4", VA = "0x12B88D4", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x12B8980", Offset = "0x12B8980", VA = "0x12B8980", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x12B8A2C", Offset = "0x12B8A2C", VA = "0x12B8A2C")]
	[ContextMenu("AddChallengeToList Debug")]
	public void AddChallengeToListDebug()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x12B8A34", Offset = "0x12B8A34", VA = "0x12B8A34")]
	public void AddChallengeToList(int index)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x12B8B04", Offset = "0x12B8B04", VA = "0x12B8B04")]
	[Command(requiresAuthority = false)]
	private void CmdAddChallengeToList(int index, uint playerNetId, bool randomAdded)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x12B8C60", Offset = "0x12B8C60", VA = "0x12B8C60")]
	public void AddRandomChallengeToList()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x12B8EAC", Offset = "0x12B8EAC", VA = "0x12B8EAC")]
	[Server]
	private void addChallengeIndexToList(ChallengeSelected challengeSelected, bool randomAdded = false)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x12B9194", Offset = "0x12B9194", VA = "0x12B9194")]
	public void RemoveChallengeFromList(int index)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x12B92BC", Offset = "0x12B92BC", VA = "0x12B92BC")]
	[Command(requiresAuthority = false)]
	private void CmdRemoveChallengeFromList(ChallengeSelected challengeToRemove)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x12B93BC", Offset = "0x12B93BC", VA = "0x12B93BC")]
	[ClientRpc]
	private void RpcRemoveChallengeFromList(ChallengeSelected challengeToRemove)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x12B94BC", Offset = "0x12B94BC", VA = "0x12B94BC")]
	[Server]
	private void tryRemoveChallengeFromList(ChallengeSelected challengeToRemove)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x12B90BC", Offset = "0x12B90BC", VA = "0x12B90BC")]
	private bool playerHasAlreadySelectedChallenge(ChallengeSelected challengeSelected, out int challengeIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x12B9668", Offset = "0x12B9668", VA = "0x12B9668")]
	public void AddSelectedChallengeToServerListWhenPlayerConnect()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x12B6BF8", Offset = "0x12B6BF8", VA = "0x12B6BF8")]
	[ContextMenu("Clear challenge list")]
	public void ClearChallengeList()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x12B969C", Offset = "0x12B969C", VA = "0x12B969C")]
	[Command(requiresAuthority = false)]
	private void CmdClearChallengeList()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x12B9788", Offset = "0x12B9788", VA = "0x12B9788")]
	[ClientRpc]
	private void RpcClearChallengeList()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x12B9874", Offset = "0x12B9874", VA = "0x12B9874")]
	private void clearChallengeList()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x12B98F0", Offset = "0x12B98F0", VA = "0x12B98F0")]
	private IMatchmaker getMatchmaker()
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x12B99A8", Offset = "0x12B99A8", VA = "0x12B99A8")]
	private void OnChallengeSelectedListUpdated(SyncList<ChallengeSelected>.Operation op, int index, ChallengeSelected oldItem, ChallengeSelected newItem)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x12B9A3C", Offset = "0x12B9A3C", VA = "0x12B9A3C")]
	[Command(requiresAuthority = false)]
	private void tellServerChallengeListIsFull()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x12B8468", Offset = "0x12B8468", VA = "0x12B8468")]
	private void initOnlinePresetsSettings()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x12B9B28", Offset = "0x12B9B28", VA = "0x12B9B28")]
	public OnlineSelectChallenge()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x12B9BD8", Offset = "0x12B9BD8", VA = "0x12B9BD8")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x12B9BDC", Offset = "0x12B9BDC", VA = "0x12B9BDC")]
	protected void UserCode_CmdAddChallengeToList(int index, uint playerNetId, bool randomAdded)
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x12B9C64", Offset = "0x12B9C64", VA = "0x12B9C64")]
	protected static void InvokeUserCode_CmdAddChallengeToList(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x12B9E00", Offset = "0x12B9E00", VA = "0x12B9E00")]
	protected void UserCode_CmdRemoveChallengeFromList(ChallengeSelected challengeToRemove)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x12B9E3C", Offset = "0x12B9E3C", VA = "0x12B9E3C")]
	protected static void InvokeUserCode_CmdRemoveChallengeFromList(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x12B9F90", Offset = "0x12B9F90", VA = "0x12B9F90")]
	protected void UserCode_RpcRemoveChallengeFromList(ChallengeSelected challengeToRemove)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x12B9FCC", Offset = "0x12B9FCC", VA = "0x12B9FCC")]
	protected static void InvokeUserCode_RpcRemoveChallengeFromList(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x12BA10C", Offset = "0x12BA10C", VA = "0x12BA10C")]
	protected void UserCode_CmdClearChallengeList()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x12BA134", Offset = "0x12BA134", VA = "0x12BA134")]
	protected static void InvokeUserCode_CmdClearChallengeList(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x12BA264", Offset = "0x12BA264", VA = "0x12BA264")]
	protected void UserCode_RpcClearChallengeList()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x12BA268", Offset = "0x12BA268", VA = "0x12BA268")]
	protected static void InvokeUserCode_RpcClearChallengeList(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x12BA364", Offset = "0x12BA364", VA = "0x12BA364")]
	protected void UserCode_tellServerChallengeListIsFull()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x12BA404", Offset = "0x12BA404", VA = "0x12BA404")]
	protected static void InvokeUserCode_tellServerChallengeListIsFull(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x12BA534", Offset = "0x12BA534", VA = "0x12BA534")]
	static OnlineSelectChallenge()
	{
	}
}
[Token(Token = "0x2000199")]
public class OnlineSetupSlots : MonoBehaviour
{
	[Token(Token = "0x200019A")]
	[CompilerGenerated]
	private sealed class <teleportCameraToPose>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnlineSetupSlots <>4__this;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 worldPosition;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion worldRotation;

		[Token(Token = "0x170001C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x12BB024", Offset = "0x12BB024", VA = "0x12BB024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x12BB06C", Offset = "0x12BB06C", VA = "0x12BB06C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x12BAE20", Offset = "0x12BAE20", VA = "0x12BAE20")]
		[DebuggerHidden]
		public <teleportCameraToPose>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x12BAE64", Offset = "0x12BAE64", VA = "0x12BAE64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x12BAE68", Offset = "0x12BAE68", VA = "0x12BAE68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x12BB02C", Offset = "0x12BB02C", VA = "0x12BB02C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Range(0f, 10f)]
	private float _slotRankStepOffset;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 10f)]
	[SerializeField]
	private float _fadeOutSpeed;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	[SerializeField]
	private float _teleportdelay;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraTeleportManager _teleportManager;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlayersManager _playersManager;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcBoolGameParameter _isInChallengeMode;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayer;

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x12BA8F0", Offset = "0x12BA8F0", VA = "0x12BA8F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x12BAA14", Offset = "0x12BAA14", VA = "0x12BAA14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x12BAB38", Offset = "0x12BAB38", VA = "0x12BAB38")]
	private void targetTeleportPlayerOnSlot()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x12BAD60", Offset = "0x12BAD60", VA = "0x12BAD60")]
	[IteratorStateMachine(typeof(<teleportCameraToPose>d__10))]
	private IEnumerator teleportCameraToPose(Vector3 worldPosition, Quaternion worldRotation)
	{
		return null;
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x12BACCC", Offset = "0x12BACCC", VA = "0x12BACCC")]
	private Vector3 getNewPosition(int playerNumber)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x12BAE48", Offset = "0x12BAE48", VA = "0x12BAE48")]
	public OnlineSetupSlots()
	{
	}
}
[Token(Token = "0x200019B")]
public class BotOnlineManager : PlatformOnlineManager
{
	[Token(Token = "0x170001C5")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x12BB074", Offset = "0x12BB074", VA = "0x12BB074", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x12BB0F0", Offset = "0x12BB0F0", VA = "0x12BB0F0")]
	public BotOnlineManager()
	{
	}
}
[Token(Token = "0x200019C")]
public class EditorOnlineManager : PlatformOnlineManager
{
	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x170001C6")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x12BB100", Offset = "0x12BB100", VA = "0x12BB100", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x12BB108", Offset = "0x12BB108", VA = "0x12BB108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x12BB298", Offset = "0x12BB298", VA = "0x12BB298")]
	public EditorOnlineManager()
	{
	}
}
[Token(Token = "0x200019D")]
public interface IPlatformOnlineHandler
{
	[Token(Token = "0x170001C7")]
	string UserFolderPath
	{
		[Token(Token = "0x6000B73")]
		get;
	}

	[Token(Token = "0x170001C8")]
	IMatchmaker Matchmaker
	{
		[Token(Token = "0x6000B74")]
		get;
	}

	[Token(Token = "0x170001C9")]
	IRoomBrowser RoomBrowser
	{
		[Token(Token = "0x6000B75")]
		get;
	}
}
[Token(Token = "0x200019E")]
public class NoloOnlineManager : PlatformOnlineManager
{
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x170001CA")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x12BB2A0", Offset = "0x12BB2A0", VA = "0x12BB2A0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CB")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x12BB328", Offset = "0x12BB328", VA = "0x12BB328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x12BB3C4", Offset = "0x12BB3C4", VA = "0x12BB3C4")]
	private void waitForInternetCheck(bool checkOk)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x12BB3C8", Offset = "0x12BB3C8", VA = "0x12BB3C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x12BB92C", Offset = "0x12BB92C", VA = "0x12BB92C")]
	private void handleEntitlementCheckResult(bool result)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x12BB9F8", Offset = "0x12BB9F8", VA = "0x12BB9F8")]
	private void onAuthenticationSuccess(string playerId, string displayName)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x12BBA14", Offset = "0x12BBA14", VA = "0x12BBA14")]
	public NoloOnlineManager()
	{
	}
}
[Token(Token = "0x200019F")]
public class OculusOnlineManager : PlatformOnlineManager
{
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong _id;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x170001CC")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x12BBA1C", Offset = "0x12BBA1C", VA = "0x12BBA1C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CD")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x12BBAA4", Offset = "0x12BBAA4", VA = "0x12BBAA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x12BBB40", Offset = "0x12BBB40", VA = "0x12BBB40")]
	private void legit(ulong id)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x12BBB50", Offset = "0x12BBB50", VA = "0x12BBB50")]
	private void waitForInternetCheck(bool checkOk)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x12BBB98", Offset = "0x12BBB98", VA = "0x12BBB98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x12BC11C", Offset = "0x12BC11C", VA = "0x12BC11C")]
	public OculusOnlineManager()
	{
	}
}
[Token(Token = "0x20001A0")]
public class PicoOnlineManager : PlatformOnlineManager
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x170001CE")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x12BC12C", Offset = "0x12BC12C", VA = "0x12BC12C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CF")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x12BC1B4", Offset = "0x12BC1B4", VA = "0x12BC1B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x12BC250", Offset = "0x12BC250", VA = "0x12BC250")]
	private void waitForInternetCheck(bool checkOk)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x12BC47C", Offset = "0x12BC47C", VA = "0x12BC47C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x12BC9F4", Offset = "0x12BC9F4", VA = "0x12BC9F4")]
	private void applicationVersionCallback(Message<Pico.Platform.Models.ApplicationVersion> msg)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x12BCA7C", Offset = "0x12BCA7C", VA = "0x12BCA7C", Slot = "7")]
	public override void UpdateVersionOnStore()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x12BC284", Offset = "0x12BC284", VA = "0x12BC284")]
	private void handleEntitlementCheckResult(bool result)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x12BCB90", Offset = "0x12BCB90", VA = "0x12BCB90")]
	private void onAuthenticationSuccess(LoginResult loginResult, string displayName)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x12BCDA4", Offset = "0x12BCDA4", VA = "0x12BCDA4")]
	public PicoOnlineManager()
	{
	}
}
[Token(Token = "0x20001A2")]
public abstract class PlatformOnlineManager : MonoBehaviour, IPlatformOnlineHandler
{
	[Token(Token = "0x20001A3")]
	[CompilerGenerated]
	private sealed class <jtekiff>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x12BD490", Offset = "0x12BD490", VA = "0x12BD490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x12BD4D8", Offset = "0x12BD4D8", VA = "0x12BD4D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x12BD3B8", Offset = "0x12BD3B8", VA = "0x12BD3B8")]
		[DebuggerHidden]
		public <jtekiff>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x12BD3E0", Offset = "0x12BD3E0", VA = "0x12BD3E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x12BD3E4", Offset = "0x12BD3E4", VA = "0x12BD3E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x12BD498", Offset = "0x12BD498", VA = "0x12BD498", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x170001D0")]
	public abstract string UserFolderPath
	{
		[Token(Token = "0x6000B93")]
		get;
	}

	[Token(Token = "0x170001D1")]
	public IMatchmaker Matchmaker
	{
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x12BCD24", Offset = "0x12BCD24", VA = "0x12BCD24", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D2")]
	public IRoomBrowser RoomBrowser
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x12BCD64", Offset = "0x12BCD64", VA = "0x12BCD64", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x12BD1B8", Offset = "0x12BD1B8", VA = "0x12BD1B8", Slot = "7")]
	public virtual void UpdateVersionOnStore()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x12BD1BC", Offset = "0x12BD1BC", VA = "0x12BD1BC")]
	private IMatchmaker instantiateMatchmaker()
	{
		return null;
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x12BD300", Offset = "0x12BD300", VA = "0x12BD300")]
	private IRoomBrowser instantiateRoomBrowser()
	{
		return null;
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x12BD358", Offset = "0x12BD358", VA = "0x12BD358")]
	[IteratorStateMachine(typeof(<jtekiff>d__11))]
	private IEnumerator jtekiff()
	{
		return null;
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x12BBB78", Offset = "0x12BBB78", VA = "0x12BBB78")]
	public void StartKiff()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x12BB0F8", Offset = "0x12BB0F8", VA = "0x12BB0F8")]
	protected PlatformOnlineManager()
	{
	}
}
[Token(Token = "0x20001A4")]
public class PlayFabAuthentication
{
	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x12BD04C", Offset = "0x12BD04C", VA = "0x12BD04C")]
	public static void Authenticate(string id, string username, UnityAction<LoginResult, string> success, UnityAction error)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x12BD4E0", Offset = "0x12BD4E0", VA = "0x12BD4E0")]
	private static void SendLoginRequest(string playerId, string displayName, UnityAction<LoginResult, string> successCallback, UnityAction errorCallback)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x12BD710", Offset = "0x12BD710", VA = "0x12BD710")]
	private static void OnLoginSuccess(LoginResult result, string displayName, UnityAction<LoginResult, string> successCallback)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x12BD968", Offset = "0x12BD968", VA = "0x12BD968")]
	private static void OnLoginFailure(PlayFabError error, UnityAction errorCallback)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x12BD980", Offset = "0x12BD980", VA = "0x12BD980")]
	public PlayFabAuthentication()
	{
	}
}
[Token(Token = "0x20001A8")]
public class PSNOnlineManager : PlatformOnlineManager
{
	[Token(Token = "0x20001A9")]
	private class PSNUser
	{
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x12BE060", Offset = "0x12BE060", VA = "0x12BE060")]
		public PSNUser()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	public class GamePad : MonoBehaviour
	{
		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GamePad activeGamePad;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerId;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool enableInput;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float timeout;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int stickID;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasSetupGamepad;

		[Token(Token = "0x170001D7")]
		public static bool IsInputEnabled
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0x12BE10C", Offset = "0x12BE10C", VA = "0x12BE10C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public bool IsConnected
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0x12BE164", Offset = "0x12BE164", VA = "0x12BE164")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x12BE068", Offset = "0x12BE068", VA = "0x12BE068")]
		public static void EnableInput(bool enable)
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x12BE16C", Offset = "0x12BE16C", VA = "0x12BE16C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x12BE18C", Offset = "0x12BE18C", VA = "0x12BE18C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x12BE180", Offset = "0x12BE180", VA = "0x12BE180")]
		private void ToggleGamePad(bool active)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x12BE258", Offset = "0x12BE258", VA = "0x12BE258")]
		public GamePad()
		{
		}
	}

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x170001D5")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x12BDCE4", Offset = "0x12BDCE4", VA = "0x12BDCE4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D6")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x12BDD00", Offset = "0x12BDD00", VA = "0x12BDD00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x12BDD9C", Offset = "0x12BDD9C", VA = "0x12BDD9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x12BDDF4", Offset = "0x12BDDF4", VA = "0x12BDDF4")]
	private void handleEntitlementCheckResult(bool result)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x12BDEB4", Offset = "0x12BDEB4", VA = "0x12BDEB4")]
	private void onAuthenticationSuccess(LoginResult loginResult, string displayName)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x12BE054", Offset = "0x12BE054", VA = "0x12BE054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x12BE058", Offset = "0x12BE058", VA = "0x12BE058")]
	public PSNOnlineManager()
	{
	}
}
[Token(Token = "0x20001AB")]
public class QiyuOnlineManager : PlatformOnlineManager
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x170001D9")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x12BE2D4", Offset = "0x12BE2D4", VA = "0x12BE2D4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DA")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x12BE2F0", Offset = "0x12BE2F0", VA = "0x12BE2F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x12BE38C", Offset = "0x12BE38C", VA = "0x12BE38C")]
	private void waitForInternetCheck(bool checkOk)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x12BE390", Offset = "0x12BE390", VA = "0x12BE390")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x12BE8F4", Offset = "0x12BE8F4", VA = "0x12BE8F4")]
	private void handleEntitlementCheckResult(bool result, bool internetOk = false)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x12BE9C0", Offset = "0x12BE9C0", VA = "0x12BE9C0")]
	private void onAuthenticationSuccess(LoginResult loginResult, string displayName)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x12BEB54", Offset = "0x12BEB54", VA = "0x12BEB54")]
	public QiyuOnlineManager()
	{
	}
}
[Token(Token = "0x20001AC")]
public class rcFFRManager : MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _levelMultiplier;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _dynamicFFR;

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x12BEB5C", Offset = "0x12BEB5C", VA = "0x12BEB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x12BEC00", Offset = "0x12BEC00", VA = "0x12BEC00")]
	public void SetFFRLevel(int level)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x12BEC2C", Offset = "0x12BEC2C", VA = "0x12BEC2C")]
	public rcFFRManager()
	{
	}
}
[Token(Token = "0x20001AD")]
public class SteamworksOnlineManager : PlatformOnlineManager
{
	[Serializable]
	[Token(Token = "0x20001AE")]
	public struct SteamLanguageMapping
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public rcLanguage RcLanguage;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string SteamLanguage;
	}

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SteamLanguageMapping[] _steamLanguageMapping;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcLanguageGameParameter _currentLanguageParameter;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _userFolderPath;

	[Token(Token = "0x400092B")]
	private const int DEFAULT_PATH_LENGTH_MAX = 260;

	[Token(Token = "0x170001DB")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x12BEC34", Offset = "0x12BEC34", VA = "0x12BEC34", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x12BED3C", Offset = "0x12BED3C", VA = "0x12BED3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x12BEE04", Offset = "0x12BEE04", VA = "0x12BEE04")]
	private void onAuthenticationSuccess(LoginResult loginResult, string displayName)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x12BEFA4", Offset = "0x12BEFA4", VA = "0x12BEFA4")]
	public SteamworksOnlineManager()
	{
	}
}
[Token(Token = "0x20001AF")]
public class YVROnlineManager : PlatformOnlineManager
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x170001DC")]
	public override string UserFolderPath
	{
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x12BF004", Offset = "0x12BF004", VA = "0x12BF004", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DD")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x12BF08C", Offset = "0x12BF08C", VA = "0x12BF08C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x12BF128", Offset = "0x12BF128", VA = "0x12BF128")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x12BF68C", Offset = "0x12BF68C", VA = "0x12BF68C")]
	private void waitForInternetCheck(bool checkOk)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x12BF690", Offset = "0x12BF690", VA = "0x12BF690")]
	private void handleEntitlementCheckResult(bool result, bool internetOk = false)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x12BF75C", Offset = "0x12BF75C", VA = "0x12BF75C")]
	private void onAuthenticationSuccess(LoginResult loginResult, string displayName)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x12BF8F0", Offset = "0x12BF8F0", VA = "0x12BF8F0")]
	public YVROnlineManager()
	{
	}
}
[Token(Token = "0x20001B0")]
[CreateAssetMenu(menuName = "GBA/Audio/Audio Mix Settings", fileName = "AMS_AudioMixSettings")]
public class AudioMixSettings : ScriptableObject
{
	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _ambianceVolume;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _jingleVolume;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _musicVolume;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _sfxVolume;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _specialJingleVolume;

	[Token(Token = "0x170001DE")]
	public float AmbianceVolume
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x12BF8F8", Offset = "0x12BF8F8", VA = "0x12BF8F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001DF")]
	public float JingleVolume
	{
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x12BF900", Offset = "0x12BF900", VA = "0x12BF900")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001E0")]
	public float MusicVolume
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x12BF908", Offset = "0x12BF908", VA = "0x12BF908")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001E1")]
	public float SFXVolume
	{
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x12BF910", Offset = "0x12BF910", VA = "0x12BF910")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001E2")]
	public float SpecialJingleVolume
	{
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x12BF918", Offset = "0x12BF918", VA = "0x12BF918")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x12BF920", Offset = "0x12BF920", VA = "0x12BF920")]
	public void ApplyMixSettings(AudioMixerController mixController)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x12BF9F4", Offset = "0x12BF9F4", VA = "0x12BF9F4")]
	public AudioMixSettings()
	{
	}
}
[Token(Token = "0x20001B1")]
public class MicrophonesManager : MonoBehaviour
{
	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DissonanceComms _dissonanceComms;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _onOthersMuted;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _onOthersUnmuted;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent _onSelfMuted;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent _onSelfUnmuted;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityAction<MonoBehaviour> OnIsMutedChanged;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityAction<MonoBehaviour> OnAreOthersMutedChanged;

	[Token(Token = "0x170001E3")]
	public bool IsMuted
	{
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x12BF9FC", Offset = "0x12BF9FC", VA = "0x12BF9FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E4")]
	public bool AreOthersMuted
	{
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x12BFA18", Offset = "0x12BFA18", VA = "0x12BFA18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x12BFA34", Offset = "0x12BFA34", VA = "0x12BFA34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x12BFA94", Offset = "0x12BFA94", VA = "0x12BFA94")]
	public void ToggleMuteSelf(MonoBehaviour eventAuthor)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x12BFB1C", Offset = "0x12BFB1C", VA = "0x12BFB1C")]
	public void ToggleMuteOthers(MonoBehaviour eventAuthor)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x12BFBA4", Offset = "0x12BFBA4", VA = "0x12BFBA4")]
	public MicrophonesManager()
	{
	}
}
[Token(Token = "0x20001B2")]
public class VoicesManager : MonoBehaviour
{
	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DissonanceComms _dissonanceComms;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MicrophonesManager _microphonesManager;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _onPlayersStartedSpeaking;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent _onPlayersStoppedSpeaking;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityAction OnPlayersStartedSpeaking;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityAction OnPlayersStoppedSpeaking;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<VoicePlayerState> _speakingPlayers;

	[Token(Token = "0x170001E5")]
	private bool listenToSpeechEvents
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x12BFBAC", Offset = "0x12BFBAC", VA = "0x12BFBAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x12BFC3C", Offset = "0x12BFC3C", VA = "0x12BFC3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x12C01DC", Offset = "0x12C01DC", VA = "0x12C01DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x12C03E0", Offset = "0x12C03E0", VA = "0x12C03E0")]
	private void onOthersMutedChanged(MonoBehaviour eventAuthor)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x12C04E0", Offset = "0x12C04E0", VA = "0x12C04E0")]
	private void onPlayerStartedSpeaking(VoicePlayerState playerVoice)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x12C05F8", Offset = "0x12C05F8", VA = "0x12C05F8")]
	private void onPlayerStoppedSpeaking(VoicePlayerState playerVoice)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x12BFE48", Offset = "0x12BFE48", VA = "0x12BFE48")]
	private void refreshCurrentlySpeakingPlayers()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x12C04A4", Offset = "0x12C04A4", VA = "0x12C04A4")]
	[ContextMenu("Simulate Started Speaking")]
	private void raiseStartedSpeakingEvents()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x12C0468", Offset = "0x12C0468", VA = "0x12C0468")]
	[ContextMenu("Simulate Stopped Speaking")]
	private void raiseStoppedSpeakingEvents()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x12C06B8", Offset = "0x12C06B8", VA = "0x12C06B8")]
	public VoicesManager()
	{
	}
}
[Token(Token = "0x20001B3")]
public class OnlineMenuButtonEnabler : MonoBehaviour
{
	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcIntGameParameter _isLatestGameVersionParameter;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject OnlineButton;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject OnlineButtonText;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject OnlineButtonLock;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject OnlineButtonLockText;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject OnlineButtonLockUpdate;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject OnlineButtonLockUpdateText;

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x12C0744", Offset = "0x12C0744", VA = "0x12C0744")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x12C0868", Offset = "0x12C0868", VA = "0x12C0868")]
	private void latestGameVersion(int toValue, int fromValue, object changedBy)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x12C0960", Offset = "0x12C0960", VA = "0x12C0960")]
	private void BlockButtonPlateformRelated()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x12C0878", Offset = "0x12C0878", VA = "0x12C0878")]
	private void BlockButtonUpdate()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x12C08D8", Offset = "0x12C08D8", VA = "0x12C08D8")]
	private void UnBlockButton()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x12C09C0", Offset = "0x12C09C0", VA = "0x12C09C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x12C0A60", Offset = "0x12C0A60", VA = "0x12C0A60")]
	public OnlineMenuButtonEnabler()
	{
	}
}
[Token(Token = "0x20001B4")]
public class ParticleOptimizer : MonoBehaviour
{
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VisualEffect visualEffect;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x12C0A68", Offset = "0x12C0A68", VA = "0x12C0A68")]
	public void CheckEffectLife()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x12C0AB4", Offset = "0x12C0AB4", VA = "0x12C0AB4")]
	public ParticleOptimizer()
	{
	}
}
[Token(Token = "0x20001B5")]
public class ParticleSystemPlayer : MonoBehaviour
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Particles;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x12C0ABC", Offset = "0x12C0ABC", VA = "0x12C0ABC")]
	public void PlayParticleSystem()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x12C0B7C", Offset = "0x12C0B7C", VA = "0x12C0B7C")]
	public ParticleSystemPlayer()
	{
	}
}
[Token(Token = "0x20001B6")]
public class PassthroughMenuButtonEnabler : MonoBehaviour
{
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PassthroughConfigManager _passthroughConfigManager;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ArcadeSelectable _passthroughSelectable;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> ObjectToDisableOnWrongPlateform;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> ObjectToEnableOnWrongPlateform;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> ObjectToDisableOnRightPlateform;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> ObjectToEnableOnRightPlateform;

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x12C0B84", Offset = "0x12C0B84", VA = "0x12C0B84")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x12C0D1C", Offset = "0x12C0D1C", VA = "0x12C0D1C")]
	public PassthroughMenuButtonEnabler()
	{
	}
}
[Token(Token = "0x20001B7")]
public class PasstroughObjectEnabler : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private rcPlatformManager _plateformManager;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> ObjectsToEnableOnPasstrhough;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> ObjectsToHideOnPassthrough;

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x12C0D24", Offset = "0x12C0D24", VA = "0x12C0D24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x12C0F3C", Offset = "0x12C0F3C", VA = "0x12C0F3C")]
	public void ChangeObjectState(bool passthrough)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x12C1024", Offset = "0x12C1024", VA = "0x12C1024")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x12C1160", Offset = "0x12C1160", VA = "0x12C1160")]
	public PasstroughObjectEnabler()
	{
	}
}
[Token(Token = "0x20001B8")]
public static class Persistence
{
	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x12C1168", Offset = "0x12C1168", VA = "0x12C1168")]
	public static void ForceSave()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x12C1170", Offset = "0x12C1170", VA = "0x12C1170")]
	public static void CreateDirectory(string path)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x12C1178", Offset = "0x12C1178", VA = "0x12C1178")]
	public static bool Exists(string keyOrPath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x12C1180", Offset = "0x12C1180", VA = "0x12C1180")]
	public static void Delete(string keyOrPath)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x12C1188", Offset = "0x12C1188", VA = "0x12C1188")]
	public static void DeletePrefsKey(string key)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x12C1190", Offset = "0x12C1190", VA = "0x12C1190")]
	public static void SaveString(string keyOrPath, string content)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x12C1198", Offset = "0x12C1198", VA = "0x12C1198")]
	public static void SaveByteArray(string keyOrPath, byte[] content)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x12C11A0", Offset = "0x12C11A0", VA = "0x12C11A0")]
	public static string GetString(string keyOrPath)
	{
		return null;
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x12C11A8", Offset = "0x12C11A8", VA = "0x12C11A8")]
	public static byte[] GetByteArray(string keyOrPath)
	{
		return null;
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x12C11B0", Offset = "0x12C11B0", VA = "0x12C11B0")]
	public static bool PrefsHasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x12C11B8", Offset = "0x12C11B8", VA = "0x12C11B8")]
	public static string PrefsGetString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x12C11C0", Offset = "0x12C11C0", VA = "0x12C11C0")]
	public static void PrefsSetString(string key, string value)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x12C11C8", Offset = "0x12C11C8", VA = "0x12C11C8")]
	public static int PrefsGetInt(string key, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x12C11D0", Offset = "0x12C11D0", VA = "0x12C11D0")]
	public static void PrefsSetInt(string key, int value)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x12C11D8", Offset = "0x12C11D8", VA = "0x12C11D8")]
	public static void Write(this MemoryStream stream, byte[] bytes)
	{
	}
}
[Token(Token = "0x20001B9")]
public class PhysicsHoopManager : MonoBehaviour
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Cloth> Cloths;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Dispenser> _dispensers;

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x12C1204", Offset = "0x12C1204", VA = "0x12C1204")]
	public void SetDispenser(Dispenser dispenser)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x12C1300", Offset = "0x12C1300", VA = "0x12C1300")]
	public void SetDispensers(IList<Dispenser> dispensers)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x12C138C", Offset = "0x12C138C", VA = "0x12C138C")]
	public void UpdateClothsCollider()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x12C1780", Offset = "0x12C1780", VA = "0x12C1780")]
	public PhysicsHoopManager()
	{
	}
}
[Token(Token = "0x20001BA")]
public class PhysicSummerPropsReset : MonoBehaviour
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 StartingPos;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 StartingRot;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject PhysicsObjectToReset;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _physicsObjectToResetRigidBody;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x12C1808", Offset = "0x12C1808", VA = "0x12C1808")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x12C18D0", Offset = "0x12C18D0", VA = "0x12C18D0")]
	[ContextMenu("Reset Physic Object")]
	public void ResetPhysicObject()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x12C1A0C", Offset = "0x12C1A0C", VA = "0x12C1A0C")]
	public PhysicSummerPropsReset()
	{
	}
}
[Token(Token = "0x20001BB")]
public class PinballBallPoint : MonoBehaviour
{
	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcProxyBehaviour ArceauProxy;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OneHitTrigger OneHit;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator OnePointOutlineAnimator;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator OnePointAnimator;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	public bool UsePinballDetectionZone;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	public rcIntGameParameter ScoreParameter;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int BonusScoreWhenHoopHit;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI TextBonusScoreWhenHoopHit;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool AutomaticlyFlyUp;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Audio")]
	public rcAudioSource PinballAudioSource;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcAudioEvent SFXPinballHit;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject _child;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _pinballLayerIndex;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _detectionEnable;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly int HIT_TRIGGER_HASH;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private readonly int FLY_BOOL_HASH;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GBAPlayerSystem _owningPlayer;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GBAPlayerSystem _localPlayerSystem;

	[Token(Token = "0x170001E6")]
	public bool IsLocallyOwned
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x12C1A14", Offset = "0x12C1A14", VA = "0x12C1A14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E7")]
	private GBAPlayerSystem _cacheLocalPlayerSystem
	{
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x12C1A9C", Offset = "0x12C1A9C", VA = "0x12C1A9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x12C1C2C", Offset = "0x12C1C2C", VA = "0x12C1C2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x12C1D28", Offset = "0x12C1D28", VA = "0x12C1D28")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x12C1D74", Offset = "0x12C1D74", VA = "0x12C1D74")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x12C1DC0", Offset = "0x12C1DC0", VA = "0x12C1DC0")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x12C1CF0", Offset = "0x12C1CF0", VA = "0x12C1CF0")]
	public void DetectionState(bool state)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x12C1E20", Offset = "0x12C1E20", VA = "0x12C1E20")]
	[ContextMenu("Simulate Hit")]
	public void OnHoopCollision()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x12C1E30", Offset = "0x12C1E30", VA = "0x12C1E30")]
	[ContextMenu("GetPinballPoint")]
	public void GetPinballPoint()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x12C20D8", Offset = "0x12C20D8", VA = "0x12C20D8")]
	public void GetPinballPointRemote(bool localScore)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x12C210C", Offset = "0x12C210C", VA = "0x12C210C")]
	[ContextMenu("PinballPointFlyUp")]
	public void PinballPointFlyUp()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x12C1F58", Offset = "0x12C1F58", VA = "0x12C1F58")]
	private void increaseScoreByBonusScoreWhenHoopHit()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x12C1F7C", Offset = "0x12C1F7C", VA = "0x12C1F7C")]
	private void feedBacks()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x12C2194", Offset = "0x12C2194", VA = "0x12C2194")]
	public void SetOwningPlayer(GBAPlayerSystem owner)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x12C2298", Offset = "0x12C2298", VA = "0x12C2298")]
	public PinballBallPoint()
	{
	}
}
[Token(Token = "0x20001BC")]
public class PinballPointFlyUp : MonoBehaviour
{
	[Token(Token = "0x20001BD")]
	[CompilerGenerated]
	private sealed class <GetAllPinballPointFlyUpEnum>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PinballPointFlyUp <>4__this;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x12C2508", Offset = "0x12C2508", VA = "0x12C2508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x12C2550", Offset = "0x12C2550", VA = "0x12C2550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x12C23C8", Offset = "0x12C23C8", VA = "0x12C23C8")]
		[DebuggerHidden]
		public <GetAllPinballPointFlyUpEnum>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x12C23F8", Offset = "0x12C23F8", VA = "0x12C23F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x12C23FC", Offset = "0x12C23FC", VA = "0x12C23FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x12C2510", Offset = "0x12C2510", VA = "0x12C2510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PinballBallPoint> PinballPoints;

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x12C2334", Offset = "0x12C2334", VA = "0x12C2334")]
	[ContextMenu("GetAllPinballPointFlyUp")]
	public void GetAllPinballPointFlyUp()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x12C2354", Offset = "0x12C2354", VA = "0x12C2354")]
	[IteratorStateMachine(typeof(<GetAllPinballPointFlyUpEnum>d__2))]
	private IEnumerator GetAllPinballPointFlyUpEnum()
	{
		return null;
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x12C23F0", Offset = "0x12C23F0", VA = "0x12C23F0")]
	public PinballPointFlyUp()
	{
	}
}
[Token(Token = "0x20001BE")]
public class PlayerNameDisplay : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _textMesh;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcStringGameParameter _userIdParameter;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcLocalizedText _localizedPlaceholderDisplay;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcLocalizedText _localizedCustomDisplay;

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x12C2558", Offset = "0x12C2558", VA = "0x12C2558")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x12C28EC", Offset = "0x12C28EC", VA = "0x12C28EC")]
	private void userIdUpdated(string toValue, string fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x12C2858", Offset = "0x12C2858", VA = "0x12C2858")]
	private void onLocalizedPlaceholderUpdated()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x12C2B78", Offset = "0x12C2B78", VA = "0x12C2B78")]
	private void onLocalizedCustomDisplayUpdated()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x12C2C34", Offset = "0x12C2C34", VA = "0x12C2C34")]
	public PlayerNameDisplay()
	{
	}
}
[Token(Token = "0x20001BF")]
public class PlayerStatEnabler : MonoBehaviour
{
	[Token(Token = "0x20001C0")]
	private class PlayerStatFTEStartEventListener : rcIGameEventListener
	{
		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PlayerStatEnabler _eventsListener;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x12C3004", Offset = "0x12C3004", VA = "0x12C3004")]
		public PlayerStatFTEStartEventListener(PlayerStatEnabler listener)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x12C3150", Offset = "0x12C3150", VA = "0x12C3150", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x20001C1")]
	private class PlayerStatFTEEndEventListener : rcIGameEventListener
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PlayerStatEnabler _eventsListener;

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x12C3034", Offset = "0x12C3034", VA = "0x12C3034")]
		public PlayerStatFTEEndEventListener(PlayerStatEnabler listener)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x12C3168", Offset = "0x12C3168", VA = "0x12C3168", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayerMode;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas _playerStatsCanvas;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GBAEventsListenerBehaviour _eventListener;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnlockableManager _unlockableManager;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerStatFTEStartEventListener _fteStartEventListener;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerStatFTEEndEventListener _fteEndEventListener;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcGameEvent FTEStartEvent;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcGameEvent FTEEndEvent;

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x12C2C3C", Offset = "0x12C2C3C", VA = "0x12C2C3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x12C3064", Offset = "0x12C3064", VA = "0x12C3064")]
	private void EnablePlayerStats()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x12C30A4", Offset = "0x12C30A4", VA = "0x12C30A4")]
	private void DisablePlayerStats()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x12C30C4", Offset = "0x12C30C4", VA = "0x12C30C4")]
	private void EnablePlayersInSoloMode()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x12C3120", Offset = "0x12C3120", VA = "0x12C3120")]
	private void OnIsInMultiplayerModeChanged(bool newValue, bool oldValue, object changedBy)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x12C3144", Offset = "0x12C3144", VA = "0x12C3144")]
	public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x12C3148", Offset = "0x12C3148", VA = "0x12C3148")]
	public PlayerStatEnabler()
	{
	}
}
[Token(Token = "0x20001C2")]
public class PlayLimitDisplay : MonoBehaviour
{
	[Token(Token = "0x20001C3")]
	[CompilerGenerated]
	private sealed class <FadeOutAnimation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayLimitDisplay <>4__this;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeDuration>5__3;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <fadingColor>5__4;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x12C38C8", Offset = "0x12C38C8", VA = "0x12C38C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x12C3910", Offset = "0x12C3910", VA = "0x12C3910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x12C3624", Offset = "0x12C3624", VA = "0x12C3624")]
		[DebuggerHidden]
		public <FadeOutAnimation>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x12C3718", Offset = "0x12C3718", VA = "0x12C3718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x12C371C", Offset = "0x12C371C", VA = "0x12C371C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x12C38D0", Offset = "0x12C38D0", VA = "0x12C38D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C4")]
	[CompilerGenerated]
	private sealed class <FadeInAnimation>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayLimitDisplay <>4__this;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <fadingColor>5__2;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <fadeDuration>5__4;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x12C3AB4", Offset = "0x12C3AB4", VA = "0x12C3AB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x12C3AFC", Offset = "0x12C3AFC", VA = "0x12C3AFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x12C36A8", Offset = "0x12C36A8", VA = "0x12C36A8")]
		[DebuggerHidden]
		public <FadeInAnimation>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x12C3918", Offset = "0x12C3918", VA = "0x12C3918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x12C391C", Offset = "0x12C391C", VA = "0x12C391C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x12C3ABC", Offset = "0x12C3ABC", VA = "0x12C3ABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _canvas;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image _fadingBackdrop;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve _fadeCurve;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _playLimitWarningText;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayLimitZone _playLimitZone;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _cullingMaskBackup;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _shouldApplyBackup;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LayerMask _cullingMaskWhenOutOfPlayLimit;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _fadeInRoutine;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine _fadeOutRoutine;

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x12C3180", Offset = "0x12C3180", VA = "0x12C3180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x12C3318", Offset = "0x12C3318", VA = "0x12C3318")]
	private void StartFadeOutAnimation()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x12C34A0", Offset = "0x12C34A0", VA = "0x12C34A0")]
	private void StartFadeInAnimation()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x12C342C", Offset = "0x12C342C", VA = "0x12C342C")]
	[IteratorStateMachine(typeof(<FadeOutAnimation>d__13))]
	private IEnumerator FadeOutAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x12C3524", Offset = "0x12C3524", VA = "0x12C3524")]
	private void EndFadeOutAnimation()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x12C35B0", Offset = "0x12C35B0", VA = "0x12C35B0")]
	[IteratorStateMachine(typeof(<FadeInAnimation>d__15))]
	private IEnumerator FadeInAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x12C339C", Offset = "0x12C339C", VA = "0x12C339C")]
	private void EndFadeInAnimation()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x12C364C", Offset = "0x12C364C", VA = "0x12C364C")]
	private void HideWorld()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x12C36D0", Offset = "0x12C36D0", VA = "0x12C36D0")]
	private void ShowWorld()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x12C3708", Offset = "0x12C3708", VA = "0x12C3708")]
	public PlayLimitDisplay()
	{
	}
}
[Token(Token = "0x20001C5")]
public class PlayLimitEnabler : MonoBehaviour
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayLimitZone PlayLimitZoneScript;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LevelSettings[] _levelsWithPlayLimit;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _challengeIsPlaying;

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x12C3B04", Offset = "0x12C3B04", VA = "0x12C3B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x12C3C10", Offset = "0x12C3C10", VA = "0x12C3C10")]
	private void Init()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x12C3DC8", Offset = "0x12C3DC8", VA = "0x12C3DC8")]
	public void EnablePlayLimitZone()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x12C3F84", Offset = "0x12C3F84", VA = "0x12C3F84")]
	public PlayLimitEnabler()
	{
	}
}
[Token(Token = "0x20001C6")]
public class PlayLimitZone : MonoBehaviour
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _headDetectionPlaneTransform;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Plane _headDetectionPlane;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnPlayerOutOfPlayZone;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnPlayerBackInPlayZone;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _wasInPlayZone;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Transform PlayerHeadTransform;

	[Token(Token = "0x170001EE")]
	public bool PlayerInPlayZone
	{
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x12C3FB4", Offset = "0x12C3FB4", VA = "0x12C3FB4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x12C3FBC", Offset = "0x12C3FBC", VA = "0x12C3FBC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x12C3FC8", Offset = "0x12C3FC8", VA = "0x12C3FC8")]
	public float GetDistanceToPlayLimit()
	{
		return default(float);
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x12C3FF8", Offset = "0x12C3FF8", VA = "0x12C3FF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x12C40C8", Offset = "0x12C40C8", VA = "0x12C40C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x12C4170", Offset = "0x12C4170", VA = "0x12C4170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x12C42A4", Offset = "0x12C42A4", VA = "0x12C42A4")]
	public PlayLimitZone()
	{
	}
}
[Token(Token = "0x20001C7")]
public class ComboPlayType : CustomPlay
{
	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcIntGameParameter _successfulShots;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool MaxTime;

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x12C42AC", Offset = "0x12C42AC", VA = "0x12C42AC", Slot = "6")]
	public override string GetPlayRule()
	{
		return null;
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x12C4398", Offset = "0x12C4398", VA = "0x12C4398")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x12C43AC", Offset = "0x12C43AC", VA = "0x12C43AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x12C449C", Offset = "0x12C449C", VA = "0x12C449C")]
	private void OnShotFailed()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x12C452C", Offset = "0x12C452C", VA = "0x12C452C")]
	private void OnComboBroken()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x12C4550", Offset = "0x12C4550", VA = "0x12C4550")]
	public ComboPlayType()
	{
	}
}
[Token(Token = "0x20001C8")]
public abstract class CustomPlay : MonoBehaviour
{
	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnSetupPlay;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnCleanPlay;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnStartPlay;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnStopPlay;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnEndPlay;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int PlayDuration;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected rcLocalizedText _localizedRule;

	[Token(Token = "0x170001EF")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x12C4560", Offset = "0x12C4560", VA = "0x12C4560")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x12C4568", Offset = "0x12C4568", VA = "0x12C4568")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F0")]
	public ComboDetection ComboDetection
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x12C4574", Offset = "0x12C4574", VA = "0x12C4574")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x12C457C", Offset = "0x12C457C", VA = "0x12C457C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x12C4584", Offset = "0x12C4584", VA = "0x12C4584", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x12C4664", Offset = "0x12C4664", VA = "0x12C4664", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x12C4744", Offset = "0x12C4744", VA = "0x12C4744")]
	private void StartPlay()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x12C4788", Offset = "0x12C4788", VA = "0x12C4788")]
	private void StopPlay()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x12C4510", Offset = "0x12C4510", VA = "0x12C4510")]
	[ContextMenu("Force End Play")]
	public void EndPlay()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x12C47C8", Offset = "0x12C47C8", VA = "0x12C47C8", Slot = "6")]
	public virtual string GetPlayRule()
	{
		return null;
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x12C4558", Offset = "0x12C4558", VA = "0x12C4558")]
	protected CustomPlay()
	{
	}
}
[Token(Token = "0x20001C9")]
public class FlipObjectPlayType : CustomPlay
{
	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> ObjectToFlip;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<rcPhysicGrabbableObject> GrabbableObjectToFlip;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float AcceptedAngleRange;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public rcBoolGameParameter ObjectFlipped;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _startHeight;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _rangeHeight;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _desiredDirection;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _checkAngle;

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x12C4860", Offset = "0x12C4860", VA = "0x12C4860")]
	[ContextMenu("Start Game")]
	public void StartCheckingRotation()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x12C4964", Offset = "0x12C4964", VA = "0x12C4964")]
	public void EndCheckingRotation()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x12C496C", Offset = "0x12C496C", VA = "0x12C496C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x12C4B24", Offset = "0x12C4B24", VA = "0x12C4B24")]
	private bool NoCubeTouched()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x12C4BE0", Offset = "0x12C4BE0", VA = "0x12C4BE0")]
	public FlipObjectPlayType()
	{
	}
}
[Token(Token = "0x20001CA")]
public class FlyingBonus : MonoBehaviour, IGoalEmitter
{
	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Animation")]
	private Animator _animator;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _flyingAnimatorParameter;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _flyingObject;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Audio")]
	[SerializeField]
	private rcAudioSource _audioSource;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcAudioEvent _flyingAudioEvent;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Collision")]
	private rcProxyBehaviour _collisionsProxy;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnHitEvent;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _flyingParameterHash;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Combo")]
	[SerializeField]
	private rcIntGameParameter _comboCount;

	[Token(Token = "0x170001F1")]
	public UnityAction<Collider> OnGoal
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x12C4C58", Offset = "0x12C4C58", VA = "0x12C4C58", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x12C4C60", Offset = "0x12C4C60", VA = "0x12C4C60", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public bool IgnoreBalls
	{
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x12C4C68", Offset = "0x12C4C68", VA = "0x12C4C68", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x12C4C70", Offset = "0x12C4C70", VA = "0x12C4C70", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x12C4C7C", Offset = "0x12C4C7C", VA = "0x12C4C7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x12C4D64", Offset = "0x12C4D64", VA = "0x12C4D64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x12C4E4C", Offset = "0x12C4E4C", VA = "0x12C4E4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x12C502C", Offset = "0x12C502C", VA = "0x12C502C")]
	private void OnTriggerEnterEventTriggerGoalEvent(Collider collider)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x12C50E8", Offset = "0x12C50E8", VA = "0x12C50E8")]
	[ContextMenu("Simulate Hit")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x12C5200", Offset = "0x12C5200", VA = "0x12C5200")]
	public void Hit(Collider collider)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x12C5204", Offset = "0x12C5204", VA = "0x12C5204")]
	public void StartFlying()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x12C510C", Offset = "0x12C510C", VA = "0x12C510C")]
	public void StopFlying()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x12C5320", Offset = "0x12C5320", VA = "0x12C5320")]
	public FlyingBonus()
	{
	}
}
[Token(Token = "0x20001CB")]
public class FlyingBonusEnabler : MonoBehaviour
{
	[Token(Token = "0x20001CC")]
	[CompilerGenerated]
	private sealed class <TimeInterval>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlyingBonusEnabler <>4__this;

		[Token(Token = "0x170001F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x12C5950", Offset = "0x12C5950", VA = "0x12C5950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x12C5998", Offset = "0x12C5998", VA = "0x12C5998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x12C5440", Offset = "0x12C5440", VA = "0x12C5440")]
		[DebuggerHidden]
		public <TimeInterval>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x12C57DC", Offset = "0x12C57DC", VA = "0x12C57DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x12C57E0", Offset = "0x12C57E0", VA = "0x12C57E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x12C5958", Offset = "0x12C5958", VA = "0x12C5958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CD")]
	[CompilerGenerated]
	private sealed class <WaitTimeInterval>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlyingBonusEnabler <>4__this;

		[Token(Token = "0x170001F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x12C5AF8", Offset = "0x12C5AF8", VA = "0x12C5AF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x12C5B40", Offset = "0x12C5B40", VA = "0x12C5B40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x12C54DC", Offset = "0x12C54DC", VA = "0x12C54DC")]
		[DebuggerHidden]
		public <WaitTimeInterval>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x12C59A0", Offset = "0x12C59A0", VA = "0x12C59A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x12C59A4", Offset = "0x12C59A4", VA = "0x12C59A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x12C5B00", Offset = "0x12C5B00", VA = "0x12C5B00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlyingBonus BonusManager;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(1f, 60f)]
	[Header("Time Parameters")]
	public float BonusDisableDuration;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(1f, 60f)]
	public float BonusAppearDuration;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(1f, 60f)]
	public float ScoredWaitTime;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(1f, 60f)]
	public float CountdownDuration;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Events")]
	public UnityEvent EventOnFlyingBonusEnable;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent EventOnFlyingBonusDisable;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent EventOnStartBonusCountdown;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("VFX")]
	public GameObject BonusApparitionFX;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject BonusTakenFX;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject BonusDisparitionFX;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("SFX")]
	public rcAudioSource BonusAudioSource;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcAudioSource TimerAudioSource;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public rcAudioEvent AudioBonusApparition;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public rcAudioEvent AudioBonusDisparition;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public rcAudioEvent AudioBonusTaken;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public rcAudioEvent CountdownAudioEvent;

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x12C5378", Offset = "0x12C5378", VA = "0x12C5378")]
	[ContextMenu("StartTimeInterval")]
	public void StartTimeInterval()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x12C540C", Offset = "0x12C540C", VA = "0x12C540C")]
	[ContextMenu("StopTimeInterval")]
	public void StopTimeInterval()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x12C5398", Offset = "0x12C5398", VA = "0x12C5398")]
	[IteratorStateMachine(typeof(<TimeInterval>d__19))]
	private IEnumerator TimeInterval()
	{
		return null;
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x12C5468", Offset = "0x12C5468", VA = "0x12C5468")]
	[IteratorStateMachine(typeof(<WaitTimeInterval>d__20))]
	private IEnumerator WaitTimeInterval()
	{
		return null;
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x12C5504", Offset = "0x12C5504", VA = "0x12C5504")]
	public void EnableBonus()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x12C55AC", Offset = "0x12C55AC", VA = "0x12C55AC")]
	public void DisableBonus()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x12C5698", Offset = "0x12C5698", VA = "0x12C5698")]
	public void StartCountdown()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x12C56CC", Offset = "0x12C56CC", VA = "0x12C56CC")]
	public void GetBonus()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x12C57C8", Offset = "0x12C57C8", VA = "0x12C57C8")]
	public FlyingBonusEnabler()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CE")]
public class GBAEventsListener
{
	[Token(Token = "0x20001CF")]
	private class RestartEventListener : rcIGameEventListener
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GBAEventsListener _eventsListener;

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x12C5FE4", Offset = "0x12C5FE4", VA = "0x12C5FE4")]
		public RestartEventListener(GBAEventsListener listener)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x12C623C", Offset = "0x12C623C", VA = "0x12C623C", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x20001D0")]
	private class StopEventListener : rcIGameEventListener
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GBAEventsListener _eventsListener;

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x12C6014", Offset = "0x12C6014", VA = "0x12C6014")]
		public StopEventListener(GBAEventsListener listener)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x12C6268", Offset = "0x12C6268", VA = "0x12C6268", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x20001D1")]
	private class UserStartEventListener : rcIGameEventListener
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GBAEventsListener _eventsListener;

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x12C6044", Offset = "0x12C6044", VA = "0x12C6044")]
		public UserStartEventListener(GBAEventsListener listener)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x12C6294", Offset = "0x12C6294", VA = "0x12C6294", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x20001D2")]
	private class StartEventListener : rcIGameEventListener
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GBAEventsListener _eventsListener;

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x12C6074", Offset = "0x12C6074", VA = "0x12C6074")]
		public StartEventListener(GBAEventsListener listener)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x12C62C0", Offset = "0x12C62C0", VA = "0x12C62C0", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x20001D3")]
	private class EndEventListener : rcIGameEventListener
	{
		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GBAEventsListener _eventsListener;

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x12C60A4", Offset = "0x12C60A4", VA = "0x12C60A4")]
		public EndEventListener(GBAEventsListener listener)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x12C62EC", Offset = "0x12C62EC", VA = "0x12C62EC", Slot = "4")]
		public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
		{
		}
	}

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private rcGameEvent _userStartEvent;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcGameEvent _startEvent;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcGameEvent _stopEvent;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcGameEvent _restartEvent;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcGameEvent _endEvent;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent UserStartResponse;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent StartResponse;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent StopResponse;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent RestartResponse;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent EndResponse;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RestartEventListener _restartListener;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StopEventListener _stopListener;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UserStartEventListener _userStartListener;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private StartEventListener _startListener;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private EndEventListener _endListener;

	[Token(Token = "0x170001F7")]
	public rcGameEvent UserStartEvent
	{
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x12C5B48", Offset = "0x12C5B48", VA = "0x12C5B48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F8")]
	public rcGameEvent StartEvent
	{
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x12C5B50", Offset = "0x12C5B50", VA = "0x12C5B50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F9")]
	public rcGameEvent StopEvent
	{
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x12C5B58", Offset = "0x12C5B58", VA = "0x12C5B58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FA")]
	public rcGameEvent RestartEvent
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x12C5B60", Offset = "0x12C5B60", VA = "0x12C5B60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FB")]
	public rcGameEvent EndEvent
	{
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x12C5B68", Offset = "0x12C5B68", VA = "0x12C5B68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FC")]
	public bool Ready
	{
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x12C5B70", Offset = "0x12C5B70", VA = "0x12C5B70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x12C5C80", Offset = "0x12C5C80", VA = "0x12C5C80")]
	public static GBAEventsListener CreateGBAEventsListeners()
	{
		return null;
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x12C5CE4", Offset = "0x12C5CE4", VA = "0x12C5CE4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x12C60D4", Offset = "0x12C60D4", VA = "0x12C60D4")]
	public void UnregisterListeners()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x12C6238", Offset = "0x12C6238", VA = "0x12C6238")]
	public void FindGBAGameEventParameters()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x12C5CDC", Offset = "0x12C5CDC", VA = "0x12C5CDC")]
	public GBAEventsListener()
	{
	}
}
[Token(Token = "0x20001D4")]
public class GBAEventsListenerBehaviour : MonoBehaviour
{
	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[ContextMenuItem("Find Events", "OnValidate")]
	private GBAEventsListener _eventsListener;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _restartOnEnable;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool _restartOnDisable;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool _active;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnRegistered;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnUnregistered;

	[Token(Token = "0x170001FD")]
	public GBAEventsListener EventsListener
	{
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x12C6318", Offset = "0x12C6318", VA = "0x12C6318")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FE")]
	public bool Active
	{
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x12C6320", Offset = "0x12C6320", VA = "0x12C6320")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x12C6328", Offset = "0x12C6328", VA = "0x12C6328")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x12C6370", Offset = "0x12C6370", VA = "0x12C6370")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x12C63D4", Offset = "0x12C63D4", VA = "0x12C63D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x12C6434", Offset = "0x12C6434", VA = "0x12C6434")]
	public GBAEventsListenerBehaviour()
	{
	}
}
[Token(Token = "0x20001D5")]
public class GhostObjectVisibleScheme : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D6")]
	public class GhostObjectScheme
	{
		[Serializable]
		[Token(Token = "0x20001D7")]
		public class GhostObjectDuration
		{
			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Duration;

			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool Visible;

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0x12C6FF0", Offset = "0x12C6FF0", VA = "0x12C6FF0")]
			public GhostObjectDuration()
			{
			}
		}

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GameObject> ghostObjects;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Material> _ghostMaterial;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<Renderer> _ghostObjectsRenderer;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GhostObjectDuration> Durations;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<GhostObjectDuration> _defaultDurations;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float UpdateValueMultiplier;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Space]
		public List<GameObject> ObjectToDisableWhenHide;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space]
		public rcAudioSource SchemeAudioSource;

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x12C6FE0", Offset = "0x12C6FE0", VA = "0x12C6FE0")]
		public GhostObjectScheme()
		{
		}
	}

	[Token(Token = "0x20001D8")]
	public enum SchemeUpdateType
	{
		[Token(Token = "0x4000A07")]
		None,
		[Token(Token = "0x4000A08")]
		ChangeAtSpecificTime
	}

	[Token(Token = "0x20001D9")]
	[CompilerGenerated]
	private sealed class <DelayUpdateVisibleScheme>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GhostObjectVisibleScheme <>4__this;

		[Token(Token = "0x170001FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0x12C7184", Offset = "0x12C7184", VA = "0x12C7184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x12C71CC", Offset = "0x12C71CC", VA = "0x12C71CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x12C6940", Offset = "0x12C6940", VA = "0x12C6940")]
		[DebuggerHidden]
		public <DelayUpdateVisibleScheme>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x12C6FF8", Offset = "0x12C6FF8", VA = "0x12C6FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x12C6FFC", Offset = "0x12C6FFC", VA = "0x12C6FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x12C718C", Offset = "0x12C718C", VA = "0x12C718C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DA")]
	[CompilerGenerated]
	private sealed class <VisibleGhostObjectScheme>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GhostObjectScheme scheme;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GhostObjectVisibleScheme <>4__this;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x17000201")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0x12C739C", Offset = "0x12C739C", VA = "0x12C739C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x12C73E4", Offset = "0x12C73E4", VA = "0x12C73E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x12C6C74", Offset = "0x12C6C74", VA = "0x12C6C74")]
		[DebuggerHidden]
		public <VisibleGhostObjectScheme>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x12C71D4", Offset = "0x12C71D4", VA = "0x12C71D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x12C71D8", Offset = "0x12C71D8", VA = "0x12C71D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x12C73A4", Offset = "0x12C73A4", VA = "0x12C73A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DB")]
	[CompilerGenerated]
	private sealed class <FeedbackOnVisibilityMode>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GhostObjectScheme scheme;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool visible;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GhostObjectVisibleScheme <>4__this;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__2;

		[Token(Token = "0x17000203")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x12C77BC", Offset = "0x12C77BC", VA = "0x12C77BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x12C7804", Offset = "0x12C7804", VA = "0x12C7804", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x12C6D38", Offset = "0x12C6D38", VA = "0x12C6D38")]
		[DebuggerHidden]
		public <FeedbackOnVisibilityMode>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x12C73EC", Offset = "0x12C73EC", VA = "0x12C73EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x12C73F0", Offset = "0x12C73F0", VA = "0x12C73F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x12C77C4", Offset = "0x12C77C4", VA = "0x12C77C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GhostObjectScheme> GhostObjects;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve LerpCurve;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	public rcAudioEvent ApparitionAudioEvent;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcAudioEvent DisparitionAudioEvent;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	public SchemeUpdateType UpdateType;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DelayUpdateScheme;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _initialized;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly float VALUE_VISIBILITY_HIDE;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly float VALUE_VISIBILITY;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private readonly float THRESHOLD_ALPHA;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly int PROPERTY_ID_GHOST;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly int PROPERTY_ID_GHOST_ENABLE;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly int PROPERTY_ID_ALPHA_THRESHOLD;

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x12C643C", Offset = "0x12C643C", VA = "0x12C643C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x12C6768", Offset = "0x12C6768", VA = "0x12C6768")]
	[ContextMenu("Start Scheme")]
	public void StartVisibilityScheme()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x12C68CC", Offset = "0x12C68CC", VA = "0x12C68CC")]
	[IteratorStateMachine(typeof(<DelayUpdateVisibleScheme>d__17))]
	private IEnumerator DelayUpdateVisibleScheme()
	{
		return null;
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x12C66D0", Offset = "0x12C66D0", VA = "0x12C66D0")]
	[ContextMenu("Stop Scheme")]
	public void StopVisibilityScheme()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x12C683C", Offset = "0x12C683C", VA = "0x12C683C")]
	[IteratorStateMachine(typeof(<VisibleGhostObjectScheme>d__19))]
	private IEnumerator VisibleGhostObjectScheme(GhostObjectScheme scheme)
	{
		return null;
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x12C6C9C", Offset = "0x12C6C9C", VA = "0x12C6C9C")]
	[IteratorStateMachine(typeof(<FeedbackOnVisibilityMode>d__20))]
	private IEnumerator FeedbackOnVisibilityMode(GhostObjectScheme scheme, bool visible)
	{
		return null;
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x12C6D60", Offset = "0x12C6D60", VA = "0x12C6D60")]
	public void UpdateGhostObjects(GhostObjectScheme scheme, bool visible)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x12C6968", Offset = "0x12C6968", VA = "0x12C6968")]
	public void ResetGhostObject(GhostObjectScheme scheme)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x12C6F18", Offset = "0x12C6F18", VA = "0x12C6F18")]
	public GhostObjectVisibleScheme()
	{
	}
}
[Token(Token = "0x20001DC")]
public class GrabObjectPlayType : CustomPlay
{
	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<rcPhysicGrabbableObject> ObjectToGrab;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float GrabDuration;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public float _currentGrabDuration;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcBoolGameParameter ObjectGrabbedParameter;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _checkGrab;

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x12C780C", Offset = "0x12C780C", VA = "0x12C780C")]
	public void StartCheckingGrab()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x12C7840", Offset = "0x12C7840", VA = "0x12C7840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x12C7920", Offset = "0x12C7920", VA = "0x12C7920")]
	private bool ObjectGrab()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x12C79D8", Offset = "0x12C79D8", VA = "0x12C79D8", Slot = "6")]
	public override string GetPlayRule()
	{
		return null;
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x12C7AB0", Offset = "0x12C7AB0", VA = "0x12C7AB0")]
	public GrabObjectPlayType()
	{
	}
}
[Token(Token = "0x20001DD")]
public class HoopCapManager : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	public enum CapedType
	{
		[Token(Token = "0x4000A2C")]
		OneByOne,
		[Token(Token = "0x4000A2D")]
		OneByOneRandomTime,
		[Token(Token = "0x4000A2E")]
		MultipleAtTime,
		[Token(Token = "0x4000A2F")]
		OneByOneTime,
		[Token(Token = "0x4000A30")]
		OnlyOneTime
	}

	[Token(Token = "0x20001DF")]
	[CompilerGenerated]
	private sealed class <TimeInterval>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoopCapManager <>4__this;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nearOpenEffectDelay>5__2;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <newCloseTime>5__3;

		[Token(Token = "0x17000205")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0x12C8D0C", Offset = "0x12C8D0C", VA = "0x12C8D0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x12C8D54", Offset = "0x12C8D54", VA = "0x12C8D54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x12C83AC", Offset = "0x12C83AC", VA = "0x12C83AC")]
		[DebuggerHidden]
		public <TimeInterval>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x12C8954", Offset = "0x12C8954", VA = "0x12C8954", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x12C8958", Offset = "0x12C8958", VA = "0x12C8958", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x12C8D14", Offset = "0x12C8D14", VA = "0x12C8D14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[CompilerGenerated]
	private sealed class <OpenAllCapRandomlyCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Animator> list;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HoopCapManager <>4__this;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delay;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__2;

		[Token(Token = "0x17000207")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x12C8E80", Offset = "0x12C8E80", VA = "0x12C8E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x12C8EC8", Offset = "0x12C8EC8", VA = "0x12C8EC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x12C85EC", Offset = "0x12C85EC", VA = "0x12C85EC")]
		[DebuggerHidden]
		public <OpenAllCapRandomlyCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x12C8D5C", Offset = "0x12C8D5C", VA = "0x12C8D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x12C8D60", Offset = "0x12C8D60", VA = "0x12C8D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x12C8E88", Offset = "0x12C8E88", VA = "0x12C8E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CapedType CapBehaviour;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> HoopCaped;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityAction<GameObject> HoopCapClosed;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MultipleCapOpenAtSameTime;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	public rcIntGameParameter ScoreParameter;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("RandomTime Parameters")]
	public bool RandomCloseTime;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 CloseTime;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float OpenTime;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Animator> _hoopCapAnimators;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _currentCapIndex;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _nextCapIndex;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly int BOOL_HASH_OPEN;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private readonly int TRIGGER_HASH_RESET;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly int TRIGGER_HASH_NEAR_OPEN;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private readonly int TRIGGER_HASH_NEAR_CLOSE;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x12C7AB8", Offset = "0x12C7AB8", VA = "0x12C7AB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x12C7BBC", Offset = "0x12C7BBC", VA = "0x12C7BBC")]
	private void GetAllHoopCapAnimators()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x12C8138", Offset = "0x12C8138", VA = "0x12C8138")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x12C821C", Offset = "0x12C821C", VA = "0x12C821C")]
	[ContextMenu("StartTimeInterval")]
	public void StartTimeInterval()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x12C82BC", Offset = "0x12C82BC", VA = "0x12C82BC")]
	[ContextMenu("StopTimeInterval")]
	public void StopTimeInterval()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x12C8248", Offset = "0x12C8248", VA = "0x12C8248")]
	[IteratorStateMachine(typeof(<TimeInterval>d__21))]
	private IEnumerator TimeInterval()
	{
		return null;
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x12C83D4", Offset = "0x12C83D4", VA = "0x12C83D4")]
	public void UpdateCap(int fromValue, int toValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x12C7D60", Offset = "0x12C7D60", VA = "0x12C7D60")]
	public void OpenCloseCap()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x12C8440", Offset = "0x12C8440", VA = "0x12C8440")]
	public void OpenAllCap()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x12C84D4", Offset = "0x12C84D4", VA = "0x12C84D4")]
	public void OpenAllCapRandomly(float delay)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x12C854C", Offset = "0x12C854C", VA = "0x12C854C")]
	[IteratorStateMachine(typeof(<OpenAllCapRandomlyCoroutine>d__26))]
	private IEnumerator OpenAllCapRandomlyCoroutine(List<Animator> list, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x12C82D8", Offset = "0x12C82D8", VA = "0x12C82D8")]
	public void CloseAllCap()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x12C8614", Offset = "0x12C8614", VA = "0x12C8614")]
	public void CloseCap(GameObject cap)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x12C8698", Offset = "0x12C8698", VA = "0x12C8698")]
	public void NearOpenCap(int nextCapIndex)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x12C8700", Offset = "0x12C8700", VA = "0x12C8700")]
	public int GetNextRandomCapIndex(int currentCapIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x12C83E4", Offset = "0x12C83E4", VA = "0x12C83E4")]
	public int GetNextCapIndex(int currentCapIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x12C8864", Offset = "0x12C8864", VA = "0x12C8864")]
	public HoopCapManager()
	{
	}
}
[Token(Token = "0x20001E1")]
public class HoopPinballPointManager : MonoBehaviour
{
	[Token(Token = "0x20001E2")]
	[CompilerGenerated]
	private sealed class <HoopPointFXApaprition>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoopPinballPointManager <>4__this;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 hitPoint;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <newFXPinballPoint>5__2;

		[Token(Token = "0x17000209")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x12C9400", Offset = "0x12C9400", VA = "0x12C9400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x12C9448", Offset = "0x12C9448", VA = "0x12C9448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x12C919C", Offset = "0x12C919C", VA = "0x12C919C")]
		[DebuggerHidden]
		public <HoopPointFXApaprition>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x12C91CC", Offset = "0x12C91CC", VA = "0x12C91CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x12C91D0", Offset = "0x12C91D0", VA = "0x12C91D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x12C9408", Offset = "0x12C9408", VA = "0x12C9408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<rcProxyBehaviour> Proxys;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcIntGameParameter SuccessfulShotParameter;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FXHoopPoint;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _FXApparing;

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x12C8ED0", Offset = "0x12C8ED0", VA = "0x12C8ED0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x12C9020", Offset = "0x12C9020", VA = "0x12C9020")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x12C9104", Offset = "0x12C9104", VA = "0x12C9104")]
	[IteratorStateMachine(typeof(<HoopPointFXApaprition>d__6))]
	private IEnumerator HoopPointFXApaprition(Vector3 hitPoint)
	{
		return null;
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x12C91C4", Offset = "0x12C91C4", VA = "0x12C91C4")]
	public HoopPinballPointManager()
	{
	}
}
[Token(Token = "0x20001E3")]
public class PlayManager : MonoBehaviour
{
	[Token(Token = "0x20001E4")]
	public enum PlayType
	{
		[Token(Token = "0x4000A5B")]
		TimeLimit,
		[Token(Token = "0x4000A5C")]
		ShotsLimit,
		[Token(Token = "0x4000A5D")]
		Custom,
		[Token(Token = "0x4000A5E")]
		NoTimeLimit
	}

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ContextMenuItem("Find Events", "OnValidate")]
	[SerializeField]
	private GBAEventsListener _gbaEventListeners;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcIntGameParameter _successfulShotsParameter;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _successfulShotsResetEnabled;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcBoolGameParameter _displayReverseTimeParameter;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int _targetSuccessfulShots;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private int _playDurationSeconds;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NetworkedTimer _timer;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DisplayLevelInfoOnEnable;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LevelSettings LevelId;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CustomPlay CustomPlay;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnStartPlaying;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnDonePlaying;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _isPlaying;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private PlayType _currentPlayType;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent StartPlayEvent;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent EndPlayEvent;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[Header("Combo Detection")]
	private bool _useComboDetection;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[Tooltip("Set this to false for Free Throw levels")]
	public bool UseDispensingState;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ComboDetectionReference _comboDetectionReference;

	[Token(Token = "0x1700020B")]
	public rcIntGameParameter SuccessfulShotsParameter
	{
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x12C9450", Offset = "0x12C9450", VA = "0x12C9450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020C")]
	public rcBoolGameParameter DisplayReverseTimeParameter
	{
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x12C9458", Offset = "0x12C9458", VA = "0x12C9458")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020D")]
	public int TargetSuccessfulShots
	{
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x12C9460", Offset = "0x12C9460", VA = "0x12C9460")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700020E")]
	public int PlayDurationSeconds
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x12C9468", Offset = "0x12C9468", VA = "0x12C9468")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x12C9470", Offset = "0x12C9470", VA = "0x12C9470")]
		set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	public NetworkedTimer Timer
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x12C9478", Offset = "0x12C9478", VA = "0x12C9478")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x12C9480", Offset = "0x12C9480", VA = "0x12C9480")]
		set
		{
		}
	}

	[Token(Token = "0x17000210")]
	public LevelDisplaySettings DisplaySettings
	{
		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x12C9510", Offset = "0x12C9510", VA = "0x12C9510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000211")]
	public string PlayRule
	{
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x12C958C", Offset = "0x12C958C", VA = "0x12C958C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000212")]
	public string LevelTitle
	{
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x12C9640", Offset = "0x12C9640", VA = "0x12C9640")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000213")]
	public string LevelFullTitle
	{
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x12C96F0", Offset = "0x12C96F0", VA = "0x12C96F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000214")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x12C97A0", Offset = "0x12C97A0", VA = "0x12C97A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x12C97A8", Offset = "0x12C97A8", VA = "0x12C97A8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public PlayType CurrentPlayType
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x12C97E8", Offset = "0x12C97E8", VA = "0x12C97E8")]
		get
		{
			return default(PlayType);
		}
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x12C97F0", Offset = "0x12C97F0", VA = "0x12C97F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000216")]
	public EndGameState EndGameState
	{
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x12C9DC4", Offset = "0x12C9DC4", VA = "0x12C9DC4")]
		[CompilerGenerated]
		get
		{
			return default(EndGameState);
		}
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x12C9DD4", Offset = "0x12C9DD4", VA = "0x12C9DD4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000217")]
	public bool UseComboDetection
	{
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x12C9DE4", Offset = "0x12C9DE4", VA = "0x12C9DE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x12C9DEC", Offset = "0x12C9DEC", VA = "0x12C9DEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000218")]
	public Dispenser LocalDispenser
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x12C9E30", Offset = "0x12C9E30", VA = "0x12C9E30")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x12C9E38", Offset = "0x12C9E38", VA = "0x12C9E38")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x12C9E40", Offset = "0x12C9E40", VA = "0x12C9E40")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x12C9E44", Offset = "0x12C9E44", VA = "0x12C9E44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x12CA124", Offset = "0x12CA124", VA = "0x12CA124")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x12C9F8C", Offset = "0x12C9F8C", VA = "0x12C9F8C")]
	private void setupGBAEventsResponses()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x12CA150", Offset = "0x12CA150", VA = "0x12CA150")]
	private void resetGBAEventsResponses()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x12CA2E8", Offset = "0x12CA2E8", VA = "0x12CA2E8")]
	public void ShowLevelInfo()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x12CA2EC", Offset = "0x12CA2EC", VA = "0x12CA2EC")]
	public void EnableSuccessfulShotsReset(bool enable)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x12CA2F8", Offset = "0x12CA2F8", VA = "0x12CA2F8")]
	[ContextMenu("Stop Play")]
	private void stopPlay()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x12CA430", Offset = "0x12CA430", VA = "0x12CA430")]
	[ContextMenu("Restart Play")]
	private void restartPlay()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x12CA4F4", Offset = "0x12CA4F4", VA = "0x12CA4F4")]
	private void userStartPlay()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x12CA540", Offset = "0x12CA540", VA = "0x12CA540")]
	[ContextMenu("Start Play")]
	private void startPlay()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x12C9A80", Offset = "0x12C9A80", VA = "0x12C9A80")]
	private void setupPlay(PlayType play)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x12C9830", Offset = "0x12C9830", VA = "0x12C9830")]
	private void cleanupPlay(PlayType play)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x12CA728", Offset = "0x12CA728", VA = "0x12CA728")]
	private void onSuccessfulShots(int shotsCountAfter, int shotsCountBefore, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x12CA73C", Offset = "0x12CA73C", VA = "0x12CA73C")]
	[ContextMenu("End Play")]
	private void onEndPlay()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x12CA8F4", Offset = "0x12CA8F4", VA = "0x12CA8F4")]
	public PlayManager()
	{
	}
}
[Token(Token = "0x20001E5")]
public class RaiseObjectPlayType : CustomPlay
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> ObjectsToRaise;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float YRaiseHeight;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcBoolGameParameter ObjectRaisedParameter;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dispenser Dispenser;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image Jauge;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float RaiseDuraiton;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<float> _objectToRaiseRadius;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _checkHeight;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _objectToRaiseCurrentHeight;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _currentRaiseDuration;

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x12CA938", Offset = "0x12CA938", VA = "0x12CA938")]
	private void GetAllObjectFromDispenser()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x12CACD0", Offset = "0x12CACD0", VA = "0x12CACD0")]
	[ContextMenu("Start Game")]
	public void StartCheckingHeight()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x12CAD08", Offset = "0x12CAD08", VA = "0x12CAD08")]
	public void EndCheckingHeight()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x12CAD10", Offset = "0x12CAD10", VA = "0x12CAD10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x12CAF10", Offset = "0x12CAF10", VA = "0x12CAF10")]
	public RaiseObjectPlayType()
	{
	}
}
[Token(Token = "0x20001E6")]
public class Ring : MonoBehaviour, IGoalEmitter
{
	[Token(Token = "0x20001E7")]
	[CompilerGenerated]
	private sealed class <eventDurationCoroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ring <>4__this;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x12CB708", Offset = "0x12CB708", VA = "0x12CB708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x12CB750", Offset = "0x12CB750", VA = "0x12CB750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x12CB628", Offset = "0x12CB628", VA = "0x12CB628")]
		[DebuggerHidden]
		public <eventDurationCoroutine>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x12CB668", Offset = "0x12CB668", VA = "0x12CB668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x12CB66C", Offset = "0x12CB66C", VA = "0x12CB66C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x12CB710", Offset = "0x12CB710", VA = "0x12CB710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcProxyBehaviour TriggerProxy;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask DetectionLayer;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RingModel;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _startPos;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float HitEventDuration;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnTriggerHit;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnEventEnd;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Audio")]
	public rcAudioSource TimerSource;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcAudioEvent TimerEvent;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcAudioSource RingTriggerSource;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcAudioEvent RingTriggerAudioEvent;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Combo")]
	[SerializeField]
	private rcIntGameParameter _comboCount;

	[Token(Token = "0x17000219")]
	public UnityAction<Collider> OnGoal
	{
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x12CAF20", Offset = "0x12CAF20", VA = "0x12CAF20", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x12CAF28", Offset = "0x12CAF28", VA = "0x12CAF28", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700021A")]
	public bool IgnoreBalls
	{
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x12CAF30", Offset = "0x12CAF30", VA = "0x12CAF30", Slot = "6")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x12CAF38", Offset = "0x12CAF38", VA = "0x12CAF38", Slot = "7")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x12CAF44", Offset = "0x12CAF44", VA = "0x12CAF44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x12CB02C", Offset = "0x12CB02C", VA = "0x12CB02C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x12CB114", Offset = "0x12CB114", VA = "0x12CB114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x12CB2F0", Offset = "0x12CB2F0", VA = "0x12CB2F0")]
	private void OnTriggerEnterEventTriggerGoalEvent(Collider collider)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x12CB3F0", Offset = "0x12CB3F0", VA = "0x12CB3F0")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x12CB410", Offset = "0x12CB410", VA = "0x12CB410")]
	public void OnTriggerEnter(Collider collidingObject)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x12CB4A0", Offset = "0x12CB4A0", VA = "0x12CB4A0")]
	[ContextMenu("Trigger Hit Event")]
	public void TriggerHitEvent()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x12CB588", Offset = "0x12CB588", VA = "0x12CB588")]
	public void EndEvent(bool endGame)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x12CB514", Offset = "0x12CB514", VA = "0x12CB514")]
	[IteratorStateMachine(typeof(<eventDurationCoroutine>d__28))]
	private IEnumerator eventDurationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x12CB650", Offset = "0x12CB650", VA = "0x12CB650")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x12CB658", Offset = "0x12CB658", VA = "0x12CB658")]
	public Ring()
	{
	}
}
[Token(Token = "0x20001E8")]
public class ScanHandActivity : MonoBehaviour
{
	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ScanDuration;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcStringGameParameter RuleParameter;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcLocalizedText LocalizedRule;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent<float> OnScanProgressUpdated;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Hands")]
	public int CollidersPerHands;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public rcProxyBehaviour ProxyBehaviourLeftHand;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask AvatarLeftlHandLayerMask;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Collider> _leftHandColliderObject;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcProxyBehaviour ProxyBehaviourRightHand;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LayerMask AvatarRightHandLayerMask;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Collider> _rightHandCollidedObject;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Colors")]
	public Color HandColorToScan;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color HandColorScanning;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer LeftHandMarkToScan;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer RightHandMarkToScan;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _leftHandColliding;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool _rightHandColliding;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public rcBoolGameParameter HandsScanned;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _canScanHands;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _currentScanDuration;

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x12CB758", Offset = "0x12CB758", VA = "0x12CB758")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x12CBCC4", Offset = "0x12CBCC4", VA = "0x12CBCC4")]
	private void onCollisionEnterLeftHand(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x12CBE10", Offset = "0x12CBE10", VA = "0x12CBE10")]
	private void onCollisionExitLeftHand(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x12CBED4", Offset = "0x12CBED4", VA = "0x12CBED4")]
	private void onCollisionEnterRightHand(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x12CC020", Offset = "0x12CC020", VA = "0x12CC020")]
	private void onCollisionExitRightHand(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x12CBB90", Offset = "0x12CBB90", VA = "0x12CBB90")]
	private void startScanningHands()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x12CC0E4", Offset = "0x12CC0E4", VA = "0x12CC0E4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x12CC24C", Offset = "0x12CC24C", VA = "0x12CC24C")]
	public void UpdateHandColor(bool leftHandScanning, bool rightHandScanning)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x12CC490", Offset = "0x12CC490", VA = "0x12CC490")]
	public ScanHandActivity()
	{
	}
}
[Token(Token = "0x20001E9")]
public class ShotsManager : MonoBehaviour
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HoopManager _hoopManager;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcIntGameParameter _successfulShotsParameter;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcIntGameParameter _comboShotParameter;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcIntGameParameter[] _toIncreaseByScore;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int _successfulShotScore;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _currentSuccessfulShotScore;

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x12CC4A8", Offset = "0x12CC4A8", VA = "0x12CC4A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x12CC66C", Offset = "0x12CC66C", VA = "0x12CC66C")]
	private void onGoal(Collider _)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x12CC670", Offset = "0x12CC670", VA = "0x12CC670")]
	private void increaseScoreAndParameters()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x12CC6F8", Offset = "0x12CC6F8", VA = "0x12CC6F8")]
	public void IncreaseScore(int score)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x12CC714", Offset = "0x12CC714", VA = "0x12CC714")]
	public void OnComboChange(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x12CC660", Offset = "0x12CC660", VA = "0x12CC660")]
	public void ResetCurrentSuccessfulShotScore()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x12CC734", Offset = "0x12CC734", VA = "0x12CC734")]
	public ShotsManager()
	{
	}
}
[Token(Token = "0x20001EA")]
public class SnakeHead : SpecialLevelBossSpecialBehaviour
{
	[Token(Token = "0x20001EB")]
	[CompilerGenerated]
	private sealed class <DestroyAllBodyPartSequence>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnakeHead <>4__this;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x12CD074", Offset = "0x12CD074", VA = "0x12CD074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x12CD0BC", Offset = "0x12CD0BC", VA = "0x12CD0BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x12CCA8C", Offset = "0x12CCA8C", VA = "0x12CCA8C")]
		[DebuggerHidden]
		public <DestroyAllBodyPartSequence>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x12CCE68", Offset = "0x12CCE68", VA = "0x12CCE68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x12CCE6C", Offset = "0x12CCE6C", VA = "0x12CCE6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x12CD07C", Offset = "0x12CD07C", VA = "0x12CD07C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpecialLevelHoopManager HeadSpecialHoopManager;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShieldHitEffect HeadShield;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator HeadCap;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HoopCapManager CapManagerScript;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int BodyToDestroyBeforeReveal;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> SnakeBodyPart;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ObjectApparition _headCapObjectApparition;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _currentBodyDestroyed;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<SpecialLevelHoopManager> _snakeBodyPartToDestroy;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly int HASH_PARAM_BOOL_OPEN;

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x12CC744", Offset = "0x12CC744", VA = "0x12CC744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x12CC7E0", Offset = "0x12CC7E0", VA = "0x12CC7E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x12CC7EC", Offset = "0x12CC7EC", VA = "0x12CC7EC", Slot = "5")]
	public override void Hit()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x12CC82C", Offset = "0x12CC82C", VA = "0x12CC82C", Slot = "4")]
	public override void HitDestroy()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x12CC844", Offset = "0x12CC844", VA = "0x12CC844")]
	private void DestroyAllBodyPart()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x12CCA18", Offset = "0x12CCA18", VA = "0x12CCA18")]
	[IteratorStateMachine(typeof(<DestroyAllBodyPartSequence>d__15))]
	private IEnumerator DestroyAllBodyPartSequence()
	{
		return null;
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x12CCAB4", Offset = "0x12CCAB4", VA = "0x12CCAB4", Slot = "6")]
	public override void Reveal()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x12CCC40", Offset = "0x12CCC40", VA = "0x12CCC40", Slot = "7")]
	public override void ResetBehaviour()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x12CCE08", Offset = "0x12CCE08", VA = "0x12CCE08")]
	public SnakeHead()
	{
	}
}
[Token(Token = "0x20001EC")]
public class SpecialHoopDamageManager : MonoBehaviour
{
	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Breakable")]
	public bool DamageOnObject;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> BreakablePart;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> BreakableFX;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Materials")]
	[Space]
	public bool DamageOnMaterial;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer Renderer;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentDamageLevel;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Material> DamagesMaterials;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> DamagesFX;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Audio")]
	public rcAudioSource RcAudioSourceRef;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcAudioEvent SFXDamageSmall;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public rcAudioEvent SFXDamage;

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x12CD0C4", Offset = "0x12CD0C4", VA = "0x12CD0C4")]
	public void TakeDamage()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x12CD2F0", Offset = "0x12CD2F0", VA = "0x12CD2F0")]
	private void PlaySFXDamageSmall()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x12CD26C", Offset = "0x12CD26C", VA = "0x12CD26C")]
	private void PlaySFXDamage()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x12CD374", Offset = "0x12CD374", VA = "0x12CD374")]
	public void TakeAllDamage()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x12CD46C", Offset = "0x12CD46C", VA = "0x12CD46C")]
	public void ResetDamage()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x12CD5E4", Offset = "0x12CD5E4", VA = "0x12CD5E4")]
	public SpecialHoopDamageManager()
	{
	}
}
[Token(Token = "0x20001ED")]
public class SpecialLevel : MonoBehaviour
{
	[Token(Token = "0x20001EE")]
	[CompilerGenerated]
	private sealed class <NextBoardFlow>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpecialLevel <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0x12CDF24", Offset = "0x12CDF24", VA = "0x12CDF24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0x12CDF6C", Offset = "0x12CDF6C", VA = "0x12CDF6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x12CDAB0", Offset = "0x12CDAB0", VA = "0x12CDAB0")]
		[DebuggerHidden]
		public <NextBoardFlow>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x12CDCF8", Offset = "0x12CDCF8", VA = "0x12CDCF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x12CDCFC", Offset = "0x12CDCFC", VA = "0x12CDCFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x12CDF2C", Offset = "0x12CDF2C", VA = "0x12CDF2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _specialLevelStart;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SpecialLevelBoard> Boards;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int CurrentBoardEnable;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int GloablBoardEnable;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Difficulty")]
	public rcFloatGameParameter DifficultyParameter;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float IncreaseDifficultyPercent;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("FX")]
	public Animator BoardClearFXAnimator;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Events")]
	public UnityEvent OnBoardCleared;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnBoardClearedEnd;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly int HASH_PARAM_TRIGGER_CLEAR;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly int HASH_PARAM_TRIGGER_RESET;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly WaitForSeconds _waitBetweenBoards;

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x12CD5EC", Offset = "0x12CD5EC", VA = "0x12CD5EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x12CD7BC", Offset = "0x12CD7BC", VA = "0x12CD7BC")]
	public void StartSpecialLevel()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x12CD980", Offset = "0x12CD980", VA = "0x12CD980")]
	public void StopSpecialLevel()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x12CDA0C", Offset = "0x12CDA0C", VA = "0x12CDA0C")]
	[ContextMenu("Next Special Board")]
	public void NextBoard()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x12CDA3C", Offset = "0x12CDA3C", VA = "0x12CDA3C")]
	[IteratorStateMachine(typeof(<NextBoardFlow>d__16))]
	public IEnumerator NextBoardFlow()
	{
		return null;
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x12CD5F0", Offset = "0x12CD5F0", VA = "0x12CD5F0")]
	public void ResetSpecialLevel()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x12CDC2C", Offset = "0x12CDC2C", VA = "0x12CDC2C")]
	public SpecialLevel()
	{
	}
}
[Token(Token = "0x20001EF")]
public class SpecialLevelBoard : MonoBehaviour
{
	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpecialLevel SpecialPlayType;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SpecialLevelHoopManager> SpecialHoops;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SpecialLevelBossSpecialBehaviour> SpecialBossBehaviour;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _hoopCountInBoard;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _currentHoopDestroyedOnBoard;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	public List<PhysicsHoopManager> PhysicsHoops;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	public UnityEvent StartBoardEvent;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent StopBoardEvent;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent ResetBoardEvent;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x12CDF74", Offset = "0x12CDF74", VA = "0x12CDF74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x12CD874", Offset = "0x12CD874", VA = "0x12CD874")]
	public void InitBoard(int currentBoardEnable)
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x12CD96C", Offset = "0x12CD96C", VA = "0x12CD96C")]
	public void StartBoardBehaviour()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x12CD9F8", Offset = "0x12CD9F8", VA = "0x12CD9F8")]
	public void StopBoardBehaviour()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x12CDFC8", Offset = "0x12CDFC8", VA = "0x12CDFC8")]
	public void DestroyedHoop()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x12CDAD8", Offset = "0x12CDAD8", VA = "0x12CDAD8")]
	public void ResetBoard(int currentBoardEnable)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x12CE138", Offset = "0x12CE138", VA = "0x12CE138")]
	public SpecialLevelBoard()
	{
	}
}
[Token(Token = "0x20001F0")]
public class SpecialLevelBossSpecialBehaviour : MonoBehaviour
{
	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x12CE140", Offset = "0x12CE140", VA = "0x12CE140", Slot = "4")]
	public virtual void HitDestroy()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x12CE144", Offset = "0x12CE144", VA = "0x12CE144", Slot = "5")]
	public virtual void Hit()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x12CE148", Offset = "0x12CE148", VA = "0x12CE148", Slot = "6")]
	public virtual void Reveal()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x12CE14C", Offset = "0x12CE14C", VA = "0x12CE14C", Slot = "7")]
	public virtual void ResetBehaviour()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x12CCE60", Offset = "0x12CCE60", VA = "0x12CCE60")]
	public SpecialLevelBossSpecialBehaviour()
	{
	}
}
[Token(Token = "0x20001F1")]
[RequireComponent(typeof(SpecialHoopDamageManager))]
public class SpecialLevelHoopManager : MonoBehaviour
{
	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpecialLevelBoard Board;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpecialLevelBossSpecialBehaviour SpecialBossBehaviour;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[Space]
	public bool IsDestroyed;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MaxHoopLife;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _currentHoopLife;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool BonusOnScore;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _defaultBonusScoreWhenHoopDestroyed;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int BonusScoreWhenHoopDestroyed;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HoopManager HoopManagerScript;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ShotsManager ShotsManagerScript;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool DetectBoardCollision;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcProxyBehaviour ArceauProxy;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcProxyBehaviour ProxyCollider;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OneHitTrigger OneHitTrigger;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator PinballPointFX;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI PinballPointFXText;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<GameObject> ObejctsToDisableOnDestroy;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SpecialHoopDamageManager _damageManagerScript;

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x12CE150", Offset = "0x12CE150", VA = "0x12CE150")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x12CE37C", Offset = "0x12CE37C", VA = "0x12CE37C")]
	public void OnCollisionHoop()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x12CE4AC", Offset = "0x12CE4AC", VA = "0x12CE4AC")]
	private void OnGoal()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x12CE4B4", Offset = "0x12CE4B4", VA = "0x12CE4B4")]
	public void DeActivateSpecialHoop(bool AddBonus)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x12CCFBC", Offset = "0x12CCFBC", VA = "0x12CCFBC")]
	public void SpecialHoopLooseAllLife(bool addBonus)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x12CE38C", Offset = "0x12CE38C", VA = "0x12CE38C")]
	[ContextMenu("Simulate loose HP")]
	public void SpecialHoopLooseLife()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x12CDFFC", Offset = "0x12CDFFC", VA = "0x12CDFFC")]
	public void ResetSpecialHoop()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x12CDF78", Offset = "0x12CDF78", VA = "0x12CDF78")]
	public void UpdateBonusScoreWhenHoopDestroyed()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x12CE590", Offset = "0x12CE590", VA = "0x12CE590")]
	private void UpdatePinballPointText(float newBonusScore)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x12CE5D8", Offset = "0x12CE5D8", VA = "0x12CE5D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x12CE66C", Offset = "0x12CE66C", VA = "0x12CE66C")]
	public SpecialLevelHoopManager()
	{
	}
}
[Token(Token = "0x20001F2")]
public class StackObjectPlayType : CustomPlay
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float ObjectYSize;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> ObjectsToStack;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float AcceptableHeightRange;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ObjectStackCurrentHeight;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public rcBoolGameParameter ObjectStacked;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Zone;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float ZoneRange;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Jauge JaugeScript;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float StackedDuration;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int _numberObjectToBeStack;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<rcPhysicGrabbableObject> _grabbableObjectToStack;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _stackHeightNeeded;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Bounds _stackBounds;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool _checkStackedHeight;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _currentStackedTime;

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x12CE690", Offset = "0x12CE690", VA = "0x12CE690")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x12CE6DC", Offset = "0x12CE6DC", VA = "0x12CE6DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x12CE85C", Offset = "0x12CE85C", VA = "0x12CE85C")]
	[ContextMenu("Start Game")]
	public void StartCheckingHeight()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x12CE928", Offset = "0x12CE928", VA = "0x12CE928")]
	public void EndCheckingHeight()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x12CE934", Offset = "0x12CE934", VA = "0x12CE934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x12CECA0", Offset = "0x12CECA0", VA = "0x12CECA0")]
	private bool NoCubeTouched()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x12CED5C", Offset = "0x12CED5C", VA = "0x12CED5C", Slot = "6")]
	public override string GetPlayRule()
	{
		return null;
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x12CEC14", Offset = "0x12CEC14", VA = "0x12CEC14")]
	private bool StackBoundInZone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x12CEE64", Offset = "0x12CEE64", VA = "0x12CEE64")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x12CEF20", Offset = "0x12CEF20", VA = "0x12CEF20")]
	public StackObjectPlayType()
	{
	}
}
[Token(Token = "0x20001F3")]
public class StepingHoop : MonoBehaviour, rcIGameEventListener
{
	[Token(Token = "0x20001F4")]
	[CompilerGenerated]
	private sealed class <PreviousStepLifeEnum>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StepingHoop <>4__this;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x12CFDBC", Offset = "0x12CFDBC", VA = "0x12CFDBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x12CFE04", Offset = "0x12CFE04", VA = "0x12CFE04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x12CF66C", Offset = "0x12CF66C", VA = "0x12CF66C")]
		[DebuggerHidden]
		public <PreviousStepLifeEnum>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x12CFBD8", Offset = "0x12CFBD8", VA = "0x12CFBD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x12CFBDC", Offset = "0x12CFBDC", VA = "0x12CFBDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x12CFDC4", Offset = "0x12CFDC4", VA = "0x12CFDC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Wadlow Parameters")]
	public MovementRail MovementRailScript;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ScoreAtEachStep;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Fails")]
	public int MaxTimeInRowToReset;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _timeInRowToReset;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<MeshRenderer> Lifes;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve PreviousStepLifeAnimation;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _lifeIsAnimating;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool Loop;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public rcIntGameParameter ScoreParemeter;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public rcGameEvent OnShotFailEvent;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcIntGameParameter ComboCountParameter;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HoopBonusCounter HoopBonusCounter;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StepingHoopColorChanger ColorChangerScript;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Audio")]
	public rcAudioSource ATWAudioSource;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<rcAudioEvent> NextSteps;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public rcAudioEvent MissShot;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public rcAudioEvent PreviousStep;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _currentStepIndex;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int _globalStepIndex;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _paliers;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _currentFailTimeInRow;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly int PROPERTY_ID_TURN;

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x12CEF54", Offset = "0x12CEF54", VA = "0x12CEF54")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x12CF0E4", Offset = "0x12CF0E4", VA = "0x12CF0E4")]
	public void SetStepingStart()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x12CF0E8", Offset = "0x12CF0E8", VA = "0x12CF0E8")]
	public void IncreaseStep()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x12CF29C", Offset = "0x12CF29C", VA = "0x12CF29C")]
	public void IncreasePalier()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x12CF4AC", Offset = "0x12CF4AC", VA = "0x12CF4AC")]
	public void DecreaseStep()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x12CF64C", Offset = "0x12CF64C", VA = "0x12CF64C")]
	[ContextMenu("Test Life Animation Previous Step")]
	public void TestAnimLifePreviousStep()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x12CF5D8", Offset = "0x12CF5D8", VA = "0x12CF5D8")]
	[IteratorStateMachine(typeof(<PreviousStepLifeEnum>d__28))]
	public IEnumerator PreviousStepLifeEnum()
	{
		return null;
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x12CF3DC", Offset = "0x12CF3DC", VA = "0x12CF3DC")]
	public void UpdateStep(int stepIndex)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x12CF810", Offset = "0x12CF810", VA = "0x12CF810", Slot = "4")]
	public void OnEventRaised([Optional] UnityEngine.Object ChangedBy)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x12CFA7C", Offset = "0x12CFA7C", VA = "0x12CFA7C")]
	[ContextMenu("Increase Step")]
	public void TestIncreaseStep()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x12CF814", Offset = "0x12CF814", VA = "0x12CF814")]
	[ContextMenu("Fail Shot")]
	public void FailStep()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x12CEFD4", Offset = "0x12CEFD4", VA = "0x12CEFD4")]
	public void ResetStep()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x12CF694", Offset = "0x12CF694", VA = "0x12CF694")]
	public void ResetFailStepCount()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x12CFAF0", Offset = "0x12CFAF0", VA = "0x12CFAF0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x12CFB74", Offset = "0x12CFB74", VA = "0x12CFB74")]
	public StepingHoop()
	{
	}
}
[Token(Token = "0x20001F5")]
public class StepingHoopColorChanger : MonoBehaviour
{
	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer ObjectColorToChange;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> Materials;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int CurrentMaterialIndex;

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x12CF348", Offset = "0x12CF348", VA = "0x12CF348")]
	public void UpdateColor()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x12CFA80", Offset = "0x12CFA80", VA = "0x12CFA80")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x12CFE0C", Offset = "0x12CFE0C", VA = "0x12CFE0C")]
	public StepingHoopColorChanger()
	{
	}
}
[Token(Token = "0x20001F6")]
[CreateAssetMenu(fileName = "L_LeaderboardParameter", menuName = "GBA/Leaderboards/Leaderboard Parameter")]
public class LeaderboardGameParameter : rcGameParameter<Leaderboard>
{
	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x12CFE14", Offset = "0x12CFE14", VA = "0x12CFE14")]
	public void Set(Leaderboard value)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x12CFE74", Offset = "0x12CFE74", VA = "0x12CFE74")]
	public LeaderboardGameParameter()
	{
	}
}
[Token(Token = "0x20001F7")]
[CreateAssetMenu(fileName = "PS_OnlineModeParameter", menuName = "GBA/Play State/Online Mode Parameter")]
public class OnlineModeGameParameter : rcGameParameter<OnlineFlowEnabler.OnlineMode>
{
	[Token(Token = "0x17000223")]
	public bool IsQuickPlay
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x12CFEBC", Offset = "0x12CFEBC", VA = "0x12CFEBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000224")]
	public bool IsPartyMode
	{
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x12CFF00", Offset = "0x12CFF00", VA = "0x12CFF00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000225")]
	public bool IsIdle
	{
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x12CFF44", Offset = "0x12CFF44", VA = "0x12CFF44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x12CFF88", Offset = "0x12CFF88", VA = "0x12CFF88")]
	public void Set(OnlineFlowEnabler.OnlineMode value, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x12D0074", Offset = "0x12D0074", VA = "0x12D0074")]
	public OnlineModeGameParameter()
	{
	}
}
[Token(Token = "0x20001F8")]
[CreateAssetMenu(fileName = "PS_PlayManagerParameter", menuName = "GBA/Play State/Play Manager Parameter")]
public class PlayManagerGameParameter : rcGameParameter<PlayManager>
{
	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x12D00BC", Offset = "0x12D00BC", VA = "0x12D00BC")]
	public void Set(PlayManager value)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x12D011C", Offset = "0x12D011C", VA = "0x12D011C")]
	public PlayManagerGameParameter()
	{
	}
}
[Token(Token = "0x20001F9")]
public class PlayStateManager : MonoBehaviour
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayStateParameter _playStateParameter;

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x12D0164", Offset = "0x12D0164", VA = "0x12D0164")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x12D024C", Offset = "0x12D024C", VA = "0x12D024C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x12D02F4", Offset = "0x12D02F4", VA = "0x12D02F4")]
	public PlayStateManager()
	{
	}
}
[Token(Token = "0x20001FA")]
[CreateAssetMenu(fileName = "PS_PlayStateParameter", menuName = "GBA/Play State/Play State Parameter")]
public class PlayStateParameter : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20001FB")]
	public class ClassicPlayState
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LevelList _currentLevelList;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayManager _currentPlayManager;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RewardManager _currentRewardManager;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isTutorialLevel;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _pendingSuccess;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool _pendingTrainingCompleted;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityAction _onLevelSuccess;

		[Token(Token = "0x17000233")]
		public LevelList CurrentLevelList
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x12D0C44", Offset = "0x12D0C44", VA = "0x12D0C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		public PlayManager CurrentPlayManager
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x12D0C4C", Offset = "0x12D0C4C", VA = "0x12D0C4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		public RewardManager CurrentRewardManager
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x12D0C54", Offset = "0x12D0C54", VA = "0x12D0C54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		public bool IsTutorialLevel
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x12D0C5C", Offset = "0x12D0C5C", VA = "0x12D0C5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000237")]
		public bool PendingSuccess
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x12D0C64", Offset = "0x12D0C64", VA = "0x12D0C64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000238")]
		public bool PendingTrainingCompleted
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x12D0C6C", Offset = "0x12D0C6C", VA = "0x12D0C6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x12D09D0", Offset = "0x12D09D0", VA = "0x12D09D0")]
		public ClassicPlayState(UnlockableManagerSettings unlockSettings)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x12D0A60", Offset = "0x12D0A60", VA = "0x12D0A60")]
		public void ResetState()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x12D0C74", Offset = "0x12D0C74", VA = "0x12D0C74")]
		public void SetCurrentLevelList(LevelList levelList)
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x12D0520", Offset = "0x12D0520", VA = "0x12D0520")]
		public void SetCurrentPlayManager(PlayManager playManager)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x12D0674", Offset = "0x12D0674", VA = "0x12D0674")]
		public void SetCurrentRewardManager(RewardManager rewardManager)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x12D07C4", Offset = "0x12D07C4", VA = "0x12D07C4")]
		public void SetIsTutorialLevel(bool isTutorialLevel)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x12D0B88", Offset = "0x12D0B88", VA = "0x12D0B88")]
		public void ClearPendingSuccess()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x12D0BAC", Offset = "0x12D0BAC", VA = "0x12D0BAC")]
		public void ClearPendingTrainingCompleted()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	public enum RoomBrowserState
	{
		[Token(Token = "0x4000B14")]
		IDLE,
		[Token(Token = "0x4000B15")]
		JOINED_ROOM,
		[Token(Token = "0x4000B16")]
		CREATED_ROOM
	}

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnlockableManagerSettings _unlocksSettings;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LeaderboardGameParameter _currentLeaderboardParameter;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerRef;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ClassicPlayState _classicPlayState;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LeaderboardManager _currentLeaderboardManager;

	[Token(Token = "0x17000226")]
	public Leaderboard CurrentLeaderboard
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x12D02FC", Offset = "0x12D02FC", VA = "0x12D02FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x12D0384", Offset = "0x12D0384", VA = "0x12D0384")]
		set
		{
		}
	}

	[Token(Token = "0x17000227")]
	public LeaderboardManager CurrentLeaderboardManager
	{
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x12D0414", Offset = "0x12D0414", VA = "0x12D0414")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x12D041C", Offset = "0x12D041C", VA = "0x12D041C")]
		set
		{
		}
	}

	[Token(Token = "0x17000228")]
	public int LastUpdatedRank
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x12D04A4", Offset = "0x12D04A4", VA = "0x12D04A4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x12D04AC", Offset = "0x12D04AC", VA = "0x12D04AC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000229")]
	public LevelList CurrentLevelList
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x12D04B4", Offset = "0x12D04B4", VA = "0x12D04B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x12D04D0", Offset = "0x12D04D0", VA = "0x12D04D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700022A")]
	public PlayManager CurrentPlayManager
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x12D04EC", Offset = "0x12D04EC", VA = "0x12D04EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x12D0508", Offset = "0x12D0508", VA = "0x12D0508")]
		set
		{
		}
	}

	[Token(Token = "0x1700022B")]
	public RewardManager CurrentRewardManager
	{
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x12D0640", Offset = "0x12D0640", VA = "0x12D0640")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x12D065C", Offset = "0x12D065C", VA = "0x12D065C")]
		set
		{
		}
	}

	[Token(Token = "0x1700022C")]
	public bool IsTutorialLevel
	{
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x12D078C", Offset = "0x12D078C", VA = "0x12D078C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x12D07A8", Offset = "0x12D07A8", VA = "0x12D07A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	public bool PendingLevelSuccess
	{
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x12D0878", Offset = "0x12D0878", VA = "0x12D0878")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022E")]
	public bool PendingTrainingCompleted
	{
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x12D0894", Offset = "0x12D0894", VA = "0x12D0894")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022F")]
	public ChallengeManagerReference ChallengeManagerRef
	{
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x12D08B0", Offset = "0x12D08B0", VA = "0x12D08B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000230")]
	public bool IsInChallengeMode
	{
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x12D08B8", Offset = "0x12D08B8", VA = "0x12D08B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000231")]
	public bool PendingChallengeEnded
	{
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x12D093C", Offset = "0x12D093C", VA = "0x12D093C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000232")]
	public RoomBrowserState CurrentRoomBrowserState
	{
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x12D09C0", Offset = "0x12D09C0", VA = "0x12D09C0")]
		[CompilerGenerated]
		get
		{
			return default(RoomBrowserState);
		}
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x12D09C8", Offset = "0x12D09C8", VA = "0x12D09C8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x12D01E0", Offset = "0x12D01E0", VA = "0x12D01E0")]
	public void InitState()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x12D02C8", Offset = "0x12D02C8", VA = "0x12D02C8")]
	public void ResetState()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x12D0B6C", Offset = "0x12D0B6C", VA = "0x12D0B6C")]
	public void ClearPendingLevelSuccess()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x12D0B90", Offset = "0x12D0B90", VA = "0x12D0B90")]
	public void ClearPendingTrainingCompleted()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x12D0BB4", Offset = "0x12D0BB4", VA = "0x12D0BB4")]
	public void ClearPendingChallengeEnded()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x12D0C34", Offset = "0x12D0C34", VA = "0x12D0C34")]
	public PlayStateParameter()
	{
	}
}
[Token(Token = "0x20001FD")]
[CreateAssetMenu(fileName = "PS_RewardManagerParameter", menuName = "GBA/Play State/Reward Manager Parameter")]
public class RewardManagerGameParameter : rcGameParameter<RewardManager>
{
	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x12D0C88", Offset = "0x12D0C88", VA = "0x12D0C88")]
	public void Set(RewardManager value)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x12D0CE8", Offset = "0x12D0CE8", VA = "0x12D0CE8")]
	public RewardManagerGameParameter()
	{
	}
}
[Token(Token = "0x20001FE")]
public class Quest1RenderPipelineUpdater : MonoBehaviour
{
	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderPipelineAsset Quest1SpecificRenderPipeline;

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x12D0D30", Offset = "0x12D0D30", VA = "0x12D0D30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x12D0DA4", Offset = "0x12D0DA4", VA = "0x12D0DA4")]
	[ContextMenu("Force Quest 1 RenderPipeline")]
	public void ForceQuest1RenderPipeline()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x12D0DC8", Offset = "0x12D0DC8", VA = "0x12D0DC8")]
	public Quest1RenderPipelineUpdater()
	{
	}
}
[Token(Token = "0x20001FF")]
public class RandomTaggedHoopUpdater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000200")]
	protected class BallTagUpdate
	{
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BallTag _ballTag;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material HoopTaggedMaterial;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite DaltonismeFigure;

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x12D11D0", Offset = "0x12D11D0", VA = "0x12D11D0")]
		public BallTagUpdate()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000201")]
	protected class HoopTagged
	{
		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TaggedHoopManager _taggedHoopManager;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer _taggedHoopRenderer;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image HoopDaltonismeFigureImage;

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x12D11D8", Offset = "0x12D11D8", VA = "0x12D11D8")]
		public HoopTagged()
		{
		}
	}

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcIntGameParameter SuccessfulShotsParameter;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<BallTagUpdate> BallTagsUpdate;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<HoopTagged> TaggedHoopManagers;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnTaggedUpdate;

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x12D0DD0", Offset = "0x12D0DD0", VA = "0x12D0DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x12D0EB4", Offset = "0x12D0EB4", VA = "0x12D0EB4")]
	public void OnScore(int toValue, int fromValue, UnityEngine.Object objectFrom)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x12D0F30", Offset = "0x12D0F30", VA = "0x12D0F30")]
	[ContextMenu("Update Tags")]
	public void UpdateTags()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x12D10E4", Offset = "0x12D10E4", VA = "0x12D10E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x12D11C8", Offset = "0x12D11C8", VA = "0x12D11C8")]
	public RandomTaggedHoopUpdater()
	{
	}
}
[Token(Token = "0x2000202")]
public class AvatarBodyManager : MonoBehaviour
{
	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AvatarLoader _avatarLoader;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private rcAvatar _rcAvatar;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _baseHips;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _rightHandRPM;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _leftHandRPM;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _headRPM;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _hipsRPM;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _armRightRPM;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _armLeftRPM;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _forearmRightRPM;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _forearmLeftRPM;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _leftUpLegRPM;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _rightUpLegRPM;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _slaveLeftHand;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform _slaveRightHand;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform _thirdPersonLeftHandTarget;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform _thirdPersonRightHandTarget;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform _leftPoleIK;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform _rightPoleIK;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform _centerEyeAnchor;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _thirdPersonModeEnabled;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform _firstPersonTransform;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _isLocalPlayer;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject _localAvatarShirt;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AvatarHand _leftAvatarHand;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AvatarHand _rightAvatarHand;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private rcFABRIKSolver _leftHandIK;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private rcFABRIKSolver _rightHandIK;

	[Token(Token = "0x17000239")]
	public bool ThirdPersonModeEnabled
	{
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x12D11E0", Offset = "0x12D11E0", VA = "0x12D11E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x12D11E8", Offset = "0x12D11E8", VA = "0x12D11E8")]
	public void Initialize(AvatarLoader loader, rcAvatar avatar, AvatarParameters avatarParameters, bool isLocalPlayer)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x12D1D60", Offset = "0x12D1D60", VA = "0x12D1D60")]
	public void SetAxis(GameObject prefab)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x12D1F54", Offset = "0x12D1F54", VA = "0x12D1F54")]
	public void SetThirdPersonTransform(Transform newHipsParent)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x12D223C", Offset = "0x12D223C", VA = "0x12D223C")]
	public void ResetFirstPersonView()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x12D23AC", Offset = "0x12D23AC", VA = "0x12D23AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x12D268C", Offset = "0x12D268C", VA = "0x12D268C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x12D146C", Offset = "0x12D146C", VA = "0x12D146C")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x12D14FC", Offset = "0x12D14FC", VA = "0x12D14FC")]
	private void UpdateHips()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x12D26C8", Offset = "0x12D26C8", VA = "0x12D26C8")]
	private void UpdateRPMHands()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x12D23B0", Offset = "0x12D23B0", VA = "0x12D23B0")]
	private void GetTransformsFromRPMAvatar()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x12D1984", Offset = "0x12D1984", VA = "0x12D1984")]
	[ContextMenu("Hide Hands")]
	private void HideHands()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x12D2170", Offset = "0x12D2170", VA = "0x12D2170")]
	[ContextMenu("Show Hands")]
	private void ShowHands()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x12D1A50", Offset = "0x12D1A50", VA = "0x12D1A50")]
	private void HideLegs()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x12D1688", Offset = "0x12D1688", VA = "0x12D1688")]
	private void SetupIK()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x12D2138", Offset = "0x12D2138", VA = "0x12D2138")]
	private void SetThirdPersonIK()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x12D2374", Offset = "0x12D2374", VA = "0x12D2374")]
	private void SetFirstPersonIK()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x12D2AA8", Offset = "0x12D2AA8", VA = "0x12D2AA8")]
	public AvatarBodyManager()
	{
	}
}
[Token(Token = "0x2000203")]
public class AvatarHand : MonoBehaviour
{
	[Token(Token = "0x2000204")]
	public enum Handedness
	{
		[Token(Token = "0x4000B43")]
		Left,
		[Token(Token = "0x4000B44")]
		Right
	}

	[Token(Token = "0x2000205")]
	private class TransformPair
	{
		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform Source;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Target;

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x12D2AB0", Offset = "0x12D2AB0", VA = "0x12D2AB0")]
		public TransformPair()
		{
		}
	}

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] _sourceTransforms;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<TransformPair> _transformPairs;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Handedness _handedness;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _thirdPersonIKTarget;

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x12D1B1C", Offset = "0x12D1B1C", VA = "0x12D1B1C")]
	public void Initialize(Transform wrist, Transform thirdPersonHandIKTarget, Handedness handedness)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x12D2AB8", Offset = "0x12D2AB8", VA = "0x12D2AB8")]
	private void InitializeFinger(Transform wrist, string fingerName, rcXRInputs.rcHandData.Bones boneFingerBase)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x12D2D58", Offset = "0x12D2D58", VA = "0x12D2D58")]
	private bool IsFingerTip(rcXRInputs.rcHandData.Bones bone)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x12D2CA0", Offset = "0x12D2CA0", VA = "0x12D2CA0")]
	private Transform FindFingerBase(Transform wrist, string fingerName)
	{
		return null;
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x12D2D98", Offset = "0x12D2D98", VA = "0x12D2D98")]
	private Quaternion GetRotationTransform(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x12D29C8", Offset = "0x12D29C8", VA = "0x12D29C8")]
	public void UpdateHand()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x12D2774", Offset = "0x12D2774", VA = "0x12D2774")]
	public void UpdateThirdPersonHand(Transform baseHips, Transform thirdPersonHips)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x12D2E04", Offset = "0x12D2E04", VA = "0x12D2E04")]
	public AvatarHand()
	{
	}
}
[Token(Token = "0x2000206")]
[CreateAssetMenu(fileName = "AvatarList", menuName = "GBA/Avatars/Avatar List")]
public class AvatarList : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000207")]
	public class Avatar
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Prefab;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D Thumbnail;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D FullbodyThumbnail;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x12D2EDC", Offset = "0x12D2EDC", VA = "0x12D2EDC")]
		public Avatar()
		{
		}
	}

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Avatar[] _avatars;

	[Token(Token = "0x1700023A")]
	public int Length
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x12D2E8C", Offset = "0x12D2E8C", VA = "0x12D2E8C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700023B")]
	public Avatar this[int i]
	{
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x12D2EA4", Offset = "0x12D2EA4", VA = "0x12D2EA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x12D2ED4", Offset = "0x12D2ED4", VA = "0x12D2ED4")]
	public AvatarList()
	{
	}
}
[Token(Token = "0x2000208")]
public class AvatarLoader : NetworkBehaviour
{
	[Token(Token = "0x2000209")]
	[CompilerGenerated]
	private sealed class <reloadAvatarCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarLoader <>4__this;

		[Token(Token = "0x17000245")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x12D5590", Offset = "0x12D5590", VA = "0x12D5590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x12D55D8", Offset = "0x12D55D8", VA = "0x12D55D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x12D3B58", Offset = "0x12D3B58", VA = "0x12D3B58")]
		[DebuggerHidden]
		public <reloadAvatarCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x12D53F0", Offset = "0x12D53F0", VA = "0x12D53F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x12D53F4", Offset = "0x12D53F4", VA = "0x12D53F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x12D5598", Offset = "0x12D5598", VA = "0x12D5598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B4C")]
	private const string FILENAME_AVATAR_URL = "SavedAvatarUrl.txt";

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcAvatar _rcAvatar;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AvatarParameters _avatarParameters;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar(hook = "onAvatarUpdatedHook")]
	private string _avatarUrl;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Texture2D _avatarThumbnail;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Texture2D _avatarFullBodyThumbnail;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _avatarRPMGameObject;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityAction OnAvatarLoaded;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityAction OnMeshLoaded;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityAction<string> OnMeshLoadingFailed;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityAction<Texture2D> OnThumbnailLoaded;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityAction<string> OnThumbnailLoadError;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UnityAction<Texture2D> OnFullbodyThumbnailLoaded;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityAction<string> OnFullbodyThumbnailLoadError;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _isMeshLoading;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool _isMeshLoaded;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool _isThumbnailLoaded;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	private bool _isFullbodyThumbnailLoaded;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private List<string> _namesOfReadyPlayerMeRenderersToDisable;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AvatarList _defaultAvatars;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AvatarRenderLoader _thumbnailFetcher;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AvatarRenderLoader _fullbodyThumbnailFetcher;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject _localAvatarShirt;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AvatarBodyManager _bodyManager;

	[Token(Token = "0x1700023C")]
	private string userFolderPath
	{
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x12D2EE4", Offset = "0x12D2EE4", VA = "0x12D2EE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023D")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x12D2F00", Offset = "0x12D2F00", VA = "0x12D2F00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023E")]
	public Texture2D AvatarThumbnail
	{
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x12D2F9C", Offset = "0x12D2F9C", VA = "0x12D2F9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023F")]
	public Texture2D AvatarFullBodyThumbnail
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x12D2FA4", Offset = "0x12D2FA4", VA = "0x12D2FA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000240")]
	public bool IsMeshLoading
	{
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x12D2FAC", Offset = "0x12D2FAC", VA = "0x12D2FAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000241")]
	public bool IsMeshLoaded
	{
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x12D2FB4", Offset = "0x12D2FB4", VA = "0x12D2FB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000242")]
	public bool IsThumbnailLoaded
	{
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x12D2FBC", Offset = "0x12D2FBC", VA = "0x12D2FBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000243")]
	public bool IsFullbodyThumbnailLoaded
	{
		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x12D2FC4", Offset = "0x12D2FC4", VA = "0x12D2FC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000244")]
	public string Network_avatarUrl
	{
		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x12D4880", Offset = "0x12D4880", VA = "0x12D4880")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x12D3798", Offset = "0x12D3798", VA = "0x12D3798")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x12D2FCC", Offset = "0x12D2FCC", VA = "0x12D2FCC")]
	public bool IsUsingDefaultAvatar(out int defaultAvatarIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x12D2FD8", Offset = "0x12D2FD8", VA = "0x12D2FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x12D2FE4", Offset = "0x12D2FE4", VA = "0x12D2FE4", Slot = "12")]
	public override void OnStartLocalPlayer()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x12D344C", Offset = "0x12D344C", VA = "0x12D344C", Slot = "10")]
	public override void OnStartClient()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x12D3474", Offset = "0x12D3474", VA = "0x12D3474", Slot = "11")]
	public override void OnStopClient()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x12D36EC", Offset = "0x12D36EC", VA = "0x12D36EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x12D339C", Offset = "0x12D339C", VA = "0x12D339C")]
	private void initialize()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x12D39CC", Offset = "0x12D39CC", VA = "0x12D39CC")]
	public void SelectAvatar(string url)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x12D3B24", Offset = "0x12D3B24", VA = "0x12D3B24")]
	public void SelectDefaultAvatar(int index)
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x12D3AB0", Offset = "0x12D3AB0", VA = "0x12D3AB0")]
	[IteratorStateMachine(typeof(<reloadAvatarCoroutine>d__50))]
	private IEnumerator reloadAvatarCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x12D38AC", Offset = "0x12D38AC", VA = "0x12D38AC")]
	private void loadAvatarAndThumbnail()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x12D3CBC", Offset = "0x12D3CBC", VA = "0x12D3CBC")]
	private void loadAvatar()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x12D3B80", Offset = "0x12D3B80", VA = "0x12D3B80")]
	private void loadDefaultAvatarAndThumbnail(int avatarIndex)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x12D4040", Offset = "0x12D4040", VA = "0x12D4040")]
	private void avatarLoadingCompleted(object sender, CompletionEventArgs args)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x12D4068", Offset = "0x12D4068", VA = "0x12D4068")]
	private void avatarLoadingFailed(object sender, FailureEventArgs args)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x12D40A0", Offset = "0x12D40A0", VA = "0x12D40A0")]
	private void avatarLoadingProgressChanged(object sender, ProgressChangeEventArgs args)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x12D3E3C", Offset = "0x12D3E3C", VA = "0x12D3E3C")]
	private void setupAvatarOnceLoaded()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x12D30AC", Offset = "0x12D30AC", VA = "0x12D30AC")]
	private void initializeThumbnailsRenderers()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x12D3478", Offset = "0x12D3478", VA = "0x12D3478")]
	private void closeThumbnailsRenderers()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x12D4204", Offset = "0x12D4204", VA = "0x12D4204")]
	private void onThumbnailFetchingError(FailureType failure, string errorMessage)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x12D3F98", Offset = "0x12D3F98", VA = "0x12D3F98")]
	private void onThumbnailFetched(Texture2D thumbnail)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x12D3FEC", Offset = "0x12D3FEC", VA = "0x12D3FEC")]
	private void onFullbodyThumbnailFetched(Texture2D thumbnail)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x12D42B0", Offset = "0x12D42B0", VA = "0x12D42B0")]
	private void onFullbodyThumbnailFetchingError(FailureType failure, string errorMessage)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x12D41D0", Offset = "0x12D41D0", VA = "0x12D41D0")]
	private void tryRaiseAvatarLoadedEvent()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x12D40A4", Offset = "0x12D40A4", VA = "0x12D40A4")]
	[Command(channel = 0)]
	private void CmdUpdateAvatarUrl(string newAvatarUrl)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x12D435C", Offset = "0x12D435C", VA = "0x12D435C")]
	private void onAvatarUpdatedHook(string oldAvatarUrl, string newAvatarUrl)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x12D4394", Offset = "0x12D4394", VA = "0x12D4394")]
	[Command(channel = 0)]
	private void CmdThirdPersonView(NetworkIdentity networkAnchor)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x12D44C0", Offset = "0x12D44C0", VA = "0x12D44C0")]
	[ClientRpc(includeOwner = false)]
	private void RpcToggleThirdPerson()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x12D45AC", Offset = "0x12D45AC", VA = "0x12D45AC")]
	[Command(channel = 0)]
	private void CmdFirstPersonView()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x12D4698", Offset = "0x12D4698", VA = "0x12D4698")]
	[ClientRpc(channel = 0, includeOwner = false)]
	private void RpcFirstPersonView()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x12D4784", Offset = "0x12D4784", VA = "0x12D4784")]
	public void ThirdPersonView(NetworkIdentity networkAnchor)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x12D47D0", Offset = "0x12D47D0", VA = "0x12D47D0")]
	[ContextMenu("Third person")]
	public void ThirdPersonView(Transform anchor)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x12D47E8", Offset = "0x12D47E8", VA = "0x12D47E8")]
	[ContextMenu("First person")]
	private void FirstPersonView()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x12D480C", Offset = "0x12D480C", VA = "0x12D480C")]
	public AvatarLoader()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x12D487C", Offset = "0x12D487C", VA = "0x12D487C")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x12D4888", Offset = "0x12D4888", VA = "0x12D4888")]
	protected void UserCode_CmdUpdateAvatarUrl(string newAvatarUrl)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x12D488C", Offset = "0x12D488C", VA = "0x12D488C")]
	protected static void InvokeUserCode_CmdUpdateAvatarUrl(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x12D4A04", Offset = "0x12D4A04", VA = "0x12D4A04")]
	protected void UserCode_CmdThirdPersonView(NetworkIdentity networkAnchor)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x12D4A08", Offset = "0x12D4A08", VA = "0x12D4A08")]
	protected static void InvokeUserCode_CmdThirdPersonView(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x12D4B78", Offset = "0x12D4B78", VA = "0x12D4B78")]
	protected void UserCode_RpcToggleThirdPerson()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x12D4BF8", Offset = "0x12D4BF8", VA = "0x12D4BF8")]
	protected static void InvokeUserCode_RpcToggleThirdPerson(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x12D4CF4", Offset = "0x12D4CF4", VA = "0x12D4CF4")]
	protected void UserCode_CmdFirstPersonView()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x12D4CF8", Offset = "0x12D4CF8", VA = "0x12D4CF8")]
	protected static void InvokeUserCode_CmdFirstPersonView(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x12D4E28", Offset = "0x12D4E28", VA = "0x12D4E28")]
	protected void UserCode_RpcFirstPersonView()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x12D4E40", Offset = "0x12D4E40", VA = "0x12D4E40")]
	protected static void InvokeUserCode_RpcFirstPersonView(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x12D4F40", Offset = "0x12D4F40", VA = "0x12D4F40")]
	static AvatarLoader()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x12D5228", Offset = "0x12D5228", VA = "0x12D5228", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x12D52EC", Offset = "0x12D52EC", VA = "0x12D52EC", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Serializable]
[Token(Token = "0x200020A")]
public class AvatarParameters
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform Hips;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform SlaveLeftHand;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform SlaveRightHand;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ThirdPersonLeftHandTarget;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ThirdPersonRightHandTarget;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform LeftPoleIK;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform RightPoleIK;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform CenterEyeAnchor;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject LocalAvatarShirt;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AvatarHand LeftAvatarHand;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AvatarHand RightAvatarHand;

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x12D55E0", Offset = "0x12D55E0", VA = "0x12D55E0")]
	public AvatarParameters()
	{
	}
}
[Token(Token = "0x200020B")]
[CreateAssetMenu(menuName = "GBA/Rewards/Demo Unlockable Gameplay")]
public class DemoUnlockableGameplay : UnlockableGameplay
{
	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[SerializeField]
	private bool _unlockedInDemoBuild;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[SerializeField]
	private bool _unlockedInBuild;

	[Token(Token = "0x17000247")]
	public override bool Unlocked
	{
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x12D55E8", Offset = "0x12D55E8", VA = "0x12D55E8", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x12D55F0", Offset = "0x12D55F0", VA = "0x12D55F0")]
	public DemoUnlockableGameplay()
	{
	}
}
[Token(Token = "0x200020C")]
public struct EndGameState
{
	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SuccessfulShots;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double ElapsedTime;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public double PlayDuration;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayManager.PlayType PlayType;

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x12D564C", Offset = "0x12D564C", VA = "0x12D564C")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200020D")]
[CreateAssetMenu(menuName = "GBA/Rewards/UnlockNextChallenge Unlockable")]
public class NextChallengeUnlock : Unlockable
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerRef;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ChallengePresetsSettings _challengePresets;

	[Token(Token = "0x17000248")]
	public override bool Unlocked
	{
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x12D5658", Offset = "0x12D5658", VA = "0x12D5658", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x12D5660", Offset = "0x12D5660", VA = "0x12D5660", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x12D5664", Offset = "0x12D5664", VA = "0x12D5664", Slot = "11")]
	public override void Unlock()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x12D5858", Offset = "0x12D5858", VA = "0x12D5858")]
	public NextChallengeUnlock()
	{
	}
}
[Token(Token = "0x200020E")]
[CreateAssetMenu(menuName = "GBA/Rewards/Remote Unlockable Gameplay")]
public class RemoteUnlockableGameplay : UnlockableGameplay
{
	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x12D58B8", Offset = "0x12D58B8", VA = "0x12D58B8")]
	public void RemotelyUnlock(bool unlock)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x12D59C8", Offset = "0x12D59C8", VA = "0x12D59C8")]
	public RemoteUnlockableGameplay()
	{
	}
}
[Token(Token = "0x200020F")]
[CreateAssetMenu(menuName = "GBA/Rewards/Remote Unlockable Level")]
public class RemoteUnlockableLevel : UnlockableLevel
{
	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x12D59CC", Offset = "0x12D59CC", VA = "0x12D59CC")]
	public void RemotelyUnlock(bool unlock)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x12D5AE4", Offset = "0x12D5AE4", VA = "0x12D5AE4")]
	public RemoteUnlockableLevel()
	{
	}
}
[Token(Token = "0x2000210")]
public class RewardManager : MonoBehaviour
{
	[Token(Token = "0x2000211")]
	[CompilerGenerated]
	private sealed class <delayedSuccessCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RewardManager <>4__this;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x12D6184", Offset = "0x12D6184", VA = "0x12D6184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x12D61CC", Offset = "0x12D61CC", VA = "0x12D61CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x12D606C", Offset = "0x12D606C", VA = "0x12D606C")]
		[DebuggerHidden]
		public <delayedSuccessCoroutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x12D609C", Offset = "0x12D609C", VA = "0x12D609C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x12D60A0", Offset = "0x12D60A0", VA = "0x12D60A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x12D618C", Offset = "0x12D618C", VA = "0x12D618C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RewardParameters _parameters;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayManager _playManager;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnLevelFailure;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnLevelSuccess;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _onSuccessDelay;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaitForSeconds _successDelayYield;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LeaderboardManager _leaderboardManager;

	[Token(Token = "0x17000249")]
	public RewardParameters Rewards
	{
		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x12D5B40", Offset = "0x12D5B40", VA = "0x12D5B40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700024A")]
	public float SuccessDelay
	{
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x12D5B48", Offset = "0x12D5B48", VA = "0x12D5B48")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700024B")]
	public int LastPlayWonStars
	{
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x12D5B50", Offset = "0x12D5B50", VA = "0x12D5B50")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700024C")]
	public int SavedStarsBeforeLastPlay
	{
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x12D5B6C", Offset = "0x12D5B6C", VA = "0x12D5B6C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700024D")]
	public int SavedStars
	{
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x12D5BC4", Offset = "0x12D5BC4", VA = "0x12D5BC4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x12D5CC4", Offset = "0x12D5CC4", VA = "0x12D5CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x12D5D90", Offset = "0x12D5D90", VA = "0x12D5D90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x12D5E68", Offset = "0x12D5E68", VA = "0x12D5E68")]
	private void computeRewards()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x12D5FF8", Offset = "0x12D5FF8", VA = "0x12D5FF8")]
	[IteratorStateMachine(typeof(<delayedSuccessCoroutine>d__20))]
	private IEnumerator delayedSuccessCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x12D6094", Offset = "0x12D6094", VA = "0x12D6094")]
	public RewardManager()
	{
	}
}
[Token(Token = "0x2000212")]
[CreateAssetMenu(menuName = "GBA/Rewards/RewardParameters")]
public class RewardParameters : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000213")]
	public struct RewardGoal
	{
		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int TargetShots;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double TargetTimeSeconds;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Unlockable[] Unlockables;

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x12D6770", Offset = "0x12D6770", VA = "0x12D6770")]
		public void UnlockContent(List<Unlockable> unlocksList)
		{
		}
	}

	[Token(Token = "0x2000215")]
	public enum RewardMode
	{
		[Token(Token = "0x4000B94")]
		TimeReward,
		[Token(Token = "0x4000B95")]
		ShotsReward
	}

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LevelSettings _levelId;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _savedStarsBeforeLastPlay;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RewardMode _rewardMode;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RewardGoal _firstStarGoal;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RewardGoal _secondStarGoal;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private RewardGoal _thirdStarGoal;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Unlockable> _currentUnlocks;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private EndGameState _endState;

	[Token(Token = "0x17000250")]
	public int SavedStars
	{
		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x12D5BDC", Offset = "0x12D5BDC", VA = "0x12D5BDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000251")]
	public int LastPlayWonStars
	{
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x12D63B8", Offset = "0x12D63B8", VA = "0x12D63B8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x12D63C0", Offset = "0x12D63C0", VA = "0x12D63C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000252")]
	public int SavedStarsBeforeLastPlay
	{
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x12D5B9C", Offset = "0x12D5B9C", VA = "0x12D5B9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000253")]
	public RewardMode GoalType
	{
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x12D63C8", Offset = "0x12D63C8", VA = "0x12D63C8")]
		get
		{
			return default(RewardMode);
		}
	}

	[Token(Token = "0x17000254")]
	public RewardGoal FirstStarGoal
	{
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x12D63D0", Offset = "0x12D63D0", VA = "0x12D63D0")]
		get
		{
			return default(RewardGoal);
		}
	}

	[Token(Token = "0x17000255")]
	public RewardGoal SecondStarGoal
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x12D63E4", Offset = "0x12D63E4", VA = "0x12D63E4")]
		get
		{
			return default(RewardGoal);
		}
	}

	[Token(Token = "0x17000256")]
	public RewardGoal ThirdStarGoal
	{
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x12D63F8", Offset = "0x12D63F8", VA = "0x12D63F8")]
		get
		{
			return default(RewardGoal);
		}
	}

	[Token(Token = "0x17000257")]
	public ReadOnlyCollection<Unlockable> CurrentUnlocks
	{
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x12D640C", Offset = "0x12D640C", VA = "0x12D640C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000258")]
	public EndGameState EndState
	{
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x12D65BC", Offset = "0x12D65BC", VA = "0x12D65BC")]
		get
		{
			return default(EndGameState);
		}
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x12D5FBC", Offset = "0x12D5FBC", VA = "0x12D5FBC")]
		set
		{
		}
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x12D6244", Offset = "0x12D6244", VA = "0x12D6244")]
	[ContextMenu("Complete Level")]
	private void CompleteLevel()
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x12D5FC8", Offset = "0x12D5FC8", VA = "0x12D5FC8")]
	public bool Won()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x12D6670", Offset = "0x12D6670", VA = "0x12D6670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x12D645C", Offset = "0x12D645C", VA = "0x12D645C")]
	private void ComputeRewards()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x12D65C8", Offset = "0x12D65C8", VA = "0x12D65C8")]
	private bool ReachedGoal(RewardGoal goal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x12D667C", Offset = "0x12D667C", VA = "0x12D667C")]
	public void ApplyUnlocks(int starsCount, bool forceApply = false, [Optional] List<Unlockable> unlocksList)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x12D6B18", Offset = "0x12D6B18", VA = "0x12D6B18")]
	public RewardParameters()
	{
	}
}
[Token(Token = "0x2000216")]
[CreateAssetMenu(menuName = "GBA/Rewards/Unlockable")]
public abstract class Unlockable : ScriptableObject
{
	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string UnlockablePath;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcLocalizedText _localizedDisplayTitle;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcLocalizedText _localizedDisplayName;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _silentUnlock;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnLock;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnUnlock;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _unlocked;

	[Token(Token = "0x17000259")]
	public virtual bool SilentUnlock
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x12D6C4C", Offset = "0x12D6C4C", VA = "0x12D6C4C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700025A")]
	public virtual bool Unlocked
	{
		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x12D6C54", Offset = "0x12D6C54", VA = "0x12D6C54", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700025B")]
	public Unlockable UnlockableParent
	{
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x12D6C5C", Offset = "0x12D6C5C", VA = "0x12D6C5C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x12D6C64", Offset = "0x12D6C64", VA = "0x12D6C64")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x1700025C")]
	public virtual string DisplayTitle
	{
		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x12D6C6C", Offset = "0x12D6C6C", VA = "0x12D6C6C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025D")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x12D6D08", Offset = "0x12D6D08", VA = "0x12D6D08", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E80")]
	public abstract void Init();

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x12D6DA4", Offset = "0x12D6DA4", VA = "0x12D6DA4", Slot = "9")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x12D6DAC", Offset = "0x12D6DAC", VA = "0x12D6DAC", Slot = "10")]
	public virtual void Lock()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x12D5834", Offset = "0x12D5834", VA = "0x12D5834", Slot = "11")]
	public virtual void Unlock()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x12D58B0", Offset = "0x12D58B0", VA = "0x12D58B0")]
	protected Unlockable()
	{
	}
}
[Token(Token = "0x2000217")]
[CreateAssetMenu(menuName = "GBA/Rewards/Unlockable Gameplay")]
public class UnlockableGameplay : Unlockable
{
	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnlockableGameplay[] _subUnlockables;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool _isMainMenuEntry;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _initialized;

	[Token(Token = "0x1700025E")]
	public bool IsMainMenuEntry
	{
		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x12D6E38", Offset = "0x12D6E38", VA = "0x12D6E38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x12D6E40", Offset = "0x12D6E40", VA = "0x12D6E40", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x12D6FD0", Offset = "0x12D6FD0", VA = "0x12D6FD0", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x12D58C4", Offset = "0x12D58C4", VA = "0x12D58C4", Slot = "11")]
	public override void Unlock()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x12D55F4", Offset = "0x12D55F4", VA = "0x12D55F4")]
	public UnlockableGameplay()
	{
	}
}
[Token(Token = "0x2000218")]
[CreateAssetMenu(menuName = "GBA/Rewards/Unlockable Level")]
public class UnlockableLevel : Unlockable
{
	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private LevelList _sourceList;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LevelSettings _levelToUnlock;

	[Token(Token = "0x1700025F")]
	public LevelList SourceList
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x12D71E0", Offset = "0x12D71E0", VA = "0x12D71E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000260")]
	public override bool Unlocked
	{
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x12D71E8", Offset = "0x12D71E8", VA = "0x12D71E8", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x12D736C", Offset = "0x12D736C", VA = "0x12D736C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x12D59D8", Offset = "0x12D59D8", VA = "0x12D59D8", Slot = "11")]
	public override void Unlock()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x12D5AE8", Offset = "0x12D5AE8", VA = "0x12D5AE8")]
	public UnlockableLevel()
	{
	}
}
[Token(Token = "0x2000219")]
public class UnlockableListener : MonoBehaviour
{
	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Unlockable _unlockable;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool CheckAtStart;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _onLockedEvent;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent _onUnlockedEvent;

	[Token(Token = "0x17000261")]
	public Unlockable UnlockableObject
	{
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x12D7388", Offset = "0x12D7388", VA = "0x12D7388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x12D7390", Offset = "0x12D7390", VA = "0x12D7390")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x12D756C", Offset = "0x12D756C", VA = "0x12D756C")]
	public void CheckUnlockable()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x12D760C", Offset = "0x12D760C", VA = "0x12D760C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x12D772C", Offset = "0x12D772C", VA = "0x12D772C")]
	private void setUnlocked()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x12D7740", Offset = "0x12D7740", VA = "0x12D7740")]
	private void setLocked()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x12D7754", Offset = "0x12D7754", VA = "0x12D7754")]
	public UnlockableListener()
	{
	}
}
[Token(Token = "0x200021A")]
public class UnlockableManager : rcSingleton<UnlockableManager>
{
	[Serializable]
	[Token(Token = "0x200021B")]
	public struct UnlockableGameplayData
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool Unlocked;
	}

	[Serializable]
	[Token(Token = "0x200021C")]
	public struct UnlockableLevelData
	{
		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Stars;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Id;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool Unlocked;
	}

	[Serializable]
	[Token(Token = "0x200021D")]
	public struct UnlockableSkinData
	{
		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool Unlocked;
	}

	[Serializable]
	[Token(Token = "0x200021E")]
	public struct UnlockableContents
	{
		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Version;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool TutoCompleted;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnlockableGameplayData[] Gameplays;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnlockableLevelData[] Levels;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnlockableSkinData[] Skins;

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x12D8D98", Offset = "0x12D8D98", VA = "0x12D8D98")]
		public void AdjustLevelsCount(int levelCount)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x12D8E4C", Offset = "0x12D8E4C", VA = "0x12D8E4C")]
		public void AdjustUnlockableList(List<UnlockableGameplay> gameplays)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x12D99C4", Offset = "0x12D99C4", VA = "0x12D99C4")]
		private bool IsGameplayUnlocked(UnlockableGameplay unlockableGameplay)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnlockableManagerSettings _settings;

	[NonSerialized]
	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Unlockable[] UnlockedDuringGameUpdate;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnlockableContents _unlockableContents;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnCompletedLevelWith3Stars;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnProgressLoaded;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent<XRInputTracker.XRInputSystem> OnTutoNotCompleted;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameVersionHandler _gameVersionHandler;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private rcBoolGameParameter _isUsingControllerParameter;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private XRInputSystemParameter _inputSystemParameter;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _userFolderCache;

	[Token(Token = "0x17000262")]
	private string UserFolderPathCache
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x12D7764", Offset = "0x12D7764", VA = "0x12D7764")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000263")]
	public bool SkipFTE
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x12D799C", Offset = "0x12D799C", VA = "0x12D799C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000264")]
	public bool IsTutoCompleted
	{
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x12D79B8", Offset = "0x12D79B8", VA = "0x12D79B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000265")]
	public int LevelCount
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x12D79EC", Offset = "0x12D79EC", VA = "0x12D79EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000266")]
	public bool TrainingCompleted
	{
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x12D7A08", Offset = "0x12D7A08", VA = "0x12D7A08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x12D781C", Offset = "0x12D781C", VA = "0x12D781C")]
	private string InputMethodSubPath(bool isUsingController)
	{
		return null;
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x12D7884", Offset = "0x12D7884", VA = "0x12D7884")]
	private string GetUnlockableContentsFilePath(bool isUsingController)
	{
		return null;
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x12D7950", Offset = "0x12D7950", VA = "0x12D7950")]
	private string GetUnlockableContentsFilePath()
	{
		return null;
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x12D7A30", Offset = "0x12D7A30", VA = "0x12D7A30", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x12D7AF8", Offset = "0x12D7AF8", VA = "0x12D7AF8")]
	private void OnSwitchInputMethod(XRInputTracker.XRInputSystem newSystem, XRInputTracker.XRInputSystem previousSystem, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x12D83FC", Offset = "0x12D83FC", VA = "0x12D83FC")]
	public bool IsTutorialLevel(LevelSettings levelId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x12D72D0", Offset = "0x12D72D0", VA = "0x12D72D0")]
	public bool IsLevelUnlocked(LevelSettings levelId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x12D7370", Offset = "0x12D7370", VA = "0x12D7370")]
	public void UnlockLevel(LevelSettings levelId)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x12D84E0", Offset = "0x12D84E0", VA = "0x12D84E0")]
	public void UnlockLevel(int id)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x12D854C", Offset = "0x12D854C", VA = "0x12D854C")]
	public void UnlockLevelAndRewards(int id)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x12D86A4", Offset = "0x12D86A4", VA = "0x12D86A4")]
	public void GetGameCompletion(out int star1, out int star2, out int star3)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x12D873C", Offset = "0x12D873C", VA = "0x12D873C")]
	public int GetLevelListCompletion(LevelList levelList, int star = 1)
	{
		return default(int);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x12D87D0", Offset = "0x12D87D0", VA = "0x12D87D0")]
	public int GetLevelUnlockCompletion()
	{
		return default(int);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x12D8830", Offset = "0x12D8830", VA = "0x12D8830")]
	public bool IsLastTrainingLevel(LevelSettings levelId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x12D62C0", Offset = "0x12D62C0", VA = "0x12D62C0")]
	public void SetLevelStars(LevelSettings levelId, int stars)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x12D61D4", Offset = "0x12D61D4", VA = "0x12D61D4")]
	public int GetLevelStars(LevelSettings levelId)
	{
		return default(int);
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x12D7130", Offset = "0x12D7130", VA = "0x12D7130")]
	public void UnlockGameplay(UnlockableGameplay unlockableGameplay)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x12D88A0", Offset = "0x12D88A0", VA = "0x12D88A0")]
	public void UnlockSkin(UnlockableSkin unlockable)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x12D7B60", Offset = "0x12D7B60", VA = "0x12D7B60")]
	[ContextMenu("Save")]
	public void Save([Optional] string filePathOverride)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x12D8950", Offset = "0x12D8950", VA = "0x12D8950")]
	private bool IsSaveOK()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x12D8980", Offset = "0x12D8980", VA = "0x12D8980")]
	[ContextMenu("Reset Save")]
	public void ResetSave()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x12D8D90", Offset = "0x12D8D90", VA = "0x12D8D90")]
	[ContextMenu("Load")]
	public void Load()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x12D7E24", Offset = "0x12D7E24", VA = "0x12D7E24")]
	private void Load(string filePathOverride)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x12D9784", Offset = "0x12D9784", VA = "0x12D9784")]
	public void SetTutoCompleted()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x12D9698", Offset = "0x12D9698", VA = "0x12D9698")]
	private void ShowChangelogWhenLoadingUnexpectedSave()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x12D9318", Offset = "0x12D9318", VA = "0x12D9318")]
	private Unlockable[] FindAndSortNewlyUnlocked(UnlockableGameplayData[] unlockedBeforeForceUnlock, UnlockableGameplayData[] unlockedAfterForceUnlock)
	{
		return null;
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x12D9798", Offset = "0x12D9798", VA = "0x12D9798")]
	public void ResetUnlockables()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x12D8FBC", Offset = "0x12D8FBC", VA = "0x12D8FBC")]
	public void ApplySavedUnlocks()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x12D91F0", Offset = "0x12D91F0", VA = "0x12D91F0")]
	private void ApplySavedUnlockBasedOnProgression()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x12D7C7C", Offset = "0x12D7C7C", VA = "0x12D7C7C")]
	public void LockAllUnlockables()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x12D89CC", Offset = "0x12D89CC", VA = "0x12D89CC")]
	private UnlockableContents CreateEmptyContent()
	{
		return default(UnlockableContents);
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x12D9940", Offset = "0x12D9940", VA = "0x12D9940")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x12D9948", Offset = "0x12D9948", VA = "0x12D9948")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x12D9958", Offset = "0x12D9958", VA = "0x12D9958")]
	public UnlockableManager()
	{
	}
}
[Token(Token = "0x2000221")]
[CreateAssetMenu(menuName = "GBA/Rewards/UnlockableManagerSettings")]
public class UnlockableManagerSettings : ScriptableObject
{
	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelSettings[] TutorialLevels;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelSettings LastTrainingLevelId;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnLastTrainingLevelCompleted;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool SaveSystemEnabled;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[Header("Debug")]
	public bool UnlockAllLevels;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool UnlockAllGameplays;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool UnlockAllSkins;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool SkipFTE;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool SkipTutorial;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Gameplay Datas")]
	public List<RewardParameters> RewardParametersList;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<UnlockableGameplay> UnlockableGameplays;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<UnlockableSkin> UnlockableSkins;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<LevelSettings> LevelIds;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Demo Content")]
	public List<LevelSettings> DemoLevels;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<UnlockableGameplay> DemoGameplays;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<RewardParameters> DemoRewards;

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x12D9C40", Offset = "0x12D9C40", VA = "0x12D9C40")]
	public UnlockableManagerSettings()
	{
	}
}
[Token(Token = "0x2000222")]
[CreateAssetMenu(menuName = "GBA/Rewards/Unlockable Skin")]
public class UnlockableSkin : Unlockable
{
	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x12D9C50", Offset = "0x12D9C50", VA = "0x12D9C50", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x12D9C54", Offset = "0x12D9C54", VA = "0x12D9C54", Slot = "11")]
	public override void Unlock()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x12D9D58", Offset = "0x12D9D58", VA = "0x12D9D58")]
	public UnlockableSkin()
	{
	}
}
[Token(Token = "0x2000223")]
[CreateAssetMenu(menuName = "GBA/Rewards/Demo Unlockable Wrapper")]
public class UnlockableWrapper : Unlockable
{
	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Unlockable[] _unlockInDemo;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Unlockable[] _unlockedInRegularBuild;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool _silentInDemo;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	private bool _silentInRegularBuild;

	[Token(Token = "0x17000267")]
	public Unlockable[] Unlockables
	{
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x12D9DB0", Offset = "0x12D9DB0", VA = "0x12D9DB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000268")]
	public override bool SilentUnlock
	{
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x12D9DB8", Offset = "0x12D9DB8", VA = "0x12D9DB8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x12D9DC0", Offset = "0x12D9DC0", VA = "0x12D9DC0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x12D9DC4", Offset = "0x12D9DC4", VA = "0x12D9DC4", Slot = "11")]
	public override void Unlock()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x12D9E50", Offset = "0x12D9E50", VA = "0x12D9E50")]
	public UnlockableWrapper()
	{
	}
}
[Token(Token = "0x2000224")]
public class SaveManager : MonoBehaviour
{
	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x12D9EA8", Offset = "0x12D9EA8", VA = "0x12D9EA8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x12D9EB0", Offset = "0x12D9EB0", VA = "0x12D9EB0")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x12D9EC0", Offset = "0x12D9EC0", VA = "0x12D9EC0")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x2000225")]
public class ScoreManager : MonoBehaviour
{
	[Token(Token = "0x4000BD6")]
	private const string DEFAULT_HIGHSCORE_TITLE = "HIGH";

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcIntGameParameter SuccessfulShot;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ScoreDisplayText;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI HighScoreTitleText;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI HighScoreDisplayText;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcBoolGameParameter _challengeModeParameter;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LeaderboardGameParameter _leaderboardParameter;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GBAPlayerSystem _owningPlayer;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _registeredCallbacks;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private long _currentHighScore;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _currentTopPlayer;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Leaderboard _leaderboard;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OnlineLeaderboardInterface _onlineLeaderboardInterface;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Guid _currentPlayerRequest;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private LevelSettings level;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ChallengePreset challenge;

	[Token(Token = "0x17000269")]
	private bool isRemotelyOwned
	{
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x12D9EC8", Offset = "0x12D9EC8", VA = "0x12D9EC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x12D9F54", Offset = "0x12D9F54", VA = "0x12D9F54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x12DAA10", Offset = "0x12DAA10", VA = "0x12DAA10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x12DAD64", Offset = "0x12DAD64", VA = "0x12DAD64")]
	public void SetOwningPlayer(GBAPlayerSystem owningPlayer)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x12DB204", Offset = "0x12DB204", VA = "0x12DB204")]
	private void updateLeaderboard(Leaderboard toValue, Leaderboard fromValue, UnityEngine.Object _)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x12DB33C", Offset = "0x12DB33C", VA = "0x12DB33C")]
	private void updateScoreDisplay(int toValue, int fromValue, UnityEngine.Object _)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x12DB3B0", Offset = "0x12DB3B0", VA = "0x12DB3B0")]
	private void refreshRemoteScoreDisplay()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x12DA49C", Offset = "0x12DA49C", VA = "0x12DA49C")]
	public void UpdateScoreDisplay(int newScore)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x12DA59C", Offset = "0x12DA59C", VA = "0x12DA59C")]
	public void ResetScoreDisplay()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x12DA63C", Offset = "0x12DA63C", VA = "0x12DA63C")]
	public void UpdateHighScore()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x12DB43C", Offset = "0x12DB43C", VA = "0x12DB43C")]
	private void onPlayerEntryReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x12DA36C", Offset = "0x12DA36C", VA = "0x12DA36C")]
	public void ResetHighScore()
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x12DB590", Offset = "0x12DB590", VA = "0x12DB590")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x2000226")]
public class BackgroundMatchmakingManager : rcSingleton<BackgroundMatchmakingManager>
{
	[Token(Token = "0x2000227")]
	[CompilerGenerated]
	private sealed class <restartBackGroundSearch>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int seconds;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BackgroundMatchmakingManager <>4__this;

		[Token(Token = "0x1700026E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x12DD2D8", Offset = "0x12DD2D8", VA = "0x12DD2D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x12DD320", Offset = "0x12DD320", VA = "0x12DD320", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x12DC664", Offset = "0x12DC664", VA = "0x12DC664")]
		[DebuggerHidden]
		public <restartBackGroundSearch>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x12DCF94", Offset = "0x12DCF94", VA = "0x12DCF94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x12DCF98", Offset = "0x12DCF98", VA = "0x12DCF98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x12DD2E0", Offset = "0x12DD2E0", VA = "0x12DD2E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[CompilerGenerated]
	private sealed class <enableBackgroundMatchmakingWithDelay>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BackgroundMatchmakingManager <>4__this;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool enable;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x12DD450", Offset = "0x12DD450", VA = "0x12DD450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0x12DD498", Offset = "0x12DD498", VA = "0x12DD498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x12DCC5C", Offset = "0x12DCC5C", VA = "0x12DCC5C")]
		[DebuggerHidden]
		public <enableBackgroundMatchmakingWithDelay>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x12DD328", Offset = "0x12DD328", VA = "0x12DD328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x12DD32C", Offset = "0x12DD32C", VA = "0x12DD32C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x12DD458", Offset = "0x12DD458", VA = "0x12DD458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[CompilerGenerated]
	private sealed class <updateBackgroundMatchmakingOnFrameEnd>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BackgroundMatchmakingManager <>4__this;

		[Token(Token = "0x17000272")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x12DD668", Offset = "0x12DD668", VA = "0x12DD668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x12DD6B0", Offset = "0x12DD6B0", VA = "0x12DD6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x12DCC84", Offset = "0x12DCC84", VA = "0x12DCC84")]
		[DebuggerHidden]
		public <updateBackgroundMatchmakingOnFrameEnd>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x12DD4A0", Offset = "0x12DD4A0", VA = "0x12DD4A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x12DD4A4", Offset = "0x12DD4A4", VA = "0x12DD4A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x12DD670", Offset = "0x12DD670", VA = "0x12DD670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _backgroundMatchmakingReady;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _backgroundMatchmakingEnabled;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _onBackgroundMatchmakingLoaded;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent _onBackgroundMatchmakingAvailable;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent _onBackgroundMatchmakingUnavailable;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent _onBackgroundMatchmakingOn;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UnityEvent _onBackgroundMatchmakingOff;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("FTE Settings")]
	private rcLocalizedText _localizedFteTitle;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcLocalizedText _localizedFteMessage;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private rcLocalizedText _localizedYes;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private rcLocalizedText _localizedNo;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _loggedInUserID;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UnityAction _onPlayerLoggedIn;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private UnityAction<bool> _onBackgroundMatchmakingReadyStateUpdated;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UnityAction<bool> _onBackgroundMatchmakingToggleValueUpdated;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _wasLoaded;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _backgroundMatchmakingWasReady;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool _pendingBackgroundMatchmakingEnabled;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool _checkBackgroundMatchmakingOnReadyUpdated;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitForEndOfFrame _waitForEndOfFrame;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine _updateBackgroundMatchmakingOnFrameEnd;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine _restartBackgroundMatchmaking;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _enablingBackgroundMatchmakingDelay;

	[Token(Token = "0x1700026A")]
	public bool HasToggleValueSaved
	{
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x12DB614", Offset = "0x12DB614", VA = "0x12DB614")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700026B")]
	private string backgroundMatchmakingEnabledKey
	{
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x12DB628", Offset = "0x12DB628", VA = "0x12DB628")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700026C")]
	public bool BackgroundMatchmakingReady
	{
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x12DB674", Offset = "0x12DB674", VA = "0x12DB674")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700026D")]
	public bool BackgroundMatchmakingEnabled
	{
		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x12DB708", Offset = "0x12DB708", VA = "0x12DB708")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x12DB750", Offset = "0x12DB750", VA = "0x12DB750")]
		set
		{
		}
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x12DB854", Offset = "0x12DB854", VA = "0x12DB854", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x12DBB0C", Offset = "0x12DBB0C", VA = "0x12DBB0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x12DBC0C", Offset = "0x12DBC0C", VA = "0x12DBC0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x12DBA54", Offset = "0x12DBA54", VA = "0x12DBA54")]
	private void onPlayerLoggedIn()
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x12DBCF0", Offset = "0x12DBCF0", VA = "0x12DBCF0")]
	public void SubscribeToReadyState(UnityAction<bool> onReadyStateUpdated)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x12DBD98", Offset = "0x12DBD98", VA = "0x12DBD98")]
	public void UnsubscribeFromReadyState(UnityAction<bool> onReadyStateUpdated)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x12DBE40", Offset = "0x12DBE40", VA = "0x12DBE40")]
	public void SubscribeToToggleValue(UnityAction<bool> onToggleValueUpdated)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x12DBEE8", Offset = "0x12DBEE8", VA = "0x12DBEE8")]
	public void UnsubscribeFromToggleValue(UnityAction<bool> onToggleValueUpdated)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x12DBF90", Offset = "0x12DBF90", VA = "0x12DBF90")]
	public void TryOpenFTEPopup()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x12DC0D4", Offset = "0x12DC0D4", VA = "0x12DC0D4")]
	private void tryOpenFTEPopupOnLoggedIn()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x12DC500", Offset = "0x12DC500", VA = "0x12DC500")]
	private void onChoiceFtePopupUpdated(bool ok)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x12DC440", Offset = "0x12DC440", VA = "0x12DC440")]
	private void onChoiceFteCompleted()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x12DC560", Offset = "0x12DC560", VA = "0x12DC560")]
	public void RestartBackgroundSearch()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x12DC5E0", Offset = "0x12DC5E0", VA = "0x12DC5E0")]
	[IteratorStateMachine(typeof(<restartBackGroundSearch>d__46))]
	private IEnumerator restartBackGroundSearch(int seconds)
	{
		return null;
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x12DC68C", Offset = "0x12DC68C", VA = "0x12DC68C")]
	private void restartBackgroundSearchOnMatchmakerReady()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x12DCAFC", Offset = "0x12DCAFC", VA = "0x12DCAFC")]
	private void onMatchmakingReadyStateUpdated(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x12DC940", Offset = "0x12DC940", VA = "0x12DC940")]
	private void enableBackgroundMatchmaking(bool enable)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x12DCBD4", Offset = "0x12DCBD4", VA = "0x12DCBD4")]
	[IteratorStateMachine(typeof(<enableBackgroundMatchmakingWithDelay>d__50))]
	private IEnumerator enableBackgroundMatchmakingWithDelay(bool enable)
	{
		return null;
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x12DB7E0", Offset = "0x12DB7E0", VA = "0x12DB7E0")]
	[IteratorStateMachine(typeof(<updateBackgroundMatchmakingOnFrameEnd>d__51))]
	private IEnumerator updateBackgroundMatchmakingOnFrameEnd()
	{
		return null;
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x12DCCAC", Offset = "0x12DCCAC", VA = "0x12DCCAC")]
	private void startMatchmaking()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x12DCD20", Offset = "0x12DCD20", VA = "0x12DCD20")]
	private void stopMatchmaking()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x12DCD94", Offset = "0x12DCD94", VA = "0x12DCD94")]
	private void loadBackgroundMatchmakingEnabled()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x12DC530", Offset = "0x12DC530", VA = "0x12DC530")]
	private void saveBackgroundMatchmakingEnabled()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x12DCED4", Offset = "0x12DCED4", VA = "0x12DCED4")]
	public BackgroundMatchmakingManager()
	{
	}
}
[Token(Token = "0x200022A")]
public class DaltonismeConfigManager : MonoBehaviour
{
	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _daltonismeParameter;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _loggedInUserID;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _onDaltonismLoaded;

	[Token(Token = "0x17000274")]
	private string DaltonismEnabledKey
	{
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x12DD6B8", Offset = "0x12DD6B8", VA = "0x12DD6B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000275")]
	public bool DaltonismEnabled
	{
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x12DD704", Offset = "0x12DD704", VA = "0x12DD704")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x12DD74C", Offset = "0x12DD74C", VA = "0x12DD74C")]
		set
		{
		}
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x12DD76C", Offset = "0x12DD76C", VA = "0x12DD76C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x12DD894", Offset = "0x12DD894", VA = "0x12DD894")]
	private void loadDaltonismEnabled()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x12DDA04", Offset = "0x12DDA04", VA = "0x12DDA04")]
	private void saveDaltonismEnabled()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x12DDA34", Offset = "0x12DDA34", VA = "0x12DDA34")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x12DDA38", Offset = "0x12DDA38", VA = "0x12DDA38")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x12DDA44", Offset = "0x12DDA44", VA = "0x12DDA44")]
	public DaltonismeConfigManager()
	{
	}
}
[Token(Token = "0x200022B")]
public class PassthroughConfigManager : rcSingleton<PassthroughConfigManager>
{
	[Token(Token = "0x200022C")]
	public class PassthroughWrapper
	{
		[Token(Token = "0x17000278")]
		public bool Enabled
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x12DDAB0", Offset = "0x12DDAB0", VA = "0x12DDAB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x12DDBA4", Offset = "0x12DDBA4", VA = "0x12DDBA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x12DE324", Offset = "0x12DE324", VA = "0x12DE324")]
		public PassthroughWrapper()
		{
		}
	}

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int FiveMinutes;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _loggedInUserID;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _onPassthroughEnabledOnLoad;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent _onPassthroughON;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent _onPassthroughOFF;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PassthroughWrapper _passthrough;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Timer _passthroughTimer;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _lastApplicationTime;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _ready;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityAction<bool> OnPassthroughEnabled;

	[Token(Token = "0x17000276")]
	private string PassthroughEnabledKey
	{
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x12DDA4C", Offset = "0x12DDA4C", VA = "0x12DDA4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000277")]
	public bool PassthroughEnabled
	{
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x12DDA98", Offset = "0x12DDA98", VA = "0x12DDA98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x12DDB24", Offset = "0x12DDB24", VA = "0x12DDB24")]
		set
		{
		}
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x12DDC24", Offset = "0x12DDC24", VA = "0x12DDC24")]
	public void TryInitialize()
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x12DDDC8", Offset = "0x12DDDC8", VA = "0x12DDDC8")]
	private void initializePassthrough()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x12DE044", Offset = "0x12DE044", VA = "0x12DE044")]
	private void passthroughChanged(bool enabled)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x12DE090", Offset = "0x12DE090", VA = "0x12DE090")]
	private void SavePassthroughState()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x12DE0E8", Offset = "0x12DE0E8", VA = "0x12DE0E8")]
	private void updateAnalytics()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x12DDD54", Offset = "0x12DDD54", VA = "0x12DDD54")]
	public bool CanUseFeature()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x12DE220", Offset = "0x12DE220", VA = "0x12DE220")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x12DE224", Offset = "0x12DE224", VA = "0x12DE224")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x12DE230", Offset = "0x12DE230", VA = "0x12DE230")]
	public PassthroughConfigManager()
	{
	}
}
[Token(Token = "0x200022D")]
public class ShieldHitEffect : MonoBehaviour
{
	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator ShieldAnimator;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Audio")]
	public rcAudioSource rcAudioSourceRef;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcAudioEvent SFXImpactShieldSmall;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcAudioEvent SFXImpactShield;

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x12DE378", Offset = "0x12DE378", VA = "0x12DE378")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x12DE470", Offset = "0x12DE470", VA = "0x12DE470")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x12DE408", Offset = "0x12DE408", VA = "0x12DE408")]
	[ContextMenu("Start Hit Animation")]
	public void StartHitAnimation()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x12CCBD8", Offset = "0x12CCBD8", VA = "0x12CCBD8")]
	[ContextMenu("Start Last Hit Animation")]
	public void StartLastHitAnimation()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x12CCDB4", Offset = "0x12CCDB4", VA = "0x12CCDB4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x12DE474", Offset = "0x12DE474", VA = "0x12DE474")]
	public ShieldHitEffect()
	{
	}
}
[Token(Token = "0x200022E")]
public class ShotArea : MonoBehaviour
{
	[Token(Token = "0x200022F")]
	[CompilerGenerated]
	private sealed class <expandTriggerToFloorCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShotArea <>4__this;

		[Token(Token = "0x1700027B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x12DF1A4", Offset = "0x12DF1A4", VA = "0x12DF1A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x12DF1EC", Offset = "0x12DF1EC", VA = "0x12DF1EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x12DEDE8", Offset = "0x12DEDE8", VA = "0x12DEDE8")]
		[DebuggerHidden]
		public <expandTriggerToFloorCoroutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x12DEFC8", Offset = "0x12DEFC8", VA = "0x12DEFC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x12DEFCC", Offset = "0x12DEFCC", VA = "0x12DEFCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x12DF1AC", Offset = "0x12DF1AC", VA = "0x12DF1AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask _ballLayerIndex;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider _boxCollider;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent<Collider> OnEnterArea;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent<Collider> OnExitArea;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _shouldExpandTrigger;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float _floorHeightOffset;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ShotArea> _activeAreas;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GBAPlayerSystem _owningPlayer;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Rigidbody> _enteredBalls;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> _toRemove;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds _waitBeforeExpandToFloor;

	[Token(Token = "0x17000279")]
	public static ReadOnlyCollection<ShotArea> ActiveAreas
	{
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x12DE47C", Offset = "0x12DE47C", VA = "0x12DE47C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027A")]
	public bool IsLocallyOwned
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x12DE4F4", Offset = "0x12DE4F4", VA = "0x12DE4F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x12DE57C", Offset = "0x12DE57C", VA = "0x12DE57C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x12DE6F0", Offset = "0x12DE6F0", VA = "0x12DE6F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x12DE770", Offset = "0x12DE770", VA = "0x12DE770")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x12DE958", Offset = "0x12DE958", VA = "0x12DE958")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x12DED08", Offset = "0x12DED08", VA = "0x12DED08")]
	public void SetOwningPlayer(GBAPlayerSystem owningPlayer)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x12DEAB0", Offset = "0x12DEAB0", VA = "0x12DEAB0")]
	private bool IsBodyInArea(Rigidbody body)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x12DE67C", Offset = "0x12DE67C", VA = "0x12DE67C")]
	[IteratorStateMachine(typeof(<expandTriggerToFloorCoroutine>d__21))]
	private IEnumerator expandTriggerToFloorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x12DEE10", Offset = "0x12DEE10", VA = "0x12DEE10")]
	public ShotArea()
	{
	}
}
[Token(Token = "0x2000230")]
public class SizeAdjuster : MonoBehaviour
{
	[Token(Token = "0x2000231")]
	[CompilerGenerated]
	private sealed class <LerpSize>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float newHeight;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SizeAdjuster <>4__this;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__2;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <startHeight>5__3;

		[Token(Token = "0x1700027D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x12DFA10", Offset = "0x12DFA10", VA = "0x12DFA10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0x12DFA58", Offset = "0x12DFA58", VA = "0x12DFA58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x12DF7E0", Offset = "0x12DF7E0", VA = "0x12DF7E0")]
		[DebuggerHidden]
		public <LerpSize>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x12DF81C", Offset = "0x12DF81C", VA = "0x12DF81C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x12DF820", Offset = "0x12DF820", VA = "0x12DF820", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x12DFA18", Offset = "0x12DFA18", VA = "0x12DFA18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcBoolGameParameter AnchorWasCreated;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcFloatGameParameter AnchorOffset;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	public Vector2 ObjectYTransformLimit;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnStartMoveUp;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnStartMoveDown;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnDoneMoving;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GBAPlayerSystem _owningPlayer;

	[Token(Token = "0x4000C2F")]
	private const float TOE2NECK_OFFSET = 1.45f;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x12DF1F4", Offset = "0x12DF1F4", VA = "0x12DF1F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x12DF39C", Offset = "0x12DF39C", VA = "0x12DF39C")]
	public void SetOwningPlayer(GBAPlayerSystem owningPlayer)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x12DF720", Offset = "0x12DF720", VA = "0x12DF720")]
	private void OnAnchorOffsetUpdated(float newAnchorOffset)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x12DF6DC", Offset = "0x12DF6DC", VA = "0x12DF6DC")]
	private void UpdateSizeAdjuster(float toValue, float fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x12DF7A8", Offset = "0x12DF7A8", VA = "0x12DF7A8")]
	[ContextMenu("Update Size Adjuster")]
	public void UpdateSize()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x12DF724", Offset = "0x12DF724", VA = "0x12DF724")]
	[IteratorStateMachine(typeof(<LerpSize>d__13))]
	private IEnumerator LerpSize(float newHeight)
	{
		return null;
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x12DF808", Offset = "0x12DF808", VA = "0x12DF808")]
	public SizeAdjuster()
	{
	}
}
[Token(Token = "0x2000232")]
[CreateAssetMenu(fileName = "SC_SkinCollection", menuName = "GBA/Skin/SkinCollection")]
public class SkinCollection : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000233")]
	public class LevelsSkinData
	{
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LevelList LevelList;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinParameter SkinParameter;

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x12DFAB8", Offset = "0x12DFAB8", VA = "0x12DFAB8")]
		public LevelsSkinData()
		{
		}
	}

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<LevelsSkinData> _levelSkins;

	[Token(Token = "0x1700027F")]
	public ReadOnlyCollection<LevelsSkinData> LevelSkins
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x12DFA60", Offset = "0x12DFA60", VA = "0x12DFA60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x12DFAB0", Offset = "0x12DFAB0", VA = "0x12DFAB0")]
	public SkinCollection()
	{
	}
}
[Token(Token = "0x2000234")]
public class SkinConfetisUpdater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000235")]
	public class ConfetiesParameter
	{
		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinParameter skinParameter;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject confetisObject;

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x12DFD10", Offset = "0x12DFD10", VA = "0x12DFD10")]
		public ConfetiesParameter()
		{
		}
	}

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinGameParameter CurrentSkin;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<ConfetiesParameter> ConfetisObjects;

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x12DFAC0", Offset = "0x12DFAC0", VA = "0x12DFAC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x12DFB60", Offset = "0x12DFB60", VA = "0x12DFB60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x12DFC00", Offset = "0x12DFC00", VA = "0x12DFC00")]
	public void ApplyNewSkin(SkinParameter toValue, SkinParameter fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x12DFD08", Offset = "0x12DFD08", VA = "0x12DFD08")]
	public SkinConfetisUpdater()
	{
	}
}
[Token(Token = "0x2000236")]
[CreateAssetMenu(fileName = "SGP_SkinGameParameter", menuName = "GBA/Skin/SkinGameParameter")]
public class SkinGameParameter : rcGameParameter<SkinParameter>
{
	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x12DFD18", Offset = "0x12DFD18", VA = "0x12DFD18")]
	public SkinGameParameter()
	{
	}
}
[Token(Token = "0x2000237")]
public class SkinLightUpdater : MonoBehaviour
{
	[Token(Token = "0x2000238")]
	public enum SkinType
	{
		[Token(Token = "0x4000C41")]
		LightDirectional,
		[Token(Token = "0x4000C42")]
		LightPoint
	}

	[Token(Token = "0x2000239")]
	[CompilerGenerated]
	private sealed class <LerpLightSkin>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinLightUpdater <>4__this;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkinParameter skin;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <startColor>5__2;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <endColor>5__3;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__4;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <i>5__5;

		[Token(Token = "0x17000280")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x12E01AC", Offset = "0x12E01AC", VA = "0x12E01AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x12E01F4", Offset = "0x12E01F4", VA = "0x12E01F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x12DFFD4", Offset = "0x12DFFD4", VA = "0x12DFFD4")]
		[DebuggerHidden]
		public <LerpLightSkin>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x12E0004", Offset = "0x12E0004", VA = "0x12E0004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x12E0008", Offset = "0x12E0008", VA = "0x12E0008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x12E01B4", Offset = "0x12E01B4", VA = "0x12E01B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinType CurrentSkinType;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinGameParameter CurrentSkin;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Light> Lights;

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x12DFD60", Offset = "0x12DFD60", VA = "0x12DFD60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x12DFE00", Offset = "0x12DFE00", VA = "0x12DFE00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x12DFEA0", Offset = "0x12DFEA0", VA = "0x12DFEA0")]
	[ContextMenu("Apply Skin")]
	public void ApplySkin()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x12DFF98", Offset = "0x12DFF98", VA = "0x12DFF98")]
	public void ApplyNewSkin(SkinParameter toValue, SkinParameter fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x12DFF08", Offset = "0x12DFF08", VA = "0x12DFF08")]
	[IteratorStateMachine(typeof(<LerpLightSkin>d__8))]
	private IEnumerator LerpLightSkin(SkinParameter skin)
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x12DFFFC", Offset = "0x12DFFFC", VA = "0x12DFFFC")]
	public SkinLightUpdater()
	{
	}
}
[Token(Token = "0x200023A")]
public class SkinManager : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	[CompilerGenerated]
	private sealed class <FindLevelManagerInstance>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinManager <>4__this;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitForOneSec>5__2;

		[Token(Token = "0x17000282")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0x12E0950", Offset = "0x12E0950", VA = "0x12E0950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x12E0998", Offset = "0x12E0998", VA = "0x12E0998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x12E0290", Offset = "0x12E0290", VA = "0x12E0290")]
		[DebuggerHidden]
		public <FindLevelManagerInstance>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x12E0534", Offset = "0x12E0534", VA = "0x12E0534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x12E0538", Offset = "0x12E0538", VA = "0x12E0538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x12E0958", Offset = "0x12E0958", VA = "0x12E0958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinGameParameter _currentSkinParameter;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinCollection _skinCollection;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Challenge Settings")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerRef;

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x12E01FC", Offset = "0x12E01FC", VA = "0x12E01FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x12E021C", Offset = "0x12E021C", VA = "0x12E021C")]
	[IteratorStateMachine(typeof(<FindLevelManagerInstance>d__4))]
	private IEnumerator FindLevelManagerInstance()
	{
		return null;
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x12E02B8", Offset = "0x12E02B8", VA = "0x12E02B8")]
	private void updateSkin(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x12E050C", Offset = "0x12E050C", VA = "0x12E050C")]
	public void ResetSkin()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x12E052C", Offset = "0x12E052C", VA = "0x12E052C")]
	public SkinManager()
	{
	}
}
[Token(Token = "0x200023C")]
public class SkinMaterialSwapper : MonoBehaviour
{
	[Token(Token = "0x200023D")]
	public enum SkinType
	{
		[Token(Token = "0x4000C57")]
		Hands,
		[Token(Token = "0x4000C58")]
		Body,
		[Token(Token = "0x4000C59")]
		Head
	}

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinType CurrentSkinType;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinGameParameter CurrentSkin;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Renderer> Renderers;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int PROPERTY_ID_BASEMAP;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x12E09A0", Offset = "0x12E09A0", VA = "0x12E09A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x12E0A40", Offset = "0x12E0A40", VA = "0x12E0A40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x12E0AE0", Offset = "0x12E0AE0", VA = "0x12E0AE0")]
	public void ApplyNewSkin(SkinParameter toValue, SkinParameter fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x12E0BE0", Offset = "0x12E0BE0", VA = "0x12E0BE0")]
	public void ApplyGrabSkin(int index)
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x12E0B4C", Offset = "0x12E0B4C", VA = "0x12E0B4C")]
	public void ApplyUngrabbedSkin(int index)
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x12E0C74", Offset = "0x12E0C74", VA = "0x12E0C74")]
	public SkinMaterialSwapper()
	{
	}
}
[Token(Token = "0x200023E")]
[CreateAssetMenu(fileName = "SP_SkinParameter", menuName = "GBA/Skin/SkinParameter")]
public class SkinParameter : ScriptableObject
{
	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D HandsSkinTexture;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D HandsSkinTextureGrab;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Lights")]
	public Color DirectionalColor;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color PointLightColor;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Room")]
	public Color RoomMaterialColor;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool RoomMaterialEmissive;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[ColorUsage(true, true)]
	public Color RoomMaterialEmissiveColor;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Space]
	public Color RoomMaterialBalconColor;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Audio")]
	public rcAudioEvent CountdownJingleEvent;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public rcAudioEvent ComboLoopAmbianceEvent;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public StepGameAmbianceSettings ChallengeStepAmbiances;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Passthrough")]
	public float Contrast;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float Brightness;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float Posterize;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Gradient Colorize;

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x12E0CCC", Offset = "0x12E0CCC", VA = "0x12E0CCC")]
	public SkinParameter()
	{
	}
}
[Token(Token = "0x200023F")]
public class SkinPassthroughUpdater : MonoBehaviour
{
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private rcPlatformManager _platformManager;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinGameParameter CurrentSkin;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GradientColorKey[] gradientColorKeys;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GradientAlphaKey[] gradientAlphaKeys;

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x12E0CDC", Offset = "0x12E0CDC", VA = "0x12E0CDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x12E0D64", Offset = "0x12E0D64", VA = "0x12E0D64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x12E0E30", Offset = "0x12E0E30", VA = "0x12E0E30")]
	public void ApplyNewSkin(SkinParameter toValue, SkinParameter fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x12E0E34", Offset = "0x12E0E34", VA = "0x12E0E34")]
	public SkinPassthroughUpdater()
	{
	}
}
[Token(Token = "0x2000240")]
public class SkinRoomMaterialUpdater : MonoBehaviour
{
	[Token(Token = "0x2000241")]
	[CompilerGenerated]
	private sealed class <LerpRoomColor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinRoomMaterialUpdater <>4__this;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkinParameter skin;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <startRoomColor>5__2;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <startBaclonColor>5__3;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color <startEmissiveColor>5__4;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color <endRoomColor>5__5;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color <endBalconColor>5__6;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Color <endEmissiveColor>5__7;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float <t>5__8;

		[Token(Token = "0x17000284")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x12E13AC", Offset = "0x12E13AC", VA = "0x12E13AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x12E13F4", Offset = "0x12E13F4", VA = "0x12E13F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x12E10E0", Offset = "0x12E10E0", VA = "0x12E10E0")]
		[DebuggerHidden]
		public <LerpRoomColor>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x12E118C", Offset = "0x12E118C", VA = "0x12E118C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x12E1190", Offset = "0x12E1190", VA = "0x12E1190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x12E13B4", Offset = "0x12E13B4", VA = "0x12E13B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinGameParameter CurrentSkin;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material RoomMaterialBalcon;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material RoomMaterial;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly int PROPERTY_ID_COLOR_BASE;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int PROPERTY_ID_COLOR_EMISSION;

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x12E0E3C", Offset = "0x12E0E3C", VA = "0x12E0E3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x12E0EDC", Offset = "0x12E0EDC", VA = "0x12E0EDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x12E1004", Offset = "0x12E1004", VA = "0x12E1004")]
	[ContextMenu("Apply Skin")]
	public void ApplySkin()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x12E0F9C", Offset = "0x12E0F9C", VA = "0x12E0F9C")]
	private void applyNewSkin(SkinParameter toValue, SkinParameter fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x12E1050", Offset = "0x12E1050", VA = "0x12E1050")]
	[IteratorStateMachine(typeof(<LerpRoomColor>d__9))]
	private IEnumerator LerpRoomColor(SkinParameter skin)
	{
		return null;
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x12E1108", Offset = "0x12E1108", VA = "0x12E1108")]
	public SkinRoomMaterialUpdater()
	{
	}
}
[Token(Token = "0x2000242")]
public class SpecialBonusAligner : MonoBehaviour
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<BonusAlignerOffset> ObjectsToAlign;

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x12E13FC", Offset = "0x12E13FC", VA = "0x12E13FC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x12E1560", Offset = "0x12E1560", VA = "0x12E1560")]
	public void AlignObject()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x12E1400", Offset = "0x12E1400", VA = "0x12E1400")]
	public void ResetAlignedObject()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x12E16A0", Offset = "0x12E16A0", VA = "0x12E16A0")]
	public SpecialBonusAligner()
	{
	}
}
[Serializable]
[Token(Token = "0x2000243")]
public class BonusAlignerOffset
{
	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject ObjectToOffset;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 OffsetPosition;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 OffsetAngle;

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x12E16A8", Offset = "0x12E16A8", VA = "0x12E16A8")]
	public BonusAlignerOffset()
	{
	}
}
[Token(Token = "0x2000244")]
public class StartButton : MonoBehaviour
{
	[Token(Token = "0x2000245")]
	[CompilerGenerated]
	private sealed class <LerpPostion>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartButton <>4__this;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool down;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <endPos>5__4;

		[Token(Token = "0x17000286")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x12E1980", Offset = "0x12E1980", VA = "0x12E1980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x12E19C8", Offset = "0x12E19C8", VA = "0x12E19C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x12E17D0", Offset = "0x12E17D0", VA = "0x12E17D0")]
		[DebuggerHidden]
		public <LerpPostion>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x12E1808", Offset = "0x12E1808", VA = "0x12E1808", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x12E180C", Offset = "0x12E180C", VA = "0x12E180C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x12E1988", Offset = "0x12E1988", VA = "0x12E1988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _startYPos;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float EndYOffset;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpSpeed;

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x12E16B0", Offset = "0x12E16B0", VA = "0x12E16B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x12E16DC", Offset = "0x12E16DC", VA = "0x12E16DC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x12E1700", Offset = "0x12E1700", VA = "0x12E1700")]
	[ContextMenu("Apparition")]
	public void StartButtonApparition()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x12E17AC", Offset = "0x12E17AC", VA = "0x12E17AC")]
	[ContextMenu("Disparition")]
	public void StartButtonDisparition()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x12E1724", Offset = "0x12E1724", VA = "0x12E1724")]
	[IteratorStateMachine(typeof(<LerpPostion>d__7))]
	private IEnumerator LerpPostion(bool down)
	{
		return null;
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x12E17F8", Offset = "0x12E17F8", VA = "0x12E17F8")]
	public StartButton()
	{
	}
}
[Token(Token = "0x2000246")]
public class StartButtonHilightEnabler : MonoBehaviour
{
	[Token(Token = "0x2000247")]
	[CompilerGenerated]
	private sealed class <DisableButtonValidateHilight>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartButtonHilightEnabler <>4__this;

		[Token(Token = "0x17000288")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x12E1C74", Offset = "0x12E1C74", VA = "0x12E1C74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x12E1CBC", Offset = "0x12E1CBC", VA = "0x12E1CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x12E1AA8", Offset = "0x12E1AA8", VA = "0x12E1AA8")]
		[DebuggerHidden]
		public <DisableButtonValidateHilight>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x12E1BA8", Offset = "0x12E1BA8", VA = "0x12E1BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x12E1BAC", Offset = "0x12E1BAC", VA = "0x12E1BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x12E1C7C", Offset = "0x12E1C7C", VA = "0x12E1C7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator StartButtonAnimator;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int ANIM_TRIGGER_HASH_OFF;

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x12E19D0", Offset = "0x12E19D0", VA = "0x12E19D0")]
	public void HideButtonValidateHilight()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x12E1A34", Offset = "0x12E1A34", VA = "0x12E1A34")]
	[IteratorStateMachine(typeof(<DisableButtonValidateHilight>d__3))]
	private IEnumerator DisableButtonValidateHilight()
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x12E1AD0", Offset = "0x12E1AD0", VA = "0x12E1AD0")]
	public void EnableButtonValidateHilight()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x12E1B50", Offset = "0x12E1B50", VA = "0x12E1B50")]
	public StartButtonHilightEnabler()
	{
	}
}
[Token(Token = "0x2000248")]
public class SummerWaterManager : MonoBehaviour
{
	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcAudioEvent ShoreAudioEvent;

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x12E1CC4", Offset = "0x12E1CC4", VA = "0x12E1CC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x12E1CE0", Offset = "0x12E1CE0", VA = "0x12E1CE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x12E1CFC", Offset = "0x12E1CFC", VA = "0x12E1CFC")]
	public SummerWaterManager()
	{
	}
}
[Token(Token = "0x2000249")]
public class TaggedHoopManager : HoopManager
{
	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BallTag BallTagToScore;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent OnGoalWrongTag;

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x12E1D04", Offset = "0x12E1D04", VA = "0x12E1D04", Slot = "8")]
	protected override void onBallExitCollider(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x12E1EDC", Offset = "0x12E1EDC", VA = "0x12E1EDC")]
	public TaggedHoopManager()
	{
	}
}
[Token(Token = "0x200024A")]
public class NetworkedTimer : NetworkBehaviour
{
	[Token(Token = "0x200024B")]
	private enum State
	{
		[Token(Token = "0x4000CA1")]
		Idle,
		[Token(Token = "0x4000CA2")]
		Running,
		[Token(Token = "0x4000CA3")]
		Paused,
		[Token(Token = "0x4000CA4")]
		Stopped
	}

	[Serializable]
	[Token(Token = "0x200024C")]
	public struct CountdownEvent
	{
		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private double _time;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private UnityEvent _event;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _triggered;

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x12E3200", Offset = "0x12E3200", VA = "0x12E3200")]
		public void ResetEvent()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x12E2CFC", Offset = "0x12E2CFC", VA = "0x12E2CFC")]
		public void CheckTrigger(double time)
		{
		}
	}

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private State _state;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private double _elapsedTimeAtStop;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double _timeAtStartTimer;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private double _timeAtPauseTimer;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _countdownDuration;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Countdown")]
	public CountdownEvent[] CountdownEvents;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Events")]
	public UnityEvent OnResetTimer;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent OnStartTimer;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent OnStopTimer;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent OnCancelTimer;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent OnPauseTimer;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent OnResumeTimer;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action OnDurationUdpated;

	[Token(Token = "0x1700028A")]
	public bool Running
	{
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x12E1EE4", Offset = "0x12E1EE4", VA = "0x12E1EE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028B")]
	public bool Paused
	{
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x12E1EF4", Offset = "0x12E1EF4", VA = "0x12E1EF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028C")]
	public float CountdownDuration
	{
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x12E1F04", Offset = "0x12E1F04", VA = "0x12E1F04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x12E1F0C", Offset = "0x12E1F0C", VA = "0x12E1F0C")]
		set
		{
		}
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x12E1F38", Offset = "0x12E1F38", VA = "0x12E1F38")]
	[ContextMenu("Reset Timer")]
	public void ResetNetworkedTimer()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x12E20A4", Offset = "0x12E20A4", VA = "0x12E20A4")]
	[ContextMenu("Start Timer")]
	public void StartNetworkedTimer()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x12E2340", Offset = "0x12E2340", VA = "0x12E2340")]
	[ContextMenu("Cancel Timer")]
	public void CancelNetworkedTimer()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x12E2598", Offset = "0x12E2598", VA = "0x12E2598")]
	[ContextMenu("Pause Timer")]
	public void PauseNetworkedTimer()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x12E27F0", Offset = "0x12E27F0", VA = "0x12E27F0")]
	[ContextMenu("Resume Timer")]
	public void ResumeNetworkedTimer()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x12E2A6C", Offset = "0x12E2A6C", VA = "0x12E2A6C")]
	public double GetElapsedTime()
	{
		return default(double);
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x12E2B00", Offset = "0x12E2B00", VA = "0x12E2B00")]
	public double GetCountDownRemainingTime()
	{
		return default(double);
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x12E2BAC", Offset = "0x12E2BAC", VA = "0x12E2BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x12E2EF4", Offset = "0x12E2EF4", VA = "0x12E2EF4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x12E1FB8", Offset = "0x12E1FB8", VA = "0x12E1FB8")]
	[ClientRpc]
	private void RpcResetTimer()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x12E2214", Offset = "0x12E2214", VA = "0x12E2214")]
	[ClientRpc]
	private void RpcStartTimer(double serverTimeAtStart)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x12E246C", Offset = "0x12E246C", VA = "0x12E246C")]
	[ClientRpc]
	private void RpcCancelTimer(double serverTimeAtCancel)
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x12E26C4", Offset = "0x12E26C4", VA = "0x12E26C4")]
	[ClientRpc]
	private void RpcPauseTimer(double serverTimeAtPause)
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x12E2940", Offset = "0x12E2940", VA = "0x12E2940")]
	[ClientRpc]
	private void RpcResumeTimer(double serverTimeAtResume)
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x12E2F3C", Offset = "0x12E2F3C", VA = "0x12E2F3C")]
	[Command]
	private void CmdCancelTimer()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x12E3028", Offset = "0x12E3028", VA = "0x12E3028")]
	[Command]
	private void CmdPauseTimer()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x12E3114", Offset = "0x12E3114", VA = "0x12E3114")]
	[Command]
	private void CmdResumeTimer()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x12E1F90", Offset = "0x12E1F90", VA = "0x12E1F90")]
	private void resetTimer()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x12E2138", Offset = "0x12E2138", VA = "0x12E2138")]
	private void startTimer(double timeOffset = 0.0)
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x12E23D4", Offset = "0x12E23D4", VA = "0x12E23D4")]
	private void cancelTimer(double timeOffset = 0.0)
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x12E2628", Offset = "0x12E2628", VA = "0x12E2628")]
	private void pauseTimer(double timeOffset = 0.0)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x12E2890", Offset = "0x12E2890", VA = "0x12E2890")]
	private void resumeTimer(double timeOffset = 0.0)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x12E2DC8", Offset = "0x12E2DC8", VA = "0x12E2DC8")]
	[ClientRpc]
	private void RpcStopCountDown(double serverTimeAtStop)
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x12E2D30", Offset = "0x12E2D30", VA = "0x12E2D30")]
	private void stopCountDown(double timeOffset = 0.0)
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x12E3208", Offset = "0x12E3208", VA = "0x12E3208")]
	public NetworkedTimer()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x12E3218", Offset = "0x12E3218", VA = "0x12E3218")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x12E321C", Offset = "0x12E321C", VA = "0x12E321C")]
	protected void UserCode_RpcResetTimer()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x12E3244", Offset = "0x12E3244", VA = "0x12E3244")]
	protected static void InvokeUserCode_RpcResetTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x12E3364", Offset = "0x12E3364", VA = "0x12E3364")]
	protected void UserCode_RpcStartTimer(double serverTimeAtStart)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x12E33D0", Offset = "0x12E33D0", VA = "0x12E33D0")]
	protected static void InvokeUserCode_RpcStartTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x12E350C", Offset = "0x12E350C", VA = "0x12E350C")]
	protected void UserCode_RpcCancelTimer(double serverTimeAtCancel)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x12E3578", Offset = "0x12E3578", VA = "0x12E3578")]
	protected static void InvokeUserCode_RpcCancelTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x12E36B4", Offset = "0x12E36B4", VA = "0x12E36B4")]
	protected void UserCode_RpcPauseTimer(double serverTimeAtPause)
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x12E3740", Offset = "0x12E3740", VA = "0x12E3740")]
	protected static void InvokeUserCode_RpcPauseTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x12E387C", Offset = "0x12E387C", VA = "0x12E387C")]
	protected void UserCode_RpcResumeTimer(double serverTimeAtResume)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x12E38E8", Offset = "0x12E38E8", VA = "0x12E38E8")]
	protected static void InvokeUserCode_RpcResumeTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x12E3A24", Offset = "0x12E3A24", VA = "0x12E3A24")]
	protected void UserCode_CmdCancelTimer()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x12E3A9C", Offset = "0x12E3A9C", VA = "0x12E3A9C")]
	protected static void InvokeUserCode_CmdCancelTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x12E3BCC", Offset = "0x12E3BCC", VA = "0x12E3BCC")]
	protected void UserCode_CmdPauseTimer()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x12E3C5C", Offset = "0x12E3C5C", VA = "0x12E3C5C")]
	protected static void InvokeUserCode_CmdPauseTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x12E3D8C", Offset = "0x12E3D8C", VA = "0x12E3D8C")]
	protected void UserCode_CmdResumeTimer()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x12E3E1C", Offset = "0x12E3E1C", VA = "0x12E3E1C")]
	protected static void InvokeUserCode_CmdResumeTimer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x12E3F4C", Offset = "0x12E3F4C", VA = "0x12E3F4C")]
	protected void UserCode_RpcStopCountDown(double serverTimeAtStop)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x12E3FB8", Offset = "0x12E3FB8", VA = "0x12E3FB8")]
	protected static void InvokeUserCode_RpcStopCountDown(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x12E40F4", Offset = "0x12E40F4", VA = "0x12E40F4")]
	static NetworkedTimer()
	{
	}
}
[Token(Token = "0x200024D")]
public class TimerAudio : MonoBehaviour
{
	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Audio")]
	public rcAudioEvent ClockStart;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public rcAudioEvent ClockAlmostOver;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcAudioEvent ClockEnd;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcAudioSource ClockAudioSource;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public rcBoolGameParameter IsServerOrSoloParameter;

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x12E459C", Offset = "0x12E459C", VA = "0x12E459C")]
	[ContextMenu("Start Audio Timer")]
	public void StartAudioTimer()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x12E45C0", Offset = "0x12E45C0", VA = "0x12E45C0")]
	public TimerAudio()
	{
	}
}
[Token(Token = "0x200024E")]
public class TimerDisplay : MonoBehaviour
{
	[Token(Token = "0x200024F")]
	[CompilerGenerated]
	private sealed class <UpdateTimerDisplay>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimerDisplay <>4__this;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0x12E4E20", Offset = "0x12E4E20", VA = "0x12E4E20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x12E4E68", Offset = "0x12E4E68", VA = "0x12E4E68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x12E4A30", Offset = "0x12E4A30", VA = "0x12E4A30")]
		[DebuggerHidden]
		public <UpdateTimerDisplay>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x12E4D18", Offset = "0x12E4D18", VA = "0x12E4D18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x12E4D1C", Offset = "0x12E4D1C", VA = "0x12E4D1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x12E4E28", Offset = "0x12E4E28", VA = "0x12E4E28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000250")]
	[CompilerGenerated]
	private sealed class <SetupTimeToDisplay>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimerDisplay <>4__this;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x12E5014", Offset = "0x12E5014", VA = "0x12E5014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x12E505C", Offset = "0x12E505C", VA = "0x12E505C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x12E4C10", Offset = "0x12E4C10", VA = "0x12E4C10")]
		[DebuggerHidden]
		public <SetupTimeToDisplay>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x12E4E70", Offset = "0x12E4E70", VA = "0x12E4E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x12E4E74", Offset = "0x12E4E74", VA = "0x12E4E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x12E501C", Offset = "0x12E501C", VA = "0x12E501C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI TimerText;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool LerpSetupTimeDisplay;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color ColorWin;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color ColorLoose;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NetworkedTimer NetworkedTimer;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool DisplayInfinitLoop;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject InfinitLoop;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private rcBoolGameParameter _displayRemainingTimeParameter;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine _updateTimerDisplayCoroutine;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine _setupTimeToDisplayCoroutine;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _timeToDisplay;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _levelTime;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly WaitForSeconds _refreshYield;

	[Token(Token = "0x4000CBA")]
	private const int SECONDS_IN_A_DAY = 86400;

	[Token(Token = "0x4000CBB")]
	private const int SECONDS_IN_AN_HOUR = 3600;

	[Token(Token = "0x4000CBC")]
	private const int SECONDS_IN_A_MINUTE = 60;

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x12E45C8", Offset = "0x12E45C8", VA = "0x12E45C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x12E47B8", Offset = "0x12E47B8", VA = "0x12E47B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x12E46F4", Offset = "0x12E46F4", VA = "0x12E46F4")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x12E49F0", Offset = "0x12E49F0", VA = "0x12E49F0")]
	public void UpdateTimerDisplayWhenPaused(float timeParameter)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x12E497C", Offset = "0x12E497C", VA = "0x12E497C")]
	[IteratorStateMachine(typeof(<UpdateTimerDisplay>d__20))]
	public IEnumerator UpdateTimerDisplay()
	{
		return null;
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x12E4A58", Offset = "0x12E4A58", VA = "0x12E4A58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x12E4AF0", Offset = "0x12E4AF0", VA = "0x12E4AF0")]
	private void refreshTimeToDisplay()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x12E4900", Offset = "0x12E4900", VA = "0x12E4900")]
	public void LerpTimeToDisplay(float timeToSetup)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x12E4B9C", Offset = "0x12E4B9C", VA = "0x12E4B9C")]
	[IteratorStateMachine(typeof(<SetupTimeToDisplay>d__24))]
	private IEnumerator SetupTimeToDisplay()
	{
		return null;
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x12E4C38", Offset = "0x12E4C38", VA = "0x12E4C38")]
	public void SetupInfinitLoop(bool status)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x12E4C9C", Offset = "0x12E4C9C", VA = "0x12E4C9C")]
	public TimerDisplay()
	{
	}
}
[Token(Token = "0x2000251")]
public class TimerInfinitLoopDisplay : MonoBehaviour
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TimerDisplay> TimerDisplays;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RewardManager RewardManagerScript;

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x12E5064", Offset = "0x12E5064", VA = "0x12E5064")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x12E5068", Offset = "0x12E5068", VA = "0x12E5068")]
	public void SetupInfinitLoopDisplay()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x12E5284", Offset = "0x12E5284", VA = "0x12E5284")]
	public TimerInfinitLoopDisplay()
	{
	}
}
[Token(Token = "0x2000252")]
public class TouchableJauge : Jauge
{
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public rcTouchableObject TouchableParameter;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float TriggerDuration;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnGaugeComplete;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _canUpdate;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _currentFillValue;

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x12E528C", Offset = "0x12E528C", VA = "0x12E528C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x12E5294", Offset = "0x12E5294", VA = "0x12E5294")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x12E53B8", Offset = "0x12E53B8", VA = "0x12E53B8")]
	public TouchableJauge()
	{
	}
}
[Token(Token = "0x2000253")]
public class TriggerableJauge : MonoBehaviour
{
	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image Jauge;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentFillValue;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcTouchableTriggerableObject TriggerableParameter;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _triggerDuration;

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x12E53C0", Offset = "0x12E53C0", VA = "0x12E53C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x12E53E0", Offset = "0x12E53E0", VA = "0x12E53E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x12E54C0", Offset = "0x12E54C0", VA = "0x12E54C0")]
	private void UpdateJauge(float newFillamounut)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x12E54DC", Offset = "0x12E54DC", VA = "0x12E54DC")]
	public TriggerableJauge()
	{
	}
}
[Token(Token = "0x2000254")]
public class ApplicationVersion : MonoBehaviour
{
	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI VersionText;

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x12E54E4", Offset = "0x12E54E4", VA = "0x12E54E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x12E55A4", Offset = "0x12E55A4", VA = "0x12E55A4")]
	public ApplicationVersion()
	{
	}
}
[Token(Token = "0x2000255")]
public class ChallengeLevelInfoDisplay : MonoBehaviour
{
	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Content")]
	[SerializeField]
	private TextMeshProUGUI _levelOrderTextMesh;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _levelNameTextMesh;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _levelDurationTextMesh;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Highlight")]
	private SelectableTextMesh[] _highlightableTextMeshes;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SelectableSprite[] _highlightableSprites;

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x12E55AC", Offset = "0x12E55AC", VA = "0x12E55AC")]
	public void SetDisplay(int levelIndex, string levelName, int durationInSeconds)
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x12E576C", Offset = "0x12E576C", VA = "0x12E576C")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x12E58B0", Offset = "0x12E58B0", VA = "0x12E58B0")]
	public void SetHighlight(bool highlight)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x12E59DC", Offset = "0x12E59DC", VA = "0x12E59DC")]
	public ChallengeLevelInfoDisplay()
	{
	}
}
[Token(Token = "0x2000256")]
public class ChallengeLevelRecapDisplay : MonoBehaviour
{
	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcLocalizedText _scoreLocalizedFormat;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _levelNameTextMesh;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _scoreTextMesh;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI _scoreRatioTextMesh;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SelectableTextMesh[] _selectableTextMeshes;

	[Token(Token = "0x4000CDA")]
	private const string DEFAULT_DISPLAY = "---";

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x12E59E4", Offset = "0x12E59E4", VA = "0x12E59E4")]
	public void SetDisplay(string levelName, int score, int successfulShots, int attemptedShots)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x12E5C2C", Offset = "0x12E5C2C", VA = "0x12E5C2C")]
	public void HighlightDisplay(bool highlight)
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x12E5D2C", Offset = "0x12E5D2C", VA = "0x12E5D2C")]
	public void SetDefaultDisplay(string levelName)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x12E5E5C", Offset = "0x12E5E5C", VA = "0x12E5E5C")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x12E5FA0", Offset = "0x12E5FA0", VA = "0x12E5FA0")]
	public ChallengeLevelRecapDisplay()
	{
	}
}
[Token(Token = "0x2000257")]
[RequireComponent(typeof(ArcadeSelectable))]
public class ChallengePresetButton : MonoBehaviour
{
	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _presetNameDisplay;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _presetDurationDisplay;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image _presetIcone;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ChallengePreset _preset;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ArcadeSelectable _selectable;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityAction _onValidatedResponse;

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x12E5FA8", Offset = "0x12E5FA8", VA = "0x12E5FA8")]
	public void SetPreset(ChallengeManager challengeManager, ChallengePreset preset, string cacheId)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x12E62AC", Offset = "0x12E62AC", VA = "0x12E62AC")]
	public void RefreshDisplay()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x12E649C", Offset = "0x12E649C", VA = "0x12E649C")]
	public ChallengePresetButton()
	{
	}
}
[Token(Token = "0x2000259")]
public class ChallengeRecapDisplay : MonoBehaviour
{
	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _challengeNameText;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcLocalizedText _localizedScoreFormat;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI _finalScoreText;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI _bestComboText;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ChallengeLevelRecapDisplay[] _levelRecapDisplays;

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x12E655C", Offset = "0x12E655C", VA = "0x12E655C")]
	public void SetupChallengeDisplay()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x12E6784", Offset = "0x12E6784", VA = "0x12E6784")]
	public void SetLevelRecap(int levelIndex)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x12E6AA4", Offset = "0x12E6AA4", VA = "0x12E6AA4")]
	public void DisplayNextLevel(string levelName)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x12E6BFC", Offset = "0x12E6BFC", VA = "0x12E6BFC")]
	public void SetAllLevelsRecap()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x12E68EC", Offset = "0x12E68EC", VA = "0x12E68EC")]
	private void refreshChallengeRecap()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x12E6DD0", Offset = "0x12E6DD0", VA = "0x12E6DD0")]
	public ChallengeRecapDisplay()
	{
	}
}
[Token(Token = "0x200025A")]
public class InputTypeDisplay : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200025B")]
	public struct DisplayObjects
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private XRInputTracker.XRInputSystem _inputType;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private GameObject[] _displayObjects;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x12E77E4", Offset = "0x12E77E4", VA = "0x12E77E4")]
		public DisplayObjects(XRInputTracker.XRInputSystem inputType)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x12E739C", Offset = "0x12E739C", VA = "0x12E739C")]
		public bool UpdateDisplay(XRInputTracker.XRInputSystem currentInputType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x12E7624", Offset = "0x12E7624", VA = "0x12E7624")]
		public void EnableDisplay(bool enable)
		{
		}
	}

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] _defaultDisplayObjects;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DisplayObjects[] _displayObjects;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _displayTypeParameter;

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x12E6DD8", Offset = "0x12E6DD8", VA = "0x12E6DD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x12E7178", Offset = "0x12E7178", VA = "0x12E7178")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x12E7044", Offset = "0x12E7044", VA = "0x12E7044")]
	private void updateDisplay(XRInputTracker.XRInputSystem inputSystem)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x12E70EC", Offset = "0x12E70EC", VA = "0x12E70EC")]
	private void enableDefaultDisplay()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x12E73C0", Offset = "0x12E73C0", VA = "0x12E73C0")]
	private void onDisplayTypeStatusChanged(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x12E7700", Offset = "0x12E7700", VA = "0x12E7700")]
	private void onInputSystemChanged(XRInputTracker.XRInputSystem fromValue, XRInputTracker.XRInputSystem toValue)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x12E7708", Offset = "0x12E7708", VA = "0x12E7708")]
	public InputTypeDisplay()
	{
	}
}
[Token(Token = "0x200025C")]
[RequireComponent(typeof(ArcadeSelectable))]
public class LeaderboardButtonDisplay : MonoBehaviour
{
	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _leaderboardNameDisplay;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _highScoreDisplay;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _nameDisplay;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image LeaderboardIcone;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Leaderboard _leaderboard;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ArcadeSelectable _selectable;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _responseRegistered;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Guid _currentRequest;

	[Token(Token = "0x4000CF6")]
	private const string DEFAULT_HIGHSCORE_DISPLAY = "---";

	[Token(Token = "0x4000CF7")]
	private const int LEADERBOARD_REQUEST_RANGE = 3;

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x12E784C", Offset = "0x12E784C", VA = "0x12E784C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x12E79F4", Offset = "0x12E79F4", VA = "0x12E79F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x12E7A88", Offset = "0x12E7A88", VA = "0x12E7A88")]
	public void SetDisplay(Leaderboard leaderboard, [Optional] Sprite icon)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x12E7BE8", Offset = "0x12E7BE8", VA = "0x12E7BE8")]
	public void SetSelectableResponse(UnityAction<Leaderboard> displayLeaderboardAction)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x12E7B48", Offset = "0x12E7B48", VA = "0x12E7B48")]
	public void RefreshDisplay()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x12E7954", Offset = "0x12E7954", VA = "0x12E7954")]
	public void ResetHighScoreDisplay()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x12E7D60", Offset = "0x12E7D60", VA = "0x12E7D60")]
	public void SetLeaderboardName(string name)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x12E7DFC", Offset = "0x12E7DFC", VA = "0x12E7DFC")]
	private void onGetTopEntries(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x12E7F28", Offset = "0x12E7F28", VA = "0x12E7F28")]
	public LeaderboardButtonDisplay()
	{
	}
}
[Token(Token = "0x200025E")]
public class LeaderboardEntryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _rankDisplay;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _nameDisplay;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _scoreDisplay;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FontStyles _highlightFontStyle;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Color _prefilledEntryColor;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _colorCached;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool _fontStylesCached;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color _rankBaseColor;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color _nameBaseColor;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color _scoreBaseColor;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FontStyles _rankFontStyle;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private FontStyles _nameFontStyle;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FontStyles _scoreFontStyle;

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x12E7FB8", Offset = "0x12E7FB8", VA = "0x12E7FB8")]
	public void SetDisplay(int rank, string name, string score, bool prefilled = false)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x12E83E8", Offset = "0x12E83E8", VA = "0x12E83E8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x12E8484", Offset = "0x12E8484", VA = "0x12E8484")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x12E86F4", Offset = "0x12E86F4", VA = "0x12E86F4")]
	public void SetHighlight(bool highlight)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x12E8990", Offset = "0x12E8990", VA = "0x12E8990")]
	public void SetDisplayColor(Color color)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x12E82C8", Offset = "0x12E82C8", VA = "0x12E82C8")]
	private void cacheColors()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x12E88A0", Offset = "0x12E88A0", VA = "0x12E88A0")]
	private void cacheFontStyles()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x12E8AF0", Offset = "0x12E8AF0", VA = "0x12E8AF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x12E8AF8", Offset = "0x12E8AF8", VA = "0x12E8AF8")]
	public LeaderboardEntryDisplay()
	{
	}
}
[Token(Token = "0x200025F")]
public class LevelSimpleButton : MonoBehaviour
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArcadeSelectable Selectable;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI LevelIndexText;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI LevelNameText;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image LevelBossIcone;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] Stars;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _initialized;

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x12E8B14", Offset = "0x12E8B14", VA = "0x12E8B14")]
	public void InitButton(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x12E8CD4", Offset = "0x12E8CD4", VA = "0x12E8CD4")]
	public LevelSimpleButton()
	{
	}
}
[Token(Token = "0x2000261")]
public class RoomEntryButton : ArcadeSelectableHighlightable
{
	[Token(Token = "0x17000291")]
	public HostRoom Room
	{
		[Token(Token = "0x6001030")]
		[Address(RVA = "0x12E8D48", Offset = "0x12E8D48", VA = "0x12E8D48")]
		[CompilerGenerated]
		get
		{
			return default(HostRoom);
		}
		[Token(Token = "0x6001031")]
		[Address(RVA = "0x12E8D5C", Offset = "0x12E8D5C", VA = "0x12E8D5C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x12E8D7C", Offset = "0x12E8D7C", VA = "0x12E8D7C")]
	public void Setup(HostRoom room)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x12E9040", Offset = "0x12E9040", VA = "0x12E9040")]
	public RoomEntryButton()
	{
	}
}
[Token(Token = "0x2000262")]
public class TrainingLevelButton : MonoBehaviour
{
	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI LevelIndexUnlocked;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI LevelIndexLocked;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Locked;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject UnLocked;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> Stars;

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x12E9048", Offset = "0x12E9048", VA = "0x12E9048")]
	public TrainingLevelButton()
	{
	}
}
[Token(Token = "0x2000263")]
public class XRInputToggle : ArcadeSelectableToggle
{
	[Serializable]
	[Token(Token = "0x2000264")]
	public struct InputSelectableToggleOption
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public XRInputTracker.XRInputSystem InputType;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public rcXRInputs.Feature[] Features;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SelectableToggleOption SelectableOption;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnSwitchedToEvent;
	}

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[Header("XR Inputs Settings")]
	private InputSelectableToggleOption[] _inputOptions;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private rcBoolGameParameter _fteJustCompletedParameter;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private UnityEvent _onEmptySwitch;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private UnityEvent _onWantedInput;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private XRInputSystemParameter _inputSystemParameter;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private XRInputTracker.XRInputSystem _desiredInputType;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool _listeningToSwitch;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool _demoLockedToggle;

	[Token(Token = "0x17000292")]
	public unsafe ref UnityEvent OnWantedInput
	{
		[Token(Token = "0x6001035")]
		[Address(RVA = "0x12E9050", Offset = "0x12E9050", VA = "0x12E9050")]
		get
		{
			return ref *(UnityEvent*)null;
		}
	}

	[Token(Token = "0x17000293")]
	public XRInputTracker.XRInputSystem DesiredInputType
	{
		[Token(Token = "0x6001036")]
		[Address(RVA = "0x12E9058", Offset = "0x12E9058", VA = "0x12E9058")]
		get
		{
			return default(XRInputTracker.XRInputSystem);
		}
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x12E9060", Offset = "0x12E9060", VA = "0x12E9060")]
	private void Start()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x12E93F8", Offset = "0x12E93F8", VA = "0x12E93F8", Slot = "9")]
	public override void OnUnselected()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x12E92B0", Offset = "0x12E92B0", VA = "0x12E92B0")]
	public void SelectInputMode(XRInputTracker.XRInputSystem inputMode)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x12E9514", Offset = "0x12E9514", VA = "0x12E9514")]
	public void WaitForInputMode(XRInputTracker.XRInputSystem inputMode)
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x12E9828", Offset = "0x12E9828", VA = "0x12E9828")]
	public void WaitForHands()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x12E9830", Offset = "0x12E9830", VA = "0x12E9830")]
	public void WaitForControllers()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x12E9838", Offset = "0x12E9838", VA = "0x12E9838")]
	private void onWantedInput(XRInputTracker.XRInputSystem fromValue, XRInputTracker.XRInputSystem toValue)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x12E97D8", Offset = "0x12E97D8", VA = "0x12E97D8")]
	private void doInputChange(XRInputTracker.XRInputSystem inputValue)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x12E999C", Offset = "0x12E999C", VA = "0x12E999C")]
	private void unplugConcurrentInputs()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x12E9AC0", Offset = "0x12E9AC0", VA = "0x12E9AC0")]
	private void invokeInputSpecificResponse(XRInputTracker.XRInputSystem inputSystem)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x12E9B2C", Offset = "0x12E9B2C", VA = "0x12E9B2C", Slot = "18")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x12E9B44", Offset = "0x12E9B44", VA = "0x12E9B44", Slot = "19")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x12E9B5C", Offset = "0x12E9B5C", VA = "0x12E9B5C")]
	public XRInputToggle()
	{
	}
}
[Token(Token = "0x2000265")]
public class BootMenu : ArcadeMenu
{
	[Token(Token = "0x2000266")]
	[CompilerGenerated]
	private sealed class <displayCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BootMenu <>4__this;

		[Token(Token = "0x17000294")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x12EA654", Offset = "0x12EA654", VA = "0x12EA654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x12EA69C", Offset = "0x12EA69C", VA = "0x12EA69C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x12E9E8C", Offset = "0x12E9E8C", VA = "0x12E9E8C")]
		[DebuggerHidden]
		public <displayCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x12EA0A8", Offset = "0x12EA0A8", VA = "0x12EA0A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x12EA0AC", Offset = "0x12EA0AC", VA = "0x12EA0AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x12EA65C", Offset = "0x12EA65C", VA = "0x12EA65C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcBoolGameParameter _screenFocusedParameter;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Logo Display")]
	[SerializeField]
	private GameObject _logoDisplay;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcBoolGameParameter _logoAnimationEndedParameter;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[Range(1f, 10f)]
	private float _logoDisplayTime;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Warning Display")]
	[SerializeField]
	private GameObject _warningDisplay;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private rcBoolGameParameter _warningShownParameter;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Range(1f, 30f)]
	[SerializeField]
	private float _warningDisplayTime;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[Header("FTE")]
	private GameObject _fteDisplay;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private rcGameEvent _startFTEEvent;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshProUGUI _fteRuleTextMesh;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private rcStringGameParameter _fteRuleParameter;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private rcBoolGameParameter _handsScannedParameter;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private rcFloatGameParameter _handsScanProgressParameter;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Image _scanProgressBar;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IEnumerator _displayCoroutine;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _displayingWarning;

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x12E9CE8", Offset = "0x12E9CE8", VA = "0x12E9CE8", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x12E9CF0", Offset = "0x12E9CF0", VA = "0x12E9CF0", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x12E9E18", Offset = "0x12E9E18", VA = "0x12E9E18")]
	[IteratorStateMachine(typeof(<displayCoroutine>d__18))]
	private IEnumerator displayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x12E9EB4", Offset = "0x12E9EB4", VA = "0x12E9EB4")]
	private void updateScanProgress(float toValue, float fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x12E9F48", Offset = "0x12E9F48", VA = "0x12E9F48")]
	private void updateScanState(bool toValue, bool fromValue_, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x12E9F4C", Offset = "0x12E9F4C", VA = "0x12E9F4C")]
	private void updateFteRule(string toValue, string fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x12E9FE8", Offset = "0x12E9FE8", VA = "0x12E9FE8", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x12E9FEC", Offset = "0x12E9FEC", VA = "0x12E9FEC", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x12E9FF0", Offset = "0x12E9FF0", VA = "0x12E9FF0", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x12E9FF4", Offset = "0x12E9FF4", VA = "0x12E9FF4", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x12E9FF8", Offset = "0x12E9FF8", VA = "0x12E9FF8", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x12E9FFC", Offset = "0x12E9FFC", VA = "0x12E9FFC", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x12EA000", Offset = "0x12EA000", VA = "0x12EA000")]
	public BootMenu()
	{
	}
}
[Token(Token = "0x2000267")]
[CreateAssetMenu(fileName = "MS_BootSequenceSettings", menuName = "GBA/Menus/Menu Settings/Boot Sequence")]
public class BootSequenceSettings : MenuSettings
{
	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _screenFocusedParameter;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _animationEndedParameter;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcGameEvent _bootSequenceEndedEvent;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private FTESequenceSettings _fteSettings;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _animationRoot;

	[Token(Token = "0x17000296")]
	public bool SequenceCompleted
	{
		[Token(Token = "0x6001059")]
		[Address(RVA = "0x12EA6A4", Offset = "0x12EA6A4", VA = "0x12EA6A4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600105A")]
		[Address(RVA = "0x12EA6AC", Offset = "0x12EA6AC", VA = "0x12EA6AC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000297")]
	public bool ScreenFocused
	{
		[Token(Token = "0x600105B")]
		[Address(RVA = "0x12EA6B8", Offset = "0x12EA6B8", VA = "0x12EA6B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000298")]
	public GameObject AnimationRoot
	{
		[Token(Token = "0x600105C")]
		[Address(RVA = "0x12EA748", Offset = "0x12EA748", VA = "0x12EA748")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000299")]
	public bool BootAnimationEnded
	{
		[Token(Token = "0x600105D")]
		[Address(RVA = "0x12EA750", Offset = "0x12EA750", VA = "0x12EA750")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029A")]
	public FTESequenceSettings FTESettings
	{
		[Token(Token = "0x600105E")]
		[Address(RVA = "0x12EA7E0", Offset = "0x12EA7E0", VA = "0x12EA7E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x12EA7E8", Offset = "0x12EA7E8", VA = "0x12EA7E8", Slot = "4")]
	public override void InitSettings(GameObject runtimeRoot)
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x12EA8E8", Offset = "0x12EA8E8", VA = "0x12EA8E8", Slot = "5")]
	[ContextMenu("Reset Boot Settings")]
	public override void ResetSettings()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x12EA914", Offset = "0x12EA914", VA = "0x12EA914")]
	public void RaiseBootSequenceEndedEvent()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x12EA99C", Offset = "0x12EA99C", VA = "0x12EA99C")]
	public BootSequenceSettings()
	{
	}
}
[Token(Token = "0x2000268")]
public class FTEMenu : MonoBehaviour
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _fteRuleTextMesh;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcStringGameParameter _fteRuleParameter;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcFloatGameParameter _handsScanProgressParameter;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image _scanProgressBar;

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x12EA9A4", Offset = "0x12EA9A4", VA = "0x12EA9A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x12EAB50", Offset = "0x12EAB50", VA = "0x12EAB50")]
	public void StartSequence()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x12EAB9C", Offset = "0x12EAB9C", VA = "0x12EAB9C")]
	public void StopSequence()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x12EABE8", Offset = "0x12EABE8", VA = "0x12EABE8")]
	private void updateScanProgress(float toValue, float fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x12EAC7C", Offset = "0x12EAC7C", VA = "0x12EAC7C")]
	private void updateFteRule(string toValue, string fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x12EAD18", Offset = "0x12EAD18", VA = "0x12EAD18")]
	public FTEMenu()
	{
	}
}
[Token(Token = "0x2000269")]
[CreateAssetMenu(fileName = "MS_FTESequenceSettings", menuName = "GBA/Menus/Menu Settings/FTE Sequence")]
public class FTESequenceSettings : MenuSettings
{
	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcGameEvent _startFTEEvent;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _handsScannedParameter;

	[Token(Token = "0x1700029B")]
	public bool HandsScanned
	{
		[Token(Token = "0x6001069")]
		[Address(RVA = "0x12EAD20", Offset = "0x12EAD20", VA = "0x12EAD20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x12EADB0", Offset = "0x12EADB0", VA = "0x12EADB0")]
	public void RaiseStartFTEEvent()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x12EAE38", Offset = "0x12EAE38", VA = "0x12EAE38")]
	public FTESequenceSettings()
	{
	}
}
[Token(Token = "0x200026A")]
public class ChallengeInfoMenu : ArcadeListMenu
{
	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private LevelMenuButtons _levelButtons;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerRef;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Challenge Info Display")]
	[SerializeField]
	private TextMeshProUGUI _challengeNameTextMesh;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshProUGUI _challengeRuleTextMesh;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private rcLocalizedText _challengeLocalizedRule;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("Time Display")]
	[SerializeField]
	private TimerDisplay _levelTimerDisplay;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshProUGUI _challengeDurationTextMesh;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject _challengeDurationRoot;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	[Header("Break Display")]
	private GameObject _breakPopup;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ChallengeRecapDisplay _breakRecapDisplay;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private TimerDisplay _breakTimerDisplay;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ChallengeLevelInfoDisplay[] _levelInfoDisplays;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private LevelSettings _currentLevelId;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private PlayManager _currentPlayManager;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private LeaderboardManager _leaderboardManager;

	[Token(Token = "0x1700029C")]
	private bool hasLeaderboard
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0x12EAE40", Offset = "0x12EAE40", VA = "0x12EAE40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029D")]
	private bool isPartyMode
	{
		[Token(Token = "0x600106D")]
		[Address(RVA = "0x12EAEE4", Offset = "0x12EAEE4", VA = "0x12EAEE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x12EAF6C", Offset = "0x12EAF6C", VA = "0x12EAF6C", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x12EB248", Offset = "0x12EB248", VA = "0x12EB248", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x12EB498", Offset = "0x12EB498", VA = "0x12EB498")]
	public void DisplayChallengeInfo()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x12EBC3C", Offset = "0x12EBC3C", VA = "0x12EBC3C")]
	public void DisplayCurrentChallengeInfo(bool checkNextUnlock = false)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x12EB7A0", Offset = "0x12EB7A0", VA = "0x12EB7A0")]
	private void setupChallengeLevelsInfo()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x12EBD98", Offset = "0x12EBD98", VA = "0x12EBD98")]
	private void refreshChallengeLevelsInfoHighlight()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x12EBA78", Offset = "0x12EBA78", VA = "0x12EBA78")]
	public void SetLevelInfo(LevelSettings levelId, bool challengeStarted = true)
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x12EBE98", Offset = "0x12EBE98", VA = "0x12EBE98", Slot = "14")]
	public override void OnClosePopup()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x12EBFA4", Offset = "0x12EBFA4", VA = "0x12EBFA4")]
	public void ShowGoPopup()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x12EC0D8", Offset = "0x12EC0D8", VA = "0x12EC0D8")]
	public void CloseGoPopup()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x12EC20C", Offset = "0x12EC20C", VA = "0x12EC20C")]
	public void ShowBreakPopup()
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x12EBE4C", Offset = "0x12EBE4C", VA = "0x12EBE4C")]
	private void setupTimer()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x12EBBF8", Offset = "0x12EBBF8", VA = "0x12EBBF8")]
	private void refreshLeaderboardButton()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x12EC37C", Offset = "0x12EC37C", VA = "0x12EC37C")]
	private void setLevelStarted()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x12EC3CC", Offset = "0x12EC3CC", VA = "0x12EC3CC")]
	private void setLevelEnded()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x12EC448", Offset = "0x12EC448", VA = "0x12EC448")]
	private void autoselectStartButton()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x12EC52C", Offset = "0x12EC52C", VA = "0x12EC52C")]
	private void autoselectNextPresetButton()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x12EC610", Offset = "0x12EC610", VA = "0x12EC610")]
	public ChallengeInfoMenu()
	{
	}
}
[Token(Token = "0x200026B")]
public class ChallengeLeaderboardDisplayMenu : LeaderboardOnlineDisplayMenu
{
	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private Transform _menuButtonsParent;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private LevelMenuButtons _levelButtons;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private LeaderboardEntryDisplay _highlightedEntry;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int _localHighlightedEntry;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private ArcadeSelectable[] _selectableLevelButtons;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int _currentMenuButtonIndex;

	[Token(Token = "0x1700029E")]
	private bool isSelectingMenuButton
	{
		[Token(Token = "0x6001080")]
		[Address(RVA = "0x12EC618", Offset = "0x12EC618", VA = "0x12EC618")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x12EC628", Offset = "0x12EC628", VA = "0x12EC628", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x12EC7C0", Offset = "0x12EC7C0", VA = "0x12EC7C0")]
	public void SetChallengeLeaderboard(Leaderboard leaderboard)
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x12ECB44", Offset = "0x12ECB44", VA = "0x12ECB44", Slot = "24")]
	public override void DisplayLeaderboard()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x12ECE34", Offset = "0x12ECE34", VA = "0x12ECE34")]
	public void SetNewLocalEntry(int entryIndex)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x12ECEC8", Offset = "0x12ECEC8", VA = "0x12ECEC8")]
	private void refreshHighlight()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x12ECFA0", Offset = "0x12ECFA0", VA = "0x12ECFA0")]
	private void setHighlight(int entryIndex)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x12EC9A4", Offset = "0x12EC9A4", VA = "0x12EC9A4")]
	private void clearHighlight()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x12ED0C8", Offset = "0x12ED0C8", VA = "0x12ED0C8")]
	private void autoselectStartButton()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x12ED1C0", Offset = "0x12ED1C0", VA = "0x12ED1C0")]
	private void autoselectNextPresetButton()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x12EC670", Offset = "0x12EC670", VA = "0x12EC670")]
	private ArcadeSelectable getFirstMenuButton()
	{
		return null;
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x12ED2C0", Offset = "0x12ED2C0", VA = "0x12ED2C0")]
	private ArcadeSelectable getLastMenuButton()
	{
		return null;
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x12ED454", Offset = "0x12ED454", VA = "0x12ED454")]
	private ArcadeSelectable getPreviousMenuButton()
	{
		return null;
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x12ED5AC", Offset = "0x12ED5AC", VA = "0x12ED5AC")]
	private ArcadeSelectable getNextMenuButton()
	{
		return null;
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x12ED704", Offset = "0x12ED704", VA = "0x12ED704", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x12ED840", Offset = "0x12ED840", VA = "0x12ED840", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x12ED94C", Offset = "0x12ED94C", VA = "0x12ED94C", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x12ED9FC", Offset = "0x12ED9FC", VA = "0x12ED9FC", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x12EDAAC", Offset = "0x12EDAAC", VA = "0x12EDAAC")]
	public ChallengeLeaderboardDisplayMenu()
	{
	}
}
[Token(Token = "0x200026C")]
public class ChallengeRecapEndMenu : ArcadeMenu
{
	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Challenge Settings")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ChallengeRecapDisplay _challengeRecapDisplay;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[Header("Popups")]
	private UnlocksArcadePopup _unlocksPopup;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ArcadeConfirmationPopup _confirmationPopup;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[Header("User Intent")]
	private MenuUserIntent _openChallengeIntent;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private MenuUserIntent _continueIntent;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LeaderboardManager _challengeLeaderboardManager;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _pendingHomeEvent;

	[Token(Token = "0x1700029F")]
	private bool hasNewLeaderboardInput
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x12EDB2C", Offset = "0x12EDB2C", VA = "0x12EDB2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x12EDBE4", Offset = "0x12EDBE4", VA = "0x12EDBE4", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x12EE164", Offset = "0x12EE164", VA = "0x12EE164", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x12EDD8C", Offset = "0x12EDD8C", VA = "0x12EDD8C")]
	public void HideMenu(bool hide)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x12EE16C", Offset = "0x12EE16C", VA = "0x12EE16C")]
	public void SetValidatedPopup()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x12EE20C", Offset = "0x12EE20C", VA = "0x12EE20C")]
	public void SetCanceledPopup()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x12EE214", Offset = "0x12EE214", VA = "0x12EE214", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x12EE218", Offset = "0x12EE218", VA = "0x12EE218", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x12EDF48", Offset = "0x12EDF48", VA = "0x12EDF48")]
	private void ShowUnlocks()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x12EE2E4", Offset = "0x12EE2E4", VA = "0x12EE2E4")]
	private void OnDoneShowingUnlocks()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x12EDEE0", Offset = "0x12EDEE0", VA = "0x12EDEE0")]
	private bool ShouldShowUnlocksPopup()
	{
		return default(bool);
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x12EE3FC", Offset = "0x12EE3FC", VA = "0x12EE3FC", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x12EE4D0", Offset = "0x12EE4D0", VA = "0x12EE4D0", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x12EE570", Offset = "0x12EE570", VA = "0x12EE570", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x12EE574", Offset = "0x12EE574", VA = "0x12EE574", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x12EE578", Offset = "0x12EE578", VA = "0x12EE578", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x12EE57C", Offset = "0x12EE57C", VA = "0x12EE57C", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x12EE580", Offset = "0x12EE580", VA = "0x12EE580")]
	public ChallengeRecapEndMenu()
	{
	}
}
[Token(Token = "0x200026E")]
public class ChallengeSelectionMenu : ArcadeScrollMenu
{
	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[Header("Challenge")]
	private ChallengeManagerReference _challengeManager;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ChallengePresetsSettings _presetsManager;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject _presetButtonPrefab;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private rcGameEvent _leaveGameAmbianceEvent;

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x12EE62C", Offset = "0x12EE62C", VA = "0x12EE62C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x12EE7AC", Offset = "0x12EE7AC", VA = "0x12EE7AC")]
	private void createPresetButton(ChallengePreset preset)
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x12EE8C4", Offset = "0x12EE8C4", VA = "0x12EE8C4")]
	private void setPresetButtonValidated(int presetIndex)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x12EE9B0", Offset = "0x12EE9B0", VA = "0x12EE9B0", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x12EEA38", Offset = "0x12EEA38", VA = "0x12EEA38", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x12EEAC0", Offset = "0x12EEAC0", VA = "0x12EEAC0")]
	public ChallengeSelectionMenu()
	{
	}
}
[Token(Token = "0x200026F")]
public class ChangelogMenu : ArcadeMenu
{
	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcBoolGameParameter _displayChangelogParameter;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject _changelogTextScreen;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcLocalizedTextMeshProUGUI _localizedTextMesh;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private rcLocalizedText[] _changelogEntries;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private UnlocksArcadePopup _unlockPopup;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject _pressStartCanvas;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Unlockable[] _newlyUnlocked;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _showingUnlocks;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int _currentText;

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x12EEAC8", Offset = "0x12EEAC8", VA = "0x12EEAC8", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x12EEC2C", Offset = "0x12EEC2C", VA = "0x12EEC2C", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x12EED90", Offset = "0x12EED90", VA = "0x12EED90")]
	private void OnDoneShowingUnlocks()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x12EEEA0", Offset = "0x12EEEA0", VA = "0x12EEEA0", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x12EEEA4", Offset = "0x12EEEA4", VA = "0x12EEEA4", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x12EEEA8", Offset = "0x12EEEA8", VA = "0x12EEEA8", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x12EEEAC", Offset = "0x12EEEAC", VA = "0x12EEEAC", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x12EEEB0", Offset = "0x12EEEB0", VA = "0x12EEEB0", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x12EEEB4", Offset = "0x12EEEB4", VA = "0x12EEEB4", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x12EEEB8", Offset = "0x12EEEB8", VA = "0x12EEEB8", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x12EEEBC", Offset = "0x12EEEBC", VA = "0x12EEEBC")]
	public ChangelogMenu()
	{
	}
}
[Token(Token = "0x2000270")]
public class CreditsMenu : ArcadeMenu
{
	[Token(Token = "0x2000271")]
	[CompilerGenerated]
	private sealed class <autoscrollCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsMenu <>4__this;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <showCredits>5__2;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <targetAnchoredPosition>5__3;

		[Token(Token = "0x170002A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x12EF6C8", Offset = "0x12EF6C8", VA = "0x12EF6C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x12EF710", Offset = "0x12EF710", VA = "0x12EF710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x12EF184", Offset = "0x12EF184", VA = "0x12EF184")]
		[DebuggerHidden]
		public <autoscrollCoroutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x12EF2C0", Offset = "0x12EF2C0", VA = "0x12EF2C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x12EF2C4", Offset = "0x12EF2C4", VA = "0x12EF2C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x12EF6D0", Offset = "0x12EF6D0", VA = "0x12EF6D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[Header("Scroll Settings")]
	private RectTransform _viewportTransform;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private RectTransform _contentTransform;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[Range(0f, 5f)]
	private float _delayBeforeAutoscroll;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Range(0f, 10f)]
	[SerializeField]
	private float _delayBeforeStartScreen;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[Range(0f, 1f)]
	private float _endAnchoredPosition;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	[Range(1f, 100f)]
	private float _autoscrollSpeed;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Script Settings")]
	[SerializeField]
	private GameObject _creditsContainer;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private MenuUserIntent _backToStartIntent;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private bool _playScriptedCredits;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject _nextUpdateScreen;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private EndOfTrainingPopup _endOfTrainingPopup;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private IEnumerator _autoscrollCoroutine;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _scriptedCredits;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _endReached;

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x12EEECC", Offset = "0x12EEECC", VA = "0x12EEECC", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x12EF13C", Offset = "0x12EF13C", VA = "0x12EF13C", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x12EF0C8", Offset = "0x12EF0C8", VA = "0x12EF0C8")]
	[IteratorStateMachine(typeof(<autoscrollCoroutine>d__16))]
	private IEnumerator autoscrollCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x12EF1AC", Offset = "0x12EF1AC", VA = "0x12EF1AC")]
	public void SetScriptedCredits()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x12EF1B8", Offset = "0x12EF1B8", VA = "0x12EF1B8", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x12EF1BC", Offset = "0x12EF1BC", VA = "0x12EF1BC", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x12EF248", Offset = "0x12EF248", VA = "0x12EF248", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x12EF25C", Offset = "0x12EF25C", VA = "0x12EF25C", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x12EF270", Offset = "0x12EF270", VA = "0x12EF270", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x12EF274", Offset = "0x12EF274", VA = "0x12EF274", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x12EF278", Offset = "0x12EF278", VA = "0x12EF278", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x12EF27C", Offset = "0x12EF27C", VA = "0x12EF27C", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x12EF280", Offset = "0x12EF280", VA = "0x12EF280")]
	public CreditsMenu()
	{
	}
}
[Token(Token = "0x2000272")]
public class EndOfTrainingPopup : ArcadeMenu
{
	[Serializable]
	[Token(Token = "0x2000273")]
	public struct PopupPage
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject PageObject;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEvent OnOpenPage;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent OnClosePage;
	}

	[Token(Token = "0x2000274")]
	[CompilerGenerated]
	private sealed class <playUnlockAnimations>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfTrainingPopup <>4__this;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <previousIndex>5__2;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170002A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x12EFDF0", Offset = "0x12EFDF0", VA = "0x12EFDF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0x12EFE38", Offset = "0x12EFE38", VA = "0x12EFE38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x12EF78C", Offset = "0x12EF78C", VA = "0x12EF78C")]
		[DebuggerHidden]
		public <playUnlockAnimations>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x12EFB84", Offset = "0x12EFB84", VA = "0x12EFB84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x12EFB88", Offset = "0x12EFB88", VA = "0x12EFB88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x12EFDF8", Offset = "0x12EFDF8", VA = "0x12EFDF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private PopupPage[] _pages;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Range(0f, 5f)]
	[SerializeField]
	private float _minReadingTime;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ArcadeMenu _sourceMenu;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _waitingForInput;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WaitForSeconds _yieldUntilInputAllowed;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WaitWhile _yieldUntilInput;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent ShowPopupEvent;

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x12EEFE8", Offset = "0x12EEFE8", VA = "0x12EEFE8")]
	public void ShowEndOfTraining(ArcadeMenu sourceMenu)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x12EF718", Offset = "0x12EF718", VA = "0x12EF718")]
	[IteratorStateMachine(typeof(<playUnlockAnimations>d__9))]
	private IEnumerator playUnlockAnimations()
	{
		return null;
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x12EF7B4", Offset = "0x12EF7B4", VA = "0x12EF7B4")]
	private void initYieldInstructions()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x12EF8E8", Offset = "0x12EF8E8", VA = "0x12EF8E8")]
	public void ReturnToSourceMenu()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x12EF98C", Offset = "0x12EF98C", VA = "0x12EF98C", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x12EF990", Offset = "0x12EF990", VA = "0x12EF990", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x12EFA74", Offset = "0x12EFA74", VA = "0x12EFA74", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x12EFB58", Offset = "0x12EFB58", VA = "0x12EFB58", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x12EFB5C", Offset = "0x12EFB5C", VA = "0x12EFB5C", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x12EFB60", Offset = "0x12EFB60", VA = "0x12EFB60", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x12EFB64", Offset = "0x12EFB64", VA = "0x12EFB64", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x12EFB68", Offset = "0x12EFB68", VA = "0x12EFB68", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x12EFB6C", Offset = "0x12EFB6C", VA = "0x12EFB6C")]
	public EndOfTrainingPopup()
	{
	}
}
[Token(Token = "0x2000275")]
public class LeaderboardDisplayMenu : ArcadeScrollMenu
{
	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected TextMeshProUGUI _menuTitle;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	protected GameObject _leaderboardEntryPrefab;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Leaderboard _leaderboard;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _autoselectRegistered;

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x12EFE40", Offset = "0x12EFE40", VA = "0x12EFE40", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x12EFED8", Offset = "0x12EFED8", VA = "0x12EFED8", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x12EFFB8", Offset = "0x12EFFB8", VA = "0x12EFFB8", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x12F0078", Offset = "0x12F0078", VA = "0x12F0078", Slot = "24")]
	public virtual void DisplayLeaderboard()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x12ECAA8", Offset = "0x12ECAA8", VA = "0x12ECAA8")]
	protected void setMenuTitle(string title)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x12F02F0", Offset = "0x12F02F0", VA = "0x12F02F0", Slot = "25")]
	protected virtual void refreshSelectableEntries()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x12F0624", Offset = "0x12F0624", VA = "0x12F0624")]
	protected ArcadeSelectable getOrCreateSelectableEntry(Leaderboard.LeaderboardData.LeaderboardEntry entry, int entryIndex)
	{
		return null;
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x12F07F4", Offset = "0x12F07F4", VA = "0x12F07F4")]
	protected void resetSelectableEntry(int index)
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x12F0874", Offset = "0x12F0874", VA = "0x12F0874")]
	public LeaderboardDisplayMenu()
	{
	}
}
[Token(Token = "0x2000276")]
public class LeaderboardInputMenu : ArcadeListMenu
{
	[Token(Token = "0x4000D94")]
	public const string INITIALS_PLAYERPREFS_KEY = "LeaderboardInitials";

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI _menuTitle;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private LeaderboardEntryDisplay _virtualEntryDisplay;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private MenuUserIntent _saveEntryIntent;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private LeaderboardsSettings _leaderboardSettings;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private UnlocksArcadePopup _unlocksPopup;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private rcIntGameParameter _splineWalkingStarsCountParam;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	[Header("Score Display")]
	private GameObject _starsParent;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject[] _stars;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private rcAudioEvent[] _starsJingles;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Color _leaderColor;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Color _leaderboardColor;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Color _standardColor;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Input Settings")]
	[SerializeField]
	private ArcadeConfirmationPopup _confirmationPopup;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject[] _eligibleEntryObjects;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject[] _nonEligibleEntryObjects;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject[] _lockedInputObjects;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private LeaderboardManager _currentLeaderboardManager;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private RewardParameters _currentRewards;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private IList<Unlockable> _currentUnlocks;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ArcadeSelectableInputChar[] _initialSelectables;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool _eligibleForLeaderboard;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	private bool _waitingForStars;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int _currentAutoselectedChar;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int _virtualRank;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool _registeredToSplineWalking;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
	private bool _pendingHomeEvent;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private readonly StringBuilder _initialsBuilder;

	[Token(Token = "0x170002A4")]
	public string CurrentInitials
	{
		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x12F087C", Offset = "0x12F087C", VA = "0x12F087C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A5")]
	public bool LockedInputs
	{
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x12F0990", Offset = "0x12F0990", VA = "0x12F0990")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x12F0A50", Offset = "0x12F0A50", VA = "0x12F0A50", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x12F0EA8", Offset = "0x12F0EA8", VA = "0x12F0EA8", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x12F0C2C", Offset = "0x12F0C2C", VA = "0x12F0C2C")]
	public void SetInitials(string initials, bool updateSelection = true)
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x12F0F28", Offset = "0x12F0F28", VA = "0x12F0F28")]
	public void DisplayEntryInput()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x12F12D0", Offset = "0x12F12D0", VA = "0x12F12D0")]
	private void onStarsReachedScreen(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x12F1900", Offset = "0x12F1900", VA = "0x12F1900")]
	private void autoselectLastNameChar()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x12F1598", Offset = "0x12F1598", VA = "0x12F1598")]
	private void refreshInputObjects()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x12F12B8", Offset = "0x12F12B8", VA = "0x12F12B8")]
	private void updateScoreDisplay()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x12F19E4", Offset = "0x12F19E4", VA = "0x12F19E4")]
	private void updateVirtualRank()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x12F1B24", Offset = "0x12F1B24", VA = "0x12F1B24")]
	private void refreshScoreDisplay()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x12F0E1C", Offset = "0x12F0E1C", VA = "0x12F0E1C")]
	private void refreshEntryNameDisplay()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x12F1C50", Offset = "0x12F1C50", VA = "0x12F1C50")]
	public void HideMenu(bool hide)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x12F1D84", Offset = "0x12F1D84", VA = "0x12F1D84")]
	public void SetValidatedPopup()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x12F1EA8", Offset = "0x12F1EA8", VA = "0x12F1EA8")]
	public void SetCanceledPopup()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x12F1EB0", Offset = "0x12F1EB0", VA = "0x12F1EB0")]
	public void AddEntry()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x12F1E24", Offset = "0x12F1E24", VA = "0x12F1E24")]
	public void DiscardEntry()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x12F1FD0", Offset = "0x12F1FD0", VA = "0x12F1FD0")]
	public void TryAddLeaderboardEntry()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x12F20F4", Offset = "0x12F20F4", VA = "0x12F20F4", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x12F2230", Offset = "0x12F2230", VA = "0x12F2230", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x12F2430", Offset = "0x12F2430", VA = "0x12F2430", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x12F2510", Offset = "0x12F2510", VA = "0x12F2510", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x12F25F0", Offset = "0x12F25F0", VA = "0x12F25F0", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x12F2768", Offset = "0x12F2768", VA = "0x12F2768", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x12F28B8", Offset = "0x12F28B8", VA = "0x12F28B8", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x12F2A1C", Offset = "0x12F2A1C", VA = "0x12F2A1C")]
	public LeaderboardInputMenu()
	{
	}
}
[Token(Token = "0x2000277")]
public class LeaderboardOnlineDisplayMenu : LeaderboardDisplayMenu
{
	[Token(Token = "0x2000278")]
	public enum LoadingState
	{
		[Token(Token = "0x4000DCB")]
		LOADING,
		[Token(Token = "0x4000DCC")]
		ERROR,
		[Token(Token = "0x4000DCD")]
		SUCCESSFUL
	}

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject[] _localLeaderboardObjects;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject[] _globalLeaderboardOnlyObjects;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("Global Leaderboards")]
	[SerializeField]
	private Transform _globalContent;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Range(1f, 10f)]
	[SerializeField]
	private int _topScoresCount;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	[Range(1f, 10f)]
	private int _higherScoresCount;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject _onlineEntryDisplayPrefab;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject _topEllipsisObject;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject _endEllipsisObject;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject _loadingMessageObject;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private TextMeshProUGUI _errorMessageMesh;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	[Header("Error Handling")]
	private rcLocalizedText _localizedErrorMessage;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private rcLocalizedText _localizedConnectionError;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private rcLocalizedText _localizedNoEntriesMessage;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private rcLocalizedText _localizedNotAvailableInDemo;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _hideLocalLeaderboard;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private LeaderboardEntryDisplay[] _topGlobalEntries;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private LeaderboardEntryDisplay[] _userAndHigherGlobalEntries;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private LeaderboardEntryDisplay _lastGlobalEntry;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private LoadingState _loadingState;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private string _currentErrorMessage;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool _localUserFound;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Guid _currentRequest;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000DC8")]
	private const int LBD_REQUEST_EXTRA_RANGE = 5;

	[Token(Token = "0x4000DC9")]
	private const int SCREEN_MAX_LINES_COUNT = 8;

	[Token(Token = "0x170002A6")]
	public LoadingState GlobalLoadingState
	{
		[Token(Token = "0x6001105")]
		[Address(RVA = "0x12F2B24", Offset = "0x12F2B24", VA = "0x12F2B24")]
		get
		{
			return default(LoadingState);
		}
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x12F2B2C", Offset = "0x12F2B2C", VA = "0x12F2B2C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x12F2C00", Offset = "0x12F2C00", VA = "0x12F2C00", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x12F2CD8", Offset = "0x12F2CD8", VA = "0x12F2CD8", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x12F2EF0", Offset = "0x12F2EF0", VA = "0x12F2EF0")]
	public void DisplayLeaderboard(ArcadeMenu parentMenu, bool hideLocal)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x12ECC70", Offset = "0x12ECC70", VA = "0x12ECC70", Slot = "24")]
	public override void DisplayLeaderboard()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x12F2E3C", Offset = "0x12F2E3C", VA = "0x12F2E3C")]
	private void refreshLocalDisplay()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x12F2F30", Offset = "0x12F2F30", VA = "0x12F2F30")]
	private void initGlobalLeaderboardDisplay()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x12F3270", Offset = "0x12F3270", VA = "0x12F3270")]
	private void clearGlobalDisplay()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x12F3428", Offset = "0x12F3428", VA = "0x12F3428")]
	private void refreshGlobalDisplay(bool entriesUpdated)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x12F35A0", Offset = "0x12F35A0", VA = "0x12F35A0")]
	private void onGetTopEntries(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x12F3B74", Offset = "0x12F3B74", VA = "0x12F3B74")]
	private void onGetUserAndHigherEntries(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x12F3D48", Offset = "0x12F3D48", VA = "0x12F3D48")]
	private void displayHigherEntry(int displayIndex, OnlineLeaderboardEntry entry)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x12F3E0C", Offset = "0x12F3E0C", VA = "0x12F3E0C")]
	private void onGetEntryAfterPlayer(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x12F3EC0", Offset = "0x12F3EC0", VA = "0x12F3EC0", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x12F3FDC", Offset = "0x12F3FDC", VA = "0x12F3FDC", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x12EDAB8", Offset = "0x12EDAB8", VA = "0x12EDAB8")]
	public LeaderboardOnlineDisplayMenu()
	{
	}
}
[Token(Token = "0x2000279")]
public class LeaderboardsSelectionMenu : ArcadeScrollMenu
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private MenuUserIntent _displayLeaderboardIntent;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	[Header("Leaderboards Settings")]
	private LeaderboardsSettings _leaderboardsSettings;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	[Header("Headers Settings")]
	private GameObject _headerPrefab;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private rcLocalizedText _challengeLocalizedHeader;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	[Header("Buttons Settings")]
	private GameObject _buttonPrefab;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private List<LeaderboardButtonDisplay> _handsLeaderboardButtons;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private List<LeaderboardButtonDisplay> _controllersLeaderboardButtons;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private rcBoolGameParameter _playerIsUsingControllersParam;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool _wasUsingControllers;

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x12F50F8", Offset = "0x12F50F8", VA = "0x12F50F8", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x12F5514", Offset = "0x12F5514", VA = "0x12F5514", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x12F56B8", Offset = "0x12F56B8", VA = "0x12F56B8", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x12F58EC", Offset = "0x12F58EC", VA = "0x12F58EC")]
	[ContextMenu("Create All Buttons")]
	private void createButtons()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x12F5EB0", Offset = "0x12F5EB0", VA = "0x12F5EB0")]
	private void createLeaderboardButton(Leaderboard leaderboard, List<LeaderboardButtonDisplay> buttonsList, [Optional] Sprite icon)
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x12F5DAC", Offset = "0x12F5DAC", VA = "0x12F5DAC")]
	private void createLeaderboardsHeader(rcLocalizedText localizedTitle)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x12F51EC", Offset = "0x12F51EC", VA = "0x12F51EC")]
	private void refreshButtons()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x12F6050", Offset = "0x12F6050", VA = "0x12F6050")]
	public LeaderboardsSelectionMenu()
	{
	}
}
[Token(Token = "0x200027A")]
public class LevelInfoMenu : SimpleLevelInfoMenu
{
	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	[Header("Level Info Display")]
	private GameObject _rewardContentParent;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject[] _emptyStarObjects;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject[] _fullStarObjects;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private TextMeshProUGUI[] _starConditionTextMeshes;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject _leaderboardContentParent;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private LeaderboardEntryDisplay _highscoreLocal;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private LeaderboardEntryDisplay _highscoreGlobal;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject _timerInfinitLoop;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	[Header("Localized Conditions")]
	private rcLocalizedText _conditionsShotsLimit;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private rcLocalizedText _conditionsTimeLimit;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private RewardParameters _rewards;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private LeaderboardManager _leaderboardManager;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Guid _currentRequestId;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool _subscribedToLeaderboard;

	[Token(Token = "0x4000DE6")]
	private const string DEFAULT_PLAYERNAME = "--------";

	[Token(Token = "0x4000DE7")]
	private const string DEFAULT_SCORE = "-";

	[Token(Token = "0x4000DE8")]
	private const int LEADERBOARD_REQUEST_RANGE = 3;

	[Token(Token = "0x170002A7")]
	private bool hasLeaderboard
	{
		[Token(Token = "0x600111F")]
		[Address(RVA = "0x12F6124", Offset = "0x12F6124", VA = "0x12F6124")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x12F61C8", Offset = "0x12F61C8", VA = "0x12F61C8", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x12F6384", Offset = "0x12F6384", VA = "0x12F6384", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x12F65C8", Offset = "0x12F65C8", VA = "0x12F65C8", Slot = "24")]
	public override void DisplayLevelInfo()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x12F715C", Offset = "0x12F715C", VA = "0x12F715C")]
	public new void DisplayCurrentLevelInfo(bool checkNextLevel = false)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x12F7008", Offset = "0x12F7008", VA = "0x12F7008")]
	private void refreshLeaderboardDisplays()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x12F75CC", Offset = "0x12F75CC", VA = "0x12F75CC")]
	private void setupStarsOrHighscoresDisplay()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x12F7940", Offset = "0x12F7940", VA = "0x12F7940")]
	private void onGetTopEntry(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x12F7A34", Offset = "0x12F7A34", VA = "0x12F7A34", Slot = "14")]
	public override void OnClosePopup()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x12F7038", Offset = "0x12F7038", VA = "0x12F7038")]
	private void setupDisplayTimerInfiniteLoop(bool timerIsLerping)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x12F7E00", Offset = "0x12F7E00", VA = "0x12F7E00")]
	private void refreshRewardsDisplay()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x12F825C", Offset = "0x12F825C", VA = "0x12F825C")]
	private void autoselectNextLevelButton()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x12F880C", Offset = "0x12F880C", VA = "0x12F880C")]
	private void autoselectHomeButton()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x12F895C", Offset = "0x12F895C", VA = "0x12F895C")]
	public LevelInfoMenu()
	{
	}
}
[Token(Token = "0x200027B")]
public class LevelLeaderboardDisplayMenu : LeaderboardOnlineDisplayMenu
{
	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private Transform _menuButtonsParent;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private LevelMenuButtons _levelButtons;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private PlayManager _playManager;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private RewardParameters _rewards;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private LeaderboardEntryDisplay _highlightedEntry;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int _localHighlightedEntry;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private ArcadeSelectable[] _selectableLevelButtons;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int _currentMenuButtonIndex;

	[Token(Token = "0x170002A8")]
	private bool isSelectingMenuButton
	{
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x12F89DC", Offset = "0x12F89DC", VA = "0x12F89DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x12F8B34", Offset = "0x12F8B34", VA = "0x12F8B34", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x12F8DC4", Offset = "0x12F8DC4", VA = "0x12F8DC4")]
	public void SetLevelLeaderboard()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x12F9544", Offset = "0x12F9544", VA = "0x12F9544", Slot = "24")]
	public override void DisplayLeaderboard()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x12F9A28", Offset = "0x12F9A28", VA = "0x12F9A28")]
	public void SetNewLocalEntry(int entryIndex)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x12F9AB8", Offset = "0x12F9AB8", VA = "0x12F9AB8")]
	private void setLevelStarted()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x12F9AD0", Offset = "0x12F9AD0", VA = "0x12F9AD0")]
	private void setLevelEnded()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x12F9ADC", Offset = "0x12F9ADC", VA = "0x12F9ADC")]
	private void refreshHighlight()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x12F9BB0", Offset = "0x12F9BB0", VA = "0x12F9BB0")]
	private void setHighlight(int entryIndex)
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x12F943C", Offset = "0x12F943C", VA = "0x12F943C")]
	private void clearHighlight()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x12F9E78", Offset = "0x12F9E78", VA = "0x12F9E78")]
	private void autoselectStartButton()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x12F9F68", Offset = "0x12F9F68", VA = "0x12F9F68")]
	private void autoselectNextButton()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x12FA058", Offset = "0x12FA058", VA = "0x12FA058")]
	private void autoselectHomeButton()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x12F8B70", Offset = "0x12F8B70", VA = "0x12F8B70")]
	private ArcadeSelectable getFirstMenuButton()
	{
		return null;
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x12FA14C", Offset = "0x12FA14C", VA = "0x12FA14C")]
	private ArcadeSelectable getLastMenuButton()
	{
		return null;
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x12FA2E0", Offset = "0x12FA2E0", VA = "0x12FA2E0")]
	private ArcadeSelectable getPreviousMenuButton()
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x12FA438", Offset = "0x12FA438", VA = "0x12FA438")]
	private ArcadeSelectable getNextMenuButton()
	{
		return null;
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x12FA590", Offset = "0x12FA590", VA = "0x12FA590", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x12FA968", Offset = "0x12FA968", VA = "0x12FA968", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x12FACAC", Offset = "0x12FACAC", VA = "0x12FACAC", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x12FAD54", Offset = "0x12FAD54", VA = "0x12FAD54", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x12FADFC", Offset = "0x12FADFC", VA = "0x12FADFC")]
	public LevelLeaderboardDisplayMenu()
	{
	}
}
[Serializable]
[Token(Token = "0x200027C")]
public struct LevelMenuButtons
{
	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private ArcadeSelectable _startButton;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private ArcadeSelectable _restartButton;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private ArcadeSelectable _leaderboardButton;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ArcadeSelectable _nextLevelButton;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ArcadeSelectable _homeButton;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Challenge Presets")]
	[SerializeField]
	private ChallengePresetsSettings _challengePresetsSettings;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerRef;

	[Token(Token = "0x170002A9")]
	public ArcadeSelectable StartButton
	{
		[Token(Token = "0x6001143")]
		[Address(RVA = "0x12FAE0C", Offset = "0x12FAE0C", VA = "0x12FAE0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AA")]
	public ArcadeSelectable RestartButton
	{
		[Token(Token = "0x6001144")]
		[Address(RVA = "0x12FAE14", Offset = "0x12FAE14", VA = "0x12FAE14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AB")]
	public ArcadeSelectable LeaderboardButton
	{
		[Token(Token = "0x6001145")]
		[Address(RVA = "0x12FAE1C", Offset = "0x12FAE1C", VA = "0x12FAE1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AC")]
	public ArcadeSelectable NextLevelButton
	{
		[Token(Token = "0x6001146")]
		[Address(RVA = "0x12FAE24", Offset = "0x12FAE24", VA = "0x12FAE24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AD")]
	public ArcadeSelectable HomeButton
	{
		[Token(Token = "0x6001147")]
		[Address(RVA = "0x12FAE2C", Offset = "0x12FAE2C", VA = "0x12FAE2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002AE")]
	public bool IsNextLocked
	{
		[Token(Token = "0x6001148")]
		[Address(RVA = "0x12F72A4", Offset = "0x12F72A4", VA = "0x12F72A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x12F96AC", Offset = "0x12F96AC", VA = "0x12F96AC")]
	public void SetLevelStarted()
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x12F9858", Offset = "0x12F9858", VA = "0x12F9858")]
	public void SetLevelEnded(bool enableLeaderboard = true)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x12FAE34", Offset = "0x12FAE34", VA = "0x12FAE34")]
	public void SetTutorialLevelBeforeStart()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x12FAFE0", Offset = "0x12FAFE0", VA = "0x12FAFE0")]
	public void SetTutorialLevelStarted()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x12FB18C", Offset = "0x12FB18C", VA = "0x12FB18C")]
	public void SetTutorialLevelEnded()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x12F7514", Offset = "0x12F7514", VA = "0x12F7514")]
	public void EnableLeaderboardButton(bool enable)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x12F89E8", Offset = "0x12F89E8", VA = "0x12F89E8")]
	public bool IsLevelMenuButton(ArcadeSelectable selectable)
	{
		return default(bool);
	}
}
[Token(Token = "0x200027D")]
public class LevelSelectionScrollMenu : ArcadeScrollMenu
{
	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject ButtonPrefab;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private LevelList _levelList;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private List<LevelSimpleButton> _levelButtons;

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x12FB338", Offset = "0x12FB338", VA = "0x12FB338", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x12FB9E8", Offset = "0x12FB9E8", VA = "0x12FB9E8", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x12FB480", Offset = "0x12FB480", VA = "0x12FB480")]
	private void CreateButtonsInternal()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x12FB644", Offset = "0x12FB644", VA = "0x12FB644")]
	private void RefreshButton(int levelIndex, LevelSimpleButton button)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x12FBA80", Offset = "0x12FBA80", VA = "0x12FBA80")]
	private LevelSimpleButton createButton(int buttonIndex, string levelListName)
	{
		return null;
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x12FBCF8", Offset = "0x12FBCF8", VA = "0x12FBCF8")]
	private void fillSelectablesList()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x12FC374", Offset = "0x12FC374", VA = "0x12FC374")]
	private void selectLevel(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x12FC5C0", Offset = "0x12FC5C0", VA = "0x12FC5C0")]
	private void removeLevelButtonNewIcon(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x12FC680", Offset = "0x12FC680", VA = "0x12FC680")]
	public LevelSelectionScrollMenu()
	{
	}
}
[Token(Token = "0x200027E")]
public class MainMenu : ArcadeScrollMenu
{
	[Token(Token = "0x200027F")]
	[CompilerGenerated]
	private sealed class <displayWarningCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenu <>4__this;

		[Token(Token = "0x170002AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x12FDAA4", Offset = "0x12FDAA4", VA = "0x12FDAA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0x12FDAEC", Offset = "0x12FDAEC", VA = "0x12FDAEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x12FCEF0", Offset = "0x12FCEF0", VA = "0x12FCEF0")]
		[DebuggerHidden]
		public <displayWarningCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x12FD748", Offset = "0x12FD748", VA = "0x12FD748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x12FD74C", Offset = "0x12FD74C", VA = "0x12FD74C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x12FDAAC", Offset = "0x12FDAAC", VA = "0x12FDAAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private rcBoolGameParameter _menuActiveParameter;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private rcBoolGameParameter _displayChangelogParameter;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	[Header("Warning Display")]
	private rcBoolGameParameter _warningShownParameter;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Range(1f, 30f)]
	[SerializeField]
	private float _warningDisplayTime;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private XRInputSystemParameter _saveCreatedWithInputParameter;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private XRInputSystemParameter _inputSystemParameter;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _displayingWarning;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool _overrideSelectionUpdate;

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x12FC704", Offset = "0x12FC704", VA = "0x12FC704", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x12FC790", Offset = "0x12FC790", VA = "0x12FC790")]
	public void TryShowTutorial()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x12FC8D8", Offset = "0x12FC8D8", VA = "0x12FC8D8")]
	private void RebuildLayoutAndShowTuto()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x12FC998", Offset = "0x12FC998", VA = "0x12FC998", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x12FCA24", Offset = "0x12FCA24", VA = "0x12FCA24", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x12FCBF0", Offset = "0x12FCBF0", VA = "0x12FCBF0", Slot = "14")]
	public override void OnClosePopup()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x12FCCA0", Offset = "0x12FCCA0", VA = "0x12FCCA0")]
	public void ForceSelectSecondButton()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x12FCD2C", Offset = "0x12FCD2C", VA = "0x12FCD2C")]
	public void DisplayHandTrackingWarning()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x12FCBEC", Offset = "0x12FCBEC", VA = "0x12FCBEC")]
	public void TryDisplayChangelog()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x12FCE7C", Offset = "0x12FCE7C", VA = "0x12FCE7C")]
	[IteratorStateMachine(typeof(<displayWarningCoroutine>d__17))]
	private IEnumerator displayWarningCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x12FCF18", Offset = "0x12FCF18", VA = "0x12FCF18")]
	private void selectSecondButton()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x12FD018", Offset = "0x12FD018", VA = "0x12FD018", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x12FD170", Offset = "0x12FD170", VA = "0x12FD170", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x12FD2A4", Offset = "0x12FD2A4", VA = "0x12FD2A4", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x12FD35C", Offset = "0x12FD35C", VA = "0x12FD35C", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x12FD414", Offset = "0x12FD414", VA = "0x12FD414", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x12FD41C", Offset = "0x12FD41C", VA = "0x12FD41C", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x12FD424", Offset = "0x12FD424", VA = "0x12FD424", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x12FD73C", Offset = "0x12FD73C", VA = "0x12FD73C")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x2000280")]
public class BrowseMatchmakingRoomsMenu : ArcadeScrollMenu
{
	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject _roomButtonPrefab;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform _roomButtonsRoot;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private UnityEvent _onClientConnected;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private ClientMatchmakingRoomMenu _clientMatchmakingRoomMenu;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<RoomEntryButton> _roomEntries;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _canTryConnect;

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x12FDAF4", Offset = "0x12FDAF4", VA = "0x12FDAF4")]
	private IRoomBrowser getRoomBrowser()
	{
		return null;
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x12FDBAC", Offset = "0x12FDBAC", VA = "0x12FDBAC", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x12FDBC4", Offset = "0x12FDBC4", VA = "0x12FDBC4", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x12FDC8C", Offset = "0x12FDC8C", VA = "0x12FDC8C")]
	public void BuildRoomList(IReadOnlyList<HostRoom> rooms)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x12FE050", Offset = "0x12FE050", VA = "0x12FE050")]
	private void ClearRoomList()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x12FE158", Offset = "0x12FE158", VA = "0x12FE158", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x12FE38C", Offset = "0x12FE38C", VA = "0x12FE38C")]
	private void OnClientConnectedToRoom(ConnectToRoomResult connectResult, string errorDetails)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x12FE460", Offset = "0x12FE460", VA = "0x12FE460")]
	public BrowseMatchmakingRoomsMenu()
	{
	}
}
[Token(Token = "0x2000281")]
public class ClientMatchmakingRoomMenu : ArcadeMenu
{
	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x12FE4EC", Offset = "0x12FE4EC", VA = "0x12FE4EC")]
	private IRoomBrowser getRoomBrowser()
	{
		return null;
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x12FE5A4", Offset = "0x12FE5A4", VA = "0x12FE5A4", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x12FE72C", Offset = "0x12FE72C", VA = "0x12FE72C", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x12FE7AC", Offset = "0x12FE7AC", VA = "0x12FE7AC", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x12FE7B0", Offset = "0x12FE7B0", VA = "0x12FE7B0", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x12FE7B4", Offset = "0x12FE7B4", VA = "0x12FE7B4", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x12FE7B8", Offset = "0x12FE7B8", VA = "0x12FE7B8", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x12FE7BC", Offset = "0x12FE7BC", VA = "0x12FE7BC", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x12FE7C0", Offset = "0x12FE7C0", VA = "0x12FE7C0")]
	public ClientMatchmakingRoomMenu()
	{
	}
}
[Token(Token = "0x2000282")]
public class HostMatchmakingRoomMenu : ArcadeMenu, IRoomPlayerHandler
{
	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ArcadeConfirmationPopup _confirmationPopup;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Display")]
	[SerializeField]
	private TextMeshProUGUI _connectedPlayersText;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI _maxPlayersText;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _playerCount;

	[Token(Token = "0x170002B1")]
	private int PlayerCount
	{
		[Token(Token = "0x6001184")]
		[Address(RVA = "0x12FE8E8", Offset = "0x12FE8E8", VA = "0x12FE8E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001185")]
		[Address(RVA = "0x12FE8F0", Offset = "0x12FE8F0", VA = "0x12FE8F0")]
		set
		{
		}
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x12FE944", Offset = "0x12FE944", VA = "0x12FE944")]
	private IRoomBrowser getRoomBrowser()
	{
		return null;
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x12FE9FC", Offset = "0x12FE9FC", VA = "0x12FE9FC", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x12FEB88", Offset = "0x12FEB88", VA = "0x12FEB88", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x12FEC08", Offset = "0x12FEC08", VA = "0x12FEC08", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x12FEC0C", Offset = "0x12FEC0C", VA = "0x12FEC0C", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x12FEC10", Offset = "0x12FEC10", VA = "0x12FEC10", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x12FEC14", Offset = "0x12FEC14", VA = "0x12FEC14", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x12FEC18", Offset = "0x12FEC18", VA = "0x12FEC18", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x12FEC1C", Offset = "0x12FEC1C", VA = "0x12FEC1C", Slot = "23")]
	public void OnPlayerJoined(NetworkConnection conn)
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x12FEC2C", Offset = "0x12FEC2C", VA = "0x12FEC2C", Slot = "24")]
	public void OnPlayerLeft(NetworkConnection conn)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x12FE8F8", Offset = "0x12FE8F8", VA = "0x12FE8F8")]
	private void RefreshPlayerCount()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x12FEC3C", Offset = "0x12FEC3C", VA = "0x12FEC3C")]
	public HostMatchmakingRoomMenu()
	{
	}
}
[Token(Token = "0x2000283")]
public class MatchmakingMenu : ArcadeMenu
{
	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI _matchmakerTextInfo;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x12FED00", Offset = "0x12FED00", VA = "0x12FED00", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x12FF140", Offset = "0x12FF140", VA = "0x12FF140", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x12FF2FC", Offset = "0x12FF2FC", VA = "0x12FF2FC", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x12FF040", Offset = "0x12FF040", VA = "0x12FF040")]
	private void UpdateMatchmakerTextInfos()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x12FEF88", Offset = "0x12FEF88", VA = "0x12FEF88")]
	private IMatchmaker GetMatchmaker()
	{
		return null;
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x12FF478", Offset = "0x12FF478", VA = "0x12FF478", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x12FF4A8", Offset = "0x12FF4A8", VA = "0x12FF4A8", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x12FF4D8", Offset = "0x12FF4D8", VA = "0x12FF4D8")]
	public MatchmakingMenu()
	{
	}
}
[Token(Token = "0x2000284")]
public class PartyModeMenu : ArcadeScrollMenu
{
	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private ArcadeSelectable _searchRoomSelection;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ArcadeSelectable _hostRoomSelection;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private ArcadeSelectable _matchmakingSelection;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject _networkModeSelectionContent;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Error Management")]
	[SerializeField]
	private GameObject _errorContent;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshProUGUI _errorText;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Header("Menu Flow")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private MenuUserIntent _browseRoomsIntent;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private MenuUserIntent _joinedRoomMenuIntent;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private BrowseMatchmakingRoomsMenu _browseMatchmakingRoomsMenu;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private HostMatchmakingRoomMenu _hostMatchmakingRoomMenu;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private MatchmakingMenu _matchmakingMenu;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x12FF4DC", Offset = "0x12FF4DC", VA = "0x12FF4DC")]
	private IRoomBrowser getRoomBrowser()
	{
		return null;
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x12FF598", Offset = "0x12FF598", VA = "0x12FF598", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x12FF98C", Offset = "0x12FF98C", VA = "0x12FF98C", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x12FFAD8", Offset = "0x12FFAD8", VA = "0x12FFAD8")]
	private void GoToMatchmaking()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x12FFAEC", Offset = "0x12FFAEC", VA = "0x12FFAEC")]
	private void SearchRoom()
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x12FF814", Offset = "0x12FF814", VA = "0x12FF814")]
	private void HideAll()
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x12FFC2C", Offset = "0x12FFC2C", VA = "0x12FFC2C")]
	private void DisplayErrorMessage(string errorMsg)
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x12FFC7C", Offset = "0x12FFC7C", VA = "0x12FFC7C")]
	private void DisplayAvailableRooms(IReadOnlyList<HostRoom> rooms)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x12FF84C", Offset = "0x12FF84C", VA = "0x12FF84C")]
	private void DisplayWaitingForPlayersMessage()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x12FF90C", Offset = "0x12FF90C", VA = "0x12FF90C")]
	private void DisplayClientRoomInfos()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x12FFD14", Offset = "0x12FFD14", VA = "0x12FFD14")]
	private void DisplayRoomStartingMessage()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x12FFD5C", Offset = "0x12FFD5C", VA = "0x12FFD5C")]
	private void CreateRoom()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x12FFE88", Offset = "0x12FFE88", VA = "0x12FFE88")]
	public PartyModeMenu()
	{
	}
}
[Token(Token = "0x2000285")]
public class SimpleLevelInfoMenu : ArcadeListMenu
{
	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected LevelMenuButtons _levelButtons;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Level Info Display")]
	[SerializeField]
	private TextMeshProUGUI _levelNameTextMesh;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshProUGUI _levelRulesTextMesh;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	protected TimerDisplay _timerDisplay;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected PlayManager _playManager;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected PlayManager.PlayType _playType;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected LevelDisplaySettings _levelDisplaySettings;

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x12F6A40", Offset = "0x12F6A40", VA = "0x12F6A40", Slot = "24")]
	public virtual void DisplayLevelInfo()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x12F7420", Offset = "0x12F7420", VA = "0x12F7420")]
	public void DisplayCurrentLevelInfo(bool enableLeaderboard = false)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x12FFF78", Offset = "0x12FFF78", VA = "0x12FFF78")]
	public void ShowGoPopup()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x1300190", Offset = "0x1300190", VA = "0x1300190")]
	public void HideGoPopup()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x12FFEAC", Offset = "0x12FFEAC", VA = "0x12FFEAC")]
	protected void setupTimer()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x1300390", Offset = "0x1300390", VA = "0x1300390")]
	protected void refreshLevelDisplay()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x130087C", Offset = "0x130087C", VA = "0x130087C", Slot = "25")]
	protected virtual void setLevelStarted()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x1300884", Offset = "0x1300884", VA = "0x1300884", Slot = "26")]
	protected virtual void setLevelEnded()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x1300890", Offset = "0x1300890", VA = "0x1300890")]
	protected void autoselectStartButton()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x12F89D8", Offset = "0x12F89D8", VA = "0x12F89D8")]
	public SimpleLevelInfoMenu()
	{
	}
}
[Token(Token = "0x2000286")]
public class StartMenu : ArcadeMenu
{
	[Token(Token = "0x2000287")]
	[CompilerGenerated]
	private sealed class <fadeOutCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartMenu <>4__this;

		[Token(Token = "0x170002B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x1301170", Offset = "0x1301170", VA = "0x1301170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x13011B8", Offset = "0x13011B8", VA = "0x13011B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1300C94", Offset = "0x1300C94", VA = "0x1300C94")]
		[DebuggerHidden]
		public <fadeOutCoroutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1300F24", Offset = "0x1300F24", VA = "0x1300F24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x1300F28", Offset = "0x1300F28", VA = "0x1300F28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x1301178", Offset = "0x1301178", VA = "0x1301178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Range(0f, 5f)]
	[SerializeField]
	private float _fadeTime;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcBoolGameParameter _menuActiveParameter;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcBoolGameParameter _displayChangelogParameter;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UnityEvent _onPressedStart;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Image[] _images;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TextMeshProUGUI[] _textMeshes;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private IEnumerator _fadeOutCoroutine;

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x1300A64", Offset = "0x1300A64", VA = "0x1300A64", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x1300B68", Offset = "0x1300B68", VA = "0x1300B68", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x1300C1C", Offset = "0x1300C1C", VA = "0x1300C1C", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x1300C20", Offset = "0x1300C20", VA = "0x1300C20")]
	[IteratorStateMachine(typeof(<fadeOutCoroutine>d__10))]
	private IEnumerator fadeOutCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x1300CBC", Offset = "0x1300CBC", VA = "0x1300CBC", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x1300DA0", Offset = "0x1300DA0", VA = "0x1300DA0", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x1300F08", Offset = "0x1300F08", VA = "0x1300F08", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x1300F0C", Offset = "0x1300F0C", VA = "0x1300F0C", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x1300F10", Offset = "0x1300F10", VA = "0x1300F10", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x1300F14", Offset = "0x1300F14", VA = "0x1300F14", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x1300F18", Offset = "0x1300F18", VA = "0x1300F18")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000288")]
public class TutorialCompletedMenu : ArcadeMenu
{
	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private PlayStateParameter _currentPlayState;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("UI")]
	[SerializeField]
	private TextMeshProUGUI _menuTitle;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _pressEnterObject;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Stars")]
	[SerializeField]
	private GameObject _starsParent;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] _stars;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private rcAudioEvent _starsJingle;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private rcIntGameParameter _splineWalkingStarsCountParam;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _registeredToSplineWalking;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool _waitingForStars;

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x13011C0", Offset = "0x13011C0", VA = "0x13011C0")]
	public void DisplayCompletedTutorialLevel()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x1301410", Offset = "0x1301410", VA = "0x1301410")]
	private void onStarsReachedScreen(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1301574", Offset = "0x1301574", VA = "0x1301574", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x1301578", Offset = "0x1301578", VA = "0x1301578", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1301588", Offset = "0x1301588", VA = "0x1301588", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x1301598", Offset = "0x1301598", VA = "0x1301598", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x1301678", Offset = "0x1301678", VA = "0x1301678", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x130167C", Offset = "0x130167C", VA = "0x130167C", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x1301680", Offset = "0x1301680", VA = "0x1301680", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x1301684", Offset = "0x1301684", VA = "0x1301684", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x1301688", Offset = "0x1301688", VA = "0x1301688")]
	public TutorialCompletedMenu()
	{
	}
}
[Token(Token = "0x2000289")]
public class TutorialLevelInfoMenu : SimpleLevelInfoMenu
{
	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Header("Tutorial")]
	[SerializeField]
	private rcBoolGameParameter _homeIsQuitParameter;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Transform _tutorialAnimationRoot;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	[Header("Controllers")]
	private rcBoolGameParameter _displayControllersTutoParam;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject _controlsTutoPopup;

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x13016E8", Offset = "0x13016E8", VA = "0x13016E8", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x13018C0", Offset = "0x13018C0", VA = "0x13018C0", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x13017E0", Offset = "0x13017E0", VA = "0x13017E0")]
	private void initTutorialAnimation()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x1301988", Offset = "0x1301988", VA = "0x1301988")]
	public void DisplayTutorialLevelInfo()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x13019D4", Offset = "0x13019D4", VA = "0x13019D4", Slot = "25")]
	protected override void setLevelStarted()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x13019DC", Offset = "0x13019DC", VA = "0x13019DC", Slot = "26")]
	protected override void setLevelEnded()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x13019E4", Offset = "0x13019E4", VA = "0x13019E4", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x1301B30", Offset = "0x1301B30", VA = "0x1301B30", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x1301BE4", Offset = "0x1301BE4", VA = "0x1301BE4", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x1301DA4", Offset = "0x1301DA4", VA = "0x1301DA4")]
	public TutorialLevelInfoMenu()
	{
	}
}
[Token(Token = "0x200028A")]
public class UnlocksArcadePopup : ArcadeMenu
{
	[Token(Token = "0x200028B")]
	private struct LevelUnlocks
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LevelList LevelPack;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Unlockable LevelPackUnlockable;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<UnlockableLevel> UnlockedLevels;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1302828", Offset = "0x1302828", VA = "0x1302828")]
		public LevelUnlocks(LevelList levelPack, List<UnlockableLevel> levelUnlocks)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x1302868", Offset = "0x1302868", VA = "0x1302868")]
		public void AddUnlockedLevel(UnlockableLevel unlockedLevel)
		{
		}
	}

	[Token(Token = "0x200028C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Unlockable> genericUnlocks;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int unlockableIndex;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Predicate<LevelUnlocks> <>9__1;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1302918", Offset = "0x1302918", VA = "0x1302918")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x1302920", Offset = "0x1302920", VA = "0x1302920")]
		internal bool <playUnlockAnimations>b__1(LevelUnlocks levelUnlocks)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200028E")]
	[CompilerGenerated]
	private sealed class <playUnlockAnimations>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnlocksArcadePopup <>4__this;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass19_0 <>8__1;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IList<Unlockable> unlocks;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<LevelUnlocks> <levelUnlocksList>5__2;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StringBuilder <levelTitlesBuilder>5__3;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <levelUnlocksIndex>5__4;

		[Token(Token = "0x170002B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x13033A4", Offset = "0x13033A4", VA = "0x13033A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x13033EC", Offset = "0x13033EC", VA = "0x13033EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x1301F58", Offset = "0x1301F58", VA = "0x1301F58")]
		[DebuggerHidden]
		public <playUnlockAnimations>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x1302A38", Offset = "0x1302A38", VA = "0x1302A38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x1302A3C", Offset = "0x1302A3C", VA = "0x1302A3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x13033AC", Offset = "0x13033AC", VA = "0x13033AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028F")]
	[CompilerGenerated]
	private sealed class <playGenericUnlock>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnlocksArcadePopup <>4__this;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Unlockable unlockable;

		[Token(Token = "0x170002B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x1303634", Offset = "0x1303634", VA = "0x1303634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x130367C", Offset = "0x130367C", VA = "0x130367C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x1302010", Offset = "0x1302010", VA = "0x1302010")]
		[DebuggerHidden]
		public <playGenericUnlock>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x13033F4", Offset = "0x13033F4", VA = "0x13033F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x13033F8", Offset = "0x13033F8", VA = "0x13033F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x130363C", Offset = "0x130363C", VA = "0x130363C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000290")]
	[CompilerGenerated]
	private sealed class <playLevelPackUnlock>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelUnlocks levelUnlocks;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnlocksArcadePopup <>4__this;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public StringBuilder levelTitlesBuilder;

		[Token(Token = "0x170002B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0x1303A90", Offset = "0x1303A90", VA = "0x1303A90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x1303AD8", Offset = "0x1303AD8", VA = "0x1303AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x13020E8", Offset = "0x13020E8", VA = "0x13020E8")]
		[DebuggerHidden]
		public <playLevelPackUnlock>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1303684", Offset = "0x1303684", VA = "0x1303684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1303688", Offset = "0x1303688", VA = "0x1303688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x1303A98", Offset = "0x1303A98", VA = "0x1303A98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcFocusableObject _screenFocusable;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Text")]
	[SerializeField]
	private TextMeshProUGUI _unlockTitleText;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI _unlockLevelPackText;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI _unlockNameText;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private rcLocalizedText _severalLevelsUnlockLocalizedTitle;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Animation")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private rcBoolGameParameter _unlockPlayingParam;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject _pressStartText;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IArcadeInputListener _sourceMenu;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _waitingForInput;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WaitUntil _yieldUntilScreenFocused;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private WaitUntil _yieldUntilAnimationStarts;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WaitWhile _yieldUntilAnimationEnds;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WaitWhile _yieldUntilInput;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent ShowPopupEvent;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly int TRIGGER_HASH_UNLOCK_PLAY;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private readonly int TRIGGER_HASH_UNLOCK_SKIP;

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x1301DA8", Offset = "0x1301DA8", VA = "0x1301DA8")]
	public void ShowUnlocks(IArcadeInputListener sourceMenu, IList<Unlockable> unlocks)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x1301EC8", Offset = "0x1301EC8", VA = "0x1301EC8")]
	[IteratorStateMachine(typeof(<playUnlockAnimations>d__19))]
	private IEnumerator playUnlockAnimations(IList<Unlockable> unlocks)
	{
		return null;
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x1301F80", Offset = "0x1301F80", VA = "0x1301F80")]
	[IteratorStateMachine(typeof(<playGenericUnlock>d__20))]
	private IEnumerator playGenericUnlock(Unlockable unlockable)
	{
		return null;
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x1302038", Offset = "0x1302038", VA = "0x1302038")]
	[IteratorStateMachine(typeof(<playLevelPackUnlock>d__21))]
	private IEnumerator playLevelPackUnlock(LevelUnlocks levelUnlocks, [Optional] StringBuilder levelTitlesBuilder)
	{
		return null;
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x1302110", Offset = "0x1302110", VA = "0x1302110")]
	private void initYieldInstructions()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x130234C", Offset = "0x130234C", VA = "0x130234C")]
	public void ReturnToSourceMenu()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x13023F0", Offset = "0x13023F0", VA = "0x13023F0", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x13023F4", Offset = "0x13023F4", VA = "0x13023F4", Slot = "16")]
	public override void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x1302510", Offset = "0x1302510", VA = "0x1302510", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x13026AC", Offset = "0x13026AC", VA = "0x13026AC", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x13026B0", Offset = "0x13026B0", VA = "0x13026B0", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x13026B4", Offset = "0x13026B4", VA = "0x13026B4", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x13026B8", Offset = "0x13026B8", VA = "0x13026B8", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x13026BC", Offset = "0x13026BC", VA = "0x13026BC", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x13026C0", Offset = "0x13026C0", VA = "0x13026C0")]
	public UnlocksArcadePopup()
	{
	}
}
[Token(Token = "0x2000291")]
[CreateAssetMenu(menuName = "GBA/Levels/Level Display Settings")]
public class LevelDisplaySettings : ScriptableObject
{
	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Level Name")]
	[SerializeField]
	private rcLocalizedText _localizedGameMode;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcLocalizedText _localizedLevelType;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int _levelIndex;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcLocalizedText _localizedLevelTitle;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Header("Display")]
	private Sprite _levelIcon;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Level Standard Rules")]
	private rcLocalizedText _ruleShotsLimit;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcLocalizedText _ruleTimeLimit;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcLocalizedText _ruleNoTimeLimit;

	[Token(Token = "0x170002BA")]
	public string GameMode
	{
		[Token(Token = "0x6001205")]
		[Address(RVA = "0x1303AE0", Offset = "0x1303AE0", VA = "0x1303AE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BB")]
	public string LevelTitle
	{
		[Token(Token = "0x6001206")]
		[Address(RVA = "0x12FBC60", Offset = "0x12FBC60", VA = "0x12FBC60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BC")]
	public string LevelFullTitle
	{
		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1300510", Offset = "0x1300510", VA = "0x1300510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BD")]
	public Sprite LevelIcon
	{
		[Token(Token = "0x6001208")]
		[Address(RVA = "0x1303B78", Offset = "0x1303B78", VA = "0x1303B78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x1300640", Offset = "0x1300640", VA = "0x1300640")]
	public string GetPlayRule(PlayManager playManager)
	{
		return null;
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x1303B80", Offset = "0x1303B80", VA = "0x1303B80")]
	public string GetLocalizedFullTitle(rcLanguage language)
	{
		return null;
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x1303CFC", Offset = "0x1303CFC", VA = "0x1303CFC")]
	public string GetLocalizedData(rcLocalizedText localizedText, rcLanguage language)
	{
		return null;
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x1303CDC", Offset = "0x1303CDC", VA = "0x1303CDC")]
	public string GetLocalizedGameMode(rcLanguage language)
	{
		return null;
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x1303E80", Offset = "0x1303E80", VA = "0x1303E80")]
	public string GetLocalizedLevelType(rcLanguage language)
	{
		return null;
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x1303CEC", Offset = "0x1303CEC", VA = "0x1303CEC")]
	public string GetLocalizedLevelTitle(rcLanguage language)
	{
		return null;
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x1303E90", Offset = "0x1303E90", VA = "0x1303E90")]
	public LevelDisplaySettings()
	{
	}
}
[Token(Token = "0x2000293")]
public class MenuFlowsManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000294")]
	public struct MenuSettingsData
	{
		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MenuSettings Settings;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject MenuRoot;
	}

	[Serializable]
	[Token(Token = "0x2000295")]
	public struct LevelListMenuSettings
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LevelList ListData;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject MenuRoot;
	}

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MenuSettingsData[] _menuSettingsIndex;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Solo Flow")]
	private LevelListMenuSettings[] _levelListMenuSettings;

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x1303F10", Offset = "0x1303F10", VA = "0x1303F10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x1303FEC", Offset = "0x1303FEC", VA = "0x1303FEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x13040BC", Offset = "0x13040BC", VA = "0x13040BC")]
	public GameObject GetLevelListMenu(LevelList levelList)
	{
		return null;
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x13041C8", Offset = "0x13041C8", VA = "0x13041C8")]
	public MenuFlowsManager()
	{
	}
}
[Token(Token = "0x2000296")]
public class MenuManager : rcSingleton<MenuManager>
{
	[Serializable]
	[Token(Token = "0x2000297")]
	public struct LevelMenus
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LevelInfoMenu LevelInfo;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TutorialLevelInfoMenu TutorialLevelInfo;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ChallengeInfoMenu ChallengeInfo;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChallengeRecapEndMenu ChallengeRecapEnd;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelLeaderboardDisplayMenu LevelLeaderboardDisplay;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChallengeLeaderboardDisplayMenu ChallengeLeaderboardDisplay;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LeaderboardInputMenu LevelLeaderboardInput;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TutorialCompletedMenu TutorialCompletedMenu;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public rcGameEvent LeaveLevelEvent;

		[Token(Token = "0x170002C3")]
		public ArcadeMenu CurrentLevelMenu
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0x130598C", Offset = "0x130598C", VA = "0x130598C")]
			[CompilerGenerated]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6001235")]
			[Address(RVA = "0x1305994", Offset = "0x1305994", VA = "0x1305994")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1304B10", Offset = "0x1304B10", VA = "0x1304B10")]
		public void SetCurrentLevelMenu(ArcadeMenu menu)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x130494C", Offset = "0x130494C", VA = "0x130494C")]
		public bool IsLevelMenu(ArcadeMenu menu)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent _onQuitGame;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ArcadePopupManager _popupManager;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("SFX")]
	private rcAudioEvent _selectionUpdatedAudioEvent;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcAudioEvent _selectionValidatedAudioEvent;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcAudioEvent _backAudioEvent;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Menus")]
	[SerializeField]
	private MainMenu _mainMenu;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LeaderboardDisplayMenu _leaderboardDisplayMenu;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CreditsMenu _credits;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ArcadeMenu _changelogMenu;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent _onHomeEvent;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent _onScriptedCredits;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private LevelMenus _levelMenus;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	[Header("Challenge")]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ArcadeMenu _currentMenu;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ArcadeMenu _temporaryMenu;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PlayManager _currentPlayManager;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RewardParameters _currentRewards;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LeaderboardManager _currentLeaderboardManager;

	[Token(Token = "0x170002BE")]
	public ArcadePopupManager PopupManager
	{
		[Token(Token = "0x6001216")]
		[Address(RVA = "0x13041D0", Offset = "0x13041D0", VA = "0x13041D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BF")]
	public MainMenu MainMenu
	{
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x13041D8", Offset = "0x13041D8", VA = "0x13041D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C0")]
	public rcGameEvent LeaveLevelEvent
	{
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x13041E0", Offset = "0x13041E0", VA = "0x13041E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C1")]
	public LevelInfoMenu LevelInfoMenu
	{
		[Token(Token = "0x6001219")]
		[Address(RVA = "0x13041E8", Offset = "0x13041E8", VA = "0x13041E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C2")]
	public ChallengeInfoMenu ChallengeInfoMenu
	{
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x13041F0", Offset = "0x13041F0", VA = "0x13041F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x13041F8", Offset = "0x13041F8", VA = "0x13041F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x1304410", Offset = "0x1304410", VA = "0x1304410")]
	public void SetCurrentMenu(ArcadeMenu menu)
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x1304760", Offset = "0x1304760", VA = "0x1304760")]
	public void OpenChangelogMenu()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x13047E4", Offset = "0x13047E4", VA = "0x13047E4")]
	public void OpenMainMenu()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x1304894", Offset = "0x1304894", VA = "0x1304894")]
	public void OpenScriptedCredits()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x13042B4", Offset = "0x13042B4", VA = "0x13042B4")]
	private void setTemporaryMenu(ArcadeMenu menu)
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x1304C64", Offset = "0x1304C64", VA = "0x1304C64")]
	public void OpenLevelInfoMenu(PlayManager playManager)
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x1304F24", Offset = "0x1304F24", VA = "0x1304F24")]
	public void OpenCurrentLevelInfoMenu(bool checkNextUnlock = false)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x13050DC", Offset = "0x13050DC", VA = "0x13050DC")]
	public void OpenTutorialCompletedMenu()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x130521C", Offset = "0x130521C", VA = "0x130521C")]
	public void OpenChallengeInfoMenu()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x1305010", Offset = "0x1305010", VA = "0x1305010")]
	public void OpenCurrentChallengeInfo(bool checkNextUnlock = false)
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x1305334", Offset = "0x1305334", VA = "0x1305334")]
	public void OpenChallengeRecapEndMenu()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x13053B0", Offset = "0x13053B0", VA = "0x13053B0")]
	public void OpenLeaderboardInputMenu(LeaderboardManager leaderboardManager, RewardParameters rewards)
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x1305440", Offset = "0x1305440", VA = "0x1305440")]
	public void DisplayCurrentLevelUpdatedLeaderboard()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x1305568", Offset = "0x1305568", VA = "0x1305568")]
	public void SetCurrentLevelLeaderboardDisplayNewEntry(int localEntryIndex)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x1305668", Offset = "0x1305668", VA = "0x1305668")]
	public void HideTemporaryMenu()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x1305670", Offset = "0x1305670", VA = "0x1305670")]
	public void OpenCurrentMenu()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x1305730", Offset = "0x1305730", VA = "0x1305730")]
	public void HideCurrentMenu()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x13057E0", Offset = "0x13057E0", VA = "0x13057E0")]
	public void UpdateCurrentMenu(ArcadeMenu menu)
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x13057E8", Offset = "0x13057E8", VA = "0x13057E8")]
	public void PlaySelectionUpdatedAudioEvent()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x13010F0", Offset = "0x13010F0", VA = "0x13010F0")]
	public void PlaySelectionValidatedAudioEvent()
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x130262C", Offset = "0x130262C", VA = "0x130262C")]
	public void PlayBackAudioEvent()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x1305868", Offset = "0x1305868", VA = "0x1305868")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x13058F8", Offset = "0x13058F8", VA = "0x13058F8")]
	public MenuManager()
	{
	}
}
[Token(Token = "0x2000299")]
[CreateAssetMenu(fileName = "MS_MenuSettings", menuName = "GBA/Menus/Menu Settings/Generic")]
public class MenuSettings : ScriptableObject
{
	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected GameObject _runtimeRoot;

	[Token(Token = "0x170002C6")]
	public GameObject RuntimeRoot
	{
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1305A98", Offset = "0x1305A98", VA = "0x1305A98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x1305AA0", Offset = "0x1305AA0", VA = "0x1305AA0", Slot = "4")]
	public virtual void InitSettings(GameObject runtimeRoot)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x1305AA8", Offset = "0x1305AA8", VA = "0x1305AA8", Slot = "5")]
	[ContextMenu("Reset Settings")]
	public virtual void ResetSettings()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x1305AB4", Offset = "0x1305AB4", VA = "0x1305AB4")]
	public void ShowMenu(bool show)
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x1305B60", Offset = "0x1305B60", VA = "0x1305B60")]
	public MenuSettings()
	{
	}
}
[Token(Token = "0x200029A")]
[CreateAssetMenu(fileName = "MUI_MenuUserIntent", menuName = "GBA/Menus/User Intent")]
public class MenuUserIntent : ScriptableObject
{
	[Token(Token = "0x6001243")]
	[Address(RVA = "0x1305B68", Offset = "0x1305B68", VA = "0x1305B68")]
	public MenuUserIntent()
	{
	}
}
[Token(Token = "0x200029B")]
[CreateAssetMenu(fileName = "MUI_MenuUserIntentGameParameter", menuName = "GBA/Menus/User Intent Game Parameter")]
public class MenuUserIntentGameParameter : rcGameParameter<MenuUserIntent>
{
	[Token(Token = "0x6001244")]
	[Address(RVA = "0x1305B70", Offset = "0x1305B70", VA = "0x1305B70")]
	public void Set(MenuUserIntent userIntent)
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x1305BD0", Offset = "0x1305BD0", VA = "0x1305BD0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x1305C24", Offset = "0x1305C24", VA = "0x1305C24")]
	public MenuUserIntentGameParameter()
	{
	}
}
[Serializable]
[Token(Token = "0x200029C")]
public class SoloMenusFlowSettings
{
	[Token(Token = "0x6001247")]
	[Address(RVA = "0x1305C6C", Offset = "0x1305C6C", VA = "0x1305C6C")]
	public SoloMenusFlowSettings()
	{
	}
}
[Token(Token = "0x200029D")]
public class ArcadeConfirmationPopup : ArcadeListMenu
{
	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent OnShow;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ArcadeSelectable _cancelSelectable;

	[Token(Token = "0x170002C7")]
	public ArcadeMenu SourceMenu
	{
		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1305C74", Offset = "0x1305C74", VA = "0x1305C74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x1305C7C", Offset = "0x1305C7C", VA = "0x1305C7C", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x1305DC8", Offset = "0x1305DC8", VA = "0x1305DC8")]
	public void ShowPopup(ArcadeMenu sourceMenu)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x1305E8C", Offset = "0x1305E8C", VA = "0x1305E8C")]
	public void ReturnToSourceMenu()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x1305F30", Offset = "0x1305F30", VA = "0x1305F30", Slot = "17")]
	public override void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x1306060", Offset = "0x1306060", VA = "0x1306060", Slot = "18")]
	public override void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x1306064", Offset = "0x1306064", VA = "0x1306064")]
	public ArcadeConfirmationPopup()
	{
	}
}
[Token(Token = "0x200029E")]
public class ArcadeGridMenu : ArcadeMenu
{
	[Serializable]
	[Token(Token = "0x200029F")]
	public class SelectablesGrid
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ArcadeGridMenu _menu;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GridLayoutGroup _gridLayout;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArcadeSelectable[][] _selectablesGrid;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _selectablesCount;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _currentRow;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _currentColumn;

		[Token(Token = "0x170002C9")]
		public int Count
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x1306AB8", Offset = "0x1306AB8", VA = "0x1306AB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1306AC0", Offset = "0x1306AC0", VA = "0x1306AC0")]
		public SelectablesGrid(ArcadeGridMenu menu, GridLayoutGroup gridLayoutGroup)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1306B10", Offset = "0x1306B10", VA = "0x1306B10")]
		public void Fill(IList<ArcadeSelectable> selectables)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1306F98", Offset = "0x1306F98", VA = "0x1306F98")]
		public int GetCurrentSelectionIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1306FF8", Offset = "0x1306FF8", VA = "0x1306FF8")]
		public int GetSelectableIndex(ArcadeSelectable selectable)
		{
			return default(int);
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1307114", Offset = "0x1307114", VA = "0x1307114")]
		public ArcadeSelectable GetCurrentSelection()
		{
			return null;
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x130711C", Offset = "0x130711C", VA = "0x130711C")]
		public ArcadeSelectable GetSelectable(int rowIndex, int columnIndex)
		{
			return null;
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1307238", Offset = "0x1307238", VA = "0x1307238")]
		public ArcadeSelectable Select(int elementIndex)
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x13072E8", Offset = "0x13072E8", VA = "0x13072E8")]
		public ArcadeSelectable Select(ArcadeSelectable selectable)
		{
			return null;
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x130609C", Offset = "0x130609C", VA = "0x130609C")]
		public ArcadeSelectable SelectFirstOfPage()
		{
			return null;
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x13069C4", Offset = "0x13069C4", VA = "0x13069C4")]
		public ArcadeSelectable SelectFirstOfRow()
		{
			return null;
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x1306550", Offset = "0x1306550", VA = "0x1306550")]
		public ArcadeSelectable SelectFirstOfColumn()
		{
			return null;
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1307314", Offset = "0x1307314", VA = "0x1307314")]
		public ArcadeSelectable SelectLastOfPage()
		{
			return null;
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1306788", Offset = "0x1306788", VA = "0x1306788")]
		public ArcadeSelectable SelectLastOfRow()
		{
			return null;
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x130742C", Offset = "0x130742C", VA = "0x130742C")]
		private ArcadeSelectable selectLastOfRow(int row)
		{
			return null;
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1306318", Offset = "0x1306318", VA = "0x1306318")]
		public ArcadeSelectable SelectLastOfColumn()
		{
			return null;
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1307514", Offset = "0x1307514", VA = "0x1307514")]
		private ArcadeSelectable selectLastOfColumn(int column)
		{
			return null;
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x1306270", Offset = "0x1306270", VA = "0x1306270")]
		public ArcadeSelectable MoveSelectionUp()
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x13063C4", Offset = "0x13063C4", VA = "0x13063C4")]
		public ArcadeSelectable MoveSelectionDown()
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x13066E0", Offset = "0x13066E0", VA = "0x13066E0")]
		public ArcadeSelectable MoveSelectionLeft()
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x1306834", Offset = "0x1306834", VA = "0x1306834")]
		public ArcadeSelectable MoveSelectionRight()
		{
			return null;
		}
	}

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected int _maxSelectablesInGrid;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected SelectablesGrid _selectablesGrid;

	[Token(Token = "0x170002C8")]
	public int MaxSelectablesInGrid
	{
		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1306068", Offset = "0x1306068", VA = "0x1306068")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x1306070", Offset = "0x1306070", VA = "0x1306070", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x13061C8", Offset = "0x13061C8", VA = "0x13061C8", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x1306320", Offset = "0x1306320", VA = "0x1306320", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x1306638", Offset = "0x1306638", VA = "0x1306638", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x1306790", Offset = "0x1306790", VA = "0x1306790", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x1306AAC", Offset = "0x1306AAC", VA = "0x1306AAC")]
	public ArcadeGridMenu()
	{
	}
}
[Token(Token = "0x20002A0")]
public class ArcadeListMenu : ArcadeMenu
{
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class SelectablesList
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ArcadeSelectable[] _selectablesList;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _currentSelection;

		[Token(Token = "0x170002CB")]
		public int Count
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x12F83AC", Offset = "0x12F83AC", VA = "0x12F83AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1307790", Offset = "0x1307790", VA = "0x1307790")]
		public SelectablesList()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1307B1C", Offset = "0x1307B1C", VA = "0x1307B1C")]
		public void Fill(IList<ArcadeSelectable> selectables)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x13085A4", Offset = "0x13085A4", VA = "0x13085A4")]
		public int GetCurrentSelectionIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x13085AC", Offset = "0x13085AC", VA = "0x13085AC")]
		public int GetSelectableIndex(ArcadeSelectable selectable)
		{
			return default(int);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x1308654", Offset = "0x1308654", VA = "0x1308654")]
		public ArcadeSelectable GetCurrentSelection()
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x1308688", Offset = "0x1308688", VA = "0x1308688")]
		public ArcadeSelectable GetSelectable(int index)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x13086CC", Offset = "0x13086CC", VA = "0x13086CC")]
		public ArcadeSelectable Select(int index)
		{
			return null;
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x12F83C4", Offset = "0x12F83C4", VA = "0x12F83C4")]
		public ArcadeSelectable Select(ArcadeSelectable selectable)
		{
			return null;
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1305CA4", Offset = "0x1305CA4", VA = "0x1305CA4")]
		public ArcadeSelectable SelectFirst()
		{
			return null;
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1308070", Offset = "0x1308070", VA = "0x1308070")]
		public ArcadeSelectable SelectLast()
		{
			return null;
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x1307F20", Offset = "0x1307F20", VA = "0x1307F20")]
		public ArcadeSelectable MoveSelectionPrevious()
		{
			return null;
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x13082AC", Offset = "0x13082AC", VA = "0x13082AC")]
		public ArcadeSelectable MoveSelectionNext()
		{
			return null;
		}
	}

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HorizontalOrVerticalLayoutGroup Content;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected SelectablesList _selectablesList;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RectTransform _contentTransform;

	[Token(Token = "0x170002CA")]
	public RectTransform ContentTransform
	{
		[Token(Token = "0x600126B")]
		[Address(RVA = "0x13075DC", Offset = "0x13075DC", VA = "0x13075DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x13076B8", Offset = "0x13076B8", VA = "0x13076B8", Slot = "23")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x12F62F4", Offset = "0x12F62F4", VA = "0x12F62F4", Slot = "11")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x12F6538", Offset = "0x12F6538", VA = "0x12F6538", Slot = "12")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x13077BC", Offset = "0x13077BC", VA = "0x13077BC", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x13078C0", Offset = "0x13078C0", VA = "0x13078C0")]
	protected void fillListWithContentChildren()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x1307CE0", Offset = "0x1307CE0", VA = "0x1307CE0")]
	protected void autoselectFirstItem()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x1307E2C", Offset = "0x1307E2C", VA = "0x1307E2C", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x13081B8", Offset = "0x13081B8", VA = "0x13081B8", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x13083BC", Offset = "0x13083BC", VA = "0x13083BC", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x13084B0", Offset = "0x13084B0", VA = "0x13084B0", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x13009E0", Offset = "0x13009E0", VA = "0x13009E0")]
	public ArcadeListMenu()
	{
	}
}
[Token(Token = "0x20002A2")]
public class ArcadeMenu : MonoBehaviour, IArcadeInputListener, IJoystickInputListener
{
	[Token(Token = "0x20002A3")]
	[CompilerGenerated]
	private sealed class <repaintCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArcadeMenu <>4__this;

		[Token(Token = "0x170002CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x1308D20", Offset = "0x1308D20", VA = "0x1308D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x1308D68", Offset = "0x1308D68", VA = "0x1308D68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x1308A48", Offset = "0x1308A48", VA = "0x1308A48")]
		[DebuggerHidden]
		public <repaintCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1308C54", Offset = "0x1308C54", VA = "0x1308C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1308C58", Offset = "0x1308C58", VA = "0x1308C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x1308D28", Offset = "0x1308D28", VA = "0x1308D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArcadeInputData InputData;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPreviousMenu;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnLeaveMenu;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action _contentUpdateEvent;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action _displayUpdateEvent;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action _selectionUpdateEvent;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action _inputUpdateEvent;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator _repaintCoroutine;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly WaitForEndOfFrame _waitForEndOfFrame;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected bool _keepSelectionOnDisable;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected ArcadeMenu _parentMenu;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected ArcadeSelectable _currentSelection;

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x12F5110", Offset = "0x12F5110", VA = "0x12F5110", Slot = "11")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x12F5564", Offset = "0x12F5564", VA = "0x12F5564", Slot = "12")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x1308778", Offset = "0x1308778", VA = "0x1308778", Slot = "13")]
	public virtual void OnShowPopup()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x12FCC80", Offset = "0x12FCC80", VA = "0x12FCC80", Slot = "14")]
	public virtual void OnClosePopup()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x1308780", Offset = "0x1308780", VA = "0x1308780")]
	private void enableAllChildren(bool enable)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x12FFF10", Offset = "0x12FFF10", VA = "0x12FFF10")]
	public void OnRepaint()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x12F57AC", Offset = "0x12F57AC", VA = "0x12F57AC")]
	public void RegisterContentUpdateEvent(Action contentUpdateEvent)
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x12FC2D4", Offset = "0x12FC2D4", VA = "0x12FC2D4")]
	public void UnregisterContentUpdateEvent(Action contentUpdateEvent)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x12F69A0", Offset = "0x12F69A0", VA = "0x12F69A0")]
	public void RegisterDisplayUpdateEvent(Action displayUpdateEvent)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x12F81BC", Offset = "0x12F81BC", VA = "0x12F81BC")]
	public void UnregisterDisplayUpdateEvent(Action displayUpdateEvent)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x12F584C", Offset = "0x12F584C", VA = "0x12F584C")]
	public void RegisterSelectionUpdateEvent(Action selectionUpdateEvent)
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x12F876C", Offset = "0x12F876C", VA = "0x12F876C")]
	public void UnregisterSelectionUpdateEvent(Action selectionUpdateEvent)
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x1308884", Offset = "0x1308884", VA = "0x1308884")]
	public void RegisterInputUpdateEvent(Action inputUpdateEvent)
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x1308924", Offset = "0x1308924", VA = "0x1308924")]
	public void UnregisterInputUpdateEvent(Action inputUpdateEvent)
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x13089C4", Offset = "0x13089C4", VA = "0x13089C4")]
	public void ForceValidateCurrentSelection()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x1308810", Offset = "0x1308810", VA = "0x1308810")]
	[IteratorStateMachine(typeof(<repaintCoroutine>d__27))]
	private IEnumerator repaintCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x1308A70", Offset = "0x1308A70", VA = "0x1308A70")]
	protected void listenToInputs()
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x12F845C", Offset = "0x12F845C", VA = "0x12F845C")]
	protected void updateSelection(ArcadeSelectable selectable)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x1308AF4", Offset = "0x1308AF4", VA = "0x1308AF4", Slot = "15")]
	protected virtual void onSelectionLocked()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x1308AF8", Offset = "0x1308AF8", VA = "0x1308AF8")]
	public void SetParentMenu(ArcadeMenu menu)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x12FFAE4", Offset = "0x12FFAE4", VA = "0x12FFAE4")]
	public void GoToMenu(ArcadeMenu menu)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x13045C0", Offset = "0x13045C0", VA = "0x13045C0")]
	public void GoToMenu(ArcadeMenu menu, bool setParent = true)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x1308B00", Offset = "0x1308B00", VA = "0x1308B00")]
	public void GoToParentMenu()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x12FD028", Offset = "0x12FD028", VA = "0x12FD028", Slot = "16")]
	[ContextMenu("Press Enter")]
	public virtual void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x12FD180", Offset = "0x12FD180", VA = "0x12FD180", Slot = "17")]
	[ContextMenu("Press Back")]
	public virtual void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x12FD628", Offset = "0x12FD628", VA = "0x12FD628", Slot = "18")]
	[ContextMenu("Press Home")]
	public virtual void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x1308C44", Offset = "0x1308C44", VA = "0x1308C44", Slot = "19")]
	public virtual void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x1308C48", Offset = "0x1308C48", VA = "0x1308C48", Slot = "20")]
	public virtual void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x1308C4C", Offset = "0x1308C4C", VA = "0x1308C4C", Slot = "21")]
	public virtual void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x1308C50", Offset = "0x1308C50", VA = "0x1308C50", Slot = "22")]
	public virtual void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x12FE7C4", Offset = "0x12FE7C4", VA = "0x12FE7C4")]
	public ArcadeMenu()
	{
	}
}
[Token(Token = "0x20002A4")]
[CreateAssetMenu(fileName = "AMR_MenuRoute", menuName = "GBA/Menus/Menu Route")]
public class ArcadeMenuRoute : ScriptableObject
{
	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ArcadeMenu> _menuRoute;

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x1308D70", Offset = "0x1308D70", VA = "0x1308D70")]
	public void SetRoute(ArcadeMenu[] route)
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x1308F34", Offset = "0x1308F34", VA = "0x1308F34")]
	public ArcadeMenu PlayRoute(ArcadeMenu originMenu, [Optional] ArcadeMenu endMenu)
	{
		return null;
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x130908C", Offset = "0x130908C", VA = "0x130908C")]
	public ArcadeMenuRoute()
	{
	}
}
[Token(Token = "0x20002A5")]
public class ArcadeMenuRouteManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A6")]
	public struct MenuRoute
	{
		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ArcadeMenuRoute RouteData;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ArcadeMenu[] Menus;
	}

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MenuRoute[] _menuRoutes;

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x1309114", Offset = "0x1309114", VA = "0x1309114")]
	private void Start()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x13091E8", Offset = "0x13091E8", VA = "0x13091E8")]
	public ArcadeMenuRouteManager()
	{
	}
}
[Token(Token = "0x20002A7")]
public class ArcadePopupManager : MonoBehaviour
{
	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ArcadeInputData _inputData;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _handTrackingPopup;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _goPopup;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ArcadeConfirmationPopup _quitGamePopup;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityAction _onClosePopup;

	[Token(Token = "0x170002CE")]
	public bool PopupHandTrackingActive
	{
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x13091F0", Offset = "0x13091F0", VA = "0x13091F0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x13091F8", Offset = "0x13091F8", VA = "0x13091F8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002CF")]
	public bool PopupGoActive
	{
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1309204", Offset = "0x1309204", VA = "0x1309204")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x130920C", Offset = "0x130920C", VA = "0x130920C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002D0")]
	public bool PopupQuitGameActive
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1309218", Offset = "0x1309218", VA = "0x1309218")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1309220", Offset = "0x1309220", VA = "0x1309220")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x130922C", Offset = "0x130922C", VA = "0x130922C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x12FD8EC", Offset = "0x12FD8EC", VA = "0x12FD8EC")]
	public void ShowHandTrackingPopup(ArcadeMenu sourceMenu)
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x12FD9D4", Offset = "0x12FD9D4", VA = "0x12FD9D4")]
	public void CloseHandTrackingPopup(ArcadeMenu sourceMenu)
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x13000A8", Offset = "0x13000A8", VA = "0x13000A8")]
	public void ShowGoPopup(ArcadeMenu sourceMenu)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x13002C0", Offset = "0x13002C0", VA = "0x13002C0")]
	public void CloseGoPopup(ArcadeMenu sourceMenu)
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x12FD58C", Offset = "0x12FD58C", VA = "0x12FD58C")]
	public void ShowQuitGamePopup(ArcadeMenu sourceMenu)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x1309238", Offset = "0x1309238", VA = "0x1309238")]
	public void CloseQuitGamePopup()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x13092B0", Offset = "0x13092B0", VA = "0x13092B0")]
	public void CallOnNextClose(UnityAction callback)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x13092B8", Offset = "0x13092B8", VA = "0x13092B8")]
	public ArcadePopupManager()
	{
	}
}
[Token(Token = "0x20002A8")]
public class ArcadeScrollMenu : ArcadeMenu
{
	[Serializable]
	[Token(Token = "0x20002A9")]
	public class SelectablesList
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly VerticalLayoutGroup _contentLayout;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly RectTransform _contentTransform;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RectTransform _viewportTransform;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Image _topScrollIndicator;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Image _bottomScrollIndicator;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int _visibility;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ArcadeSelectable[] _selectablesList;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _currentSelection;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _currentViewStartPos;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _currentViewEndPos;

		[Token(Token = "0x170002D2")]
		public int Count
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x1309838", Offset = "0x1309838", VA = "0x1309838")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002D3")]
		public bool TopVisible
		{
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0x1309850", Offset = "0x1309850", VA = "0x1309850")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D4")]
		public bool BottomVisible
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x13099AC", Offset = "0x13099AC", VA = "0x13099AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x12FBFF0", Offset = "0x12FBFF0", VA = "0x12FBFF0")]
		public SelectablesList(VerticalLayoutGroup contentLayout, RectTransform viewport, int visibility = 0, [Optional] Image topScrollIndicator, [Optional] Image bottomScrollIndicator)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x12FC108", Offset = "0x12FC108", VA = "0x12FC108")]
		public void Fill(IList<ArcadeSelectable> selectables)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x1309B4C", Offset = "0x1309B4C", VA = "0x1309B4C")]
		public int GetCurrentSelectionIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1309B54", Offset = "0x1309B54", VA = "0x1309B54")]
		public int GetSelectableIndex(ArcadeSelectable selectable)
		{
			return default(int);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1309BFC", Offset = "0x1309BFC", VA = "0x1309BFC")]
		public ArcadeSelectable GetCurrentSelection()
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x12F9CFC", Offset = "0x12F9CFC", VA = "0x12F9CFC")]
		public ArcadeSelectable GetSelectable(int index)
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x1309C30", Offset = "0x1309C30", VA = "0x1309C30")]
		public ArcadeSelectable Select(int index)
		{
			return null;
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x12FC518", Offset = "0x12FC518", VA = "0x12FC518")]
		public ArcadeSelectable Select(ArcadeSelectable selectable)
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x12FAA64", Offset = "0x12FAA64", VA = "0x12FAA64")]
		public ArcadeSelectable SelectFirst()
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x12FA6B8", Offset = "0x12FA6B8", VA = "0x12FA6B8")]
		public ArcadeSelectable SelectLast()
		{
			return null;
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x12FA80C", Offset = "0x12FA80C", VA = "0x12FA80C")]
		public ArcadeSelectable MoveSelectionPrevious()
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x12FAB94", Offset = "0x12FAB94", VA = "0x12FAB94")]
		public ArcadeSelectable MoveSelectionNext()
		{
			return null;
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x13093D4", Offset = "0x13093D4", VA = "0x13093D4")]
		public void RefreshScrollIndicators()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x12F9DF0", Offset = "0x12F9DF0", VA = "0x12F9DF0")]
		public void ResetScrollView()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x12F9D40", Offset = "0x12F9D40", VA = "0x12F9D40")]
		public void RecenterScrollView(ArcadeSelectable selectable)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x130A030", Offset = "0x130A030", VA = "0x130A030")]
		public void RecenterScrollView(int index)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1309CE4", Offset = "0x1309CE4", VA = "0x1309CE4")]
		public void MoveToSelectable(int selectableIndex)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x130A2F0", Offset = "0x130A2F0", VA = "0x130A2F0")]
		private ArcadeSelectable getTopVisibleSelectable(int index)
		{
			return null;
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x130A490", Offset = "0x130A490", VA = "0x130A490")]
		private ArcadeSelectable getBottomVisibleSelectable(int index)
		{
			return null;
		}
	}

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VerticalLayoutGroup Content;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RectTransform Viewport;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image TopScrollIndicator;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image BottomScrollIndicator;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int ScrollVisibility;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected SelectablesList _selectablesList;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RectTransform _contentTransform;

	[Token(Token = "0x170002D1")]
	public RectTransform ContentTransform
	{
		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x12F5CFC", Offset = "0x12F5CFC", VA = "0x12F5CFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x12FCABC", Offset = "0x12FCABC", VA = "0x12FCABC", Slot = "23")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x12F8CC0", Offset = "0x12F8CC0", VA = "0x12F8CC0", Slot = "15")]
	protected override void onSelectionLocked()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x12FCC88", Offset = "0x12FCC88", VA = "0x12FCC88")]
	public void RecenterOnSelection()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x13092C0", Offset = "0x13092C0", VA = "0x13092C0")]
	public void RefreshScrollIndicators()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x1309348", Offset = "0x1309348", VA = "0x1309348")]
	protected void refreshScrollIndicators()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x13094B0", Offset = "0x13094B0", VA = "0x13094B0")]
	protected void fillListWithContentChildren()
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x1309750", Offset = "0x1309750", VA = "0x1309750")]
	protected void autoselectFirstSelectable()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x12FD2B8", Offset = "0x12FD2B8", VA = "0x12FD2B8", Slot = "22")]
	public override void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x12FD370", Offset = "0x12FD370", VA = "0x12FD370", Slot = "19")]
	public override void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x12FD418", Offset = "0x12FD418", VA = "0x12FD418", Slot = "20")]
	public override void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x12FD420", Offset = "0x12FD420", VA = "0x12FD420", Slot = "21")]
	public override void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x12F6054", Offset = "0x12F6054", VA = "0x12F6054")]
	public ArcadeScrollMenu()
	{
	}
}
[Token(Token = "0x20002AA")]
public class ArcadeSelectable : MonoBehaviour, IArcadeSelectable
{
	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _cacheId;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnSelectedEvent;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnUnselectedEvent;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnValidatedEvent;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnLocked;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action OnUnlocked;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool PlayValidatedAudioEvent;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Unlock Settings")]
	[SerializeField]
	protected Unlockable _unlockableItem;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Image _newItemIcon;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Visuals")]
	[SerializeField]
	protected SelectableTextMesh[] _selectableTextMeshes;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected SelectableSprite[] _selectableSprites;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _locked;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _isNewItem;

	[Token(Token = "0x170002D5")]
	public string CacheId
	{
		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x116E754", Offset = "0x116E754", VA = "0x116E754")]
		get
		{
			return null;
		}
		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x116E75C", Offset = "0x116E75C", VA = "0x116E75C")]
		set
		{
		}
	}

	[Token(Token = "0x170002D6")]
	public RectTransform Transform
	{
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x116E8DC", Offset = "0x116E8DC", VA = "0x116E8DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002D7")]
	public bool Locked
	{
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x116E984", Offset = "0x116E984", VA = "0x116E984")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x116E98C", Offset = "0x116E98C", VA = "0x116E98C")]
		set
		{
		}
	}

	[Token(Token = "0x170002D8")]
	public bool IsNewItem
	{
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x116EB78", Offset = "0x116EB78", VA = "0x116EB78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x116EB80", Offset = "0x116EB80", VA = "0x116EB80")]
		set
		{
		}
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x116ED2C", Offset = "0x116ED2C", VA = "0x116ED2C")]
	private void lockSelectable()
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x116ED34", Offset = "0x116ED34", VA = "0x116ED34")]
	private void unlockSelectable()
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x116EA38", Offset = "0x116EA38", VA = "0x116EA38")]
	private void setLockedState(bool locked)
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x116F04C", Offset = "0x116F04C", VA = "0x116F04C")]
	private void refreshCacheState()
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x116F110", Offset = "0x116F110", VA = "0x116F110", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x116F4B8", Offset = "0x116F4B8", VA = "0x116F4B8", Slot = "8")]
	public virtual void OnSelected()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x116F54C", Offset = "0x116F54C", VA = "0x116F54C", Slot = "9")]
	public virtual void OnUnselected()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x116F5E0", Offset = "0x116F5E0", VA = "0x116F5E0", Slot = "10")]
	public virtual void OnValidated()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x116F608", Offset = "0x116F608", VA = "0x116F608")]
	public void SetUnlockable(Unlockable unlockable)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x116EEC4", Offset = "0x116EEC4", VA = "0x116EEC4")]
	public void ResetFonts()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x116ED3C", Offset = "0x116ED3C", VA = "0x116ED3C")]
	public void SetLockedFont()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x116EF88", Offset = "0x116EF88", VA = "0x116EF88")]
	public void ResetIcon()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x116EE00", Offset = "0x116EE00", VA = "0x116EE00")]
	public void SetLockedIcon()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x116FCA0", Offset = "0x116FCA0", VA = "0x116FCA0")]
	public ArcadeSelectable()
	{
	}
}
[Token(Token = "0x20002AB")]
public class ArcadeSelectableHighlightable : ArcadeSelectable
{
	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x116FCB4", Offset = "0x116FCB4", VA = "0x116FCB4", Slot = "8")]
	public override void OnSelected()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x116FE60", Offset = "0x116FE60", VA = "0x116FE60", Slot = "9")]
	public override void OnUnselected()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x116FCD4", Offset = "0x116FCD4", VA = "0x116FCD4")]
	public void SetSelectedFont()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x116FD9C", Offset = "0x116FD9C", VA = "0x116FD9C")]
	public void SetSelectedIcon()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x116FEB0", Offset = "0x116FEB0", VA = "0x116FEB0")]
	public ArcadeSelectableHighlightable()
	{
	}
}
[Token(Token = "0x20002AC")]
[RequireComponent(typeof(TextMeshProUGUI))]
public class ArcadeSelectableInputChar : ArcadeSelectableHighlightable
{
	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public char AlphaReturn;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public char NumReturn;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool AllowNumbers;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Image _returnImage;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private char _currentAlphanum;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TextMeshProUGUI _cacheTextMesh;

	[Token(Token = "0x170002D9")]
	private TextMeshProUGUI _textMesh
	{
		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x116FEC4", Offset = "0x116FEC4", VA = "0x116FEC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002DA")]
	public char CurrentValue
	{
		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x116FF6C", Offset = "0x116FF6C", VA = "0x116FF6C")]
		get
		{
			return default(char);
		}
	}

	[Token(Token = "0x170002DB")]
	public bool IsReturnChar
	{
		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x116FF74", Offset = "0x116FF74", VA = "0x116FF74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x116FFA8", Offset = "0x116FFA8", VA = "0x116FFA8")]
	protected void Start()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x116FFAC", Offset = "0x116FFAC", VA = "0x116FFAC")]
	private void updateDisplay()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x1170100", Offset = "0x1170100", VA = "0x1170100")]
	public void SetPreviousAlphanum()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x1170248", Offset = "0x1170248", VA = "0x1170248")]
	public void SetNextAlphanum()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x11703A0", Offset = "0x11703A0", VA = "0x11703A0")]
	public void SetAlphanum(char alphanum)
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x1170408", Offset = "0x1170408", VA = "0x1170408")]
	public void SetReturnChar()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x1170424", Offset = "0x1170424", VA = "0x1170424")]
	[ContextMenu("Reset Alpha Return")]
	private void resetAlphaReturn()
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x117042C", Offset = "0x117042C", VA = "0x117042C")]
	[ContextMenu("Reset Num Return")]
	private void resetNumReturn()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x1170434", Offset = "0x1170434", VA = "0x1170434")]
	public ArcadeSelectableInputChar()
	{
	}
}
[Token(Token = "0x20002AD")]
public class ArcadeSelectableToggle : ArcadeSelectableHighlightable, IArcadeInputListener, IJoystickInputListener
{
	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ArcadeInputData _inputData;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected GameObject _noChoiceObject;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected SelectableToggleOption _leftOption;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected SelectableToggleOption _rightOption;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _leftOptionSelected;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool _rightOptionSelected;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool _isSelected;

	[Token(Token = "0x170002DC")]
	private bool isSelected
	{
		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1170454", Offset = "0x1170454", VA = "0x1170454")]
		set
		{
		}
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x1170500", Offset = "0x1170500", VA = "0x1170500")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x117058C", Offset = "0x117058C", VA = "0x117058C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x1170618", Offset = "0x1170618", VA = "0x1170618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x1170624", Offset = "0x1170624", VA = "0x1170624", Slot = "8")]
	public override void OnSelected()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x1170640", Offset = "0x1170640", VA = "0x1170640", Slot = "9")]
	public override void OnUnselected()
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x117065C", Offset = "0x117065C", VA = "0x117065C")]
	public SelectableToggleOption GetOppositeOption(SelectableToggleOption toggleOption)
	{
		return null;
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x1170710", Offset = "0x1170710", VA = "0x1170710")]
	public void SwitchToggle()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x117085C", Offset = "0x117085C", VA = "0x117085C")]
	public void SelectLeft()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x117072C", Offset = "0x117072C", VA = "0x117072C")]
	public void SelectRight()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x1170C18", Offset = "0x1170C18", VA = "0x1170C18", Slot = "18")]
	public virtual void OnJoystickLeftEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x1170C24", Offset = "0x1170C24", VA = "0x1170C24", Slot = "19")]
	public virtual void OnJoystickRightEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x1170C30", Offset = "0x1170C30", VA = "0x1170C30", Slot = "14")]
	public void OnJoystickUpEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x1170C34", Offset = "0x1170C34", VA = "0x1170C34", Slot = "15")]
	public void OnJoystickDownEvent(bool triggered)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x1170C38", Offset = "0x1170C38", VA = "0x1170C38", Slot = "11")]
	public void OnEnterButtonPressed()
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x1170C3C", Offset = "0x1170C3C", VA = "0x1170C3C", Slot = "12")]
	public void OnBackButtonPressed()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x1170C40", Offset = "0x1170C40", VA = "0x1170C40", Slot = "13")]
	public void OnHomeButtonPressed()
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x1170C44", Offset = "0x1170C44", VA = "0x1170C44")]
	public ArcadeSelectableToggle()
	{
	}
}
[Token(Token = "0x20002AE")]
public interface IArcadeSelectable
{
	[Token(Token = "0x6001318")]
	void OnSelected();

	[Token(Token = "0x6001319")]
	void OnUnselected();

	[Token(Token = "0x600131A")]
	void OnValidated();
}
[Token(Token = "0x20002AF")]
public class MenuCacheSystem : rcSingleton<MenuCacheSystem>
{
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class MenuCacheData
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<string> _cachedMenuItems;

		[Token(Token = "0x170002E0")]
		public IReadOnlyList<string> CachedMenuItems
		{
			[Token(Token = "0x6001328")]
			[Address(RVA = "0x1171EEC", Offset = "0x1171EEC", VA = "0x1171EEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public int CacheSize
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0x1171EF4", Offset = "0x1171EF4", VA = "0x1171EF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1171064", Offset = "0x1171064", VA = "0x1171064")]
		public bool CacheMenuItem(string cacheId)
		{
			return default(bool);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x117117C", Offset = "0x117117C", VA = "0x117117C")]
		public bool RemoveMenuItem(string cacheId)
		{
			return default(bool);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x11714FC", Offset = "0x11714FC", VA = "0x11714FC")]
		public bool IsCached(string cacheId)
		{
			return default(bool);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x11715FC", Offset = "0x11715FC", VA = "0x11715FC")]
		public void LoadFromFile(string filepath)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1171AA0", Offset = "0x1171AA0", VA = "0x1171AA0")]
		public void SaveToFile(string filepath)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1171F3C", Offset = "0x1171F3C", VA = "0x1171F3C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1171574", Offset = "0x1171574", VA = "0x1171574")]
		public MenuCacheData()
		{
		}
	}

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XRInputSystemParameter _inputModeParameter;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MenuCacheData _cacheData;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnCacheReloaded;

	[Token(Token = "0x4000EF4")]
	private const string CACHE_DATA_FILENAME = "CacheMenu.dat";

	[Token(Token = "0x4000EF5")]
	private const string CACHE_DATA_CTRL_FILENAME = "CacheMenu_Ctrl.dat";

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _userFolderCache;

	[Token(Token = "0x170002DD")]
	private string currentFilename
	{
		[Token(Token = "0x600131B")]
		[Address(RVA = "0x1170C58", Offset = "0x1170C58", VA = "0x1170C58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002DE")]
	private string currentFilepath
	{
		[Token(Token = "0x600131C")]
		[Address(RVA = "0x1170D3C", Offset = "0x1170D3C", VA = "0x1170D3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002DF")]
	private string userFolderPathCache
	{
		[Token(Token = "0x600131D")]
		[Address(RVA = "0x1170DC4", Offset = "0x1170DC4", VA = "0x1170DC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x1170E7C", Offset = "0x1170E7C", VA = "0x1170E7C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x1170F8C", Offset = "0x1170F8C", VA = "0x1170F8C")]
	private void onInputMethodUpdated(XRInputTracker.XRInputSystem toValue, XRInputTracker.XRInputSystem fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x116ECD8", Offset = "0x116ECD8", VA = "0x116ECD8")]
	public void CacheMenuItem(string cacheId)
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x116E870", Offset = "0x116E870", VA = "0x116E870")]
	public void ReplaceMenuItem(string oldCacheId, string newCacheId)
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x11711F4", Offset = "0x11711F4", VA = "0x11711F4")]
	public void BulkReplaceMenuItem(string[] oldCacheIds, string[] newCacheId)
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x11712D8", Offset = "0x11712D8", VA = "0x11712D8")]
	public void RemoveItems(string startsWith)
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x116F0D4", Offset = "0x116F0D4", VA = "0x116F0D4")]
	public bool IsCached(string cacheId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x1170FCC", Offset = "0x1170FCC", VA = "0x1170FCC")]
	private void loadData()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x1171110", Offset = "0x1171110", VA = "0x1171110")]
	private void saveData()
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x1171E80", Offset = "0x1171E80", VA = "0x1171E80")]
	public MenuCacheSystem()
	{
	}
}
[Token(Token = "0x20002B1")]
[RequireComponent(typeof(Image))]
public class SelectableSprite : MonoBehaviour
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite _lockedSprite;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite _selectedSprite;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image _image;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sprite _baseSprite;

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x1171FAC", Offset = "0x1171FAC", VA = "0x1171FAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x1171FD4", Offset = "0x1171FD4", VA = "0x1171FD4")]
	private void cacheImageAndSprite()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x116FE88", Offset = "0x116FE88", VA = "0x116FE88")]
	public void Select()
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x116FC14", Offset = "0x116FC14", VA = "0x116FC14")]
	public void Lock()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x116FBEC", Offset = "0x116FBEC", VA = "0x116FBEC")]
	public void ResetSprite()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x11720A0", Offset = "0x11720A0", VA = "0x11720A0")]
	public SelectableSprite()
	{
	}
}
[Token(Token = "0x20002B2")]
[RequireComponent(typeof(TextMeshProUGUI))]
public class SelectableTextMesh : MonoBehaviour
{
	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizedFont _currentLocalizedFont;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalizedFont _unselectedLocalizedFont;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalizedFont _selectedLocalizedFont;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalizedFont _lockedLocalizedFont;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_FontAsset _lockedFont;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TMP_FontAsset _selectedFont;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMeshProUGUI _textMesh;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TMP_FontAsset _baseFont;

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x11720A8", Offset = "0x11720A8", VA = "0x11720A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x117220C", Offset = "0x117220C", VA = "0x117220C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x11721D0", Offset = "0x11721D0", VA = "0x11721D0")]
	private void onLanguageUpdated()
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x117232C", Offset = "0x117232C", VA = "0x117232C")]
	private void cacheMeshAndFont()
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x1172420", Offset = "0x1172420", VA = "0x1172420")]
	private void setFont(LocalizedFont localizedFont, bool maskable)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x1172664", Offset = "0x1172664", VA = "0x1172664")]
	private void setFont(TMP_FontAsset font, bool maskable)
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x116FE80", Offset = "0x116FE80", VA = "0x116FE80")]
	public void Select()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x1172714", Offset = "0x1172714", VA = "0x1172714")]
	public void Select(bool maskable = false)
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x116FA34", Offset = "0x116FA34", VA = "0x116FA34")]
	public void Lock()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x116F97C", Offset = "0x116F97C", VA = "0x116F97C")]
	public void ResetFont()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x11728D0", Offset = "0x11728D0", VA = "0x11728D0")]
	public SelectableTextMesh()
	{
	}
}
[Token(Token = "0x20002B3")]
public class SelectableToggleOption : MonoBehaviour
{
	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SelectableTextMesh _optionNameMesh;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] _selectedOptionObjects;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] _lockedOptionObjects;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent _onOptionSelected;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent _onOptionUnselected;

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x1170AD0", Offset = "0x1170AD0", VA = "0x1170AD0")]
	public void Select()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x117098C", Offset = "0x117098C", VA = "0x117098C")]
	public void Unselect()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x11728D8", Offset = "0x11728D8", VA = "0x11728D8")]
	public void Lock()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x1172A00", Offset = "0x1172A00", VA = "0x1172A00")]
	public SelectableToggleOption()
	{
	}
}
[Token(Token = "0x20002B4")]
[RequireComponent(typeof(TextMeshProUGUI))]
public class BlinkingTextMeshProUGUI : MonoBehaviour
{
	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve _glowCurve;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _fontMaterial;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _currentTime;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _sinePeriod;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _glowValue;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly int PROPERTY_ID_GLOW_INNER;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly int PROPERTY_ID_GLOW_OUTER;

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x1172A08", Offset = "0x1172A08", VA = "0x1172A08")]
	private void Start()
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x1172B8C", Offset = "0x1172B8C", VA = "0x1172B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x1172C0C", Offset = "0x1172C0C", VA = "0x1172C0C")]
	public BlinkingTextMeshProUGUI()
	{
	}
}
[Token(Token = "0x20002B5")]
public class CoinsDisplay : MonoBehaviour
{
	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image[] _coinImages;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite _emptyCoinSprite;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite _fullCoinSprite;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _currentTotalCoins;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _coinsCounter;

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x1172C90", Offset = "0x1172C90", VA = "0x1172C90")]
	public void ResetCoins()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x1172CF8", Offset = "0x1172CF8", VA = "0x1172CF8")]
	public void SetTotalCoins(int totalCoins)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x1172DC0", Offset = "0x1172DC0", VA = "0x1172DC0")]
	public void AddCoinToCounter()
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x1172E40", Offset = "0x1172E40", VA = "0x1172E40")]
	public CoinsDisplay()
	{
	}
}
[Token(Token = "0x20002B6")]
public class DeviceSpecificSprite : MonoBehaviour
{
	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image ImageToUpdate;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite SpecificSprite;

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x1172EA4", Offset = "0x1172EA4", VA = "0x1172EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x1172EC8", Offset = "0x1172EC8", VA = "0x1172EC8")]
	public DeviceSpecificSprite()
	{
	}
}
[Token(Token = "0x20002B7")]
public class EndMenu : MonoBehaviour
{
	[Token(Token = "0x20002B8")]
	[CompilerGenerated]
	private sealed class <completeStarsCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndMenu <>4__this;

		[Token(Token = "0x170002E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0x1173CA4", Offset = "0x1173CA4", VA = "0x1173CA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x1173CEC", Offset = "0x1173CEC", VA = "0x1173CEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x117366C", Offset = "0x117366C", VA = "0x117366C")]
		[DebuggerHidden]
		public <completeStarsCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1173BE4", Offset = "0x1173BE4", VA = "0x1173BE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1173BE8", Offset = "0x1173BE8", VA = "0x1173BE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1173CAC", Offset = "0x1173CAC", VA = "0x1173CAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B9")]
	[CompilerGenerated]
	private sealed class <starLerpSplineCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndMenu <>4__this;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170002E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x1173F84", Offset = "0x1173F84", VA = "0x1173F84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x1173FCC", Offset = "0x1173FCC", VA = "0x1173FCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1173908", Offset = "0x1173908", VA = "0x1173908")]
		[DebuggerHidden]
		public <starLerpSplineCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x1173CF4", Offset = "0x1173CF4", VA = "0x1173CF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1173CF8", Offset = "0x1173CF8", VA = "0x1173CF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1173F8C", Offset = "0x1173F8C", VA = "0x1173F8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BA")]
	[CompilerGenerated]
	private sealed class <starSizeCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public rcSplineWalker splineWalker;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform starObject;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EndMenu <>4__this;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject currentAnchorObject;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityAction onEndReached;

		[Token(Token = "0x170002E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x11740A4", Offset = "0x11740A4", VA = "0x11740A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x11740EC", Offset = "0x11740EC", VA = "0x11740EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1173A04", Offset = "0x1173A04", VA = "0x1173A04")]
		[DebuggerHidden]
		public <starSizeCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1173FD4", Offset = "0x1173FD4", VA = "0x1173FD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1173FD8", Offset = "0x1173FD8", VA = "0x1173FD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x11740AC", Offset = "0x11740AC", VA = "0x11740AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RewardManager RewardManagerScript;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Range(0f, 3f)]
	private int _scriptedStarsCompleted;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("LevelComplete")]
	public GameObject CanvasLevelComplete;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _completeTextObject;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _completeText;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextAnimatorPlayer _completeTextAnimator;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> Stars;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Spline")]
	private rcSpline[] _splines;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<rcGameObjectGameParameter> SplineAnchorObject;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcIntGameParameter SplineWalkingStarsCounterParam;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Min(0f)]
	[SerializeField]
	private float _delayBeforeStartSpline;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UnityEvent _onStarsAnimationStarted;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UnityEvent _onStarsAnimationCompleted;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("LevelFailed")]
	public GameObject CanvasLevelFailed;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Queue<GameObject> _starToComplete;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _starsCompleted;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly WaitForSeconds _yieldBetweenStarsAnim;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly WaitForSeconds _yieldBetweenStarsLerp;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly int ANMSTATE_HASH_STAR_WIN;

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x1172ED0", Offset = "0x1172ED0", VA = "0x1172ED0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x1172EE8", Offset = "0x1172EE8", VA = "0x1172EE8")]
	public void HideCanvas()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x1173360", Offset = "0x1173360", VA = "0x1173360")]
	public void OpenLevelComplete()
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x1173618", Offset = "0x1173618", VA = "0x1173618")]
	[ContextMenu("Toggle Complete Text")]
	public void ToggleCompleteText()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x1173550", Offset = "0x1173550", VA = "0x1173550")]
	public void ShowCompleteText(bool show)
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x11735A4", Offset = "0x11735A4", VA = "0x11735A4")]
	[IteratorStateMachine(typeof(<completeStarsCoroutine>d__24))]
	private IEnumerator completeStarsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x1173694", Offset = "0x1173694", VA = "0x1173694")]
	private void starCompletionAnimation()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x1173894", Offset = "0x1173894", VA = "0x1173894")]
	[IteratorStateMachine(typeof(<starLerpSplineCoroutine>d__26))]
	private IEnumerator starLerpSplineCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x1173930", Offset = "0x1173930", VA = "0x1173930")]
	[IteratorStateMachine(typeof(<starSizeCoroutine>d__27))]
	private IEnumerator starSizeCoroutine(Transform starObject, rcSplineWalker splineWalker, GameObject currentAnchorObject, UnityAction onEndReached)
	{
		return null;
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x1173A2C", Offset = "0x1173A2C", VA = "0x1173A2C")]
	public void OpenLevelFailed()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x1173A54", Offset = "0x1173A54", VA = "0x1173A54")]
	[ContextMenu("Toggle Fail Canvas")]
	public void ToggleFailCanvas()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x1173A88", Offset = "0x1173A88", VA = "0x1173A88")]
	private void BurstStarFX(GameObject anchor)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x1173230", Offset = "0x1173230", VA = "0x1173230")]
	public void SetupSplineAnchor()
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x1173AD0", Offset = "0x1173AD0", VA = "0x1173AD0")]
	public EndMenu()
	{
	}
}
[Token(Token = "0x20002BB")]
public class FontBlinkManager : MonoBehaviour
{
	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizedFont[] _localizedFonts;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material[] _fontMaterials;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve _glowCurve;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _currentTime;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _sinePeriod;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _glowValue;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int PROPERTY_ID_GLOW_INNER;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly int PROPERTY_ID_GLOW_OUTER;

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x11740F4", Offset = "0x11740F4", VA = "0x11740F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x1174194", Offset = "0x1174194", VA = "0x1174194")]
	private void Update()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x1174398", Offset = "0x1174398", VA = "0x1174398")]
	public FontBlinkManager()
	{
	}
}
[Token(Token = "0x20002BC")]
[CreateAssetMenu(fileName = "FLT_FormattedLocalizedText", menuName = "GBA/Localization/Formatted Localized Text")]
public class FormattedLocalizedText : rcLocalizedText
{
	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string _highlightStartTag;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string _highlightEndTag;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color _highlightColor;

	[Token(Token = "0x6001373")]
	[Address(RVA = "0x117441C", Offset = "0x117441C", VA = "0x117441C")]
	public void UpdateFormattedData()
	{
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x11744F4", Offset = "0x11744F4", VA = "0x11744F4")]
	public void SetHighlightColor(Color highlightColor)
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x11745E8", Offset = "0x11745E8", VA = "0x11745E8")]
	public FormattedLocalizedText()
	{
	}
}
[Token(Token = "0x20002BD")]
public class LevelThemeBackgroundUpdater : MonoBehaviour
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image ThemeBackgroundObject;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Sprite> Themes;

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x1174678", Offset = "0x1174678", VA = "0x1174678")]
	public void UpdateTheme(int index)
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x1174710", Offset = "0x1174710", VA = "0x1174710")]
	public LevelThemeBackgroundUpdater()
	{
	}
}
[Token(Token = "0x20002BE")]
public class NewIconeAnimation : MonoBehaviour
{
	[Token(Token = "0x20002BF")]
	[CompilerGenerated]
	private sealed class <NewIconeAnimationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NewIconeAnimation <>4__this;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x170002E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x11749D8", Offset = "0x11749D8", VA = "0x11749D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x1174A20", Offset = "0x1174A20", VA = "0x1174A20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x1174820", Offset = "0x1174820", VA = "0x1174820")]
		[DebuggerHidden]
		public <NewIconeAnimationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x11748C0", Offset = "0x11748C0", VA = "0x11748C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x11748C4", Offset = "0x11748C4", VA = "0x11748C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x11749E0", Offset = "0x11749E0", VA = "0x11749E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform _rect;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 _startScale;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 _endScale;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _speed;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve _scaleCurve;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _newIconeAnimationCoroutine;

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x1174718", Offset = "0x1174718", VA = "0x1174718")]
	public void StartNewIconeAnimation()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x11747AC", Offset = "0x11747AC", VA = "0x11747AC")]
	[IteratorStateMachine(typeof(<NewIconeAnimationCoroutine>d__7))]
	private IEnumerator NewIconeAnimationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x1174768", Offset = "0x1174768", VA = "0x1174768")]
	public void StopNewIconeAnimation()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x1174848", Offset = "0x1174848", VA = "0x1174848")]
	public NewIconeAnimation()
	{
	}
}
[Token(Token = "0x20002C0")]
public class OnlineFadeManager : MonoBehaviour
{
	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Range(0f, 10f)]
	private float _fadeOutSpeed;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CanvasFadeOut _fadeOut;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayer;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _hasFadeOut;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _hasTP;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool _hasStateChanged;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool _isErrorRoomjoin;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _isTimeOut;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool _wasHost;

	[Token(Token = "0x4000F5B")]
	private const float _fadeTimeout = 30f;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _currentFadeTimeout;

	[Token(Token = "0x170002EA")]
	private bool _isHost
	{
		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1174A28", Offset = "0x1174A28", VA = "0x1174A28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x1174B58", Offset = "0x1174B58", VA = "0x1174B58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x1174FE8", Offset = "0x1174FE8", VA = "0x1174FE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x117507C", Offset = "0x117507C", VA = "0x117507C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x1174D34", Offset = "0x1174D34", VA = "0x1174D34")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x11750F8", Offset = "0x11750F8", VA = "0x11750F8")]
	private void fadeOut()
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x11756F0", Offset = "0x11756F0", VA = "0x11756F0")]
	public void TryFadeInAfterTP()
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x11756FC", Offset = "0x11756FC", VA = "0x11756FC")]
	private void tryFadeIn()
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x1175CE0", Offset = "0x1175CE0", VA = "0x1175CE0")]
	private void fadeInAtEndFadeOut()
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x1175D7C", Offset = "0x1175D7C", VA = "0x1175D7C")]
	private void fadeInMatchmaker()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x11750E0", Offset = "0x11750E0", VA = "0x11750E0")]
	private void fadeInMatchmakerTimeout()
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x1175F1C", Offset = "0x1175F1C", VA = "0x1175F1C")]
	private void fadeInPartyRoom()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x11760B8", Offset = "0x11760B8", VA = "0x11760B8")]
	private void fadeInPartyRoomError()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x1176254", Offset = "0x1176254", VA = "0x1176254")]
	private void fadeInPartyRoomTimeout()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x117626C", Offset = "0x117626C", VA = "0x117626C")]
	public OnlineFadeManager()
	{
	}
}
[Token(Token = "0x20002C1")]
public class TicketLimitChecker : MonoBehaviour
{
	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MatchmakingLimitsManager _matchmakingLimitsManager;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _ticketLimit;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _trigger;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private rcBoolGameParameter backgroundMatchmakingEnabled;

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x11765C8", Offset = "0x11765C8", VA = "0x11765C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x1176738", Offset = "0x1176738", VA = "0x1176738")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x11768E0", Offset = "0x11768E0", VA = "0x11768E0")]
	private void enableButton1v1Menu(bool enable)
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x1176928", Offset = "0x1176928", VA = "0x1176928")]
	private void lockButton1v1()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x11769C4", Offset = "0x11769C4", VA = "0x11769C4")]
	private void unlockButton1v1()
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x11765CC", Offset = "0x11765CC", VA = "0x11765CC")]
	private void initializeOnlineFeaturesManager()
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x1176A60", Offset = "0x1176A60", VA = "0x1176A60")]
	private void initializeMatchmaker()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x1176AC0", Offset = "0x1176AC0", VA = "0x1176AC0")]
	private void initializeMatchmakingLimitsManager()
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x1176D24", Offset = "0x1176D24", VA = "0x1176D24")]
	public TicketLimitChecker()
	{
	}
}
[Token(Token = "0x20002C2")]
public class CheckBundleVersion : MonoBehaviour
{
	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcIntGameParameter _isLatestGameVersionParameter;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnVersionNotLatest;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnVersionLatest;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Pop Up")]
	[SerializeField]
	private rcLocalizedText _popUpTitle;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private rcLocalizedText _popUpMessage;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcLocalizedText _popUpButtonOK;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcLocalizedText _popUpButtonNotOK;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x1176D2C", Offset = "0x1176D2C", VA = "0x1176D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x1176E78", Offset = "0x1176E78", VA = "0x1176E78")]
	public void CheckCodes(int toValue, int fromValue, object changedBy)
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x1176E84", Offset = "0x1176E84", VA = "0x1176E84")]
	private void showPopUp()
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x11770B4", Offset = "0x11770B4", VA = "0x11770B4")]
	private void onWaitingUserChoice(bool state)
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x1177220", Offset = "0x1177220", VA = "0x1177220")]
	public void LaunchStore()
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x11772A0", Offset = "0x11772A0", VA = "0x11772A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x1177340", Offset = "0x1177340", VA = "0x1177340")]
	public CheckBundleVersion()
	{
	}
}
[Token(Token = "0x20002C3")]
public class ColliderEventsManager : MonoBehaviour
{
	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask _acceptedLayers;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent<Collider> TriggerEnterEvent;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent<Collider> TriggerExitEvent;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent<Collision> CollisionEnterEvent;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent<Collision> CollisionExitEvent;

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x1177348", Offset = "0x1177348", VA = "0x1177348")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x117746C", Offset = "0x117746C", VA = "0x117746C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x1177590", Offset = "0x1177590", VA = "0x1177590")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x11776C0", Offset = "0x11776C0", VA = "0x11776C0")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x11777F0", Offset = "0x11777F0", VA = "0x11777F0")]
	public ColliderEventsManager()
	{
	}
}
[Token(Token = "0x20002C4")]
public class GlobalCoroutine : rcSingleton<GlobalCoroutine>
{
	[Token(Token = "0x20002C5")]
	[CompilerGenerated]
	private sealed class <Coroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityAction callback;

		[Token(Token = "0x170002EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x11779F8", Offset = "0x11779F8", VA = "0x11779F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x1177A40", Offset = "0x1177A40", VA = "0x1177A40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x117789C", Offset = "0x117789C", VA = "0x117789C")]
		[DebuggerHidden]
		public <Coroutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x1177930", Offset = "0x1177930", VA = "0x1177930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x1177934", Offset = "0x1177934", VA = "0x1177934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x1177A00", Offset = "0x1177A00", VA = "0x1177A00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x11777F8", Offset = "0x11777F8", VA = "0x11777F8")]
	public void ExecuteAfter(float seconds, UnityAction callback)
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x1177818", Offset = "0x1177818", VA = "0x1177818")]
	[IteratorStateMachine(typeof(<Coroutine>d__1))]
	private IEnumerator Coroutine(float seconds, UnityAction callback)
	{
		return null;
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x11778C4", Offset = "0x11778C4", VA = "0x11778C4")]
	public GlobalCoroutine()
	{
	}
}
[Token(Token = "0x20002C6")]
public static class ListUtils
{
	[Token(Token = "0x60013B1")]
	public static void Shuffle<T>(this IList<T> list)
	{
	}

	[Token(Token = "0x60013B2")]
	public static void Shuffle<T>(this IList<T> list, System.Random randomGenerator)
	{
	}
}
[Token(Token = "0x20002C7")]
public class TimeUtils
{
	[Token(Token = "0x4000F75")]
	private const int SECONDS_IN_A_DAY = 86400;

	[Token(Token = "0x4000F76")]
	private const int SECONDS_IN_AN_HOUR = 3600;

	[Token(Token = "0x4000F77")]
	private const int SECONDS_IN_A_MINUTE = 60;

	[Token(Token = "0x4000F78")]
	private const string SECONDS_STATIC_SEPARATOR = "\"";

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly NumberFormatInfo SECONDS_STATIC_FORMAT;

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x1177A48", Offset = "0x1177A48", VA = "0x1177A48")]
	public static string SecondsToTimerDisplay(float seconds, string hourUnit)
	{
		return null;
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x1177DD0", Offset = "0x1177DD0", VA = "0x1177DD0")]
	public static string SecondsToStaticDisplay(float seconds, string hourUnit, bool forceShowCentisec = true)
	{
		return null;
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x11781C4", Offset = "0x11781C4", VA = "0x11781C4")]
	public TimeUtils()
	{
	}
}
[Token(Token = "0x20002C8")]
[UnitCategory("Boot Sequence")]
[UnitTitle("Check Sequence Completion")]
[TypeIcon(typeof(ToggleValue))]
public class CheckBootSequenceCompletionUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OkOutputTrigger;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput KoOutputTrigger;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ValueInput BootSettings;

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x1178274", Offset = "0x1178274", VA = "0x1178274", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x1178430", Offset = "0x1178430", VA = "0x1178430")]
	private ControlOutput checkCompletion(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x11784E8", Offset = "0x11784E8", VA = "0x11784E8")]
	public CheckBootSequenceCompletionUnit()
	{
	}
}
[Token(Token = "0x20002C9")]
[TypeIcon(typeof(ToggleValue))]
[UnitCategory("Matchmaking")]
[UnitTitle("Check Matchmaking State")]
public class CheckMatchmakingStateUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OkOutputTrigger;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput KoOutputTrigger;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ValueInput PlayStateParameter;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[DoNotSerialize]
	public ValueInput StateValue;

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x11784F0", Offset = "0x11784F0", VA = "0x11784F0", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x1178700", Offset = "0x1178700", VA = "0x1178700")]
	private ControlOutput checkCurrentValue(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x11787E0", Offset = "0x11787E0", VA = "0x11787E0")]
	public CheckMatchmakingStateUnit()
	{
	}
}
[Token(Token = "0x20002CA")]
[UnitTitle("Get Current Level List")]
[TypeIcon(typeof(MonoBehaviour))]
[UnitCategory("Arcade Menu")]
public class GetCurrentLevelListUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OutputTrigger;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ValueInput PlayStateParameter;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ValueInput MenuFlowsManager;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[DoNotSerialize]
	public ValueOutput MenuRoot;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject _menuRoot;

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x11787E8", Offset = "0x11787E8", VA = "0x11787E8", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x1178A5C", Offset = "0x1178A5C", VA = "0x1178A5C")]
	private ControlOutput getCurrentLevelList(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x1178BD4", Offset = "0x1178BD4", VA = "0x1178BD4")]
	public GetCurrentLevelListUnit()
	{
	}
}
[Token(Token = "0x20002CB")]
[UnitCategory("Input Mode")]
[UnitTitle("Check Current Input Mode")]
[TypeIcon(typeof(ToggleValue))]
public class CheckCurrentInputModeUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OkOutputTrigger;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput KoOutputTrigger;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ValueInput Value;

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x1178BE4", Offset = "0x1178BE4", VA = "0x1178BE4", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x1178DA0", Offset = "0x1178DA0", VA = "0x1178DA0")]
	private ControlOutput checkCurrentValue(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x1178EA4", Offset = "0x1178EA4", VA = "0x1178EA4")]
	public CheckCurrentInputModeUnit()
	{
	}
}
[Token(Token = "0x20002CC")]
[TypeIcon(typeof(ToggleValue))]
[UnitTitle("Check Last Input Mode")]
[UnitCategory("Input Mode")]
public class CheckLastInputModeUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OkOutputTrigger;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput KoOutputTrigger;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ValueInput Value;

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x1178EAC", Offset = "0x1178EAC", VA = "0x1178EAC", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x1179068", Offset = "0x1179068", VA = "0x1179068")]
	private ControlOutput checkCurrentValue(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x1179178", Offset = "0x1179178", VA = "0x1179178")]
	public CheckLastInputModeUnit()
	{
	}
}
[Token(Token = "0x20002CD")]
[UnitCategory("Arcade Menu/Menu Lifecycles")]
[UnitTitle("Menu Lifecycle - InGame Leaderboard Display")]
public class MenuLifecycleInGameLeaderboardDisplayUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput EnterStateTrigger;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlInput ExitStateTrigger;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput EnabledTrigger;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ControlOutput DisabledTrigger;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[DoNotSerialize]
	public ValueInput MenuSettings;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[DoNotSerialize]
	public ValueInput UserIntentParameter;

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x1179180", Offset = "0x1179180", VA = "0x1179180", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x1179428", Offset = "0x1179428", VA = "0x1179428")]
	private ControlOutput enableMenu(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x117950C", Offset = "0x117950C", VA = "0x117950C")]
	private ControlOutput disableMenu(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x117957C", Offset = "0x117957C", VA = "0x117957C")]
	public MenuLifecycleInGameLeaderboardDisplayUnit()
	{
	}
}
[Token(Token = "0x20002CE")]
[UnitCategory("Arcade Menu/Menu Lifecycles")]
[UnitTitle("Menu Lifecycle - Leaderboard Input")]
public class MenuLifecycleLeaderboardInputUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput EnterStateTrigger;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlInput ExitStateTrigger;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput EnabledTrigger;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ControlOutput DisabledTrigger;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[DoNotSerialize]
	public ValueInput MenuSettings;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[DoNotSerialize]
	public ValueInput PlayState;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[DoNotSerialize]
	public ValueInput UserIntentParameter;

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x1179584", Offset = "0x1179584", VA = "0x1179584", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x1179898", Offset = "0x1179898", VA = "0x1179898")]
	private ControlOutput enableMenu(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x11799A4", Offset = "0x11799A4", VA = "0x11799A4")]
	private ControlOutput disableMenu(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x1179A14", Offset = "0x1179A14", VA = "0x1179A14")]
	public MenuLifecycleLeaderboardInputUnit()
	{
	}
}
[Token(Token = "0x20002CF")]
[UnitCategory("Arcade Menu/Menu Lifecycles")]
[UnitTitle("Menu Lifecycle")]
public class MenuLifecycleUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput EnterStateTrigger;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlInput ExitStateTrigger;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput EnabledTrigger;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ControlOutput DisabledTrigger;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[DoNotSerialize]
	public ValueInput MenuSettings;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[DoNotSerialize]
	public ValueInput UserIntentParameter;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[DoNotSerialize]
	public ValueInput ClearIntentToggle;

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x1179A1C", Offset = "0x1179A1C", VA = "0x1179A1C", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x1179D00", Offset = "0x1179D00", VA = "0x1179D00")]
	private ControlOutput enableMenu(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x1179E08", Offset = "0x1179E08", VA = "0x1179E08")]
	private ControlOutput disableMenu(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x1179E78", Offset = "0x1179E78", VA = "0x1179E78")]
	public MenuLifecycleUnit()
	{
	}
}
[Token(Token = "0x20002D0")]
[UnitCategory("Arcade Menu/User Intent")]
[UnitTitle("Check Current User Intent List")]
[TypeIcon(typeof(ToggleValue))]
public class CheckUserIntentListUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OkOutputTrigger;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput KoOutputTrigger;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ValueInput UserIntentParameterValue;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[DoNotSerialize]
	public ValueInput UserIntentValues;

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x1179E80", Offset = "0x1179E80", VA = "0x1179E80", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x117A090", Offset = "0x117A090", VA = "0x117A090")]
	private ControlOutput checkCurrentValue(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x117A198", Offset = "0x117A198", VA = "0x117A198")]
	public CheckUserIntentListUnit()
	{
	}
}
[Token(Token = "0x20002D1")]
[UnitTitle("Check Current User Intent")]
[TypeIcon(typeof(ToggleValue))]
[UnitCategory("Arcade Menu/User Intent")]
public class CheckUserIntentUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OkOutputTrigger;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ControlOutput KoOutputTrigger;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ValueInput UserIntentParameterValue;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[DoNotSerialize]
	public ValueInput UserIntentValue;

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x117A1A0", Offset = "0x117A1A0", VA = "0x117A1A0", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x117A3B0", Offset = "0x117A3B0", VA = "0x117A3B0")]
	private ControlOutput checkCurrentValue(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x117A4C4", Offset = "0x117A4C4", VA = "0x117A4C4")]
	public CheckUserIntentUnit()
	{
	}
}
[Token(Token = "0x20002D2")]
[UnitCategory("Arcade Menu/User Intent")]
[UnitTitle("Clear Current User Intent")]
[TypeIcon(typeof(Null))]
public class ClearUserIntentUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OutputTrigger;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ValueInput UserIntentParameterValue;

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x117A4CC", Offset = "0x117A4CC", VA = "0x117A4CC", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x117A63C", Offset = "0x117A63C", VA = "0x117A63C")]
	private ControlOutput clearCurrentValue(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x117A6EC", Offset = "0x117A6EC", VA = "0x117A6EC")]
	public ClearUserIntentUnit()
	{
	}
}
[Token(Token = "0x20002D3")]
[UnitCategory("Play Mode")]
[UnitTitle("Quit Challenge On User Intents")]
[TypeIcon(typeof(ToggleValue))]
public class QuitChallengeOnUserIntentsUnit : QuitPlayOnUserIntentsUnit
{
	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x117A6F4", Offset = "0x117A6F4", VA = "0x117A6F4", Slot = "74")]
	protected override void quitPlayMode()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x117A7A0", Offset = "0x117A7A0", VA = "0x117A7A0")]
	public QuitChallengeOnUserIntentsUnit()
	{
	}
}
[Token(Token = "0x20002D4")]
[UnitCategory("Play Mode")]
[UnitTitle("Quit Level On User Intents")]
[TypeIcon(typeof(ToggleValue))]
public class QuitLevelOnUserIntentsUnit : QuitPlayOnUserIntentsUnit
{
	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x117A7B0", Offset = "0x117A7B0", VA = "0x117A7B0", Slot = "74")]
	protected override void quitPlayMode()
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x117A8F0", Offset = "0x117A8F0", VA = "0x117A8F0")]
	public QuitLevelOnUserIntentsUnit()
	{
	}
}
[Token(Token = "0x20002D5")]
public abstract class QuitPlayOnUserIntentsUnit : Unity.VisualScripting.Unit
{
	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[DoNotSerialize]
	public ControlInput InputTrigger;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[DoNotSerialize]
	public ControlOutput OutputTrigger;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[DoNotSerialize]
	public ValueInput UserIntentParameterValue;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[DoNotSerialize]
	public ValueInput UserIntentValues;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[DoNotSerialize]
	public ValueInput PlayStateParameterValue;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected PlayStateParameter _playStateParameter;

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x117A8F8", Offset = "0x117A8F8", VA = "0x117A8F8", Slot = "69")]
	protected override void Definition()
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x117AB40", Offset = "0x117AB40", VA = "0x117AB40")]
	protected ControlOutput tryQuitPlay(Flow flow)
	{
		return null;
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x117AC90", Offset = "0x117AC90", VA = "0x117AC90", Slot = "74")]
	protected virtual void quitPlayMode()
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x117A7A8", Offset = "0x117A7A8", VA = "0x117A7A8")]
	protected QuitPlayOnUserIntentsUnit()
	{
	}
}
[Token(Token = "0x20002D6")]
public class WadlowHauntedGateAnimator : MonoBehaviour
{
	[Token(Token = "0x20002D7")]
	[CompilerGenerated]
	private sealed class <openGateWithDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WadlowHauntedGateAnimator <>4__this;

		[Token(Token = "0x170002ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x117AF8C", Offset = "0x117AF8C", VA = "0x117AF8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x117AFD4", Offset = "0x117AFD4", VA = "0x117AFD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x117AD28", Offset = "0x117AD28", VA = "0x117AD28")]
		[DebuggerHidden]
		public <openGateWithDelay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x117AE58", Offset = "0x117AE58", VA = "0x117AE58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x117AE5C", Offset = "0x117AE5C", VA = "0x117AE5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x117AF94", Offset = "0x117AF94", VA = "0x117AF94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator WadlowHauntedAnimator;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _gateOpenState;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	public UnityEvent OnOpen;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnClose;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _eventTriggerable;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Audio")]
	public rcAudioSource AudioSourceScript;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public rcAudioEvent GateOpenAudioEvent;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public rcAudioEvent GateCloseAudioEvent;

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x117AC94", Offset = "0x117AC94", VA = "0x117AC94")]
	public void OpenGate()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x117ACB4", Offset = "0x117ACB4", VA = "0x117ACB4")]
	[IteratorStateMachine(typeof(<openGateWithDelay>d__9))]
	private IEnumerator openGateWithDelay()
	{
		return null;
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x117AD50", Offset = "0x117AD50", VA = "0x117AD50")]
	public void CloseGate(bool eventTriggerable)
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x117AE18", Offset = "0x117AE18", VA = "0x117AE18")]
	public void OnOpenEvent()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x117AE34", Offset = "0x117AE34", VA = "0x117AE34")]
	public void OnCloseEvent()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x117AE50", Offset = "0x117AE50", VA = "0x117AE50")]
	public WadlowHauntedGateAnimator()
	{
	}
}
[Token(Token = "0x20002D8")]
public class Effet_fluid : MonoBehaviour
{
	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastRot;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 angularVelocity;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxWobble;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WobbleSpeed;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Recovery;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wobbleAmountX;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float wobbleAmountZ;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float wobbleAmountToAddX;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float wobbleAmountToAddZ;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float pulse;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private readonly int PROPERTY_ID_AXIS_X;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly int PROPERTY_ID_AXIS_Z;

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x117AFDC", Offset = "0x117AFDC", VA = "0x117AFDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x117B034", Offset = "0x117B034", VA = "0x117B034")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x117B2A0", Offset = "0x117B2A0", VA = "0x117B2A0")]
	public Effet_fluid()
	{
	}
}
[Token(Token = "0x20002D9")]
public class Interactor : MonoBehaviour
{
	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly int PROP_SHADER_VECT_POS;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int PROP_SHADER_FLOAT_RADIUS;

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x117B340", Offset = "0x117B340", VA = "0x117B340")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x117B390", Offset = "0x117B390", VA = "0x117B390")]
	public Interactor()
	{
	}
}
[Token(Token = "0x20002DA")]
public class SetInteractiveShaderEffects : MonoBehaviour
{
	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly int PROP_SHADER_FLOAT_ORTHCAMSIZE;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly int PROP_SHADER_VECT_POS;

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x117B414", Offset = "0x117B414", VA = "0x117B414")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x117B47C", Offset = "0x117B47C", VA = "0x117B47C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x117B4BC", Offset = "0x117B4BC", VA = "0x117B4BC")]
	public SetInteractiveShaderEffects()
	{
	}
}
[Token(Token = "0x20002DB")]
public class SquashAndStretch : MonoBehaviour
{
	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int SquashID;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int RadiusID;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MaterialPropertyBlock _mpb;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer MeshRenderer;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CollisionRadius;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Spring")]
	public float Strength;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Dampening;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float VelocityStretch;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Debug")]
	public bool Test;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(-2f, 2f)]
	public float Squash;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _squash;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _squashVelocity;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _lastPosition;

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x117B540", Offset = "0x117B540", VA = "0x117B540")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x117B7E4", Offset = "0x117B7E4", VA = "0x117B7E4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x117B824", Offset = "0x117B824", VA = "0x117B824")]
	public SquashAndStretch()
	{
	}
}
[Token(Token = "0x20002DC")]
[RequireComponent(typeof(rcInteractor))]
public class Interactor_Test : MonoBehaviour
{
	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private rcInteractor interactor;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RaycastHit raycastHit;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool startBool;

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x117B8E0", Offset = "0x117B8E0", VA = "0x117B8E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x117B938", Offset = "0x117B938", VA = "0x117B938")]
	private void Update()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x117B9A0", Offset = "0x117B9A0", VA = "0x117B9A0")]
	public Interactor_Test()
	{
	}
}
[Token(Token = "0x20002DD")]
public class MenuBackgroundModeUpdater : MonoBehaviour
{
	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter MenuOnlineMode;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image Background;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite BackgroundSolo;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite BackgroundOnline;

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x117B9A8", Offset = "0x117B9A8", VA = "0x117B9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x117BA48", Offset = "0x117BA48", VA = "0x117BA48")]
	private void UpdateBackground(bool toValue, bool fromValue, object changedBy)
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x117BA80", Offset = "0x117BA80", VA = "0x117BA80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x117BB20", Offset = "0x117BB20", VA = "0x117BB20")]
	public MenuBackgroundModeUpdater()
	{
	}
}
[Token(Token = "0x20002DE")]
[RequireComponent(typeof(RectTransform))]
public class MenuBackgroundRotation : MonoBehaviour
{
	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform rect;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float distanceToCenterH;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float ratioToCenterH;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceToCenterV;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float ratioToCenterV;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float width;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float height;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 defaultLocalRotation;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float angle;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x117BB28", Offset = "0x117BB28", VA = "0x117BB28")]
	private void Start()
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x117BBE4", Offset = "0x117BBE4", VA = "0x117BBE4")]
	public void GetDefaultLocalRotation()
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x117BC10", Offset = "0x117BC10", VA = "0x117BC10")]
	public void DistanceToCenter(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x117BD3C", Offset = "0x117BD3C", VA = "0x117BD3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x117BE54", Offset = "0x117BE54", VA = "0x117BE54")]
	public MenuBackgroundRotation()
	{
	}
}
[Token(Token = "0x20002DF")]
public class MenuFlowFTE : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002E0")]
	public struct InputTipsPopup
	{
		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public XRInputTracker.XRInputSystem InputMode;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MenuPopupWindow[] PopupWindows;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool AlreadySeen;
	}

	[Token(Token = "0x20002E1")]
	[CompilerGenerated]
	private sealed class <tryOpenNextTipsPopupCoroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuFlowFTE <>4__this;

		[Token(Token = "0x170002EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x117D2B0", Offset = "0x117D2B0", VA = "0x117D2B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x117D2F8", Offset = "0x117D2F8", VA = "0x117D2F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x117CBF4", Offset = "0x117CBF4", VA = "0x117CBF4")]
		[DebuggerHidden]
		public <tryOpenNextTipsPopupCoroutine>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x117D0B4", Offset = "0x117D0B4", VA = "0x117D0B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x117D0B8", Offset = "0x117D0B8", VA = "0x117D0B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x117D2B8", Offset = "0x117D2B8", VA = "0x117D2B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E2")]
	[CompilerGenerated]
	private sealed class <openNextTutorialLevelCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuFlowFTE <>4__this;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelSettings tutorialLevel;

		[Token(Token = "0x170002F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x117D630", Offset = "0x117D630", VA = "0x117D630", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x117D678", Offset = "0x117D678", VA = "0x117D678", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x117CF14", Offset = "0x117CF14", VA = "0x117CF14")]
		[DebuggerHidden]
		public <openNextTutorialLevelCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x117D300", Offset = "0x117D300", VA = "0x117D300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x117D304", Offset = "0x117D304", VA = "0x117D304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x117D638", Offset = "0x117D638", VA = "0x117D638", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent _onFTEStarted;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _onFteFlowCompleted;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Input Choice")]
	[SerializeField]
	private MenuPopupWindow _inputChoicePopup;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Input Tips")]
	[SerializeField]
	private InputTipsPopup[] _inputTipsPopups;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcLocalizedText _localizedOkButton;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Tutorial Levels")]
	private MenuPopupTutorialLevel _tutorialLevelPopup;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NetworkedPlayManagerReference _playManagerReference;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcGameEventResponse _tutoLevelEndAnimationDoneEvent;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[Header("Tutorial Completed")]
	private rcLocalizedText _tutoCompletedLocalizedTitle;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private rcLocalizedText _tutoCompletedLocalizedMessage;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UnityEvent _inputChosenEvent;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MenuPopupWindow[] _currentPopups;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _currentTipsIndex;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TutorialManager _tutorialManager;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UnityAction _onInputChosen;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UnityAction _onTutoCompleted;

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x117BE68", Offset = "0x117BE68", VA = "0x117BE68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x117BF44", Offset = "0x117BF44", VA = "0x117BF44")]
	public void StartFTEFlow(bool skipInputChoice = false, [Optional] UnityAction onInputChosen, [Optional] UnityAction onTutoCompleted)
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x117C2B8", Offset = "0x117C2B8", VA = "0x117C2B8")]
	private void onInputChoicePopupStateUpdated(bool enabled)
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x117C6A0", Offset = "0x117C6A0", VA = "0x117C6A0")]
	private void openInputModeTipsPopups(XRInputTracker.XRInputSystem inputMode)
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x117CB58", Offset = "0x117CB58", VA = "0x117CB58")]
	private void tryOpenNextTipsPopup(bool ok)
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x117CB80", Offset = "0x117CB80", VA = "0x117CB80")]
	[IteratorStateMachine(typeof(<tryOpenNextTipsPopupCoroutine>d__23))]
	private IEnumerator tryOpenNextTipsPopupCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x117C870", Offset = "0x117C870", VA = "0x117C870")]
	private void startTutorial(XRInputTracker.XRInputSystem inputMode)
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x117CE3C", Offset = "0x117CE3C", VA = "0x117CE3C")]
	private void onTutorialLevelPopupStateUpdated(bool enabled)
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x117CE84", Offset = "0x117CE84", VA = "0x117CE84")]
	[IteratorStateMachine(typeof(<openNextTutorialLevelCoroutine>d__26))]
	private IEnumerator openNextTutorialLevelCoroutine(LevelSettings tutorialLevel)
	{
		return null;
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x117CF3C", Offset = "0x117CF3C", VA = "0x117CF3C")]
	private void onFteCompletedPopupValidated(bool validated)
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x117CF54", Offset = "0x117CF54", VA = "0x117CF54")]
	public MenuFlowFTE()
	{
	}
}
[Token(Token = "0x20002E3")]
public class MenuPopupInputChoice : MenuPopupWindow
{
	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private XRInputTracker _inputTracker;

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x117D680", Offset = "0x117D680", VA = "0x117D680")]
	public void WaitForControllers()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x117D914", Offset = "0x117D914", VA = "0x117D914")]
	public void WaitForHands()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x117DAAC", Offset = "0x117DAAC", VA = "0x117DAAC")]
	public void RefreshDescription(rcLocalizedText localizedDescription)
	{
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x117D818", Offset = "0x117D818", VA = "0x117D818")]
	private void invokeInputChosenEvent()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x117DB90", Offset = "0x117DB90", VA = "0x117DB90")]
	public MenuPopupInputChoice()
	{
	}
}
[Token(Token = "0x20002E4")]
public class MenuPopupTutorialLevel : MenuPopupWindow
{
	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Tutorial Display Settings")]
	[SerializeField]
	private TextMeshProUGUI _gameModeTextMesh;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private TextMeshProUGUI _tutorialLevelTitleTextMesh;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private TextMeshProUGUI _tutorialRuleTextMesh;

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x117CC1C", Offset = "0x117CC1C", VA = "0x117CC1C")]
	public void SetupLevelDisplay(LevelSettings levelSettings)
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x117DBA0", Offset = "0x117DBA0", VA = "0x117DBA0")]
	public MenuPopupTutorialLevel()
	{
	}
}
[Token(Token = "0x20002E5")]
public class MenuPopupWindow : MonoBehaviour
{
	[Token(Token = "0x20002E6")]
	[CompilerGenerated]
	private sealed class <closePopupOnTimerCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuPopupWindow <>4__this;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x170002F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x117EB84", Offset = "0x117EB84", VA = "0x117EB84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x117EBCC", Offset = "0x117EBCC", VA = "0x117EBCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x117E8C0", Offset = "0x117E8C0", VA = "0x117E8C0")]
		[DebuggerHidden]
		public <closePopupOnTimerCoroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x117E9F8", Offset = "0x117E9F8", VA = "0x117E9F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x117E9FC", Offset = "0x117E9FC", VA = "0x117E9FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x117EB8C", Offset = "0x117EB8C", VA = "0x117EB8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform rect;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Message part of the popup")]
	protected TextMeshProUGUI _popupTitle;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected TextMeshProUGUI _popupMessage;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Image _popUpTypeIcone;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite _popUpTypeIconeInfos;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite _popUpTypeIconeError;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Image _popUpTypeBackground;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite _popUpTypeBackgroundError;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Sprite _popUpTypeBackgroundInfos;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _popUpTimer;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image _popUpTimerJauge;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Event part of the popup")]
	[SerializeField]
	private rcInteractable _buttonOk;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI _textOk;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcInteractable _buttonCancel;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI _textCancel;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private rcInteractable _buttonOkAction;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI _textOkAction;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private rcInteractable _buttonCancelAction;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshProUGUI _textCancelAction;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float _quitTime;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private UnityEvent<bool> _onPopupStateUpdated;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected UnityEvent _okEvent;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected UnityEvent _cancelEvent;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected UnityAction<bool> _okAction;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected UnityAction<bool> _cancelAction;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine _delayedCloseCoroutine;

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x117DBA8", Offset = "0x117DBA8", VA = "0x117DBA8")]
	public void SubscribeToStateUpdates(UnityAction<bool> callback)
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x117DC00", Offset = "0x117DC00", VA = "0x117DC00")]
	public void UnsubscribeFromStateUpdates(UnityAction<bool> callback)
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x117DC58", Offset = "0x117DC58", VA = "0x117DC58")]
	public void ShowPopup(Menu_PopupManager popupManager, [Optional] string title, [Optional] string message, [Optional] Sprite sprite, [Optional] string okButton, [Optional] UnityEvent okEvent, [Optional] string okActionButton, [Optional] UnityAction<bool> okAction, [Optional] string cancelButton, [Optional] UnityEvent cancelEvent, [Optional] string cancelActionButton, [Optional] UnityAction<bool> cancelAction, float timeClose = -1f, Menu_PopupManager.PopupType type = Menu_PopupManager.PopupType.INFOS)
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x117E0C0", Offset = "0x117E0C0", VA = "0x117E0C0")]
	private void setupPopupContents(Menu_PopupManager popupManager, [Optional] string title, [Optional] string message, [Optional] string okButton, [Optional] UnityEvent okEvent, [Optional] string okActionButton, [Optional] UnityAction<bool> okAction, [Optional] string cancelButton, [Optional] UnityEvent cancelEvent, [Optional] string cancelActionButton, [Optional] UnityAction<bool> cancelAction, float timeClose = -1f, Menu_PopupManager.PopupType type = Menu_PopupManager.PopupType.INFOS)
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x117E84C", Offset = "0x117E84C", VA = "0x117E84C")]
	[IteratorStateMachine(typeof(<closePopupOnTimerCoroutine>d__31))]
	private IEnumerator closePopupOnTimerCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x117DE80", Offset = "0x117DE80", VA = "0x117DE80")]
	public void HidePopup()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x117E8E8", Offset = "0x117E8E8", VA = "0x117E8E8")]
	public void ButtonOK()
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x117E904", Offset = "0x117E904", VA = "0x117E904")]
	public void ButtonCancel()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x117E928", Offset = "0x117E928", VA = "0x117E928")]
	public void ButtonAction(bool stay)
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x117E990", Offset = "0x117E990", VA = "0x117E990")]
	public void ButtonCancelAction(bool stay)
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x117DB98", Offset = "0x117DB98", VA = "0x117DB98")]
	public MenuPopupWindow()
	{
	}
}
[Token(Token = "0x20002E7")]
public class MenuPopupWindowMultiDisplays : MenuPopupWindow
{
	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<TextMeshProUGUI> _popupMessages;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Image> _popupImages;

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x117EBD4", Offset = "0x117EBD4", VA = "0x117EBD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x117EBFC", Offset = "0x117EBFC", VA = "0x117EBFC")]
	public void SetPopupMessages(string[] popupMessages)
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x117F15C", Offset = "0x117F15C", VA = "0x117F15C")]
	public void SetPopupImages(Sprite[] popupSprites)
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x117F6B4", Offset = "0x117F6B4", VA = "0x117F6B4")]
	public MenuPopupWindowMultiDisplays()
	{
	}
}
[Token(Token = "0x20002E8")]
public class Menu_PopupManager : rcSingleton<Menu_PopupManager>
{
	[Token(Token = "0x20002E9")]
	public enum PopupCloseEventType
	{
		[Token(Token = "0x4001040")]
		DEFAULT,
		[Token(Token = "0x4001041")]
		SELECT,
		[Token(Token = "0x4001042")]
		BACK
	}

	[Token(Token = "0x20002EA")]
	public enum PopupType
	{
		[Token(Token = "0x4001044")]
		INFOS,
		[Token(Token = "0x4001045")]
		ERROR
	}

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityAction<bool> OnCurrentPopupUpdate;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MenuPopupWindow _genericPopup;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MenuPopupWindowMultiDisplays _multiDisplaysPopup;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityAction<bool> _popupModeChangeEvent;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MenuPopupWindow _currentPopup;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool UserWantToQuit;

	[Token(Token = "0x170002F5")]
	public MenuPopupWindow CurrentPopup
	{
		[Token(Token = "0x600143B")]
		[Address(RVA = "0x117F6BC", Offset = "0x117F6BC", VA = "0x117F6BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600143C")]
		[Address(RVA = "0x117F6C4", Offset = "0x117F6C4", VA = "0x117F6C4")]
		private set
		{
		}
	}

	[Token(Token = "0x170002F6")]
	public bool IsCurrentPopup
	{
		[Token(Token = "0x600143D")]
		[Address(RVA = "0x117F764", Offset = "0x117F764", VA = "0x117F764")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x117F7F8", Offset = "0x117F7F8", VA = "0x117F7F8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x1176FB4", Offset = "0x1176FB4", VA = "0x1176FB4")]
	public void SubscribeToPopupModeUpdate(UnityAction<bool> callback)
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x1177178", Offset = "0x1177178", VA = "0x1177178")]
	public void UnsubscribeFromPopupModeUpdate(UnityAction<bool> callback)
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x117705C", Offset = "0x117705C", VA = "0x117705C")]
	public void ShowGenericPopup([Optional] string title, [Optional] string message, [Optional] Sprite sprite, [Optional] string okButton, [Optional] UnityEvent okEvent, [Optional] string okActionButton, [Optional] UnityAction<bool> okAction, [Optional] string cancelButton, [Optional] UnityEvent cancelEvent, [Optional] string cancelActionButton, [Optional] UnityAction<bool> cancelAction, float timeClose = -1f, PopupType type = PopupType.INFOS)
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x117C520", Offset = "0x117C520", VA = "0x117C520")]
	public void ShowPopup(MenuPopupWindow popupWindow, [Optional] string title, [Optional] string message, [Optional] Sprite sprite, [Optional] string okButton, [Optional] UnityEvent okEvent, [Optional] string okActionButton, [Optional] UnityAction<bool> okAction, [Optional] string cancelButton, [Optional] UnityEvent cancelEvent, [Optional] string cancelActionButton, [Optional] UnityAction<bool> cancelAction, float timeClose = -1f, PopupType type = PopupType.INFOS)
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x117F8D8", Offset = "0x117F8D8", VA = "0x117F8D8")]
	public void HidePopup()
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x117F9CC", Offset = "0x117F9CC", VA = "0x117F9CC")]
	private void onPopupStateUpdated(bool enabled)
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x117E900", Offset = "0x117E900", VA = "0x117E900")]
	public void ButtonOK()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x117E920", Offset = "0x117E920", VA = "0x117E920")]
	public void ButtonCancel()
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x117E980", Offset = "0x117E980", VA = "0x117E980")]
	public void ButtonAction(bool stay)
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x117E9E8", Offset = "0x117E9E8", VA = "0x117E9E8")]
	public void ButtonCancelAction(bool stay)
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x117FA6C", Offset = "0x117FA6C", VA = "0x117FA6C")]
	public void ClosePopupByEvent(PopupCloseEventType closeEventType)
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x117FAC0", Offset = "0x117FAC0", VA = "0x117FAC0")]
	public Menu_PopupManager()
	{
	}
}
[Token(Token = "0x20002EB")]
public class Menu_Popup_GreyScaleMenu : MonoBehaviour
{
	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> ImageToToggle;

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x117FBA4", Offset = "0x117FBA4", VA = "0x117FBA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x117FC64", Offset = "0x117FC64", VA = "0x117FC64")]
	private void ChangeMenuGreyScale(bool mod)
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x117FD5C", Offset = "0x117FD5C", VA = "0x117FD5C")]
	public Menu_Popup_GreyScaleMenu()
	{
	}
}
[Token(Token = "0x20002EC")]
public class Menu_ChangeHeightPanel : MonoBehaviour
{
	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcFloatGameParameter _anchorOffsetParameter;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Transform> panels;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 ObjectYTransformLimit;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> panelPositions;

	[Token(Token = "0x400104B")]
	private const float TOE2NECK_OFFSET = 1.45f;

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x117FE30", Offset = "0x117FE30", VA = "0x117FE30")]
	private void Start()
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x1180088", Offset = "0x1180088", VA = "0x1180088")]
	private void SetOffset(float toValue, float fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x11801D8", Offset = "0x11801D8", VA = "0x11801D8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x1180278", Offset = "0x1180278", VA = "0x1180278")]
	public Menu_ChangeHeightPanel()
	{
	}
}
[Token(Token = "0x20002ED")]
[RequireComponent(typeof(rcInteractable))]
public class Menu_ContextualInfos : MonoBehaviour
{
	[Token(Token = "0x20002EE")]
	[CompilerGenerated]
	private sealed class <fadeOnHover>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu_ContextualInfos <>4__this;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x170002F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600145E")]
			[Address(RVA = "0x1180B68", Offset = "0x1180B68", VA = "0x1180B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001460")]
			[Address(RVA = "0x1180BB0", Offset = "0x1180BB0", VA = "0x1180BB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x11806A0", Offset = "0x11806A0", VA = "0x11806A0")]
		[DebuggerHidden]
		public <fadeOnHover>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x118088C", Offset = "0x118088C", VA = "0x118088C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x1180890", Offset = "0x1180890", VA = "0x1180890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x1180B70", Offset = "0x1180B70", VA = "0x1180B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[CompilerGenerated]
	private sealed class <fadeOnHoverExit>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu_ContextualInfos <>4__this;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <hoverCurrentLocalScale>5__2;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x1180FAC", Offset = "0x1180FAC", VA = "0x1180FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x1180FF4", Offset = "0x1180FF4", VA = "0x1180FF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x11806C8", Offset = "0x11806C8", VA = "0x11806C8")]
		[DebuggerHidden]
		public <fadeOnHoverExit>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x1180BB8", Offset = "0x1180BB8", VA = "0x1180BB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1180BBC", Offset = "0x1180BBC", VA = "0x1180BBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x1180FB4", Offset = "0x1180FB4", VA = "0x1180FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private rcInteractable _interactable;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject contextualInfos;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _delay;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _fadeOnHover;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine _fadeOnHoverExit;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool FadeImage;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool FadeScaleImage;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image HoverImage;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool FadeText;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[SerializeField]
	private bool FadeScaleText;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI HoverText;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _hoverImageStartColor;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color _hoverImageEndColor;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color _hoverTextStartColor;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color _hoverTextEndColor;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Vector3 HoverStartLocalScale;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private Vector3 HoverEndLocalScale;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float _fadeInSpeed;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private float _fadeOutSpeed;

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x118030C", Offset = "0x118030C", VA = "0x118030C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x11804C0", Offset = "0x11804C0", VA = "0x11804C0")]
	private void OnHover()
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x11805B0", Offset = "0x11805B0", VA = "0x11805B0")]
	private void OnHoverExit()
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x118053C", Offset = "0x118053C", VA = "0x118053C")]
	[IteratorStateMachine(typeof(<fadeOnHover>d__22))]
	private IEnumerator fadeOnHover()
	{
		return null;
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x118062C", Offset = "0x118062C", VA = "0x118062C")]
	[IteratorStateMachine(typeof(<fadeOnHoverExit>d__23))]
	private IEnumerator fadeOnHoverExit()
	{
		return null;
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x11806F0", Offset = "0x11806F0", VA = "0x11806F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x1180828", Offset = "0x1180828", VA = "0x1180828")]
	public Menu_ContextualInfos()
	{
	}
}
[Token(Token = "0x20002F0")]
[RequireComponent(typeof(RectTransform))]
[RequireComponent(typeof(Canvas))]
public class Menu_FeedbackEffect : MonoBehaviour
{
	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rotationAngle;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 rotation;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion initialRotation;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] corners;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float x;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float y;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x1180FFC", Offset = "0x1180FFC", VA = "0x1180FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x11811A4", Offset = "0x11811A4", VA = "0x11811A4")]
	public void OnPointing(Vector3 position)
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x1181254", Offset = "0x1181254", VA = "0x1181254")]
	public void OffPointing()
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x1181280", Offset = "0x1181280", VA = "0x1181280")]
	public Menu_FeedbackEffect()
	{
	}
}
[Token(Token = "0x20002F1")]
public class Menu_HapticManager : rcSingleton<Menu_HapticManager>
{
	[Token(Token = "0x20002F2")]
	[CompilerGenerated]
	private sealed class <DoHaptic>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu_HapticManager <>4__this;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public rcXRInputs.Feature f;

		[Token(Token = "0x170002FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x1181988", Offset = "0x1181988", VA = "0x1181988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0x11819D0", Offset = "0x11819D0", VA = "0x11819D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x11817A8", Offset = "0x11817A8", VA = "0x11817A8")]
		[DebuggerHidden]
		public <DoHaptic>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1181894", Offset = "0x1181894", VA = "0x1181894", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1181898", Offset = "0x1181898", VA = "0x1181898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x1181990", Offset = "0x1181990", VA = "0x1181990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private rcXRInputs _inputs;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine[] hapticCBs;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool IwantToVibrate;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _hFreq;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _hDelay;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _hMinAmp;

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x1181290", Offset = "0x1181290", VA = "0x1181290")]
	public void init()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x1181484", Offset = "0x1181484", VA = "0x1181484", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x1181654", Offset = "0x1181654", VA = "0x1181654")]
	private void onControllerRightTrackingChange(bool tracking)
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x11816BC", Offset = "0x11816BC", VA = "0x11816BC")]
	private void onControllerTrackingChange(bool tracking)
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x1181724", Offset = "0x1181724", VA = "0x1181724")]
	[IteratorStateMachine(typeof(<DoHaptic>d__10))]
	public IEnumerator DoHaptic(rcXRInputs.Feature f)
	{
		return null;
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x11817D0", Offset = "0x11817D0", VA = "0x11817D0")]
	public Menu_HapticManager()
	{
	}
}
[Token(Token = "0x20002F3")]
[RequireComponent(typeof(rcInteractable))]
public class Menu_Interaction : MonoBehaviour
{
	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color _originalColor;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image image;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private rcInteractable interactable;

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x11819D8", Offset = "0x11819D8", VA = "0x11819D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x1181C70", Offset = "0x1181C70", VA = "0x1181C70")]
	public void OnTrigger()
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x1181D00", Offset = "0x1181D00", VA = "0x1181D00")]
	public void OnHover()
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x1181DA0", Offset = "0x1181DA0", VA = "0x1181DA0")]
	public void OnHoverExit()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x1181E30", Offset = "0x1181E30", VA = "0x1181E30")]
	public void OnStartScroll()
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x1181F20", Offset = "0x1181F20", VA = "0x1181F20")]
	public void OnEndScroll()
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x1182008", Offset = "0x1182008", VA = "0x1182008")]
	public Menu_Interaction()
	{
	}
}
[Token(Token = "0x20002F4")]
[RequireComponent(typeof(rcInteractable))]
public class Menu_Interaction_SpriteChange : MonoBehaviour
{
	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _resetOnDisable;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Header("Sprites")]
	[Tooltip("Boolean, if you want to change the sprite when you click on the button. (True by default)")]
	[SerializeField]
	private bool changeSprite;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Tooltip("Image, the object with the image you want to change. (This GameObject by default)")]
	private Image imageToChange;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Sprite, the sprite when the object is Idle. (The sprite attached to this GameObject by default)")]
	[SerializeField]
	private Sprite idle;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Sprite, the sprite when the object is Selected. (The sprite attached to this GameObject by default)")]
	[SerializeField]
	private Sprite select;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Sprite, the sprite when the object is Hover. (The sprite attached to this GameObject by default)")]
	[SerializeField]
	private Sprite hover;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Sprite, the sprite to use when object is hovered while being in selected state")]
	[SerializeField]
	private Sprite selectedHover;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Interactions with others GameObjects")]
	[Tooltip("Boolean, if you want to select this GameObject at the start of the scene. (False by default)")]
	public bool isSelected;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool canBeSelected;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	[Tooltip("Boolean, if this gameObject or one of its list must be selected at all time. (False by default)")]
	private bool oneMustBeSelected;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("List<Menu_Interaction_SpriteChange>, Trigger this object will affect the objects in the list, null by default")]
	public List<Menu_Interaction_SpriteChange> list;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Change position when Hover")]
	[Tooltip("GameObject, the object you want to move. (This GameObject by default)")]
	[SerializeField]
	private GameObject visualInteractable;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Tooltip("Boolean, change the position when the object is Hover ? (False by default)")]
	private bool changePositionHover;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Float, how much you want to change the position of the object. Positive to advance the object.(0.1 by default)")]
	[SerializeField]
	private float changePositionOffset;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool positionChanged;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[Header("Change font when Selected")]
	[Tooltip("Boolean, if you want to change the font of a text when selected. (False by default)")]
	[SerializeField]
	private bool changeFontText;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Tooltip("TextMeshProUGUI, the text you want to change. (Null by default)")]
	private TextMeshProUGUI textToChange;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[Tooltip("TMP_FontAsset, the font when the text is Idle. (The font of the given text by default)")]
	private FontType _idleFont;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Tooltip("TMP_FontAsset, the font when the text is Hovered. (The font of the given text by default)")]
	[SerializeField]
	private FontType _hoverFont;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("TMP_FontAsset, the font when the text is Selected. (The font of the given text by default)")]
	[SerializeField]
	private FontType _selectedFont;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("Color, the color of the font when the text is Idle. (The color of the given text by default)")]
	[SerializeField]
	private Color idleColor;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	[Tooltip("Color, the color of the font when the text is Hovered. (The color of the given text by default)")]
	private Color hoverColor;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	[Tooltip("Color, the color of the font when the text is Selected. (The color of the given text by default)")]
	private Color selectedColor;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[Tooltip("float, the size of the font when the text is Idle. (The size of the given text by default)")]
	[SerializeField]
	private float idleSize;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Tooltip("float, the size of the font when the text is Hovered. (The size of the given text by default)")]
	[SerializeField]
	private float hoverSize;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	[Tooltip("float, the size of the font when the text is Selected. (The size of the given text by default)")]
	private float selectedSize;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Audio feedback")]
	[SerializeField]
	private bool useClickAudio;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	[SerializeField]
	private bool useBackAudio;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	[SerializeField]
	private bool useHoverAudio;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	[SerializeField]
	private bool useOtherAudio;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool audioHoverPlayed;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	[Header("Haptic feedback")]
	[SerializeField]
	private bool doHaptic;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private rcInteractable _interactable;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private LocalizedFontManager _localizedFontManager;

	[Token(Token = "0x600147E")]
	[Address(RVA = "0x1182010", Offset = "0x1182010", VA = "0x1182010")]
	private void Awake()
	{
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0x118248C", Offset = "0x118248C", VA = "0x118248C")]
	public void ForceOnTrigger()
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x1182490", Offset = "0x1182490", VA = "0x1182490")]
	private void onTrigger()
	{
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x11828B8", Offset = "0x11828B8", VA = "0x11828B8")]
	private void onHover()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x1182AB4", Offset = "0x1182AB4", VA = "0x1182AB4")]
	private void onHoverExit()
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x1182C58", Offset = "0x1182C58", VA = "0x1182C58")]
	public void SetSprite(bool state)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x1182CAC", Offset = "0x1182CAC", VA = "0x1182CAC")]
	private void setSpriteIdle()
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x1182C88", Offset = "0x1182C88", VA = "0x1182C88")]
	private void setSpriteSelected()
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x118280C", Offset = "0x118280C", VA = "0x118280C")]
	public void OtherIsChanged()
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x1182CD0", Offset = "0x1182CD0", VA = "0x1182CD0")]
	public void DisableChangeFontText()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x1182CD8", Offset = "0x1182CD8", VA = "0x1182CD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0x1182DF8", Offset = "0x1182DF8", VA = "0x1182DF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x1182E0C", Offset = "0x1182E0C", VA = "0x1182E0C")]
	public Menu_Interaction_SpriteChange()
	{
	}
}
[Token(Token = "0x20002F5")]
public class Menu_Leaderboards : rcSingleton<Menu_Leaderboards>
{
	[Token(Token = "0x20002F6")]
	[CompilerGenerated]
	private sealed class <loadingAnimation>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu_Leaderboards <>4__this;

		[Token(Token = "0x170002FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x1185350", Offset = "0x1185350", VA = "0x1185350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0x1185398", Offset = "0x1185398", VA = "0x1185398", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x11851FC", Offset = "0x11851FC", VA = "0x11851FC")]
		[DebuggerHidden]
		public <loadingAnimation>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x11852D4", Offset = "0x11852D4", VA = "0x11852D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x11852D8", Offset = "0x11852D8", VA = "0x11852D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1185358", Offset = "0x1185358", VA = "0x1185358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcStringGameParameter _userIdParameter;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<TextMeshProUGUI> rankNamesText;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<TextMeshProUGUI> scoresText;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Space(15f)]
	private GameObject loading;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject table;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject error;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject separator;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject NoTopPlayerInfos;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private FontType IdleFontType;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private FontType HilightFontType;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Leaderboard _leaderboard;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OnlineLeaderboardInterface _onlineLeaderboardInterface;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _username;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _onlineUsername;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Guid _currentTopRequest;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Guid _currentUserRequest;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Guid _currentPlayerRequest;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _allLeaderboardReceived;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine _loadingAnimationCoroutine;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LocalizedFontManager _fontManager;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TMP_FontAsset _idleFont;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TMP_FontAsset _highlightFont;

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x1183EB4", Offset = "0x1183EB4", VA = "0x1183EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x1184190", Offset = "0x1184190", VA = "0x1184190")]
	private void userIdUpdated(string toValue, string fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x1184270", Offset = "0x1184270", VA = "0x1184270")]
	public void ShowLeaderboard(LevelSettings level)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x1184480", Offset = "0x1184480", VA = "0x1184480")]
	public void ShowLeaderboard(ChallengePreset challenge)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x1184120", Offset = "0x1184120", VA = "0x1184120")]
	public void HideLeaderboard()
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x11845FC", Offset = "0x11845FC", VA = "0x11845FC")]
	private void onPlayerEntryReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x1184B08", Offset = "0x1184B08", VA = "0x1184B08")]
	private void onTopEntriesReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x1184E80", Offset = "0x1184E80", VA = "0x1184E80")]
	private void onPlayerCenteredEntriesReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x1184930", Offset = "0x1184930", VA = "0x1184930")]
	private void UpdateFontType(int rank)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x1184E24", Offset = "0x1184E24", VA = "0x1184E24")]
	private void onAllLeaderboardReceived()
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x11843EC", Offset = "0x11843EC", VA = "0x11843EC")]
	private void startLoadingAnimation()
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x1184AA8", Offset = "0x1184AA8", VA = "0x1184AA8")]
	private void resetLoadingAnimation()
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x1185188", Offset = "0x1185188", VA = "0x1185188")]
	[IteratorStateMachine(typeof(<loadingAnimation>d__34))]
	private IEnumerator loadingAnimation()
	{
		return null;
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x1185224", Offset = "0x1185224", VA = "0x1185224")]
	public Menu_Leaderboards()
	{
	}
}
[Token(Token = "0x20002F7")]
public class Menu_LoadingIcone : MonoBehaviour
{
	[Token(Token = "0x20002F8")]
	[CompilerGenerated]
	private sealed class <SearchingObjectAnimation>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu_LoadingIcone <>4__this;

		[Token(Token = "0x170002FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x11854F4", Offset = "0x11854F4", VA = "0x11854F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0x118553C", Offset = "0x118553C", VA = "0x118553C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x118543C", Offset = "0x118543C", VA = "0x118543C")]
		[DebuggerHidden]
		public <SearchingObjectAnimation>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1185474", Offset = "0x1185474", VA = "0x1185474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1185478", Offset = "0x1185478", VA = "0x1185478", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x11854FC", Offset = "0x11854FC", VA = "0x11854FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _loadingObjectZAngularSpeed;

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0x11853A0", Offset = "0x11853A0", VA = "0x11853A0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x1185434", Offset = "0x1185434", VA = "0x1185434")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x11853C0", Offset = "0x11853C0", VA = "0x11853C0")]
	[IteratorStateMachine(typeof(<SearchingObjectAnimation>d__3))]
	private IEnumerator SearchingObjectAnimation()
	{
		return null;
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x1185464", Offset = "0x1185464", VA = "0x1185464")]
	public Menu_LoadingIcone()
	{
	}
}
[Token(Token = "0x20002F9")]
public class Menu_Manager : rcSingleton<Menu_Manager>
{
	[Token(Token = "0x20002FA")]
	public enum VSManager
	{
		[Token(Token = "0x40010EC")]
		Main,
		[Token(Token = "0x40010ED")]
		Online1v1,
		[Token(Token = "0x40010EE")]
		PartyRoom
	}

	[Token(Token = "0x20002FB")]
	[CompilerGenerated]
	private sealed class <FadeOutTransition>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isInMultiplayerRoom;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Menu_Manager <>4__this;

		[Token(Token = "0x17000302")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x1188340", Offset = "0x1188340", VA = "0x1188340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x1188388", Offset = "0x1188388", VA = "0x1188388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1186918", Offset = "0x1186918", VA = "0x1186918")]
		[DebuggerHidden]
		public <FadeOutTransition>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x11880D0", Offset = "0x11880D0", VA = "0x11880D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x11880D4", Offset = "0x11880D4", VA = "0x11880D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1188348", Offset = "0x1188348", VA = "0x1188348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("GameObject, the object containing the State Machine. (Null by default)")]
	[SerializeField]
	[Header("Visual scripting")]
	private GameObject visualScriptingManager;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("GameObject, the object containing the 1v1 State Machine. (Null by default)")]
	[SerializeField]
	private GameObject visualScriptingManagerScreen1v1;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Tooltip("GameObject, the object containing the Party Room State Machine. (Null by default)")]
	private GameObject visualScriptingManagerScreenPartyRoom;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelsManager _levelManager;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PassthroughConfigManager _passthroughConfigManager;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CanvasFadeOut _fadeOut;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color opaqueFadeColor;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color transparentFadeColor;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Transform, the cursor displayed in the menu panels. (Null by default)")]
	[SerializeField]
	[Header("Laser pointer")]
	private Canvas cursor;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("LineRenderer, the renderer of the pointing laser. (Null by default)")]
	[SerializeField]
	private LineRenderer laser;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float _distanceFromHand;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float _distanceFromHitPoint;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Avatar")]
	public Texture2D thumbnailTexture;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private List<RawImage> thumbnailList;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SO_PlayerAvatar SO_playerAvatar;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GBAPlayerSystem playerAvatar;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AvatarLoader avatarLoader;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public bool wantAvatarChange;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[Header("Multiplayer")]
	public int MultiplayerChallengeIndex;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public bool onMultiplayerMode;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public rcBoolGameParameter MenuOnlineMode;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public rcBoolGameParameter IsInMultiplayerRoomParameter;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public rcBoolGameParameter IsForcingSearchingState;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool isInMatch;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[Header("Audio")]
	private rcAudioSource buttonClickAudioSource;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private rcAudioEvent buttonClickAudioEvent;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private rcAudioSource buttonLittleAudioSource;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private rcAudioEvent buttonLittleAudioEvent;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private rcAudioSource buttonCancelAudioSource;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private rcAudioEvent buttonCancelAudioEvent;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private rcAudioSource buttonHoverAudioSource;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private rcAudioEvent buttonHoverAudioEvent;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private rcAudioSource buttonPlayAudioSource;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private rcAudioEvent buttonPlayAudioEvent;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public LevelSettings level;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public ChallengePreset challenge;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public bool mrCapture;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Space]
	public rcLanguageGameParameter language;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool haptic;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[HideInInspector]
	public UnityEvent OffPointingMenu;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	[Header("Quit PopUp")]
	private rcLocalizedText PopUpQuitTitle;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private rcLocalizedText PopUpYes;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private rcLocalizedText PopUpNo;

	[Token(Token = "0x17000301")]
	public bool PendingBackgroundMatch
	{
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1185544", Offset = "0x1185544", VA = "0x1185544")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x118554C", Offset = "0x118554C", VA = "0x118554C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x1185558", Offset = "0x1185558", VA = "0x1185558")]
	private void Start()
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x1185C48", Offset = "0x1185C48", VA = "0x1185C48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x1185FFC", Offset = "0x1185FFC", VA = "0x1185FFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x1185E24", Offset = "0x1185E24", VA = "0x1185E24")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x11863C0", Offset = "0x11863C0", VA = "0x11863C0")]
	public void TransitionToMultiplayerScene()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x11865B4", Offset = "0x11865B4", VA = "0x11865B4")]
	public void TransitionToSoloScene()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x118667C", Offset = "0x118667C", VA = "0x118667C")]
	public void WaitForEndFadeOut()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x1186790", Offset = "0x1186790", VA = "0x1186790")]
	private void backgroundMatchmakingTransitionToMulti()
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x1186488", Offset = "0x1186488", VA = "0x1186488")]
	[IteratorStateMachine(typeof(<FadeOutTransition>d__59))]
	private IEnumerator FadeOutTransition(bool isInMultiplayerRoom)
	{
		return null;
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x1186940", Offset = "0x1186940", VA = "0x1186940")]
	public void SetMenuMultiplayerMode(bool mode)
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x1186968", Offset = "0x1186968", VA = "0x1186968")]
	public void CallEvent_Debug(string msg)
	{
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0x1186A34", Offset = "0x1186A34", VA = "0x1186A34")]
	public void CallEvent_Home()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0x1186AD8", Offset = "0x1186AD8", VA = "0x1186AD8")]
	public void CallEvent_Back()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0x1186B7C", Offset = "0x1186B7C", VA = "0x1186B7C")]
	public void CallEvent_Fte()
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0x1186510", Offset = "0x1186510", VA = "0x1186510")]
	public void CallEvent_Selection()
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0x1186C20", Offset = "0x1186C20", VA = "0x1186C20")]
	public void CallEvent_Selection1()
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0x1186CC4", Offset = "0x1186CC4", VA = "0x1186CC4")]
	public void CallEvent_Selection2()
	{
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0x1186D68", Offset = "0x1186D68", VA = "0x1186D68")]
	public void CallEvent_ScrollUp()
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0x1186E0C", Offset = "0x1186E0C", VA = "0x1186E0C")]
	public void CallEvent_ScrollDown()
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0x1186EB0", Offset = "0x1186EB0", VA = "0x1186EB0")]
	public void CallEvent_ScrollUp2()
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x1186F54", Offset = "0x1186F54", VA = "0x1186F54")]
	public void CallEvent_ScrollDown2()
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x1186FF8", Offset = "0x1186FF8", VA = "0x1186FF8")]
	public void CallEvent_ShowLevelInfos(string msg)
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x11870C4", Offset = "0x11870C4", VA = "0x11870C4")]
	public void CallEvent_ShowLevelImage(Sprite img)
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x1187190", Offset = "0x1187190", VA = "0x1187190")]
	public void CallEvent_ShowLevelTitle(string msg)
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x118725C", Offset = "0x118725C", VA = "0x118725C")]
	public void CallEvent_Avatar()
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x1187308", Offset = "0x1187308", VA = "0x1187308")]
	public void CallEvent_BackgroundMatchFound()
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0x1187494", Offset = "0x1187494", VA = "0x1187494")]
	public void CallEvent_LeaveMatch()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x1187538", Offset = "0x1187538", VA = "0x1187538")]
	public void CallEvent_Play()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x1187588", Offset = "0x1187588", VA = "0x1187588")]
	public void CallEvent_QuitLocalLevel()
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0x1187634", Offset = "0x1187634", VA = "0x1187634")]
	public void CallEvent_QuitLevel()
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0x1186854", Offset = "0x1186854", VA = "0x1186854")]
	public void CallEventVS(VSManager vsManager, string eventName)
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x11876E0", Offset = "0x11876E0", VA = "0x11876E0")]
	private GameObject selectVisualScriptingGameObject(VSManager vsManager)
	{
		return null;
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x118770C", Offset = "0x118770C", VA = "0x118770C")]
	public void ResetPendingBackgroundMatch()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x1187714", Offset = "0x1187714", VA = "0x1187714")]
	private void onMatchmakerStateChanged()
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0x11877E8", Offset = "0x11877E8", VA = "0x11877E8")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x1187858", Offset = "0x1187858", VA = "0x1187858")]
	public void SetLaser(RaycastResult hit, Transform t)
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0x1187B54", Offset = "0x1187B54", VA = "0x1187B54")]
	public void DisableLaser()
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x1187B8C", Offset = "0x1187B8C", VA = "0x1187B8C")]
	public void SetLaser(Transform t)
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x1187CA4", Offset = "0x1187CA4", VA = "0x1187CA4")]
	public void PlaySoundHover()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x1187CD8", Offset = "0x1187CD8", VA = "0x1187CD8")]
	public void PlaySoundClick()
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x1187D0C", Offset = "0x1187D0C", VA = "0x1187D0C")]
	public void PlaySoundLittle()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x1187D40", Offset = "0x1187D40", VA = "0x1187D40")]
	public void PlaySoundCancel()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x1187D74", Offset = "0x1187D74", VA = "0x1187D74")]
	public void PlaySoundPlay()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x1187DA8", Offset = "0x1187DA8", VA = "0x1187DA8")]
	public void LoadAvatar(string url)
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x1187DDC", Offset = "0x1187DDC", VA = "0x1187DDC")]
	public void LoadAvatar(int index)
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x1185794", Offset = "0x1185794", VA = "0x1185794")]
	private void SubscribeToAvatarUpdates()
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x1187E10", Offset = "0x1187E10", VA = "0x1187E10")]
	public bool IsAvatarLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x1185AF4", Offset = "0x1185AF4", VA = "0x1185AF4")]
	public void SetThumbnail(Texture2D texture)
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x1187F10", Offset = "0x1187F10", VA = "0x1187F10")]
	public void OnThumbnailLoadError(string error)
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x1187F14", Offset = "0x1187F14", VA = "0x1187F14")]
	public void DoHaptic()
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x1187FF8", Offset = "0x1187FF8", VA = "0x1187FF8")]
	public Menu_Manager()
	{
	}
}
[Token(Token = "0x20002FC")]
public class Menu_MatchmakingManager : rcSingleton<Menu_MatchmakingManager>
{
	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public IMatchmaker Matchmaker;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public OnlineFeaturesManager onlineFeaturesManager;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Output of the multiplayer loading")]
	[Tooltip("TextMeshProUGUI, the text which display the current state of the connection. (No default)")]
	[SerializeField]
	private MenuMatchMakingStateVisualUpdater _matchMakerVisualizerUdpater;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(10f)]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerRef;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OnlineModeGameParameter _onlineMode;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private OnlineMatchFlow _onlineMatchFlow;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private OnlinePartyRoomFlow _onlinePartyRoomFlow;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Menu_Settings _menuSettings;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Background Matchmaking")]
	[SerializeField]
	private rcLocalizedText _backgroundMatchFoundLocalizedTitle;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private rcLocalizedText _backgroundMatchFoundLocalizedMessage;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent _onJoinBackgroundMatch;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Screen Matchmaking")]
	[SerializeField]
	private PlayersScreensReferences _playerScreensReferences;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI _canvasRoundTMP;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshProUGUI _canvasRoundTMPScreenTelevision;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcLocalizedText RoundsTitle;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ScreenChallengeName _challengeNameScreen;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Screen Party Room")]
	[SerializeField]
	private PlayersScreensReferences _partyVictoryScreen;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private PlayersRankingReference _rankingManagerReference;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Space]
	[SerializeField]
	[Header("Audio")]
	private rcAudioEvent _menuMusicAudioEvent;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private rcAudioSource OnlineDefeatSource;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private rcAudioEvent OnlineDefeatEvent;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private rcAudioSource OnlineVictorySource;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private rcAudioEvent OnlineVictoryEvent;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private rcAudioSource OnlinePlayerApparitionSource;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private rcAudioEvent OnlinePlayerApparitionEvent;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private rcAudioSource OnlinePlayerLeftSource;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private rcAudioEvent OnlinePlayerLeftEvent;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private rcAudioSource OnlinePlayerFoundSource;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private rcAudioEvent OnlinePlayerFoundEvent;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private rcAudioSource OnlineSearchSource;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private rcAudioEvent OnlineSearchEvent;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private rcAudioSource OnlinePlaterPresentationSource;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private rcAudioEvent OnlinePlayerPresentationLoopEvent;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private rcAudioEvent OnlinePlayerPresentationEndEvent;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private rcAudioSource OnlineCountdownSource;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private rcAudioEvent OnlineCountdownEvent;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Header("Localization")]
	[SerializeField]
	private rcLocalizedText _connectTimeoutPopupTitle;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private rcLocalizedText _connectTimeoutPopupMessage;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private PlayersManager _playersManager;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private OnlineSelectChallenge _onlineSelectChallenge;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private UnityEvent _backgroundMatchJoinFailed;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool _subscribedToBackgroundMatchUpdates;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UnityAction OnWaitForTicketToBeCancelled;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private CanvasFadeOut _canvasFadeOut;

	[Token(Token = "0x17000304")]
	public OnlineMatchFlow OnlineMatchFlow
	{
		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x1188390", Offset = "0x1188390", VA = "0x1188390")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000305")]
	public OnlinePartyRoomFlow OnlinePartyRoomFlow
	{
		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1188398", Offset = "0x1188398", VA = "0x1188398")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000306")]
	public bool IsUserQuitting
	{
		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x11883A0", Offset = "0x11883A0", VA = "0x11883A0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x11883A8", Offset = "0x11883A8", VA = "0x11883A8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000307")]
	private bool isBackgroundMatchmaking
	{
		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x11883B4", Offset = "0x11883B4", VA = "0x11883B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x118848C", Offset = "0x118848C", VA = "0x118848C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014EB")]
	[Address(RVA = "0x1189B2C", Offset = "0x1189B2C", VA = "0x1189B2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x1189810", Offset = "0x1189810", VA = "0x1189810")]
	private void initializePlayerManager()
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x1189930", Offset = "0x1189930", VA = "0x1189930")]
	private void initializeOnlineSelectChallenge()
	{
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x11891A0", Offset = "0x11891A0", VA = "0x11891A0")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x118AAAC", Offset = "0x118AAAC", VA = "0x118AAAC")]
	private void onJoinedGame()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x118AF24", Offset = "0x118AF24", VA = "0x118AF24")]
	private void onPlayerLeaveGame()
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0x118B114", Offset = "0x118B114", VA = "0x118B114")]
	private void onStartSearch()
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0x118B138", Offset = "0x118B138", VA = "0x118B138")]
	private void onMatchFound()
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x118ABD8", Offset = "0x118ABD8", VA = "0x118ABD8")]
	private void initializeMatchmakingData()
	{
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0x118B198", Offset = "0x118B198", VA = "0x118B198")]
	private void onStartOnlinePlayersPresentation()
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x118B37C", Offset = "0x118B37C", VA = "0x118B37C")]
	private void onHideChallengeName()
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x118B3B0", Offset = "0x118B3B0", VA = "0x118B3B0")]
	private void onShowRecapScore()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x118B3F0", Offset = "0x118B3F0", VA = "0x118B3F0")]
	private void updatePlayerOnlineScoreDisplay()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x118B20C", Offset = "0x118B20C", VA = "0x118B20C")]
	private void updateChallengeName()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0x118B55C", Offset = "0x118B55C", VA = "0x118B55C")]
	private void updateRoundNumberDisplay(int nbRound)
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0x118B350", Offset = "0x118B350", VA = "0x118B350")]
	private void enableRoundNumberOnTelevision()
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x118B648", Offset = "0x118B648", VA = "0x118B648")]
	private void disableRoundNumberOnTelevision()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x118B674", Offset = "0x118B674", VA = "0x118B674")]
	private void onWinnerKnown(uint netId)
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x118BFE4", Offset = "0x118BFE4", VA = "0x118BFE4")]
	private void leavingPodium()
	{
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x11890DC", Offset = "0x11890DC", VA = "0x11890DC")]
	private void hideScoreWinnerSubScreens()
	{
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x118C020", Offset = "0x118C020", VA = "0x118C020")]
	private void setThumbnail(Texture2D texture, int index)
	{
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x118C0BC", Offset = "0x118C0BC", VA = "0x118C0BC")]
	private void updateAvatarThumnails(Texture2D texture)
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x118C234", Offset = "0x118C234", VA = "0x118C234")]
	public void StartMatchmakingSearch()
	{
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0x118CA80", Offset = "0x118CA80", VA = "0x118CA80")]
	private void searchMatchOnTicketCancelled()
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x118D054", Offset = "0x118D054", VA = "0x118D054")]
	private void displayPopupAndSearchNewMatch()
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x118D18C", Offset = "0x118D18C", VA = "0x118D18C")]
	public void StopMatchmakingSearch()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x118D528", Offset = "0x118D528", VA = "0x118D528")]
	public void LeaveOnlineMatch()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x118D5B4", Offset = "0x118D5B4", VA = "0x118D5B4")]
	public void DestroyLobbyForAllPlayers()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x118D5D0", Offset = "0x118D5D0", VA = "0x118D5D0")]
	private void onBackgroundMatchFound()
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x118D768", Offset = "0x118D768", VA = "0x118D768")]
	private void onMatchmakerStatusUpdated()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x118DB00", Offset = "0x118DB00", VA = "0x118DB00")]
	private void forceTransitionToQuickPlayMenu()
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x118DBE8", Offset = "0x118DBE8", VA = "0x118DBE8")]
	private void onBackgroundMatchLeft()
	{
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x118DED0", Offset = "0x118DED0", VA = "0x118DED0")]
	public void CreateMultiplayerRoom()
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x118DED4", Offset = "0x118DED4", VA = "0x118DED4")]
	public void JoinMultiplayerRoom(string roomCode)
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x118DED8", Offset = "0x118DED8", VA = "0x118DED8")]
	public void QuitMultiplayerRoom()
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x118DEDC", Offset = "0x118DEDC", VA = "0x118DEDC")]
	public void DeleteMultiplayerRoom()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x118DEE0", Offset = "0x118DEE0", VA = "0x118DEE0")]
	public Menu_MatchmakingManager()
	{
	}
}
[Token(Token = "0x20002FE")]
public class Menu_ChallengeList_Button : MonoBehaviour
{
	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ListChallenge_Parent;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Challenge_Prefab;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject play_Button;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject menu_Challenge_List;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ChallengePreset challengePreset;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x118DFC8", Offset = "0x118DFC8", VA = "0x118DFC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0x118E0D0", Offset = "0x118E0D0", VA = "0x118E0D0")]
	private void TaskOnClick()
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x118E1A4", Offset = "0x118E1A4", VA = "0x118E1A4")]
	public Menu_ChallengeList_Button()
	{
	}
}
[Token(Token = "0x20002FF")]
public class Menu_ChallengeSelectionManager : MonoBehaviour
{
	[Token(Token = "0x2000300")]
	[CompilerGenerated]
	private sealed class <scorePanelCoroutine>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayBeforeScore;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Menu_ChallengeSelectionManager <>4__this;

		[Token(Token = "0x17000309")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x11908C4", Offset = "0x11908C4", VA = "0x11908C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x119090C", Offset = "0x119090C", VA = "0x119090C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x118F984", Offset = "0x118F984", VA = "0x118F984")]
		[DebuggerHidden]
		public <scorePanelCoroutine>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x11902C8", Offset = "0x11902C8", VA = "0x11902C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x11902CC", Offset = "0x11902CC", VA = "0x11902CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x11908CC", Offset = "0x11908CC", VA = "0x11908CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000301")]
	[CompilerGenerated]
	private sealed class <leaderboardPanelCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayBeforePanel;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Menu_ChallengeSelectionManager <>4__this;

		[Token(Token = "0x1700030B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001538")]
			[Address(RVA = "0x1190C8C", Offset = "0x1190C8C", VA = "0x1190C8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x1190CD4", Offset = "0x1190CD4", VA = "0x1190CD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x118FA30", Offset = "0x118FA30", VA = "0x118FA30")]
		[DebuggerHidden]
		public <leaderboardPanelCoroutine>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1190914", Offset = "0x1190914", VA = "0x1190914", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1190918", Offset = "0x1190918", VA = "0x1190918", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1190C94", Offset = "0x1190C94", VA = "0x1190C94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ChallengeManagerReference _challengeManagerReference;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI titleText;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject textPrefab;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_FontAsset SelectedFont;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_FontAsset IdleFont;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	[SerializeField]
	private Canvas rulesPanel;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform challengesListParent;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Matchmaking Status")]
	[SerializeField]
	private GameObject _backgroundMatchmakingPanel;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcBoolGameParameter _matchmakingEnableParameter;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space]
	[SerializeField]
	private float _delayBeforeScoreDisplay;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Canvas scorePanel;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshProUGUI ScoreTitleText;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI ScoreText;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform ScoreChallengesListParent;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[Space]
	private Canvas leaderboardCanvas;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject _nextChallengeButtonObject;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI LeaderboardTitleText;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject _connectionErrorObject;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject NoTopPlayerObject;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject LeaderboardObject;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private LeaderboardGameParameter _leaderboardParameter;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private rcBoolGameParameter isInMultiMode;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Leaderboard display")]
	[SerializeField]
	[Space(15f)]
	private GameObject topPlayerLb;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject previousLb;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject myLb;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshProUGUI topPlayerName;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshProUGUI topPalyerScore;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshProUGUI previousName;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private TextMeshProUGUI previousScore;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private TextMeshProUGUI myName;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private TextMeshProUGUI myScore;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string _username;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private rcStringGameParameter _userIdParameter;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<Transform> _levels;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<GameObject> _scoreRecapDisplays;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _challengeIsRunning;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Coroutine _endFlowCoroutine;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Leaderboard _leaderboard;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Guid _currentTopRequest;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Guid _currentPreviousRequest;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Guid _currentPlayerRequest;

	[Token(Token = "0x17000308")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6001516")]
		[Address(RVA = "0x118E1AC", Offset = "0x118E1AC", VA = "0x118E1AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x118E24C", Offset = "0x118E24C", VA = "0x118E24C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0x118E664", Offset = "0x118E664", VA = "0x118E664")]
	public void SetChallenge()
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x118E698", Offset = "0x118E698", VA = "0x118E698")]
	public void StartChallenge()
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x118E880", Offset = "0x118E880", VA = "0x118E880")]
	public void RestartChallenge()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0x118EA28", Offset = "0x118EA28", VA = "0x118EA28")]
	public void QuitChallenge()
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x118EC48", Offset = "0x118EC48", VA = "0x118EC48")]
	public void QuitLocalChallenge()
	{
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x118EE5C", Offset = "0x118EE5C", VA = "0x118EE5C")]
	public void NextChallenge()
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0x118EF70", Offset = "0x118EF70", VA = "0x118EF70")]
	private void setNextChallenge()
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0x118F084", Offset = "0x118F084", VA = "0x118F084")]
	public void SetChallengeInfos()
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x118F87C", Offset = "0x118F87C", VA = "0x118F87C")]
	private void updateChallengeFontOnLevelChanged(int levelListIndex, int levelIndex)
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x118F6B0", Offset = "0x118F6B0", VA = "0x118F6B0")]
	private void changeChallengeInfoFont()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x118E8E0", Offset = "0x118E8E0", VA = "0x118E8E0")]
	private void resetChallengeFont()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x118F880", Offset = "0x118F880", VA = "0x118F880")]
	private void challengeEndFlow()
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0x118F900", Offset = "0x118F900", VA = "0x118F900")]
	[IteratorStateMachine(typeof(<scorePanelCoroutine>d__58))]
	private IEnumerator scorePanelCoroutine(float delayBeforeScore)
	{
		return null;
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0x118F9AC", Offset = "0x118F9AC", VA = "0x118F9AC")]
	[IteratorStateMachine(typeof(<leaderboardPanelCoroutine>d__59))]
	private IEnumerator leaderboardPanelCoroutine(float delayBeforePanel)
	{
		return null;
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0x118FA58", Offset = "0x118FA58", VA = "0x118FA58")]
	private void OnPlayerEntriesReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0x118FD94", Offset = "0x118FD94", VA = "0x118FD94")]
	private void userIdUpdated(string toValue, string fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0x118FE64", Offset = "0x118FE64", VA = "0x118FE64")]
	private void OnTopEntriesReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0x118FFA0", Offset = "0x118FFA0", VA = "0x118FFA0")]
	private void OnPreviousEntriesReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x119010C", Offset = "0x119010C", VA = "0x119010C")]
	public Menu_ChallengeSelectionManager()
	{
	}
}
[Token(Token = "0x2000302")]
[RequireComponent(typeof(rcInteractable))]
public class Menu_Challenge_Button : MonoBehaviour
{
	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public GameObject menu_Challenge_List;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public ChallengePreset challenge;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int id;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string challengeTitle;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string challengeInfosLevel;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string challengeInfosTime;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string ChallengeRules;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private rcInteractable interactable;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Menu_Challenge_Manager challengeManager;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Texture2D> spriteSheets;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI ChallengeNameText;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color ChallengeNameLockColor;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Menu_Interaction_SpriteChange ChallengeSpriteChange;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private rcIntGameParameter ChallengeChosenByHost;

	[Token(Token = "0x1700030D")]
	public rcInteractable Interactable
	{
		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1190CDC", Offset = "0x1190CDC", VA = "0x1190CDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0x1190CE4", Offset = "0x1190CE4", VA = "0x1190CE4")]
	public void InitChallengeButton(string challengeName, GameObject challengeList, rcInteractable parentScroller, Menu_Challenge_Manager manager, ChallengePreset preset, int id, bool isAvailable)
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0x11913B4", Offset = "0x11913B4", VA = "0x11913B4")]
	public void ForceOnTrigger()
	{
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0x11913B8", Offset = "0x11913B8", VA = "0x11913B8")]
	private void OnTrigger()
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0x1191A68", Offset = "0x1191A68", VA = "0x1191A68")]
	private void showLeaderboard()
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0x1191AE0", Offset = "0x1191AE0", VA = "0x1191AE0")]
	public Menu_Challenge_Button()
	{
	}
}
[Token(Token = "0x2000303")]
public class Menu_Challenge_Manager : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	[CompilerGenerated]
	private sealed class <ChangeLevelAnimation>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu_Challenge_Manager <>4__this;

		[Token(Token = "0x1700030F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x1193368", Offset = "0x1193368", VA = "0x1193368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x11933B0", Offset = "0x11933B0", VA = "0x11933B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1192BEC", Offset = "0x1192BEC", VA = "0x1192BEC")]
		[DebuggerHidden]
		public <ChangeLevelAnimation>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x119322C", Offset = "0x119322C", VA = "0x119322C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1193230", Offset = "0x1193230", VA = "0x1193230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1193370", Offset = "0x1193370", VA = "0x1193370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Tooltip("Transform, the object wich content all the challenges buttons in the menu. (No default)")]
	private Transform ListChallenge_Parent;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform _listChallengeParentRect;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Tooltip("GameObject, the prefab challenge button. (No default)")]
	private GameObject ListChallenge_Prefab;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject menu_Challenge_List;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("GameObject, the button Play, to launch the challenge. (No default)")]
	[SerializeField]
	private bool PlayButtonStayActiveWhenSelected;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChallengePresetsSettings challengePresetsSettings;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ChallengePreset challenge;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnChallengeSet;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _isChallengeSet;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private rcIntGameParameter _defaultSelectedChallengeIndex;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool AutoSelectFirstChallengeOnInit;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Show challenge infos")]
	[Tooltip("GameObject, temporary text. (No default)")]
	public GameObject SelectChallengeText;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Gameobject containg all infos displayer related to challenge")]
	public GameObject ChallengeInfosContent;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Image, the image which appeare when hover a challenge. (No default)")]
	[SerializeField]
	private Image ChallengePreviewHover;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("TextMeshProUGUI, the text which contain the title of the challenge. (No default)")]
	[SerializeField]
	private TextMeshProUGUI menu_Challenge_Title;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("TextMeshProUGUI, the text which contain the infos of the challenge. (No default)")]
	[SerializeField]
	private TextMeshProUGUI menu_Challenge_InfosLevel;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[Tooltip("TextMeshProUGUI, the text which contain the infos of the challenge. (No default)")]
	private TextMeshProUGUI menu_Challenge_InfosTime;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("TextMeshProUGUI, the text which contain the rules of the challenge. (No default)")]
	[SerializeField]
	private TextMeshProUGUI menu_Challenge_Duration;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Image, the image which appeare when select a challenge. (No default)")]
	[SerializeField]
	private Image ChallengePreview;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public List<Texture2D> spriteSheetsSplashImage;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public List<Texture2D> spriteSheetsLittleImage;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int actualSprite;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float levelAnimationDuration;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Image image;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Texture2D> textures;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public bool ChallengeChosen;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public rcLocalizedText ChallengeTotalTime;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Menu_Interaction_SpriteChange> buttons;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[Space]
	public UnityEvent _onEnableChallengePanel;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Menu_RoomManager _roomManager;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[Header("Scroll List")]
	[SerializeField]
	private GameObject ChallengeListArrowUp;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject ChallengeListArrowDown;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private RectTransform ChallengeListContent;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private float ButtonHeight;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[SerializeField]
	private float AutoScrollSpeed;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine _autoScrollLerpCoroutine;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly int PROP_SHADER_TEXTURE_MAIN;

	[Token(Token = "0x1700030E")]
	public bool IsChallengeSet
	{
		[Token(Token = "0x6001541")]
		[Address(RVA = "0x1191B68", Offset = "0x1191B68", VA = "0x1191B68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0x1191B70", Offset = "0x1191B70", VA = "0x1191B70")]
	public void Update()
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0x11919D0", Offset = "0x11919D0", VA = "0x11919D0")]
	internal void SetChallengeRoomId(int id)
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x1191CB4", Offset = "0x1191CB4", VA = "0x1191CB4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x119285C", Offset = "0x119285C", VA = "0x119285C")]
	private void autoSelectChallenge(Menu_Challenge_Button button)
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0x1191708", Offset = "0x1191708", VA = "0x1191708")]
	public void SetChallenge(ChallengePreset challenge)
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x1191740", Offset = "0x1191740", VA = "0x1191740")]
	public void ShowChallengeInfos(string title, string infosLevel, string infosTime, string rules)
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0x1192AE8", Offset = "0x1192AE8", VA = "0x1192AE8")]
	public void ShowChallengeInfos()
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0x1192804", Offset = "0x1192804", VA = "0x1192804")]
	private void hideChallengeInfos()
	{
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x1192A68", Offset = "0x1192A68", VA = "0x1192A68")]
	private void SetLevelAnimation()
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0x1192B78", Offset = "0x1192B78", VA = "0x1192B78")]
	[IteratorStateMachine(typeof(<ChangeLevelAnimation>d__48))]
	private IEnumerator ChangeLevelAnimation()
	{
		return null;
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x1192C14", Offset = "0x1192C14", VA = "0x1192C14")]
	public void ResetMenuDisplay()
	{
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0x1192D60", Offset = "0x1192D60", VA = "0x1192D60")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0x119193C", Offset = "0x119193C", VA = "0x119193C")]
	public void UpdateDefaultSelectedChallenge(int index)
	{
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0x11929AC", Offset = "0x11929AC", VA = "0x11929AC")]
	public void AutoScroll(int levelIndex)
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0x11930E8", Offset = "0x11930E8", VA = "0x11930E8")]
	public Menu_Challenge_Manager()
	{
	}
}
[Token(Token = "0x2000307")]
public class MenuMain : MonoBehaviour
{
	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NewIconeAnimation newIcone;

	[Token(Token = "0x600155F")]
	[Address(RVA = "0x1193684", Offset = "0x1193684", VA = "0x1193684")]
	public void EnableMainMenu()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0x1193704", Offset = "0x1193704", VA = "0x1193704")]
	public void DisableMainMenu()
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0x1193784", Offset = "0x1193784", VA = "0x1193784")]
	public MenuMain()
	{
	}
}
[Token(Token = "0x2000308")]
public class Menu_LevelList_Button : MonoBehaviour
{
	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LevelList _levelList;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform ListLevel_Parent;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public GameObject Level_Prefab;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public rcInteractable contentList;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public rcInteractable content;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public rcInteractable Interactable;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Menu_Level_Manager MenuLevelManager;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ThemeObject;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI LevelListName;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image LevelListImage;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ThemeObjectLock;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI LevelListNameLock;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image LevelListImageLock;

	[Token(Token = "0x6001562")]
	[Address(RVA = "0x119378C", Offset = "0x119378C", VA = "0x119378C")]
	public void SetupButton(Menu_Level_Manager menuLevelManager, string levelName, Sprite levelIcon, LevelList levelList, bool isAvailable = true)
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0x11938F4", Offset = "0x11938F4", VA = "0x11938F4")]
	public void OnTrigger()
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0x119412C", Offset = "0x119412C", VA = "0x119412C")]
	public Menu_LevelList_Button()
	{
	}
}
[Token(Token = "0x2000309")]
public class Menu_LevelSelectionManager : MonoBehaviour
{
	[Token(Token = "0x200030A")]
	[CompilerGenerated]
	private sealed class <UpdateStarsToFillOnTime>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu_LevelSelectionManager <>4__this;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NetworkedTimer timer;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RewardManager <rewardManager>5__2;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayManager <playManager>5__3;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RewardParameters <rewards>5__4;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <firstGoalTargetTime>5__5;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <secondGoalTargetTime>5__6;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <thirdGoalTargetTime>5__7;

		[Token(Token = "0x17000314")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x1196B00", Offset = "0x1196B00", VA = "0x1196B00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000315")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x1196B48", Offset = "0x1196B48", VA = "0x1196B48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x11958FC", Offset = "0x11958FC", VA = "0x11958FC")]
		[DebuggerHidden]
		public <UpdateStarsToFillOnTime>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1196798", Offset = "0x1196798", VA = "0x1196798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x119679C", Offset = "0x119679C", VA = "0x119679C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1196B08", Offset = "0x1196B08", VA = "0x1196B08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200030B")]
	[CompilerGenerated]
	private sealed class <showEndFlowCoroutine>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelSettings levelSettings;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Menu_LevelSelectionManager <>4__this;

		[Token(Token = "0x17000316")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x11970BC", Offset = "0x11970BC", VA = "0x11970BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x1197104", Offset = "0x1197104", VA = "0x1197104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x1195A00", Offset = "0x1195A00", VA = "0x1195A00")]
		[DebuggerHidden]
		public <showEndFlowCoroutine>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1196B50", Offset = "0x1196B50", VA = "0x1196B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1196B54", Offset = "0x1196B54", VA = "0x1196B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x11970C4", Offset = "0x11970C4", VA = "0x11970C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NetworkedPlayManagerReference networkedPlayManager;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Level infos panel")]
	private TextMeshProUGUI levelTitle;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI levelRules;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI levelStarText1;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI levelStarText2;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI levelStarText3;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject _infinityIcone;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image[] levelStarToFill;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem[] levelStarFilledFX;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private rcLocalizedText _conditionsShotsLimit;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private rcLocalizedText _conditionsTimeLimit;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private rcIntGameParameter successfulShotsParameter;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[Header("Matchmaking Status")]
	private GameObject _backgroundMatchmakingPanel;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcBoolGameParameter _matchmakingEnableParameter;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Level end flow panel 1")]
	[SerializeField]
	private Canvas ScorePanel;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI endFlowTitle;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI endFlowScore;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private CoinsDisplay _endCoinsDisplay;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[Min(1f)]
	private float _minDisplayTime;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	[Min(0f)]
	private float _displayTimeAfterLastCoin;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[Header("Level end flow panel 2")]
	private Canvas LeaderboardPanel;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshProUGUI LeaderboardTitleText;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject _connectionErrorObject;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject NoTopPlayerObject;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject LeaderboardObject;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject _nextLevelButtonObject;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Header("Leaderboard")]
	[SerializeField]
	private LeaderboardGameParameter _leaderboardParameter;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	[ContextMenuItem("Find Events", "OnValidate")]
	private GBAEventsListener _gbaEventsListener;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private LevelsManager _levelsManager;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine _updateStarsToFillOnTimeCoroutine;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _registeredEndEvent;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool _coinsAnimationStarted;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	private bool _coinsAnimationCompleted;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Coroutine _showEndFlowCoroutine;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private WaitUntil _yieldUntilCoinsAnimationStarted;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private WaitUntil _yieldUntilCoinsAnimationEnd;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	[Header("Leaderboard display")]
	[Space(15f)]
	private GameObject topPlayerLb;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject previousLb;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject myLb;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private TextMeshProUGUI topPlayerName;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private TextMeshProUGUI topPalyerScore;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private TextMeshProUGUI previousName;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private TextMeshProUGUI previousScore;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private TextMeshProUGUI myName;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private TextMeshProUGUI myScore;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string _username;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private rcStringGameParameter _userIdParameter;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Guid _currentTopRequest;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Guid _currentPreviousRequest;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Guid _currentPlayerRequest;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Leaderboard _leaderboard;

	[Token(Token = "0x17000313")]
	private OnlineFeaturesManager cacheOnlineFeaturesManager
	{
		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1194134", Offset = "0x1194134", VA = "0x1194134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0x11941D4", Offset = "0x11941D4", VA = "0x11941D4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0x119422C", Offset = "0x119422C", VA = "0x119422C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0x1194660", Offset = "0x1194660", VA = "0x1194660")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001569")]
	[Address(RVA = "0x1194530", Offset = "0x1194530", VA = "0x1194530")]
	private void InitLevelsManager()
	{
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0x11947CC", Offset = "0x11947CC", VA = "0x11947CC")]
	public void ResetEndFlowMenu()
	{
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0x1194850", Offset = "0x1194850", VA = "0x1194850")]
	private void StartLevel()
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0x1194C14", Offset = "0x1194C14", VA = "0x1194C14")]
	public void QuitLevel()
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0x1194D30", Offset = "0x1194D30", VA = "0x1194D30")]
	public void QuitLocalLevel()
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0x1194E40", Offset = "0x1194E40", VA = "0x1194E40")]
	public void RestartLevel()
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x11954EC", Offset = "0x11954EC", VA = "0x11954EC")]
	public void ShowLevelInfos()
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x1194ED4", Offset = "0x1194ED4", VA = "0x1194ED4")]
	private void ShowStars()
	{
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0x1195684", Offset = "0x1195684", VA = "0x1195684")]
	private void UpdateStarsToFillOnShot(int currentScore, int oldScore, object changedBy)
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0x1194B84", Offset = "0x1194B84", VA = "0x1194B84")]
	[IteratorStateMachine(typeof(<UpdateStarsToFillOnTime>d__67))]
	private IEnumerator UpdateStarsToFillOnTime(NetworkedTimer timer)
	{
		return null;
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0x1195924", Offset = "0x1195924", VA = "0x1195924")]
	private void ShowLevelEndFlow()
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0x1195970", Offset = "0x1195970", VA = "0x1195970")]
	[IteratorStateMachine(typeof(<showEndFlowCoroutine>d__69))]
	private IEnumerator showEndFlowCoroutine(LevelSettings levelSettings)
	{
		return null;
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0x1195A28", Offset = "0x1195A28", VA = "0x1195A28")]
	private void OnPlayerEntriesReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0x1195D4C", Offset = "0x1195D4C", VA = "0x1195D4C")]
	private void userIdUpdated(string toValue, string fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0x1195E1C", Offset = "0x1195E1C", VA = "0x1195E1C")]
	private void OnTopEntriesReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0x1195F58", Offset = "0x1195F58", VA = "0x1195F58")]
	private void OnPreviousEntriesReceived(OnlineFeaturesMessage<OnlineLeaderboardEntry[]> message)
	{
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0x11960C4", Offset = "0x11960C4", VA = "0x11960C4")]
	private void setupScorePanelContents(LevelSettings levelSettings)
	{
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0x119635C", Offset = "0x119635C", VA = "0x119635C")]
	public void SetCoinsAnimationStarted()
	{
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0x1196368", Offset = "0x1196368", VA = "0x1196368")]
	public void SetCoinsAnimationCompleted()
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0x1196374", Offset = "0x1196374", VA = "0x1196374")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0x1196418", Offset = "0x1196418", VA = "0x1196418")]
	private void SetNextLevel()
	{
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0x1196670", Offset = "0x1196670", VA = "0x1196670")]
	public Menu_LevelSelectionManager()
	{
	}
}
[Token(Token = "0x200030C")]
[RequireComponent(typeof(rcInteractable))]
public class Menu_Level_Button : MonoBehaviour
{
	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public LevelSettings _level;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _levelIndex;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public rcInteractable Interactible;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI LevelNameText;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color LevelNameLockColor;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Menu_Interaction_SpriteChange LevelSpriteChange;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _levelTitle;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _levelRules;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RewardParameters _rewards;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Menu_Level_Manager _levelManager;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _levelStars;

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x119710C", Offset = "0x119710C", VA = "0x119710C")]
	public void InitLevelButton(string LevelName, rcInteractable parentScroller, int levelIndex, LevelSettings level, bool isAvailable = true)
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x11974BC", Offset = "0x11974BC", VA = "0x11974BC")]
	public void ForceOnTrigger()
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x11974C0", Offset = "0x11974C0", VA = "0x11974C0")]
	private void OnTrigger()
	{
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0x11977C8", Offset = "0x11977C8", VA = "0x11977C8")]
	private void showLeaderboard()
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0x1197840", Offset = "0x1197840", VA = "0x1197840")]
	public Menu_Level_Button()
	{
	}
}
[Token(Token = "0x200030D")]
public class Menu_Level_Manager : rcSingleton<Menu_Level_Manager>
{
	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent _onEnableLevelPanel;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Tooltip("Transform, the parent of the lists of levels. (No default)")]
	[Header("Objects needed for the lists of levels and the levels")]
	private Transform ListLevel_Parent;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Transform, the parent of the levels. (No default)")]
	[SerializeField]
	private Transform Level_Parent;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform levelParentRect;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Tooltip("GameObject, the prefab of the lists of level. (No default)")]
	private GameObject ListLevel_Prefab;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Tooltip("GameObject, the prefab of the levels. (No default)")]
	private GameObject Level_Prefab;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Tooltip("GameObject, the object activated when select a list of levels to show the levels. (No default)")]
	private GameObject levelList_Panel;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Tooltip("GameObject, the button Play, to launch the level. (No default)")]
	private GameObject play_Button;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcIntGameParameter _defaultSelectedLevelIndex;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public LevelList DefaultSelectedLevelList;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Show level infos")]
	[Tooltip("GameObject, temporary text. (No default)")]
	public GameObject SelectLevelText;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Gameobject containg all infos displayer related to level")]
	public GameObject LevelInfosContent;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[Tooltip("Image, the image which appeare when hover a level. (No default)")]
	private Image LevelPreviewHover;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[Tooltip("TextMeshProUGUI, the text which contain the title of the level. (No default)")]
	private TextMeshProUGUI menu_Level_Title;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("TextMeshProUGUI, the text which contain the rules of the level. (No default)")]
	[SerializeField]
	private TextMeshProUGUI menu_Level_Rules;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("Image, the image which appeare when select a level. (No default)")]
	[SerializeField]
	private Image LevelPreview;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private CoinsDisplay _coinsDisplay;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<TextMeshProUGUI> starTexts;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject _infinitIcone;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[Header("Localized Conditions")]
	private rcLocalizedText _conditionsShotsLimit;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private rcLocalizedText _conditionsTimeLimit;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Scroll List")]
	[SerializeField]
	private GameObject LevelListArrowUp;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject LevelListArrowDown;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private RectTransform LevelListContent;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float ButtonHeight;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private float AutoScrollSpeed;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public LevelSettings level;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public bool LevelChosen;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public List<ScriptableObject> levelList;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Texture2D _levelPreviewTexture;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Menu_Interaction_SpriteChange> _buttonSpriteManagers;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly int PROP_SHADER_TEXTURE_MAIN;

	[Token(Token = "0x6001593")]
	[Address(RVA = "0x11978B8", Offset = "0x11978B8", VA = "0x11978B8")]
	public void Update()
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0x11979D4", Offset = "0x11979D4", VA = "0x11979D4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x11984F4", Offset = "0x11984F4", VA = "0x11984F4")]
	private void autoSelectLevelList(rcInteractable defaultLevelListButton)
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x1193914", Offset = "0x1193914", VA = "0x1193914")]
	public void CreateAllLevelButton(LevelList levelList)
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x119871C", Offset = "0x119871C", VA = "0x119871C")]
	private void autoSelectLevel(Menu_Level_Button button)
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x11988D4", Offset = "0x11988D4", VA = "0x11988D4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x1197634", Offset = "0x1197634", VA = "0x1197634")]
	public void ShowLevelInfos(string title, string rules, Texture2D spriteSheet, int levelStars, RewardParameters rewards)
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x1199504", Offset = "0x1199504", VA = "0x1199504")]
	public void ShowLevelInfos()
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x1198E58", Offset = "0x1198E58", VA = "0x1198E58")]
	private void ShowStars(int levelStars, RewardParameters rewards)
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0x11986C4", Offset = "0x11986C4", VA = "0x11986C4")]
	public void HideLevelInfos()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0x119869C", Offset = "0x119869C", VA = "0x119869C")]
	public void DisableLevelChosen()
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0x119659C", Offset = "0x119659C", VA = "0x119659C")]
	public void UpdateDefaultSelectedList(LevelList levelList)
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0x1196654", Offset = "0x1196654", VA = "0x1196654")]
	public void UpdateDefaultSelectedLevel(int index)
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x1198838", Offset = "0x1198838", VA = "0x1198838")]
	public void AutoScroll(int levelIndex)
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x1199628", Offset = "0x1199628", VA = "0x1199628")]
	public Menu_Level_Manager()
	{
	}
}
[Token(Token = "0x2000310")]
public class Menu_Level_QuitButton : MonoBehaviour
{
	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private rcInteractable interactable;

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x11999EC", Offset = "0x11999EC", VA = "0x11999EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x1199AB4", Offset = "0x1199AB4", VA = "0x1199AB4")]
	private void OnTrigger()
	{
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x1199B24", Offset = "0x1199B24", VA = "0x1199B24")]
	public Menu_Level_QuitButton()
	{
	}
}
[Token(Token = "0x2000311")]
public class MenuMatchMakingStateVisualUpdater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000312")]
	public struct MatchmakingStateVisualData
	{
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IMatchmaker.State MatchmakingState;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite StateSprite;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public rcLocalizedText LocalizedMessage;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsLoadingState;
	}

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _isForcingSearchingState;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MatchmakingStateVisualData[] _matchmakingStates;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Status Settings")]
	[SerializeField]
	private Image _statusImage;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI _statusText;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _statusObject;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _loadingObject;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x1199B2C", Offset = "0x1199B2C", VA = "0x1199B2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x119A110", Offset = "0x119A110", VA = "0x119A110")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x1199E0C", Offset = "0x1199E0C", VA = "0x1199E0C")]
	public void RefreshState()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0x119A43C", Offset = "0x119A43C", VA = "0x119A43C")]
	private void RefreshState(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x119A36C", Offset = "0x119A36C", VA = "0x119A36C")]
	private void updateStatusObject(bool loadingEnable)
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x119A440", Offset = "0x119A440", VA = "0x119A440")]
	public MenuMatchMakingStateVisualUpdater()
	{
	}
}
[Token(Token = "0x2000313")]
public class Menu_AvatarManager : MonoBehaviour
{
	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AvatarList defaultAvatarList;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform defaultAvatarPrefab;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform parentList;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject creationButton;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform defaultButton;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Menu_Settings _menuSettings;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcBoolGameParameter _isInAvatarMode;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Loading")]
	private GameObject _menuContent;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _loadingContent;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _wasMulti;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AvatarLoader _localAvatarLoader;

	[Token(Token = "0x1700031A")]
	private AvatarLoader localAvatarLoader
	{
		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x119A758", Offset = "0x119A758", VA = "0x119A758")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x119A8A4", Offset = "0x119A8A4", VA = "0x119A8A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x119AB30", Offset = "0x119AB30", VA = "0x119AB30")]
	public void EnableAvatarPanel()
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x119AEA0", Offset = "0x119AEA0", VA = "0x119AEA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x119AEC0", Offset = "0x119AEC0", VA = "0x119AEC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0x119AC30", Offset = "0x119AC30", VA = "0x119AC30")]
	private void subscribeToAvatarLoadingEvents()
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x119AEE0", Offset = "0x119AEE0", VA = "0x119AEE0")]
	private void unsubscribeFromAvatarLoadingEvents()
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x119AE18", Offset = "0x119AE18", VA = "0x119AE18")]
	private void onAvatarDoneLoading()
	{
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x119B0AC", Offset = "0x119B0AC", VA = "0x119B0AC")]
	private void onAvatarLoadingFailed(string errorMessage)
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x119B06C", Offset = "0x119B06C", VA = "0x119B06C")]
	public void EnableMenuContent()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x119ADBC", Offset = "0x119ADBC", VA = "0x119ADBC")]
	public void EnableLoadingContent()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x119B15C", Offset = "0x119B15C", VA = "0x119B15C")]
	public void PreviousMode(bool mode)
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x119A974", Offset = "0x119A974", VA = "0x119A974")]
	private void SetDefaultAvatar()
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x119B168", Offset = "0x119B168", VA = "0x119B168")]
	public void BackFromAvatar()
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x119AAB4", Offset = "0x119AAB4", VA = "0x119AAB4")]
	private void HideCreationButton()
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x119B414", Offset = "0x119B414", VA = "0x119B414")]
	public Menu_AvatarManager()
	{
	}
}
[Token(Token = "0x2000315")]
public class Menu_AvatarRpm : MonoBehaviour
{
	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Canvas canvas;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcLocalizedText LocalizedImportingAvatar;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcLocalizedText LocalizedRetry;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcLocalizedText LocalizedURLClipboardNotValid;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Menu_Manager _menuManager;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityEvent _closePopupEvent;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AvatarLoader _localAvatarLoader;

	[Token(Token = "0x4001244")]
	private const string URL_RPM = "https://justhoops.readyplayer.me";

	[Token(Token = "0x4001245")]
	private const string URL_REGEX = "^https://api.readyplayer.me/v1/avatars/[a-z0-9]{24}.glb$";

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x119B584", Offset = "0x119B584", VA = "0x119B584")]
	private void Start()
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x119B694", Offset = "0x119B694", VA = "0x119B694")]
	public void LaunchReadyPlayerMe()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x119B6D8", Offset = "0x119B6D8", VA = "0x119B6D8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x119B9E4", Offset = "0x119B9E4", VA = "0x119B9E4")]
	private void onAvatarLoaded()
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x119BADC", Offset = "0x119BADC", VA = "0x119BADC")]
	public Menu_AvatarRpm()
	{
	}
}
[Token(Token = "0x2000316")]
public class Menu_Avatar_Code : MonoBehaviour
{
	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string clipboard;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("TextMeshProUGUI, the text wich will contain the url when the player paste it. (Null by default)")]
	[SerializeField]
	private TextMeshProUGUI textUrl;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string urlRegex;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string shortcodeRegex;

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x119BAE4", Offset = "0x119BAE4", VA = "0x119BAE4")]
	public void PasteCode()
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x119BC74", Offset = "0x119BC74", VA = "0x119BC74")]
	public void ConfirmSelection()
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x119BDA4", Offset = "0x119BDA4", VA = "0x119BDA4")]
	public Menu_Avatar_Code()
	{
	}
}
[Token(Token = "0x2000317")]
public class Menu_CreateParty : MonoBehaviour
{
	[Token(Token = "0x2000318")]
	[CompilerGenerated]
	private sealed class <DelayedStartChallenge>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Menu_CreateParty <>4__this;

		[Token(Token = "0x1700031D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0x119C5C0", Offset = "0x119C5C0", VA = "0x119C5C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x119C608", Offset = "0x119C608", VA = "0x119C608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x119BEBC", Offset = "0x119BEBC", VA = "0x119BEBC")]
		[DebuggerHidden]
		public <DelayedStartChallenge>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x119C47C", Offset = "0x119C47C", VA = "0x119C47C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x119C480", Offset = "0x119C480", VA = "0x119C480", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x119C5C8", Offset = "0x119C5C8", VA = "0x119C5C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcStringGameParameter _roomIdText;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _delayBeforeStartingChallenge;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _featuresManager;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcBoolGameParameter _isInRoomMode;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space]
	public rcLocalizedText LocalizedPopUpCreateRoomErrorTitle;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public rcLocalizedText LocalizedPopUpCreateRoomErrorMessage;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public rcLocalizedText LocalizedPopUpCreateRoomErrorOkButton;

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x119BE28", Offset = "0x119BE28", VA = "0x119BE28")]
	public void StartChallenge()
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x119BE48", Offset = "0x119BE48", VA = "0x119BE48")]
	[IteratorStateMachine(typeof(<DelayedStartChallenge>d__9))]
	private IEnumerator DelayedStartChallenge()
	{
		return null;
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x119BEE4", Offset = "0x119BEE4", VA = "0x119BEE4")]
	public void OpenUICreatePrivateRoom()
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x119C068", Offset = "0x119C068", VA = "0x119C068")]
	public void ClosePrivateRoom()
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x119C174", Offset = "0x119C174", VA = "0x119C174")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x119C2B4", Offset = "0x119C2B4", VA = "0x119C2B4")]
	private void FindRoomBrowser()
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x119C2E4", Offset = "0x119C2E4", VA = "0x119C2E4")]
	private void OnRoomCreated(bool isError, string errorMsg, string friendCode)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x119C470", Offset = "0x119C470", VA = "0x119C470")]
	private void OnRoomClosed(bool isError, string errorMsg)
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x119C474", Offset = "0x119C474", VA = "0x119C474")]
	public Menu_CreateParty()
	{
	}
}
[Token(Token = "0x2000319")]
[RequireComponent(typeof(rcInteractable))]
public class Menu_DefaultAvatar : MonoBehaviour
{
	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int defaultAvatarIndex;

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x119C610", Offset = "0x119C610", VA = "0x119C610")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x119C6C0", Offset = "0x119C6C0", VA = "0x119C6C0")]
	private void OnTrigger()
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x119C750", Offset = "0x119C750", VA = "0x119C750")]
	public Menu_DefaultAvatar()
	{
	}
}
[Token(Token = "0x200031A")]
public class Menu_FlowMultiplayer : MonoBehaviour
{
	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Timers")]
	private NetworkedTimer matchmakingCountdownTimer;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NetworkedTimer matchmakingSearchTimer;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NetworkedTimer IntermatchCountdownTimer;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Player 1")]
	[SerializeField]
	private List<TextMeshProUGUI> player1Texts;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<Transform> player1Models;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<RawImage> player1Thumbnails;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Player 2")]
	[SerializeField]
	private List<TextMeshProUGUI> player2Texts;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<Transform> player2Models;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private List<RawImage> player2Thumbnails;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Panels to show/hide")]
	[SerializeField]
	private GameObject versusPanel;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject roundPanel;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject rulesPanel;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject countDownPanel;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Shown texts")]
	[SerializeField]
	private TextMeshProUGUI timerText;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI searchState;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OnlineFeaturesManager onlineFeaturesManager;

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x119C758", Offset = "0x119C758", VA = "0x119C758")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x119C820", Offset = "0x119C820", VA = "0x119C820")]
	public void OnUserLoggedIn()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x119C850", Offset = "0x119C850", VA = "0x119C850")]
	private void Update()
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x119CA00", Offset = "0x119CA00", VA = "0x119CA00")]
	public void SwitchVersusPanel(bool state)
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x119CA20", Offset = "0x119CA20", VA = "0x119CA20")]
	public void SwitchRoundPanel(bool state)
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x119CA40", Offset = "0x119CA40", VA = "0x119CA40")]
	public void SwitchRulesPanel(bool state)
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x119CA60", Offset = "0x119CA60", VA = "0x119CA60")]
	public void SwitchCountDownPanel(bool state)
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x119CA80", Offset = "0x119CA80", VA = "0x119CA80")]
	public void SetPlayerName()
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x119CC4C", Offset = "0x119CC4C", VA = "0x119CC4C")]
	public void SetPlayer2Name()
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x119CE18", Offset = "0x119CE18", VA = "0x119CE18")]
	public void SetPlayerModel(GameObject go)
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x119CF44", Offset = "0x119CF44", VA = "0x119CF44")]
	public void SetPlayer2Model()
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x119D070", Offset = "0x119D070", VA = "0x119D070")]
	public void SetPlayerThumbnail(Texture2D texture)
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x119D1C4", Offset = "0x119D1C4", VA = "0x119D1C4")]
	public void SetPlayer2Thumbnail(Texture2D texture)
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x119D318", Offset = "0x119D318", VA = "0x119D318")]
	public Menu_FlowMultiplayer()
	{
	}
}
[Token(Token = "0x200031B")]
public class Menu_JoinParty : MonoBehaviour
{
	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Options for the room code")]
	private string _roomCode;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcStringGameParameter _roomID;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcBoolGameParameter _isInRoomMode;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Int, the number max of characters in the code. (6 by default)")]
	[SerializeField]
	private int _maxCharacterCount;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("String, the character to indicate the number of characters of the room code. (* by default)")]
	[SerializeField]
	private string _character;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("TextMeshProUGUI, the text where the code is displayed. (Null by default)")]
	[SerializeField]
	private TextMeshProUGUI _textCode;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OnlineFeaturesManager _featuresManager;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private FormattedLocalizedText _popupTitle;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private FormattedLocalizedText _popupJoiningRoom;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private FormattedLocalizedText _okLoca;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private FormattedLocalizedText _errorCodeTooShort;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private FormattedLocalizedText _errorInternal;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private FormattedLocalizedText _errorConnection;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private FormattedLocalizedText _errorRoomDoesntExist;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private FormattedLocalizedText _errorRoomFull;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private FormattedLocalizedText _errorRoomClosed;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private FormattedLocalizedText _errorUnexpectedResult;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private FormattedLocalizedText _errorUnhandled;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private FormattedLocalizedText _errorTimeoutReached;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x119D320", Offset = "0x119D320", VA = "0x119D320")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x119D4E8", Offset = "0x119D4E8", VA = "0x119D4E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x119D5EC", Offset = "0x119D5EC", VA = "0x119D5EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x119D66C", Offset = "0x119D66C", VA = "0x119D66C")]
	public void ClearCodeInput()
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x119D71C", Offset = "0x119D71C", VA = "0x119D71C")]
	public void InputNumber(string input)
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x119D7E4", Offset = "0x119D7E4", VA = "0x119D7E4")]
	public void InputCancel()
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x119D8D4", Offset = "0x119D8D4", VA = "0x119D8D4")]
	public void InputOk()
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x119DB18", Offset = "0x119DB18", VA = "0x119DB18")]
	private void joinRoom(HostRoom room)
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x119DC68", Offset = "0x119DC68", VA = "0x119DC68")]
	private void stopFindingRoom()
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x119DDC8", Offset = "0x119DDC8", VA = "0x119DDC8")]
	public void ClearBackgroundMatchmakingBoolean()
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x119DDE8", Offset = "0x119DDE8", VA = "0x119DDE8")]
	public Menu_JoinParty()
	{
	}
}
[Token(Token = "0x200031C")]
public class Menu_QuickPlay : MonoBehaviour
{
	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject QuickPlayContentObject;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject WaitingForTicketToEndContent;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image ReadyButtonBackground;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite ReadyButtonBackgroundToggleOff;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite ReadyButtonBackgroundToggleOn;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Space]
	private GameObject PlayButton;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject TextReady;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject TextSetReady;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[Space]
	private GameObject LockSelectionBackground;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Space]
	private rcInteractable _backButton;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject MatchmakingRemainingTimeDisplay;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Header("Localization")]
	private rcLocalizedText _yes;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcLocalizedText _no;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcLocalizedText _ok;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcLocalizedText _error;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private rcLocalizedText _quit;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private rcLocalizedText _otherQuit;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Menu_MatchmakingManager _onlineMatchmakingManager;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Menu_Challenge_Manager _menuChallengeManager;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OnlineMatchFlow _onlineMatchFlow;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private PlayersManager _playersManager;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool _isReady;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int _challengeIndexToRemoveIfNotReady;

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x119E4AC", Offset = "0x119E4AC", VA = "0x119E4AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x119E56C", Offset = "0x119E56C", VA = "0x119E56C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x119F04C", Offset = "0x119F04C", VA = "0x119F04C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x119F1A0", Offset = "0x119F1A0", VA = "0x119F1A0")]
	public void EnableQuickPlayContent()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x119F1D8", Offset = "0x119F1D8", VA = "0x119F1D8")]
	public void EnableWaitingForTicketToEndContent()
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x119F210", Offset = "0x119F210", VA = "0x119F210")]
	public void DisableWaitingForTicketToEndContent()
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0x119F250", Offset = "0x119F250", VA = "0x119F250")]
	private void initMenuMatchmakingManager()
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x119EF84", Offset = "0x119EF84", VA = "0x119EF84")]
	private void initPlayersManager()
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x119E94C", Offset = "0x119E94C", VA = "0x119E94C")]
	private void initMatchmaker()
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0x119F5CC", Offset = "0x119F5CC", VA = "0x119F5CC")]
	private void onMatchFound()
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0x119F790", Offset = "0x119F790", VA = "0x119F790")]
	private void onJoinedGame()
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0x119F878", Offset = "0x119F878", VA = "0x119F878")]
	private void onPlayAgain()
	{
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x119F8B4", Offset = "0x119F8B4", VA = "0x119F8B4")]
	private void onStartTimer()
	{
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x119F8D4", Offset = "0x119F8D4", VA = "0x119F8D4")]
	private void onLeaveMatch()
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x119FA88", Offset = "0x119FA88", VA = "0x119FA88")]
	private void resetMenuDisplay()
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x119FBE0", Offset = "0x119FBE0", VA = "0x119FBE0")]
	public void SetReady()
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x119FB14", Offset = "0x119FB14", VA = "0x119FB14")]
	public void SetNotReady()
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x119F7E4", Offset = "0x119F7E4", VA = "0x119F7E4")]
	private void togglePlayButton(bool state)
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x119FDA4", Offset = "0x119FDA4", VA = "0x119FDA4")]
	public void SetMultiplayerChallengeIndex(int index)
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x119FE1C", Offset = "0x119FE1C", VA = "0x119FE1C")]
	private void onMatchmakerStateUpdated()
	{
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x11A0048", Offset = "0x11A0048", VA = "0x11A0048")]
	private void onWaitUserChoiceAfterOtherQuit(bool enableState)
	{
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x11A0278", Offset = "0x11A0278", VA = "0x11A0278")]
	public void QuitMultiWithPopup()
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x11A05D4", Offset = "0x11A05D4", VA = "0x11A05D4")]
	private void onUserQuitChoiceUpdated(bool stay)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x11A07FC", Offset = "0x11A07FC", VA = "0x11A07FC")]
	private void onRoomLeftWhileSearching()
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x11A09FC", Offset = "0x11A09FC", VA = "0x11A09FC")]
	private void onRoomLeftUserWantToQuit()
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x11A0D10", Offset = "0x11A0D10", VA = "0x11A0D10")]
	private void onRoomLeftCauseOtherPlayerHasLeft()
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x11A0F6C", Offset = "0x11A0F6C", VA = "0x11A0F6C")]
	private void showReadyButtonInMulti()
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x11A102C", Offset = "0x11A102C", VA = "0x11A102C")]
	public Menu_QuickPlay()
	{
	}
}
[Token(Token = "0x200031D")]
public class Menu_RoomInitialization : MonoBehaviour
{
	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnHostInitialization;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnClientInitialization;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x11A1078", Offset = "0x11A1078", VA = "0x11A1078")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x11A11E0", Offset = "0x11A11E0", VA = "0x11A11E0")]
	public Menu_RoomInitialization()
	{
	}
}
[Token(Token = "0x200031E")]
public class Menu_RoomJoined : MonoBehaviour
{
	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Menu_Challenge_Manager challengeManager;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChallengePresetsSettings challengePresetsSettings;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Show challenge infos")]
	[SerializeField]
	private GameObject SelectChallengeTextObject;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI LevelNameSelectedByHostText;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Room infos")]
	[SerializeField]
	private rcStringGameParameter _roomID;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI _roomIDText;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _roomIDIsVisible;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> _playerInRoomIconeFill;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> _playerInRoomIconeEmpty;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlayersManager _playersManager;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcIntGameParameter ChallengeChosenByHost;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly int PROP_SHADER_TEXTURE_MAIN;

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x11A11E8", Offset = "0x11A11E8", VA = "0x11A11E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0x11A144C", Offset = "0x11A144C", VA = "0x11A144C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x11A12A8", Offset = "0x11A12A8", VA = "0x11A12A8")]
	private void ShowChallengeChosenByHost(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x11A15F0", Offset = "0x11A15F0", VA = "0x11A15F0")]
	private void displayRoomID()
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x11A1708", Offset = "0x11A1708", VA = "0x11A1708")]
	public void ToggleRoomIDVisibility()
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0x11A1718", Offset = "0x11A1718", VA = "0x11A1718")]
	private void displayPlayerInRoomCount()
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x11A183C", Offset = "0x11A183C", VA = "0x11A183C")]
	public Menu_RoomJoined()
	{
	}
}
[Token(Token = "0x200031F")]
public class Menu_RoomManager : MonoBehaviour
{
	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Room infos")]
	[SerializeField]
	private rcStringGameParameter _roomID;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _roomIDText;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> _playerInRoomIconeFill;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> _playerInRoomIconeEmpty;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayersManager _playersManager;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject _startButton;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcBoolGameParameter _isInRoomMode;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Challenges")]
	private ChallengePreset ActualChallengeSelected;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Menu_Challenge_Manager _challengeManager;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ChallengeManagerReference _challengeReference;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private rcIntGameParameter ChallengeChosenByHost;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject ChallengeSelectedByHostObject;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[Header("Localization")]
	private TextMeshProUGUI ChallengeSelectedByHostText;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcLocalizedText _yes;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private rcLocalizedText _no;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private rcLocalizedText _ok;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private rcLocalizedText _closeLoca;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private rcLocalizedText _leaveLoca;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private rcLocalizedText _errorLoca;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private rcLocalizedText _clientQuitLoca;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private rcLocalizedText _hostQuitLoca;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private IRoomBrowser _roomBrowser;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private OnlinePartyRoomFlow _onlinePartyRoomFlow;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool quitting;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool isInPlay;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Canvas roomCanvas;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Menu_RoomInitialization _roomInit;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private MenuMicrophoneSettings _microSettings;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private OnlineRoomLocker _roomLocker;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public UnityEvent OnLastClientQuit;

	[Token(Token = "0x6001627")]
	[Address(RVA = "0x11A189C", Offset = "0x11A189C", VA = "0x11A189C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x11A1AFC", Offset = "0x11A1AFC", VA = "0x11A1AFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x11A1E54", Offset = "0x11A1E54", VA = "0x11A1E54")]
	public void InitializedRoomManagerHost()
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x11A23D8", Offset = "0x11A23D8", VA = "0x11A23D8")]
	public void InitializedRoomManagerClient()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x11A27E0", Offset = "0x11A27E0", VA = "0x11A27E0")]
	private void ShowChallengeChosenByHost(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x11A2988", Offset = "0x11A2988", VA = "0x11A2988")]
	private void updateChallengeSelectedByHostForClient()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x11A21C8", Offset = "0x11A21C8", VA = "0x11A21C8")]
	private void displayRoomID()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x11A2A78", Offset = "0x11A2A78", VA = "0x11A2A78")]
	public void ToggleRoomIDVisibility()
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x11A22A8", Offset = "0x11A22A8", VA = "0x11A22A8")]
	private void displayPlayerInRoomCount()
	{
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x11A2B60", Offset = "0x11A2B60", VA = "0x11A2B60")]
	private void onClientQuit()
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x11A2C48", Offset = "0x11A2C48", VA = "0x11A2C48")]
	private void onLastClientQuit()
	{
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x11A2D84", Offset = "0x11A2D84", VA = "0x11A2D84")]
	private void onHostQuit()
	{
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x11A2F74", Offset = "0x11A2F74", VA = "0x11A2F74")]
	public void QuitRoom()
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x11A3140", Offset = "0x11A3140", VA = "0x11A3140")]
	private void onWaitingUserChoice(bool state)
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x11A3524", Offset = "0x11A3524", VA = "0x11A3524")]
	private void onRoomLeft()
	{
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x11A3698", Offset = "0x11A3698", VA = "0x11A3698")]
	private void LeaveCloseError(bool isError, string errorMsg)
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0x11A2A7C", Offset = "0x11A2A7C", VA = "0x11A2A7C")]
	private void displayLaunchButton()
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0x11A369C", Offset = "0x11A369C", VA = "0x11A369C")]
	public void HostStartChallenge()
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0x11A3764", Offset = "0x11A3764", VA = "0x11A3764")]
	private void onMatchStart()
	{
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0x11A382C", Offset = "0x11A382C", VA = "0x11A382C")]
	private void onMatchEnd()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x11A38D4", Offset = "0x11A38D4", VA = "0x11A38D4")]
	public void SendChallengeChosenByHost(int id)
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x11A39A4", Offset = "0x11A39A4", VA = "0x11A39A4")]
	public Menu_RoomManager()
	{
	}
}
[Token(Token = "0x2000320")]
public class Menu_SetRoundCount : MonoBehaviour
{
	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OnlineMatchFlow _onlineMatchFlow;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _roundCountText;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcLocalizedText _roundCountLocalizedText;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private OnlineModeGameParameter _onlineMode;

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x11A39AC", Offset = "0x11A39AC", VA = "0x11A39AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x11A3AD8", Offset = "0x11A3AD8", VA = "0x11A3AD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x11A3BC4", Offset = "0x11A3BC4", VA = "0x11A3BC4")]
	private void UpdateRoundCount(int roundCount)
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x11A3C7C", Offset = "0x11A3C7C", VA = "0x11A3C7C")]
	public Menu_SetRoundCount()
	{
	}
}
[Token(Token = "0x2000321")]
[CreateAssetMenu(fileName = "MenuPlayerAvatar", menuName = "ScriptableObjects/SpawnManagerScriptableObject", order = 1)]
public class SO_PlayerAvatar : ScriptableObject
{
	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string rpmUrl;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string avatarUrl;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string avatarShortcode;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite avatarSprite;

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x11A3C84", Offset = "0x11A3C84", VA = "0x11A3C84")]
	public SO_PlayerAvatar()
	{
	}
}
[Token(Token = "0x2000322")]
public class MenuMicrophoneSettings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000323")]
	private class PlayerLine
	{
		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject LineObject;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI Text;

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x11A528C", Offset = "0x11A528C", VA = "0x11A528C")]
		public PlayerLine()
		{
		}
	}

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MicrophonesManager _microphonesManager;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcInteractable _muteSelfInteractable;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SpriteSwap _muteSelfSpriteSwap;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcInteractable _muteOthersInteractable;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SpriteSwap _muteOthersSpriteSwap;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Menu_Interaction_SpriteChange _muteSelfSpriteChanger;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Menu_Interaction_SpriteChange _muteOthersSpriteChanger;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _muteOtherPlayersObject;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI _localPlayerName;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _leaveButton;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PlayerLine[] _otherPlayers;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private OnlineModeGameParameter _playMode;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private OnlineMatchFlow _onlineMatchFlow;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlayersManager _playersManager;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<GBAPlayerSystem, PlayerLine> _playerLineMapping;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<NetworkIdentity, Action<string>> _updateCallbacks;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private OnlineModeGameParameter _onlineMode;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Menu_QuickPlay _quickplay;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Menu_RoomManager _roomManager;

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x11A3CDC", Offset = "0x11A3CDC", VA = "0x11A3CDC")]
	public void ToggleMuteSelf()
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x11A3CFC", Offset = "0x11A3CFC", VA = "0x11A3CFC")]
	public void ToggleMuteOthers()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x11A3D1C", Offset = "0x11A3D1C", VA = "0x11A3D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x11A4310", Offset = "0x11A4310", VA = "0x11A4310")]
	private void OnAreOthersMutedChanged(MonoBehaviour eventAuthor)
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x11A4408", Offset = "0x11A4408", VA = "0x11A4408")]
	private void OnIsMutedChanged(MonoBehaviour eventAuthor)
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x11A44C0", Offset = "0x11A44C0", VA = "0x11A44C0")]
	private void OnPlayModeChanged(OnlineFlowEnabler.OnlineMode actualPlayMode, OnlineFlowEnabler.OnlineMode previousPlayMode, object changedBy)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x11A44C4", Offset = "0x11A44C4", VA = "0x11A44C4")]
	private void SwitchMicrophone(OnlineFlowEnabler.OnlineMode playMode)
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x11A40E4", Offset = "0x11A40E4", VA = "0x11A40E4")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x11A4A44", Offset = "0x11A4A44", VA = "0x11A4A44")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x11A4DC4", Offset = "0x11A4DC4", VA = "0x11A4DC4")]
	private void onMatchFound()
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x11A4DF0", Offset = "0x11A4DF0", VA = "0x11A4DF0")]
	private void onMatchQuit()
	{
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x11A45C0", Offset = "0x11A45C0", VA = "0x11A45C0")]
	private void UpdatePlayersList()
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x11A50B0", Offset = "0x11A50B0", VA = "0x11A50B0")]
	private void DisableAllPlayerLines()
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x11A4E1C", Offset = "0x11A4E1C", VA = "0x11A4E1C")]
	private void CleanUpdateCallbacks(ReadOnlyCollection<GBAPlayerSystem> players)
	{
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x11A5124", Offset = "0x11A5124", VA = "0x11A5124")]
	[ContextMenu("Show Quit Button")]
	private void ShowQuitButton()
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x11A512C", Offset = "0x11A512C", VA = "0x11A512C")]
	private void HideQuitButton()
	{
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x11A37FC", Offset = "0x11A37FC", VA = "0x11A37FC")]
	public void DisplayQuitButton(bool onPlay)
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x11A5134", Offset = "0x11A5134", VA = "0x11A5134")]
	public void Quit()
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x11A51B4", Offset = "0x11A51B4", VA = "0x11A51B4")]
	public MenuMicrophoneSettings()
	{
	}
}
[Token(Token = "0x2000325")]
public class MenuMicrophoneSettingsPositionUpdater : MonoBehaviour
{
	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform MicrophoneSettingsOutOfGame;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform MicrophoneSettingsInGame;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space]
	[SerializeField]
	private MenuBackgroundRotation _menuBackGroundRotation;

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x11A52E8", Offset = "0x11A52E8", VA = "0x11A52E8")]
	[ContextMenu("Set Canvas OutGame")]
	public void SetMicrophoneSettingsCanvasOutOfGamePosition()
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x11A5398", Offset = "0x11A5398", VA = "0x11A5398")]
	[ContextMenu("Set Canvas InGame")]
	public void SetMicrophoneSettingsCanvasInGamePosition()
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x11A5448", Offset = "0x11A5448", VA = "0x11A5448")]
	public MenuMicrophoneSettingsPositionUpdater()
	{
	}
}
[Token(Token = "0x2000326")]
public class MenuModifierButton : MonoBehaviour
{
	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Menu_Modifiers.ModifierData _modifierData;

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x11A5450", Offset = "0x11A5450", VA = "0x11A5450")]
	public void ApplyModifier(Menu_Modifiers modifiersMenu)
	{
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x11A5640", Offset = "0x11A5640", VA = "0x11A5640")]
	public MenuModifierButton()
	{
	}
}
[Token(Token = "0x2000327")]
public class Menu_Modifiers : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000328")]
	public struct ModifierData
	{
		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public rcLocalizedText LocalizedName;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Min(0f)]
		public float ScoreMultiplier;
	}

	[Serializable]
	[Token(Token = "0x2000329")]
	public struct InputSelectableOption
	{
		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public XRInputTracker.XRInputSystem InputType;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public rcXRInputs.Feature[] Features;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ButtonObject;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject LockedButtonObject;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public rcInteractable ButtonScript;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public rcLocalizedText LocalizedPopupMessage;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnSwitchedToEvent;
	}

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Content;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("XR Inputs Settings")]
	private XRInputSystemParameter _inputSystemParameter;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InputSelectableOption[] _inputOptions;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Display")]
	[SerializeField]
	[Tooltip("TextMeshProUGUI, the text that will contain the selected mode. (No default)")]
	private TextMeshProUGUI _modifierNameMesh;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Tooltip("TextMeshProUGUI, the text that will contain the selected score multiplier. (No default)")]
	private TextMeshProUGUI _scoreMultiplierMesh;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Popups")]
	private rcLocalizedText _localizedCancelButton;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcLocalizedText _waitForSwitchLocalizedTitle;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent _onInputSwitchStart;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEvent _onInputSwitchDone;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("FTE")]
	[SerializeField]
	private MenuFlowFTE _fteFlowManager;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent _onSkipLaunchFte;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private XRInputTracker.XRInputSystem _desiredInputType;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Menu_PopupManager _popupManager;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private XRInputTracker.XRInputSystem currentSystem;

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x11A5648", Offset = "0x11A5648", VA = "0x11A5648")]
	private void Start()
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x11A5EB4", Offset = "0x11A5EB4", VA = "0x11A5EB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x11A5EC4", Offset = "0x11A5EC4", VA = "0x11A5EC4")]
	private void setTutorialCompleted(XRInputTracker.XRInputSystem inputMode)
	{
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x11A5F54", Offset = "0x11A5F54", VA = "0x11A5F54")]
	public void ChangeMultiplayerSettings(bool mod)
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x11A54E0", Offset = "0x11A54E0", VA = "0x11A54E0")]
	public void SetModifier(ModifierData modifierData)
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x11A5CB8", Offset = "0x11A5CB8", VA = "0x11A5CB8")]
	public void SelectInputMode(XRInputTracker.XRInputSystem inputMode)
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x11A5FD0", Offset = "0x11A5FD0", VA = "0x11A5FD0")]
	public void WaitForInputMode(XRInputTracker.XRInputSystem inputMode)
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x11A6410", Offset = "0x11A6410", VA = "0x11A6410")]
	public void WaitForHands()
	{
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x11A6418", Offset = "0x11A6418", VA = "0x11A6418")]
	public void WaitForControllers()
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x11A6420", Offset = "0x11A6420", VA = "0x11A6420")]
	private void onWaitForInputPopupStateUpdated(bool enableState)
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x11A6828", Offset = "0x11A6828", VA = "0x11A6828")]
	private void onInputSwitchCancelled(bool validatedPopup)
	{
	}

	[Token(Token = "0x6001668")]
	[Address(RVA = "0x11A5C74", Offset = "0x11A5C74", VA = "0x11A5C74")]
	private void doInputChange(XRInputTracker.XRInputSystem inputValue)
	{
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0x11A66D8", Offset = "0x11A66D8", VA = "0x11A66D8")]
	private void unplugConcurrentInputs(XRInputTracker.XRInputSystem inputValue)
	{
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x11A6954", Offset = "0x11A6954", VA = "0x11A6954")]
	private void invokeInputSpecificResponse(XRInputTracker.XRInputSystem inputSystem)
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x11A69CC", Offset = "0x11A69CC", VA = "0x11A69CC")]
	public Menu_Modifiers()
	{
	}
}
[Token(Token = "0x200032D")]
public class Menu_Settings : MonoBehaviour
{
	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Mixed Reality Capture options")]
	private GameObject mrcMessage;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Menu_Interaction_SpriteChange mrcSpriteChange;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("Passthrough options")]
	private GameObject passthroughButton;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject passthroughButtonLock;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Menu_Interaction_SpriteChange passthroughSpriteChange;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Daltonism options")]
	[SerializeField]
	private DaltonismeConfigManager daltonismManager;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Menu_Interaction_SpriteChange daltonismSpriteChange;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Background matchmaking")]
	[SerializeField]
	private GameObject _backgroundMatchmakingButton;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _backgroundMatchmakingButtonLockOn;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _backgroundMatchmakingButtonLockOff;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Menu_Interaction_SpriteChange _backgroundMatchmakingSpriteChange;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Audio")]
	[SerializeField]
	private rcAudioSource _toggleAudioSource;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private rcAudioEvent _toggleOnAudioEvent;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private rcAudioEvent _toggleOffAudioEvent;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IMatchmaker _matchmaker;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MatchmakingLimitsManager _matchmakingLimitsManager;

	[Token(Token = "0x1700031F")]
	private bool areMatchmakingLimitsReached
	{
		[Token(Token = "0x6001676")]
		[Address(RVA = "0x11A6E34", Offset = "0x11A6E34", VA = "0x11A6E34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x11A6EBC", Offset = "0x11A6EBC", VA = "0x11A6EBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x11A6F7C", Offset = "0x11A6F7C", VA = "0x11A6F7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x11A7508", Offset = "0x11A7508", VA = "0x11A7508")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x11A7A50", Offset = "0x11A7A50", VA = "0x11A7A50")]
	private void Start()
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x11A70B0", Offset = "0x11A70B0", VA = "0x11A70B0")]
	private void onUserLoggedIn()
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x119B1A8", Offset = "0x119B1A8", VA = "0x119B1A8")]
	public void EnableSettingsPanel()
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0x11A7CB4", Offset = "0x11A7CB4", VA = "0x11A7CB4")]
	private void setupPassthrough(bool passthrougEnabled)
	{
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x11A7C00", Offset = "0x11A7C00", VA = "0x11A7C00")]
	private void applyCurrentBackgroundMatchmakingState()
	{
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0x11A7B78", Offset = "0x11A7B78", VA = "0x11A7B78")]
	private void applyLockedBackgroundMatchmakingValue()
	{
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0x11A7E78", Offset = "0x11A7E78", VA = "0x11A7E78")]
	private void applyBackgroundMatchmakingReadyState(bool ready)
	{
	}

	[Token(Token = "0x6001681")]
	[Address(RVA = "0x11A7F20", Offset = "0x11A7F20", VA = "0x11A7F20")]
	private void applyBackgroundMatchmakingToggleValue(bool toggleValue)
	{
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0x11A7DFC", Offset = "0x11A7DFC", VA = "0x11A7DFC")]
	private void applyBackgroundMatchmakingState(bool ready, bool enabled)
	{
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x11A7FD4", Offset = "0x11A7FD4", VA = "0x11A7FD4")]
	private void onTicketCancelled()
	{
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x11A8174", Offset = "0x11A8174", VA = "0x11A8174")]
	private void onMatchmakerStatusUpdated()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x11A8394", Offset = "0x11A8394", VA = "0x11A8394")]
	public void ToggleMrCapture()
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x11A853C", Offset = "0x11A853C", VA = "0x11A853C")]
	public void TogglePassthrough()
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x11A85DC", Offset = "0x11A85DC", VA = "0x11A85DC")]
	public void ToggleDaltonism()
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x11A8630", Offset = "0x11A8630", VA = "0x11A8630")]
	public void ToggleBackgroundMatchmaking()
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x11A8498", Offset = "0x11A8498", VA = "0x11A8498")]
	public void PlayToggleSFX(bool toggleOn)
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x11A86D0", Offset = "0x11A86D0", VA = "0x11A86D0")]
	public Menu_Settings()
	{
	}
}
[Token(Token = "0x200032F")]
public class Menu_StateManager : MonoBehaviour
{
	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[NonReorderable]
	public List<Canvas> menuPanels;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Menu_Manager MenuManager;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuMain menuMain;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Menu_RoomManager roomManager;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Canvas> AppLaunch;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Canvas> Main;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Canvas> Fte;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Canvas> FteMultiplayer;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Canvas> Level;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Canvas> LevelSelection;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Canvas> Challenge;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Canvas> ChallengeSelection;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Canvas> Avatar;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Canvas> Party;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Canvas> Quickplay;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Canvas> IdleQuickPlay;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<Canvas> Room;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<Canvas> RoomJoin;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Canvas> RoomCreate;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<Canvas> RoomPlay;

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x11A88EC", Offset = "0x11A88EC", VA = "0x11A88EC")]
	public Menu_StateManager()
	{
	}
}
[Token(Token = "0x2000330")]
public class OnlineModeUpdateListener : MonoBehaviour
{
	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OnlineModeGameParameter _onlineMode;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnSwitchToPartyMode;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnSwitchToQuickPlay;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnSwitchToIdle;

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x11A88F4", Offset = "0x11A88F4", VA = "0x11A88F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x11A8A84", Offset = "0x11A8A84", VA = "0x11A8A84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x11A89B8", Offset = "0x11A89B8", VA = "0x11A89B8")]
	private void onOnlineModeUpdate(OnlineFlowEnabler.OnlineMode onlineModeNew, OnlineFlowEnabler.OnlineMode onlineModeOld, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x11A8B24", Offset = "0x11A8B24", VA = "0x11A8B24")]
	public OnlineModeUpdateListener()
	{
	}
}
[Token(Token = "0x2000331")]
public class PlayerScreen : MonoBehaviour
{
	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Thumbnail;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage ThumbnailImage;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Name;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI NameText;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Score;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI ScoreText;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Winner;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject FXWin;

	[Token(Token = "0x6001694")]
	[Address(RVA = "0x11A8B2C", Offset = "0x11A8B2C", VA = "0x11A8B2C")]
	public PlayerScreen()
	{
	}
}
[Token(Token = "0x2000332")]
public class PlayersPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000333")]
	public struct PlayerLine
	{
		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Root;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshProUGUI Text;
	}

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PlayerLine> _playerNames;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _selectedChallengeText;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_ColorGradient _hostPlayerColorGradient;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ChallengeManager _challengeManager;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private rcBoolGameParameter _isInMultiplayerMode;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<NetworkIdentity, Action<string>> _updateCallbacks;

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x11A8B34", Offset = "0x11A8B34", VA = "0x11A8B34")]
	private void Start()
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x11A8F10", Offset = "0x11A8F10", VA = "0x11A8F10")]
	private void OnMultiplayerModeChanged(bool isMultiplayer, bool wasMultiplayer, object changedBy)
	{
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x11A8F30", Offset = "0x11A8F30", VA = "0x11A8F30")]
	private void OnChallengeSelected()
	{
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0x11A907C", Offset = "0x11A907C", VA = "0x11A907C")]
	private void OnPlayersUpdate()
	{
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x11A9610", Offset = "0x11A9610", VA = "0x11A9610")]
	private void ApplyHostStyle(TextMeshProUGUI text)
	{
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0x11A9650", Offset = "0x11A9650", VA = "0x11A9650")]
	private void ApplyClientStyle(TextMeshProUGUI text)
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0x11A9454", Offset = "0x11A9454", VA = "0x11A9454")]
	private void CleanUpdateCallbacks(ReadOnlyCollection<GBAPlayerSystem> players)
	{
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0x11A9684", Offset = "0x11A9684", VA = "0x11A9684")]
	public PlayersPanel()
	{
	}
}
[Token(Token = "0x2000335")]
public class PlayersScreensEnabler : MonoBehaviour
{
	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] _playersScreens;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HorizontalLayoutGroup _horizontalLayout;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayersManager _playersManager;

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x11A9990", Offset = "0x11A9990", VA = "0x11A9990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x11A9B14", Offset = "0x11A9B14", VA = "0x11A9B14")]
	private void initPlayersManager()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x11A9C2C", Offset = "0x11A9C2C", VA = "0x11A9C2C")]
	private void updatePlayersScreensEnableStatus()
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x11A9D4C", Offset = "0x11A9D4C", VA = "0x11A9D4C")]
	public PlayersScreensEnabler()
	{
	}
}
[Token(Token = "0x2000336")]
public class PlayersScreensReferences : MonoBehaviour
{
	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerScreen[] PlayerScreens;

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x11A9D54", Offset = "0x11A9D54", VA = "0x11A9D54")]
	public PlayersScreensReferences()
	{
	}
}
[Token(Token = "0x2000337")]
public class ScreenChallengeName : MonoBehaviour
{
	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI ChallengeName;

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x11A9D5C", Offset = "0x11A9D5C", VA = "0x11A9D5C")]
	public ScreenChallengeName()
	{
	}
}
[Token(Token = "0x2000338")]
public class ScreenMatchmakingRound : MonoBehaviour
{
	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI RoundNumber;

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x11A9D64", Offset = "0x11A9D64", VA = "0x11A9D64")]
	public ScreenMatchmakingRound()
	{
	}
}
[Token(Token = "0x2000339")]
public class SpriteSwap : MonoBehaviour
{
	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite Sprite;

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x11A43C8", Offset = "0x11A43C8", VA = "0x11A43C8")]
	public void Swap()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x11A9D6C", Offset = "0x11A9D6C", VA = "0x11A9D6C")]
	public SpriteSwap()
	{
	}
}
[Token(Token = "0x200033A")]
public class ServerAuthorityExamplePlayerController : NetworkBehaviour
{
	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rb;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float transformMovementSpeed;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SmoothSyncMirror smoothSync;

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x11A9D74", Offset = "0x11A9D74", VA = "0x11A9D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0x11A9E04", Offset = "0x11A9E04", VA = "0x11A9E04", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x11A9E34", Offset = "0x11A9E34", VA = "0x11A9E34")]
	private void Update()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x11A9FDC", Offset = "0x11A9FDC", VA = "0x11A9FDC")]
	[Command]
	private void CmdTeleport()
	{
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0x11A9EDC", Offset = "0x11A9EDC", VA = "0x11A9EDC")]
	[Command]
	private void CmdMove(KeyCode keyCode)
	{
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0x11AA0C8", Offset = "0x11AA0C8", VA = "0x11AA0C8")]
	public ServerAuthorityExamplePlayerController()
	{
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0x11AA0DC", Offset = "0x11AA0DC", VA = "0x11AA0DC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x11AA0E0", Offset = "0x11AA0E0", VA = "0x11AA0E0")]
	protected void UserCode_CmdTeleport()
	{
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0x11AA214", Offset = "0x11AA214", VA = "0x11AA214")]
	protected static void InvokeUserCode_CmdTeleport(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0x11AA344", Offset = "0x11AA344", VA = "0x11AA344")]
	protected void UserCode_CmdMove(KeyCode keyCode)
	{
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0x11AA400", Offset = "0x11AA400", VA = "0x11AA400")]
	protected static void InvokeUserCode_CmdMove(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x11AA554", Offset = "0x11AA554", VA = "0x11AA554")]
	static ServerAuthorityExamplePlayerController()
	{
	}
}
[Token(Token = "0x200033B")]
public class SmoothSyncMirrorExamplePlayerController : NetworkBehaviour
{
	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rb;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody2D rb2D;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SmoothSyncMirror smoothSync;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float transformMovementSpeed;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject childObjectToControl;

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x11AA6E8", Offset = "0x11AA6E8", VA = "0x11AA6E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x11AA860", Offset = "0x11AA860", VA = "0x11AA860")]
	private void Update()
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x11AB404", Offset = "0x11AB404", VA = "0x11AB404")]
	public static bool validateStateOfPlayer(StateMirror latestReceivedState, StateMirror latestValidatedState)
	{
		return default(bool);
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x11AB4D8", Offset = "0x11AB4D8", VA = "0x11AB4D8")]
	public SmoothSyncMirrorExamplePlayerController()
	{
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x11AB4EC", Offset = "0x11AB4EC", VA = "0x11AB4EC")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x200033C")]
public class printBot : MonoBehaviour
{
	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x11AB4F0", Offset = "0x11AB4F0", VA = "0x11AB4F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x11AB4F4", Offset = "0x11AB4F4", VA = "0x11AB4F4")]
	public printBot()
	{
	}
}
[Token(Token = "0x200033D")]
public class PSXSystemService : MonoBehaviour
{
	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x11AB4FC", Offset = "0x11AB4FC", VA = "0x11AB4FC")]
	public PSXSystemService()
	{
	}
}
[Token(Token = "0x200033E")]
public class AvatarsManager : NetworkBehaviour
{
	[Token(Token = "0x200033F")]
	public class SyncListAvatarGameObject : SyncList<GameObject>
	{
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x11AB960", Offset = "0x11AB960", VA = "0x11AB960")]
		public SyncListAvatarGameObject()
		{
		}
	}

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public readonly SyncListAvatarGameObject AvatarGameObjects;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcNetworkManager _networkManager;

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x11AB504", Offset = "0x11AB504", VA = "0x11AB504", Slot = "8")]
	public override void OnStartServer()
	{
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x11AB6E0", Offset = "0x11AB6E0", VA = "0x11AB6E0")]
	private void OnPlayerRemoved(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0x11AB7C4", Offset = "0x11AB7C4", VA = "0x11AB7C4")]
	private void OnPlayerAdded(NetworkConnection conn)
	{
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x11AB8DC", Offset = "0x11AB8DC", VA = "0x11AB8DC")]
	public AvatarsManager()
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x11AB9A8", Offset = "0x11AB9A8", VA = "0x11AB9A8")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x11AB9AC", Offset = "0x11AB9AC", VA = "0x11AB9AC")]
	static AvatarsManager()
	{
	}
}
[Token(Token = "0x2000340")]
public class AvatarColorsHolder : MonoBehaviour
{
	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarsColors Color;

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x11AB9B0", Offset = "0x11AB9B0", VA = "0x11AB9B0")]
	public AvatarColorsHolder()
	{
	}
}
[Token(Token = "0x2000341")]
[CreateAssetMenu(fileName = "New_AvatarColor", menuName = "Avatars/Color")]
public class AvatarsColors : ScriptableObject
{
	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color MainColor;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color SecondaryColor;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color ThirdColor;

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x11AB9B8", Offset = "0x11AB9B8", VA = "0x11AB9B8")]
	public AvatarsColors()
	{
	}
}
[Token(Token = "0x2000342")]
[CreateAssetMenu(fileName = "AvatarColorsManager", menuName = "Avatars/Color Manager")]
public class AvatarsColorsManager : ScriptableObject
{
	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AvatarsColors> AvatarColors;

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x11AB9C0", Offset = "0x11AB9C0", VA = "0x11AB9C0")]
	public AvatarsColorsManager()
	{
	}
}
[Token(Token = "0x2000343")]
public class FollowRotation : MonoBehaviour
{
	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ReferenceTransform;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TargetTransform;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ExcedentTwistTransform;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ApplyExcedentTwistTransform;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool AxisRotationCorrection;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 ReferenceRollAxis;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 ObjectRollAxis;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 TargetRollAxis;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 ExcedentTwistRollAxis;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float MinTwistLimit;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float MaxTwistLimit;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool OverrideObjectRotation;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _refToObjRotation;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion _refToTargetRotation;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion _excedentStartLocalRotation;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 _computedRoll;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _twistAngle;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _excedentTwist;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[Range(0f, 1f)]
	[SerializeField]
	private float _weight;

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x11AB9C8", Offset = "0x11AB9C8", VA = "0x11AB9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x11ABBDC", Offset = "0x11ABBDC", VA = "0x11ABBDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x11ABFA8", Offset = "0x11ABFA8", VA = "0x11ABFA8")]
	private void updateTwist()
	{
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x11AC500", Offset = "0x11AC500", VA = "0x11AC500")]
	public FollowRotation()
	{
	}
}
[Token(Token = "0x2000344")]
[CreateAssetMenu(fileName = "HumanoidSettings", menuName = "Realcast/Motion/Humanoid Settings")]
public class HumanoidSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000345")]
	public struct LocalTransform
	{
		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 LocalPosition;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion LocalRotation;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 LocalScale;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x11AC5B4", Offset = "0x11AC5B4", VA = "0x11AC5B4")]
		public LocalTransform(Transform sourceTransform)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x11AC718", Offset = "0x11AC718", VA = "0x11AC718")]
		public void ApplyLocalTransformTo(Transform targetTransform)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000346")]
	public class BodySettings
	{
		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh BodyMesh;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] BodyMaterials;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh ClothMesh;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material[] ClothMaterials;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalTransform[] NameTagsLocalTransforms;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalTransform[] LeftWristObjects;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalTransform[] RightWristObjects;

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x11AC7D8", Offset = "0x11AC7D8", VA = "0x11AC7D8")]
		public BodySettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000347")]
	public class EyesSettings
	{
		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalTransform LeftEyeLocalTransform;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalTransform RightEyeLocalTransform;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EyeAndHeadAnimatorForExport EyesExportData;

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x11AC7E0", Offset = "0x11AC7E0", VA = "0x11AC7E0")]
		public EyesSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000348")]
	public class MouthSettings
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalTransform TeethLocalTransform;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int MouthBlendshapeIndex;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 ClosedJawEuler;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 OpenJawEuler;

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x11AC7E8", Offset = "0x11AC7E8", VA = "0x11AC7E8")]
		public MouthSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000349")]
	public class HairSettings
	{
		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] HairMeshes;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalTransform HairLocalTransform;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalTransform LeftEyebrowLocalTransform;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LocalTransform RightEyebrowLocalTransform;

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x11AC7F0", Offset = "0x11AC7F0", VA = "0x11AC7F0")]
		public HairSettings()
		{
		}
	}

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BodySettings Body;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EyesSettings Eyes;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MouthSettings Mouth;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HairSettings Hair;

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0x11AC5AC", Offset = "0x11AC5AC", VA = "0x11AC5AC")]
	public HumanoidSettings()
	{
	}
}
[Token(Token = "0x200034A")]
public class HumanoidSettingsHolder : MonoBehaviour
{
	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HumanoidSettings Settings;

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0x11AC7F8", Offset = "0x11AC7F8", VA = "0x11AC7F8")]
	public HumanoidSettingsHolder()
	{
	}
}
[Token(Token = "0x200034B")]
[CreateAssetMenu(fileName = "HumanoidSettingsManager", menuName = "Realcast/Motion/Humanoid Settings Manager")]
public class HumanoidSettingsManager : ScriptableObject
{
	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<HumanoidSettings> SettingsList;

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0x11AC800", Offset = "0x11AC800", VA = "0x11AC800")]
	public HumanoidSettingsManager()
	{
	}
}
[Token(Token = "0x200034C")]
public class DeviceRigManager : MonoBehaviour
{
	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _deviceRigRoot;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _leftEyeAnchor;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _centerAnchor;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _rightEyeAnchor;

	[Token(Token = "0x17000320")]
	public Transform DeviceRigRoot
	{
		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x11AC808", Offset = "0x11AC808", VA = "0x11AC808")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000321")]
	public Transform LeftEyeAnchor
	{
		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x11AC810", Offset = "0x11AC810", VA = "0x11AC810")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000322")]
	public Transform CenterAnchor
	{
		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x11AC818", Offset = "0x11AC818", VA = "0x11AC818")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000323")]
	public Transform RightEyeAnchor
	{
		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x11AC820", Offset = "0x11AC820", VA = "0x11AC820")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x11AC828", Offset = "0x11AC828", VA = "0x11AC828")]
	public DeviceRigManager()
	{
	}
}
[Token(Token = "0x200034D")]
public class ResetStateId : StateMachineBehaviour
{
	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public rcIntGameParameter StateIdParam;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int StateId;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int ResetValue;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ResetOnEnter;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool ResetOnExit;

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x11AC830", Offset = "0x11AC830", VA = "0x11AC830", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x11AC944", Offset = "0x11AC944", VA = "0x11AC944", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x11ACA58", Offset = "0x11ACA58", VA = "0x11ACA58")]
	public ResetStateId()
	{
	}
}
[Token(Token = "0x200034E")]
public class DissonanceLipsync : MonoBehaviour
{
	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer SkinRenderer;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int BlendshapeIndex;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float CloseValue;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float OpenValue;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcGameObjectGameParameter DissonanceCommsObject;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MirrorIgnorancePlayer IgnorancePlayer;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxLoudness;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DissonanceComms _dissonanceComms;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VoicePlayerState _voicePlayerState;

	[Token(Token = "0x17000324")]
	public float CurrentSoundLevel
	{
		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x11ACA68", Offset = "0x11ACA68", VA = "0x11ACA68")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x11ACA70", Offset = "0x11ACA70", VA = "0x11ACA70")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x11ACA78", Offset = "0x11ACA78", VA = "0x11ACA78")]
	private void Start()
	{
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x11ACB08", Offset = "0x11ACB08", VA = "0x11ACB08")]
	private void Update()
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x11ACBB8", Offset = "0x11ACBB8", VA = "0x11ACBB8")]
	public bool SetupPlayerVoice()
	{
		return default(bool);
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x11ACC54", Offset = "0x11ACC54", VA = "0x11ACC54")]
	public DissonanceLipsync()
	{
	}
}
[Token(Token = "0x200034F")]
public class FollowBlendshape : MonoBehaviour
{
	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer BlendshapeRenderer;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform FollowingObject;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int BlendshapeIndex;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int BlendshapeTRIndexZ;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int BlendshapeTRIndexXP;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int BlendshapeTrIndexXN;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 MinEulerAngles;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 MaxEulerAngles;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 MaxTranslation;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _initPos;

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x11ACC6C", Offset = "0x11ACC6C", VA = "0x11ACC6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x11ACC98", Offset = "0x11ACC98", VA = "0x11ACC98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x11ACE3C", Offset = "0x11ACE3C", VA = "0x11ACE3C")]
	[ContextMenu("Set Min Pose")]
	public void SetMinPose()
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x11ACE7C", Offset = "0x11ACE7C", VA = "0x11ACE7C")]
	[ContextMenu("Set Max Pose")]
	public void SetMaxPose()
	{
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x11ACEC0", Offset = "0x11ACEC0", VA = "0x11ACEC0")]
	public FollowBlendshape()
	{
	}
}
[Token(Token = "0x2000350")]
public class IntegrationToPartyMergeHelper : MonoBehaviour
{
	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] LevelPrefabs;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string JsonFolderPath;

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x11ACF54", Offset = "0x11ACF54", VA = "0x11ACF54")]
	public IntegrationToPartyMergeHelper()
	{
	}
}
[Token(Token = "0x2000351")]
public class LanguageDebugTool : MonoBehaviour
{
	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcLanguageGameParameter _currentLanguageParam;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcLanguage _debugValue;

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x11ACF5C", Offset = "0x11ACF5C", VA = "0x11ACF5C")]
	[ContextMenu("Apply Debug Value")]
	private void applyDebugValue()
	{
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x11AD020", Offset = "0x11AD020", VA = "0x11AD020")]
	public void ApplyDebugValue(rcLanguage language)
	{
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x11AD0F0", Offset = "0x11AD0F0", VA = "0x11AD0F0")]
	public LanguageDebugTool()
	{
	}
}
[Token(Token = "0x2000352")]
public class MenuDispenser : rcFSM
{
	[Token(Token = "0x2000353")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x40013B7")]
		BACK,
		[Token(Token = "0x40013B8")]
		COUNT
	}

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _baseColor;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _validColor;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BallsPool _ballsPool;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x11AD0F8", Offset = "0x11AD0F8", VA = "0x11AD0F8", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x11AD210", Offset = "0x11AD210", VA = "0x11AD210", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x11AD7F8", Offset = "0x11AD7F8", VA = "0x11AD7F8")]
	public MenuDispenser()
	{
	}
}
[Token(Token = "0x2000354")]
public class MenuTeleport : rcFSM
{
	[Token(Token = "0x2000355")]
	private enum MENU_ITEMS
	{
		[Token(Token = "0x40013C6")]
		TELEPORT,
		[Token(Token = "0x40013C7")]
		MOVE_DESTINATION_X,
		[Token(Token = "0x40013C8")]
		MOVE_DESTINATION_Y,
		[Token(Token = "0x40013C9")]
		BACK,
		[Token(Token = "0x40013CA")]
		COUNT
	}

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _cycles;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private rcSceneManager _sm;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private rcMenuRootLoop _root;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _baseColor;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _validColor;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcTransformGameParameter _teleportDestinationParameter;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _cameraRig;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _cameraRigParent;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _mainCamera;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _mainCameraParent;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CameraTeleportManager _teleportManager;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string[] MENU_ITEMS_TEXTS;

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x11AD920", Offset = "0x11AD920", VA = "0x11AD920", Slot = "18")]
	protected override void OnStateEntered()
	{
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x11ADBC0", Offset = "0x11ADBC0", VA = "0x11ADBC0", Slot = "20")]
	protected override void OnStateUpdated()
	{
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x11AE484", Offset = "0x11AE484", VA = "0x11AE484")]
	public MenuTeleport()
	{
	}
}
[Token(Token = "0x2000356")]
public class rcGameParameterDisplay : MonoBehaviour
{
	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Text _textMesh;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter[] _boolGameParameters;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private rcIntGameParameter[] _intGameParameters;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private rcFloatGameParameter[] _floatGameParameters;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private rcStringGameParameter[] _stringGameParameters;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private rcVector3GameParameter[] _vector3GameParameters;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private rcQuaternionGameParameter[] _quaternionGameParameters;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private rcGameObjectGameParameter[] _gameObjectGameParameters;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private rcTransformGameParameter[] _transformGameParameters;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private StringBuilder _completeDisplay;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StringBuilder _boolParametersDisplay;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private StringBuilder _intParametersDisplay;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private StringBuilder _floatParametersDisplay;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private StringBuilder _stringParametersDisplay;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StringBuilder _vectorParametersDisplay;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private StringBuilder _quatParametersDisplay;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private StringBuilder _gameObjectParametersDisplay;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private StringBuilder _transformParametersDisplay;

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0x11AE6C0", Offset = "0x11AE6C0", VA = "0x11AE6C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0x11AF264", Offset = "0x11AF264", VA = "0x11AF264")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x11AF190", Offset = "0x11AF190", VA = "0x11AF190")]
	public void RefreshDisplay()
	{
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x11AF7F4", Offset = "0x11AF7F4", VA = "0x11AF7F4")]
	private void onBoolUpdated(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60016F6")]
	[Address(RVA = "0x11AF924", Offset = "0x11AF924", VA = "0x11AF924")]
	private void onIntUpdated(int toValue, int fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x11AFA54", Offset = "0x11AFA54", VA = "0x11AFA54")]
	private void onFloatUpdated(float toValue, float fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x11AFB9C", Offset = "0x11AFB9C", VA = "0x11AFB9C")]
	private void onStringUpdated(string toValue, string fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x11AFCA0", Offset = "0x11AFCA0", VA = "0x11AFCA0")]
	private void onVector3Updated(Vector3 toValue, Vector3 fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x11AFDFC", Offset = "0x11AFDFC", VA = "0x11AFDFC")]
	private void onQuaternionUpdated(Quaternion toValue, Quaternion fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x11AFF4C", Offset = "0x11AFF4C", VA = "0x11AFF4C")]
	private void onGameObjectUpdated(GameObject toValue, GameObject fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0x11B006C", Offset = "0x11B006C", VA = "0x11B006C")]
	private void onTransformUpdated(Transform toValue, Transform fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0x11B018C", Offset = "0x11B018C", VA = "0x11B018C")]
	public rcGameParameterDisplay()
	{
	}
}
[Token(Token = "0x2000357")]
public class AvatarHandsSystem : NetworkBehaviour
{
	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public rcTouchSystemSettings TouchSettings;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public rcInteractiveHand LeftHand;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public rcInteractiveHand RightHand;

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0x11B0340", Offset = "0x11B0340", VA = "0x11B0340")]
	private void Start()
	{
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0x11B04F4", Offset = "0x11B04F4", VA = "0x11B04F4")]
	public AvatarHandsSystem()
	{
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0x11B04FC", Offset = "0x11B04FC", VA = "0x11B04FC")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000358")]
[CreateAssetMenu(fileName = "InputSystemParameter", menuName = "GBA/Inputs/Input System Parameter")]
public class XRInputSystemParameter : rcGameParameter<XRInputTracker.XRInputSystem>
{
	[Token(Token = "0x6001701")]
	[Address(RVA = "0x11A68F4", Offset = "0x11A68F4", VA = "0x11A68F4")]
	public void Set(XRInputTracker.XRInputSystem value)
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x11B0500", Offset = "0x11B0500", VA = "0x11B0500")]
	public XRInputSystemParameter()
	{
	}
}
[Token(Token = "0x2000359")]
public class XRInputSystemParameterListener : rcGameParameterListener<XRInputSystemParameter>
{
	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnSwitchToControllers;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnSwitchToHandTracking;

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x11B0548", Offset = "0x11B0548", VA = "0x11B0548")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0x11B062C", Offset = "0x11B062C", VA = "0x11B062C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0x11B0710", Offset = "0x11B0710", VA = "0x11B0710")]
	private void OnXRInputSystemParameterUpdated(XRInputTracker.XRInputSystem toValue, XRInputTracker.XRInputSystem fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0x11B073C", Offset = "0x11B073C", VA = "0x11B073C")]
	public XRInputSystemParameterListener()
	{
	}
}
[Token(Token = "0x200035A")]
public class XRInputTracker : rcSingleton<XRInputTracker>
{
	[Token(Token = "0x200035B")]
	public enum XRInputSystem
	{
		[Token(Token = "0x40013FE")]
		UNKNOWN,
		[Token(Token = "0x40013FF")]
		HAND_TRACKING,
		[Token(Token = "0x4001400")]
		CONTROLLERS
	}

	[Serializable]
	[Token(Token = "0x200035C")]
	public struct PlatformInputs
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public rcPlatformManager.SubPlatform[] RuntimePlatforms;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public XRInputSystem[] InputModes;
	}

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _screenFocused;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private rcBoolGameParameter _screenInteractible;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlatformInputs[] _platformInputModes;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlatformInputs[] _demoInputModes;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<XRInputSystem, XRInputSystem> OnSwitchInput;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnSwitchOnControllers;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnSwitchOffControllers;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnSwitchOnHandTracking;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnSwitchOffHandTracking;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent<bool> OnControllerButtonAOn;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent<bool> OnControllerButtonBOn;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent<bool> OnControllerButtonDUJOn;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent<bool> OnControllerButtonDDJOn;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent<bool> OnControllerButtonDLJOn;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent<bool> OnControllerButtonDRJOn;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent<bool> OnControllerButtonXOn;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent<bool> OnControllerButtonYOn;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[Header("Editor Debug")]
	private XRInputSystem _editorInputSystem;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private rcXRInputs _xrInputs;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private XRInputSystem _currentInputSystem;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool _firstTimeCtrlLeft;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool _firstTimeCtrlRight;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OnlineFeaturesManager _onlineFeaturesManager;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _lastSessionLoaded;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool _subscribedToLogIn;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private XRInputSystem _lastSessionInputSystem;

	[Token(Token = "0x40013FC")]
	private const string INPUT_FILENAME = "LastSession-InputMode.dat";

	[Token(Token = "0x17000325")]
	public XRInputSystem LastSessionSystem
	{
		[Token(Token = "0x6001707")]
		[Address(RVA = "0x11A5C5C", Offset = "0x11A5C5C", VA = "0x11A5C5C")]
		get
		{
			return default(XRInputSystem);
		}
	}

	[Token(Token = "0x17000326")]
	public XRInputSystem CurrentInputSystem
	{
		[Token(Token = "0x6001708")]
		[Address(RVA = "0x11B0C88", Offset = "0x11B0C88", VA = "0x11B0C88")]
		get
		{
			return default(XRInputSystem);
		}
		[Token(Token = "0x6001709")]
		[Address(RVA = "0x11B0C90", Offset = "0x11B0C90", VA = "0x11B0C90")]
		private set
		{
		}
	}

	[Token(Token = "0x17000327")]
	public XRInputSystem SingleInputMode
	{
		[Token(Token = "0x600170A")]
		[Address(RVA = "0x11A5B30", Offset = "0x11A5B30", VA = "0x11A5B30")]
		get
		{
			return default(XRInputSystem);
		}
	}

	[Token(Token = "0x17000328")]
	public bool HasSingleInputMode
	{
		[Token(Token = "0x600170B")]
		[Address(RVA = "0x11B0FE8", Offset = "0x11B0FE8", VA = "0x11B0FE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000329")]
	public bool DemoOnlySingleInputMode
	{
		[Token(Token = "0x600170C")]
		[Address(RVA = "0x11A5EAC", Offset = "0x11A5EAC", VA = "0x11A5EAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0x11B1000", Offset = "0x11B1000", VA = "0x11B1000", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0x11B13B0", Offset = "0x11B13B0", VA = "0x11B13B0", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0x11B1C8C", Offset = "0x11B1C8C", VA = "0x11B1C8C")]
	private void onControllerButtonAOn(bool pressed)
	{
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0x11B1D20", Offset = "0x11B1D20", VA = "0x11B1D20")]
	private void onControllerButtonBOn(bool pressed)
	{
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x11B1DB4", Offset = "0x11B1DB4", VA = "0x11B1DB4")]
	private void onControllerButtonXOn(bool pressed)
	{
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0x11B1E48", Offset = "0x11B1E48", VA = "0x11B1E48")]
	private void onControllerButtonYOn(bool pressed)
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0x11B1EDC", Offset = "0x11B1EDC", VA = "0x11B1EDC")]
	private void onControllerButtonDUJOn(bool pressed)
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0x11B1F70", Offset = "0x11B1F70", VA = "0x11B1F70")]
	private void onControllerButtonDDJOn(bool pressed)
	{
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0x11B2004", Offset = "0x11B2004", VA = "0x11B2004")]
	private void onControllerButtonDLJOn(bool pressed)
	{
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0x11B2098", Offset = "0x11B2098", VA = "0x11B2098")]
	private void onControllerButtonDRJOn(bool pressed)
	{
	}

	[Token(Token = "0x6001717")]
	[Address(RVA = "0x11B0784", Offset = "0x11B0784", VA = "0x11B0784")]
	private bool loadLastSessionMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0x11B0E70", Offset = "0x11B0E70", VA = "0x11B0E70")]
	private void saveInputMode()
	{
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0x11B212C", Offset = "0x11B212C", VA = "0x11B212C")]
	private void onHandTrackingUpdated(bool trackingStatus)
	{
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0x11B27A8", Offset = "0x11B27A8", VA = "0x11B27A8")]
	private void onLeftControllerTrackingUpdated(bool trackingStatus)
	{
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0x11B2C28", Offset = "0x11B2C28", VA = "0x11B2C28")]
	private void onRightControllerTrackingUpdated(bool trackingStatus)
	{
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0x11B2DF8", Offset = "0x11B2DF8", VA = "0x11B2DF8")]
	public XRInputTracker()
	{
	}
}
[Token(Token = "0x200035D")]
public class InternetNOKDisplay : MonoBehaviour
{
	[Token(Token = "0x200035E")]
	[CompilerGenerated]
	private sealed class <forceQuitCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InternetNOKDisplay <>4__this;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <timer>5__2;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <waitForOneSec>5__3;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <localizedByeMessage>5__4;

		[Token(Token = "0x1700032A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0x1225838", Offset = "0x1225838", VA = "0x1225838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x1225880", Offset = "0x1225880", VA = "0x1225880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1225650", Offset = "0x1225650", VA = "0x1225650")]
		[DebuggerHidden]
		public <forceQuitCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1225688", Offset = "0x1225688", VA = "0x1225688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x122568C", Offset = "0x122568C", VA = "0x122568C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1225840", Offset = "0x1225840", VA = "0x1225840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask _displayCullingMask;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _waitForUserCanvas;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _errorCanvas;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI _countdownTextMesh;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Range(0f, 60f)]
	private int _delayBeforeShutdown;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera _mainCamera;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _forceQuitCoroutine;

	[Token(Token = "0x600171D")]
	[Address(RVA = "0x1225568", Offset = "0x1225568", VA = "0x1225568")]
	private void Start()
	{
	}

	[Token(Token = "0x600171E")]
	[Address(RVA = "0x122558C", Offset = "0x122558C", VA = "0x122558C")]
	public void StartForceQuit()
	{
	}

	[Token(Token = "0x600171F")]
	[Address(RVA = "0x12255DC", Offset = "0x12255DC", VA = "0x12255DC")]
	[IteratorStateMachine(typeof(<forceQuitCoroutine>d__9))]
	private IEnumerator forceQuitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0x1225678", Offset = "0x1225678", VA = "0x1225678")]
	public InternetNOKDisplay()
	{
	}
}
[Token(Token = "0x200035F")]
public class PlayerAvatarCustomization : NetworkBehaviour
{
	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool RandomSettingsOnStart;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool RandomHairOnStart;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool RandomHairOnChange;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnSkinChanged;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private HumanoidSettingsManager _humanoidSettingsManager;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private HumanoidSettings _currentSettings;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SyncVar(hook = "HumanoidSettingsIndexHook")]
	private int _humanoidSettingsIndex;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SyncVar(hook = "HumanoidSettingsHairIndexHook")]
	private int _humanoidSettingsHairIndex;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Body Settings")]
	[SerializeField]
	private SkinnedMeshRenderer _bodySkin;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SkinnedMeshRenderer _clothSkin;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform[] _nameTagObjects;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform[] _leftWristObjects;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform[] _rightWristObjects;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Hair Settings")]
	[SerializeField]
	private Transform _hairObject;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private MeshFilter _hairMeshFilter;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform _leftEyebrowObject;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Transform _rightEyebrowObject;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Eyes Settings")]
	[SerializeField]
	private Transform _leftEyeball;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Transform _rightEyeball;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private EyeAndHeadAnimator _eyesController;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[Header("Mouth Settings")]
	private Transform _teethObject;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private FollowBlendshape _teethController;

	[Token(Token = "0x1700032C")]
	public HumanoidSettings CurrentSettings
	{
		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1225888", Offset = "0x1225888", VA = "0x1225888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032D")]
	public int Network_humanoidSettingsIndex
	{
		[Token(Token = "0x6001736")]
		[Address(RVA = "0x1228238", Offset = "0x1228238", VA = "0x1228238")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1228240", Offset = "0x1228240", VA = "0x1228240")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x1700032E")]
	public int Network_humanoidSettingsHairIndex
	{
		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1228358", Offset = "0x1228358", VA = "0x1228358")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1228360", Offset = "0x1228360", VA = "0x1228360")]
		[param: In]
		set
		{
		}
	}

	[Token(Token = "0x6001728")]
	[Address(RVA = "0x1225890", Offset = "0x1225890", VA = "0x1225890")]
	private void Start()
	{
	}

	[Token(Token = "0x6001729")]
	[Address(RVA = "0x1225A80", Offset = "0x1225A80", VA = "0x1225A80")]
	private void HumanoidSettingsIndexHook(int oldValue, int newValue)
	{
	}

	[Token(Token = "0x600172A")]
	[Address(RVA = "0x12259BC", Offset = "0x12259BC", VA = "0x12259BC")]
	public void SetHumanoidSettings(HumanoidSettings humanoidSettings)
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0x1225BC4", Offset = "0x1225BC4", VA = "0x1225BC4")]
	[Command]
	public void CmdSetHumanoidSettings(int settingsIndex)
	{
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0x1225B14", Offset = "0x1225B14", VA = "0x1225B14")]
	private void doSetHumanoidSettings(HumanoidSettings humanoidSettings)
	{
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0x1226188", Offset = "0x1226188", VA = "0x1226188")]
	private void HumanoidSettingsHairIndexHook(int oldValue, int newValue)
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0x1225A44", Offset = "0x1225A44", VA = "0x1225A44")]
	public void SetHumanoidSettingsHair(int hairIndex)
	{
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0x12262DC", Offset = "0x12262DC", VA = "0x12262DC")]
	[Command]
	public void CmdSetHumanoidSettingsHair(int hairIndex)
	{
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0x1226408", Offset = "0x1226408", VA = "0x1226408")]
	[ContextMenu("Apply Current Settings")]
	public void ApplyCurrentSettings()
	{
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0x1225CF0", Offset = "0x1225CF0", VA = "0x1225CF0")]
	public void ApplyHumanoidSettings(HumanoidSettings settings)
	{
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0x1226248", Offset = "0x1226248", VA = "0x1226248")]
	public void ApplyHumanoidSettingsHair(Mesh hairMesh)
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0x1227A9C", Offset = "0x1227A9C", VA = "0x1227A9C")]
	[ContextMenu("Export Humanoid Settings")]
	public void ExportHumanoidSettings()
	{
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0x1228224", Offset = "0x1228224", VA = "0x1228224")]
	public PlayerAvatarCustomization()
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0x1228234", Offset = "0x1228234", VA = "0x1228234")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600173A")]
	[Address(RVA = "0x1228478", Offset = "0x1228478", VA = "0x1228478")]
	protected void UserCode_CmdSetHumanoidSettings(int settingsIndex)
	{
	}

	[Token(Token = "0x600173B")]
	[Address(RVA = "0x1228538", Offset = "0x1228538", VA = "0x1228538")]
	protected static void InvokeUserCode_CmdSetHumanoidSettings(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0x12286B0", Offset = "0x12286B0", VA = "0x12286B0")]
	protected void UserCode_CmdSetHumanoidSettingsHair(int hairIndex)
	{
	}

	[Token(Token = "0x600173D")]
	[Address(RVA = "0x12287AC", Offset = "0x12287AC", VA = "0x12287AC")]
	protected static void InvokeUserCode_CmdSetHumanoidSettingsHair(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600173E")]
	[Address(RVA = "0x1228924", Offset = "0x1228924", VA = "0x1228924")]
	static PlayerAvatarCustomization()
	{
	}

	[Token(Token = "0x600173F")]
	[Address(RVA = "0x1228AB8", Offset = "0x1228AB8", VA = "0x1228AB8", Slot = "6")]
	public override bool SerializeSyncVars(NetworkWriter writer, bool forceAll)
	{
		return default(bool);
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x1228BD8", Offset = "0x1228BD8", VA = "0x1228BD8", Slot = "7")]
	public override void DeserializeSyncVars(NetworkReader reader, bool initialState)
	{
	}
}
[Token(Token = "0x2000360")]
public class PlayerDeviceRigSystem : NetworkBehaviour
{
	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _deviceRigRoot;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform _leftEyeAnchor;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform _centerAnchor;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform _rightEyeAnchor;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DeviceRigManager _localDeviceRig;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform _localLeftEyeAnchor;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _localCenterAnchor;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform _localRightEyeAnchor;

	[Token(Token = "0x1700032F")]
	public GameObject DeviceRigRoot
	{
		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1228D94", Offset = "0x1228D94", VA = "0x1228D94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000330")]
	public Transform LeftEyeAnchor
	{
		[Token(Token = "0x6001742")]
		[Address(RVA = "0x1228D9C", Offset = "0x1228D9C", VA = "0x1228D9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000331")]
	public Transform CenterAnchor
	{
		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1228DA4", Offset = "0x1228DA4", VA = "0x1228DA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000332")]
	public Transform RightEyeAnchor
	{
		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1228DAC", Offset = "0x1228DAC", VA = "0x1228DAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0x1228DB4", Offset = "0x1228DB4", VA = "0x1228DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0x1228E80", Offset = "0x1228E80", VA = "0x1228E80")]
	public void GetLocalEyeAnchorReferences()
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0x1228F00", Offset = "0x1228F00", VA = "0x1228F00")]
	public void DoUpdateEyeAnchorsTransform()
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0x1229034", Offset = "0x1229034", VA = "0x1229034")]
	[Command]
	public void CmdUpdateEyeAnchorsTransform(Vector3 leftAnchorPosition, Quaternion leftAnchorRotation, Vector3 centerAnchorPosition, Quaternion centerAnchorRotation, Vector3 rightAnchorPosition, Quaternion rightAnchorRotation)
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0x1229270", Offset = "0x1229270", VA = "0x1229270")]
	[ClientRpc]
	public void RpcUpdateEyeAnchorsTransform(Vector3 leftAnchorPosition, Quaternion leftAnchorRotation, Vector3 centerAnchorPosition, Quaternion centerAnchorRotation, Vector3 rightAnchorPosition, Quaternion rightAnchorRotation)
	{
	}

	[Token(Token = "0x600174A")]
	[Address(RVA = "0x12294AC", Offset = "0x12294AC", VA = "0x12294AC")]
	public void UpdateEyeAnchorsTransform(Vector3 leftAnchorPosition, Quaternion leftAnchorRotation, Vector3 centerAnchorPosition, Quaternion centerAnchorRotation, Vector3 rightAnchorPosition, Quaternion rightAnchorRotation)
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0x12295E4", Offset = "0x12295E4", VA = "0x12295E4")]
	public PlayerDeviceRigSystem()
	{
	}

	[Token(Token = "0x600174C")]
	[Address(RVA = "0x12295EC", Offset = "0x12295EC", VA = "0x12295EC")]
	private void MirrorProcessed()
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0x12295F0", Offset = "0x12295F0", VA = "0x12295F0")]
	protected void UserCode_CmdUpdateEyeAnchorsTransform(Vector3 leftAnchorPosition, Quaternion leftAnchorRotation, Vector3 centerAnchorPosition, Quaternion centerAnchorRotation, Vector3 rightAnchorPosition, Quaternion rightAnchorRotation)
	{
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0x1229734", Offset = "0x1229734", VA = "0x1229734")]
	protected static void InvokeUserCode_CmdUpdateEyeAnchorsTransform(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0x1229988", Offset = "0x1229988", VA = "0x1229988")]
	protected void UserCode_RpcUpdateEyeAnchorsTransform(Vector3 leftAnchorPosition, Quaternion leftAnchorRotation, Vector3 centerAnchorPosition, Quaternion centerAnchorRotation, Vector3 rightAnchorPosition, Quaternion rightAnchorRotation)
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0x12299BC", Offset = "0x12299BC", VA = "0x12299BC")]
	protected static void InvokeUserCode_RpcUpdateEyeAnchorsTransform(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0x1229BDC", Offset = "0x1229BDC", VA = "0x1229BDC")]
	static PlayerDeviceRigSystem()
	{
	}
}
[Token(Token = "0x2000361")]
public class PlayerLookAtSystem : NetworkBehaviour
{
	[Serializable]
	[Token(Token = "0x2000362")]
	public class LookAtSettings
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _blindspotVerticalMin;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _blindspotVerticalMax;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blindspotHorizontalMin;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _blindspotHorizontalMax;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _distanceToPlayerMin;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _distanceToPlayerMax;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _maxSoundLevel;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _distanceToPlayerNormalizer;

		[Token(Token = "0x17000333")]
		public float BlindspotVerticalMin
		{
			[Token(Token = "0x600175B")]
			[Address(RVA = "0x122AF38", Offset = "0x122AF38", VA = "0x122AF38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000334")]
		public float BlindspotVerticalMax
		{
			[Token(Token = "0x600175C")]
			[Address(RVA = "0x122AF40", Offset = "0x122AF40", VA = "0x122AF40")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000335")]
		public float BlindspotHorizontalMin
		{
			[Token(Token = "0x600175D")]
			[Address(RVA = "0x122AF48", Offset = "0x122AF48", VA = "0x122AF48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000336")]
		public float BlindspotHorizontalMax
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0x122AF50", Offset = "0x122AF50", VA = "0x122AF50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000337")]
		public float DistanceToPlayerMin
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0x122AF58", Offset = "0x122AF58", VA = "0x122AF58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000338")]
		public float DistanceToPlayerMax
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0x122AF60", Offset = "0x122AF60", VA = "0x122AF60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000339")]
		public float DistanceToPlayerNormalizer
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0x122AF68", Offset = "0x122AF68", VA = "0x122AF68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700033A")]
		public float MaxSoundLevel
		{
			[Token(Token = "0x6001762")]
			[Address(RVA = "0x122AF70", Offset = "0x122AF70", VA = "0x122AF70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x122A398", Offset = "0x122A398", VA = "0x122A398")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x122AF78", Offset = "0x122AF78", VA = "0x122AF78")]
		public LookAtSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000363")]
	public class PlayerLookAtTarget
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DissonanceLipsync _soundController;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _playerToTargetVector;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _proximityFactor;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _volumeFactor;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly LookAtSettings _lookAtSettings;

		[Token(Token = "0x1700033B")]
		public Transform PlayerTransform
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x122AFA4", Offset = "0x122AFA4", VA = "0x122AFA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x122AFAC", Offset = "0x122AFAC", VA = "0x122AFAC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public float LookAtFactor
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x122AFB4", Offset = "0x122AFB4", VA = "0x122AFB4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x122AFBC", Offset = "0x122AFBC", VA = "0x122AFBC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public bool IsLocalPlayer
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x122AFC4", Offset = "0x122AFC4", VA = "0x122AFC4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x122AFCC", Offset = "0x122AFCC", VA = "0x122AFCC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public float ProximityFactor
		{
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x122AFD8", Offset = "0x122AFD8", VA = "0x122AFD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700033F")]
		public float VolumeFactor
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x122AFE0", Offset = "0x122AFE0", VA = "0x122AFE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x122AD28", Offset = "0x122AD28", VA = "0x122AD28")]
		public PlayerLookAtTarget(Transform playerTransform, LookAtSettings lookAtSettings)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x122AB5C", Offset = "0x122AB5C", VA = "0x122AB5C")]
		public void UpdateLookAtFactor(Transform lookingPlayerTransform)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x122AFE8", Offset = "0x122AFE8", VA = "0x122AFE8")]
		private bool isInFieldOfView(Transform lookingPlayerTransform)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000364")]
	[CompilerGenerated]
	private sealed class <updateLookAtPlayersCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerLookAtSystem <>4__this;

		[Token(Token = "0x17000340")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x122B1B4", Offset = "0x122B1B4", VA = "0x122B1B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x122B1FC", Offset = "0x122B1FC", VA = "0x122B1FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x122A8C8", Offset = "0x122A8C8", VA = "0x122A8C8")]
		[DebuggerHidden]
		public <updateLookAtPlayersCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x122B150", Offset = "0x122B150", VA = "0x122B150", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x122B154", Offset = "0x122B154", VA = "0x122B154", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x122B1BC", Offset = "0x122B1BC", VA = "0x122B1BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LookTargetController LookAtController;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LookAtSettings Settings;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float RefreshTime;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float LookAtFactorThreshold;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DissonanceLipsync SpeechController;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro DebugTextMesh;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AvatarsManager _avatarsManager;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<PlayerLookAtTarget> _lookAtTargets;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _currentMaxFactorTargetIndex;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _currentMaxFactor;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WaitForSeconds _updateYieldInstruction;

	[Token(Token = "0x6001752")]
	[Address(RVA = "0x1229D6C", Offset = "0x1229D6C", VA = "0x1229D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0x122A7C8", Offset = "0x122A7C8", VA = "0x122A7C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0x122A754", Offset = "0x122A754", VA = "0x122A754")]
	[IteratorStateMachine(typeof(<updateLookAtPlayersCoroutine>d__15))]
	private IEnumerator updateLookAtPlayersCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0x122A8F0", Offset = "0x122A8F0", VA = "0x122A8F0")]
	public void UpdateLookAtPlayers()
	{
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0x122A11C", Offset = "0x122A11C", VA = "0x122A11C")]
	private string getLookAtTargetLog(PlayerLookAtTarget lookAtTarget)
	{
		return null;
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0x122AD24", Offset = "0x122AD24", VA = "0x122AD24")]
	private void onAvatarsUpdated(SyncList<GameObject>.Operation op, int itemIndex, GameObject oldItem, GameObject newItem)
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x122A3B8", Offset = "0x122A3B8", VA = "0x122A3B8")]
	private void updateLookAtTargetsList()
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x122AF20", Offset = "0x122AF20", VA = "0x122AF20")]
	public PlayerLookAtSystem()
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x122AF34", Offset = "0x122AF34", VA = "0x122AF34")]
	private void MirrorProcessed()
	{
	}
}
[Token(Token = "0x2000365")]
public class RealTimeDisplay : MonoBehaviour
{
	[Token(Token = "0x2000366")]
	[CompilerGenerated]
	private sealed class <GetTime>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToWait;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RealTimeDisplay <>4__this;

		[Token(Token = "0x17000342")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0x122B948", Offset = "0x122B948", VA = "0x122B948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0x122B990", Offset = "0x122B990", VA = "0x122B990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x122B44C", Offset = "0x122B44C", VA = "0x122B44C")]
		[DebuggerHidden]
		public <GetTime>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x122B7F0", Offset = "0x122B7F0", VA = "0x122B7F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x122B7F4", Offset = "0x122B7F4", VA = "0x122B7F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x122B950", Offset = "0x122B950", VA = "0x122B950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Time")]
	public DateTime CurrentDateTime;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _currentTime;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool AMPMDisplayType;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public rcStringGameParameter CountryCodeParameter;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] AMPMCountryCode;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Display")]
	public TextMeshProUGUI DisplayTimeText;

	[Token(Token = "0x6001776")]
	[Address(RVA = "0x122B204", Offset = "0x122B204", VA = "0x122B204")]
	private void Start()
	{
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0x122B3C8", Offset = "0x122B3C8", VA = "0x122B3C8")]
	[IteratorStateMachine(typeof(<GetTime>d__7))]
	private IEnumerator GetTime(float TimeToWait)
	{
		return null;
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0x122B474", Offset = "0x122B474", VA = "0x122B474")]
	private void updateDisplay(DateTime time, bool am, bool amDisplayType)
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0x122B5B0", Offset = "0x122B5B0", VA = "0x122B5B0")]
	[ContextMenu("Update Display Type")]
	private void UpdateDisplayTypeFromEditor()
	{
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0x122B33C", Offset = "0x122B33C", VA = "0x122B33C")]
	public void UpdateDisplayType(string toValue, string fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0x122B5FC", Offset = "0x122B5FC", VA = "0x122B5FC")]
	public RealTimeDisplay()
	{
	}
}
[Token(Token = "0x2000367")]
public class AppSpaceWarpManager : MonoBehaviour
{
	[Token(Token = "0x6001782")]
	[Address(RVA = "0x122B998", Offset = "0x122B998", VA = "0x122B998")]
	private void Start()
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x122B99C", Offset = "0x122B99C", VA = "0x122B99C")]
	public AppSpaceWarpManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000368")]
[CreateAssetMenu(fileName = "LocalizedFont", menuName = "GBA/Localization/Localized Font")]
public class LocalizedFont : rcLocalizedAsset
{
	[Token(Token = "0x17000344")]
	public new TMP_FontAsset Data
	{
		[Token(Token = "0x6001784")]
		[Address(RVA = "0x122B9A4", Offset = "0x122B9A4", VA = "0x122B9A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0x122BA64", Offset = "0x122BA64", VA = "0x122BA64")]
	public LocalizedFont()
	{
	}
}
[Token(Token = "0x2000369")]
public class LocalizedFontTextMeshPro : MonoBehaviour
{
	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizedFont _localizedFont;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TMP_Text _textMesh;

	[Token(Token = "0x6001786")]
	[Address(RVA = "0x122BA6C", Offset = "0x122BA6C", VA = "0x122BA6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0x122BC4C", Offset = "0x122BC4C", VA = "0x122BC4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0x122BC18", Offset = "0x122BC18", VA = "0x122BC18")]
	private void onLanguageUpdated()
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0x122BD6C", Offset = "0x122BD6C", VA = "0x122BD6C")]
	public LocalizedFontTextMeshPro()
	{
	}
}
[Token(Token = "0x200036A")]
public class LogManager : MonoBehaviour
{
	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LogEnabled;

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x122BD74", Offset = "0x122BD74", VA = "0x122BD74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x122BE84", Offset = "0x122BE84", VA = "0x122BE84")]
	public LogManager()
	{
	}
}
[Token(Token = "0x200036B")]
public class ParametersValueCheck : MonoBehaviour
{
	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Game Parameters")]
	[SerializeField]
	private ParameterValueCheck<bool>[] _boolParameters;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParameterValueCheck<int>[] _intParameters;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParameterValueCheck<float>[] _floatParameters;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ParameterValueCheck<string>[] _stringParameters;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParameterValueCheck<Vector3>[] _vector3Parameters;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParameterValueCheck<Quaternion>[] _quatParameters;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParameterValueCheck<Transform>[] _transformParameters;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParameterValueCheck<GameObject>[] _gameObjectParameters;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[Header("Conditions Events")]
	private bool _raiseOnEnable;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	private bool _raiseOnce;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UnityEvent _onConditionsMetEvent;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent _onConditionsUnmetEvent;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("DEBUG")]
	[SerializeField]
	private bool _enableLogs;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _conditionsMet;

	[Token(Token = "0x600178C")]
	[Address(RVA = "0x122BE94", Offset = "0x122BE94", VA = "0x122BE94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x122C800", Offset = "0x122C800", VA = "0x122C800")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x122BEE0", Offset = "0x122BEE0", VA = "0x122BEE0")]
	private void startListening()
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0x122C808", Offset = "0x122C808", VA = "0x122C808")]
	private void stopListening()
	{
	}

	[Token(Token = "0x6001790")]
	private void checkConditions<T>(T toValue, T fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0x122C4D4", Offset = "0x122C4D4", VA = "0x122C4D4")]
	private bool checkConditionsMet()
	{
		return default(bool);
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0x122C7B8", Offset = "0x122C7B8", VA = "0x122C7B8")]
	private void raiseConditionsMetEvent()
	{
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0x122C7EC", Offset = "0x122C7EC", VA = "0x122C7EC")]
	private void raiseConditionsUnmetEvent()
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0x122CDFC", Offset = "0x122CDFC", VA = "0x122CDFC")]
	[Conditional("RC_ENABLE_LOGS")]
	private void logParametersValues()
	{
	}

	[Token(Token = "0x6001795")]
	[Conditional("RC_ENABLE_LOGS")]
	private void appendParameterLog<T>(ParameterValueCheck<T> parameter, ref StringBuilder logBuilder)
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0x122CF14", Offset = "0x122CF14", VA = "0x122CF14")]
	public ParametersValueCheck()
	{
	}
}
[Serializable]
[Token(Token = "0x200036C")]
public struct ParameterValueCheck<T>
{
	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private rcGameParameter<T> _gameParameter;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T _targetValue;

	[Token(Token = "0x17000345")]
	public T TargetValue
	{
		[Token(Token = "0x6001797")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x17000346")]
	public T CurrentValue
	{
		[Token(Token = "0x6001798")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x17000347")]
	public bool IsTargetValue
	{
		[Token(Token = "0x6001799")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000348")]
	public string ParameterName
	{
		[Token(Token = "0x600179A")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600179B")]
	public void SubscribeToValueUpdate(rcGameParameter<T>.OnValueChanged onValueChanged)
	{
	}

	[Token(Token = "0x600179C")]
	public void UnsubscribeFromValueUpdate(rcGameParameter<T>.OnValueChanged onValueChanged)
	{
	}
}
[Token(Token = "0x200036D")]
public class ParameterValueCheckResponse<T, U> : rcGameParameterResponse<T> where T : rcGameParameter<U> where U : IComparable
{
	[StructLayout(3)]
	[Token(Token = "0x200036E")]
	[CompilerGenerated]
	private struct <OnGameParameterUpdated>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ParameterValueCheckResponse<T, U> <>4__this;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public U toValue;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60017A1")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60017A2")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public U TargetValue;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnityEvent OnEqualsTarget;

	[Token(Token = "0x600179D")]
	public override void AddObserverResponse()
	{
	}

	[Token(Token = "0x600179E")]
	public override void RemoveObserverResponse()
	{
	}

	[Token(Token = "0x600179F")]
	[AsyncStateMachine(typeof(ParameterValueCheckResponse<, >.<OnGameParameterUpdated>d__4))]
	private void OnGameParameterUpdated(U toValue, U fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60017A0")]
	public ParameterValueCheckResponse()
	{
	}
}
[Token(Token = "0x200036F")]
public class CameraTeleportManager : MonoBehaviour
{
	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityAction<Vector3, Quaternion> OnTeleport;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Vector3 _currentPositionOffset;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected Quaternion _currentRotationOffset;

	[Token(Token = "0x17000349")]
	public Vector3 CurrentPositionOffset
	{
		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x122CF1C", Offset = "0x122CF1C", VA = "0x122CF1C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700034A")]
	public Quaternion CurrentRotationOffset
	{
		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x122CF28", Offset = "0x122CF28", VA = "0x122CF28")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x122CF34", Offset = "0x122CF34", VA = "0x122CF34", Slot = "4")]
	public virtual bool IsValidTeleportDestination(Vector3 position, Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0x122D014", Offset = "0x122D014", VA = "0x122D014")]
	public void TeleportCamera(Transform destinationTransform)
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0x122D108", Offset = "0x122D108", VA = "0x122D108")]
	public void TeleportCamera(Vector3 worldPosition, Quaternion worldRotation)
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0x122D1E8", Offset = "0x122D1E8", VA = "0x122D1E8", Slot = "5")]
	protected virtual void doTeleport(Vector3 worldPosition, Quaternion worldRotation)
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x122D3E0", Offset = "0x122D3E0", VA = "0x122D3E0")]
	public CameraTeleportManager()
	{
	}
}
[Token(Token = "0x2000370")]
public class OVRCameraTeleportManager : CameraTeleportManager
{
	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _teleportDestinationPosition;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion _teleportDestinationRotation;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _trackingSpace;

	[Token(Token = "0x1700034B")]
	private Transform cacheTrackingSpace
	{
		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x122D478", Offset = "0x122D478", VA = "0x122D478")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x122D480", Offset = "0x122D480", VA = "0x122D480")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x122D564", Offset = "0x122D564", VA = "0x122D564")]
	private void Update()
	{
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x122D674", Offset = "0x122D674", VA = "0x122D674")]
	private void updateTeleportDestination(Vector3 worldPosition, Quaternion worldRotation)
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x122D81C", Offset = "0x122D81C", VA = "0x122D81C", Slot = "4")]
	public override bool IsValidTeleportDestination(Vector3 position, Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x122D894", Offset = "0x122D894", VA = "0x122D894", Slot = "5")]
	protected override void doTeleport(Vector3 worldPosition, Quaternion worldRotation)
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x122D9AC", Offset = "0x122D9AC", VA = "0x122D9AC")]
	public OVRCameraTeleportManager()
	{
	}
}
[Token(Token = "0x2000371")]
public class TeleportEventListener : MonoBehaviour
{
	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _followTeleportation;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent<Vector3, Quaternion> _onTeleportEvent;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraTeleportManager _teleportManager;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _root;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _rootedPositionOrigin;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion _rootedRotationOrigin;

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x122DA40", Offset = "0x122DA40", VA = "0x122DA40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x122DD78", Offset = "0x122DD78", VA = "0x122DD78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x122DEA8", Offset = "0x122DEA8", VA = "0x122DEA8")]
	private void onTeleportEvent(Vector3 worldPosition, Quaternion worldRotation)
	{
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x122E238", Offset = "0x122E238", VA = "0x122E238")]
	public TeleportEventListener()
	{
	}
}
[Token(Token = "0x2000372")]
public class XRInitializationDisplay : MonoBehaviour
{
	[Token(Token = "0x2000373")]
	[CompilerGenerated]
	private sealed class <waitForUserCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRInitializationDisplay <>4__this;

		[Token(Token = "0x1700034C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x122E6A8", Offset = "0x122E6A8", VA = "0x122E6A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x122E6F0", Offset = "0x122E6F0", VA = "0x122E6F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x122E4D0", Offset = "0x122E4D0", VA = "0x122E4D0")]
		[DebuggerHidden]
		public <waitForUserCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x122E614", Offset = "0x122E614", VA = "0x122E614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x122E618", Offset = "0x122E618", VA = "0x122E618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x122E6B0", Offset = "0x122E6B0", VA = "0x122E6B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000374")]
	[CompilerGenerated]
	private sealed class <forceQuitCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRInitializationDisplay <>4__this;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <timer>5__2;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <waitForOneSec>5__3;

		[Token(Token = "0x1700034E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x122E87C", Offset = "0x122E87C", VA = "0x122E87C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x122E8C4", Offset = "0x122E8C4", VA = "0x122E8C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x122E5D4", Offset = "0x122E5D4", VA = "0x122E5D4")]
		[DebuggerHidden]
		public <forceQuitCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x122E6F8", Offset = "0x122E6F8", VA = "0x122E6F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x122E6FC", Offset = "0x122E6FC", VA = "0x122E6FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x122E884", Offset = "0x122E884", VA = "0x122E884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private rcBoolGameParameter _deviceInitializedParameter;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _onHeadsetActivityStarted;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask _displayCullingMask;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _waitForUserCanvas;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _errorCanvas;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI _countdownTextMesh;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Multiline]
	private string _countdownMessage;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Range(0f, 60f)]
	private int _delayBeforeShutdown;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool _disabledInEditor;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GBANetworkManagerConfig _spawnConfig;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera _mainCamera;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine _forceQuitCoroutine;

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x122E2D0", Offset = "0x122E2D0", VA = "0x122E2D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x122E414", Offset = "0x122E414", VA = "0x122E414")]
	public void CheckHeadsetActivity()
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x122E4A8", Offset = "0x122E4A8", VA = "0x122E4A8")]
	private void onXRDeviceInitialized(bool toValue, bool fromValue, UnityEngine.Object changedBy)
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x122E434", Offset = "0x122E434", VA = "0x122E434")]
	[IteratorStateMachine(typeof(<waitForUserCoroutine>d__15))]
	private IEnumerator waitForUserCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x122E4F8", Offset = "0x122E4F8", VA = "0x122E4F8")]
	public void StartForceQuit()
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x122E560", Offset = "0x122E560", VA = "0x122E560")]
	[IteratorStateMachine(typeof(<forceQuitCoroutine>d__17))]
	private IEnumerator forceQuitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x122E5FC", Offset = "0x122E5FC", VA = "0x122E5FC")]
	public XRInitializationDisplay()
	{
	}
}
[Token(Token = "0x2000375")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000350")]
	public static bool Initialized
	{
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x122E8CC", Offset = "0x122E8CC", VA = "0x122E8CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0x122E8D4", Offset = "0x122E8D4", VA = "0x122E8D4")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x2000376")]
public class XRInputsEvents : MonoBehaviour
{
	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private rcXRInputs _inputs;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private rcXRInputs.Feature _userCtrlL;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private rcXRInputs.Feature _userCtrlR;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer _mesh;

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0x122E8DC", Offset = "0x122E8DC", VA = "0x122E8DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0x122E98C", Offset = "0x122E98C", VA = "0x122E98C")]
	private void Update()
	{
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0x122EB18", Offset = "0x122EB18", VA = "0x122EB18")]
	public XRInputsEvents()
	{
	}
}
namespace Unity.VisualScripting.Generated.Aot
{
	[Token(Token = "0x2000377")]
	[Preserve]
	public class AotStubs
	{
		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x11B2E64", Offset = "0x11B2E64", VA = "0x11B2E64")]
		[Preserve]
		public static void string_op_Equality()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x11B2F18", Offset = "0x11B2F18", VA = "0x11B2F18")]
		[Preserve]
		public static void string_op_Inequality()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x11B2FCC", Offset = "0x11B2FCC", VA = "0x11B2FCC")]
		[Preserve]
		public static void float_op_Equality()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x11B30B4", Offset = "0x11B30B4", VA = "0x11B30B4")]
		[Preserve]
		public static void float_op_Inequality()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x11B319C", Offset = "0x11B319C", VA = "0x11B319C")]
		[Preserve]
		public static void float_op_LessThan()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x11B3284", Offset = "0x11B3284", VA = "0x11B3284")]
		[Preserve]
		public static void float_op_GreaterThan()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x11B336C", Offset = "0x11B336C", VA = "0x11B336C")]
		[Preserve]
		public static void float_op_LessThanOrEqual()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x11B3454", Offset = "0x11B3454", VA = "0x11B3454")]
		[Preserve]
		public static void float_op_GreaterThanOrEqual()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x11B353C", Offset = "0x11B353C", VA = "0x11B353C")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshAgent_op_Implicit()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x11B360C", Offset = "0x11B360C", VA = "0x11B360C")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshAgent_op_Equality()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x11B36E4", Offset = "0x11B36E4", VA = "0x11B36E4")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshAgent_op_Inequality()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x11B37BC", Offset = "0x11B37BC", VA = "0x11B37BC")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshObstacle_op_Implicit()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x11B388C", Offset = "0x11B388C", VA = "0x11B388C")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshObstacle_op_Equality()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x11B3964", Offset = "0x11B3964", VA = "0x11B3964")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshObstacle_op_Inequality()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x11B3A3C", Offset = "0x11B3A3C", VA = "0x11B3A3C")]
		[Preserve]
		public static void UnityEngine_AI_OffMeshLink_op_Implicit()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x11B3B0C", Offset = "0x11B3B0C", VA = "0x11B3B0C")]
		[Preserve]
		public static void UnityEngine_AI_OffMeshLink_op_Equality()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x11B3BE4", Offset = "0x11B3BE4", VA = "0x11B3BE4")]
		[Preserve]
		public static void UnityEngine_AI_OffMeshLink_op_Inequality()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x11B3CBC", Offset = "0x11B3CBC", VA = "0x11B3CBC")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshData_op_Implicit()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x11B3D8C", Offset = "0x11B3D8C", VA = "0x11B3D8C")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshData_op_Equality()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x11B3E64", Offset = "0x11B3E64", VA = "0x11B3E64")]
		[Preserve]
		public static void UnityEngine_AI_NavMeshData_op_Inequality()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x11B3F3C", Offset = "0x11B3F3C", VA = "0x11B3F3C")]
		[Preserve]
		public static void UnityEngine_Animator_op_Implicit()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x11B400C", Offset = "0x11B400C", VA = "0x11B400C")]
		[Preserve]
		public static void UnityEngine_Animator_op_Equality()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x11B40E4", Offset = "0x11B40E4", VA = "0x11B40E4")]
		[Preserve]
		public static void UnityEngine_Animator_op_Inequality()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x11B41BC", Offset = "0x11B41BC", VA = "0x11B41BC")]
		[Preserve]
		public static void UnityEngine_Animation_op_Implicit()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x11B428C", Offset = "0x11B428C", VA = "0x11B428C")]
		[Preserve]
		public static void UnityEngine_Animation_op_Equality()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x11B4364", Offset = "0x11B4364", VA = "0x11B4364")]
		[Preserve]
		public static void UnityEngine_Animation_op_Inequality()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x11B443C", Offset = "0x11B443C", VA = "0x11B443C")]
		[Preserve]
		public static void UnityEngine_AnimationClip_op_Implicit()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x11B450C", Offset = "0x11B450C", VA = "0x11B450C")]
		[Preserve]
		public static void UnityEngine_AnimationClip_op_Equality()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x11B45E4", Offset = "0x11B45E4", VA = "0x11B45E4")]
		[Preserve]
		public static void UnityEngine_AnimationClip_op_Inequality()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x11B46BC", Offset = "0x11B46BC", VA = "0x11B46BC")]
		[Preserve]
		public static void UnityEngine_AnimatorOverrideController_op_Implicit()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x11B478C", Offset = "0x11B478C", VA = "0x11B478C")]
		[Preserve]
		public static void UnityEngine_AnimatorOverrideController_op_Equality()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x11B4864", Offset = "0x11B4864", VA = "0x11B4864")]
		[Preserve]
		public static void UnityEngine_AnimatorOverrideController_op_Inequality()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x11B493C", Offset = "0x11B493C", VA = "0x11B493C")]
		[Preserve]
		public static void UnityEngine_Avatar_op_Implicit()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x11B4A0C", Offset = "0x11B4A0C", VA = "0x11B4A0C")]
		[Preserve]
		public static void UnityEngine_Avatar_op_Equality()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x11B4AE4", Offset = "0x11B4AE4", VA = "0x11B4AE4")]
		[Preserve]
		public static void UnityEngine_Avatar_op_Inequality()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x11B4BBC", Offset = "0x11B4BBC", VA = "0x11B4BBC")]
		[Preserve]
		public static void UnityEngine_AvatarMask_op_Implicit()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x11B4C8C", Offset = "0x11B4C8C", VA = "0x11B4C8C")]
		[Preserve]
		public static void UnityEngine_AvatarMask_op_Equality()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x11B4D64", Offset = "0x11B4D64", VA = "0x11B4D64")]
		[Preserve]
		public static void UnityEngine_AvatarMask_op_Inequality()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x11B4E3C", Offset = "0x11B4E3C", VA = "0x11B4E3C")]
		[Preserve]
		public static void UnityEngine_Motion_op_Implicit()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x11B4F0C", Offset = "0x11B4F0C", VA = "0x11B4F0C")]
		[Preserve]
		public static void UnityEngine_Motion_op_Equality()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x11B4FE4", Offset = "0x11B4FE4", VA = "0x11B4FE4")]
		[Preserve]
		public static void UnityEngine_Motion_op_Inequality()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x11B50BC", Offset = "0x11B50BC", VA = "0x11B50BC")]
		[Preserve]
		public static void UnityEngine_RuntimeAnimatorController_op_Implicit()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x11B518C", Offset = "0x11B518C", VA = "0x11B518C")]
		[Preserve]
		public static void UnityEngine_RuntimeAnimatorController_op_Equality()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x11B5264", Offset = "0x11B5264", VA = "0x11B5264")]
		[Preserve]
		public static void UnityEngine_RuntimeAnimatorController_op_Inequality()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x11B533C", Offset = "0x11B533C", VA = "0x11B533C")]
		[Preserve]
		public static void UnityEngine_Animations_AimConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x11B540C", Offset = "0x11B540C", VA = "0x11B540C")]
		[Preserve]
		public static void UnityEngine_Animations_AimConstraint_op_Equality()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x11B54E4", Offset = "0x11B54E4", VA = "0x11B54E4")]
		[Preserve]
		public static void UnityEngine_Animations_AimConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x11B55BC", Offset = "0x11B55BC", VA = "0x11B55BC")]
		[Preserve]
		public static void UnityEngine_Animations_PositionConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x11B568C", Offset = "0x11B568C", VA = "0x11B568C")]
		[Preserve]
		public static void UnityEngine_Animations_PositionConstraint_op_Equality()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x11B5764", Offset = "0x11B5764", VA = "0x11B5764")]
		[Preserve]
		public static void UnityEngine_Animations_PositionConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x11B583C", Offset = "0x11B583C", VA = "0x11B583C")]
		[Preserve]
		public static void UnityEngine_Animations_RotationConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x11B590C", Offset = "0x11B590C", VA = "0x11B590C")]
		[Preserve]
		public static void UnityEngine_Animations_RotationConstraint_op_Equality()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x11B59E4", Offset = "0x11B59E4", VA = "0x11B59E4")]
		[Preserve]
		public static void UnityEngine_Animations_RotationConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x11B5ABC", Offset = "0x11B5ABC", VA = "0x11B5ABC")]
		[Preserve]
		public static void UnityEngine_Animations_ScaleConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x11B5B8C", Offset = "0x11B5B8C", VA = "0x11B5B8C")]
		[Preserve]
		public static void UnityEngine_Animations_ScaleConstraint_op_Equality()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x11B5C64", Offset = "0x11B5C64", VA = "0x11B5C64")]
		[Preserve]
		public static void UnityEngine_Animations_ScaleConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x11B5D3C", Offset = "0x11B5D3C", VA = "0x11B5D3C")]
		[Preserve]
		public static void UnityEngine_Animations_LookAtConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x11B5E0C", Offset = "0x11B5E0C", VA = "0x11B5E0C")]
		[Preserve]
		public static void UnityEngine_Animations_LookAtConstraint_op_Equality()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x11B5EE4", Offset = "0x11B5EE4", VA = "0x11B5EE4")]
		[Preserve]
		public static void UnityEngine_Animations_LookAtConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x11B5FBC", Offset = "0x11B5FBC", VA = "0x11B5FBC")]
		[Preserve]
		public static void UnityEngine_Animations_ParentConstraint_op_Implicit()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x11B608C", Offset = "0x11B608C", VA = "0x11B608C")]
		[Preserve]
		public static void UnityEngine_Animations_ParentConstraint_op_Equality()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x11B6164", Offset = "0x11B6164", VA = "0x11B6164")]
		[Preserve]
		public static void UnityEngine_Animations_ParentConstraint_op_Inequality()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x11B623C", Offset = "0x11B623C", VA = "0x11B623C")]
		[Preserve]
		public static void UnityEngine_AssetBundle_op_Implicit()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x11B630C", Offset = "0x11B630C", VA = "0x11B630C")]
		[Preserve]
		public static void UnityEngine_AssetBundle_op_Equality()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x11B63E4", Offset = "0x11B63E4", VA = "0x11B63E4")]
		[Preserve]
		public static void UnityEngine_AssetBundle_op_Inequality()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x11B64BC", Offset = "0x11B64BC", VA = "0x11B64BC")]
		[Preserve]
		public static void UnityEngine_AssetBundleManifest_op_Implicit()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x11B658C", Offset = "0x11B658C", VA = "0x11B658C")]
		[Preserve]
		public static void UnityEngine_AssetBundleManifest_op_Equality()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x11B6664", Offset = "0x11B6664", VA = "0x11B6664")]
		[Preserve]
		public static void UnityEngine_AssetBundleManifest_op_Inequality()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x11B673C", Offset = "0x11B673C", VA = "0x11B673C")]
		[Preserve]
		public static void UnityEngine_AudioSource_op_Implicit()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x11B680C", Offset = "0x11B680C", VA = "0x11B680C")]
		[Preserve]
		public static void UnityEngine_AudioSource_op_Equality()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x11B68E4", Offset = "0x11B68E4", VA = "0x11B68E4")]
		[Preserve]
		public static void UnityEngine_AudioSource_op_Inequality()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x11B69BC", Offset = "0x11B69BC", VA = "0x11B69BC")]
		[Preserve]
		public static void UnityEngine_AudioLowPassFilter_op_Implicit()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x11B6A8C", Offset = "0x11B6A8C", VA = "0x11B6A8C")]
		[Preserve]
		public static void UnityEngine_AudioLowPassFilter_op_Equality()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x11B6B64", Offset = "0x11B6B64", VA = "0x11B6B64")]
		[Preserve]
		public static void UnityEngine_AudioLowPassFilter_op_Inequality()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x11B6C3C", Offset = "0x11B6C3C", VA = "0x11B6C3C")]
		[Preserve]
		public static void UnityEngine_AudioHighPassFilter_op_Implicit()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x11B6D0C", Offset = "0x11B6D0C", VA = "0x11B6D0C")]
		[Preserve]
		public static void UnityEngine_AudioHighPassFilter_op_Equality()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x11B6DE4", Offset = "0x11B6DE4", VA = "0x11B6DE4")]
		[Preserve]
		public static void UnityEngine_AudioHighPassFilter_op_Inequality()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x11B6EBC", Offset = "0x11B6EBC", VA = "0x11B6EBC")]
		[Preserve]
		public static void UnityEngine_AudioReverbFilter_op_Implicit()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x11B6F8C", Offset = "0x11B6F8C", VA = "0x11B6F8C")]
		[Preserve]
		public static void UnityEngine_AudioReverbFilter_op_Equality()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x11B7064", Offset = "0x11B7064", VA = "0x11B7064")]
		[Preserve]
		public static void UnityEngine_AudioReverbFilter_op_Inequality()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x11B713C", Offset = "0x11B713C", VA = "0x11B713C")]
		[Preserve]
		public static void UnityEngine_AudioClip_op_Implicit()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x11B720C", Offset = "0x11B720C", VA = "0x11B720C")]
		[Preserve]
		public static void UnityEngine_AudioClip_op_Equality()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x11B72E4", Offset = "0x11B72E4", VA = "0x11B72E4")]
		[Preserve]
		public static void UnityEngine_AudioClip_op_Inequality()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x11B73BC", Offset = "0x11B73BC", VA = "0x11B73BC")]
		[Preserve]
		public static void UnityEngine_AudioBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x11B748C", Offset = "0x11B748C", VA = "0x11B748C")]
		[Preserve]
		public static void UnityEngine_AudioBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x11B7564", Offset = "0x11B7564", VA = "0x11B7564")]
		[Preserve]
		public static void UnityEngine_AudioBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x11B763C", Offset = "0x11B763C", VA = "0x11B763C")]
		[Preserve]
		public static void UnityEngine_AudioListener_op_Implicit()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x11B770C", Offset = "0x11B770C", VA = "0x11B770C")]
		[Preserve]
		public static void UnityEngine_AudioListener_op_Equality()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x11B77E4", Offset = "0x11B77E4", VA = "0x11B77E4")]
		[Preserve]
		public static void UnityEngine_AudioListener_op_Inequality()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x11B78BC", Offset = "0x11B78BC", VA = "0x11B78BC")]
		[Preserve]
		public static void UnityEngine_AudioReverbZone_op_Implicit()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x11B798C", Offset = "0x11B798C", VA = "0x11B798C")]
		[Preserve]
		public static void UnityEngine_AudioReverbZone_op_Equality()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x11B7A64", Offset = "0x11B7A64", VA = "0x11B7A64")]
		[Preserve]
		public static void UnityEngine_AudioReverbZone_op_Inequality()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x11B7B3C", Offset = "0x11B7B3C", VA = "0x11B7B3C")]
		[Preserve]
		public static void UnityEngine_AudioDistortionFilter_op_Implicit()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x11B7C0C", Offset = "0x11B7C0C", VA = "0x11B7C0C")]
		[Preserve]
		public static void UnityEngine_AudioDistortionFilter_op_Equality()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x11B7CE4", Offset = "0x11B7CE4", VA = "0x11B7CE4")]
		[Preserve]
		public static void UnityEngine_AudioDistortionFilter_op_Inequality()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x11B7DBC", Offset = "0x11B7DBC", VA = "0x11B7DBC")]
		[Preserve]
		public static void UnityEngine_AudioEchoFilter_op_Implicit()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x11B7E8C", Offset = "0x11B7E8C", VA = "0x11B7E8C")]
		[Preserve]
		public static void UnityEngine_AudioEchoFilter_op_Equality()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x11B7F64", Offset = "0x11B7F64", VA = "0x11B7F64")]
		[Preserve]
		public static void UnityEngine_AudioEchoFilter_op_Inequality()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x11B803C", Offset = "0x11B803C", VA = "0x11B803C")]
		[Preserve]
		public static void UnityEngine_AudioChorusFilter_op_Implicit()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x11B810C", Offset = "0x11B810C", VA = "0x11B810C")]
		[Preserve]
		public static void UnityEngine_AudioChorusFilter_op_Equality()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x11B81E4", Offset = "0x11B81E4", VA = "0x11B81E4")]
		[Preserve]
		public static void UnityEngine_AudioChorusFilter_op_Inequality()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x11B82BC", Offset = "0x11B82BC", VA = "0x11B82BC")]
		[Preserve]
		public static void UnityEngine_WebCamTexture_op_Implicit()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x11B838C", Offset = "0x11B838C", VA = "0x11B838C")]
		[Preserve]
		public static void UnityEngine_WebCamTexture_op_Equality()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x11B8464", Offset = "0x11B8464", VA = "0x11B8464")]
		[Preserve]
		public static void UnityEngine_WebCamTexture_op_Inequality()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x11B853C", Offset = "0x11B853C", VA = "0x11B853C")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixer_op_Implicit()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x11B860C", Offset = "0x11B860C", VA = "0x11B860C")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixer_op_Equality()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x11B86E4", Offset = "0x11B86E4", VA = "0x11B86E4")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixer_op_Inequality()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x11B87BC", Offset = "0x11B87BC", VA = "0x11B87BC")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x11B888C", Offset = "0x11B888C", VA = "0x11B888C")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Equality()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x11B8964", Offset = "0x11B8964", VA = "0x11B8964")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Inequality()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x11B8A3C", Offset = "0x11B8A3C", VA = "0x11B8A3C")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Implicit()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x11B8B0C", Offset = "0x11B8B0C", VA = "0x11B8B0C")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Equality()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x11B8BE4", Offset = "0x11B8BE4", VA = "0x11B8BE4")]
		[Preserve]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Inequality()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x11B8CBC", Offset = "0x11B8CBC", VA = "0x11B8CBC")]
		[Preserve]
		public static void UnityEngine_Cloth_op_Implicit()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x11B8D8C", Offset = "0x11B8D8C", VA = "0x11B8D8C")]
		[Preserve]
		public static void UnityEngine_Cloth_op_Equality()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x11B8E64", Offset = "0x11B8E64", VA = "0x11B8E64")]
		[Preserve]
		public static void UnityEngine_Cloth_op_Inequality()
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x11B8F3C", Offset = "0x11B8F3C", VA = "0x11B8F3C")]
		[Preserve]
		public static void UnityEngine_Camera_op_Implicit()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x11B900C", Offset = "0x11B900C", VA = "0x11B900C")]
		[Preserve]
		public static void UnityEngine_Camera_op_Equality()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x11B90E4", Offset = "0x11B90E4", VA = "0x11B90E4")]
		[Preserve]
		public static void UnityEngine_Camera_op_Inequality()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x11B91BC", Offset = "0x11B91BC", VA = "0x11B91BC")]
		[Preserve]
		public static void UnityEngine_FlareLayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x11B928C", Offset = "0x11B928C", VA = "0x11B928C")]
		[Preserve]
		public static void UnityEngine_FlareLayer_op_Equality()
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x11B9364", Offset = "0x11B9364", VA = "0x11B9364")]
		[Preserve]
		public static void UnityEngine_FlareLayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x11B943C", Offset = "0x11B943C", VA = "0x11B943C")]
		[Preserve]
		public static void UnityEngine_ReflectionProbe_op_Implicit()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x11B950C", Offset = "0x11B950C", VA = "0x11B950C")]
		[Preserve]
		public static void UnityEngine_ReflectionProbe_op_Equality()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x11B95E4", Offset = "0x11B95E4", VA = "0x11B95E4")]
		[Preserve]
		public static void UnityEngine_ReflectionProbe_op_Inequality()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x11B96BC", Offset = "0x11B96BC", VA = "0x11B96BC")]
		[Preserve]
		public static void UnityEngine_Bounds_op_Equality()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x11B97EC", Offset = "0x11B97EC", VA = "0x11B97EC")]
		[Preserve]
		public static void UnityEngine_Bounds_op_Inequality()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x11B991C", Offset = "0x11B991C", VA = "0x11B991C")]
		[Preserve]
		public static void UnityEngine_Rect_op_Inequality()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x11B9A2C", Offset = "0x11B9A2C", VA = "0x11B9A2C")]
		[Preserve]
		public static void UnityEngine_Rect_op_Equality()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x11B9B3C", Offset = "0x11B9B3C", VA = "0x11B9B3C")]
		[Preserve]
		public static void UnityEngine_LightingSettings_op_Implicit()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x11B9C0C", Offset = "0x11B9C0C", VA = "0x11B9C0C")]
		[Preserve]
		public static void UnityEngine_LightingSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x11B9CE4", Offset = "0x11B9CE4", VA = "0x11B9CE4")]
		[Preserve]
		public static void UnityEngine_LightingSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x11B9DBC", Offset = "0x11B9DBC", VA = "0x11B9DBC")]
		[Preserve]
		public static void UnityEngine_BillboardAsset_op_Implicit()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x11B9E8C", Offset = "0x11B9E8C", VA = "0x11B9E8C")]
		[Preserve]
		public static void UnityEngine_BillboardAsset_op_Equality()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x11B9F64", Offset = "0x11B9F64", VA = "0x11B9F64")]
		[Preserve]
		public static void UnityEngine_BillboardAsset_op_Inequality()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x11BA03C", Offset = "0x11BA03C", VA = "0x11BA03C")]
		[Preserve]
		public static void UnityEngine_BillboardRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x11BA10C", Offset = "0x11BA10C", VA = "0x11BA10C")]
		[Preserve]
		public static void UnityEngine_BillboardRenderer_op_Equality()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x11BA1E4", Offset = "0x11BA1E4", VA = "0x11BA1E4")]
		[Preserve]
		public static void UnityEngine_BillboardRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x11BA2BC", Offset = "0x11BA2BC", VA = "0x11BA2BC")]
		[Preserve]
		public static void UnityEngine_LightmapSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x11BA38C", Offset = "0x11BA38C", VA = "0x11BA38C")]
		[Preserve]
		public static void UnityEngine_LightmapSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x11BA464", Offset = "0x11BA464", VA = "0x11BA464")]
		[Preserve]
		public static void UnityEngine_LightmapSettings_op_Inequality()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x11BA53C", Offset = "0x11BA53C", VA = "0x11BA53C")]
		[Preserve]
		public static void UnityEngine_LightProbes_op_Implicit()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x11BA60C", Offset = "0x11BA60C", VA = "0x11BA60C")]
		[Preserve]
		public static void UnityEngine_LightProbes_op_Equality()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x11BA6E4", Offset = "0x11BA6E4", VA = "0x11BA6E4")]
		[Preserve]
		public static void UnityEngine_LightProbes_op_Inequality()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x11BA7BC", Offset = "0x11BA7BC", VA = "0x11BA7BC")]
		[Preserve]
		public static void UnityEngine_QualitySettings_op_Implicit()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x11BA88C", Offset = "0x11BA88C", VA = "0x11BA88C")]
		[Preserve]
		public static void UnityEngine_QualitySettings_op_Equality()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x11BA964", Offset = "0x11BA964", VA = "0x11BA964")]
		[Preserve]
		public static void UnityEngine_QualitySettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x11BAA3C", Offset = "0x11BAA3C", VA = "0x11BAA3C")]
		[Preserve]
		public static void UnityEngine_Mesh_op_Implicit()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x11BAB0C", Offset = "0x11BAB0C", VA = "0x11BAB0C")]
		[Preserve]
		public static void UnityEngine_Mesh_op_Equality()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x11BABE4", Offset = "0x11BABE4", VA = "0x11BABE4")]
		[Preserve]
		public static void UnityEngine_Mesh_op_Inequality()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x11BACBC", Offset = "0x11BACBC", VA = "0x11BACBC")]
		[Preserve]
		public static void UnityEngine_Renderer_op_Implicit()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x11BAD8C", Offset = "0x11BAD8C", VA = "0x11BAD8C")]
		[Preserve]
		public static void UnityEngine_Renderer_op_Equality()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x11BAE64", Offset = "0x11BAE64", VA = "0x11BAE64")]
		[Preserve]
		public static void UnityEngine_Renderer_op_Inequality()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x11BAF3C", Offset = "0x11BAF3C", VA = "0x11BAF3C")]
		[Preserve]
		public static void UnityEngine_Projector_op_Implicit()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x11BB00C", Offset = "0x11BB00C", VA = "0x11BB00C")]
		[Preserve]
		public static void UnityEngine_Projector_op_Equality()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x11BB0E4", Offset = "0x11BB0E4", VA = "0x11BB0E4")]
		[Preserve]
		public static void UnityEngine_Projector_op_Inequality()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x11BB1BC", Offset = "0x11BB1BC", VA = "0x11BB1BC")]
		[Preserve]
		public static void UnityEngine_Shader_op_Implicit()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x11BB28C", Offset = "0x11BB28C", VA = "0x11BB28C")]
		[Preserve]
		public static void UnityEngine_Shader_op_Equality()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x11BB364", Offset = "0x11BB364", VA = "0x11BB364")]
		[Preserve]
		public static void UnityEngine_Shader_op_Inequality()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x11BB43C", Offset = "0x11BB43C", VA = "0x11BB43C")]
		[Preserve]
		public static void UnityEngine_TrailRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x11BB50C", Offset = "0x11BB50C", VA = "0x11BB50C")]
		[Preserve]
		public static void UnityEngine_TrailRenderer_op_Equality()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x11BB5E4", Offset = "0x11BB5E4", VA = "0x11BB5E4")]
		[Preserve]
		public static void UnityEngine_TrailRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x11BB6BC", Offset = "0x11BB6BC", VA = "0x11BB6BC")]
		[Preserve]
		public static void UnityEngine_LineRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x11BB78C", Offset = "0x11BB78C", VA = "0x11BB78C")]
		[Preserve]
		public static void UnityEngine_LineRenderer_op_Equality()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x11BB864", Offset = "0x11BB864", VA = "0x11BB864")]
		[Preserve]
		public static void UnityEngine_LineRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x11BB93C", Offset = "0x11BB93C", VA = "0x11BB93C")]
		[Preserve]
		public static void UnityEngine_RenderSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x11BBA0C", Offset = "0x11BBA0C", VA = "0x11BBA0C")]
		[Preserve]
		public static void UnityEngine_RenderSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x11BBAE4", Offset = "0x11BBAE4", VA = "0x11BBAE4")]
		[Preserve]
		public static void UnityEngine_RenderSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x11BBBBC", Offset = "0x11BBBBC", VA = "0x11BBBBC")]
		[Preserve]
		public static void UnityEngine_Material_op_Implicit()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x11BBC8C", Offset = "0x11BBC8C", VA = "0x11BBC8C")]
		[Preserve]
		public static void UnityEngine_Material_op_Equality()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x11BBD64", Offset = "0x11BBD64", VA = "0x11BBD64")]
		[Preserve]
		public static void UnityEngine_Material_op_Inequality()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x11BBE3C", Offset = "0x11BBE3C", VA = "0x11BBE3C")]
		[Preserve]
		public static void UnityEngine_OcclusionPortal_op_Implicit()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x11BBF0C", Offset = "0x11BBF0C", VA = "0x11BBF0C")]
		[Preserve]
		public static void UnityEngine_OcclusionPortal_op_Equality()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x11BBFE4", Offset = "0x11BBFE4", VA = "0x11BBFE4")]
		[Preserve]
		public static void UnityEngine_OcclusionPortal_op_Inequality()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x11BC0BC", Offset = "0x11BC0BC", VA = "0x11BC0BC")]
		[Preserve]
		public static void UnityEngine_OcclusionArea_op_Implicit()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x11BC18C", Offset = "0x11BC18C", VA = "0x11BC18C")]
		[Preserve]
		public static void UnityEngine_OcclusionArea_op_Equality()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x11BC264", Offset = "0x11BC264", VA = "0x11BC264")]
		[Preserve]
		public static void UnityEngine_OcclusionArea_op_Inequality()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x11BC33C", Offset = "0x11BC33C", VA = "0x11BC33C")]
		[Preserve]
		public static void UnityEngine_Flare_op_Implicit()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x11BC40C", Offset = "0x11BC40C", VA = "0x11BC40C")]
		[Preserve]
		public static void UnityEngine_Flare_op_Equality()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x11BC4E4", Offset = "0x11BC4E4", VA = "0x11BC4E4")]
		[Preserve]
		public static void UnityEngine_Flare_op_Inequality()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x11BC5BC", Offset = "0x11BC5BC", VA = "0x11BC5BC")]
		[Preserve]
		public static void UnityEngine_LensFlare_op_Implicit()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x11BC68C", Offset = "0x11BC68C", VA = "0x11BC68C")]
		[Preserve]
		public static void UnityEngine_LensFlare_op_Equality()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x11BC764", Offset = "0x11BC764", VA = "0x11BC764")]
		[Preserve]
		public static void UnityEngine_LensFlare_op_Inequality()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x11BC83C", Offset = "0x11BC83C", VA = "0x11BC83C")]
		[Preserve]
		public static void UnityEngine_Light_op_Implicit()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x11BC90C", Offset = "0x11BC90C", VA = "0x11BC90C")]
		[Preserve]
		public static void UnityEngine_Light_op_Equality()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x11BC9E4", Offset = "0x11BC9E4", VA = "0x11BC9E4")]
		[Preserve]
		public static void UnityEngine_Light_op_Inequality()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x11BCABC", Offset = "0x11BCABC", VA = "0x11BCABC")]
		[Preserve]
		public static void UnityEngine_Skybox_op_Implicit()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x11BCB8C", Offset = "0x11BCB8C", VA = "0x11BCB8C")]
		[Preserve]
		public static void UnityEngine_Skybox_op_Equality()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x11BCC64", Offset = "0x11BCC64", VA = "0x11BCC64")]
		[Preserve]
		public static void UnityEngine_Skybox_op_Inequality()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x11BCD3C", Offset = "0x11BCD3C", VA = "0x11BCD3C")]
		[Preserve]
		public static void UnityEngine_MeshFilter_op_Implicit()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x11BCE0C", Offset = "0x11BCE0C", VA = "0x11BCE0C")]
		[Preserve]
		public static void UnityEngine_MeshFilter_op_Equality()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x11BCEE4", Offset = "0x11BCEE4", VA = "0x11BCEE4")]
		[Preserve]
		public static void UnityEngine_MeshFilter_op_Inequality()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x11BCFBC", Offset = "0x11BCFBC", VA = "0x11BCFBC")]
		[Preserve]
		public static void UnityEngine_LightProbeProxyVolume_op_Implicit()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x11BD08C", Offset = "0x11BD08C", VA = "0x11BD08C")]
		[Preserve]
		public static void UnityEngine_LightProbeProxyVolume_op_Equality()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x11BD164", Offset = "0x11BD164", VA = "0x11BD164")]
		[Preserve]
		public static void UnityEngine_LightProbeProxyVolume_op_Inequality()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x11BD23C", Offset = "0x11BD23C", VA = "0x11BD23C")]
		[Preserve]
		public static void UnityEngine_SkinnedMeshRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x11BD30C", Offset = "0x11BD30C", VA = "0x11BD30C")]
		[Preserve]
		public static void UnityEngine_SkinnedMeshRenderer_op_Equality()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x11BD3E4", Offset = "0x11BD3E4", VA = "0x11BD3E4")]
		[Preserve]
		public static void UnityEngine_SkinnedMeshRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x11BD4BC", Offset = "0x11BD4BC", VA = "0x11BD4BC")]
		[Preserve]
		public static void UnityEngine_MeshRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x11BD58C", Offset = "0x11BD58C", VA = "0x11BD58C")]
		[Preserve]
		public static void UnityEngine_MeshRenderer_op_Equality()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x11BD664", Offset = "0x11BD664", VA = "0x11BD664")]
		[Preserve]
		public static void UnityEngine_MeshRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x11BD73C", Offset = "0x11BD73C", VA = "0x11BD73C")]
		[Preserve]
		public static void UnityEngine_LightProbeGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x11BD80C", Offset = "0x11BD80C", VA = "0x11BD80C")]
		[Preserve]
		public static void UnityEngine_LightProbeGroup_op_Equality()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x11BD8E4", Offset = "0x11BD8E4", VA = "0x11BD8E4")]
		[Preserve]
		public static void UnityEngine_LightProbeGroup_op_Inequality()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x11BD9BC", Offset = "0x11BD9BC", VA = "0x11BD9BC")]
		[Preserve]
		public static void UnityEngine_LODGroup_op_Implicit()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x11BDA8C", Offset = "0x11BDA8C", VA = "0x11BDA8C")]
		[Preserve]
		public static void UnityEngine_LODGroup_op_Equality()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x11BDB64", Offset = "0x11BDB64", VA = "0x11BDB64")]
		[Preserve]
		public static void UnityEngine_LODGroup_op_Inequality()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x11BDC3C", Offset = "0x11BDC3C", VA = "0x11BDC3C")]
		[Preserve]
		public static void UnityEngine_Texture_op_Implicit()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x11BDD0C", Offset = "0x11BDD0C", VA = "0x11BDD0C")]
		[Preserve]
		public static void UnityEngine_Texture_op_Equality()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x11BDDE4", Offset = "0x11BDDE4", VA = "0x11BDDE4")]
		[Preserve]
		public static void UnityEngine_Texture_op_Inequality()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x11BDEBC", Offset = "0x11BDEBC", VA = "0x11BDEBC")]
		[Preserve]
		public static void UnityEngine_Texture2D_op_Implicit()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x11BDF8C", Offset = "0x11BDF8C", VA = "0x11BDF8C")]
		[Preserve]
		public static void UnityEngine_Texture2D_op_Equality()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x11BE064", Offset = "0x11BE064", VA = "0x11BE064")]
		[Preserve]
		public static void UnityEngine_Texture2D_op_Inequality()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x11BE13C", Offset = "0x11BE13C", VA = "0x11BE13C")]
		[Preserve]
		public static void UnityEngine_Cubemap_op_Implicit()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x11BE20C", Offset = "0x11BE20C", VA = "0x11BE20C")]
		[Preserve]
		public static void UnityEngine_Cubemap_op_Equality()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x11BE2E4", Offset = "0x11BE2E4", VA = "0x11BE2E4")]
		[Preserve]
		public static void UnityEngine_Cubemap_op_Inequality()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x11BE3BC", Offset = "0x11BE3BC", VA = "0x11BE3BC")]
		[Preserve]
		public static void UnityEngine_Texture3D_op_Implicit()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x11BE48C", Offset = "0x11BE48C", VA = "0x11BE48C")]
		[Preserve]
		public static void UnityEngine_Texture3D_op_Equality()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x11BE564", Offset = "0x11BE564", VA = "0x11BE564")]
		[Preserve]
		public static void UnityEngine_Texture3D_op_Inequality()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x11BE63C", Offset = "0x11BE63C", VA = "0x11BE63C")]
		[Preserve]
		public static void UnityEngine_Texture2DArray_op_Implicit()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x11BE70C", Offset = "0x11BE70C", VA = "0x11BE70C")]
		[Preserve]
		public static void UnityEngine_Texture2DArray_op_Equality()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x11BE7E4", Offset = "0x11BE7E4", VA = "0x11BE7E4")]
		[Preserve]
		public static void UnityEngine_Texture2DArray_op_Inequality()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x11BE8BC", Offset = "0x11BE8BC", VA = "0x11BE8BC")]
		[Preserve]
		public static void UnityEngine_CubemapArray_op_Implicit()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x11BE98C", Offset = "0x11BE98C", VA = "0x11BE98C")]
		[Preserve]
		public static void UnityEngine_CubemapArray_op_Equality()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x11BEA64", Offset = "0x11BEA64", VA = "0x11BEA64")]
		[Preserve]
		public static void UnityEngine_CubemapArray_op_Inequality()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x11BEB3C", Offset = "0x11BEB3C", VA = "0x11BEB3C")]
		[Preserve]
		public static void UnityEngine_SparseTexture_op_Implicit()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x11BEC0C", Offset = "0x11BEC0C", VA = "0x11BEC0C")]
		[Preserve]
		public static void UnityEngine_SparseTexture_op_Equality()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x11BECE4", Offset = "0x11BECE4", VA = "0x11BECE4")]
		[Preserve]
		public static void UnityEngine_SparseTexture_op_Inequality()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x11BEDBC", Offset = "0x11BEDBC", VA = "0x11BEDBC")]
		[Preserve]
		public static void UnityEngine_RenderTexture_op_Implicit()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x11BEE8C", Offset = "0x11BEE8C", VA = "0x11BEE8C")]
		[Preserve]
		public static void UnityEngine_RenderTexture_op_Equality()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x11BEF64", Offset = "0x11BEF64", VA = "0x11BEF64")]
		[Preserve]
		public static void UnityEngine_RenderTexture_op_Inequality()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x11BF03C", Offset = "0x11BF03C", VA = "0x11BF03C")]
		[Preserve]
		public static void UnityEngine_CustomRenderTexture_op_Implicit()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x11BF10C", Offset = "0x11BF10C", VA = "0x11BF10C")]
		[Preserve]
		public static void UnityEngine_CustomRenderTexture_op_Equality()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x11BF1E4", Offset = "0x11BF1E4", VA = "0x11BF1E4")]
		[Preserve]
		public static void UnityEngine_CustomRenderTexture_op_Inequality()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x11BF2BC", Offset = "0x11BF2BC", VA = "0x11BF2BC")]
		[Preserve]
		public static void UnityEngine_Color_op_Addition()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x11BF3A4", Offset = "0x11BF3A4", VA = "0x11BF3A4")]
		[Preserve]
		public static void UnityEngine_Color_op_Subtraction()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x11BF48C", Offset = "0x11BF48C", VA = "0x11BF48C")]
		[Preserve]
		public static void UnityEngine_Color_op_Multiply()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x11BF574", Offset = "0x11BF574", VA = "0x11BF574")]
		[Preserve]
		public static void UnityEngine_Color_op_Multiply_0()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x11BF670", Offset = "0x11BF670", VA = "0x11BF670")]
		[Preserve]
		public static void UnityEngine_Color_op_Multiply_1()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x11BF76C", Offset = "0x11BF76C", VA = "0x11BF76C")]
		[Preserve]
		public static void UnityEngine_Color_op_Division()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x11BF868", Offset = "0x11BF868", VA = "0x11BF868")]
		[Preserve]
		public static void UnityEngine_Color_op_Equality()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x11BF950", Offset = "0x11BF950", VA = "0x11BF950")]
		[Preserve]
		public static void UnityEngine_Color_op_Inequality()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x11BFA38", Offset = "0x11BFA38", VA = "0x11BFA38")]
		[Preserve]
		public static void UnityEngine_Color_op_Implicit()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x11BFB08", Offset = "0x11BFB08", VA = "0x11BFB08")]
		[Preserve]
		public static void UnityEngine_Color_op_Implicit_0()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x11BFBD8", Offset = "0x11BFBD8", VA = "0x11BFBD8")]
		[Preserve]
		public static void UnityEngine_Matrix4x4_op_Multiply()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x11BFD28", Offset = "0x11BFD28", VA = "0x11BFD28")]
		[Preserve]
		public static void UnityEngine_Matrix4x4_op_Multiply_0()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x11BFE68", Offset = "0x11BFE68", VA = "0x11BFE68")]
		[Preserve]
		public static void UnityEngine_Matrix4x4_op_Equality()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x11BFFB4", Offset = "0x11BFFB4", VA = "0x11BFFB4")]
		[Preserve]
		public static void UnityEngine_Matrix4x4_op_Inequality()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x11C0100", Offset = "0x11C0100", VA = "0x11C0100")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Addition()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x11C01FC", Offset = "0x11C01FC", VA = "0x11C01FC")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Subtraction()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x11C02F8", Offset = "0x11C02F8", VA = "0x11C02F8")]
		[Preserve]
		public static void UnityEngine_Vector3_op_UnaryNegation()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x11C03DC", Offset = "0x11C03DC", VA = "0x11C03DC")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Multiply()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x11C04DC", Offset = "0x11C04DC", VA = "0x11C04DC")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Multiply_0()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x11C05DC", Offset = "0x11C05DC", VA = "0x11C05DC")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Division()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x11C06DC", Offset = "0x11C06DC", VA = "0x11C06DC")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Equality()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x11C07D8", Offset = "0x11C07D8", VA = "0x11C07D8")]
		[Preserve]
		public static void UnityEngine_Vector3_op_Inequality()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x11C08D4", Offset = "0x11C08D4", VA = "0x11C08D4")]
		[Preserve]
		public static void UnityEngine_Quaternion_op_Multiply()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x11C09BC", Offset = "0x11C09BC", VA = "0x11C09BC")]
		[Preserve]
		public static void UnityEngine_Quaternion_op_Multiply_0()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x11C0AE0", Offset = "0x11C0AE0", VA = "0x11C0AE0")]
		[Preserve]
		public static void UnityEngine_Quaternion_op_Equality()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x11C0BC8", Offset = "0x11C0BC8", VA = "0x11C0BC8")]
		[Preserve]
		public static void UnityEngine_Quaternion_op_Inequality()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x11C0CB0", Offset = "0x11C0CB0", VA = "0x11C0CB0")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Addition()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x11C0DA0", Offset = "0x11C0DA0", VA = "0x11C0DA0")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Subtraction()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x11C0E90", Offset = "0x11C0E90", VA = "0x11C0E90")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Multiply()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x11C0F80", Offset = "0x11C0F80", VA = "0x11C0F80")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Division()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x11C1070", Offset = "0x11C1070", VA = "0x11C1070")]
		[Preserve]
		public static void UnityEngine_Vector2_op_UnaryNegation()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x11C1138", Offset = "0x11C1138", VA = "0x11C1138")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Multiply_0()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x11C1234", Offset = "0x11C1234", VA = "0x11C1234")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Multiply_1()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x11C1330", Offset = "0x11C1330", VA = "0x11C1330")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Division_0()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x11C142C", Offset = "0x11C142C", VA = "0x11C142C")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Equality()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x11C151C", Offset = "0x11C151C", VA = "0x11C151C")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Inequality()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x11C160C", Offset = "0x11C160C", VA = "0x11C160C")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Implicit()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x11C16E0", Offset = "0x11C16E0", VA = "0x11C16E0")]
		[Preserve]
		public static void UnityEngine_Vector2_op_Implicit_0()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x11C17A8", Offset = "0x11C17A8", VA = "0x11C17A8")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Addition()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x11C1890", Offset = "0x11C1890", VA = "0x11C1890")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Subtraction()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x11C1978", Offset = "0x11C1978", VA = "0x11C1978")]
		[Preserve]
		public static void UnityEngine_Vector4_op_UnaryNegation()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x11C1A50", Offset = "0x11C1A50", VA = "0x11C1A50")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Multiply()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x11C1B4C", Offset = "0x11C1B4C", VA = "0x11C1B4C")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Multiply_0()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x11C1C48", Offset = "0x11C1C48", VA = "0x11C1C48")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Division()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x11C1D44", Offset = "0x11C1D44", VA = "0x11C1D44")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Equality()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x11C1E2C", Offset = "0x11C1E2C", VA = "0x11C1E2C")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Inequality()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x11C1F14", Offset = "0x11C1F14", VA = "0x11C1F14")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Implicit()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x11C1FE8", Offset = "0x11C1FE8", VA = "0x11C1FE8")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Implicit_0()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x11C20B8", Offset = "0x11C20B8", VA = "0x11C20B8")]
		[Preserve]
		public static void UnityEngine_Vector4_op_Implicit_1()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x11C2180", Offset = "0x11C2180", VA = "0x11C2180")]
		[Preserve]
		public static void UnityEngine_Behaviour_op_Implicit()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x11C2250", Offset = "0x11C2250", VA = "0x11C2250")]
		[Preserve]
		public static void UnityEngine_Behaviour_op_Equality()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x11C2328", Offset = "0x11C2328", VA = "0x11C2328")]
		[Preserve]
		public static void UnityEngine_Behaviour_op_Inequality()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x11C2400", Offset = "0x11C2400", VA = "0x11C2400")]
		[Preserve]
		public static void UnityEngine_Component_op_Implicit()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x11C24D0", Offset = "0x11C24D0", VA = "0x11C24D0")]
		[Preserve]
		public static void UnityEngine_Component_op_Equality()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x11C25A8", Offset = "0x11C25A8", VA = "0x11C25A8")]
		[Preserve]
		public static void UnityEngine_Component_op_Inequality()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x11C2680", Offset = "0x11C2680", VA = "0x11C2680")]
		[Preserve]
		public static void UnityEngine_GameObject_op_Implicit()
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x11C2750", Offset = "0x11C2750", VA = "0x11C2750")]
		[Preserve]
		public static void UnityEngine_GameObject_op_Equality()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x11C2828", Offset = "0x11C2828", VA = "0x11C2828")]
		[Preserve]
		public static void UnityEngine_GameObject_op_Inequality()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x11C2900", Offset = "0x11C2900", VA = "0x11C2900")]
		[Preserve]
		public static void UnityEngine_LayerMask_op_Implicit()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x11C29D4", Offset = "0x11C29D4", VA = "0x11C29D4")]
		[Preserve]
		public static void UnityEngine_LayerMask_op_Implicit_0()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x11C2AA8", Offset = "0x11C2AA8", VA = "0x11C2AA8")]
		[Preserve]
		public static void UnityEngine_MonoBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x11C2B78", Offset = "0x11C2B78", VA = "0x11C2B78")]
		[Preserve]
		public static void UnityEngine_MonoBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x11C2C50", Offset = "0x11C2C50", VA = "0x11C2C50")]
		[Preserve]
		public static void UnityEngine_MonoBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x11C2D28", Offset = "0x11C2D28", VA = "0x11C2D28")]
		[Preserve]
		public static void UnityEngine_ScriptableObject_op_Implicit()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x11C2DF8", Offset = "0x11C2DF8", VA = "0x11C2DF8")]
		[Preserve]
		public static void UnityEngine_ScriptableObject_op_Equality()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x11C2ED0", Offset = "0x11C2ED0", VA = "0x11C2ED0")]
		[Preserve]
		public static void UnityEngine_ScriptableObject_op_Inequality()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x11C2FA8", Offset = "0x11C2FA8", VA = "0x11C2FA8")]
		[Preserve]
		public static void UnityEngine_TextAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x11C3078", Offset = "0x11C3078", VA = "0x11C3078")]
		[Preserve]
		public static void UnityEngine_TextAsset_op_Equality()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x11C3150", Offset = "0x11C3150", VA = "0x11C3150")]
		[Preserve]
		public static void UnityEngine_TextAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x11C3228", Offset = "0x11C3228", VA = "0x11C3228")]
		[Preserve]
		public static void UnityEngine_Object_op_Implicit()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x11C32F8", Offset = "0x11C32F8", VA = "0x11C32F8")]
		[Preserve]
		public static void UnityEngine_Object_op_Equality()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x11C33D0", Offset = "0x11C33D0", VA = "0x11C33D0")]
		[Preserve]
		public static void UnityEngine_Object_op_Inequality()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x11C34A8", Offset = "0x11C34A8", VA = "0x11C34A8")]
		[Preserve]
		public static void UnityEngine_ComputeShader_op_Implicit()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x11C3578", Offset = "0x11C3578", VA = "0x11C3578")]
		[Preserve]
		public static void UnityEngine_ComputeShader_op_Equality()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x11C3650", Offset = "0x11C3650", VA = "0x11C3650")]
		[Preserve]
		public static void UnityEngine_ComputeShader_op_Inequality()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x11C3728", Offset = "0x11C3728", VA = "0x11C3728")]
		[Preserve]
		public static void UnityEngine_ShaderVariantCollection_op_Implicit()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x11C37F8", Offset = "0x11C37F8", VA = "0x11C37F8")]
		[Preserve]
		public static void UnityEngine_ShaderVariantCollection_op_Equality()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x11C38D0", Offset = "0x11C38D0", VA = "0x11C38D0")]
		[Preserve]
		public static void UnityEngine_ShaderVariantCollection_op_Inequality()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x11C39A8", Offset = "0x11C39A8", VA = "0x11C39A8")]
		[Preserve]
		public static void UnityEngine_RectTransform_op_Implicit()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x11C3A78", Offset = "0x11C3A78", VA = "0x11C3A78")]
		[Preserve]
		public static void UnityEngine_RectTransform_op_Equality()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x11C3B50", Offset = "0x11C3B50", VA = "0x11C3B50")]
		[Preserve]
		public static void UnityEngine_RectTransform_op_Inequality()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x11C3C28", Offset = "0x11C3C28", VA = "0x11C3C28")]
		[Preserve]
		public static void UnityEngine_Transform_op_Implicit()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x11C3CF8", Offset = "0x11C3CF8", VA = "0x11C3CF8")]
		[Preserve]
		public static void UnityEngine_Transform_op_Equality()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x11C3DD0", Offset = "0x11C3DD0", VA = "0x11C3DD0")]
		[Preserve]
		public static void UnityEngine_Transform_op_Inequality()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x11C3EA8", Offset = "0x11C3EA8", VA = "0x11C3EA8")]
		[Preserve]
		public static void UnityEngine_SpriteRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x11C3F78", Offset = "0x11C3F78", VA = "0x11C3F78")]
		[Preserve]
		public static void UnityEngine_SpriteRenderer_op_Equality()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x11C4050", Offset = "0x11C4050", VA = "0x11C4050")]
		[Preserve]
		public static void UnityEngine_SpriteRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x11C4128", Offset = "0x11C4128", VA = "0x11C4128")]
		[Preserve]
		public static void UnityEngine_Sprite_op_Implicit()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x11C41F8", Offset = "0x11C41F8", VA = "0x11C41F8")]
		[Preserve]
		public static void UnityEngine_Sprite_op_Equality()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x11C42D0", Offset = "0x11C42D0", VA = "0x11C42D0")]
		[Preserve]
		public static void UnityEngine_Sprite_op_Inequality()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x11C43A8", Offset = "0x11C43A8", VA = "0x11C43A8")]
		[Preserve]
		public static void UnityEngine_U2D_SpriteAtlas_op_Implicit()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x11C4478", Offset = "0x11C4478", VA = "0x11C4478")]
		[Preserve]
		public static void UnityEngine_U2D_SpriteAtlas_op_Equality()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x11C4550", Offset = "0x11C4550", VA = "0x11C4550")]
		[Preserve]
		public static void UnityEngine_U2D_SpriteAtlas_op_Inequality()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x11C4628", Offset = "0x11C4628", VA = "0x11C4628")]
		[Preserve]
		public static void UnityEngine_SceneManagement_Scene_op_Equality()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x11C4720", Offset = "0x11C4720", VA = "0x11C4720")]
		[Preserve]
		public static void UnityEngine_SceneManagement_Scene_op_Inequality()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x11C4818", Offset = "0x11C4818", VA = "0x11C4818")]
		[Preserve]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Implicit()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x11C48E8", Offset = "0x11C48E8", VA = "0x11C48E8")]
		[Preserve]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Equality()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x11C49C0", Offset = "0x11C49C0", VA = "0x11C49C0")]
		[Preserve]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Inequality()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x11C4A98", Offset = "0x11C4A98", VA = "0x11C4A98")]
		[Preserve]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Implicit()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x11C4B68", Offset = "0x11C4B68", VA = "0x11C4B68")]
		[Preserve]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Equality()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x11C4C40", Offset = "0x11C4C40", VA = "0x11C4C40")]
		[Preserve]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Inequality()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x11C4D18", Offset = "0x11C4D18", VA = "0x11C4D18")]
		[Preserve]
		public static void UnityEngine_Rendering_SortingGroup_op_Implicit()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x11C4DE8", Offset = "0x11C4DE8", VA = "0x11C4DE8")]
		[Preserve]
		public static void UnityEngine_Rendering_SortingGroup_op_Equality()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x11C4EC0", Offset = "0x11C4EC0", VA = "0x11C4EC0")]
		[Preserve]
		public static void UnityEngine_Rendering_SortingGroup_op_Inequality()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x11C4F98", Offset = "0x11C4F98", VA = "0x11C4F98")]
		[Preserve]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Implicit()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x11C5068", Offset = "0x11C5068", VA = "0x11C5068")]
		[Preserve]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Equality()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x11C5140", Offset = "0x11C5140", VA = "0x11C5140")]
		[Preserve]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Inequality()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x11C5218", Offset = "0x11C5218", VA = "0x11C5218")]
		[Preserve]
		public static void UnityEngine_Playables_PlayableDirector_op_Implicit()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x11C52E8", Offset = "0x11C52E8", VA = "0x11C52E8")]
		[Preserve]
		public static void UnityEngine_Playables_PlayableDirector_op_Equality()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x11C53C0", Offset = "0x11C53C0", VA = "0x11C53C0")]
		[Preserve]
		public static void UnityEngine_Playables_PlayableDirector_op_Inequality()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x11C5498", Offset = "0x11C5498", VA = "0x11C5498")]
		[Preserve]
		public static void UnityEngine_GUISkin_op_Implicit()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x11C5568", Offset = "0x11C5568", VA = "0x11C5568")]
		[Preserve]
		public static void UnityEngine_GUISkin_op_Equality()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x11C5640", Offset = "0x11C5640", VA = "0x11C5640")]
		[Preserve]
		public static void UnityEngine_GUISkin_op_Inequality()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x11C5718", Offset = "0x11C5718", VA = "0x11C5718")]
		[Preserve]
		public static void UnityEngine_ParticleSystem_op_Implicit()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x11C57E8", Offset = "0x11C57E8", VA = "0x11C57E8")]
		[Preserve]
		public static void UnityEngine_ParticleSystem_op_Equality()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x11C58C0", Offset = "0x11C58C0", VA = "0x11C58C0")]
		[Preserve]
		public static void UnityEngine_ParticleSystem_op_Inequality()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x11C5998", Offset = "0x11C5998", VA = "0x11C5998")]
		[Preserve]
		public static void UnityEngine_ParticleSystemRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x11C5A68", Offset = "0x11C5A68", VA = "0x11C5A68")]
		[Preserve]
		public static void UnityEngine_ParticleSystemRenderer_op_Equality()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x11C5B40", Offset = "0x11C5B40", VA = "0x11C5B40")]
		[Preserve]
		public static void UnityEngine_ParticleSystemRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x11C5C18", Offset = "0x11C5C18", VA = "0x11C5C18")]
		[Preserve]
		public static void UnityEngine_ParticleSystemForceField_op_Implicit()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x11C5CE8", Offset = "0x11C5CE8", VA = "0x11C5CE8")]
		[Preserve]
		public static void UnityEngine_ParticleSystemForceField_op_Equality()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x11C5DC0", Offset = "0x11C5DC0", VA = "0x11C5DC0")]
		[Preserve]
		public static void UnityEngine_ParticleSystemForceField_op_Inequality()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x11C5E98", Offset = "0x11C5E98", VA = "0x11C5E98")]
		[Preserve]
		public static void UnityEngine_ArticulationBody_op_Implicit()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x11C5F68", Offset = "0x11C5F68", VA = "0x11C5F68")]
		[Preserve]
		public static void UnityEngine_ArticulationBody_op_Equality()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x11C6040", Offset = "0x11C6040", VA = "0x11C6040")]
		[Preserve]
		public static void UnityEngine_ArticulationBody_op_Inequality()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x11C6118", Offset = "0x11C6118", VA = "0x11C6118")]
		[Preserve]
		public static void UnityEngine_PhysicMaterial_op_Implicit()
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x11C61E8", Offset = "0x11C61E8", VA = "0x11C61E8")]
		[Preserve]
		public static void UnityEngine_PhysicMaterial_op_Equality()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x11C62C0", Offset = "0x11C62C0", VA = "0x11C62C0")]
		[Preserve]
		public static void UnityEngine_PhysicMaterial_op_Inequality()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x11C6398", Offset = "0x11C6398", VA = "0x11C6398")]
		[Preserve]
		public static void UnityEngine_Rigidbody_op_Implicit()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x11C6468", Offset = "0x11C6468", VA = "0x11C6468")]
		[Preserve]
		public static void UnityEngine_Rigidbody_op_Equality()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x11C6540", Offset = "0x11C6540", VA = "0x11C6540")]
		[Preserve]
		public static void UnityEngine_Rigidbody_op_Inequality()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x11C6618", Offset = "0x11C6618", VA = "0x11C6618")]
		[Preserve]
		public static void UnityEngine_Collider_op_Implicit()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x11C66E8", Offset = "0x11C66E8", VA = "0x11C66E8")]
		[Preserve]
		public static void UnityEngine_Collider_op_Equality()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x11C67C0", Offset = "0x11C67C0", VA = "0x11C67C0")]
		[Preserve]
		public static void UnityEngine_Collider_op_Inequality()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x11C6898", Offset = "0x11C6898", VA = "0x11C6898")]
		[Preserve]
		public static void UnityEngine_CharacterController_op_Implicit()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x11C6968", Offset = "0x11C6968", VA = "0x11C6968")]
		[Preserve]
		public static void UnityEngine_CharacterController_op_Equality()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x11C6A40", Offset = "0x11C6A40", VA = "0x11C6A40")]
		[Preserve]
		public static void UnityEngine_CharacterController_op_Inequality()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x11C6B18", Offset = "0x11C6B18", VA = "0x11C6B18")]
		[Preserve]
		public static void UnityEngine_MeshCollider_op_Implicit()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x11C6BE8", Offset = "0x11C6BE8", VA = "0x11C6BE8")]
		[Preserve]
		public static void UnityEngine_MeshCollider_op_Equality()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x11C6CC0", Offset = "0x11C6CC0", VA = "0x11C6CC0")]
		[Preserve]
		public static void UnityEngine_MeshCollider_op_Inequality()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x11C6D98", Offset = "0x11C6D98", VA = "0x11C6D98")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider_op_Implicit()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x11C6E68", Offset = "0x11C6E68", VA = "0x11C6E68")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider_op_Equality()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x11C6F40", Offset = "0x11C6F40", VA = "0x11C6F40")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider_op_Inequality()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x11C7018", Offset = "0x11C7018", VA = "0x11C7018")]
		[Preserve]
		public static void UnityEngine_BoxCollider_op_Implicit()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x11C70E8", Offset = "0x11C70E8", VA = "0x11C70E8")]
		[Preserve]
		public static void UnityEngine_BoxCollider_op_Equality()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x11C71C0", Offset = "0x11C71C0", VA = "0x11C71C0")]
		[Preserve]
		public static void UnityEngine_BoxCollider_op_Inequality()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x11C7298", Offset = "0x11C7298", VA = "0x11C7298")]
		[Preserve]
		public static void UnityEngine_SphereCollider_op_Implicit()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x11C7368", Offset = "0x11C7368", VA = "0x11C7368")]
		[Preserve]
		public static void UnityEngine_SphereCollider_op_Equality()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x11C7440", Offset = "0x11C7440", VA = "0x11C7440")]
		[Preserve]
		public static void UnityEngine_SphereCollider_op_Inequality()
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x11C7518", Offset = "0x11C7518", VA = "0x11C7518")]
		[Preserve]
		public static void UnityEngine_ConstantForce_op_Implicit()
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x11C75E8", Offset = "0x11C75E8", VA = "0x11C75E8")]
		[Preserve]
		public static void UnityEngine_ConstantForce_op_Equality()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x11C76C0", Offset = "0x11C76C0", VA = "0x11C76C0")]
		[Preserve]
		public static void UnityEngine_ConstantForce_op_Inequality()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x11C7798", Offset = "0x11C7798", VA = "0x11C7798")]
		[Preserve]
		public static void UnityEngine_Joint_op_Implicit()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x11C7868", Offset = "0x11C7868", VA = "0x11C7868")]
		[Preserve]
		public static void UnityEngine_Joint_op_Equality()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x11C7940", Offset = "0x11C7940", VA = "0x11C7940")]
		[Preserve]
		public static void UnityEngine_Joint_op_Inequality()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x11C7A18", Offset = "0x11C7A18", VA = "0x11C7A18")]
		[Preserve]
		public static void UnityEngine_HingeJoint_op_Implicit()
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x11C7AE8", Offset = "0x11C7AE8", VA = "0x11C7AE8")]
		[Preserve]
		public static void UnityEngine_HingeJoint_op_Equality()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x11C7BC0", Offset = "0x11C7BC0", VA = "0x11C7BC0")]
		[Preserve]
		public static void UnityEngine_HingeJoint_op_Inequality()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x11C7C98", Offset = "0x11C7C98", VA = "0x11C7C98")]
		[Preserve]
		public static void UnityEngine_SpringJoint_op_Implicit()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x11C7D68", Offset = "0x11C7D68", VA = "0x11C7D68")]
		[Preserve]
		public static void UnityEngine_SpringJoint_op_Equality()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x11C7E40", Offset = "0x11C7E40", VA = "0x11C7E40")]
		[Preserve]
		public static void UnityEngine_SpringJoint_op_Inequality()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x11C7F18", Offset = "0x11C7F18", VA = "0x11C7F18")]
		[Preserve]
		public static void UnityEngine_FixedJoint_op_Implicit()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x11C7FE8", Offset = "0x11C7FE8", VA = "0x11C7FE8")]
		[Preserve]
		public static void UnityEngine_FixedJoint_op_Equality()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x11C80C0", Offset = "0x11C80C0", VA = "0x11C80C0")]
		[Preserve]
		public static void UnityEngine_FixedJoint_op_Inequality()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x11C8198", Offset = "0x11C8198", VA = "0x11C8198")]
		[Preserve]
		public static void UnityEngine_CharacterJoint_op_Implicit()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x11C8268", Offset = "0x11C8268", VA = "0x11C8268")]
		[Preserve]
		public static void UnityEngine_CharacterJoint_op_Equality()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x11C8340", Offset = "0x11C8340", VA = "0x11C8340")]
		[Preserve]
		public static void UnityEngine_CharacterJoint_op_Inequality()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x11C8418", Offset = "0x11C8418", VA = "0x11C8418")]
		[Preserve]
		public static void UnityEngine_ConfigurableJoint_op_Implicit()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x11C84E8", Offset = "0x11C84E8", VA = "0x11C84E8")]
		[Preserve]
		public static void UnityEngine_ConfigurableJoint_op_Equality()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x11C85C0", Offset = "0x11C85C0", VA = "0x11C85C0")]
		[Preserve]
		public static void UnityEngine_ConfigurableJoint_op_Inequality()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x11C8698", Offset = "0x11C8698", VA = "0x11C8698")]
		[Preserve]
		public static void UnityEngine_RaycastHit2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x11C8794", Offset = "0x11C8794", VA = "0x11C8794")]
		[Preserve]
		public static void UnityEngine_Rigidbody2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x11C8864", Offset = "0x11C8864", VA = "0x11C8864")]
		[Preserve]
		public static void UnityEngine_Rigidbody2D_op_Equality()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x11C893C", Offset = "0x11C893C", VA = "0x11C893C")]
		[Preserve]
		public static void UnityEngine_Rigidbody2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x11C8A14", Offset = "0x11C8A14", VA = "0x11C8A14")]
		[Preserve]
		public static void UnityEngine_Collider2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x11C8AE4", Offset = "0x11C8AE4", VA = "0x11C8AE4")]
		[Preserve]
		public static void UnityEngine_Collider2D_op_Equality()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x11C8BBC", Offset = "0x11C8BBC", VA = "0x11C8BBC")]
		[Preserve]
		public static void UnityEngine_Collider2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x11C8C94", Offset = "0x11C8C94", VA = "0x11C8C94")]
		[Preserve]
		public static void UnityEngine_CustomCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x11C8D64", Offset = "0x11C8D64", VA = "0x11C8D64")]
		[Preserve]
		public static void UnityEngine_CustomCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x11C8E3C", Offset = "0x11C8E3C", VA = "0x11C8E3C")]
		[Preserve]
		public static void UnityEngine_CustomCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x11C8F14", Offset = "0x11C8F14", VA = "0x11C8F14")]
		[Preserve]
		public static void UnityEngine_CircleCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x11C8FE4", Offset = "0x11C8FE4", VA = "0x11C8FE4")]
		[Preserve]
		public static void UnityEngine_CircleCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x11C90BC", Offset = "0x11C90BC", VA = "0x11C90BC")]
		[Preserve]
		public static void UnityEngine_CircleCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x11C9194", Offset = "0x11C9194", VA = "0x11C9194")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x11C9264", Offset = "0x11C9264", VA = "0x11C9264")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x11C933C", Offset = "0x11C933C", VA = "0x11C933C")]
		[Preserve]
		public static void UnityEngine_CapsuleCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x11C9414", Offset = "0x11C9414", VA = "0x11C9414")]
		[Preserve]
		public static void UnityEngine_EdgeCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x11C94E4", Offset = "0x11C94E4", VA = "0x11C94E4")]
		[Preserve]
		public static void UnityEngine_EdgeCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x11C95BC", Offset = "0x11C95BC", VA = "0x11C95BC")]
		[Preserve]
		public static void UnityEngine_EdgeCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x11C9694", Offset = "0x11C9694", VA = "0x11C9694")]
		[Preserve]
		public static void UnityEngine_BoxCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x11C9764", Offset = "0x11C9764", VA = "0x11C9764")]
		[Preserve]
		public static void UnityEngine_BoxCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x11C983C", Offset = "0x11C983C", VA = "0x11C983C")]
		[Preserve]
		public static void UnityEngine_BoxCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x11C9914", Offset = "0x11C9914", VA = "0x11C9914")]
		[Preserve]
		public static void UnityEngine_PolygonCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x11C99E4", Offset = "0x11C99E4", VA = "0x11C99E4")]
		[Preserve]
		public static void UnityEngine_PolygonCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x11C9ABC", Offset = "0x11C9ABC", VA = "0x11C9ABC")]
		[Preserve]
		public static void UnityEngine_PolygonCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x11C9B94", Offset = "0x11C9B94", VA = "0x11C9B94")]
		[Preserve]
		public static void UnityEngine_CompositeCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x11C9C64", Offset = "0x11C9C64", VA = "0x11C9C64")]
		[Preserve]
		public static void UnityEngine_CompositeCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x11C9D3C", Offset = "0x11C9D3C", VA = "0x11C9D3C")]
		[Preserve]
		public static void UnityEngine_CompositeCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x11C9E14", Offset = "0x11C9E14", VA = "0x11C9E14")]
		[Preserve]
		public static void UnityEngine_Joint2D_op_Implicit()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x11C9EE4", Offset = "0x11C9EE4", VA = "0x11C9EE4")]
		[Preserve]
		public static void UnityEngine_Joint2D_op_Equality()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x11C9FBC", Offset = "0x11C9FBC", VA = "0x11C9FBC")]
		[Preserve]
		public static void UnityEngine_Joint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x11CA094", Offset = "0x11CA094", VA = "0x11CA094")]
		[Preserve]
		public static void UnityEngine_AnchoredJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x11CA164", Offset = "0x11CA164", VA = "0x11CA164")]
		[Preserve]
		public static void UnityEngine_AnchoredJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x11CA23C", Offset = "0x11CA23C", VA = "0x11CA23C")]
		[Preserve]
		public static void UnityEngine_AnchoredJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x11CA314", Offset = "0x11CA314", VA = "0x11CA314")]
		[Preserve]
		public static void UnityEngine_SpringJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x11CA3E4", Offset = "0x11CA3E4", VA = "0x11CA3E4")]
		[Preserve]
		public static void UnityEngine_SpringJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x11CA4BC", Offset = "0x11CA4BC", VA = "0x11CA4BC")]
		[Preserve]
		public static void UnityEngine_SpringJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x11CA594", Offset = "0x11CA594", VA = "0x11CA594")]
		[Preserve]
		public static void UnityEngine_DistanceJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x11CA664", Offset = "0x11CA664", VA = "0x11CA664")]
		[Preserve]
		public static void UnityEngine_DistanceJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x11CA73C", Offset = "0x11CA73C", VA = "0x11CA73C")]
		[Preserve]
		public static void UnityEngine_DistanceJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x11CA814", Offset = "0x11CA814", VA = "0x11CA814")]
		[Preserve]
		public static void UnityEngine_FrictionJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x11CA8E4", Offset = "0x11CA8E4", VA = "0x11CA8E4")]
		[Preserve]
		public static void UnityEngine_FrictionJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x11CA9BC", Offset = "0x11CA9BC", VA = "0x11CA9BC")]
		[Preserve]
		public static void UnityEngine_FrictionJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x11CAA94", Offset = "0x11CAA94", VA = "0x11CAA94")]
		[Preserve]
		public static void UnityEngine_HingeJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x11CAB64", Offset = "0x11CAB64", VA = "0x11CAB64")]
		[Preserve]
		public static void UnityEngine_HingeJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x11CAC3C", Offset = "0x11CAC3C", VA = "0x11CAC3C")]
		[Preserve]
		public static void UnityEngine_HingeJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x11CAD14", Offset = "0x11CAD14", VA = "0x11CAD14")]
		[Preserve]
		public static void UnityEngine_RelativeJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x11CADE4", Offset = "0x11CADE4", VA = "0x11CADE4")]
		[Preserve]
		public static void UnityEngine_RelativeJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x11CAEBC", Offset = "0x11CAEBC", VA = "0x11CAEBC")]
		[Preserve]
		public static void UnityEngine_RelativeJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x11CAF94", Offset = "0x11CAF94", VA = "0x11CAF94")]
		[Preserve]
		public static void UnityEngine_SliderJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x11CB064", Offset = "0x11CB064", VA = "0x11CB064")]
		[Preserve]
		public static void UnityEngine_SliderJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x11CB13C", Offset = "0x11CB13C", VA = "0x11CB13C")]
		[Preserve]
		public static void UnityEngine_SliderJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x11CB214", Offset = "0x11CB214", VA = "0x11CB214")]
		[Preserve]
		public static void UnityEngine_TargetJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x11CB2E4", Offset = "0x11CB2E4", VA = "0x11CB2E4")]
		[Preserve]
		public static void UnityEngine_TargetJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x11CB3BC", Offset = "0x11CB3BC", VA = "0x11CB3BC")]
		[Preserve]
		public static void UnityEngine_TargetJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x11CB494", Offset = "0x11CB494", VA = "0x11CB494")]
		[Preserve]
		public static void UnityEngine_FixedJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x11CB564", Offset = "0x11CB564", VA = "0x11CB564")]
		[Preserve]
		public static void UnityEngine_FixedJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x11CB63C", Offset = "0x11CB63C", VA = "0x11CB63C")]
		[Preserve]
		public static void UnityEngine_FixedJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x11CB714", Offset = "0x11CB714", VA = "0x11CB714")]
		[Preserve]
		public static void UnityEngine_WheelJoint2D_op_Implicit()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x11CB7E4", Offset = "0x11CB7E4", VA = "0x11CB7E4")]
		[Preserve]
		public static void UnityEngine_WheelJoint2D_op_Equality()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x11CB8BC", Offset = "0x11CB8BC", VA = "0x11CB8BC")]
		[Preserve]
		public static void UnityEngine_WheelJoint2D_op_Inequality()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x11CB994", Offset = "0x11CB994", VA = "0x11CB994")]
		[Preserve]
		public static void UnityEngine_Effector2D_op_Implicit()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x11CBA64", Offset = "0x11CBA64", VA = "0x11CBA64")]
		[Preserve]
		public static void UnityEngine_Effector2D_op_Equality()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x11CBB3C", Offset = "0x11CBB3C", VA = "0x11CBB3C")]
		[Preserve]
		public static void UnityEngine_Effector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x11CBC14", Offset = "0x11CBC14", VA = "0x11CBC14")]
		[Preserve]
		public static void UnityEngine_AreaEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x11CBCE4", Offset = "0x11CBCE4", VA = "0x11CBCE4")]
		[Preserve]
		public static void UnityEngine_AreaEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x11CBDBC", Offset = "0x11CBDBC", VA = "0x11CBDBC")]
		[Preserve]
		public static void UnityEngine_AreaEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x11CBE94", Offset = "0x11CBE94", VA = "0x11CBE94")]
		[Preserve]
		public static void UnityEngine_BuoyancyEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x11CBF64", Offset = "0x11CBF64", VA = "0x11CBF64")]
		[Preserve]
		public static void UnityEngine_BuoyancyEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x11CC03C", Offset = "0x11CC03C", VA = "0x11CC03C")]
		[Preserve]
		public static void UnityEngine_BuoyancyEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x11CC114", Offset = "0x11CC114", VA = "0x11CC114")]
		[Preserve]
		public static void UnityEngine_PointEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x11CC1E4", Offset = "0x11CC1E4", VA = "0x11CC1E4")]
		[Preserve]
		public static void UnityEngine_PointEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x11CC2BC", Offset = "0x11CC2BC", VA = "0x11CC2BC")]
		[Preserve]
		public static void UnityEngine_PointEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x11CC394", Offset = "0x11CC394", VA = "0x11CC394")]
		[Preserve]
		public static void UnityEngine_PlatformEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x11CC464", Offset = "0x11CC464", VA = "0x11CC464")]
		[Preserve]
		public static void UnityEngine_PlatformEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x11CC53C", Offset = "0x11CC53C", VA = "0x11CC53C")]
		[Preserve]
		public static void UnityEngine_PlatformEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x11CC614", Offset = "0x11CC614", VA = "0x11CC614")]
		[Preserve]
		public static void UnityEngine_SurfaceEffector2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x11CC6E4", Offset = "0x11CC6E4", VA = "0x11CC6E4")]
		[Preserve]
		public static void UnityEngine_SurfaceEffector2D_op_Equality()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x11CC7BC", Offset = "0x11CC7BC", VA = "0x11CC7BC")]
		[Preserve]
		public static void UnityEngine_SurfaceEffector2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x11CC894", Offset = "0x11CC894", VA = "0x11CC894")]
		[Preserve]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x11CC964", Offset = "0x11CC964", VA = "0x11CC964")]
		[Preserve]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Equality()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x11CCA3C", Offset = "0x11CCA3C", VA = "0x11CCA3C")]
		[Preserve]
		public static void UnityEngine_PhysicsUpdateBehaviour2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x11CCB14", Offset = "0x11CCB14", VA = "0x11CCB14")]
		[Preserve]
		public static void UnityEngine_ConstantForce2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x11CCBE4", Offset = "0x11CCBE4", VA = "0x11CCBE4")]
		[Preserve]
		public static void UnityEngine_ConstantForce2D_op_Equality()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x11CCCBC", Offset = "0x11CCCBC", VA = "0x11CCCBC")]
		[Preserve]
		public static void UnityEngine_ConstantForce2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x11CCD94", Offset = "0x11CCD94", VA = "0x11CCD94")]
		[Preserve]
		public static void UnityEngine_PhysicsMaterial2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x11CCE64", Offset = "0x11CCE64", VA = "0x11CCE64")]
		[Preserve]
		public static void UnityEngine_PhysicsMaterial2D_op_Equality()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x11CCF3C", Offset = "0x11CCF3C", VA = "0x11CCF3C")]
		[Preserve]
		public static void UnityEngine_PhysicsMaterial2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x11CD014", Offset = "0x11CD014", VA = "0x11CD014")]
		[Preserve]
		public static void UnityEngine_SpriteMask_op_Implicit()
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x11CD0E4", Offset = "0x11CD0E4", VA = "0x11CD0E4")]
		[Preserve]
		public static void UnityEngine_SpriteMask_op_Equality()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x11CD1BC", Offset = "0x11CD1BC", VA = "0x11CD1BC")]
		[Preserve]
		public static void UnityEngine_SpriteMask_op_Inequality()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x11CD294", Offset = "0x11CD294", VA = "0x11CD294")]
		[Preserve]
		public static void UnityEngine_Terrain_op_Implicit()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x11CD364", Offset = "0x11CD364", VA = "0x11CD364")]
		[Preserve]
		public static void UnityEngine_Terrain_op_Equality()
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x11CD43C", Offset = "0x11CD43C", VA = "0x11CD43C")]
		[Preserve]
		public static void UnityEngine_Terrain_op_Inequality()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x11CD514", Offset = "0x11CD514", VA = "0x11CD514")]
		[Preserve]
		public static void UnityEngine_Tree_op_Implicit()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x11CD5E4", Offset = "0x11CD5E4", VA = "0x11CD5E4")]
		[Preserve]
		public static void UnityEngine_Tree_op_Equality()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x11CD6BC", Offset = "0x11CD6BC", VA = "0x11CD6BC")]
		[Preserve]
		public static void UnityEngine_Tree_op_Inequality()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x11CD794", Offset = "0x11CD794", VA = "0x11CD794")]
		[Preserve]
		public static void UnityEngine_TerrainData_op_Implicit()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x11CD864", Offset = "0x11CD864", VA = "0x11CD864")]
		[Preserve]
		public static void UnityEngine_TerrainData_op_Equality()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x11CD93C", Offset = "0x11CD93C", VA = "0x11CD93C")]
		[Preserve]
		public static void UnityEngine_TerrainData_op_Inequality()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x11CDA14", Offset = "0x11CDA14", VA = "0x11CDA14")]
		[Preserve]
		public static void UnityEngine_TerrainLayer_op_Implicit()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x11CDAE4", Offset = "0x11CDAE4", VA = "0x11CDAE4")]
		[Preserve]
		public static void UnityEngine_TerrainLayer_op_Equality()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x11CDBBC", Offset = "0x11CDBBC", VA = "0x11CDBBC")]
		[Preserve]
		public static void UnityEngine_TerrainLayer_op_Inequality()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x11CDC94", Offset = "0x11CDC94", VA = "0x11CDC94")]
		[Preserve]
		public static void UnityEngine_TerrainCollider_op_Implicit()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x11CDD64", Offset = "0x11CDD64", VA = "0x11CDD64")]
		[Preserve]
		public static void UnityEngine_TerrainCollider_op_Equality()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x11CDE3C", Offset = "0x11CDE3C", VA = "0x11CDE3C")]
		[Preserve]
		public static void UnityEngine_TerrainCollider_op_Inequality()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x11CDF14", Offset = "0x11CDF14", VA = "0x11CDF14")]
		[Preserve]
		public static void UnityEngine_TextMesh_op_Implicit()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x11CDFE4", Offset = "0x11CDFE4", VA = "0x11CDFE4")]
		[Preserve]
		public static void UnityEngine_TextMesh_op_Equality()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x11CE0BC", Offset = "0x11CE0BC", VA = "0x11CE0BC")]
		[Preserve]
		public static void UnityEngine_TextMesh_op_Inequality()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x11CE194", Offset = "0x11CE194", VA = "0x11CE194")]
		[Preserve]
		public static void UnityEngine_Font_op_Implicit()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x11CE264", Offset = "0x11CE264", VA = "0x11CE264")]
		[Preserve]
		public static void UnityEngine_Font_op_Equality()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x11CE33C", Offset = "0x11CE33C", VA = "0x11CE33C")]
		[Preserve]
		public static void UnityEngine_Font_op_Inequality()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x11CE414", Offset = "0x11CE414", VA = "0x11CE414")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tile_op_Implicit()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x11CE4E4", Offset = "0x11CE4E4", VA = "0x11CE4E4")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tile_op_Equality()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x11CE5BC", Offset = "0x11CE5BC", VA = "0x11CE5BC")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tile_op_Inequality()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x11CE694", Offset = "0x11CE694", VA = "0x11CE694")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tilemap_op_Implicit()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x11CE764", Offset = "0x11CE764", VA = "0x11CE764")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tilemap_op_Equality()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x11CE83C", Offset = "0x11CE83C", VA = "0x11CE83C")]
		[Preserve]
		public static void UnityEngine_Tilemaps_Tilemap_op_Inequality()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x11CE914", Offset = "0x11CE914", VA = "0x11CE914")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x11CE9E4", Offset = "0x11CE9E4", VA = "0x11CE9E4")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Equality()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x11CEABC", Offset = "0x11CEABC", VA = "0x11CEABC")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x11CEB94", Offset = "0x11CEB94", VA = "0x11CEB94")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Implicit()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x11CEC64", Offset = "0x11CEC64", VA = "0x11CEC64")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Equality()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x11CED3C", Offset = "0x11CED3C", VA = "0x11CED3C")]
		[Preserve]
		public static void UnityEngine_Tilemaps_TilemapCollider2D_op_Inequality()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x11CEE14", Offset = "0x11CEE14", VA = "0x11CEE14")]
		[Preserve]
		public static void UnityEngine_CanvasGroup_op_Implicit()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x11CEEE4", Offset = "0x11CEEE4", VA = "0x11CEEE4")]
		[Preserve]
		public static void UnityEngine_CanvasGroup_op_Equality()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x11CEFBC", Offset = "0x11CEFBC", VA = "0x11CEFBC")]
		[Preserve]
		public static void UnityEngine_CanvasGroup_op_Inequality()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x11CF094", Offset = "0x11CF094", VA = "0x11CF094")]
		[Preserve]
		public static void UnityEngine_CanvasRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x11CF164", Offset = "0x11CF164", VA = "0x11CF164")]
		[Preserve]
		public static void UnityEngine_CanvasRenderer_op_Equality()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x11CF23C", Offset = "0x11CF23C", VA = "0x11CF23C")]
		[Preserve]
		public static void UnityEngine_CanvasRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x11CF314", Offset = "0x11CF314", VA = "0x11CF314")]
		[Preserve]
		public static void UnityEngine_Canvas_op_Implicit()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x11CF3E4", Offset = "0x11CF3E4", VA = "0x11CF3E4")]
		[Preserve]
		public static void UnityEngine_Canvas_op_Equality()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x11CF4BC", Offset = "0x11CF4BC", VA = "0x11CF4BC")]
		[Preserve]
		public static void UnityEngine_Canvas_op_Inequality()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x11CF594", Offset = "0x11CF594", VA = "0x11CF594")]
		[Preserve]
		public static void UnityEngine_UIElements_VectorImage_op_Implicit()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x11CF664", Offset = "0x11CF664", VA = "0x11CF664")]
		[Preserve]
		public static void UnityEngine_UIElements_VectorImage_op_Equality()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x11CF73C", Offset = "0x11CF73C", VA = "0x11CF73C")]
		[Preserve]
		public static void UnityEngine_UIElements_VectorImage_op_Inequality()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x11CF814", Offset = "0x11CF814", VA = "0x11CF814")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelSettings_op_Implicit()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x11CF8E4", Offset = "0x11CF8E4", VA = "0x11CF8E4")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelSettings_op_Equality()
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x11CF9BC", Offset = "0x11CF9BC", VA = "0x11CF9BC")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelSettings_op_Inequality()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x11CFA94", Offset = "0x11CFA94", VA = "0x11CFA94")]
		[Preserve]
		public static void UnityEngine_UIElements_UIDocument_op_Implicit()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x11CFB64", Offset = "0x11CFB64", VA = "0x11CFB64")]
		[Preserve]
		public static void UnityEngine_UIElements_UIDocument_op_Equality()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x11CFC3C", Offset = "0x11CFC3C", VA = "0x11CFC3C")]
		[Preserve]
		public static void UnityEngine_UIElements_UIDocument_op_Inequality()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x11CFD14", Offset = "0x11CFD14", VA = "0x11CFD14")]
		[Preserve]
		public static void UnityEngine_UIElements_StyleSheet_op_Implicit()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x11CFDE4", Offset = "0x11CFDE4", VA = "0x11CFDE4")]
		[Preserve]
		public static void UnityEngine_UIElements_StyleSheet_op_Equality()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x11CFEBC", Offset = "0x11CFEBC", VA = "0x11CFEBC")]
		[Preserve]
		public static void UnityEngine_UIElements_StyleSheet_op_Inequality()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x11CFF94", Offset = "0x11CFF94", VA = "0x11CFF94")]
		[Preserve]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Implicit()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x11D0064", Offset = "0x11D0064", VA = "0x11D0064")]
		[Preserve]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Equality()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x11D013C", Offset = "0x11D013C", VA = "0x11D013C")]
		[Preserve]
		public static void UnityEngine_UIElements_ThemeStyleSheet_op_Inequality()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x11D0214", Offset = "0x11D0214", VA = "0x11D0214")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Implicit()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x11D02E4", Offset = "0x11D02E4", VA = "0x11D02E4")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Equality()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x11D03BC", Offset = "0x11D03BC", VA = "0x11D03BC")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelTextSettings_op_Inequality()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x11D0494", Offset = "0x11D0494", VA = "0x11D0494")]
		[Preserve]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Implicit()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x11D0564", Offset = "0x11D0564", VA = "0x11D0564")]
		[Preserve]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Equality()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x11D063C", Offset = "0x11D063C", VA = "0x11D063C")]
		[Preserve]
		public static void UnityEngine_UIElements_VisualTreeAsset_op_Inequality()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x11D0714", Offset = "0x11D0714", VA = "0x11D0714")]
		[Preserve]
		public static void UnityEngine_WheelCollider_op_Implicit()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x11D07E4", Offset = "0x11D07E4", VA = "0x11D07E4")]
		[Preserve]
		public static void UnityEngine_WheelCollider_op_Equality()
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x11D08BC", Offset = "0x11D08BC", VA = "0x11D08BC")]
		[Preserve]
		public static void UnityEngine_WheelCollider_op_Inequality()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x11D0994", Offset = "0x11D0994", VA = "0x11D0994")]
		[Preserve]
		public static void UnityEngine_Video_VideoClip_op_Implicit()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x11D0A64", Offset = "0x11D0A64", VA = "0x11D0A64")]
		[Preserve]
		public static void UnityEngine_Video_VideoClip_op_Equality()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x11D0B3C", Offset = "0x11D0B3C", VA = "0x11D0B3C")]
		[Preserve]
		public static void UnityEngine_Video_VideoClip_op_Inequality()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x11D0C14", Offset = "0x11D0C14", VA = "0x11D0C14")]
		[Preserve]
		public static void UnityEngine_Video_VideoPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x11D0CE4", Offset = "0x11D0CE4", VA = "0x11D0CE4")]
		[Preserve]
		public static void UnityEngine_Video_VideoPlayer_op_Equality()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x11D0DBC", Offset = "0x11D0DBC", VA = "0x11D0DBC")]
		[Preserve]
		public static void UnityEngine_Video_VideoPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x11D0E94", Offset = "0x11D0E94", VA = "0x11D0E94")]
		[Preserve]
		public static void UnityEngine_WindZone_op_Implicit()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x11D0F64", Offset = "0x11D0F64", VA = "0x11D0F64")]
		[Preserve]
		public static void UnityEngine_WindZone_op_Equality()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x11D103C", Offset = "0x11D103C", VA = "0x11D103C")]
		[Preserve]
		public static void UnityEngine_WindZone_op_Inequality()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x11D1114", Offset = "0x11D1114", VA = "0x11D1114")]
		[Preserve]
		public static void BounceScroll_op_Implicit()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x11D11E4", Offset = "0x11D11E4", VA = "0x11D11E4")]
		[Preserve]
		public static void BounceScroll_op_Equality()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x11D12BC", Offset = "0x11D12BC", VA = "0x11D12BC")]
		[Preserve]
		public static void BounceScroll_op_Inequality()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x11D1394", Offset = "0x11D1394", VA = "0x11D1394")]
		[Preserve]
		public static void rcCRTParams_op_Implicit()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x11D1464", Offset = "0x11D1464", VA = "0x11D1464")]
		[Preserve]
		public static void rcCRTParams_op_Equality()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x11D153C", Offset = "0x11D153C", VA = "0x11D153C")]
		[Preserve]
		public static void rcCRTParams_op_Inequality()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x11D1614", Offset = "0x11D1614", VA = "0x11D1614")]
		[Preserve]
		public static void rcCRTRender_op_Implicit()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x11D16E4", Offset = "0x11D16E4", VA = "0x11D16E4")]
		[Preserve]
		public static void rcCRTRender_op_Equality()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x11D17BC", Offset = "0x11D17BC", VA = "0x11D17BC")]
		[Preserve]
		public static void rcCRTRender_op_Inequality()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x11D1894", Offset = "0x11D1894", VA = "0x11D1894")]
		[Preserve]
		public static void GBADebugMenuInit_op_Implicit()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x11D1964", Offset = "0x11D1964", VA = "0x11D1964")]
		[Preserve]
		public static void GBADebugMenuInit_op_Equality()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x11D1A3C", Offset = "0x11D1A3C", VA = "0x11D1A3C")]
		[Preserve]
		public static void GBADebugMenuInit_op_Inequality()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x11D1B14", Offset = "0x11D1B14", VA = "0x11D1B14")]
		[Preserve]
		public static void rcPhyHandsTweakerControlTool_op_Implicit()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x11D1BE4", Offset = "0x11D1BE4", VA = "0x11D1BE4")]
		[Preserve]
		public static void rcPhyHandsTweakerControlTool_op_Equality()
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x11D1CBC", Offset = "0x11D1CBC", VA = "0x11D1CBC")]
		[Preserve]
		public static void rcPhyHandsTweakerControlTool_op_Inequality()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x11D1D94", Offset = "0x11D1D94", VA = "0x11D1D94")]
		[Preserve]
		public static void rcPhyHandsTweakerMagnet_op_Implicit()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x11D1E64", Offset = "0x11D1E64", VA = "0x11D1E64")]
		[Preserve]
		public static void rcPhyHandsTweakerMagnet_op_Equality()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x11D1F3C", Offset = "0x11D1F3C", VA = "0x11D1F3C")]
		[Preserve]
		public static void rcPhyHandsTweakerMagnet_op_Inequality()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x11D2014", Offset = "0x11D2014", VA = "0x11D2014")]
		[Preserve]
		public static void rcPhyHandsTweakerMain_op_Implicit()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x11D20E4", Offset = "0x11D20E4", VA = "0x11D20E4")]
		[Preserve]
		public static void rcPhyHandsTweakerMain_op_Equality()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x11D21BC", Offset = "0x11D21BC", VA = "0x11D21BC")]
		[Preserve]
		public static void rcPhyHandsTweakerMain_op_Inequality()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x11D2294", Offset = "0x11D2294", VA = "0x11D2294")]
		[Preserve]
		public static void rcPhyHandsTweakerMaterials_op_Implicit()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x11D2364", Offset = "0x11D2364", VA = "0x11D2364")]
		[Preserve]
		public static void rcPhyHandsTweakerMaterials_op_Equality()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x11D243C", Offset = "0x11D243C", VA = "0x11D243C")]
		[Preserve]
		public static void rcPhyHandsTweakerMaterials_op_Inequality()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x11D2514", Offset = "0x11D2514", VA = "0x11D2514")]
		[Preserve]
		public static void rcPhyHandsTweakerPassthrough_op_Implicit()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x11D25E4", Offset = "0x11D25E4", VA = "0x11D25E4")]
		[Preserve]
		public static void rcPhyHandsTweakerPassthrough_op_Equality()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x11D26BC", Offset = "0x11D26BC", VA = "0x11D26BC")]
		[Preserve]
		public static void rcPhyHandsTweakerPassthrough_op_Inequality()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x11D2794", Offset = "0x11D2794", VA = "0x11D2794")]
		[Preserve]
		public static void rcPhyHandsTweakerPhysicEngine_op_Implicit()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x11D2864", Offset = "0x11D2864", VA = "0x11D2864")]
		[Preserve]
		public static void rcPhyHandsTweakerPhysicEngine_op_Equality()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x11D293C", Offset = "0x11D293C", VA = "0x11D293C")]
		[Preserve]
		public static void rcPhyHandsTweakerPhysicEngine_op_Inequality()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x11D2A14", Offset = "0x11D2A14", VA = "0x11D2A14")]
		[Preserve]
		public static void rcPhyHandsTweakerSubTemplate_op_Implicit()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x11D2AE4", Offset = "0x11D2AE4", VA = "0x11D2AE4")]
		[Preserve]
		public static void rcPhyHandsTweakerSubTemplate_op_Equality()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x11D2BBC", Offset = "0x11D2BBC", VA = "0x11D2BBC")]
		[Preserve]
		public static void rcPhyHandsTweakerSubTemplate_op_Inequality()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x11D2C94", Offset = "0x11D2C94", VA = "0x11D2C94")]
		[Preserve]
		public static void ScreenShotRenderer_op_Implicit()
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x11D2D64", Offset = "0x11D2D64", VA = "0x11D2D64")]
		[Preserve]
		public static void ScreenShotRenderer_op_Equality()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x11D2E3C", Offset = "0x11D2E3C", VA = "0x11D2E3C")]
		[Preserve]
		public static void ScreenShotRenderer_op_Inequality()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x11D2F14", Offset = "0x11D2F14", VA = "0x11D2F14")]
		[Preserve]
		public static void ChallengeAnalytics_op_Implicit()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x11D2FE4", Offset = "0x11D2FE4", VA = "0x11D2FE4")]
		[Preserve]
		public static void ChallengeAnalytics_op_Equality()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x11D30BC", Offset = "0x11D30BC", VA = "0x11D30BC")]
		[Preserve]
		public static void ChallengeAnalytics_op_Inequality()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x11D3194", Offset = "0x11D3194", VA = "0x11D3194")]
		[Preserve]
		public static void GameSessionAnalytics_op_Implicit()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x11D3264", Offset = "0x11D3264", VA = "0x11D3264")]
		[Preserve]
		public static void GameSessionAnalytics_op_Equality()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x11D333C", Offset = "0x11D333C", VA = "0x11D333C")]
		[Preserve]
		public static void GameSessionAnalytics_op_Inequality()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x11D3414", Offset = "0x11D3414", VA = "0x11D3414")]
		[Preserve]
		public static void GBAAnalytics_op_Implicit()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x11D34E4", Offset = "0x11D34E4", VA = "0x11D34E4")]
		[Preserve]
		public static void GBAAnalytics_op_Equality()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x11D35BC", Offset = "0x11D35BC", VA = "0x11D35BC")]
		[Preserve]
		public static void GBAAnalytics_op_Inequality()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x11D3694", Offset = "0x11D3694", VA = "0x11D3694")]
		[Preserve]
		public static void LevelAnalytics_op_Implicit()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x11D3764", Offset = "0x11D3764", VA = "0x11D3764")]
		[Preserve]
		public static void LevelAnalytics_op_Equality()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x11D383C", Offset = "0x11D383C", VA = "0x11D383C")]
		[Preserve]
		public static void LevelAnalytics_op_Inequality()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x11D3914", Offset = "0x11D3914", VA = "0x11D3914")]
		[Preserve]
		public static void OnlineAnalytics_op_Implicit()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x11D39E4", Offset = "0x11D39E4", VA = "0x11D39E4")]
		[Preserve]
		public static void OnlineAnalytics_op_Equality()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x11D3ABC", Offset = "0x11D3ABC", VA = "0x11D3ABC")]
		[Preserve]
		public static void OnlineAnalytics_op_Inequality()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x11D3B94", Offset = "0x11D3B94", VA = "0x11D3B94")]
		[Preserve]
		public static void PlayerStatistics_op_Implicit()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x11D3C64", Offset = "0x11D3C64", VA = "0x11D3C64")]
		[Preserve]
		public static void PlayerStatistics_op_Equality()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x11D3D3C", Offset = "0x11D3D3C", VA = "0x11D3D3C")]
		[Preserve]
		public static void PlayerStatistics_op_Inequality()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x11D3E14", Offset = "0x11D3E14", VA = "0x11D3E14")]
		[Preserve]
		public static void PlayerStatisticsDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x11D3EE4", Offset = "0x11D3EE4", VA = "0x11D3EE4")]
		[Preserve]
		public static void PlayerStatisticsDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x11D3FBC", Offset = "0x11D3FBC", VA = "0x11D3FBC")]
		[Preserve]
		public static void PlayerStatisticsDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x11D4094", Offset = "0x11D4094", VA = "0x11D4094")]
		[Preserve]
		public static void TimeTracking_op_Implicit()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x11D4164", Offset = "0x11D4164", VA = "0x11D4164")]
		[Preserve]
		public static void TimeTracking_op_Equality()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x11D423C", Offset = "0x11D423C", VA = "0x11D423C")]
		[Preserve]
		public static void TimeTracking_op_Inequality()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x11D4314", Offset = "0x11D4314", VA = "0x11D4314")]
		[Preserve]
		public static void ArcadeGameDefaultSetup_op_Implicit()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x11D43E4", Offset = "0x11D43E4", VA = "0x11D43E4")]
		[Preserve]
		public static void ArcadeGameDefaultSetup_op_Equality()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x11D44BC", Offset = "0x11D44BC", VA = "0x11D44BC")]
		[Preserve]
		public static void ArcadeGameDefaultSetup_op_Inequality()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x11D4594", Offset = "0x11D4594", VA = "0x11D4594")]
		[Preserve]
		public static void ArcadeGameMovingHoop_op_Implicit()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x11D4664", Offset = "0x11D4664", VA = "0x11D4664")]
		[Preserve]
		public static void ArcadeGameMovingHoop_op_Equality()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x11D473C", Offset = "0x11D473C", VA = "0x11D473C")]
		[Preserve]
		public static void ArcadeGameMovingHoop_op_Inequality()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x11D4814", Offset = "0x11D4814", VA = "0x11D4814")]
		[Preserve]
		public static void ArcadeGameStepingHoop_op_Implicit()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x11D48E4", Offset = "0x11D48E4", VA = "0x11D48E4")]
		[Preserve]
		public static void ArcadeGameStepingHoop_op_Equality()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x11D49BC", Offset = "0x11D49BC", VA = "0x11D49BC")]
		[Preserve]
		public static void ArcadeGameStepingHoop_op_Inequality()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x11D4A94", Offset = "0x11D4A94", VA = "0x11D4A94")]
		[Preserve]
		public static void BasketballAudio_op_Implicit()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x11D4B64", Offset = "0x11D4B64", VA = "0x11D4B64")]
		[Preserve]
		public static void BasketballAudio_op_Equality()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x11D4C3C", Offset = "0x11D4C3C", VA = "0x11D4C3C")]
		[Preserve]
		public static void BasketballAudio_op_Inequality()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x11D4D14", Offset = "0x11D4D14", VA = "0x11D4D14")]
		[Preserve]
		public static void BasketballImpactSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x11D4DE4", Offset = "0x11D4DE4", VA = "0x11D4DE4")]
		[Preserve]
		public static void BasketballImpactSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x11D4EBC", Offset = "0x11D4EBC", VA = "0x11D4EBC")]
		[Preserve]
		public static void BasketballImpactSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x11D4F94", Offset = "0x11D4F94", VA = "0x11D4F94")]
		[Preserve]
		public static void ChallengeGameAmbiance_op_Implicit()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x11D5064", Offset = "0x11D5064", VA = "0x11D5064")]
		[Preserve]
		public static void ChallengeGameAmbiance_op_Equality()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x11D513C", Offset = "0x11D513C", VA = "0x11D513C")]
		[Preserve]
		public static void ChallengeGameAmbiance_op_Inequality()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x11D5214", Offset = "0x11D5214", VA = "0x11D5214")]
		[Preserve]
		public static void GameAmbianceManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x11D52E4", Offset = "0x11D52E4", VA = "0x11D52E4")]
		[Preserve]
		public static void GameAmbianceManager_op_Equality()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x11D53BC", Offset = "0x11D53BC", VA = "0x11D53BC")]
		[Preserve]
		public static void GameAmbianceManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x11D5494", Offset = "0x11D5494", VA = "0x11D5494")]
		[Preserve]
		public static void GameAmbianceManagerReference_op_Implicit()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x11D5564", Offset = "0x11D5564", VA = "0x11D5564")]
		[Preserve]
		public static void GameAmbianceManagerReference_op_Equality()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x11D563C", Offset = "0x11D563C", VA = "0x11D563C")]
		[Preserve]
		public static void GameAmbianceManagerReference_op_Inequality()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x11D5714", Offset = "0x11D5714", VA = "0x11D5714")]
		[Preserve]
		public static void ImpactAudioEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x11D57E4", Offset = "0x11D57E4", VA = "0x11D57E4")]
		[Preserve]
		public static void ImpactAudioEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x11D58BC", Offset = "0x11D58BC", VA = "0x11D58BC")]
		[Preserve]
		public static void ImpactAudioEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x11D5994", Offset = "0x11D5994", VA = "0x11D5994")]
		[Preserve]
		public static void LoopAudioSource_op_Implicit()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x11D5A64", Offset = "0x11D5A64", VA = "0x11D5A64")]
		[Preserve]
		public static void LoopAudioSource_op_Equality()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x11D5B3C", Offset = "0x11D5B3C", VA = "0x11D5B3C")]
		[Preserve]
		public static void LoopAudioSource_op_Inequality()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x11D5C14", Offset = "0x11D5C14", VA = "0x11D5C14")]
		[Preserve]
		public static void MissionStatePlayAudioSource_op_Implicit()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x11D5CE4", Offset = "0x11D5CE4", VA = "0x11D5CE4")]
		[Preserve]
		public static void MissionStatePlayAudioSource_op_Equality()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x11D5DBC", Offset = "0x11D5DBC", VA = "0x11D5DBC")]
		[Preserve]
		public static void MissionStatePlayAudioSource_op_Inequality()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x11D5E94", Offset = "0x11D5E94", VA = "0x11D5E94")]
		[Preserve]
		public static void rcAudioEventGameParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x11D5F64", Offset = "0x11D5F64", VA = "0x11D5F64")]
		[Preserve]
		public static void rcAudioEventGameParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x11D603C", Offset = "0x11D603C", VA = "0x11D603C")]
		[Preserve]
		public static void rcAudioEventGameParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x11D6114", Offset = "0x11D6114", VA = "0x11D6114")]
		[Preserve]
		public static void StepGameAmbianceManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x11D61E4", Offset = "0x11D61E4", VA = "0x11D61E4")]
		[Preserve]
		public static void StepGameAmbianceManager_op_Equality()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x11D62BC", Offset = "0x11D62BC", VA = "0x11D62BC")]
		[Preserve]
		public static void StepGameAmbianceManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x11D6394", Offset = "0x11D6394", VA = "0x11D6394")]
		[Preserve]
		public static void StepGameAmbianceSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x11D6464", Offset = "0x11D6464", VA = "0x11D6464")]
		[Preserve]
		public static void StepGameAmbianceSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x11D653C", Offset = "0x11D653C", VA = "0x11D653C")]
		[Preserve]
		public static void StepGameAmbianceSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x11D6614", Offset = "0x11D6614", VA = "0x11D6614")]
		[Preserve]
		public static void AudioMixerController_op_Implicit()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x11D66E4", Offset = "0x11D66E4", VA = "0x11D66E4")]
		[Preserve]
		public static void AudioMixerController_op_Equality()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x11D67BC", Offset = "0x11D67BC", VA = "0x11D67BC")]
		[Preserve]
		public static void AudioMixerController_op_Inequality()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x11D6894", Offset = "0x11D6894", VA = "0x11D6894")]
		[Preserve]
		public static void Dispenser_op_Implicit()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x11D6964", Offset = "0x11D6964", VA = "0x11D6964")]
		[Preserve]
		public static void Dispenser_op_Equality()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x11D6A3C", Offset = "0x11D6A3C", VA = "0x11D6A3C")]
		[Preserve]
		public static void Dispenser_op_Inequality()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x11D6B14", Offset = "0x11D6B14", VA = "0x11D6B14")]
		[Preserve]
		public static void DispenserModelSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x11D6BE4", Offset = "0x11D6BE4", VA = "0x11D6BE4")]
		[Preserve]
		public static void DispenserModelSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x11D6CBC", Offset = "0x11D6CBC", VA = "0x11D6CBC")]
		[Preserve]
		public static void DispenserModelSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x11D6D94", Offset = "0x11D6D94", VA = "0x11D6D94")]
		[Preserve]
		public static void DistanceRespawner_op_Implicit()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x11D6E64", Offset = "0x11D6E64", VA = "0x11D6E64")]
		[Preserve]
		public static void DistanceRespawner_op_Equality()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x11D6F3C", Offset = "0x11D6F3C", VA = "0x11D6F3C")]
		[Preserve]
		public static void DistanceRespawner_op_Inequality()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x11D7014", Offset = "0x11D7014", VA = "0x11D7014")]
		[Preserve]
		public static void FloorCollisionRespawn_op_Implicit()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x11D70E4", Offset = "0x11D70E4", VA = "0x11D70E4")]
		[Preserve]
		public static void FloorCollisionRespawn_op_Equality()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x11D71BC", Offset = "0x11D71BC", VA = "0x11D71BC")]
		[Preserve]
		public static void FloorCollisionRespawn_op_Inequality()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x11D7294", Offset = "0x11D7294", VA = "0x11D7294")]
		[Preserve]
		public static void NetworkedDispenserRespawn_op_Implicit()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x11D7364", Offset = "0x11D7364", VA = "0x11D7364")]
		[Preserve]
		public static void NetworkedDispenserRespawn_op_Equality()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x11D743C", Offset = "0x11D743C", VA = "0x11D743C")]
		[Preserve]
		public static void NetworkedDispenserRespawn_op_Inequality()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x11D7514", Offset = "0x11D7514", VA = "0x11D7514")]
		[Preserve]
		public static void BallManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x11D75E4", Offset = "0x11D75E4", VA = "0x11D75E4")]
		[Preserve]
		public static void BallManager_op_Equality()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x11D76BC", Offset = "0x11D76BC", VA = "0x11D76BC")]
		[Preserve]
		public static void BallManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x11D7794", Offset = "0x11D7794", VA = "0x11D7794")]
		[Preserve]
		public static void BallPrefabCollection_op_Implicit()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x11D7864", Offset = "0x11D7864", VA = "0x11D7864")]
		[Preserve]
		public static void BallPrefabCollection_op_Equality()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x11D793C", Offset = "0x11D793C", VA = "0x11D793C")]
		[Preserve]
		public static void BallPrefabCollection_op_Inequality()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x11D7A14", Offset = "0x11D7A14", VA = "0x11D7A14")]
		[Preserve]
		public static void BallsPool_op_Implicit()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x11D7AE4", Offset = "0x11D7AE4", VA = "0x11D7AE4")]
		[Preserve]
		public static void BallsPool_op_Equality()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x11D7BBC", Offset = "0x11D7BBC", VA = "0x11D7BBC")]
		[Preserve]
		public static void BallsPool_op_Inequality()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x11D7C94", Offset = "0x11D7C94", VA = "0x11D7C94")]
		[Preserve]
		public static void BallsPoolSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x11D7D64", Offset = "0x11D7D64", VA = "0x11D7D64")]
		[Preserve]
		public static void BallsPoolSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x11D7E3C", Offset = "0x11D7E3C", VA = "0x11D7E3C")]
		[Preserve]
		public static void BallsPoolSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x11D7F14", Offset = "0x11D7F14", VA = "0x11D7F14")]
		[Preserve]
		public static void BallTagsList_op_Implicit()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x11D7FE4", Offset = "0x11D7FE4", VA = "0x11D7FE4")]
		[Preserve]
		public static void BallTagsList_op_Equality()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x11D80BC", Offset = "0x11D80BC", VA = "0x11D80BC")]
		[Preserve]
		public static void BallTagsList_op_Inequality()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x11D8194", Offset = "0x11D8194", VA = "0x11D8194")]
		[Preserve]
		public static void BallTriggerableArea_op_Implicit()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x11D8264", Offset = "0x11D8264", VA = "0x11D8264")]
		[Preserve]
		public static void BallTriggerableArea_op_Equality()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x11D833C", Offset = "0x11D833C", VA = "0x11D833C")]
		[Preserve]
		public static void BallTriggerableArea_op_Inequality()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x11D8414", Offset = "0x11D8414", VA = "0x11D8414")]
		[Preserve]
		public static void BasketBall2HandMagnet_op_Implicit()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x11D84E4", Offset = "0x11D84E4", VA = "0x11D84E4")]
		[Preserve]
		public static void BasketBall2HandMagnet_op_Equality()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x11D85BC", Offset = "0x11D85BC", VA = "0x11D85BC")]
		[Preserve]
		public static void BasketBall2HandMagnet_op_Inequality()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x11D8694", Offset = "0x11D8694", VA = "0x11D8694")]
		[Preserve]
		public static void BasketballFX_op_Implicit()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x11D8764", Offset = "0x11D8764", VA = "0x11D8764")]
		[Preserve]
		public static void BasketballFX_op_Equality()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x11D883C", Offset = "0x11D883C", VA = "0x11D883C")]
		[Preserve]
		public static void BasketballFX_op_Inequality()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x11D8914", Offset = "0x11D8914", VA = "0x11D8914")]
		[Preserve]
		public static void BasketballGlass_op_Implicit()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x11D89E4", Offset = "0x11D89E4", VA = "0x11D89E4")]
		[Preserve]
		public static void BasketballGlass_op_Equality()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x11D8ABC", Offset = "0x11D8ABC", VA = "0x11D8ABC")]
		[Preserve]
		public static void BasketballGlass_op_Inequality()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x11D8B94", Offset = "0x11D8B94", VA = "0x11D8B94")]
		[Preserve]
		public static void BBallTouchable_op_Implicit()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x11D8C64", Offset = "0x11D8C64", VA = "0x11D8C64")]
		[Preserve]
		public static void BBallTouchable_op_Equality()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x11D8D3C", Offset = "0x11D8D3C", VA = "0x11D8D3C")]
		[Preserve]
		public static void BBallTouchable_op_Inequality()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x11D8E14", Offset = "0x11D8E14", VA = "0x11D8E14")]
		[Preserve]
		public static void BonusShotManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x11D8EE4", Offset = "0x11D8EE4", VA = "0x11D8EE4")]
		[Preserve]
		public static void BonusShotManager_op_Equality()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x11D8FBC", Offset = "0x11D8FBC", VA = "0x11D8FBC")]
		[Preserve]
		public static void BonusShotManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x11D9094", Offset = "0x11D9094", VA = "0x11D9094")]
		[Preserve]
		public static void BorneButtonHilighable_op_Implicit()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x11D9164", Offset = "0x11D9164", VA = "0x11D9164")]
		[Preserve]
		public static void BorneButtonHilighable_op_Equality()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x11D923C", Offset = "0x11D923C", VA = "0x11D923C")]
		[Preserve]
		public static void BorneButtonHilighable_op_Inequality()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x11D9314", Offset = "0x11D9314", VA = "0x11D9314")]
		[Preserve]
		public static void BotBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x11D93E4", Offset = "0x11D93E4", VA = "0x11D93E4")]
		[Preserve]
		public static void BotBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x11D94BC", Offset = "0x11D94BC", VA = "0x11D94BC")]
		[Preserve]
		public static void BotBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x11D9594", Offset = "0x11D9594", VA = "0x11D9594")]
		[Preserve]
		public static void BotInitialization_op_Implicit()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x11D9664", Offset = "0x11D9664", VA = "0x11D9664")]
		[Preserve]
		public static void BotInitialization_op_Equality()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x11D973C", Offset = "0x11D973C", VA = "0x11D973C")]
		[Preserve]
		public static void BotInitialization_op_Inequality()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x11D9814", Offset = "0x11D9814", VA = "0x11D9814")]
		[Preserve]
		public static void BotMatchFinder_op_Implicit()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x11D98E4", Offset = "0x11D98E4", VA = "0x11D98E4")]
		[Preserve]
		public static void BotMatchFinder_op_Equality()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x11D99BC", Offset = "0x11D99BC", VA = "0x11D99BC")]
		[Preserve]
		public static void BotMatchFinder_op_Inequality()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x11D9A94", Offset = "0x11D9A94", VA = "0x11D9A94")]
		[Preserve]
		public static void BotRoomFinder_op_Implicit()
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x11D9B64", Offset = "0x11D9B64", VA = "0x11D9B64")]
		[Preserve]
		public static void BotRoomFinder_op_Equality()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x11D9C3C", Offset = "0x11D9C3C", VA = "0x11D9C3C")]
		[Preserve]
		public static void BotRoomFinder_op_Inequality()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x11D9D14", Offset = "0x11D9D14", VA = "0x11D9D14")]
		[Preserve]
		public static void rcFollowRotation_op_Implicit()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x11D9DE4", Offset = "0x11D9DE4", VA = "0x11D9DE4")]
		[Preserve]
		public static void rcFollowRotation_op_Equality()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x11D9EBC", Offset = "0x11D9EBC", VA = "0x11D9EBC")]
		[Preserve]
		public static void rcFollowRotation_op_Inequality()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x11D9F94", Offset = "0x11D9F94", VA = "0x11D9F94")]
		[Preserve]
		public static void BreakableGrave_op_Implicit()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x11DA064", Offset = "0x11DA064", VA = "0x11DA064")]
		[Preserve]
		public static void BreakableGrave_op_Equality()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x11DA13C", Offset = "0x11DA13C", VA = "0x11DA13C")]
		[Preserve]
		public static void BreakableGrave_op_Inequality()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x11DA214", Offset = "0x11DA214", VA = "0x11DA214")]
		[Preserve]
		public static void BreakableGraveAnimatorEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x11DA2E4", Offset = "0x11DA2E4", VA = "0x11DA2E4")]
		[Preserve]
		public static void BreakableGraveAnimatorEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x11DA3BC", Offset = "0x11DA3BC", VA = "0x11DA3BC")]
		[Preserve]
		public static void BreakableGraveAnimatorEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x11DA494", Offset = "0x11DA494", VA = "0x11DA494")]
		[Preserve]
		public static void BreakableGraveBonusPoint_op_Implicit()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x11DA564", Offset = "0x11DA564", VA = "0x11DA564")]
		[Preserve]
		public static void BreakableGraveBonusPoint_op_Equality()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x11DA63C", Offset = "0x11DA63C", VA = "0x11DA63C")]
		[Preserve]
		public static void BreakableGraveBonusPoint_op_Inequality()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x11DA714", Offset = "0x11DA714", VA = "0x11DA714")]
		[Preserve]
		public static void BreakableGraveManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x11DA7E4", Offset = "0x11DA7E4", VA = "0x11DA7E4")]
		[Preserve]
		public static void BreakableGraveManager_op_Equality()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x11DA8BC", Offset = "0x11DA8BC", VA = "0x11DA8BC")]
		[Preserve]
		public static void BreakableGraveManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x11DA994", Offset = "0x11DA994", VA = "0x11DA994")]
		[Preserve]
		public static void BreakableGraveNoComboReset_op_Implicit()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x11DAA64", Offset = "0x11DAA64", VA = "0x11DAA64")]
		[Preserve]
		public static void BreakableGraveNoComboReset_op_Equality()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x11DAB3C", Offset = "0x11DAB3C", VA = "0x11DAB3C")]
		[Preserve]
		public static void BreakableGraveNoComboReset_op_Inequality()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x11DAC14", Offset = "0x11DAC14", VA = "0x11DAC14")]
		[Preserve]
		public static void BuildProcessorSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x11DACE4", Offset = "0x11DACE4", VA = "0x11DACE4")]
		[Preserve]
		public static void BuildProcessorSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x11DADBC", Offset = "0x11DADBC", VA = "0x11DADBC")]
		[Preserve]
		public static void BuildProcessorSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x11DAE94", Offset = "0x11DAE94", VA = "0x11DAE94")]
		[Preserve]
		public static void ButtonAnimation_op_Implicit()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x11DAF64", Offset = "0x11DAF64", VA = "0x11DAF64")]
		[Preserve]
		public static void ButtonAnimation_op_Equality()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x11DB03C", Offset = "0x11DB03C", VA = "0x11DB03C")]
		[Preserve]
		public static void ButtonAnimation_op_Inequality()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x11DB114", Offset = "0x11DB114", VA = "0x11DB114")]
		[Preserve]
		public static void CameraChangeClearFlags_op_Implicit()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x11DB1E4", Offset = "0x11DB1E4", VA = "0x11DB1E4")]
		[Preserve]
		public static void CameraChangeClearFlags_op_Equality()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x11DB2BC", Offset = "0x11DB2BC", VA = "0x11DB2BC")]
		[Preserve]
		public static void CameraChangeClearFlags_op_Inequality()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x11DB394", Offset = "0x11DB394", VA = "0x11DB394")]
		[Preserve]
		public static void CanvasFadeOut_op_Implicit()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x11DB464", Offset = "0x11DB464", VA = "0x11DB464")]
		[Preserve]
		public static void CanvasFadeOut_op_Equality()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x11DB53C", Offset = "0x11DB53C", VA = "0x11DB53C")]
		[Preserve]
		public static void CanvasFadeOut_op_Inequality()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x11DB614", Offset = "0x11DB614", VA = "0x11DB614")]
		[Preserve]
		public static void ChallengeBreakCanvas_op_Implicit()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x11DB6E4", Offset = "0x11DB6E4", VA = "0x11DB6E4")]
		[Preserve]
		public static void ChallengeBreakCanvas_op_Equality()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x11DB7BC", Offset = "0x11DB7BC", VA = "0x11DB7BC")]
		[Preserve]
		public static void ChallengeBreakCanvas_op_Inequality()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x11DB894", Offset = "0x11DB894", VA = "0x11DB894")]
		[Preserve]
		public static void ChallengeCanvasManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x11DB964", Offset = "0x11DB964", VA = "0x11DB964")]
		[Preserve]
		public static void ChallengeCanvasManager_op_Equality()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x11DBA3C", Offset = "0x11DBA3C", VA = "0x11DBA3C")]
		[Preserve]
		public static void ChallengeCanvasManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x11DBB14", Offset = "0x11DBB14", VA = "0x11DBB14")]
		[Preserve]
		public static void ChallengeCompleteCanvas_op_Implicit()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x11DBBE4", Offset = "0x11DBBE4", VA = "0x11DBBE4")]
		[Preserve]
		public static void ChallengeCompleteCanvas_op_Equality()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x11DBCBC", Offset = "0x11DBCBC", VA = "0x11DBCBC")]
		[Preserve]
		public static void ChallengeCompleteCanvas_op_Inequality()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x11DBD94", Offset = "0x11DBD94", VA = "0x11DBD94")]
		[Preserve]
		public static void ChallengeEventsListenerBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x11DBE64", Offset = "0x11DBE64", VA = "0x11DBE64")]
		[Preserve]
		public static void ChallengeEventsListenerBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x11DBF3C", Offset = "0x11DBF3C", VA = "0x11DBF3C")]
		[Preserve]
		public static void ChallengeEventsListenerBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x11DC014", Offset = "0x11DC014", VA = "0x11DC014")]
		[Preserve]
		public static void ChallengeJauge_op_Implicit()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x11DC0E4", Offset = "0x11DC0E4", VA = "0x11DC0E4")]
		[Preserve]
		public static void ChallengeJauge_op_Equality()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x11DC1BC", Offset = "0x11DC1BC", VA = "0x11DC1BC")]
		[Preserve]
		public static void ChallengeJauge_op_Inequality()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x11DC294", Offset = "0x11DC294", VA = "0x11DC294")]
		[Preserve]
		public static void ChallengeManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x11DC364", Offset = "0x11DC364", VA = "0x11DC364")]
		[Preserve]
		public static void ChallengeManager_op_Equality()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x11DC43C", Offset = "0x11DC43C", VA = "0x11DC43C")]
		[Preserve]
		public static void ChallengeManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x11DC514", Offset = "0x11DC514", VA = "0x11DC514")]
		[Preserve]
		public static void ChallengeManagerReference_op_Implicit()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x11DC5E4", Offset = "0x11DC5E4", VA = "0x11DC5E4")]
		[Preserve]
		public static void ChallengeManagerReference_op_Equality()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x11DC6BC", Offset = "0x11DC6BC", VA = "0x11DC6BC")]
		[Preserve]
		public static void ChallengeManagerReference_op_Inequality()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x11DC794", Offset = "0x11DC794", VA = "0x11DC794")]
		[Preserve]
		public static void ChallengePlayerSlot_op_Implicit()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x11DC864", Offset = "0x11DC864", VA = "0x11DC864")]
		[Preserve]
		public static void ChallengePlayerSlot_op_Equality()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x11DC93C", Offset = "0x11DC93C", VA = "0x11DC93C")]
		[Preserve]
		public static void ChallengePlayerSlot_op_Inequality()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x11DCA14", Offset = "0x11DCA14", VA = "0x11DCA14")]
		[Preserve]
		public static void ChallengePreset_op_Implicit()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x11DCAE4", Offset = "0x11DCAE4", VA = "0x11DCAE4")]
		[Preserve]
		public static void ChallengePreset_op_Equality()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x11DCBBC", Offset = "0x11DCBBC", VA = "0x11DCBBC")]
		[Preserve]
		public static void ChallengePreset_op_Inequality()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x11DCC94", Offset = "0x11DCC94", VA = "0x11DCC94")]
		[Preserve]
		public static void ChallengePresetsSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x11DCD64", Offset = "0x11DCD64", VA = "0x11DCD64")]
		[Preserve]
		public static void ChallengePresetsSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x11DCE3C", Offset = "0x11DCE3C", VA = "0x11DCE3C")]
		[Preserve]
		public static void ChallengePresetsSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x11DCF14", Offset = "0x11DCF14", VA = "0x11DCF14")]
		[Preserve]
		public static void GBAEventsChallengeOverride_op_Implicit()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x11DCFE4", Offset = "0x11DCFE4", VA = "0x11DCFE4")]
		[Preserve]
		public static void GBAEventsChallengeOverride_op_Equality()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x11DD0BC", Offset = "0x11DD0BC", VA = "0x11DD0BC")]
		[Preserve]
		public static void GBAEventsChallengeOverride_op_Inequality()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x11DD194", Offset = "0x11DD194", VA = "0x11DD194")]
		[Preserve]
		public static void BallCollisionDetection_op_Implicit()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x11DD264", Offset = "0x11DD264", VA = "0x11DD264")]
		[Preserve]
		public static void BallCollisionDetection_op_Equality()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x11DD33C", Offset = "0x11DD33C", VA = "0x11DD33C")]
		[Preserve]
		public static void BallCollisionDetection_op_Inequality()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x11DD414", Offset = "0x11DD414", VA = "0x11DD414")]
		[Preserve]
		public static void BallTriggerDetection_op_Implicit()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x11DD4E4", Offset = "0x11DD4E4", VA = "0x11DD4E4")]
		[Preserve]
		public static void BallTriggerDetection_op_Equality()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x11DD5BC", Offset = "0x11DD5BC", VA = "0x11DD5BC")]
		[Preserve]
		public static void BallTriggerDetection_op_Inequality()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x11DD694", Offset = "0x11DD694", VA = "0x11DD694")]
		[Preserve]
		public static void HandsCoffinAnimatorController_op_Implicit()
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x11DD764", Offset = "0x11DD764", VA = "0x11DD764")]
		[Preserve]
		public static void HandsCoffinAnimatorController_op_Equality()
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x11DD83C", Offset = "0x11DD83C", VA = "0x11DD83C")]
		[Preserve]
		public static void HandsCoffinAnimatorController_op_Inequality()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x11DD914", Offset = "0x11DD914", VA = "0x11DD914")]
		[Preserve]
		public static void StateIdRandomizer_op_Implicit()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x11DD9E4", Offset = "0x11DD9E4", VA = "0x11DD9E4")]
		[Preserve]
		public static void StateIdRandomizer_op_Equality()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x11DDABC", Offset = "0x11DDABC", VA = "0x11DDABC")]
		[Preserve]
		public static void StateIdRandomizer_op_Inequality()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x11DDB94", Offset = "0x11DDB94", VA = "0x11DDB94")]
		[Preserve]
		public static void TriggerAfterDelay_op_Implicit()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x11DDC64", Offset = "0x11DDC64", VA = "0x11DDC64")]
		[Preserve]
		public static void TriggerAfterDelay_op_Equality()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x11DDD3C", Offset = "0x11DDD3C", VA = "0x11DDD3C")]
		[Preserve]
		public static void TriggerAfterDelay_op_Inequality()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x11DDE14", Offset = "0x11DDE14", VA = "0x11DDE14")]
		[Preserve]
		public static void ChildCountObserver_op_Implicit()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x11DDEE4", Offset = "0x11DDEE4", VA = "0x11DDEE4")]
		[Preserve]
		public static void ChildCountObserver_op_Equality()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x11DDFBC", Offset = "0x11DDFBC", VA = "0x11DDFBC")]
		[Preserve]
		public static void ChildCountObserver_op_Inequality()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x11DE094", Offset = "0x11DE094", VA = "0x11DE094")]
		[Preserve]
		public static void ComboCounter_op_Implicit()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x11DE164", Offset = "0x11DE164", VA = "0x11DE164")]
		[Preserve]
		public static void ComboCounter_op_Equality()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x11DE23C", Offset = "0x11DE23C", VA = "0x11DE23C")]
		[Preserve]
		public static void ComboCounter_op_Inequality()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x11DE314", Offset = "0x11DE314", VA = "0x11DE314")]
		[Preserve]
		public static void ComboDetection_op_Implicit()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x11DE3E4", Offset = "0x11DE3E4", VA = "0x11DE3E4")]
		[Preserve]
		public static void ComboDetection_op_Equality()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x11DE4BC", Offset = "0x11DE4BC", VA = "0x11DE4BC")]
		[Preserve]
		public static void ComboDetection_op_Inequality()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x11DE594", Offset = "0x11DE594", VA = "0x11DE594")]
		[Preserve]
		public static void ComboDetectionReference_op_Implicit()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x11DE664", Offset = "0x11DE664", VA = "0x11DE664")]
		[Preserve]
		public static void ComboDetectionReference_op_Equality()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x11DE73C", Offset = "0x11DE73C", VA = "0x11DE73C")]
		[Preserve]
		public static void ComboDetectionReference_op_Inequality()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x11DE814", Offset = "0x11DE814", VA = "0x11DE814")]
		[Preserve]
		public static void NetworkedComboState_op_Implicit()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x11DE8E4", Offset = "0x11DE8E4", VA = "0x11DE8E4")]
		[Preserve]
		public static void NetworkedComboState_op_Equality()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x11DE9BC", Offset = "0x11DE9BC", VA = "0x11DE9BC")]
		[Preserve]
		public static void NetworkedComboState_op_Inequality()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x11DEA94", Offset = "0x11DEA94", VA = "0x11DEA94")]
		[Preserve]
		public static void SuperCombo_op_Implicit()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x11DEB64", Offset = "0x11DEB64", VA = "0x11DEB64")]
		[Preserve]
		public static void SuperCombo_op_Equality()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x11DEC3C", Offset = "0x11DEC3C", VA = "0x11DEC3C")]
		[Preserve]
		public static void SuperCombo_op_Inequality()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x11DED14", Offset = "0x11DED14", VA = "0x11DED14")]
		[Preserve]
		public static void SuperComboScheme_op_Implicit()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x11DEDE4", Offset = "0x11DEDE4", VA = "0x11DEDE4")]
		[Preserve]
		public static void SuperComboScheme_op_Equality()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x11DEEBC", Offset = "0x11DEEBC", VA = "0x11DEEBC")]
		[Preserve]
		public static void SuperComboScheme_op_Inequality()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x11DEF94", Offset = "0x11DEF94", VA = "0x11DEF94")]
		[Preserve]
		public static void CompleteHauntedAudioDisabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x11DF064", Offset = "0x11DF064", VA = "0x11DF064")]
		[Preserve]
		public static void CompleteHauntedAudioDisabler_op_Equality()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x11DF13C", Offset = "0x11DF13C", VA = "0x11DF13C")]
		[Preserve]
		public static void CompleteHauntedAudioDisabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x11DF214", Offset = "0x11DF214", VA = "0x11DF214")]
		[Preserve]
		public static void DaltonismeEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x11DF2E4", Offset = "0x11DF2E4", VA = "0x11DF2E4")]
		[Preserve]
		public static void DaltonismeEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x11DF3BC", Offset = "0x11DF3BC", VA = "0x11DF3BC")]
		[Preserve]
		public static void DaltonismeEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x11DF494", Offset = "0x11DF494", VA = "0x11DF494")]
		[Preserve]
		public static void DebugCombo_op_Implicit()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x11DF564", Offset = "0x11DF564", VA = "0x11DF564")]
		[Preserve]
		public static void DebugCombo_op_Equality()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x11DF63C", Offset = "0x11DF63C", VA = "0x11DF63C")]
		[Preserve]
		public static void DebugCombo_op_Inequality()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x11DF714", Offset = "0x11DF714", VA = "0x11DF714")]
		[Preserve]
		public static void LocalRankingDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x11DF7E4", Offset = "0x11DF7E4", VA = "0x11DF7E4")]
		[Preserve]
		public static void LocalRankingDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x11DF8BC", Offset = "0x11DF8BC", VA = "0x11DF8BC")]
		[Preserve]
		public static void LocalRankingDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x11DF994", Offset = "0x11DF994", VA = "0x11DF994")]
		[Preserve]
		public static void MenuArcadeInput_op_Implicit()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x11DFA64", Offset = "0x11DFA64", VA = "0x11DFA64")]
		[Preserve]
		public static void MenuArcadeInput_op_Equality()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x11DFB3C", Offset = "0x11DFB3C", VA = "0x11DFB3C")]
		[Preserve]
		public static void MenuArcadeInput_op_Inequality()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x11DFC14", Offset = "0x11DFC14", VA = "0x11DFC14")]
		[Preserve]
		public static void MenuGameParametersDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x11DFCE4", Offset = "0x11DFCE4", VA = "0x11DFCE4")]
		[Preserve]
		public static void MenuGameParametersDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x11DFDBC", Offset = "0x11DFDBC", VA = "0x11DFDBC")]
		[Preserve]
		public static void MenuGameParametersDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x11DFE94", Offset = "0x11DFE94", VA = "0x11DFE94")]
		[Preserve]
		public static void MenuSteamVr_op_Implicit()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x11DFF64", Offset = "0x11DFF64", VA = "0x11DFF64")]
		[Preserve]
		public static void MenuSteamVr_op_Equality()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x11E003C", Offset = "0x11E003C", VA = "0x11E003C")]
		[Preserve]
		public static void MenuSteamVr_op_Inequality()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x11E0114", Offset = "0x11E0114", VA = "0x11E0114")]
		[Preserve]
		public static void RankedPlayerDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x11E01E4", Offset = "0x11E01E4", VA = "0x11E01E4")]
		[Preserve]
		public static void RankedPlayerDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x11E02BC", Offset = "0x11E02BC", VA = "0x11E02BC")]
		[Preserve]
		public static void RankedPlayerDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x11E0394", Offset = "0x11E0394", VA = "0x11E0394")]
		[Preserve]
		public static void DelayUnityEvent_op_Implicit()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x11E0464", Offset = "0x11E0464", VA = "0x11E0464")]
		[Preserve]
		public static void DelayUnityEvent_op_Equality()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x11E053C", Offset = "0x11E053C", VA = "0x11E053C")]
		[Preserve]
		public static void DelayUnityEvent_op_Inequality()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x11E0614", Offset = "0x11E0614", VA = "0x11E0614")]
		[Preserve]
		public static void DemoBannerEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x11E06E4", Offset = "0x11E06E4", VA = "0x11E06E4")]
		[Preserve]
		public static void DemoBannerEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x11E07BC", Offset = "0x11E07BC", VA = "0x11E07BC")]
		[Preserve]
		public static void DemoBannerEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x11E0894", Offset = "0x11E0894", VA = "0x11E0894")]
		[Preserve]
		public static void DemoBuyButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x11E0964", Offset = "0x11E0964", VA = "0x11E0964")]
		[Preserve]
		public static void DemoBuyButton_op_Equality()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x11E0A3C", Offset = "0x11E0A3C", VA = "0x11E0A3C")]
		[Preserve]
		public static void DemoBuyButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x11E0B14", Offset = "0x11E0B14", VA = "0x11E0B14")]
		[Preserve]
		public static void DemoObjectEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x11E0BE4", Offset = "0x11E0BE4", VA = "0x11E0BE4")]
		[Preserve]
		public static void DemoObjectEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x11E0CBC", Offset = "0x11E0CBC", VA = "0x11E0CBC")]
		[Preserve]
		public static void DemoObjectEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x11E0D94", Offset = "0x11E0D94", VA = "0x11E0D94")]
		[Preserve]
		public static void DemoMenuButtonEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x11E0E64", Offset = "0x11E0E64", VA = "0x11E0E64")]
		[Preserve]
		public static void DemoMenuButtonEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x11E0F3C", Offset = "0x11E0F3C", VA = "0x11E0F3C")]
		[Preserve]
		public static void DemoMenuButtonEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x11E1014", Offset = "0x11E1014", VA = "0x11E1014")]
		[Preserve]
		public static void FTEManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x11E10E4", Offset = "0x11E10E4", VA = "0x11E10E4")]
		[Preserve]
		public static void FTEManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x11E11BC", Offset = "0x11E11BC", VA = "0x11E11BC")]
		[Preserve]
		public static void FTEManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x11E1294", Offset = "0x11E1294", VA = "0x11E1294")]
		[Preserve]
		public static void FTEUtility_op_Implicit()
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x11E1364", Offset = "0x11E1364", VA = "0x11E1364")]
		[Preserve]
		public static void FTEUtility_op_Equality()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x11E143C", Offset = "0x11E143C", VA = "0x11E143C")]
		[Preserve]
		public static void FTEUtility_op_Inequality()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x11E1514", Offset = "0x11E1514", VA = "0x11E1514")]
		[Preserve]
		public static void GameModeManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x11E15E4", Offset = "0x11E15E4", VA = "0x11E15E4")]
		[Preserve]
		public static void GameModeManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x11E16BC", Offset = "0x11E16BC", VA = "0x11E16BC")]
		[Preserve]
		public static void GameModeManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x11E1794", Offset = "0x11E1794", VA = "0x11E1794")]
		[Preserve]
		public static void GameVersionHandler_op_Implicit()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x11E1864", Offset = "0x11E1864", VA = "0x11E1864")]
		[Preserve]
		public static void GameVersionHandler_op_Equality()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x11E193C", Offset = "0x11E193C", VA = "0x11E193C")]
		[Preserve]
		public static void GameVersionHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x11E1A14", Offset = "0x11E1A14", VA = "0x11E1A14")]
		[Preserve]
		public static void GBAStoryManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x11E1AE4", Offset = "0x11E1AE4", VA = "0x11E1AE4")]
		[Preserve]
		public static void GBAStoryManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x11E1BBC", Offset = "0x11E1BBC", VA = "0x11E1BBC")]
		[Preserve]
		public static void GBAStoryManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x11E1C94", Offset = "0x11E1C94", VA = "0x11E1C94")]
		[Preserve]
		public static void GBATouchable_op_Implicit()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x11E1D64", Offset = "0x11E1D64", VA = "0x11E1D64")]
		[Preserve]
		public static void GBATouchable_op_Equality()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x11E1E3C", Offset = "0x11E1E3C", VA = "0x11E1E3C")]
		[Preserve]
		public static void GBATouchable_op_Inequality()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x11E1F14", Offset = "0x11E1F14", VA = "0x11E1F14")]
		[Preserve]
		public static void GetAnchorOffset_op_Implicit()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x11E1FE4", Offset = "0x11E1FE4", VA = "0x11E1FE4")]
		[Preserve]
		public static void GetAnchorOffset_op_Equality()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x11E20BC", Offset = "0x11E20BC", VA = "0x11E20BC")]
		[Preserve]
		public static void GetAnchorOffset_op_Inequality()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x11E2194", Offset = "0x11E2194", VA = "0x11E2194")]
		[Preserve]
		public static void HandMagnetEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x11E2264", Offset = "0x11E2264", VA = "0x11E2264")]
		[Preserve]
		public static void HandMagnetEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x11E233C", Offset = "0x11E233C", VA = "0x11E233C")]
		[Preserve]
		public static void HandMagnetEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x11E2414", Offset = "0x11E2414", VA = "0x11E2414")]
		[Preserve]
		public static void GrabJauge_op_Implicit()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x11E24E4", Offset = "0x11E24E4", VA = "0x11E24E4")]
		[Preserve]
		public static void GrabJauge_op_Equality()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x11E25BC", Offset = "0x11E25BC", VA = "0x11E25BC")]
		[Preserve]
		public static void GrabJauge_op_Inequality()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x11E2694", Offset = "0x11E2694", VA = "0x11E2694")]
		[Preserve]
		public static void HandMagnetDisabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x11E2764", Offset = "0x11E2764", VA = "0x11E2764")]
		[Preserve]
		public static void HandMagnetDisabler_op_Equality()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x11E283C", Offset = "0x11E283C", VA = "0x11E283C")]
		[Preserve]
		public static void HandMagnetDisabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x11E2914", Offset = "0x11E2914", VA = "0x11E2914")]
		[Preserve]
		public static void HandPoseTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x11E29E4", Offset = "0x11E29E4", VA = "0x11E29E4")]
		[Preserve]
		public static void HandPoseTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x11E2ABC", Offset = "0x11E2ABC", VA = "0x11E2ABC")]
		[Preserve]
		public static void HandPoseTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x11E2B94", Offset = "0x11E2B94", VA = "0x11E2B94")]
		[Preserve]
		public static void HideOnBuild_op_Implicit()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x11E2C64", Offset = "0x11E2C64", VA = "0x11E2C64")]
		[Preserve]
		public static void HideOnBuild_op_Equality()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x11E2D3C", Offset = "0x11E2D3C", VA = "0x11E2D3C")]
		[Preserve]
		public static void HideOnBuild_op_Inequality()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x11E2E14", Offset = "0x11E2E14", VA = "0x11E2E14")]
		[Preserve]
		public static void HoopAudio_op_Implicit()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x11E2EE4", Offset = "0x11E2EE4", VA = "0x11E2EE4")]
		[Preserve]
		public static void HoopAudio_op_Equality()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x11E2FBC", Offset = "0x11E2FBC", VA = "0x11E2FBC")]
		[Preserve]
		public static void HoopAudio_op_Inequality()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x11E3094", Offset = "0x11E3094", VA = "0x11E3094")]
		[Preserve]
		public static void HoopBonusCounter_op_Implicit()
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x11E3164", Offset = "0x11E3164", VA = "0x11E3164")]
		[Preserve]
		public static void HoopBonusCounter_op_Equality()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x11E323C", Offset = "0x11E323C", VA = "0x11E323C")]
		[Preserve]
		public static void HoopBonusCounter_op_Inequality()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x11E3314", Offset = "0x11E3314", VA = "0x11E3314")]
		[Preserve]
		public static void HoopCapClosedCounter_op_Implicit()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x11E33E4", Offset = "0x11E33E4", VA = "0x11E33E4")]
		[Preserve]
		public static void HoopCapClosedCounter_op_Equality()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x11E34BC", Offset = "0x11E34BC", VA = "0x11E34BC")]
		[Preserve]
		public static void HoopCapClosedCounter_op_Inequality()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x11E3594", Offset = "0x11E3594", VA = "0x11E3594")]
		[Preserve]
		public static void HoopCapCloseSFX_op_Implicit()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x11E3664", Offset = "0x11E3664", VA = "0x11E3664")]
		[Preserve]
		public static void HoopCapCloseSFX_op_Equality()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x11E373C", Offset = "0x11E373C", VA = "0x11E373C")]
		[Preserve]
		public static void HoopCapCloseSFX_op_Inequality()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x11E3814", Offset = "0x11E3814", VA = "0x11E3814")]
		[Preserve]
		public static void HoopCapGrabbable_op_Implicit()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x11E38E4", Offset = "0x11E38E4", VA = "0x11E38E4")]
		[Preserve]
		public static void HoopCapGrabbable_op_Equality()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x11E39BC", Offset = "0x11E39BC", VA = "0x11E39BC")]
		[Preserve]
		public static void HoopCapGrabbable_op_Inequality()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x11E3A94", Offset = "0x11E3A94", VA = "0x11E3A94")]
		[Preserve]
		public static void HoopCapTimedCloser_op_Implicit()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x11E3B64", Offset = "0x11E3B64", VA = "0x11E3B64")]
		[Preserve]
		public static void HoopCapTimedCloser_op_Equality()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x11E3C3C", Offset = "0x11E3C3C", VA = "0x11E3C3C")]
		[Preserve]
		public static void HoopCapTimedCloser_op_Inequality()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x11E3D14", Offset = "0x11E3D14", VA = "0x11E3D14")]
		[Preserve]
		public static void HoopManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x11E3DE4", Offset = "0x11E3DE4", VA = "0x11E3DE4")]
		[Preserve]
		public static void HoopManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x11E3EBC", Offset = "0x11E3EBC", VA = "0x11E3EBC")]
		[Preserve]
		public static void HoopManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x11E3F94", Offset = "0x11E3F94", VA = "0x11E3F94")]
		[Preserve]
		public static void ImpulseTool_op_Implicit()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x11E4064", Offset = "0x11E4064", VA = "0x11E4064")]
		[Preserve]
		public static void ImpulseTool_op_Equality()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x11E413C", Offset = "0x11E413C", VA = "0x11E413C")]
		[Preserve]
		public static void ImpulseTool_op_Inequality()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x11E4214", Offset = "0x11E4214", VA = "0x11E4214")]
		[Preserve]
		public static void ArcadeInputData_op_Implicit()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x11E42E4", Offset = "0x11E42E4", VA = "0x11E42E4")]
		[Preserve]
		public static void ArcadeInputData_op_Equality()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x11E43BC", Offset = "0x11E43BC", VA = "0x11E43BC")]
		[Preserve]
		public static void ArcadeInputData_op_Inequality()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x11E4494", Offset = "0x11E4494", VA = "0x11E4494")]
		[Preserve]
		public static void ArcadeInputManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x11E4564", Offset = "0x11E4564", VA = "0x11E4564")]
		[Preserve]
		public static void ArcadeInputManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x11E463C", Offset = "0x11E463C", VA = "0x11E463C")]
		[Preserve]
		public static void ArcadeInputManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x11E4714", Offset = "0x11E4714", VA = "0x11E4714")]
		[Preserve]
		public static void JoystickInputData_op_Implicit()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x11E47E4", Offset = "0x11E47E4", VA = "0x11E47E4")]
		[Preserve]
		public static void JoystickInputData_op_Equality()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x11E48BC", Offset = "0x11E48BC", VA = "0x11E48BC")]
		[Preserve]
		public static void JoystickInputData_op_Inequality()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x11E4994", Offset = "0x11E4994", VA = "0x11E4994")]
		[Preserve]
		public static void rcInteractable_op_Implicit()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x11E4A64", Offset = "0x11E4A64", VA = "0x11E4A64")]
		[Preserve]
		public static void rcInteractable_op_Equality()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x11E4B3C", Offset = "0x11E4B3C", VA = "0x11E4B3C")]
		[Preserve]
		public static void rcInteractable_op_Inequality()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x11E4C14", Offset = "0x11E4C14", VA = "0x11E4C14")]
		[Preserve]
		public static void rcInteractionManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x11E4CE4", Offset = "0x11E4CE4", VA = "0x11E4CE4")]
		[Preserve]
		public static void rcInteractionManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x11E4DBC", Offset = "0x11E4DBC", VA = "0x11E4DBC")]
		[Preserve]
		public static void rcInteractionManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x11E4E94", Offset = "0x11E4E94", VA = "0x11E4E94")]
		[Preserve]
		public static void rcInteractor_op_Implicit()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x11E4F64", Offset = "0x11E4F64", VA = "0x11E4F64")]
		[Preserve]
		public static void rcInteractor_op_Equality()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x11E503C", Offset = "0x11E503C", VA = "0x11E503C")]
		[Preserve]
		public static void rcInteractor_op_Inequality()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x11E5114", Offset = "0x11E5114", VA = "0x11E5114")]
		[Preserve]
		public static void Jauge_op_Implicit()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x11E51E4", Offset = "0x11E51E4", VA = "0x11E51E4")]
		[Preserve]
		public static void Jauge_op_Equality()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x11E52BC", Offset = "0x11E52BC", VA = "0x11E52BC")]
		[Preserve]
		public static void Jauge_op_Inequality()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x11E5394", Offset = "0x11E5394", VA = "0x11E5394")]
		[Preserve]
		public static void Leaderboard_op_Implicit()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x11E5464", Offset = "0x11E5464", VA = "0x11E5464")]
		[Preserve]
		public static void Leaderboard_op_Equality()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x11E553C", Offset = "0x11E553C", VA = "0x11E553C")]
		[Preserve]
		public static void Leaderboard_op_Inequality()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x11E5614", Offset = "0x11E5614", VA = "0x11E5614")]
		[Preserve]
		public static void LeaderboardManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x11E56E4", Offset = "0x11E56E4", VA = "0x11E56E4")]
		[Preserve]
		public static void LeaderboardManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x11E57BC", Offset = "0x11E57BC", VA = "0x11E57BC")]
		[Preserve]
		public static void LeaderboardManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x11E5894", Offset = "0x11E5894", VA = "0x11E5894")]
		[Preserve]
		public static void LeaderboardsSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x11E5964", Offset = "0x11E5964", VA = "0x11E5964")]
		[Preserve]
		public static void LeaderboardsSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x11E5A3C", Offset = "0x11E5A3C", VA = "0x11E5A3C")]
		[Preserve]
		public static void LeaderboardsSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x11E5B14", Offset = "0x11E5B14", VA = "0x11E5B14")]
		[Preserve]
		public static void LeaderboardsSettingsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x11E5BE4", Offset = "0x11E5BE4", VA = "0x11E5BE4")]
		[Preserve]
		public static void LeaderboardsSettingsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x11E5CBC", Offset = "0x11E5CBC", VA = "0x11E5CBC")]
		[Preserve]
		public static void LeaderboardsSettingsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x11E5D94", Offset = "0x11E5D94", VA = "0x11E5D94")]
		[Preserve]
		public static void OnlineLeaderboardsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x11E5E64", Offset = "0x11E5E64", VA = "0x11E5E64")]
		[Preserve]
		public static void OnlineLeaderboardsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x11E5F3C", Offset = "0x11E5F3C", VA = "0x11E5F3C")]
		[Preserve]
		public static void OnlineLeaderboardsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x11E6014", Offset = "0x11E6014", VA = "0x11E6014")]
		[Preserve]
		public static void LevelCreationSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x11E60E4", Offset = "0x11E60E4", VA = "0x11E60E4")]
		[Preserve]
		public static void LevelCreationSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x11E61BC", Offset = "0x11E61BC", VA = "0x11E61BC")]
		[Preserve]
		public static void LevelCreationSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x11E6294", Offset = "0x11E6294", VA = "0x11E6294")]
		[Preserve]
		public static void LevelList_op_Implicit()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x11E6364", Offset = "0x11E6364", VA = "0x11E6364")]
		[Preserve]
		public static void LevelList_op_Equality()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x11E643C", Offset = "0x11E643C", VA = "0x11E643C")]
		[Preserve]
		public static void LevelList_op_Inequality()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x11E6514", Offset = "0x11E6514", VA = "0x11E6514")]
		[Preserve]
		public static void LevelSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x11E65E4", Offset = "0x11E65E4", VA = "0x11E65E4")]
		[Preserve]
		public static void LevelSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x11E66BC", Offset = "0x11E66BC", VA = "0x11E66BC")]
		[Preserve]
		public static void LevelSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x11E6794", Offset = "0x11E6794", VA = "0x11E6794")]
		[Preserve]
		public static void LevelsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x11E6864", Offset = "0x11E6864", VA = "0x11E6864")]
		[Preserve]
		public static void LevelsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x11E693C", Offset = "0x11E693C", VA = "0x11E693C")]
		[Preserve]
		public static void LevelsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x11E6A14", Offset = "0x11E6A14", VA = "0x11E6A14")]
		[Preserve]
		public static void NextLevelUnlock_op_Implicit()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x11E6AE4", Offset = "0x11E6AE4", VA = "0x11E6AE4")]
		[Preserve]
		public static void NextLevelUnlock_op_Equality()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x11E6BBC", Offset = "0x11E6BBC", VA = "0x11E6BBC")]
		[Preserve]
		public static void NextLevelUnlock_op_Inequality()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x11E6C94", Offset = "0x11E6C94", VA = "0x11E6C94")]
		[Preserve]
		public static void TutorialLevelAnimation_op_Implicit()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x11E6D64", Offset = "0x11E6D64", VA = "0x11E6D64")]
		[Preserve]
		public static void TutorialLevelAnimation_op_Equality()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x11E6E3C", Offset = "0x11E6E3C", VA = "0x11E6E3C")]
		[Preserve]
		public static void TutorialLevelAnimation_op_Inequality()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x11E6F14", Offset = "0x11E6F14", VA = "0x11E6F14")]
		[Preserve]
		public static void TutorialManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x11E6FE4", Offset = "0x11E6FE4", VA = "0x11E6FE4")]
		[Preserve]
		public static void TutorialManager_op_Equality()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x11E70BC", Offset = "0x11E70BC", VA = "0x11E70BC")]
		[Preserve]
		public static void TutorialManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x11E7194", Offset = "0x11E7194", VA = "0x11E7194")]
		[Preserve]
		public static void Lissajous_op_Implicit()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x11E7264", Offset = "0x11E7264", VA = "0x11E7264")]
		[Preserve]
		public static void Lissajous_op_Equality()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x11E733C", Offset = "0x11E733C", VA = "0x11E733C")]
		[Preserve]
		public static void Lissajous_op_Inequality()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x11E7414", Offset = "0x11E7414", VA = "0x11E7414")]
		[Preserve]
		public static void LissajousPlayerOnEnable_op_Implicit()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x11E74E4", Offset = "0x11E74E4", VA = "0x11E74E4")]
		[Preserve]
		public static void LissajousPlayerOnEnable_op_Equality()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x11E75BC", Offset = "0x11E75BC", VA = "0x11E75BC")]
		[Preserve]
		public static void LissajousPlayerOnEnable_op_Inequality()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x11E7694", Offset = "0x11E7694", VA = "0x11E7694")]
		[Preserve]
		public static void LissajousSpeedUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x11E7764", Offset = "0x11E7764", VA = "0x11E7764")]
		[Preserve]
		public static void LissajousSpeedUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x11E783C", Offset = "0x11E783C", VA = "0x11E783C")]
		[Preserve]
		public static void LissajousSpeedUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x11E7914", Offset = "0x11E7914", VA = "0x11E7914")]
		[Preserve]
		public static void LissajousUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x11E79E4", Offset = "0x11E79E4", VA = "0x11E79E4")]
		[Preserve]
		public static void LissajousUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x11E7ABC", Offset = "0x11E7ABC", VA = "0x11E7ABC")]
		[Preserve]
		public static void LissajousUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x11E7B94", Offset = "0x11E7B94", VA = "0x11E7B94")]
		[Preserve]
		public static void GBASceneLoadingSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x11E7C64", Offset = "0x11E7C64", VA = "0x11E7C64")]
		[Preserve]
		public static void GBASceneLoadingSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x11E7D3C", Offset = "0x11E7D3C", VA = "0x11E7D3C")]
		[Preserve]
		public static void GBASceneLoadingSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x11E7E14", Offset = "0x11E7E14", VA = "0x11E7E14")]
		[Preserve]
		public static void LevelChallengeSelectedIndexSave_op_Implicit()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x11E7EE4", Offset = "0x11E7EE4", VA = "0x11E7EE4")]
		[Preserve]
		public static void LevelChallengeSelectedIndexSave_op_Equality()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x11E7FBC", Offset = "0x11E7FBC", VA = "0x11E7FBC")]
		[Preserve]
		public static void LevelChallengeSelectedIndexSave_op_Inequality()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x11E8094", Offset = "0x11E8094", VA = "0x11E8094")]
		[Preserve]
		public static void SceneLoader_op_Implicit()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x11E8164", Offset = "0x11E8164", VA = "0x11E8164")]
		[Preserve]
		public static void SceneLoader_op_Equality()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x11E823C", Offset = "0x11E823C", VA = "0x11E823C")]
		[Preserve]
		public static void SceneLoader_op_Inequality()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x11E8314", Offset = "0x11E8314", VA = "0x11E8314")]
		[Preserve]
		public static void SceneSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x11E83E4", Offset = "0x11E83E4", VA = "0x11E83E4")]
		[Preserve]
		public static void SceneSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x11E84BC", Offset = "0x11E84BC", VA = "0x11E84BC")]
		[Preserve]
		public static void SceneSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x11E8594", Offset = "0x11E8594", VA = "0x11E8594")]
		[Preserve]
		public static void LocalizedFontManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x11E8664", Offset = "0x11E8664", VA = "0x11E8664")]
		[Preserve]
		public static void LocalizedFontManager_op_Equality()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x11E873C", Offset = "0x11E873C", VA = "0x11E873C")]
		[Preserve]
		public static void LocalizedFontManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x11E8814", Offset = "0x11E8814", VA = "0x11E8814")]
		[Preserve]
		public static void LookAt_op_Implicit()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x11E88E4", Offset = "0x11E88E4", VA = "0x11E88E4")]
		[Preserve]
		public static void LookAt_op_Equality()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x11E89BC", Offset = "0x11E89BC", VA = "0x11E89BC")]
		[Preserve]
		public static void LookAt_op_Inequality()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x11E8A94", Offset = "0x11E8A94", VA = "0x11E8A94")]
		[Preserve]
		public static void MaterialSwapper_op_Implicit()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x11E8B64", Offset = "0x11E8B64", VA = "0x11E8B64")]
		[Preserve]
		public static void MaterialSwapper_op_Equality()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x11E8C3C", Offset = "0x11E8C3C", VA = "0x11E8C3C")]
		[Preserve]
		public static void MaterialSwapper_op_Inequality()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0x11E8D14", Offset = "0x11E8D14", VA = "0x11E8D14")]
		[Preserve]
		public static void MontreChronometre_op_Implicit()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x11E8DE4", Offset = "0x11E8DE4", VA = "0x11E8DE4")]
		[Preserve]
		public static void MontreChronometre_op_Equality()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x11E8EBC", Offset = "0x11E8EBC", VA = "0x11E8EBC")]
		[Preserve]
		public static void MontreChronometre_op_Inequality()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x11E8F94", Offset = "0x11E8F94", VA = "0x11E8F94")]
		[Preserve]
		public static void Movement3DSpace_op_Implicit()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x11E9064", Offset = "0x11E9064", VA = "0x11E9064")]
		[Preserve]
		public static void Movement3DSpace_op_Equality()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x11E913C", Offset = "0x11E913C", VA = "0x11E913C")]
		[Preserve]
		public static void Movement3DSpace_op_Inequality()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x11E9214", Offset = "0x11E9214", VA = "0x11E9214")]
		[Preserve]
		public static void MovementPivotRail_op_Implicit()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x11E92E4", Offset = "0x11E92E4", VA = "0x11E92E4")]
		[Preserve]
		public static void MovementPivotRail_op_Equality()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x11E93BC", Offset = "0x11E93BC", VA = "0x11E93BC")]
		[Preserve]
		public static void MovementPivotRail_op_Inequality()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x11E9494", Offset = "0x11E9494", VA = "0x11E9494")]
		[Preserve]
		public static void MovementRail_op_Implicit()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x11E9564", Offset = "0x11E9564", VA = "0x11E9564")]
		[Preserve]
		public static void MovementRail_op_Equality()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x11E963C", Offset = "0x11E963C", VA = "0x11E963C")]
		[Preserve]
		public static void MovementRail_op_Inequality()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x11E9714", Offset = "0x11E9714", VA = "0x11E9714")]
		[Preserve]
		public static void MovementRailManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x11E97E4", Offset = "0x11E97E4", VA = "0x11E97E4")]
		[Preserve]
		public static void MovementRailManager_op_Equality()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x11E98BC", Offset = "0x11E98BC", VA = "0x11E98BC")]
		[Preserve]
		public static void MovementRailManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x11E9994", Offset = "0x11E9994", VA = "0x11E9994")]
		[Preserve]
		public static void MovementRailWaypointList_op_Implicit()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x11E9A64", Offset = "0x11E9A64", VA = "0x11E9A64")]
		[Preserve]
		public static void MovementRailWaypointList_op_Equality()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x11E9B3C", Offset = "0x11E9B3C", VA = "0x11E9B3C")]
		[Preserve]
		public static void MovementRailWaypointList_op_Inequality()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x11E9C14", Offset = "0x11E9C14", VA = "0x11E9C14")]
		[Preserve]
		public static void RandomMovementRailStart_op_Implicit()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x11E9CE4", Offset = "0x11E9CE4", VA = "0x11E9CE4")]
		[Preserve]
		public static void RandomMovementRailStart_op_Equality()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x11E9DBC", Offset = "0x11E9DBC", VA = "0x11E9DBC")]
		[Preserve]
		public static void RandomMovementRailStart_op_Inequality()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x11E9E94", Offset = "0x11E9E94", VA = "0x11E9E94")]
		[Preserve]
		public static void MRCLivMenuButtonEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x11E9F64", Offset = "0x11E9F64", VA = "0x11E9F64")]
		[Preserve]
		public static void MRCLivMenuButtonEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x11EA03C", Offset = "0x11EA03C", VA = "0x11EA03C")]
		[Preserve]
		public static void MRCLivMenuButtonEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x11EA114", Offset = "0x11EA114", VA = "0x11EA114")]
		[Preserve]
		public static void AuthorityIndicator_op_Implicit()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x11EA1E4", Offset = "0x11EA1E4", VA = "0x11EA1E4")]
		[Preserve]
		public static void AuthorityIndicator_op_Equality()
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x11EA2BC", Offset = "0x11EA2BC", VA = "0x11EA2BC")]
		[Preserve]
		public static void AuthorityIndicator_op_Inequality()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x11EA394", Offset = "0x11EA394", VA = "0x11EA394")]
		[Preserve]
		public static void AuthorityProvider_op_Implicit()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x11EA464", Offset = "0x11EA464", VA = "0x11EA464")]
		[Preserve]
		public static void AuthorityProvider_op_Equality()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x11EA53C", Offset = "0x11EA53C", VA = "0x11EA53C")]
		[Preserve]
		public static void AuthorityProvider_op_Inequality()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x11EA614", Offset = "0x11EA614", VA = "0x11EA614")]
		[Preserve]
		public static void GBANetworkStory_op_Implicit()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x11EA6E4", Offset = "0x11EA6E4", VA = "0x11EA6E4")]
		[Preserve]
		public static void GBANetworkStory_op_Equality()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x11EA7BC", Offset = "0x11EA7BC", VA = "0x11EA7BC")]
		[Preserve]
		public static void GBANetworkStory_op_Inequality()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x11EA894", Offset = "0x11EA894", VA = "0x11EA894")]
		[Preserve]
		public static void PS5PlayFabMatchmaker_op_Implicit()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x11EA964", Offset = "0x11EA964", VA = "0x11EA964")]
		[Preserve]
		public static void PS5PlayFabMatchmaker_op_Equality()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x11EAA3C", Offset = "0x11EAA3C", VA = "0x11EAA3C")]
		[Preserve]
		public static void PS5PlayFabMatchmaker_op_Inequality()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x11EAB14", Offset = "0x11EAB14", VA = "0x11EAB14")]
		[Preserve]
		public static void PlayFabMatchmakingLimitsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x11EABE4", Offset = "0x11EABE4", VA = "0x11EABE4")]
		[Preserve]
		public static void PlayFabMatchmakingLimitsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x11EACBC", Offset = "0x11EACBC", VA = "0x11EACBC")]
		[Preserve]
		public static void PlayFabMatchmakingLimitsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x11EAD94", Offset = "0x11EAD94", VA = "0x11EAD94")]
		[Preserve]
		public static void NetworkedRoomManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x11EAE64", Offset = "0x11EAE64", VA = "0x11EAE64")]
		[Preserve]
		public static void NetworkedRoomManager_op_Equality()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x11EAF3C", Offset = "0x11EAF3C", VA = "0x11EAF3C")]
		[Preserve]
		public static void NetworkedRoomManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x11EB014", Offset = "0x11EB014", VA = "0x11EB014")]
		[Preserve]
		public static void NetworkManagerEvents_op_Implicit()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x11EB0E4", Offset = "0x11EB0E4", VA = "0x11EB0E4")]
		[Preserve]
		public static void NetworkManagerEvents_op_Equality()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x11EB1BC", Offset = "0x11EB1BC", VA = "0x11EB1BC")]
		[Preserve]
		public static void NetworkManagerEvents_op_Inequality()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x11EB294", Offset = "0x11EB294", VA = "0x11EB294")]
		[Preserve]
		public static void FollowLocalPlayerSlot_op_Implicit()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x11EB364", Offset = "0x11EB364", VA = "0x11EB364")]
		[Preserve]
		public static void FollowLocalPlayerSlot_op_Equality()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x11EB43C", Offset = "0x11EB43C", VA = "0x11EB43C")]
		[Preserve]
		public static void FollowLocalPlayerSlot_op_Inequality()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x11EB514", Offset = "0x11EB514", VA = "0x11EB514")]
		[Preserve]
		public static void GBAPlayerSystem_op_Implicit()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x11EB5E4", Offset = "0x11EB5E4", VA = "0x11EB5E4")]
		[Preserve]
		public static void GBAPlayerSystem_op_Equality()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x11EB6BC", Offset = "0x11EB6BC", VA = "0x11EB6BC")]
		[Preserve]
		public static void GBAPlayerSystem_op_Inequality()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x11EB794", Offset = "0x11EB794", VA = "0x11EB794")]
		[Preserve]
		public static void NetworkedLevelManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x11EB864", Offset = "0x11EB864", VA = "0x11EB864")]
		[Preserve]
		public static void NetworkedLevelManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x11EB93C", Offset = "0x11EB93C", VA = "0x11EB93C")]
		[Preserve]
		public static void NetworkedLevelManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x11EBA14", Offset = "0x11EBA14", VA = "0x11EBA14")]
		[Preserve]
		public static void NetworkedLevelsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x11EBAE4", Offset = "0x11EBAE4", VA = "0x11EBAE4")]
		[Preserve]
		public static void NetworkedLevelsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x11EBBBC", Offset = "0x11EBBBC", VA = "0x11EBBBC")]
		[Preserve]
		public static void NetworkedLevelsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x11EBC94", Offset = "0x11EBC94", VA = "0x11EBC94")]
		[Preserve]
		public static void NetworkedPlayerSlot_op_Implicit()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x11EBD64", Offset = "0x11EBD64", VA = "0x11EBD64")]
		[Preserve]
		public static void NetworkedPlayerSlot_op_Equality()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x11EBE3C", Offset = "0x11EBE3C", VA = "0x11EBE3C")]
		[Preserve]
		public static void NetworkedPlayerSlot_op_Inequality()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x11EBF14", Offset = "0x11EBF14", VA = "0x11EBF14")]
		[Preserve]
		public static void NetworkedPlayManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x11EBFE4", Offset = "0x11EBFE4", VA = "0x11EBFE4")]
		[Preserve]
		public static void NetworkedPlayManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x11EC0BC", Offset = "0x11EC0BC", VA = "0x11EC0BC")]
		[Preserve]
		public static void NetworkedPlayManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x11EC194", Offset = "0x11EC194", VA = "0x11EC194")]
		[Preserve]
		public static void NetworkedPlayManagerReference_op_Implicit()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x11EC264", Offset = "0x11EC264", VA = "0x11EC264")]
		[Preserve]
		public static void NetworkedPlayManagerReference_op_Equality()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x11EC33C", Offset = "0x11EC33C", VA = "0x11EC33C")]
		[Preserve]
		public static void NetworkedPlayManagerReference_op_Inequality()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x11EC414", Offset = "0x11EC414", VA = "0x11EC414")]
		[Preserve]
		public static void PartyLevelEndManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x11EC4E4", Offset = "0x11EC4E4", VA = "0x11EC4E4")]
		[Preserve]
		public static void PartyLevelEndManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x11EC5BC", Offset = "0x11EC5BC", VA = "0x11EC5BC")]
		[Preserve]
		public static void PartyLevelEndManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x11EC694", Offset = "0x11EC694", VA = "0x11EC694")]
		[Preserve]
		public static void PlayersManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x11EC764", Offset = "0x11EC764", VA = "0x11EC764")]
		[Preserve]
		public static void PlayersManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x11EC83C", Offset = "0x11EC83C", VA = "0x11EC83C")]
		[Preserve]
		public static void PlayersManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x11EC914", Offset = "0x11EC914", VA = "0x11EC914")]
		[Preserve]
		public static void PlayersRankingManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x11EC9E4", Offset = "0x11EC9E4", VA = "0x11EC9E4")]
		[Preserve]
		public static void PlayersRankingManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x11ECABC", Offset = "0x11ECABC", VA = "0x11ECABC")]
		[Preserve]
		public static void PlayersRankingManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x11ECB94", Offset = "0x11ECB94", VA = "0x11ECB94")]
		[Preserve]
		public static void PlayersRankingReference_op_Implicit()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x11ECC64", Offset = "0x11ECC64", VA = "0x11ECC64")]
		[Preserve]
		public static void PlayersRankingReference_op_Equality()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x11ECD3C", Offset = "0x11ECD3C", VA = "0x11ECD3C")]
		[Preserve]
		public static void PlayersRankingReference_op_Inequality()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x11ECE14", Offset = "0x11ECE14", VA = "0x11ECE14")]
		[Preserve]
		public static void UserStartManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x11ECEE4", Offset = "0x11ECEE4", VA = "0x11ECEE4")]
		[Preserve]
		public static void UserStartManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x11ECFBC", Offset = "0x11ECFBC", VA = "0x11ECFBC")]
		[Preserve]
		public static void UserStartManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x11ED094", Offset = "0x11ED094", VA = "0x11ED094")]
		[Preserve]
		public static void NetworkStartEvents_op_Implicit()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x11ED164", Offset = "0x11ED164", VA = "0x11ED164")]
		[Preserve]
		public static void NetworkStartEvents_op_Equality()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x11ED23C", Offset = "0x11ED23C", VA = "0x11ED23C")]
		[Preserve]
		public static void NetworkStartEvents_op_Inequality()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x11ED314", Offset = "0x11ED314", VA = "0x11ED314")]
		[Preserve]
		public static void UnparentOnNetworkStart_op_Implicit()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x11ED3E4", Offset = "0x11ED3E4", VA = "0x11ED3E4")]
		[Preserve]
		public static void UnparentOnNetworkStart_op_Equality()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x11ED4BC", Offset = "0x11ED4BC", VA = "0x11ED4BC")]
		[Preserve]
		public static void UnparentOnNetworkStart_op_Inequality()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x11ED594", Offset = "0x11ED594", VA = "0x11ED594")]
		[Preserve]
		public static void ObjectApparition_op_Implicit()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x11ED664", Offset = "0x11ED664", VA = "0x11ED664")]
		[Preserve]
		public static void ObjectApparition_op_Equality()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x11ED73C", Offset = "0x11ED73C", VA = "0x11ED73C")]
		[Preserve]
		public static void ObjectApparition_op_Inequality()
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x11ED814", Offset = "0x11ED814", VA = "0x11ED814")]
		[Preserve]
		public static void OneHitTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x11ED8E4", Offset = "0x11ED8E4", VA = "0x11ED8E4")]
		[Preserve]
		public static void OneHitTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x11ED9BC", Offset = "0x11ED9BC", VA = "0x11ED9BC")]
		[Preserve]
		public static void OneHitTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x11EDA94", Offset = "0x11EDA94", VA = "0x11EDA94")]
		[Preserve]
		public static void SteamLeaderboardUploadScheduler_op_Implicit()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x11EDB64", Offset = "0x11EDB64", VA = "0x11EDB64")]
		[Preserve]
		public static void SteamLeaderboardUploadScheduler_op_Equality()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x11EDC3C", Offset = "0x11EDC3C", VA = "0x11EDC3C")]
		[Preserve]
		public static void SteamLeaderboardUploadScheduler_op_Inequality()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x11EDD14", Offset = "0x11EDD14", VA = "0x11EDD14")]
		[Preserve]
		public static void OnlineFeaturesManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x11EDDE4", Offset = "0x11EDDE4", VA = "0x11EDDE4")]
		[Preserve]
		public static void OnlineFeaturesManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x11EDEBC", Offset = "0x11EDEBC", VA = "0x11EDEBC")]
		[Preserve]
		public static void OnlineFeaturesManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x11EDF94", Offset = "0x11EDF94", VA = "0x11EDF94")]
		[Preserve]
		public static void OnlineFeaturesSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x11EE064", Offset = "0x11EE064", VA = "0x11EE064")]
		[Preserve]
		public static void OnlineFeaturesSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x11EE13C", Offset = "0x11EE13C", VA = "0x11EE13C")]
		[Preserve]
		public static void OnlineFeaturesSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x11EE214", Offset = "0x11EE214", VA = "0x11EE214")]
		[Preserve]
		public static void OnlineFlowEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x11EE2E4", Offset = "0x11EE2E4", VA = "0x11EE2E4")]
		[Preserve]
		public static void OnlineFlowEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x11EE3BC", Offset = "0x11EE3BC", VA = "0x11EE3BC")]
		[Preserve]
		public static void OnlineFlowEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x11EE494", Offset = "0x11EE494", VA = "0x11EE494")]
		[Preserve]
		public static void OnlineMatchFlow_op_Implicit()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x11EE564", Offset = "0x11EE564", VA = "0x11EE564")]
		[Preserve]
		public static void OnlineMatchFlow_op_Equality()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x11EE63C", Offset = "0x11EE63C", VA = "0x11EE63C")]
		[Preserve]
		public static void OnlineMatchFlow_op_Inequality()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x11EE714", Offset = "0x11EE714", VA = "0x11EE714")]
		[Preserve]
		public static void OnlinePartyRoomFlow_op_Implicit()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x11EE7E4", Offset = "0x11EE7E4", VA = "0x11EE7E4")]
		[Preserve]
		public static void OnlinePartyRoomFlow_op_Equality()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x11EE8BC", Offset = "0x11EE8BC", VA = "0x11EE8BC")]
		[Preserve]
		public static void OnlinePartyRoomFlow_op_Inequality()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x11EE994", Offset = "0x11EE994", VA = "0x11EE994")]
		[Preserve]
		public static void OnlineRoomCleaner_op_Implicit()
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x11EEA64", Offset = "0x11EEA64", VA = "0x11EEA64")]
		[Preserve]
		public static void OnlineRoomCleaner_op_Equality()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x11EEB3C", Offset = "0x11EEB3C", VA = "0x11EEB3C")]
		[Preserve]
		public static void OnlineRoomCleaner_op_Inequality()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x11EEC14", Offset = "0x11EEC14", VA = "0x11EEC14")]
		[Preserve]
		public static void OnlineRoomLocker_op_Implicit()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x11EECE4", Offset = "0x11EECE4", VA = "0x11EECE4")]
		[Preserve]
		public static void OnlineRoomLocker_op_Equality()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x11EEDBC", Offset = "0x11EEDBC", VA = "0x11EEDBC")]
		[Preserve]
		public static void OnlineRoomLocker_op_Inequality()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x11EEE94", Offset = "0x11EEE94", VA = "0x11EEE94")]
		[Preserve]
		public static void OnlineSelectChallenge_op_Implicit()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x11EEF64", Offset = "0x11EEF64", VA = "0x11EEF64")]
		[Preserve]
		public static void OnlineSelectChallenge_op_Equality()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x11EF03C", Offset = "0x11EF03C", VA = "0x11EF03C")]
		[Preserve]
		public static void OnlineSelectChallenge_op_Inequality()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x11EF114", Offset = "0x11EF114", VA = "0x11EF114")]
		[Preserve]
		public static void OnlineSetupSlots_op_Implicit()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x11EF1E4", Offset = "0x11EF1E4", VA = "0x11EF1E4")]
		[Preserve]
		public static void OnlineSetupSlots_op_Equality()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x11EF2BC", Offset = "0x11EF2BC", VA = "0x11EF2BC")]
		[Preserve]
		public static void OnlineSetupSlots_op_Inequality()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x11EF394", Offset = "0x11EF394", VA = "0x11EF394")]
		[Preserve]
		public static void BotOnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x11EF464", Offset = "0x11EF464", VA = "0x11EF464")]
		[Preserve]
		public static void BotOnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x11EF53C", Offset = "0x11EF53C", VA = "0x11EF53C")]
		[Preserve]
		public static void BotOnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x11EF614", Offset = "0x11EF614", VA = "0x11EF614")]
		[Preserve]
		public static void EditorOnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x11EF6E4", Offset = "0x11EF6E4", VA = "0x11EF6E4")]
		[Preserve]
		public static void EditorOnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x11EF7BC", Offset = "0x11EF7BC", VA = "0x11EF7BC")]
		[Preserve]
		public static void EditorOnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x11EF894", Offset = "0x11EF894", VA = "0x11EF894")]
		[Preserve]
		public static void NoloOnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x11EF964", Offset = "0x11EF964", VA = "0x11EF964")]
		[Preserve]
		public static void NoloOnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x11EFA3C", Offset = "0x11EFA3C", VA = "0x11EFA3C")]
		[Preserve]
		public static void NoloOnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x11EFB14", Offset = "0x11EFB14", VA = "0x11EFB14")]
		[Preserve]
		public static void OculusOnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x11EFBE4", Offset = "0x11EFBE4", VA = "0x11EFBE4")]
		[Preserve]
		public static void OculusOnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x11EFCBC", Offset = "0x11EFCBC", VA = "0x11EFCBC")]
		[Preserve]
		public static void OculusOnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x11EFD94", Offset = "0x11EFD94", VA = "0x11EFD94")]
		[Preserve]
		public static void PicoOnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x11EFE64", Offset = "0x11EFE64", VA = "0x11EFE64")]
		[Preserve]
		public static void PicoOnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x11EFF3C", Offset = "0x11EFF3C", VA = "0x11EFF3C")]
		[Preserve]
		public static void PicoOnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x11F0014", Offset = "0x11F0014", VA = "0x11F0014")]
		[Preserve]
		public static void PSNOnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x11F00E4", Offset = "0x11F00E4", VA = "0x11F00E4")]
		[Preserve]
		public static void PSNOnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x11F01BC", Offset = "0x11F01BC", VA = "0x11F01BC")]
		[Preserve]
		public static void PSNOnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x11F0294", Offset = "0x11F0294", VA = "0x11F0294")]
		[Preserve]
		public static void PSNOnlineManager_GamePad_op_Implicit()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x11F0364", Offset = "0x11F0364", VA = "0x11F0364")]
		[Preserve]
		public static void PSNOnlineManager_GamePad_op_Equality()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x11F043C", Offset = "0x11F043C", VA = "0x11F043C")]
		[Preserve]
		public static void PSNOnlineManager_GamePad_op_Inequality()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x11F0514", Offset = "0x11F0514", VA = "0x11F0514")]
		[Preserve]
		public static void QiyuOnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x11F05E4", Offset = "0x11F05E4", VA = "0x11F05E4")]
		[Preserve]
		public static void QiyuOnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x11F06BC", Offset = "0x11F06BC", VA = "0x11F06BC")]
		[Preserve]
		public static void QiyuOnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x11F0794", Offset = "0x11F0794", VA = "0x11F0794")]
		[Preserve]
		public static void rcFFRManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x11F0864", Offset = "0x11F0864", VA = "0x11F0864")]
		[Preserve]
		public static void rcFFRManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x11F093C", Offset = "0x11F093C", VA = "0x11F093C")]
		[Preserve]
		public static void rcFFRManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x11F0A14", Offset = "0x11F0A14", VA = "0x11F0A14")]
		[Preserve]
		public static void SteamworksOnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x11F0AE4", Offset = "0x11F0AE4", VA = "0x11F0AE4")]
		[Preserve]
		public static void SteamworksOnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x11F0BBC", Offset = "0x11F0BBC", VA = "0x11F0BBC")]
		[Preserve]
		public static void SteamworksOnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x11F0C94", Offset = "0x11F0C94", VA = "0x11F0C94")]
		[Preserve]
		public static void YVROnlineManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x11F0D64", Offset = "0x11F0D64", VA = "0x11F0D64")]
		[Preserve]
		public static void YVROnlineManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x11F0E3C", Offset = "0x11F0E3C", VA = "0x11F0E3C")]
		[Preserve]
		public static void YVROnlineManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x11F0F14", Offset = "0x11F0F14", VA = "0x11F0F14")]
		[Preserve]
		public static void AudioMixSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x11F0FE4", Offset = "0x11F0FE4", VA = "0x11F0FE4")]
		[Preserve]
		public static void AudioMixSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x11F10BC", Offset = "0x11F10BC", VA = "0x11F10BC")]
		[Preserve]
		public static void AudioMixSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x11F1194", Offset = "0x11F1194", VA = "0x11F1194")]
		[Preserve]
		public static void MicrophonesManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x11F1264", Offset = "0x11F1264", VA = "0x11F1264")]
		[Preserve]
		public static void MicrophonesManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x11F133C", Offset = "0x11F133C", VA = "0x11F133C")]
		[Preserve]
		public static void MicrophonesManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x11F1414", Offset = "0x11F1414", VA = "0x11F1414")]
		[Preserve]
		public static void VoicesManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x11F14E4", Offset = "0x11F14E4", VA = "0x11F14E4")]
		[Preserve]
		public static void VoicesManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x11F15BC", Offset = "0x11F15BC", VA = "0x11F15BC")]
		[Preserve]
		public static void VoicesManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x11F1694", Offset = "0x11F1694", VA = "0x11F1694")]
		[Preserve]
		public static void OnlineMenuButtonEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x11F1764", Offset = "0x11F1764", VA = "0x11F1764")]
		[Preserve]
		public static void OnlineMenuButtonEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x11F183C", Offset = "0x11F183C", VA = "0x11F183C")]
		[Preserve]
		public static void OnlineMenuButtonEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x11F1914", Offset = "0x11F1914", VA = "0x11F1914")]
		[Preserve]
		public static void ParticleOptimizer_op_Implicit()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x11F19E4", Offset = "0x11F19E4", VA = "0x11F19E4")]
		[Preserve]
		public static void ParticleOptimizer_op_Equality()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x11F1ABC", Offset = "0x11F1ABC", VA = "0x11F1ABC")]
		[Preserve]
		public static void ParticleOptimizer_op_Inequality()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x11F1B94", Offset = "0x11F1B94", VA = "0x11F1B94")]
		[Preserve]
		public static void ParticleSystemPlayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x11F1C64", Offset = "0x11F1C64", VA = "0x11F1C64")]
		[Preserve]
		public static void ParticleSystemPlayer_op_Equality()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x11F1D3C", Offset = "0x11F1D3C", VA = "0x11F1D3C")]
		[Preserve]
		public static void ParticleSystemPlayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x11F1E14", Offset = "0x11F1E14", VA = "0x11F1E14")]
		[Preserve]
		public static void PassthroughMenuButtonEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x11F1EE4", Offset = "0x11F1EE4", VA = "0x11F1EE4")]
		[Preserve]
		public static void PassthroughMenuButtonEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x11F1FBC", Offset = "0x11F1FBC", VA = "0x11F1FBC")]
		[Preserve]
		public static void PassthroughMenuButtonEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x11F2094", Offset = "0x11F2094", VA = "0x11F2094")]
		[Preserve]
		public static void PasstroughObjectEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x11F2164", Offset = "0x11F2164", VA = "0x11F2164")]
		[Preserve]
		public static void PasstroughObjectEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x11F223C", Offset = "0x11F223C", VA = "0x11F223C")]
		[Preserve]
		public static void PasstroughObjectEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x11F2314", Offset = "0x11F2314", VA = "0x11F2314")]
		[Preserve]
		public static void PhysicsHoopManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x11F23E4", Offset = "0x11F23E4", VA = "0x11F23E4")]
		[Preserve]
		public static void PhysicsHoopManager_op_Equality()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x11F24BC", Offset = "0x11F24BC", VA = "0x11F24BC")]
		[Preserve]
		public static void PhysicsHoopManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x11F2594", Offset = "0x11F2594", VA = "0x11F2594")]
		[Preserve]
		public static void PhysicSummerPropsReset_op_Implicit()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x11F2664", Offset = "0x11F2664", VA = "0x11F2664")]
		[Preserve]
		public static void PhysicSummerPropsReset_op_Equality()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x11F273C", Offset = "0x11F273C", VA = "0x11F273C")]
		[Preserve]
		public static void PhysicSummerPropsReset_op_Inequality()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x11F2814", Offset = "0x11F2814", VA = "0x11F2814")]
		[Preserve]
		public static void PinballBallPoint_op_Implicit()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x11F28E4", Offset = "0x11F28E4", VA = "0x11F28E4")]
		[Preserve]
		public static void PinballBallPoint_op_Equality()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x11F29BC", Offset = "0x11F29BC", VA = "0x11F29BC")]
		[Preserve]
		public static void PinballBallPoint_op_Inequality()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x11F2A94", Offset = "0x11F2A94", VA = "0x11F2A94")]
		[Preserve]
		public static void PinballPointFlyUp_op_Implicit()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x11F2B64", Offset = "0x11F2B64", VA = "0x11F2B64")]
		[Preserve]
		public static void PinballPointFlyUp_op_Equality()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x11F2C3C", Offset = "0x11F2C3C", VA = "0x11F2C3C")]
		[Preserve]
		public static void PinballPointFlyUp_op_Inequality()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x11F2D14", Offset = "0x11F2D14", VA = "0x11F2D14")]
		[Preserve]
		public static void PlayerNameDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x11F2DE4", Offset = "0x11F2DE4", VA = "0x11F2DE4")]
		[Preserve]
		public static void PlayerNameDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x11F2EBC", Offset = "0x11F2EBC", VA = "0x11F2EBC")]
		[Preserve]
		public static void PlayerNameDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x11F2F94", Offset = "0x11F2F94", VA = "0x11F2F94")]
		[Preserve]
		public static void PlayerStatEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x11F3064", Offset = "0x11F3064", VA = "0x11F3064")]
		[Preserve]
		public static void PlayerStatEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x11F313C", Offset = "0x11F313C", VA = "0x11F313C")]
		[Preserve]
		public static void PlayerStatEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x11F3214", Offset = "0x11F3214", VA = "0x11F3214")]
		[Preserve]
		public static void PlayLimitDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x11F32E4", Offset = "0x11F32E4", VA = "0x11F32E4")]
		[Preserve]
		public static void PlayLimitDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x11F33BC", Offset = "0x11F33BC", VA = "0x11F33BC")]
		[Preserve]
		public static void PlayLimitDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x11F3494", Offset = "0x11F3494", VA = "0x11F3494")]
		[Preserve]
		public static void PlayLimitEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x11F3564", Offset = "0x11F3564", VA = "0x11F3564")]
		[Preserve]
		public static void PlayLimitEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x11F363C", Offset = "0x11F363C", VA = "0x11F363C")]
		[Preserve]
		public static void PlayLimitEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x11F3714", Offset = "0x11F3714", VA = "0x11F3714")]
		[Preserve]
		public static void PlayLimitZone_op_Implicit()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x11F37E4", Offset = "0x11F37E4", VA = "0x11F37E4")]
		[Preserve]
		public static void PlayLimitZone_op_Equality()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x11F38BC", Offset = "0x11F38BC", VA = "0x11F38BC")]
		[Preserve]
		public static void PlayLimitZone_op_Inequality()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x11F3994", Offset = "0x11F3994", VA = "0x11F3994")]
		[Preserve]
		public static void ComboPlayType_op_Implicit()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x11F3A64", Offset = "0x11F3A64", VA = "0x11F3A64")]
		[Preserve]
		public static void ComboPlayType_op_Equality()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x11F3B3C", Offset = "0x11F3B3C", VA = "0x11F3B3C")]
		[Preserve]
		public static void ComboPlayType_op_Inequality()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x11F3C14", Offset = "0x11F3C14", VA = "0x11F3C14")]
		[Preserve]
		public static void FlipObjectPlayType_op_Implicit()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x11F3CE4", Offset = "0x11F3CE4", VA = "0x11F3CE4")]
		[Preserve]
		public static void FlipObjectPlayType_op_Equality()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x11F3DBC", Offset = "0x11F3DBC", VA = "0x11F3DBC")]
		[Preserve]
		public static void FlipObjectPlayType_op_Inequality()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x11F3E94", Offset = "0x11F3E94", VA = "0x11F3E94")]
		[Preserve]
		public static void FlyingBonus_op_Implicit()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x11F3F64", Offset = "0x11F3F64", VA = "0x11F3F64")]
		[Preserve]
		public static void FlyingBonus_op_Equality()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x11F403C", Offset = "0x11F403C", VA = "0x11F403C")]
		[Preserve]
		public static void FlyingBonus_op_Inequality()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x11F4114", Offset = "0x11F4114", VA = "0x11F4114")]
		[Preserve]
		public static void FlyingBonusEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x11F41E4", Offset = "0x11F41E4", VA = "0x11F41E4")]
		[Preserve]
		public static void FlyingBonusEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x11F42BC", Offset = "0x11F42BC", VA = "0x11F42BC")]
		[Preserve]
		public static void FlyingBonusEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x11F4394", Offset = "0x11F4394", VA = "0x11F4394")]
		[Preserve]
		public static void GBAEventsListenerBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x11F4464", Offset = "0x11F4464", VA = "0x11F4464")]
		[Preserve]
		public static void GBAEventsListenerBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x11F453C", Offset = "0x11F453C", VA = "0x11F453C")]
		[Preserve]
		public static void GBAEventsListenerBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x11F4614", Offset = "0x11F4614", VA = "0x11F4614")]
		[Preserve]
		public static void GhostObjectVisibleScheme_op_Implicit()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x11F46E4", Offset = "0x11F46E4", VA = "0x11F46E4")]
		[Preserve]
		public static void GhostObjectVisibleScheme_op_Equality()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x11F47BC", Offset = "0x11F47BC", VA = "0x11F47BC")]
		[Preserve]
		public static void GhostObjectVisibleScheme_op_Inequality()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x11F4894", Offset = "0x11F4894", VA = "0x11F4894")]
		[Preserve]
		public static void GrabObjectPlayType_op_Implicit()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x11F4964", Offset = "0x11F4964", VA = "0x11F4964")]
		[Preserve]
		public static void GrabObjectPlayType_op_Equality()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x11F4A3C", Offset = "0x11F4A3C", VA = "0x11F4A3C")]
		[Preserve]
		public static void GrabObjectPlayType_op_Inequality()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x11F4B14", Offset = "0x11F4B14", VA = "0x11F4B14")]
		[Preserve]
		public static void HoopCapManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x11F4BE4", Offset = "0x11F4BE4", VA = "0x11F4BE4")]
		[Preserve]
		public static void HoopCapManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x11F4CBC", Offset = "0x11F4CBC", VA = "0x11F4CBC")]
		[Preserve]
		public static void HoopCapManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x11F4D94", Offset = "0x11F4D94", VA = "0x11F4D94")]
		[Preserve]
		public static void HoopPinballPointManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x11F4E64", Offset = "0x11F4E64", VA = "0x11F4E64")]
		[Preserve]
		public static void HoopPinballPointManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x11F4F3C", Offset = "0x11F4F3C", VA = "0x11F4F3C")]
		[Preserve]
		public static void HoopPinballPointManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x11F5014", Offset = "0x11F5014", VA = "0x11F5014")]
		[Preserve]
		public static void PlayManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x11F50E4", Offset = "0x11F50E4", VA = "0x11F50E4")]
		[Preserve]
		public static void PlayManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x11F51BC", Offset = "0x11F51BC", VA = "0x11F51BC")]
		[Preserve]
		public static void PlayManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x11F5294", Offset = "0x11F5294", VA = "0x11F5294")]
		[Preserve]
		public static void RaiseObjectPlayType_op_Implicit()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x11F5364", Offset = "0x11F5364", VA = "0x11F5364")]
		[Preserve]
		public static void RaiseObjectPlayType_op_Equality()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x11F543C", Offset = "0x11F543C", VA = "0x11F543C")]
		[Preserve]
		public static void RaiseObjectPlayType_op_Inequality()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x11F5514", Offset = "0x11F5514", VA = "0x11F5514")]
		[Preserve]
		public static void Ring_op_Implicit()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x11F55E4", Offset = "0x11F55E4", VA = "0x11F55E4")]
		[Preserve]
		public static void Ring_op_Equality()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x11F56BC", Offset = "0x11F56BC", VA = "0x11F56BC")]
		[Preserve]
		public static void Ring_op_Inequality()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x11F5794", Offset = "0x11F5794", VA = "0x11F5794")]
		[Preserve]
		public static void ScanHandActivity_op_Implicit()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x11F5864", Offset = "0x11F5864", VA = "0x11F5864")]
		[Preserve]
		public static void ScanHandActivity_op_Equality()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x11F593C", Offset = "0x11F593C", VA = "0x11F593C")]
		[Preserve]
		public static void ScanHandActivity_op_Inequality()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x11F5A14", Offset = "0x11F5A14", VA = "0x11F5A14")]
		[Preserve]
		public static void ShotsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x11F5AE4", Offset = "0x11F5AE4", VA = "0x11F5AE4")]
		[Preserve]
		public static void ShotsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x11F5BBC", Offset = "0x11F5BBC", VA = "0x11F5BBC")]
		[Preserve]
		public static void ShotsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x11F5C94", Offset = "0x11F5C94", VA = "0x11F5C94")]
		[Preserve]
		public static void SnakeHead_op_Implicit()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x11F5D64", Offset = "0x11F5D64", VA = "0x11F5D64")]
		[Preserve]
		public static void SnakeHead_op_Equality()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x11F5E3C", Offset = "0x11F5E3C", VA = "0x11F5E3C")]
		[Preserve]
		public static void SnakeHead_op_Inequality()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x11F5F14", Offset = "0x11F5F14", VA = "0x11F5F14")]
		[Preserve]
		public static void SpecialHoopDamageManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x11F5FE4", Offset = "0x11F5FE4", VA = "0x11F5FE4")]
		[Preserve]
		public static void SpecialHoopDamageManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x11F60BC", Offset = "0x11F60BC", VA = "0x11F60BC")]
		[Preserve]
		public static void SpecialHoopDamageManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x11F6194", Offset = "0x11F6194", VA = "0x11F6194")]
		[Preserve]
		public static void SpecialLevel_op_Implicit()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x11F6264", Offset = "0x11F6264", VA = "0x11F6264")]
		[Preserve]
		public static void SpecialLevel_op_Equality()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x11F633C", Offset = "0x11F633C", VA = "0x11F633C")]
		[Preserve]
		public static void SpecialLevel_op_Inequality()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x11F6414", Offset = "0x11F6414", VA = "0x11F6414")]
		[Preserve]
		public static void SpecialLevelBoard_op_Implicit()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x11F64E4", Offset = "0x11F64E4", VA = "0x11F64E4")]
		[Preserve]
		public static void SpecialLevelBoard_op_Equality()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x11F65BC", Offset = "0x11F65BC", VA = "0x11F65BC")]
		[Preserve]
		public static void SpecialLevelBoard_op_Inequality()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x11F6694", Offset = "0x11F6694", VA = "0x11F6694")]
		[Preserve]
		public static void SpecialLevelBossSpecialBehaviour_op_Implicit()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x11F6764", Offset = "0x11F6764", VA = "0x11F6764")]
		[Preserve]
		public static void SpecialLevelBossSpecialBehaviour_op_Equality()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x11F683C", Offset = "0x11F683C", VA = "0x11F683C")]
		[Preserve]
		public static void SpecialLevelBossSpecialBehaviour_op_Inequality()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x11F6914", Offset = "0x11F6914", VA = "0x11F6914")]
		[Preserve]
		public static void SpecialLevelHoopManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x11F69E4", Offset = "0x11F69E4", VA = "0x11F69E4")]
		[Preserve]
		public static void SpecialLevelHoopManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x11F6ABC", Offset = "0x11F6ABC", VA = "0x11F6ABC")]
		[Preserve]
		public static void SpecialLevelHoopManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x11F6B94", Offset = "0x11F6B94", VA = "0x11F6B94")]
		[Preserve]
		public static void StackObjectPlayType_op_Implicit()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x11F6C64", Offset = "0x11F6C64", VA = "0x11F6C64")]
		[Preserve]
		public static void StackObjectPlayType_op_Equality()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x11F6D3C", Offset = "0x11F6D3C", VA = "0x11F6D3C")]
		[Preserve]
		public static void StackObjectPlayType_op_Inequality()
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x11F6E14", Offset = "0x11F6E14", VA = "0x11F6E14")]
		[Preserve]
		public static void StepingHoop_op_Implicit()
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x11F6EE4", Offset = "0x11F6EE4", VA = "0x11F6EE4")]
		[Preserve]
		public static void StepingHoop_op_Equality()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x11F6FBC", Offset = "0x11F6FBC", VA = "0x11F6FBC")]
		[Preserve]
		public static void StepingHoop_op_Inequality()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x11F7094", Offset = "0x11F7094", VA = "0x11F7094")]
		[Preserve]
		public static void StepingHoopColorChanger_op_Implicit()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x11F7164", Offset = "0x11F7164", VA = "0x11F7164")]
		[Preserve]
		public static void StepingHoopColorChanger_op_Equality()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x11F723C", Offset = "0x11F723C", VA = "0x11F723C")]
		[Preserve]
		public static void StepingHoopColorChanger_op_Inequality()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x11F7314", Offset = "0x11F7314", VA = "0x11F7314")]
		[Preserve]
		public static void LeaderboardGameParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x11F73E4", Offset = "0x11F73E4", VA = "0x11F73E4")]
		[Preserve]
		public static void LeaderboardGameParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x11F74BC", Offset = "0x11F74BC", VA = "0x11F74BC")]
		[Preserve]
		public static void LeaderboardGameParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x11F7594", Offset = "0x11F7594", VA = "0x11F7594")]
		[Preserve]
		public static void OnlineModeGameParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x11F7664", Offset = "0x11F7664", VA = "0x11F7664")]
		[Preserve]
		public static void OnlineModeGameParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x11F773C", Offset = "0x11F773C", VA = "0x11F773C")]
		[Preserve]
		public static void OnlineModeGameParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x11F7814", Offset = "0x11F7814", VA = "0x11F7814")]
		[Preserve]
		public static void PlayManagerGameParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x11F78E4", Offset = "0x11F78E4", VA = "0x11F78E4")]
		[Preserve]
		public static void PlayManagerGameParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x11F79BC", Offset = "0x11F79BC", VA = "0x11F79BC")]
		[Preserve]
		public static void PlayManagerGameParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x11F7A94", Offset = "0x11F7A94", VA = "0x11F7A94")]
		[Preserve]
		public static void PlayStateManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x11F7B64", Offset = "0x11F7B64", VA = "0x11F7B64")]
		[Preserve]
		public static void PlayStateManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x11F7C3C", Offset = "0x11F7C3C", VA = "0x11F7C3C")]
		[Preserve]
		public static void PlayStateManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x11F7D14", Offset = "0x11F7D14", VA = "0x11F7D14")]
		[Preserve]
		public static void PlayStateParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x11F7DE4", Offset = "0x11F7DE4", VA = "0x11F7DE4")]
		[Preserve]
		public static void PlayStateParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x11F7EBC", Offset = "0x11F7EBC", VA = "0x11F7EBC")]
		[Preserve]
		public static void PlayStateParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x11F7F94", Offset = "0x11F7F94", VA = "0x11F7F94")]
		[Preserve]
		public static void RewardManagerGameParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x11F8064", Offset = "0x11F8064", VA = "0x11F8064")]
		[Preserve]
		public static void RewardManagerGameParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x11F813C", Offset = "0x11F813C", VA = "0x11F813C")]
		[Preserve]
		public static void RewardManagerGameParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x11F8214", Offset = "0x11F8214", VA = "0x11F8214")]
		[Preserve]
		public static void Quest1RenderPipelineUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x11F82E4", Offset = "0x11F82E4", VA = "0x11F82E4")]
		[Preserve]
		public static void Quest1RenderPipelineUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x11F83BC", Offset = "0x11F83BC", VA = "0x11F83BC")]
		[Preserve]
		public static void Quest1RenderPipelineUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x11F8494", Offset = "0x11F8494", VA = "0x11F8494")]
		[Preserve]
		public static void RandomTaggedHoopUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x11F8564", Offset = "0x11F8564", VA = "0x11F8564")]
		[Preserve]
		public static void RandomTaggedHoopUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x11F863C", Offset = "0x11F863C", VA = "0x11F863C")]
		[Preserve]
		public static void RandomTaggedHoopUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x11F8714", Offset = "0x11F8714", VA = "0x11F8714")]
		[Preserve]
		public static void AvatarBodyManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x11F87E4", Offset = "0x11F87E4", VA = "0x11F87E4")]
		[Preserve]
		public static void AvatarBodyManager_op_Equality()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x11F88BC", Offset = "0x11F88BC", VA = "0x11F88BC")]
		[Preserve]
		public static void AvatarBodyManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x11F8994", Offset = "0x11F8994", VA = "0x11F8994")]
		[Preserve]
		public static void AvatarHand_op_Implicit()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x11F8A64", Offset = "0x11F8A64", VA = "0x11F8A64")]
		[Preserve]
		public static void AvatarHand_op_Equality()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x11F8B3C", Offset = "0x11F8B3C", VA = "0x11F8B3C")]
		[Preserve]
		public static void AvatarHand_op_Inequality()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x11F8C14", Offset = "0x11F8C14", VA = "0x11F8C14")]
		[Preserve]
		public static void AvatarList_op_Implicit()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x11F8CE4", Offset = "0x11F8CE4", VA = "0x11F8CE4")]
		[Preserve]
		public static void AvatarList_op_Equality()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x11F8DBC", Offset = "0x11F8DBC", VA = "0x11F8DBC")]
		[Preserve]
		public static void AvatarList_op_Inequality()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x11F8E94", Offset = "0x11F8E94", VA = "0x11F8E94")]
		[Preserve]
		public static void AvatarLoader_op_Implicit()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x11F8F64", Offset = "0x11F8F64", VA = "0x11F8F64")]
		[Preserve]
		public static void AvatarLoader_op_Equality()
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x11F903C", Offset = "0x11F903C", VA = "0x11F903C")]
		[Preserve]
		public static void AvatarLoader_op_Inequality()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x11F9114", Offset = "0x11F9114", VA = "0x11F9114")]
		[Preserve]
		public static void DemoUnlockableGameplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x11F91E4", Offset = "0x11F91E4", VA = "0x11F91E4")]
		[Preserve]
		public static void DemoUnlockableGameplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x11F92BC", Offset = "0x11F92BC", VA = "0x11F92BC")]
		[Preserve]
		public static void DemoUnlockableGameplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x11F9394", Offset = "0x11F9394", VA = "0x11F9394")]
		[Preserve]
		public static void NextChallengeUnlock_op_Implicit()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x11F9464", Offset = "0x11F9464", VA = "0x11F9464")]
		[Preserve]
		public static void NextChallengeUnlock_op_Equality()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x11F953C", Offset = "0x11F953C", VA = "0x11F953C")]
		[Preserve]
		public static void NextChallengeUnlock_op_Inequality()
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x11F9614", Offset = "0x11F9614", VA = "0x11F9614")]
		[Preserve]
		public static void RemoteUnlockableGameplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x11F96E4", Offset = "0x11F96E4", VA = "0x11F96E4")]
		[Preserve]
		public static void RemoteUnlockableGameplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x11F97BC", Offset = "0x11F97BC", VA = "0x11F97BC")]
		[Preserve]
		public static void RemoteUnlockableGameplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x11F9894", Offset = "0x11F9894", VA = "0x11F9894")]
		[Preserve]
		public static void RemoteUnlockableLevel_op_Implicit()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x11F9964", Offset = "0x11F9964", VA = "0x11F9964")]
		[Preserve]
		public static void RemoteUnlockableLevel_op_Equality()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x11F9A3C", Offset = "0x11F9A3C", VA = "0x11F9A3C")]
		[Preserve]
		public static void RemoteUnlockableLevel_op_Inequality()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x11F9B14", Offset = "0x11F9B14", VA = "0x11F9B14")]
		[Preserve]
		public static void RewardManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x11F9BE4", Offset = "0x11F9BE4", VA = "0x11F9BE4")]
		[Preserve]
		public static void RewardManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x11F9CBC", Offset = "0x11F9CBC", VA = "0x11F9CBC")]
		[Preserve]
		public static void RewardManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x11F9D94", Offset = "0x11F9D94", VA = "0x11F9D94")]
		[Preserve]
		public static void RewardParameters_op_Implicit()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x11F9E64", Offset = "0x11F9E64", VA = "0x11F9E64")]
		[Preserve]
		public static void RewardParameters_op_Equality()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x11F9F3C", Offset = "0x11F9F3C", VA = "0x11F9F3C")]
		[Preserve]
		public static void RewardParameters_op_Inequality()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x11FA014", Offset = "0x11FA014", VA = "0x11FA014")]
		[Preserve]
		public static void UnlockableGameplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x11FA0E4", Offset = "0x11FA0E4", VA = "0x11FA0E4")]
		[Preserve]
		public static void UnlockableGameplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x11FA1BC", Offset = "0x11FA1BC", VA = "0x11FA1BC")]
		[Preserve]
		public static void UnlockableGameplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x11FA294", Offset = "0x11FA294", VA = "0x11FA294")]
		[Preserve]
		public static void UnlockableLevel_op_Implicit()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x11FA364", Offset = "0x11FA364", VA = "0x11FA364")]
		[Preserve]
		public static void UnlockableLevel_op_Equality()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x11FA43C", Offset = "0x11FA43C", VA = "0x11FA43C")]
		[Preserve]
		public static void UnlockableLevel_op_Inequality()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x11FA514", Offset = "0x11FA514", VA = "0x11FA514")]
		[Preserve]
		public static void UnlockableListener_op_Implicit()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x11FA5E4", Offset = "0x11FA5E4", VA = "0x11FA5E4")]
		[Preserve]
		public static void UnlockableListener_op_Equality()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x11FA6BC", Offset = "0x11FA6BC", VA = "0x11FA6BC")]
		[Preserve]
		public static void UnlockableListener_op_Inequality()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x11FA794", Offset = "0x11FA794", VA = "0x11FA794")]
		[Preserve]
		public static void UnlockableManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x11FA864", Offset = "0x11FA864", VA = "0x11FA864")]
		[Preserve]
		public static void UnlockableManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x11FA93C", Offset = "0x11FA93C", VA = "0x11FA93C")]
		[Preserve]
		public static void UnlockableManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x11FAA14", Offset = "0x11FAA14", VA = "0x11FAA14")]
		[Preserve]
		public static void UnlockableManagerSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x11FAAE4", Offset = "0x11FAAE4", VA = "0x11FAAE4")]
		[Preserve]
		public static void UnlockableManagerSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x11FABBC", Offset = "0x11FABBC", VA = "0x11FABBC")]
		[Preserve]
		public static void UnlockableManagerSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x11FAC94", Offset = "0x11FAC94", VA = "0x11FAC94")]
		[Preserve]
		public static void UnlockableSkin_op_Implicit()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x11FAD64", Offset = "0x11FAD64", VA = "0x11FAD64")]
		[Preserve]
		public static void UnlockableSkin_op_Equality()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x11FAE3C", Offset = "0x11FAE3C", VA = "0x11FAE3C")]
		[Preserve]
		public static void UnlockableSkin_op_Inequality()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x11FAF14", Offset = "0x11FAF14", VA = "0x11FAF14")]
		[Preserve]
		public static void UnlockableWrapper_op_Implicit()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x11FAFE4", Offset = "0x11FAFE4", VA = "0x11FAFE4")]
		[Preserve]
		public static void UnlockableWrapper_op_Equality()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x11FB0BC", Offset = "0x11FB0BC", VA = "0x11FB0BC")]
		[Preserve]
		public static void UnlockableWrapper_op_Inequality()
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x11FB194", Offset = "0x11FB194", VA = "0x11FB194")]
		[Preserve]
		public static void SaveManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x11FB264", Offset = "0x11FB264", VA = "0x11FB264")]
		[Preserve]
		public static void SaveManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x11FB33C", Offset = "0x11FB33C", VA = "0x11FB33C")]
		[Preserve]
		public static void SaveManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x11FB414", Offset = "0x11FB414", VA = "0x11FB414")]
		[Preserve]
		public static void ScoreManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x11FB4E4", Offset = "0x11FB4E4", VA = "0x11FB4E4")]
		[Preserve]
		public static void ScoreManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x11FB5BC", Offset = "0x11FB5BC", VA = "0x11FB5BC")]
		[Preserve]
		public static void ScoreManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x11FB694", Offset = "0x11FB694", VA = "0x11FB694")]
		[Preserve]
		public static void BackgroundMatchmakingManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x11FB764", Offset = "0x11FB764", VA = "0x11FB764")]
		[Preserve]
		public static void BackgroundMatchmakingManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x11FB83C", Offset = "0x11FB83C", VA = "0x11FB83C")]
		[Preserve]
		public static void BackgroundMatchmakingManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x11FB914", Offset = "0x11FB914", VA = "0x11FB914")]
		[Preserve]
		public static void DaltonismeConfigManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x11FB9E4", Offset = "0x11FB9E4", VA = "0x11FB9E4")]
		[Preserve]
		public static void DaltonismeConfigManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x11FBABC", Offset = "0x11FBABC", VA = "0x11FBABC")]
		[Preserve]
		public static void DaltonismeConfigManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x11FBB94", Offset = "0x11FBB94", VA = "0x11FBB94")]
		[Preserve]
		public static void PassthroughConfigManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x11FBC64", Offset = "0x11FBC64", VA = "0x11FBC64")]
		[Preserve]
		public static void PassthroughConfigManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x11FBD3C", Offset = "0x11FBD3C", VA = "0x11FBD3C")]
		[Preserve]
		public static void PassthroughConfigManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x11FBE14", Offset = "0x11FBE14", VA = "0x11FBE14")]
		[Preserve]
		public static void ShieldHitEffect_op_Implicit()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x11FBEE4", Offset = "0x11FBEE4", VA = "0x11FBEE4")]
		[Preserve]
		public static void ShieldHitEffect_op_Equality()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x11FBFBC", Offset = "0x11FBFBC", VA = "0x11FBFBC")]
		[Preserve]
		public static void ShieldHitEffect_op_Inequality()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x11FC094", Offset = "0x11FC094", VA = "0x11FC094")]
		[Preserve]
		public static void ShotArea_op_Implicit()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x11FC164", Offset = "0x11FC164", VA = "0x11FC164")]
		[Preserve]
		public static void ShotArea_op_Equality()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x11FC23C", Offset = "0x11FC23C", VA = "0x11FC23C")]
		[Preserve]
		public static void ShotArea_op_Inequality()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x11FC314", Offset = "0x11FC314", VA = "0x11FC314")]
		[Preserve]
		public static void SizeAdjuster_op_Implicit()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x11FC3E4", Offset = "0x11FC3E4", VA = "0x11FC3E4")]
		[Preserve]
		public static void SizeAdjuster_op_Equality()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x11FC4BC", Offset = "0x11FC4BC", VA = "0x11FC4BC")]
		[Preserve]
		public static void SizeAdjuster_op_Inequality()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x11FC594", Offset = "0x11FC594", VA = "0x11FC594")]
		[Preserve]
		public static void SkinCollection_op_Implicit()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x11FC664", Offset = "0x11FC664", VA = "0x11FC664")]
		[Preserve]
		public static void SkinCollection_op_Equality()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x11FC73C", Offset = "0x11FC73C", VA = "0x11FC73C")]
		[Preserve]
		public static void SkinCollection_op_Inequality()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x11FC814", Offset = "0x11FC814", VA = "0x11FC814")]
		[Preserve]
		public static void SkinConfetisUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x11FC8E4", Offset = "0x11FC8E4", VA = "0x11FC8E4")]
		[Preserve]
		public static void SkinConfetisUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x11FC9BC", Offset = "0x11FC9BC", VA = "0x11FC9BC")]
		[Preserve]
		public static void SkinConfetisUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x11FCA94", Offset = "0x11FCA94", VA = "0x11FCA94")]
		[Preserve]
		public static void SkinGameParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x11FCB64", Offset = "0x11FCB64", VA = "0x11FCB64")]
		[Preserve]
		public static void SkinGameParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x11FCC3C", Offset = "0x11FCC3C", VA = "0x11FCC3C")]
		[Preserve]
		public static void SkinGameParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x11FCD14", Offset = "0x11FCD14", VA = "0x11FCD14")]
		[Preserve]
		public static void SkinLightUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x11FCDE4", Offset = "0x11FCDE4", VA = "0x11FCDE4")]
		[Preserve]
		public static void SkinLightUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x11FCEBC", Offset = "0x11FCEBC", VA = "0x11FCEBC")]
		[Preserve]
		public static void SkinLightUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x11FCF94", Offset = "0x11FCF94", VA = "0x11FCF94")]
		[Preserve]
		public static void SkinManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x11FD064", Offset = "0x11FD064", VA = "0x11FD064")]
		[Preserve]
		public static void SkinManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x11FD13C", Offset = "0x11FD13C", VA = "0x11FD13C")]
		[Preserve]
		public static void SkinManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x11FD214", Offset = "0x11FD214", VA = "0x11FD214")]
		[Preserve]
		public static void SkinMaterialSwapper_op_Implicit()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x11FD2E4", Offset = "0x11FD2E4", VA = "0x11FD2E4")]
		[Preserve]
		public static void SkinMaterialSwapper_op_Equality()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x11FD3BC", Offset = "0x11FD3BC", VA = "0x11FD3BC")]
		[Preserve]
		public static void SkinMaterialSwapper_op_Inequality()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x11FD494", Offset = "0x11FD494", VA = "0x11FD494")]
		[Preserve]
		public static void SkinParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x11FD564", Offset = "0x11FD564", VA = "0x11FD564")]
		[Preserve]
		public static void SkinParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x11FD63C", Offset = "0x11FD63C", VA = "0x11FD63C")]
		[Preserve]
		public static void SkinParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x11FD714", Offset = "0x11FD714", VA = "0x11FD714")]
		[Preserve]
		public static void SkinPassthroughUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x11FD7E4", Offset = "0x11FD7E4", VA = "0x11FD7E4")]
		[Preserve]
		public static void SkinPassthroughUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x11FD8BC", Offset = "0x11FD8BC", VA = "0x11FD8BC")]
		[Preserve]
		public static void SkinPassthroughUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x11FD994", Offset = "0x11FD994", VA = "0x11FD994")]
		[Preserve]
		public static void SkinRoomMaterialUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x11FDA64", Offset = "0x11FDA64", VA = "0x11FDA64")]
		[Preserve]
		public static void SkinRoomMaterialUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x11FDB3C", Offset = "0x11FDB3C", VA = "0x11FDB3C")]
		[Preserve]
		public static void SkinRoomMaterialUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x11FDC14", Offset = "0x11FDC14", VA = "0x11FDC14")]
		[Preserve]
		public static void SpecialBonusAligner_op_Implicit()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x11FDCE4", Offset = "0x11FDCE4", VA = "0x11FDCE4")]
		[Preserve]
		public static void SpecialBonusAligner_op_Equality()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x11FDDBC", Offset = "0x11FDDBC", VA = "0x11FDDBC")]
		[Preserve]
		public static void SpecialBonusAligner_op_Inequality()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x11FDE94", Offset = "0x11FDE94", VA = "0x11FDE94")]
		[Preserve]
		public static void StartButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x11FDF64", Offset = "0x11FDF64", VA = "0x11FDF64")]
		[Preserve]
		public static void StartButton_op_Equality()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x11FE03C", Offset = "0x11FE03C", VA = "0x11FE03C")]
		[Preserve]
		public static void StartButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x11FE114", Offset = "0x11FE114", VA = "0x11FE114")]
		[Preserve]
		public static void StartButtonHilightEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x11FE1E4", Offset = "0x11FE1E4", VA = "0x11FE1E4")]
		[Preserve]
		public static void StartButtonHilightEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x11FE2BC", Offset = "0x11FE2BC", VA = "0x11FE2BC")]
		[Preserve]
		public static void StartButtonHilightEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x11FE394", Offset = "0x11FE394", VA = "0x11FE394")]
		[Preserve]
		public static void SummerWaterManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x11FE464", Offset = "0x11FE464", VA = "0x11FE464")]
		[Preserve]
		public static void SummerWaterManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x11FE53C", Offset = "0x11FE53C", VA = "0x11FE53C")]
		[Preserve]
		public static void SummerWaterManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x11FE614", Offset = "0x11FE614", VA = "0x11FE614")]
		[Preserve]
		public static void TaggedHoopManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x11FE6E4", Offset = "0x11FE6E4", VA = "0x11FE6E4")]
		[Preserve]
		public static void TaggedHoopManager_op_Equality()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x11FE7BC", Offset = "0x11FE7BC", VA = "0x11FE7BC")]
		[Preserve]
		public static void TaggedHoopManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x11FE894", Offset = "0x11FE894", VA = "0x11FE894")]
		[Preserve]
		public static void NetworkedTimer_op_Implicit()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x11FE964", Offset = "0x11FE964", VA = "0x11FE964")]
		[Preserve]
		public static void NetworkedTimer_op_Equality()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x11FEA3C", Offset = "0x11FEA3C", VA = "0x11FEA3C")]
		[Preserve]
		public static void NetworkedTimer_op_Inequality()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x11FEB14", Offset = "0x11FEB14", VA = "0x11FEB14")]
		[Preserve]
		public static void TimerAudio_op_Implicit()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x11FEBE4", Offset = "0x11FEBE4", VA = "0x11FEBE4")]
		[Preserve]
		public static void TimerAudio_op_Equality()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x11FECBC", Offset = "0x11FECBC", VA = "0x11FECBC")]
		[Preserve]
		public static void TimerAudio_op_Inequality()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x11FED94", Offset = "0x11FED94", VA = "0x11FED94")]
		[Preserve]
		public static void TimerDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x11FEE64", Offset = "0x11FEE64", VA = "0x11FEE64")]
		[Preserve]
		public static void TimerDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x11FEF3C", Offset = "0x11FEF3C", VA = "0x11FEF3C")]
		[Preserve]
		public static void TimerDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x11FF014", Offset = "0x11FF014", VA = "0x11FF014")]
		[Preserve]
		public static void TimerInfinitLoopDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x11FF0E4", Offset = "0x11FF0E4", VA = "0x11FF0E4")]
		[Preserve]
		public static void TimerInfinitLoopDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x11FF1BC", Offset = "0x11FF1BC", VA = "0x11FF1BC")]
		[Preserve]
		public static void TimerInfinitLoopDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x11FF294", Offset = "0x11FF294", VA = "0x11FF294")]
		[Preserve]
		public static void TouchableJauge_op_Implicit()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x11FF364", Offset = "0x11FF364", VA = "0x11FF364")]
		[Preserve]
		public static void TouchableJauge_op_Equality()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x11FF43C", Offset = "0x11FF43C", VA = "0x11FF43C")]
		[Preserve]
		public static void TouchableJauge_op_Inequality()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x11FF514", Offset = "0x11FF514", VA = "0x11FF514")]
		[Preserve]
		public static void TriggerableJauge_op_Implicit()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x11FF5E4", Offset = "0x11FF5E4", VA = "0x11FF5E4")]
		[Preserve]
		public static void TriggerableJauge_op_Equality()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x11FF6BC", Offset = "0x11FF6BC", VA = "0x11FF6BC")]
		[Preserve]
		public static void TriggerableJauge_op_Inequality()
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x11FF794", Offset = "0x11FF794", VA = "0x11FF794")]
		[Preserve]
		public static void ApplicationVersion_op_Implicit()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x11FF864", Offset = "0x11FF864", VA = "0x11FF864")]
		[Preserve]
		public static void ApplicationVersion_op_Equality()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x11FF93C", Offset = "0x11FF93C", VA = "0x11FF93C")]
		[Preserve]
		public static void ApplicationVersion_op_Inequality()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x11FFA14", Offset = "0x11FFA14", VA = "0x11FFA14")]
		[Preserve]
		public static void ChallengeLevelInfoDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x11FFAE4", Offset = "0x11FFAE4", VA = "0x11FFAE4")]
		[Preserve]
		public static void ChallengeLevelInfoDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x11FFBBC", Offset = "0x11FFBBC", VA = "0x11FFBBC")]
		[Preserve]
		public static void ChallengeLevelInfoDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x11FFC94", Offset = "0x11FFC94", VA = "0x11FFC94")]
		[Preserve]
		public static void ChallengeLevelRecapDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x11FFD64", Offset = "0x11FFD64", VA = "0x11FFD64")]
		[Preserve]
		public static void ChallengeLevelRecapDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x11FFE3C", Offset = "0x11FFE3C", VA = "0x11FFE3C")]
		[Preserve]
		public static void ChallengeLevelRecapDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x11FFF14", Offset = "0x11FFF14", VA = "0x11FFF14")]
		[Preserve]
		public static void ChallengePresetButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x11FFFE4", Offset = "0x11FFFE4", VA = "0x11FFFE4")]
		[Preserve]
		public static void ChallengePresetButton_op_Equality()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x12000BC", Offset = "0x12000BC", VA = "0x12000BC")]
		[Preserve]
		public static void ChallengePresetButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x1200194", Offset = "0x1200194", VA = "0x1200194")]
		[Preserve]
		public static void ChallengeRecapDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x1200264", Offset = "0x1200264", VA = "0x1200264")]
		[Preserve]
		public static void ChallengeRecapDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x120033C", Offset = "0x120033C", VA = "0x120033C")]
		[Preserve]
		public static void ChallengeRecapDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x1200414", Offset = "0x1200414", VA = "0x1200414")]
		[Preserve]
		public static void InputTypeDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x12004E4", Offset = "0x12004E4", VA = "0x12004E4")]
		[Preserve]
		public static void InputTypeDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x12005BC", Offset = "0x12005BC", VA = "0x12005BC")]
		[Preserve]
		public static void InputTypeDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x1200694", Offset = "0x1200694", VA = "0x1200694")]
		[Preserve]
		public static void LeaderboardButtonDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x1200764", Offset = "0x1200764", VA = "0x1200764")]
		[Preserve]
		public static void LeaderboardButtonDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x120083C", Offset = "0x120083C", VA = "0x120083C")]
		[Preserve]
		public static void LeaderboardButtonDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x1200914", Offset = "0x1200914", VA = "0x1200914")]
		[Preserve]
		public static void LeaderboardEntryDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x12009E4", Offset = "0x12009E4", VA = "0x12009E4")]
		[Preserve]
		public static void LeaderboardEntryDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x1200ABC", Offset = "0x1200ABC", VA = "0x1200ABC")]
		[Preserve]
		public static void LeaderboardEntryDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x1200B94", Offset = "0x1200B94", VA = "0x1200B94")]
		[Preserve]
		public static void LevelSimpleButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x1200C64", Offset = "0x1200C64", VA = "0x1200C64")]
		[Preserve]
		public static void LevelSimpleButton_op_Equality()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x1200D3C", Offset = "0x1200D3C", VA = "0x1200D3C")]
		[Preserve]
		public static void LevelSimpleButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x1200E14", Offset = "0x1200E14", VA = "0x1200E14")]
		[Preserve]
		public static void RoomEntryButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x1200EE4", Offset = "0x1200EE4", VA = "0x1200EE4")]
		[Preserve]
		public static void RoomEntryButton_op_Equality()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x1200FBC", Offset = "0x1200FBC", VA = "0x1200FBC")]
		[Preserve]
		public static void RoomEntryButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x1201094", Offset = "0x1201094", VA = "0x1201094")]
		[Preserve]
		public static void TrainingLevelButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x1201164", Offset = "0x1201164", VA = "0x1201164")]
		[Preserve]
		public static void TrainingLevelButton_op_Equality()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x120123C", Offset = "0x120123C", VA = "0x120123C")]
		[Preserve]
		public static void TrainingLevelButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x1201314", Offset = "0x1201314", VA = "0x1201314")]
		[Preserve]
		public static void XRInputToggle_op_Implicit()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x12013E4", Offset = "0x12013E4", VA = "0x12013E4")]
		[Preserve]
		public static void XRInputToggle_op_Equality()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x12014BC", Offset = "0x12014BC", VA = "0x12014BC")]
		[Preserve]
		public static void XRInputToggle_op_Inequality()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x1201594", Offset = "0x1201594", VA = "0x1201594")]
		[Preserve]
		public static void BootMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x1201664", Offset = "0x1201664", VA = "0x1201664")]
		[Preserve]
		public static void BootMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x120173C", Offset = "0x120173C", VA = "0x120173C")]
		[Preserve]
		public static void BootMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x1201814", Offset = "0x1201814", VA = "0x1201814")]
		[Preserve]
		public static void BootSequenceSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x12018E4", Offset = "0x12018E4", VA = "0x12018E4")]
		[Preserve]
		public static void BootSequenceSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x12019BC", Offset = "0x12019BC", VA = "0x12019BC")]
		[Preserve]
		public static void BootSequenceSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x1201A94", Offset = "0x1201A94", VA = "0x1201A94")]
		[Preserve]
		public static void FTEMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x1201B64", Offset = "0x1201B64", VA = "0x1201B64")]
		[Preserve]
		public static void FTEMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x1201C3C", Offset = "0x1201C3C", VA = "0x1201C3C")]
		[Preserve]
		public static void FTEMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x1201D14", Offset = "0x1201D14", VA = "0x1201D14")]
		[Preserve]
		public static void FTESequenceSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x1201DE4", Offset = "0x1201DE4", VA = "0x1201DE4")]
		[Preserve]
		public static void FTESequenceSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x1201EBC", Offset = "0x1201EBC", VA = "0x1201EBC")]
		[Preserve]
		public static void FTESequenceSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x1201F94", Offset = "0x1201F94", VA = "0x1201F94")]
		[Preserve]
		public static void ChallengeInfoMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x1202064", Offset = "0x1202064", VA = "0x1202064")]
		[Preserve]
		public static void ChallengeInfoMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x120213C", Offset = "0x120213C", VA = "0x120213C")]
		[Preserve]
		public static void ChallengeInfoMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x1202214", Offset = "0x1202214", VA = "0x1202214")]
		[Preserve]
		public static void ChallengeLeaderboardDisplayMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x12022E4", Offset = "0x12022E4", VA = "0x12022E4")]
		[Preserve]
		public static void ChallengeLeaderboardDisplayMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x12023BC", Offset = "0x12023BC", VA = "0x12023BC")]
		[Preserve]
		public static void ChallengeLeaderboardDisplayMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x1202494", Offset = "0x1202494", VA = "0x1202494")]
		[Preserve]
		public static void ChallengeRecapEndMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x1202564", Offset = "0x1202564", VA = "0x1202564")]
		[Preserve]
		public static void ChallengeRecapEndMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x120263C", Offset = "0x120263C", VA = "0x120263C")]
		[Preserve]
		public static void ChallengeRecapEndMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1202714", Offset = "0x1202714", VA = "0x1202714")]
		[Preserve]
		public static void ChallengeSelectionMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x12027E4", Offset = "0x12027E4", VA = "0x12027E4")]
		[Preserve]
		public static void ChallengeSelectionMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x12028BC", Offset = "0x12028BC", VA = "0x12028BC")]
		[Preserve]
		public static void ChallengeSelectionMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x1202994", Offset = "0x1202994", VA = "0x1202994")]
		[Preserve]
		public static void ChangelogMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x1202A64", Offset = "0x1202A64", VA = "0x1202A64")]
		[Preserve]
		public static void ChangelogMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x1202B3C", Offset = "0x1202B3C", VA = "0x1202B3C")]
		[Preserve]
		public static void ChangelogMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x1202C14", Offset = "0x1202C14", VA = "0x1202C14")]
		[Preserve]
		public static void CreditsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x1202CE4", Offset = "0x1202CE4", VA = "0x1202CE4")]
		[Preserve]
		public static void CreditsMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1202DBC", Offset = "0x1202DBC", VA = "0x1202DBC")]
		[Preserve]
		public static void CreditsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x1202E94", Offset = "0x1202E94", VA = "0x1202E94")]
		[Preserve]
		public static void EndOfTrainingPopup_op_Implicit()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x1202F64", Offset = "0x1202F64", VA = "0x1202F64")]
		[Preserve]
		public static void EndOfTrainingPopup_op_Equality()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x120303C", Offset = "0x120303C", VA = "0x120303C")]
		[Preserve]
		public static void EndOfTrainingPopup_op_Inequality()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x1203114", Offset = "0x1203114", VA = "0x1203114")]
		[Preserve]
		public static void LeaderboardDisplayMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x12031E4", Offset = "0x12031E4", VA = "0x12031E4")]
		[Preserve]
		public static void LeaderboardDisplayMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x12032BC", Offset = "0x12032BC", VA = "0x12032BC")]
		[Preserve]
		public static void LeaderboardDisplayMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1203394", Offset = "0x1203394", VA = "0x1203394")]
		[Preserve]
		public static void LeaderboardInputMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x1203464", Offset = "0x1203464", VA = "0x1203464")]
		[Preserve]
		public static void LeaderboardInputMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x120353C", Offset = "0x120353C", VA = "0x120353C")]
		[Preserve]
		public static void LeaderboardInputMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x1203614", Offset = "0x1203614", VA = "0x1203614")]
		[Preserve]
		public static void LeaderboardOnlineDisplayMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x12036E4", Offset = "0x12036E4", VA = "0x12036E4")]
		[Preserve]
		public static void LeaderboardOnlineDisplayMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x12037BC", Offset = "0x12037BC", VA = "0x12037BC")]
		[Preserve]
		public static void LeaderboardOnlineDisplayMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1203894", Offset = "0x1203894", VA = "0x1203894")]
		[Preserve]
		public static void LeaderboardsSelectionMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x1203964", Offset = "0x1203964", VA = "0x1203964")]
		[Preserve]
		public static void LeaderboardsSelectionMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x1203A3C", Offset = "0x1203A3C", VA = "0x1203A3C")]
		[Preserve]
		public static void LeaderboardsSelectionMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x1203B14", Offset = "0x1203B14", VA = "0x1203B14")]
		[Preserve]
		public static void LevelInfoMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x1203BE4", Offset = "0x1203BE4", VA = "0x1203BE4")]
		[Preserve]
		public static void LevelInfoMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x1203CBC", Offset = "0x1203CBC", VA = "0x1203CBC")]
		[Preserve]
		public static void LevelInfoMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x1203D94", Offset = "0x1203D94", VA = "0x1203D94")]
		[Preserve]
		public static void LevelLeaderboardDisplayMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x1203E64", Offset = "0x1203E64", VA = "0x1203E64")]
		[Preserve]
		public static void LevelLeaderboardDisplayMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x1203F3C", Offset = "0x1203F3C", VA = "0x1203F3C")]
		[Preserve]
		public static void LevelLeaderboardDisplayMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x1204014", Offset = "0x1204014", VA = "0x1204014")]
		[Preserve]
		public static void LevelSelectionScrollMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x12040E4", Offset = "0x12040E4", VA = "0x12040E4")]
		[Preserve]
		public static void LevelSelectionScrollMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x12041BC", Offset = "0x12041BC", VA = "0x12041BC")]
		[Preserve]
		public static void LevelSelectionScrollMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x1204294", Offset = "0x1204294", VA = "0x1204294")]
		[Preserve]
		public static void MainMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x1204364", Offset = "0x1204364", VA = "0x1204364")]
		[Preserve]
		public static void MainMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x120443C", Offset = "0x120443C", VA = "0x120443C")]
		[Preserve]
		public static void MainMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x1204514", Offset = "0x1204514", VA = "0x1204514")]
		[Preserve]
		public static void BrowseMatchmakingRoomsMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x12045E4", Offset = "0x12045E4", VA = "0x12045E4")]
		[Preserve]
		public static void BrowseMatchmakingRoomsMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x12046BC", Offset = "0x12046BC", VA = "0x12046BC")]
		[Preserve]
		public static void BrowseMatchmakingRoomsMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x1204794", Offset = "0x1204794", VA = "0x1204794")]
		[Preserve]
		public static void ClientMatchmakingRoomMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x1204864", Offset = "0x1204864", VA = "0x1204864")]
		[Preserve]
		public static void ClientMatchmakingRoomMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x120493C", Offset = "0x120493C", VA = "0x120493C")]
		[Preserve]
		public static void ClientMatchmakingRoomMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x1204A14", Offset = "0x1204A14", VA = "0x1204A14")]
		[Preserve]
		public static void HostMatchmakingRoomMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x1204AE4", Offset = "0x1204AE4", VA = "0x1204AE4")]
		[Preserve]
		public static void HostMatchmakingRoomMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x1204BBC", Offset = "0x1204BBC", VA = "0x1204BBC")]
		[Preserve]
		public static void HostMatchmakingRoomMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x1204C94", Offset = "0x1204C94", VA = "0x1204C94")]
		[Preserve]
		public static void MatchmakingMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x1204D64", Offset = "0x1204D64", VA = "0x1204D64")]
		[Preserve]
		public static void MatchmakingMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x1204E3C", Offset = "0x1204E3C", VA = "0x1204E3C")]
		[Preserve]
		public static void MatchmakingMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x1204F14", Offset = "0x1204F14", VA = "0x1204F14")]
		[Preserve]
		public static void PartyModeMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x1204FE4", Offset = "0x1204FE4", VA = "0x1204FE4")]
		[Preserve]
		public static void PartyModeMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x12050BC", Offset = "0x12050BC", VA = "0x12050BC")]
		[Preserve]
		public static void PartyModeMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x1205194", Offset = "0x1205194", VA = "0x1205194")]
		[Preserve]
		public static void SimpleLevelInfoMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x1205264", Offset = "0x1205264", VA = "0x1205264")]
		[Preserve]
		public static void SimpleLevelInfoMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x120533C", Offset = "0x120533C", VA = "0x120533C")]
		[Preserve]
		public static void SimpleLevelInfoMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x1205414", Offset = "0x1205414", VA = "0x1205414")]
		[Preserve]
		public static void StartMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x12054E4", Offset = "0x12054E4", VA = "0x12054E4")]
		[Preserve]
		public static void StartMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x12055BC", Offset = "0x12055BC", VA = "0x12055BC")]
		[Preserve]
		public static void StartMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x1205694", Offset = "0x1205694", VA = "0x1205694")]
		[Preserve]
		public static void TutorialCompletedMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x1205764", Offset = "0x1205764", VA = "0x1205764")]
		[Preserve]
		public static void TutorialCompletedMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x120583C", Offset = "0x120583C", VA = "0x120583C")]
		[Preserve]
		public static void TutorialCompletedMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x1205914", Offset = "0x1205914", VA = "0x1205914")]
		[Preserve]
		public static void TutorialLevelInfoMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x12059E4", Offset = "0x12059E4", VA = "0x12059E4")]
		[Preserve]
		public static void TutorialLevelInfoMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x1205ABC", Offset = "0x1205ABC", VA = "0x1205ABC")]
		[Preserve]
		public static void TutorialLevelInfoMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x1205B94", Offset = "0x1205B94", VA = "0x1205B94")]
		[Preserve]
		public static void UnlocksArcadePopup_op_Implicit()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x1205C64", Offset = "0x1205C64", VA = "0x1205C64")]
		[Preserve]
		public static void UnlocksArcadePopup_op_Equality()
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x1205D3C", Offset = "0x1205D3C", VA = "0x1205D3C")]
		[Preserve]
		public static void UnlocksArcadePopup_op_Inequality()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x1205E14", Offset = "0x1205E14", VA = "0x1205E14")]
		[Preserve]
		public static void LevelDisplaySettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x1205EE4", Offset = "0x1205EE4", VA = "0x1205EE4")]
		[Preserve]
		public static void LevelDisplaySettings_op_Equality()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x1205FBC", Offset = "0x1205FBC", VA = "0x1205FBC")]
		[Preserve]
		public static void LevelDisplaySettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x1206094", Offset = "0x1206094", VA = "0x1206094")]
		[Preserve]
		public static void MenuFlowsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x1206164", Offset = "0x1206164", VA = "0x1206164")]
		[Preserve]
		public static void MenuFlowsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x120623C", Offset = "0x120623C", VA = "0x120623C")]
		[Preserve]
		public static void MenuFlowsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x1206314", Offset = "0x1206314", VA = "0x1206314")]
		[Preserve]
		public static void MenuManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x12063E4", Offset = "0x12063E4", VA = "0x12063E4")]
		[Preserve]
		public static void MenuManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x12064BC", Offset = "0x12064BC", VA = "0x12064BC")]
		[Preserve]
		public static void MenuManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x1206594", Offset = "0x1206594", VA = "0x1206594")]
		[Preserve]
		public static void MenuSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x1206664", Offset = "0x1206664", VA = "0x1206664")]
		[Preserve]
		public static void MenuSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x120673C", Offset = "0x120673C", VA = "0x120673C")]
		[Preserve]
		public static void MenuSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x1206814", Offset = "0x1206814", VA = "0x1206814")]
		[Preserve]
		public static void MenuUserIntent_op_Implicit()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x12068E4", Offset = "0x12068E4", VA = "0x12068E4")]
		[Preserve]
		public static void MenuUserIntent_op_Equality()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x12069BC", Offset = "0x12069BC", VA = "0x12069BC")]
		[Preserve]
		public static void MenuUserIntent_op_Inequality()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x1206A94", Offset = "0x1206A94", VA = "0x1206A94")]
		[Preserve]
		public static void MenuUserIntentGameParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x1206B64", Offset = "0x1206B64", VA = "0x1206B64")]
		[Preserve]
		public static void MenuUserIntentGameParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x1206C3C", Offset = "0x1206C3C", VA = "0x1206C3C")]
		[Preserve]
		public static void MenuUserIntentGameParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x1206D14", Offset = "0x1206D14", VA = "0x1206D14")]
		[Preserve]
		public static void ArcadeConfirmationPopup_op_Implicit()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x1206DE4", Offset = "0x1206DE4", VA = "0x1206DE4")]
		[Preserve]
		public static void ArcadeConfirmationPopup_op_Equality()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x1206EBC", Offset = "0x1206EBC", VA = "0x1206EBC")]
		[Preserve]
		public static void ArcadeConfirmationPopup_op_Inequality()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x1206F94", Offset = "0x1206F94", VA = "0x1206F94")]
		[Preserve]
		public static void ArcadeGridMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x1207064", Offset = "0x1207064", VA = "0x1207064")]
		[Preserve]
		public static void ArcadeGridMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x120713C", Offset = "0x120713C", VA = "0x120713C")]
		[Preserve]
		public static void ArcadeGridMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x1207214", Offset = "0x1207214", VA = "0x1207214")]
		[Preserve]
		public static void ArcadeListMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x12072E4", Offset = "0x12072E4", VA = "0x12072E4")]
		[Preserve]
		public static void ArcadeListMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x12073BC", Offset = "0x12073BC", VA = "0x12073BC")]
		[Preserve]
		public static void ArcadeListMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x1207494", Offset = "0x1207494", VA = "0x1207494")]
		[Preserve]
		public static void ArcadeMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x1207564", Offset = "0x1207564", VA = "0x1207564")]
		[Preserve]
		public static void ArcadeMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x120763C", Offset = "0x120763C", VA = "0x120763C")]
		[Preserve]
		public static void ArcadeMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x1207714", Offset = "0x1207714", VA = "0x1207714")]
		[Preserve]
		public static void ArcadeMenuRoute_op_Implicit()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x12077E4", Offset = "0x12077E4", VA = "0x12077E4")]
		[Preserve]
		public static void ArcadeMenuRoute_op_Equality()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x12078BC", Offset = "0x12078BC", VA = "0x12078BC")]
		[Preserve]
		public static void ArcadeMenuRoute_op_Inequality()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x1207994", Offset = "0x1207994", VA = "0x1207994")]
		[Preserve]
		public static void ArcadeMenuRouteManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x1207A64", Offset = "0x1207A64", VA = "0x1207A64")]
		[Preserve]
		public static void ArcadeMenuRouteManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x1207B3C", Offset = "0x1207B3C", VA = "0x1207B3C")]
		[Preserve]
		public static void ArcadeMenuRouteManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x1207C14", Offset = "0x1207C14", VA = "0x1207C14")]
		[Preserve]
		public static void ArcadePopupManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x1207CE4", Offset = "0x1207CE4", VA = "0x1207CE4")]
		[Preserve]
		public static void ArcadePopupManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x1207DBC", Offset = "0x1207DBC", VA = "0x1207DBC")]
		[Preserve]
		public static void ArcadePopupManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x1207E94", Offset = "0x1207E94", VA = "0x1207E94")]
		[Preserve]
		public static void ArcadeScrollMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x1207F64", Offset = "0x1207F64", VA = "0x1207F64")]
		[Preserve]
		public static void ArcadeScrollMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x120803C", Offset = "0x120803C", VA = "0x120803C")]
		[Preserve]
		public static void ArcadeScrollMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x1208114", Offset = "0x1208114", VA = "0x1208114")]
		[Preserve]
		public static void ArcadeSelectable_op_Implicit()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x12081E4", Offset = "0x12081E4", VA = "0x12081E4")]
		[Preserve]
		public static void ArcadeSelectable_op_Equality()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x12082BC", Offset = "0x12082BC", VA = "0x12082BC")]
		[Preserve]
		public static void ArcadeSelectable_op_Inequality()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x1208394", Offset = "0x1208394", VA = "0x1208394")]
		[Preserve]
		public static void ArcadeSelectableHighlightable_op_Implicit()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x1208464", Offset = "0x1208464", VA = "0x1208464")]
		[Preserve]
		public static void ArcadeSelectableHighlightable_op_Equality()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x120853C", Offset = "0x120853C", VA = "0x120853C")]
		[Preserve]
		public static void ArcadeSelectableHighlightable_op_Inequality()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x1208614", Offset = "0x1208614", VA = "0x1208614")]
		[Preserve]
		public static void ArcadeSelectableInputChar_op_Implicit()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x12086E4", Offset = "0x12086E4", VA = "0x12086E4")]
		[Preserve]
		public static void ArcadeSelectableInputChar_op_Equality()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x12087BC", Offset = "0x12087BC", VA = "0x12087BC")]
		[Preserve]
		public static void ArcadeSelectableInputChar_op_Inequality()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x1208894", Offset = "0x1208894", VA = "0x1208894")]
		[Preserve]
		public static void ArcadeSelectableToggle_op_Implicit()
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x1208964", Offset = "0x1208964", VA = "0x1208964")]
		[Preserve]
		public static void ArcadeSelectableToggle_op_Equality()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x1208A3C", Offset = "0x1208A3C", VA = "0x1208A3C")]
		[Preserve]
		public static void ArcadeSelectableToggle_op_Inequality()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x1208B14", Offset = "0x1208B14", VA = "0x1208B14")]
		[Preserve]
		public static void MenuCacheSystem_op_Implicit()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x1208BE4", Offset = "0x1208BE4", VA = "0x1208BE4")]
		[Preserve]
		public static void MenuCacheSystem_op_Equality()
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x1208CBC", Offset = "0x1208CBC", VA = "0x1208CBC")]
		[Preserve]
		public static void MenuCacheSystem_op_Inequality()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x1208D94", Offset = "0x1208D94", VA = "0x1208D94")]
		[Preserve]
		public static void SelectableSprite_op_Implicit()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x1208E64", Offset = "0x1208E64", VA = "0x1208E64")]
		[Preserve]
		public static void SelectableSprite_op_Equality()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x1208F3C", Offset = "0x1208F3C", VA = "0x1208F3C")]
		[Preserve]
		public static void SelectableSprite_op_Inequality()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x1209014", Offset = "0x1209014", VA = "0x1209014")]
		[Preserve]
		public static void SelectableTextMesh_op_Implicit()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x12090E4", Offset = "0x12090E4", VA = "0x12090E4")]
		[Preserve]
		public static void SelectableTextMesh_op_Equality()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x12091BC", Offset = "0x12091BC", VA = "0x12091BC")]
		[Preserve]
		public static void SelectableTextMesh_op_Inequality()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x1209294", Offset = "0x1209294", VA = "0x1209294")]
		[Preserve]
		public static void SelectableToggleOption_op_Implicit()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x1209364", Offset = "0x1209364", VA = "0x1209364")]
		[Preserve]
		public static void SelectableToggleOption_op_Equality()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x120943C", Offset = "0x120943C", VA = "0x120943C")]
		[Preserve]
		public static void SelectableToggleOption_op_Inequality()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x1209514", Offset = "0x1209514", VA = "0x1209514")]
		[Preserve]
		public static void BlinkingTextMeshProUGUI_op_Implicit()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x12095E4", Offset = "0x12095E4", VA = "0x12095E4")]
		[Preserve]
		public static void BlinkingTextMeshProUGUI_op_Equality()
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x12096BC", Offset = "0x12096BC", VA = "0x12096BC")]
		[Preserve]
		public static void BlinkingTextMeshProUGUI_op_Inequality()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x1209794", Offset = "0x1209794", VA = "0x1209794")]
		[Preserve]
		public static void CoinsDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x1209864", Offset = "0x1209864", VA = "0x1209864")]
		[Preserve]
		public static void CoinsDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x120993C", Offset = "0x120993C", VA = "0x120993C")]
		[Preserve]
		public static void CoinsDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x1209A14", Offset = "0x1209A14", VA = "0x1209A14")]
		[Preserve]
		public static void DeviceSpecificSprite_op_Implicit()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x1209AE4", Offset = "0x1209AE4", VA = "0x1209AE4")]
		[Preserve]
		public static void DeviceSpecificSprite_op_Equality()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x1209BBC", Offset = "0x1209BBC", VA = "0x1209BBC")]
		[Preserve]
		public static void DeviceSpecificSprite_op_Inequality()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x1209C94", Offset = "0x1209C94", VA = "0x1209C94")]
		[Preserve]
		public static void EndMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x1209D64", Offset = "0x1209D64", VA = "0x1209D64")]
		[Preserve]
		public static void EndMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x1209E3C", Offset = "0x1209E3C", VA = "0x1209E3C")]
		[Preserve]
		public static void EndMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x1209F14", Offset = "0x1209F14", VA = "0x1209F14")]
		[Preserve]
		public static void FontBlinkManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x1209FE4", Offset = "0x1209FE4", VA = "0x1209FE4")]
		[Preserve]
		public static void FontBlinkManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x120A0BC", Offset = "0x120A0BC", VA = "0x120A0BC")]
		[Preserve]
		public static void FontBlinkManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x120A194", Offset = "0x120A194", VA = "0x120A194")]
		[Preserve]
		public static void FormattedLocalizedText_op_Implicit()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x120A264", Offset = "0x120A264", VA = "0x120A264")]
		[Preserve]
		public static void FormattedLocalizedText_op_Equality()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x120A33C", Offset = "0x120A33C", VA = "0x120A33C")]
		[Preserve]
		public static void FormattedLocalizedText_op_Inequality()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x120A414", Offset = "0x120A414", VA = "0x120A414")]
		[Preserve]
		public static void LevelThemeBackgroundUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x120A4E4", Offset = "0x120A4E4", VA = "0x120A4E4")]
		[Preserve]
		public static void LevelThemeBackgroundUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x120A5BC", Offset = "0x120A5BC", VA = "0x120A5BC")]
		[Preserve]
		public static void LevelThemeBackgroundUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x120A694", Offset = "0x120A694", VA = "0x120A694")]
		[Preserve]
		public static void NewIconeAnimation_op_Implicit()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x120A764", Offset = "0x120A764", VA = "0x120A764")]
		[Preserve]
		public static void NewIconeAnimation_op_Equality()
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x120A83C", Offset = "0x120A83C", VA = "0x120A83C")]
		[Preserve]
		public static void NewIconeAnimation_op_Inequality()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x120A914", Offset = "0x120A914", VA = "0x120A914")]
		[Preserve]
		public static void OnlineFadeManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x120A9E4", Offset = "0x120A9E4", VA = "0x120A9E4")]
		[Preserve]
		public static void OnlineFadeManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x120AABC", Offset = "0x120AABC", VA = "0x120AABC")]
		[Preserve]
		public static void OnlineFadeManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x120AB94", Offset = "0x120AB94", VA = "0x120AB94")]
		[Preserve]
		public static void TicketLimitChecker_op_Implicit()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x120AC64", Offset = "0x120AC64", VA = "0x120AC64")]
		[Preserve]
		public static void TicketLimitChecker_op_Equality()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x120AD3C", Offset = "0x120AD3C", VA = "0x120AD3C")]
		[Preserve]
		public static void TicketLimitChecker_op_Inequality()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x120AE14", Offset = "0x120AE14", VA = "0x120AE14")]
		[Preserve]
		public static void CheckBundleVersion_op_Implicit()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x120AEE4", Offset = "0x120AEE4", VA = "0x120AEE4")]
		[Preserve]
		public static void CheckBundleVersion_op_Equality()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x120AFBC", Offset = "0x120AFBC", VA = "0x120AFBC")]
		[Preserve]
		public static void CheckBundleVersion_op_Inequality()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x120B094", Offset = "0x120B094", VA = "0x120B094")]
		[Preserve]
		public static void ColliderEventsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x120B164", Offset = "0x120B164", VA = "0x120B164")]
		[Preserve]
		public static void ColliderEventsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x120B23C", Offset = "0x120B23C", VA = "0x120B23C")]
		[Preserve]
		public static void ColliderEventsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x120B314", Offset = "0x120B314", VA = "0x120B314")]
		[Preserve]
		public static void GlobalCoroutine_op_Implicit()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x120B3E4", Offset = "0x120B3E4", VA = "0x120B3E4")]
		[Preserve]
		public static void GlobalCoroutine_op_Equality()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x120B4BC", Offset = "0x120B4BC", VA = "0x120B4BC")]
		[Preserve]
		public static void GlobalCoroutine_op_Inequality()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x120B594", Offset = "0x120B594", VA = "0x120B594")]
		[Preserve]
		public static void WadlowHauntedGateAnimator_op_Implicit()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x120B664", Offset = "0x120B664", VA = "0x120B664")]
		[Preserve]
		public static void WadlowHauntedGateAnimator_op_Equality()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x120B73C", Offset = "0x120B73C", VA = "0x120B73C")]
		[Preserve]
		public static void WadlowHauntedGateAnimator_op_Inequality()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x120B814", Offset = "0x120B814", VA = "0x120B814")]
		[Preserve]
		public static void Effet_fluid_op_Implicit()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x120B8E4", Offset = "0x120B8E4", VA = "0x120B8E4")]
		[Preserve]
		public static void Effet_fluid_op_Equality()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x120B9BC", Offset = "0x120B9BC", VA = "0x120B9BC")]
		[Preserve]
		public static void Effet_fluid_op_Inequality()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x120BA94", Offset = "0x120BA94", VA = "0x120BA94")]
		[Preserve]
		public static void Interactor_op_Implicit()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x120BB64", Offset = "0x120BB64", VA = "0x120BB64")]
		[Preserve]
		public static void Interactor_op_Equality()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x120BC3C", Offset = "0x120BC3C", VA = "0x120BC3C")]
		[Preserve]
		public static void Interactor_op_Inequality()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x120BD14", Offset = "0x120BD14", VA = "0x120BD14")]
		[Preserve]
		public static void SetInteractiveShaderEffects_op_Implicit()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x120BDE4", Offset = "0x120BDE4", VA = "0x120BDE4")]
		[Preserve]
		public static void SetInteractiveShaderEffects_op_Equality()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x120BEBC", Offset = "0x120BEBC", VA = "0x120BEBC")]
		[Preserve]
		public static void SetInteractiveShaderEffects_op_Inequality()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x120BF94", Offset = "0x120BF94", VA = "0x120BF94")]
		[Preserve]
		public static void SquashAndStretch_op_Implicit()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x120C064", Offset = "0x120C064", VA = "0x120C064")]
		[Preserve]
		public static void SquashAndStretch_op_Equality()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x120C13C", Offset = "0x120C13C", VA = "0x120C13C")]
		[Preserve]
		public static void SquashAndStretch_op_Inequality()
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x120C214", Offset = "0x120C214", VA = "0x120C214")]
		[Preserve]
		public static void Interactor_Test_op_Implicit()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x120C2E4", Offset = "0x120C2E4", VA = "0x120C2E4")]
		[Preserve]
		public static void Interactor_Test_op_Equality()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x120C3BC", Offset = "0x120C3BC", VA = "0x120C3BC")]
		[Preserve]
		public static void Interactor_Test_op_Inequality()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x120C494", Offset = "0x120C494", VA = "0x120C494")]
		[Preserve]
		public static void MenuBackgroundModeUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x120C564", Offset = "0x120C564", VA = "0x120C564")]
		[Preserve]
		public static void MenuBackgroundModeUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x120C63C", Offset = "0x120C63C", VA = "0x120C63C")]
		[Preserve]
		public static void MenuBackgroundModeUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x120C714", Offset = "0x120C714", VA = "0x120C714")]
		[Preserve]
		public static void MenuBackgroundRotation_op_Implicit()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x120C7E4", Offset = "0x120C7E4", VA = "0x120C7E4")]
		[Preserve]
		public static void MenuBackgroundRotation_op_Equality()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x120C8BC", Offset = "0x120C8BC", VA = "0x120C8BC")]
		[Preserve]
		public static void MenuBackgroundRotation_op_Inequality()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x120C994", Offset = "0x120C994", VA = "0x120C994")]
		[Preserve]
		public static void MenuFlowFTE_op_Implicit()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x120CA64", Offset = "0x120CA64", VA = "0x120CA64")]
		[Preserve]
		public static void MenuFlowFTE_op_Equality()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x120CB3C", Offset = "0x120CB3C", VA = "0x120CB3C")]
		[Preserve]
		public static void MenuFlowFTE_op_Inequality()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x120CC14", Offset = "0x120CC14", VA = "0x120CC14")]
		[Preserve]
		public static void MenuPopupInputChoice_op_Implicit()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x120CCE4", Offset = "0x120CCE4", VA = "0x120CCE4")]
		[Preserve]
		public static void MenuPopupInputChoice_op_Equality()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x120CDBC", Offset = "0x120CDBC", VA = "0x120CDBC")]
		[Preserve]
		public static void MenuPopupInputChoice_op_Inequality()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x120CE94", Offset = "0x120CE94", VA = "0x120CE94")]
		[Preserve]
		public static void MenuPopupTutorialLevel_op_Implicit()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x120CF64", Offset = "0x120CF64", VA = "0x120CF64")]
		[Preserve]
		public static void MenuPopupTutorialLevel_op_Equality()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x120D03C", Offset = "0x120D03C", VA = "0x120D03C")]
		[Preserve]
		public static void MenuPopupTutorialLevel_op_Inequality()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x120D114", Offset = "0x120D114", VA = "0x120D114")]
		[Preserve]
		public static void MenuPopupWindow_op_Implicit()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x120D1E4", Offset = "0x120D1E4", VA = "0x120D1E4")]
		[Preserve]
		public static void MenuPopupWindow_op_Equality()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x120D2BC", Offset = "0x120D2BC", VA = "0x120D2BC")]
		[Preserve]
		public static void MenuPopupWindow_op_Inequality()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x120D394", Offset = "0x120D394", VA = "0x120D394")]
		[Preserve]
		public static void MenuPopupWindowMultiDisplays_op_Implicit()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x120D464", Offset = "0x120D464", VA = "0x120D464")]
		[Preserve]
		public static void MenuPopupWindowMultiDisplays_op_Equality()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x120D53C", Offset = "0x120D53C", VA = "0x120D53C")]
		[Preserve]
		public static void MenuPopupWindowMultiDisplays_op_Inequality()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x120D614", Offset = "0x120D614", VA = "0x120D614")]
		[Preserve]
		public static void Menu_PopupManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x120D6E4", Offset = "0x120D6E4", VA = "0x120D6E4")]
		[Preserve]
		public static void Menu_PopupManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x120D7BC", Offset = "0x120D7BC", VA = "0x120D7BC")]
		[Preserve]
		public static void Menu_PopupManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x120D894", Offset = "0x120D894", VA = "0x120D894")]
		[Preserve]
		public static void Menu_Popup_GreyScaleMenu_op_Implicit()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x120D964", Offset = "0x120D964", VA = "0x120D964")]
		[Preserve]
		public static void Menu_Popup_GreyScaleMenu_op_Equality()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x120DA3C", Offset = "0x120DA3C", VA = "0x120DA3C")]
		[Preserve]
		public static void Menu_Popup_GreyScaleMenu_op_Inequality()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x120DB14", Offset = "0x120DB14", VA = "0x120DB14")]
		[Preserve]
		public static void Menu_ChangeHeightPanel_op_Implicit()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x120DBE4", Offset = "0x120DBE4", VA = "0x120DBE4")]
		[Preserve]
		public static void Menu_ChangeHeightPanel_op_Equality()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x120DCBC", Offset = "0x120DCBC", VA = "0x120DCBC")]
		[Preserve]
		public static void Menu_ChangeHeightPanel_op_Inequality()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x120DD94", Offset = "0x120DD94", VA = "0x120DD94")]
		[Preserve]
		public static void Menu_ContextualInfos_op_Implicit()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x120DE64", Offset = "0x120DE64", VA = "0x120DE64")]
		[Preserve]
		public static void Menu_ContextualInfos_op_Equality()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x120DF3C", Offset = "0x120DF3C", VA = "0x120DF3C")]
		[Preserve]
		public static void Menu_ContextualInfos_op_Inequality()
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x120E014", Offset = "0x120E014", VA = "0x120E014")]
		[Preserve]
		public static void Menu_FeedbackEffect_op_Implicit()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x120E0E4", Offset = "0x120E0E4", VA = "0x120E0E4")]
		[Preserve]
		public static void Menu_FeedbackEffect_op_Equality()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x120E1BC", Offset = "0x120E1BC", VA = "0x120E1BC")]
		[Preserve]
		public static void Menu_FeedbackEffect_op_Inequality()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x120E294", Offset = "0x120E294", VA = "0x120E294")]
		[Preserve]
		public static void Menu_HapticManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x120E364", Offset = "0x120E364", VA = "0x120E364")]
		[Preserve]
		public static void Menu_HapticManager_op_Equality()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x120E43C", Offset = "0x120E43C", VA = "0x120E43C")]
		[Preserve]
		public static void Menu_HapticManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x120E514", Offset = "0x120E514", VA = "0x120E514")]
		[Preserve]
		public static void Menu_Interaction_op_Implicit()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x120E5E4", Offset = "0x120E5E4", VA = "0x120E5E4")]
		[Preserve]
		public static void Menu_Interaction_op_Equality()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x120E6BC", Offset = "0x120E6BC", VA = "0x120E6BC")]
		[Preserve]
		public static void Menu_Interaction_op_Inequality()
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x120E794", Offset = "0x120E794", VA = "0x120E794")]
		[Preserve]
		public static void Menu_Interaction_SpriteChange_op_Implicit()
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x120E864", Offset = "0x120E864", VA = "0x120E864")]
		[Preserve]
		public static void Menu_Interaction_SpriteChange_op_Equality()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x120E93C", Offset = "0x120E93C", VA = "0x120E93C")]
		[Preserve]
		public static void Menu_Interaction_SpriteChange_op_Inequality()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x120EA14", Offset = "0x120EA14", VA = "0x120EA14")]
		[Preserve]
		public static void Menu_Leaderboards_op_Implicit()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x120EAE4", Offset = "0x120EAE4", VA = "0x120EAE4")]
		[Preserve]
		public static void Menu_Leaderboards_op_Equality()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x120EBBC", Offset = "0x120EBBC", VA = "0x120EBBC")]
		[Preserve]
		public static void Menu_Leaderboards_op_Inequality()
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x120EC94", Offset = "0x120EC94", VA = "0x120EC94")]
		[Preserve]
		public static void Menu_LoadingIcone_op_Implicit()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x120ED64", Offset = "0x120ED64", VA = "0x120ED64")]
		[Preserve]
		public static void Menu_LoadingIcone_op_Equality()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x120EE3C", Offset = "0x120EE3C", VA = "0x120EE3C")]
		[Preserve]
		public static void Menu_LoadingIcone_op_Inequality()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x120EF14", Offset = "0x120EF14", VA = "0x120EF14")]
		[Preserve]
		public static void Menu_Manager_op_Implicit()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x120EFE4", Offset = "0x120EFE4", VA = "0x120EFE4")]
		[Preserve]
		public static void Menu_Manager_op_Equality()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x120F0BC", Offset = "0x120F0BC", VA = "0x120F0BC")]
		[Preserve]
		public static void Menu_Manager_op_Inequality()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x120F194", Offset = "0x120F194", VA = "0x120F194")]
		[Preserve]
		public static void Menu_MatchmakingManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x120F264", Offset = "0x120F264", VA = "0x120F264")]
		[Preserve]
		public static void Menu_MatchmakingManager_op_Equality()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x120F33C", Offset = "0x120F33C", VA = "0x120F33C")]
		[Preserve]
		public static void Menu_MatchmakingManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x120F414", Offset = "0x120F414", VA = "0x120F414")]
		[Preserve]
		public static void Menu_ChallengeList_Button_op_Implicit()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x120F4E4", Offset = "0x120F4E4", VA = "0x120F4E4")]
		[Preserve]
		public static void Menu_ChallengeList_Button_op_Equality()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x120F5BC", Offset = "0x120F5BC", VA = "0x120F5BC")]
		[Preserve]
		public static void Menu_ChallengeList_Button_op_Inequality()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x120F694", Offset = "0x120F694", VA = "0x120F694")]
		[Preserve]
		public static void Menu_ChallengeSelectionManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x120F764", Offset = "0x120F764", VA = "0x120F764")]
		[Preserve]
		public static void Menu_ChallengeSelectionManager_op_Equality()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x120F83C", Offset = "0x120F83C", VA = "0x120F83C")]
		[Preserve]
		public static void Menu_ChallengeSelectionManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x120F914", Offset = "0x120F914", VA = "0x120F914")]
		[Preserve]
		public static void Menu_Challenge_Button_op_Implicit()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x120F9E4", Offset = "0x120F9E4", VA = "0x120F9E4")]
		[Preserve]
		public static void Menu_Challenge_Button_op_Equality()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x120FABC", Offset = "0x120FABC", VA = "0x120FABC")]
		[Preserve]
		public static void Menu_Challenge_Button_op_Inequality()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x120FB94", Offset = "0x120FB94", VA = "0x120FB94")]
		[Preserve]
		public static void Menu_Challenge_Manager_op_Implicit()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x120FC64", Offset = "0x120FC64", VA = "0x120FC64")]
		[Preserve]
		public static void Menu_Challenge_Manager_op_Equality()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x120FD3C", Offset = "0x120FD3C", VA = "0x120FD3C")]
		[Preserve]
		public static void Menu_Challenge_Manager_op_Inequality()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x120FE14", Offset = "0x120FE14", VA = "0x120FE14")]
		[Preserve]
		public static void MenuMain_op_Implicit()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x120FEE4", Offset = "0x120FEE4", VA = "0x120FEE4")]
		[Preserve]
		public static void MenuMain_op_Equality()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x120FFBC", Offset = "0x120FFBC", VA = "0x120FFBC")]
		[Preserve]
		public static void MenuMain_op_Inequality()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x1210094", Offset = "0x1210094", VA = "0x1210094")]
		[Preserve]
		public static void Menu_LevelList_Button_op_Implicit()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1210164", Offset = "0x1210164", VA = "0x1210164")]
		[Preserve]
		public static void Menu_LevelList_Button_op_Equality()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x121023C", Offset = "0x121023C", VA = "0x121023C")]
		[Preserve]
		public static void Menu_LevelList_Button_op_Inequality()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x1210314", Offset = "0x1210314", VA = "0x1210314")]
		[Preserve]
		public static void Menu_LevelSelectionManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x12103E4", Offset = "0x12103E4", VA = "0x12103E4")]
		[Preserve]
		public static void Menu_LevelSelectionManager_op_Equality()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x12104BC", Offset = "0x12104BC", VA = "0x12104BC")]
		[Preserve]
		public static void Menu_LevelSelectionManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x1210594", Offset = "0x1210594", VA = "0x1210594")]
		[Preserve]
		public static void Menu_Level_Button_op_Implicit()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x1210664", Offset = "0x1210664", VA = "0x1210664")]
		[Preserve]
		public static void Menu_Level_Button_op_Equality()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x121073C", Offset = "0x121073C", VA = "0x121073C")]
		[Preserve]
		public static void Menu_Level_Button_op_Inequality()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x1210814", Offset = "0x1210814", VA = "0x1210814")]
		[Preserve]
		public static void Menu_Level_Manager_op_Implicit()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x12108E4", Offset = "0x12108E4", VA = "0x12108E4")]
		[Preserve]
		public static void Menu_Level_Manager_op_Equality()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x12109BC", Offset = "0x12109BC", VA = "0x12109BC")]
		[Preserve]
		public static void Menu_Level_Manager_op_Inequality()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x1210A94", Offset = "0x1210A94", VA = "0x1210A94")]
		[Preserve]
		public static void Menu_Level_QuitButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x1210B64", Offset = "0x1210B64", VA = "0x1210B64")]
		[Preserve]
		public static void Menu_Level_QuitButton_op_Equality()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x1210C3C", Offset = "0x1210C3C", VA = "0x1210C3C")]
		[Preserve]
		public static void Menu_Level_QuitButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x1210D14", Offset = "0x1210D14", VA = "0x1210D14")]
		[Preserve]
		public static void MenuMatchMakingStateVisualUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x1210DE4", Offset = "0x1210DE4", VA = "0x1210DE4")]
		[Preserve]
		public static void MenuMatchMakingStateVisualUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x1210EBC", Offset = "0x1210EBC", VA = "0x1210EBC")]
		[Preserve]
		public static void MenuMatchMakingStateVisualUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x1210F94", Offset = "0x1210F94", VA = "0x1210F94")]
		[Preserve]
		public static void Menu_AvatarManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x1211064", Offset = "0x1211064", VA = "0x1211064")]
		[Preserve]
		public static void Menu_AvatarManager_op_Equality()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x121113C", Offset = "0x121113C", VA = "0x121113C")]
		[Preserve]
		public static void Menu_AvatarManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x1211214", Offset = "0x1211214", VA = "0x1211214")]
		[Preserve]
		public static void Menu_AvatarRpm_op_Implicit()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x12112E4", Offset = "0x12112E4", VA = "0x12112E4")]
		[Preserve]
		public static void Menu_AvatarRpm_op_Equality()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x12113BC", Offset = "0x12113BC", VA = "0x12113BC")]
		[Preserve]
		public static void Menu_AvatarRpm_op_Inequality()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x1211494", Offset = "0x1211494", VA = "0x1211494")]
		[Preserve]
		public static void Menu_Avatar_Code_op_Implicit()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x1211564", Offset = "0x1211564", VA = "0x1211564")]
		[Preserve]
		public static void Menu_Avatar_Code_op_Equality()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x121163C", Offset = "0x121163C", VA = "0x121163C")]
		[Preserve]
		public static void Menu_Avatar_Code_op_Inequality()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x1211714", Offset = "0x1211714", VA = "0x1211714")]
		[Preserve]
		public static void Menu_CreateParty_op_Implicit()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x12117E4", Offset = "0x12117E4", VA = "0x12117E4")]
		[Preserve]
		public static void Menu_CreateParty_op_Equality()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x12118BC", Offset = "0x12118BC", VA = "0x12118BC")]
		[Preserve]
		public static void Menu_CreateParty_op_Inequality()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x1211994", Offset = "0x1211994", VA = "0x1211994")]
		[Preserve]
		public static void Menu_DefaultAvatar_op_Implicit()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x1211A64", Offset = "0x1211A64", VA = "0x1211A64")]
		[Preserve]
		public static void Menu_DefaultAvatar_op_Equality()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x1211B3C", Offset = "0x1211B3C", VA = "0x1211B3C")]
		[Preserve]
		public static void Menu_DefaultAvatar_op_Inequality()
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x1211C14", Offset = "0x1211C14", VA = "0x1211C14")]
		[Preserve]
		public static void Menu_FlowMultiplayer_op_Implicit()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x1211CE4", Offset = "0x1211CE4", VA = "0x1211CE4")]
		[Preserve]
		public static void Menu_FlowMultiplayer_op_Equality()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x1211DBC", Offset = "0x1211DBC", VA = "0x1211DBC")]
		[Preserve]
		public static void Menu_FlowMultiplayer_op_Inequality()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x1211E94", Offset = "0x1211E94", VA = "0x1211E94")]
		[Preserve]
		public static void Menu_JoinParty_op_Implicit()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x1211F64", Offset = "0x1211F64", VA = "0x1211F64")]
		[Preserve]
		public static void Menu_JoinParty_op_Equality()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x121203C", Offset = "0x121203C", VA = "0x121203C")]
		[Preserve]
		public static void Menu_JoinParty_op_Inequality()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x1212114", Offset = "0x1212114", VA = "0x1212114")]
		[Preserve]
		public static void Menu_QuickPlay_op_Implicit()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x12121E4", Offset = "0x12121E4", VA = "0x12121E4")]
		[Preserve]
		public static void Menu_QuickPlay_op_Equality()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x12122BC", Offset = "0x12122BC", VA = "0x12122BC")]
		[Preserve]
		public static void Menu_QuickPlay_op_Inequality()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x1212394", Offset = "0x1212394", VA = "0x1212394")]
		[Preserve]
		public static void Menu_RoomInitialization_op_Implicit()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x1212464", Offset = "0x1212464", VA = "0x1212464")]
		[Preserve]
		public static void Menu_RoomInitialization_op_Equality()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x121253C", Offset = "0x121253C", VA = "0x121253C")]
		[Preserve]
		public static void Menu_RoomInitialization_op_Inequality()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x1212614", Offset = "0x1212614", VA = "0x1212614")]
		[Preserve]
		public static void Menu_RoomJoined_op_Implicit()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x12126E4", Offset = "0x12126E4", VA = "0x12126E4")]
		[Preserve]
		public static void Menu_RoomJoined_op_Equality()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x12127BC", Offset = "0x12127BC", VA = "0x12127BC")]
		[Preserve]
		public static void Menu_RoomJoined_op_Inequality()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x1212894", Offset = "0x1212894", VA = "0x1212894")]
		[Preserve]
		public static void Menu_RoomManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x1212964", Offset = "0x1212964", VA = "0x1212964")]
		[Preserve]
		public static void Menu_RoomManager_op_Equality()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x1212A3C", Offset = "0x1212A3C", VA = "0x1212A3C")]
		[Preserve]
		public static void Menu_RoomManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x1212B14", Offset = "0x1212B14", VA = "0x1212B14")]
		[Preserve]
		public static void Menu_SetRoundCount_op_Implicit()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x1212BE4", Offset = "0x1212BE4", VA = "0x1212BE4")]
		[Preserve]
		public static void Menu_SetRoundCount_op_Equality()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x1212CBC", Offset = "0x1212CBC", VA = "0x1212CBC")]
		[Preserve]
		public static void Menu_SetRoundCount_op_Inequality()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x1212D94", Offset = "0x1212D94", VA = "0x1212D94")]
		[Preserve]
		public static void SO_PlayerAvatar_op_Implicit()
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x1212E64", Offset = "0x1212E64", VA = "0x1212E64")]
		[Preserve]
		public static void SO_PlayerAvatar_op_Equality()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x1212F3C", Offset = "0x1212F3C", VA = "0x1212F3C")]
		[Preserve]
		public static void SO_PlayerAvatar_op_Inequality()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x1213014", Offset = "0x1213014", VA = "0x1213014")]
		[Preserve]
		public static void MenuMicrophoneSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x12130E4", Offset = "0x12130E4", VA = "0x12130E4")]
		[Preserve]
		public static void MenuMicrophoneSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x12131BC", Offset = "0x12131BC", VA = "0x12131BC")]
		[Preserve]
		public static void MenuMicrophoneSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x1213294", Offset = "0x1213294", VA = "0x1213294")]
		[Preserve]
		public static void MenuMicrophoneSettingsPositionUpdater_op_Implicit()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x1213364", Offset = "0x1213364", VA = "0x1213364")]
		[Preserve]
		public static void MenuMicrophoneSettingsPositionUpdater_op_Equality()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x121343C", Offset = "0x121343C", VA = "0x121343C")]
		[Preserve]
		public static void MenuMicrophoneSettingsPositionUpdater_op_Inequality()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x1213514", Offset = "0x1213514", VA = "0x1213514")]
		[Preserve]
		public static void MenuModifierButton_op_Implicit()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x12135E4", Offset = "0x12135E4", VA = "0x12135E4")]
		[Preserve]
		public static void MenuModifierButton_op_Equality()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x12136BC", Offset = "0x12136BC", VA = "0x12136BC")]
		[Preserve]
		public static void MenuModifierButton_op_Inequality()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x1213794", Offset = "0x1213794", VA = "0x1213794")]
		[Preserve]
		public static void Menu_Modifiers_op_Implicit()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x1213864", Offset = "0x1213864", VA = "0x1213864")]
		[Preserve]
		public static void Menu_Modifiers_op_Equality()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x121393C", Offset = "0x121393C", VA = "0x121393C")]
		[Preserve]
		public static void Menu_Modifiers_op_Inequality()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x1213A14", Offset = "0x1213A14", VA = "0x1213A14")]
		[Preserve]
		public static void Menu_Settings_op_Implicit()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1213AE4", Offset = "0x1213AE4", VA = "0x1213AE4")]
		[Preserve]
		public static void Menu_Settings_op_Equality()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x1213BBC", Offset = "0x1213BBC", VA = "0x1213BBC")]
		[Preserve]
		public static void Menu_Settings_op_Inequality()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x1213C94", Offset = "0x1213C94", VA = "0x1213C94")]
		[Preserve]
		public static void Menu_StateManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1213D64", Offset = "0x1213D64", VA = "0x1213D64")]
		[Preserve]
		public static void Menu_StateManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x1213E3C", Offset = "0x1213E3C", VA = "0x1213E3C")]
		[Preserve]
		public static void Menu_StateManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x1213F14", Offset = "0x1213F14", VA = "0x1213F14")]
		[Preserve]
		public static void OnlineModeUpdateListener_op_Implicit()
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x1213FE4", Offset = "0x1213FE4", VA = "0x1213FE4")]
		[Preserve]
		public static void OnlineModeUpdateListener_op_Equality()
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x12140BC", Offset = "0x12140BC", VA = "0x12140BC")]
		[Preserve]
		public static void OnlineModeUpdateListener_op_Inequality()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x1214194", Offset = "0x1214194", VA = "0x1214194")]
		[Preserve]
		public static void PlayerScreen_op_Implicit()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x1214264", Offset = "0x1214264", VA = "0x1214264")]
		[Preserve]
		public static void PlayerScreen_op_Equality()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x121433C", Offset = "0x121433C", VA = "0x121433C")]
		[Preserve]
		public static void PlayerScreen_op_Inequality()
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x1214414", Offset = "0x1214414", VA = "0x1214414")]
		[Preserve]
		public static void PlayersPanel_op_Implicit()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x12144E4", Offset = "0x12144E4", VA = "0x12144E4")]
		[Preserve]
		public static void PlayersPanel_op_Equality()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x12145BC", Offset = "0x12145BC", VA = "0x12145BC")]
		[Preserve]
		public static void PlayersPanel_op_Inequality()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x1214694", Offset = "0x1214694", VA = "0x1214694")]
		[Preserve]
		public static void PlayersScreensEnabler_op_Implicit()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x1214764", Offset = "0x1214764", VA = "0x1214764")]
		[Preserve]
		public static void PlayersScreensEnabler_op_Equality()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x121483C", Offset = "0x121483C", VA = "0x121483C")]
		[Preserve]
		public static void PlayersScreensEnabler_op_Inequality()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x1214914", Offset = "0x1214914", VA = "0x1214914")]
		[Preserve]
		public static void PlayersScreensReferences_op_Implicit()
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x12149E4", Offset = "0x12149E4", VA = "0x12149E4")]
		[Preserve]
		public static void PlayersScreensReferences_op_Equality()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x1214ABC", Offset = "0x1214ABC", VA = "0x1214ABC")]
		[Preserve]
		public static void PlayersScreensReferences_op_Inequality()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x1214B94", Offset = "0x1214B94", VA = "0x1214B94")]
		[Preserve]
		public static void ScreenChallengeName_op_Implicit()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x1214C64", Offset = "0x1214C64", VA = "0x1214C64")]
		[Preserve]
		public static void ScreenChallengeName_op_Equality()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x1214D3C", Offset = "0x1214D3C", VA = "0x1214D3C")]
		[Preserve]
		public static void ScreenChallengeName_op_Inequality()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x1214E14", Offset = "0x1214E14", VA = "0x1214E14")]
		[Preserve]
		public static void ScreenMatchmakingRound_op_Implicit()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x1214EE4", Offset = "0x1214EE4", VA = "0x1214EE4")]
		[Preserve]
		public static void ScreenMatchmakingRound_op_Equality()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x1214FBC", Offset = "0x1214FBC", VA = "0x1214FBC")]
		[Preserve]
		public static void ScreenMatchmakingRound_op_Inequality()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x1215094", Offset = "0x1215094", VA = "0x1215094")]
		[Preserve]
		public static void SpriteSwap_op_Implicit()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x1215164", Offset = "0x1215164", VA = "0x1215164")]
		[Preserve]
		public static void SpriteSwap_op_Equality()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x121523C", Offset = "0x121523C", VA = "0x121523C")]
		[Preserve]
		public static void SpriteSwap_op_Inequality()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x1215314", Offset = "0x1215314", VA = "0x1215314")]
		[Preserve]
		public static void Tool_MenuAnimations_op_Implicit()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x12153E4", Offset = "0x12153E4", VA = "0x12153E4")]
		[Preserve]
		public static void Tool_MenuAnimations_op_Equality()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x12154BC", Offset = "0x12154BC", VA = "0x12154BC")]
		[Preserve]
		public static void Tool_MenuAnimations_op_Inequality()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x1215594", Offset = "0x1215594", VA = "0x1215594")]
		[Preserve]
		public static void Tool_MenuAnimationsEditor_op_Implicit()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x1215664", Offset = "0x1215664", VA = "0x1215664")]
		[Preserve]
		public static void Tool_MenuAnimationsEditor_op_Equality()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x121573C", Offset = "0x121573C", VA = "0x121573C")]
		[Preserve]
		public static void Tool_MenuAnimationsEditor_op_Inequality()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x1215814", Offset = "0x1215814", VA = "0x1215814")]
		[Preserve]
		public static void ServerAuthorityExamplePlayerController_op_Implicit()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x12158E4", Offset = "0x12158E4", VA = "0x12158E4")]
		[Preserve]
		public static void ServerAuthorityExamplePlayerController_op_Equality()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x12159BC", Offset = "0x12159BC", VA = "0x12159BC")]
		[Preserve]
		public static void ServerAuthorityExamplePlayerController_op_Inequality()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x1215A94", Offset = "0x1215A94", VA = "0x1215A94")]
		[Preserve]
		public static void SmoothSyncMirrorExamplePlayerController_op_Implicit()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x1215B64", Offset = "0x1215B64", VA = "0x1215B64")]
		[Preserve]
		public static void SmoothSyncMirrorExamplePlayerController_op_Equality()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x1215C3C", Offset = "0x1215C3C", VA = "0x1215C3C")]
		[Preserve]
		public static void SmoothSyncMirrorExamplePlayerController_op_Inequality()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x1215D14", Offset = "0x1215D14", VA = "0x1215D14")]
		[Preserve]
		public static void printBot_op_Implicit()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x1215DE4", Offset = "0x1215DE4", VA = "0x1215DE4")]
		[Preserve]
		public static void printBot_op_Equality()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x1215EBC", Offset = "0x1215EBC", VA = "0x1215EBC")]
		[Preserve]
		public static void printBot_op_Inequality()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x1215F94", Offset = "0x1215F94", VA = "0x1215F94")]
		[Preserve]
		public static void PSXSystemService_op_Implicit()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x1216064", Offset = "0x1216064", VA = "0x1216064")]
		[Preserve]
		public static void PSXSystemService_op_Equality()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x121613C", Offset = "0x121613C", VA = "0x121613C")]
		[Preserve]
		public static void PSXSystemService_op_Inequality()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x1216214", Offset = "0x1216214", VA = "0x1216214")]
		[Preserve]
		public static void AvatarsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x12162E4", Offset = "0x12162E4", VA = "0x12162E4")]
		[Preserve]
		public static void AvatarsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x12163BC", Offset = "0x12163BC", VA = "0x12163BC")]
		[Preserve]
		public static void AvatarsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x1216494", Offset = "0x1216494", VA = "0x1216494")]
		[Preserve]
		public static void AvatarColorsHolder_op_Implicit()
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x1216564", Offset = "0x1216564", VA = "0x1216564")]
		[Preserve]
		public static void AvatarColorsHolder_op_Equality()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x121663C", Offset = "0x121663C", VA = "0x121663C")]
		[Preserve]
		public static void AvatarColorsHolder_op_Inequality()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x1216714", Offset = "0x1216714", VA = "0x1216714")]
		[Preserve]
		public static void AvatarsColors_op_Implicit()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x12167E4", Offset = "0x12167E4", VA = "0x12167E4")]
		[Preserve]
		public static void AvatarsColors_op_Equality()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x12168BC", Offset = "0x12168BC", VA = "0x12168BC")]
		[Preserve]
		public static void AvatarsColors_op_Inequality()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x1216994", Offset = "0x1216994", VA = "0x1216994")]
		[Preserve]
		public static void AvatarsColorsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1216A64", Offset = "0x1216A64", VA = "0x1216A64")]
		[Preserve]
		public static void AvatarsColorsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x1216B3C", Offset = "0x1216B3C", VA = "0x1216B3C")]
		[Preserve]
		public static void AvatarsColorsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1216C14", Offset = "0x1216C14", VA = "0x1216C14")]
		[Preserve]
		public static void FollowRotation_op_Implicit()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x1216CE4", Offset = "0x1216CE4", VA = "0x1216CE4")]
		[Preserve]
		public static void FollowRotation_op_Equality()
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x1216DBC", Offset = "0x1216DBC", VA = "0x1216DBC")]
		[Preserve]
		public static void FollowRotation_op_Inequality()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1216E94", Offset = "0x1216E94", VA = "0x1216E94")]
		[Preserve]
		public static void HumanoidSettings_op_Implicit()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x1216F64", Offset = "0x1216F64", VA = "0x1216F64")]
		[Preserve]
		public static void HumanoidSettings_op_Equality()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x121703C", Offset = "0x121703C", VA = "0x121703C")]
		[Preserve]
		public static void HumanoidSettings_op_Inequality()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x1217114", Offset = "0x1217114", VA = "0x1217114")]
		[Preserve]
		public static void HumanoidSettingsHolder_op_Implicit()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x12171E4", Offset = "0x12171E4", VA = "0x12171E4")]
		[Preserve]
		public static void HumanoidSettingsHolder_op_Equality()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x12172BC", Offset = "0x12172BC", VA = "0x12172BC")]
		[Preserve]
		public static void HumanoidSettingsHolder_op_Inequality()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x1217394", Offset = "0x1217394", VA = "0x1217394")]
		[Preserve]
		public static void HumanoidSettingsManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x1217464", Offset = "0x1217464", VA = "0x1217464")]
		[Preserve]
		public static void HumanoidSettingsManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x121753C", Offset = "0x121753C", VA = "0x121753C")]
		[Preserve]
		public static void HumanoidSettingsManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x1217614", Offset = "0x1217614", VA = "0x1217614")]
		[Preserve]
		public static void DeviceRigManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x12176E4", Offset = "0x12176E4", VA = "0x12176E4")]
		[Preserve]
		public static void DeviceRigManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x12177BC", Offset = "0x12177BC", VA = "0x12177BC")]
		[Preserve]
		public static void DeviceRigManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x1217894", Offset = "0x1217894", VA = "0x1217894")]
		[Preserve]
		public static void ResetStateId_op_Implicit()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x1217964", Offset = "0x1217964", VA = "0x1217964")]
		[Preserve]
		public static void ResetStateId_op_Equality()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x1217A3C", Offset = "0x1217A3C", VA = "0x1217A3C")]
		[Preserve]
		public static void ResetStateId_op_Inequality()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x1217B14", Offset = "0x1217B14", VA = "0x1217B14")]
		[Preserve]
		public static void DissonanceLipsync_op_Implicit()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1217BE4", Offset = "0x1217BE4", VA = "0x1217BE4")]
		[Preserve]
		public static void DissonanceLipsync_op_Equality()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x1217CBC", Offset = "0x1217CBC", VA = "0x1217CBC")]
		[Preserve]
		public static void DissonanceLipsync_op_Inequality()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x1217D94", Offset = "0x1217D94", VA = "0x1217D94")]
		[Preserve]
		public static void FollowBlendshape_op_Implicit()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x1217E64", Offset = "0x1217E64", VA = "0x1217E64")]
		[Preserve]
		public static void FollowBlendshape_op_Equality()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x1217F3C", Offset = "0x1217F3C", VA = "0x1217F3C")]
		[Preserve]
		public static void FollowBlendshape_op_Inequality()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x1218014", Offset = "0x1218014", VA = "0x1218014")]
		[Preserve]
		public static void IntegrationToPartyMergeHelper_op_Implicit()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x12180E4", Offset = "0x12180E4", VA = "0x12180E4")]
		[Preserve]
		public static void IntegrationToPartyMergeHelper_op_Equality()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x12181BC", Offset = "0x12181BC", VA = "0x12181BC")]
		[Preserve]
		public static void IntegrationToPartyMergeHelper_op_Inequality()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1218294", Offset = "0x1218294", VA = "0x1218294")]
		[Preserve]
		public static void LanguageDebugTool_op_Implicit()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x1218364", Offset = "0x1218364", VA = "0x1218364")]
		[Preserve]
		public static void LanguageDebugTool_op_Equality()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x121843C", Offset = "0x121843C", VA = "0x121843C")]
		[Preserve]
		public static void LanguageDebugTool_op_Inequality()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x1218514", Offset = "0x1218514", VA = "0x1218514")]
		[Preserve]
		public static void MenuDispenser_op_Implicit()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x12185E4", Offset = "0x12185E4", VA = "0x12185E4")]
		[Preserve]
		public static void MenuDispenser_op_Equality()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x12186BC", Offset = "0x12186BC", VA = "0x12186BC")]
		[Preserve]
		public static void MenuDispenser_op_Inequality()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x1218794", Offset = "0x1218794", VA = "0x1218794")]
		[Preserve]
		public static void MenuTeleport_op_Implicit()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x1218864", Offset = "0x1218864", VA = "0x1218864")]
		[Preserve]
		public static void MenuTeleport_op_Equality()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x121893C", Offset = "0x121893C", VA = "0x121893C")]
		[Preserve]
		public static void MenuTeleport_op_Inequality()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x1218A14", Offset = "0x1218A14", VA = "0x1218A14")]
		[Preserve]
		public static void rcGameParameterDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x1218AE4", Offset = "0x1218AE4", VA = "0x1218AE4")]
		[Preserve]
		public static void rcGameParameterDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x1218BBC", Offset = "0x1218BBC", VA = "0x1218BBC")]
		[Preserve]
		public static void rcGameParameterDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x1218C94", Offset = "0x1218C94", VA = "0x1218C94")]
		[Preserve]
		public static void AvatarHandsSystem_op_Implicit()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x1218D64", Offset = "0x1218D64", VA = "0x1218D64")]
		[Preserve]
		public static void AvatarHandsSystem_op_Equality()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x1218E3C", Offset = "0x1218E3C", VA = "0x1218E3C")]
		[Preserve]
		public static void AvatarHandsSystem_op_Inequality()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x1218F14", Offset = "0x1218F14", VA = "0x1218F14")]
		[Preserve]
		public static void XRInputSystemParameter_op_Implicit()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x1218FE4", Offset = "0x1218FE4", VA = "0x1218FE4")]
		[Preserve]
		public static void XRInputSystemParameter_op_Equality()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x12190BC", Offset = "0x12190BC", VA = "0x12190BC")]
		[Preserve]
		public static void XRInputSystemParameter_op_Inequality()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x1219194", Offset = "0x1219194", VA = "0x1219194")]
		[Preserve]
		public static void XRInputSystemParameterListener_op_Implicit()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x1219264", Offset = "0x1219264", VA = "0x1219264")]
		[Preserve]
		public static void XRInputSystemParameterListener_op_Equality()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x121933C", Offset = "0x121933C", VA = "0x121933C")]
		[Preserve]
		public static void XRInputSystemParameterListener_op_Inequality()
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x1219414", Offset = "0x1219414", VA = "0x1219414")]
		[Preserve]
		public static void XRInputTracker_op_Implicit()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x12194E4", Offset = "0x12194E4", VA = "0x12194E4")]
		[Preserve]
		public static void XRInputTracker_op_Equality()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x12195BC", Offset = "0x12195BC", VA = "0x12195BC")]
		[Preserve]
		public static void XRInputTracker_op_Inequality()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x1219694", Offset = "0x1219694", VA = "0x1219694")]
		[Preserve]
		public static void InternetNOKDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x1219764", Offset = "0x1219764", VA = "0x1219764")]
		[Preserve]
		public static void InternetNOKDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x121983C", Offset = "0x121983C", VA = "0x121983C")]
		[Preserve]
		public static void InternetNOKDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x1219914", Offset = "0x1219914", VA = "0x1219914")]
		[Preserve]
		public static void PlayerAvatarCustomization_op_Implicit()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x12199E4", Offset = "0x12199E4", VA = "0x12199E4")]
		[Preserve]
		public static void PlayerAvatarCustomization_op_Equality()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x1219ABC", Offset = "0x1219ABC", VA = "0x1219ABC")]
		[Preserve]
		public static void PlayerAvatarCustomization_op_Inequality()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x1219B94", Offset = "0x1219B94", VA = "0x1219B94")]
		[Preserve]
		public static void PlayerDeviceRigSystem_op_Implicit()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x1219C64", Offset = "0x1219C64", VA = "0x1219C64")]
		[Preserve]
		public static void PlayerDeviceRigSystem_op_Equality()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x1219D3C", Offset = "0x1219D3C", VA = "0x1219D3C")]
		[Preserve]
		public static void PlayerDeviceRigSystem_op_Inequality()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x1219E14", Offset = "0x1219E14", VA = "0x1219E14")]
		[Preserve]
		public static void PlayerLookAtSystem_op_Implicit()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x1219EE4", Offset = "0x1219EE4", VA = "0x1219EE4")]
		[Preserve]
		public static void PlayerLookAtSystem_op_Equality()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x1219FBC", Offset = "0x1219FBC", VA = "0x1219FBC")]
		[Preserve]
		public static void PlayerLookAtSystem_op_Inequality()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x121A094", Offset = "0x121A094", VA = "0x121A094")]
		[Preserve]
		public static void RealTimeDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x121A164", Offset = "0x121A164", VA = "0x121A164")]
		[Preserve]
		public static void RealTimeDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x121A23C", Offset = "0x121A23C", VA = "0x121A23C")]
		[Preserve]
		public static void RealTimeDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x121A314", Offset = "0x121A314", VA = "0x121A314")]
		[Preserve]
		public static void AppSpaceWarpManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x121A3E4", Offset = "0x121A3E4", VA = "0x121A3E4")]
		[Preserve]
		public static void AppSpaceWarpManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x121A4BC", Offset = "0x121A4BC", VA = "0x121A4BC")]
		[Preserve]
		public static void AppSpaceWarpManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x121A594", Offset = "0x121A594", VA = "0x121A594")]
		[Preserve]
		public static void LocalizedFont_op_Implicit()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x121A664", Offset = "0x121A664", VA = "0x121A664")]
		[Preserve]
		public static void LocalizedFont_op_Equality()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x121A73C", Offset = "0x121A73C", VA = "0x121A73C")]
		[Preserve]
		public static void LocalizedFont_op_Inequality()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x121A814", Offset = "0x121A814", VA = "0x121A814")]
		[Preserve]
		public static void LocalizedFontTextMeshPro_op_Implicit()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x121A8E4", Offset = "0x121A8E4", VA = "0x121A8E4")]
		[Preserve]
		public static void LocalizedFontTextMeshPro_op_Equality()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x121A9BC", Offset = "0x121A9BC", VA = "0x121A9BC")]
		[Preserve]
		public static void LocalizedFontTextMeshPro_op_Inequality()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x121AA94", Offset = "0x121AA94", VA = "0x121AA94")]
		[Preserve]
		public static void LogManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x121AB64", Offset = "0x121AB64", VA = "0x121AB64")]
		[Preserve]
		public static void LogManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x121AC3C", Offset = "0x121AC3C", VA = "0x121AC3C")]
		[Preserve]
		public static void LogManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x121AD14", Offset = "0x121AD14", VA = "0x121AD14")]
		[Preserve]
		public static void ParametersValueCheck_op_Implicit()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x121ADE4", Offset = "0x121ADE4", VA = "0x121ADE4")]
		[Preserve]
		public static void ParametersValueCheck_op_Equality()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x121AEBC", Offset = "0x121AEBC", VA = "0x121AEBC")]
		[Preserve]
		public static void ParametersValueCheck_op_Inequality()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x121AF94", Offset = "0x121AF94", VA = "0x121AF94")]
		[Preserve]
		public static void CameraTeleportManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x121B064", Offset = "0x121B064", VA = "0x121B064")]
		[Preserve]
		public static void CameraTeleportManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x121B13C", Offset = "0x121B13C", VA = "0x121B13C")]
		[Preserve]
		public static void CameraTeleportManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x121B214", Offset = "0x121B214", VA = "0x121B214")]
		[Preserve]
		public static void OVRCameraTeleportManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x121B2E4", Offset = "0x121B2E4", VA = "0x121B2E4")]
		[Preserve]
		public static void OVRCameraTeleportManager_op_Equality()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x121B3BC", Offset = "0x121B3BC", VA = "0x121B3BC")]
		[Preserve]
		public static void OVRCameraTeleportManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x121B494", Offset = "0x121B494", VA = "0x121B494")]
		[Preserve]
		public static void TeleportEventListener_op_Implicit()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x121B564", Offset = "0x121B564", VA = "0x121B564")]
		[Preserve]
		public static void TeleportEventListener_op_Equality()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x121B63C", Offset = "0x121B63C", VA = "0x121B63C")]
		[Preserve]
		public static void TeleportEventListener_op_Inequality()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x121B714", Offset = "0x121B714", VA = "0x121B714")]
		[Preserve]
		public static void XRInitializationDisplay_op_Implicit()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x121B7E4", Offset = "0x121B7E4", VA = "0x121B7E4")]
		[Preserve]
		public static void XRInitializationDisplay_op_Equality()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x121B8BC", Offset = "0x121B8BC", VA = "0x121B8BC")]
		[Preserve]
		public static void XRInitializationDisplay_op_Inequality()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x121B994", Offset = "0x121B994", VA = "0x121B994")]
		[Preserve]
		public static void SteamManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x121BA64", Offset = "0x121BA64", VA = "0x121BA64")]
		[Preserve]
		public static void SteamManager_op_Equality()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x121BB3C", Offset = "0x121BB3C", VA = "0x121BB3C")]
		[Preserve]
		public static void SteamManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x121BC14", Offset = "0x121BC14", VA = "0x121BC14")]
		[Preserve]
		public static void XRInputsEvents_op_Implicit()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x121BCE4", Offset = "0x121BCE4", VA = "0x121BCE4")]
		[Preserve]
		public static void XRInputsEvents_op_Equality()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x121BDBC", Offset = "0x121BDBC", VA = "0x121BDBC")]
		[Preserve]
		public static void XRInputsEvents_op_Inequality()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x121BE94", Offset = "0x121BE94", VA = "0x121BE94")]
		[Preserve]
		public static void UnityTemplateProjects_SimpleCameraController_op_Implicit()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x121BF64", Offset = "0x121BF64", VA = "0x121BF64")]
		[Preserve]
		public static void UnityTemplateProjects_SimpleCameraController_op_Equality()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x121C03C", Offset = "0x121C03C", VA = "0x121C03C")]
		[Preserve]
		public static void UnityTemplateProjects_SimpleCameraController_op_Inequality()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x121C114", Offset = "0x121C114", VA = "0x121C114")]
		[Preserve]
		public static void RealisticEyeMovements_DestroyNotifier_op_Implicit()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x121C1E4", Offset = "0x121C1E4", VA = "0x121C1E4")]
		[Preserve]
		public static void RealisticEyeMovements_DestroyNotifier_op_Equality()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x121C2BC", Offset = "0x121C2BC", VA = "0x121C2BC")]
		[Preserve]
		public static void RealisticEyeMovements_DestroyNotifier_op_Inequality()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x121C394", Offset = "0x121C394", VA = "0x121C394")]
		[Preserve]
		public static void RealisticEyeMovements_EyeAndHeadAnimator_op_Implicit()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x121C464", Offset = "0x121C464", VA = "0x121C464")]
		[Preserve]
		public static void RealisticEyeMovements_EyeAndHeadAnimator_op_Equality()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x121C53C", Offset = "0x121C53C", VA = "0x121C53C")]
		[Preserve]
		public static void RealisticEyeMovements_EyeAndHeadAnimator_op_Inequality()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x121C614", Offset = "0x121C614", VA = "0x121C614")]
		[Preserve]
		public static void RealisticEyeMovements_LookAtDialogue_op_Implicit()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x121C6E4", Offset = "0x121C6E4", VA = "0x121C6E4")]
		[Preserve]
		public static void RealisticEyeMovements_LookAtDialogue_op_Equality()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x121C7BC", Offset = "0x121C7BC", VA = "0x121C7BC")]
		[Preserve]
		public static void RealisticEyeMovements_LookAtDialogue_op_Inequality()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x121C894", Offset = "0x121C894", VA = "0x121C894")]
		[Preserve]
		public static void RealisticEyeMovements_LookTargetController_op_Implicit()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x121C964", Offset = "0x121C964", VA = "0x121C964")]
		[Preserve]
		public static void RealisticEyeMovements_LookTargetController_op_Equality()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x121CA3C", Offset = "0x121CA3C", VA = "0x121CA3C")]
		[Preserve]
		public static void RealisticEyeMovements_LookTargetController_op_Inequality()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x121CB14", Offset = "0x121CB14", VA = "0x121CB14")]
		[Preserve]
		public static void Smooth_SmoothControllerMirror_op_Implicit()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x121CBE4", Offset = "0x121CBE4", VA = "0x121CBE4")]
		[Preserve]
		public static void Smooth_SmoothControllerMirror_op_Equality()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x121CCBC", Offset = "0x121CCBC", VA = "0x121CCBC")]
		[Preserve]
		public static void Smooth_SmoothControllerMirror_op_Inequality()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x121CD94", Offset = "0x121CD94", VA = "0x121CD94")]
		[Preserve]
		public static void Smooth_SmoothSyncMirror_op_Implicit()
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x121CE64", Offset = "0x121CE64", VA = "0x121CE64")]
		[Preserve]
		public static void Smooth_SmoothSyncMirror_op_Equality()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x121CF3C", Offset = "0x121CF3C", VA = "0x121CF3C")]
		[Preserve]
		public static void Smooth_SmoothSyncMirror_op_Inequality()
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x121D014", Offset = "0x121D014", VA = "0x121D014")]
		[Preserve]
		public static void Realcast_Toolkit_MixedReality_rcPhyHandsOculus_op_Implicit()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x121D0E4", Offset = "0x121D0E4", VA = "0x121D0E4")]
		[Preserve]
		public static void Realcast_Toolkit_MixedReality_rcPhyHandsOculus_op_Equality()
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x121D1BC", Offset = "0x121D1BC", VA = "0x121D1BC")]
		[Preserve]
		public static void Realcast_Toolkit_MixedReality_rcPhyHandsOculus_op_Inequality()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x121D294", Offset = "0x121D294", VA = "0x121D294")]
		[Preserve]
		public static void Realcast_Toolkit_MixedReality_GestureManager_op_Implicit()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x121D364", Offset = "0x121D364", VA = "0x121D364")]
		[Preserve]
		public static void Realcast_Toolkit_MixedReality_GestureManager_op_Equality()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x121D43C", Offset = "0x121D43C", VA = "0x121D43C")]
		[Preserve]
		public static void Realcast_Toolkit_MixedReality_GestureManager_op_Inequality()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x121D514", Offset = "0x121D514", VA = "0x121D514")]
		[Preserve]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Implicit()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x121D5E4", Offset = "0x121D5E4", VA = "0x121D5E4")]
		[Preserve]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Equality()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x121D6BC", Offset = "0x121D6BC", VA = "0x121D6BC")]
		[Preserve]
		public static void UnityEngine_SpatialTracking_TrackedPoseDriver_op_Inequality()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x121D794", Offset = "0x121D794", VA = "0x121D794")]
		[Preserve]
		public static void UnityEngine_UI_Button_op_Implicit()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x121D864", Offset = "0x121D864", VA = "0x121D864")]
		[Preserve]
		public static void UnityEngine_UI_Button_op_Equality()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x121D93C", Offset = "0x121D93C", VA = "0x121D93C")]
		[Preserve]
		public static void UnityEngine_UI_Button_op_Inequality()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x121DA14", Offset = "0x121DA14", VA = "0x121DA14")]
		[Preserve]
		public static void UnityEngine_UI_Dropdown_op_Implicit()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x121DAE4", Offset = "0x121DAE4", VA = "0x121DAE4")]
		[Preserve]
		public static void UnityEngine_UI_Dropdown_op_Equality()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x121DBBC", Offset = "0x121DBBC", VA = "0x121DBBC")]
		[Preserve]
		public static void UnityEngine_UI_Dropdown_op_Inequality()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x121DC94", Offset = "0x121DC94", VA = "0x121DC94")]
		[Preserve]
		public static void UnityEngine_UI_GraphicRaycaster_op_Implicit()
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x121DD64", Offset = "0x121DD64", VA = "0x121DD64")]
		[Preserve]
		public static void UnityEngine_UI_GraphicRaycaster_op_Equality()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x121DE3C", Offset = "0x121DE3C", VA = "0x121DE3C")]
		[Preserve]
		public static void UnityEngine_UI_GraphicRaycaster_op_Inequality()
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x121DF14", Offset = "0x121DF14", VA = "0x121DF14")]
		[Preserve]
		public static void UnityEngine_UI_Image_op_Implicit()
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x121DFE4", Offset = "0x121DFE4", VA = "0x121DFE4")]
		[Preserve]
		public static void UnityEngine_UI_Image_op_Equality()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x121E0BC", Offset = "0x121E0BC", VA = "0x121E0BC")]
		[Preserve]
		public static void UnityEngine_UI_Image_op_Inequality()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x121E194", Offset = "0x121E194", VA = "0x121E194")]
		[Preserve]
		public static void UnityEngine_UI_InputField_op_Implicit()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x121E264", Offset = "0x121E264", VA = "0x121E264")]
		[Preserve]
		public static void UnityEngine_UI_InputField_op_Equality()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x121E33C", Offset = "0x121E33C", VA = "0x121E33C")]
		[Preserve]
		public static void UnityEngine_UI_InputField_op_Inequality()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x121E414", Offset = "0x121E414", VA = "0x121E414")]
		[Preserve]
		public static void UnityEngine_UI_AspectRatioFitter_op_Implicit()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x121E4E4", Offset = "0x121E4E4", VA = "0x121E4E4")]
		[Preserve]
		public static void UnityEngine_UI_AspectRatioFitter_op_Equality()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x121E5BC", Offset = "0x121E5BC", VA = "0x121E5BC")]
		[Preserve]
		public static void UnityEngine_UI_AspectRatioFitter_op_Inequality()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x121E694", Offset = "0x121E694", VA = "0x121E694")]
		[Preserve]
		public static void UnityEngine_UI_CanvasScaler_op_Implicit()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x121E764", Offset = "0x121E764", VA = "0x121E764")]
		[Preserve]
		public static void UnityEngine_UI_CanvasScaler_op_Equality()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x121E83C", Offset = "0x121E83C", VA = "0x121E83C")]
		[Preserve]
		public static void UnityEngine_UI_CanvasScaler_op_Inequality()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x121E914", Offset = "0x121E914", VA = "0x121E914")]
		[Preserve]
		public static void UnityEngine_UI_ContentSizeFitter_op_Implicit()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x121E9E4", Offset = "0x121E9E4", VA = "0x121E9E4")]
		[Preserve]
		public static void UnityEngine_UI_ContentSizeFitter_op_Equality()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x121EABC", Offset = "0x121EABC", VA = "0x121EABC")]
		[Preserve]
		public static void UnityEngine_UI_ContentSizeFitter_op_Inequality()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x121EB94", Offset = "0x121EB94", VA = "0x121EB94")]
		[Preserve]
		public static void UnityEngine_UI_GridLayoutGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x121EC64", Offset = "0x121EC64", VA = "0x121EC64")]
		[Preserve]
		public static void UnityEngine_UI_GridLayoutGroup_op_Equality()
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x121ED3C", Offset = "0x121ED3C", VA = "0x121ED3C")]
		[Preserve]
		public static void UnityEngine_UI_GridLayoutGroup_op_Inequality()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x121EE14", Offset = "0x121EE14", VA = "0x121EE14")]
		[Preserve]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x121EEE4", Offset = "0x121EEE4", VA = "0x121EEE4")]
		[Preserve]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Equality()
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x121EFBC", Offset = "0x121EFBC", VA = "0x121EFBC")]
		[Preserve]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Inequality()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x121F094", Offset = "0x121F094", VA = "0x121F094")]
		[Preserve]
		public static void UnityEngine_UI_LayoutElement_op_Implicit()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x121F164", Offset = "0x121F164", VA = "0x121F164")]
		[Preserve]
		public static void UnityEngine_UI_LayoutElement_op_Equality()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x121F23C", Offset = "0x121F23C", VA = "0x121F23C")]
		[Preserve]
		public static void UnityEngine_UI_LayoutElement_op_Inequality()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x121F314", Offset = "0x121F314", VA = "0x121F314")]
		[Preserve]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x121F3E4", Offset = "0x121F3E4", VA = "0x121F3E4")]
		[Preserve]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Equality()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x121F4BC", Offset = "0x121F4BC", VA = "0x121F4BC")]
		[Preserve]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Inequality()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x121F594", Offset = "0x121F594", VA = "0x121F594")]
		[Preserve]
		public static void UnityEngine_UI_Mask_op_Implicit()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x121F664", Offset = "0x121F664", VA = "0x121F664")]
		[Preserve]
		public static void UnityEngine_UI_Mask_op_Equality()
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x121F73C", Offset = "0x121F73C", VA = "0x121F73C")]
		[Preserve]
		public static void UnityEngine_UI_Mask_op_Inequality()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x121F814", Offset = "0x121F814", VA = "0x121F814")]
		[Preserve]
		public static void UnityEngine_UI_RawImage_op_Implicit()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x121F8E4", Offset = "0x121F8E4", VA = "0x121F8E4")]
		[Preserve]
		public static void UnityEngine_UI_RawImage_op_Equality()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x121F9BC", Offset = "0x121F9BC", VA = "0x121F9BC")]
		[Preserve]
		public static void UnityEngine_UI_RawImage_op_Inequality()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x121FA94", Offset = "0x121FA94", VA = "0x121FA94")]
		[Preserve]
		public static void UnityEngine_UI_RectMask2D_op_Implicit()
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x121FB64", Offset = "0x121FB64", VA = "0x121FB64")]
		[Preserve]
		public static void UnityEngine_UI_RectMask2D_op_Equality()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x121FC3C", Offset = "0x121FC3C", VA = "0x121FC3C")]
		[Preserve]
		public static void UnityEngine_UI_RectMask2D_op_Inequality()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x121FD14", Offset = "0x121FD14", VA = "0x121FD14")]
		[Preserve]
		public static void UnityEngine_UI_Scrollbar_op_Implicit()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x121FDE4", Offset = "0x121FDE4", VA = "0x121FDE4")]
		[Preserve]
		public static void UnityEngine_UI_Scrollbar_op_Equality()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x121FEBC", Offset = "0x121FEBC", VA = "0x121FEBC")]
		[Preserve]
		public static void UnityEngine_UI_Scrollbar_op_Inequality()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x121FF94", Offset = "0x121FF94", VA = "0x121FF94")]
		[Preserve]
		public static void UnityEngine_UI_ScrollRect_op_Implicit()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1220064", Offset = "0x1220064", VA = "0x1220064")]
		[Preserve]
		public static void UnityEngine_UI_ScrollRect_op_Equality()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x122013C", Offset = "0x122013C", VA = "0x122013C")]
		[Preserve]
		public static void UnityEngine_UI_ScrollRect_op_Inequality()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x1220214", Offset = "0x1220214", VA = "0x1220214")]
		[Preserve]
		public static void UnityEngine_UI_Selectable_op_Implicit()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x12202E4", Offset = "0x12202E4", VA = "0x12202E4")]
		[Preserve]
		public static void UnityEngine_UI_Selectable_op_Equality()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x12203BC", Offset = "0x12203BC", VA = "0x12203BC")]
		[Preserve]
		public static void UnityEngine_UI_Selectable_op_Inequality()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x1220494", Offset = "0x1220494", VA = "0x1220494")]
		[Preserve]
		public static void UnityEngine_UI_Slider_op_Implicit()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x1220564", Offset = "0x1220564", VA = "0x1220564")]
		[Preserve]
		public static void UnityEngine_UI_Slider_op_Equality()
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x122063C", Offset = "0x122063C", VA = "0x122063C")]
		[Preserve]
		public static void UnityEngine_UI_Slider_op_Inequality()
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x1220714", Offset = "0x1220714", VA = "0x1220714")]
		[Preserve]
		public static void UnityEngine_UI_Text_op_Implicit()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x12207E4", Offset = "0x12207E4", VA = "0x12207E4")]
		[Preserve]
		public static void UnityEngine_UI_Text_op_Equality()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x12208BC", Offset = "0x12208BC", VA = "0x12208BC")]
		[Preserve]
		public static void UnityEngine_UI_Text_op_Inequality()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1220994", Offset = "0x1220994", VA = "0x1220994")]
		[Preserve]
		public static void UnityEngine_UI_Toggle_op_Implicit()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x1220A64", Offset = "0x1220A64", VA = "0x1220A64")]
		[Preserve]
		public static void UnityEngine_UI_Toggle_op_Equality()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1220B3C", Offset = "0x1220B3C", VA = "0x1220B3C")]
		[Preserve]
		public static void UnityEngine_UI_Toggle_op_Inequality()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1220C14", Offset = "0x1220C14", VA = "0x1220C14")]
		[Preserve]
		public static void UnityEngine_UI_ToggleGroup_op_Implicit()
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x1220CE4", Offset = "0x1220CE4", VA = "0x1220CE4")]
		[Preserve]
		public static void UnityEngine_UI_ToggleGroup_op_Equality()
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x1220DBC", Offset = "0x1220DBC", VA = "0x1220DBC")]
		[Preserve]
		public static void UnityEngine_UI_ToggleGroup_op_Inequality()
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1220E94", Offset = "0x1220E94", VA = "0x1220E94")]
		[Preserve]
		public static void UnityEngine_UI_Outline_op_Implicit()
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x1220F64", Offset = "0x1220F64", VA = "0x1220F64")]
		[Preserve]
		public static void UnityEngine_UI_Outline_op_Equality()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x122103C", Offset = "0x122103C", VA = "0x122103C")]
		[Preserve]
		public static void UnityEngine_UI_Outline_op_Inequality()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x1221114", Offset = "0x1221114", VA = "0x1221114")]
		[Preserve]
		public static void UnityEngine_UI_PositionAsUV1_op_Implicit()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x12211E4", Offset = "0x12211E4", VA = "0x12211E4")]
		[Preserve]
		public static void UnityEngine_UI_PositionAsUV1_op_Equality()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x12212BC", Offset = "0x12212BC", VA = "0x12212BC")]
		[Preserve]
		public static void UnityEngine_UI_PositionAsUV1_op_Inequality()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x1221394", Offset = "0x1221394", VA = "0x1221394")]
		[Preserve]
		public static void UnityEngine_UI_Shadow_op_Implicit()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x1221464", Offset = "0x1221464", VA = "0x1221464")]
		[Preserve]
		public static void UnityEngine_UI_Shadow_op_Equality()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x122153C", Offset = "0x122153C", VA = "0x122153C")]
		[Preserve]
		public static void UnityEngine_UI_Shadow_op_Inequality()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x1221614", Offset = "0x1221614", VA = "0x1221614")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Implicit()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x12216E4", Offset = "0x12216E4", VA = "0x12216E4")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Equality()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x12217BC", Offset = "0x12217BC", VA = "0x12217BC")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelEventHandler_op_Inequality()
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x1221894", Offset = "0x1221894", VA = "0x1221894")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Implicit()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x1221964", Offset = "0x1221964", VA = "0x1221964")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Equality()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x1221A3C", Offset = "0x1221A3C", VA = "0x1221A3C")]
		[Preserve]
		public static void UnityEngine_UIElements_PanelRaycaster_op_Inequality()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x1221B14", Offset = "0x1221B14", VA = "0x1221B14")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventSystem_op_Implicit()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x1221BE4", Offset = "0x1221BE4", VA = "0x1221BE4")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventSystem_op_Equality()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x1221CBC", Offset = "0x1221CBC", VA = "0x1221CBC")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventSystem_op_Inequality()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x1221D94", Offset = "0x1221D94", VA = "0x1221D94")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventTrigger_op_Implicit()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x1221E64", Offset = "0x1221E64", VA = "0x1221E64")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventTrigger_op_Equality()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1221F3C", Offset = "0x1221F3C", VA = "0x1221F3C")]
		[Preserve]
		public static void UnityEngine_EventSystems_EventTrigger_op_Inequality()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1222014", Offset = "0x1222014", VA = "0x1222014")]
		[Preserve]
		public static void UnityEngine_EventSystems_BaseInput_op_Implicit()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x12220E4", Offset = "0x12220E4", VA = "0x12220E4")]
		[Preserve]
		public static void UnityEngine_EventSystems_BaseInput_op_Equality()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x12221BC", Offset = "0x12221BC", VA = "0x12221BC")]
		[Preserve]
		public static void UnityEngine_EventSystems_BaseInput_op_Inequality()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x1222294", Offset = "0x1222294", VA = "0x1222294")]
		[Preserve]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Implicit()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x1222364", Offset = "0x1222364", VA = "0x1222364")]
		[Preserve]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Equality()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x122243C", Offset = "0x122243C", VA = "0x122243C")]
		[Preserve]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Inequality()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x1222514", Offset = "0x1222514", VA = "0x1222514")]
		[Preserve]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Implicit()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x12225E4", Offset = "0x12225E4", VA = "0x12225E4")]
		[Preserve]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Equality()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x12226BC", Offset = "0x12226BC", VA = "0x12226BC")]
		[Preserve]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Inequality()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x1222794", Offset = "0x1222794", VA = "0x1222794")]
		[Preserve]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Implicit()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x1222864", Offset = "0x1222864", VA = "0x1222864")]
		[Preserve]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Equality()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x122293C", Offset = "0x122293C", VA = "0x122293C")]
		[Preserve]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Inequality()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1222A14", Offset = "0x1222A14", VA = "0x1222A14")]
		[Preserve]
		public static void MenuUserIntentGameParameter_Get()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x1222A54", Offset = "0x1222A54", VA = "0x1222A54")]
		[Preserve]
		public static void Menu_StateManager_menuPanels()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x1222AA0", Offset = "0x1222AA0", VA = "0x1222AA0")]
		[Preserve]
		public static void Menu_StateManager_MenuManager()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x1222AEC", Offset = "0x1222AEC", VA = "0x1222AEC")]
		[Preserve]
		public static void Menu_StateManager_menuMain()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x1222B38", Offset = "0x1222B38", VA = "0x1222B38")]
		[Preserve]
		public static void Menu_StateManager_roomManager()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x1222B84", Offset = "0x1222B84", VA = "0x1222B84")]
		[Preserve]
		public static void Menu_StateManager_AppLaunch()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x1222BD0", Offset = "0x1222BD0", VA = "0x1222BD0")]
		[Preserve]
		public static void Menu_StateManager_Main()
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x1222C1C", Offset = "0x1222C1C", VA = "0x1222C1C")]
		[Preserve]
		public static void Menu_StateManager_Fte()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x1222C68", Offset = "0x1222C68", VA = "0x1222C68")]
		[Preserve]
		public static void Menu_StateManager_FteMultiplayer()
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x1222CB4", Offset = "0x1222CB4", VA = "0x1222CB4")]
		[Preserve]
		public static void Menu_StateManager_Level()
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x1222D00", Offset = "0x1222D00", VA = "0x1222D00")]
		[Preserve]
		public static void Menu_StateManager_LevelSelection()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x1222D4C", Offset = "0x1222D4C", VA = "0x1222D4C")]
		[Preserve]
		public static void Menu_StateManager_Challenge()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x1222D98", Offset = "0x1222D98", VA = "0x1222D98")]
		[Preserve]
		public static void Menu_StateManager_ChallengeSelection()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x1222DE4", Offset = "0x1222DE4", VA = "0x1222DE4")]
		[Preserve]
		public static void Menu_StateManager_Avatar()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x1222E30", Offset = "0x1222E30", VA = "0x1222E30")]
		[Preserve]
		public static void Menu_StateManager_Party()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x1222E7C", Offset = "0x1222E7C", VA = "0x1222E7C")]
		[Preserve]
		public static void Menu_StateManager_Quickplay()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x1222EC8", Offset = "0x1222EC8", VA = "0x1222EC8")]
		[Preserve]
		public static void Menu_StateManager_IdleQuickPlay()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x1222F14", Offset = "0x1222F14", VA = "0x1222F14")]
		[Preserve]
		public static void Menu_StateManager_Room()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x1222F60", Offset = "0x1222F60", VA = "0x1222F60")]
		[Preserve]
		public static void Menu_StateManager_RoomJoin()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x1222FAC", Offset = "0x1222FAC", VA = "0x1222FAC")]
		[Preserve]
		public static void Menu_StateManager_RoomCreate()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x1222FF8", Offset = "0x1222FF8", VA = "0x1222FF8")]
		[Preserve]
		public static void Menu_StateManager_RoomPlay()
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x1223044", Offset = "0x1223044", VA = "0x1223044")]
		[Preserve]
		public static void Menu_StateManager_enabled()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x122309C", Offset = "0x122309C", VA = "0x122309C")]
		[Preserve]
		public static void Menu_StateManager_isActiveAndEnabled()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x12230DC", Offset = "0x12230DC", VA = "0x12230DC")]
		[Preserve]
		public static void Menu_StateManager_transform()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x122311C", Offset = "0x122311C", VA = "0x122311C")]
		[Preserve]
		public static void Menu_StateManager_gameObject()
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x122315C", Offset = "0x122315C", VA = "0x122315C")]
		[Preserve]
		public static void Menu_StateManager_tag()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x12231A8", Offset = "0x12231A8", VA = "0x12231A8")]
		[Preserve]
		public static void Menu_StateManager_useGUILayout()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x1223200", Offset = "0x1223200", VA = "0x1223200")]
		[Preserve]
		public static void Menu_StateManager_name()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x122324C", Offset = "0x122324C", VA = "0x122324C")]
		[Preserve]
		public static void Menu_StateManager_hideFlags()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x12232A4", Offset = "0x12232A4", VA = "0x12232A4")]
		[Preserve]
		public static void Menu_Manager_TransitionToMultiplayerScene()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x12232D8", Offset = "0x12232D8", VA = "0x12232D8")]
		[Preserve]
		public static void BackgroundMatchmakingManager_Instance()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x12233A8", Offset = "0x12233A8", VA = "0x12233A8")]
		[Preserve]
		public static void BackgroundMatchmakingManager_BackgroundMatchmakingEnabled()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x1223400", Offset = "0x1223400", VA = "0x1223400")]
		[Preserve]
		public static void MenuUserIntentGameParameter_Clear()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x1223434", Offset = "0x1223434", VA = "0x1223434")]
		[Preserve]
		public static void MenuSettings_ShowMenu()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x1223474", Offset = "0x1223474", VA = "0x1223474")]
		[Preserve]
		public static void MenuSettings_RuntimeRoot()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x12234B4", Offset = "0x12234B4", VA = "0x12234B4")]
		[Preserve]
		public static void UnityEngine_Component_GetComponent()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x12234E8", Offset = "0x12234E8", VA = "0x12234E8")]
		[Preserve]
		public static void LeaderboardDisplayMenu_DisplayLeaderboard()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1223510", Offset = "0x1223510", VA = "0x1223510")]
		[Preserve]
		public static void UnityEngine_GameObject_GetComponent()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x1223544", Offset = "0x1223544", VA = "0x1223544")]
		[Preserve]
		public static void Menu_CreateParty_OpenUICreatePrivateRoom()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x1223578", Offset = "0x1223578", VA = "0x1223578")]
		[Preserve]
		public static void UnityEngine_GameObject_SetActive()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x12235B8", Offset = "0x12235B8", VA = "0x12235B8")]
		[Preserve]
		public static void XRInputTracker_Instance()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1223688", Offset = "0x1223688", VA = "0x1223688")]
		[Preserve]
		public static void XRInputTracker_LastSessionSystem()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x12236C8", Offset = "0x12236C8", VA = "0x12236C8")]
		[Preserve]
		public static void UnityEngine_Canvas_enabled()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1223720", Offset = "0x1223720", VA = "0x1223720")]
		[Preserve]
		public static void Menu_Manager_WaitForEndFadeOut()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1223754", Offset = "0x1223754", VA = "0x1223754")]
		[Preserve]
		public static void Menu_Manager_TransitionToSoloScene()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x1223788", Offset = "0x1223788", VA = "0x1223788")]
		[Preserve]
		public static void UnityEngine_Behaviour_enabled()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x12237E0", Offset = "0x12237E0", VA = "0x12237E0")]
		[Preserve]
		public static void Menu_Manager_SetMenuMultiplayerMode()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x1223820", Offset = "0x1223820", VA = "0x1223820")]
		[Preserve]
		public static void MenuMain_DisableMainMenu()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1223854", Offset = "0x1223854", VA = "0x1223854")]
		[Preserve]
		public static void MenuMain_EnableMainMenu()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1223888", Offset = "0x1223888", VA = "0x1223888")]
		[Preserve]
		public static void Menu_Manager_ResetPendingBackgroundMatch()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x12238BC", Offset = "0x12238BC", VA = "0x12238BC")]
		[Preserve]
		public static void MenuMicrophoneSettingsPositionUpdater_SetMicrophoneSettingsCanvasInGamePosition()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x12238F0", Offset = "0x12238F0", VA = "0x12238F0")]
		[Preserve]
		public static void MenuMicrophoneSettingsPositionUpdater_SetMicrophoneSettingsCanvasOutOfGamePosition()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1223924", Offset = "0x1223924", VA = "0x1223924")]
		[Preserve]
		public static void OnlineFeaturesSettings_IsLatestGameVersion()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1223964", Offset = "0x1223964", VA = "0x1223964")]
		[Preserve]
		public static void Menu_AvatarManager_EnableAvatarPanel()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x1223998", Offset = "0x1223998", VA = "0x1223998")]
		[Preserve]
		public static void OnlineFeaturesSettings_IsCheckingGameVersion()
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x12239D8", Offset = "0x12239D8", VA = "0x12239D8")]
		[Preserve]
		public static void UnityEngine_Component_TryGetComponent()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x1223A00", Offset = "0x1223A00", VA = "0x1223A00")]
		[Preserve]
		public static void BackgroundMatchmakingManager_TryOpenFTEPopup()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x1223A34", Offset = "0x1223A34", VA = "0x1223A34")]
		[Preserve]
		public static void Menu_Manager_PendingBackgroundMatch()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x1223A8C", Offset = "0x1223A8C", VA = "0x1223A8C")]
		[Preserve]
		public static void Menu_Manager_Instance()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x1223B5C", Offset = "0x1223B5C", VA = "0x1223B5C")]
		[Preserve]
		public static void PlayStateParameter_ClearPendingLevelSuccess()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x1223B90", Offset = "0x1223B90", VA = "0x1223B90")]
		[Preserve]
		public static void LeaderboardInputMenu_DisplayEntryInput()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x1223BC4", Offset = "0x1223BC4", VA = "0x1223BC4")]
		[Preserve]
		public static void MenuUserIntentGameParameter_Set()
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x1223BF8", Offset = "0x1223BF8", VA = "0x1223BF8")]
		[Preserve]
		public static void BootSequenceSettings_SequenceCompleted()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x1223C50", Offset = "0x1223C50", VA = "0x1223C50")]
		[Preserve]
		public static void BootSequenceSettings_BootAnimationEnded()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x1223C90", Offset = "0x1223C90", VA = "0x1223C90")]
		[Preserve]
		public static void BootSequenceSettings_AnimationRoot()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x1223CD0", Offset = "0x1223CD0", VA = "0x1223CD0")]
		[Preserve]
		public static void UnityEngine_GameObject_Destroy()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x1223DA0", Offset = "0x1223DA0", VA = "0x1223DA0")]
		[Preserve]
		public static void ArcadePopupManager_ShowHandTrackingPopup()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x1223DD4", Offset = "0x1223DD4", VA = "0x1223DD4")]
		[Preserve]
		public static void ArcadePopupManager_CloseHandTrackingPopup()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x1223E08", Offset = "0x1223E08", VA = "0x1223E08")]
		[Preserve]
		public static void FTEManager_FTECompleted()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x1223E48", Offset = "0x1223E48", VA = "0x1223E48")]
		[Preserve]
		public static void FTEManager_Instance()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x1223F18", Offset = "0x1223F18", VA = "0x1223F18")]
		[Preserve]
		public static void BootSequenceSettings_FTESettings()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x1223F58", Offset = "0x1223F58", VA = "0x1223F58")]
		[Preserve]
		public static void FTESequenceSettings_HandsScanned()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x1223F98", Offset = "0x1223F98", VA = "0x1223F98")]
		[Preserve]
		public static void FTESequenceSettings_RaiseStartFTEEvent()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x1223FCC", Offset = "0x1223FCC", VA = "0x1223FCC")]
		[Preserve]
		public static void BootSequenceSettings_ScreenFocused()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x122400C", Offset = "0x122400C", VA = "0x122400C")]
		[Preserve]
		public static void OnlineFeaturesSettings_IsLoggedIn()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x122404C", Offset = "0x122404C", VA = "0x122404C")]
		[Preserve]
		public static void BootSequenceSettings_RaiseBootSequenceEndedEvent()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x1224080", Offset = "0x1224080", VA = "0x1224080")]
		[Preserve]
		public static void TutorialLevelInfoMenu_DisplayLevelInfo()
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x12240A8", Offset = "0x12240A8", VA = "0x12240A8")]
		[Preserve]
		public static void TutorialCompletedMenu_DisplayCompletedTutorialLevel()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x12240DC", Offset = "0x12240DC", VA = "0x12240DC")]
		[Preserve]
		public static void ChallengeManagerReference_ClearPendingEndedChallenge()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x1224110", Offset = "0x1224110", VA = "0x1224110")]
		[Preserve]
		public static void PlayStateParameter_ChallengeManagerRef()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x1224150", Offset = "0x1224150", VA = "0x1224150")]
		[Preserve]
		public static void ChallengeInfoMenu_DisplayChallengeInfo()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x1224184", Offset = "0x1224184", VA = "0x1224184")]
		[Preserve]
		public static void PlayStateParameter_LastUpdatedRank()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x12241DC", Offset = "0x12241DC", VA = "0x12241DC")]
		[Preserve]
		public static void ChallengeLeaderboardDisplayMenu_SetChallengeLeaderboard()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1224210", Offset = "0x1224210", VA = "0x1224210")]
		[Preserve]
		public static void PlayStateParameter_CurrentLeaderboard()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x122425C", Offset = "0x122425C", VA = "0x122425C")]
		[Preserve]
		public static void ChallengeLeaderboardDisplayMenu_DisplayLeaderboard()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1224284", Offset = "0x1224284", VA = "0x1224284")]
		[Preserve]
		public static void ChallengeLeaderboardDisplayMenu_SetNewLocalEntry()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x12242C4", Offset = "0x12242C4", VA = "0x12242C4")]
		[Preserve]
		public static void ChallengeManagerReference_PendingEndedChallenge()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x1224304", Offset = "0x1224304", VA = "0x1224304")]
		[Preserve]
		public static void ChallengeManagerReference_IsPartyMode()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x1224344", Offset = "0x1224344", VA = "0x1224344")]
		[Preserve]
		public static void LevelInfoMenu_DisplayLevelInfo()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x122436C", Offset = "0x122436C", VA = "0x122436C")]
		[Preserve]
		public static void LevelLeaderboardDisplayMenu_DisplayLeaderboard()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x1224394", Offset = "0x1224394", VA = "0x1224394")]
		[Preserve]
		public static void LevelLeaderboardDisplayMenu_SetNewLocalEntry()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x12243D4", Offset = "0x12243D4", VA = "0x12243D4")]
		[Preserve]
		public static void LevelLeaderboardDisplayMenu_SetLevelLeaderboard()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x1224408", Offset = "0x1224408", VA = "0x1224408")]
		[Preserve]
		public static void PlayStateParameter_PendingLevelSuccess()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1224448", Offset = "0x1224448", VA = "0x1224448")]
		[Preserve]
		public static void LeaderboardOnlineDisplayMenu_DisplayLeaderboard()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x1224488", Offset = "0x1224488", VA = "0x1224488")]
		[Preserve]
		public static void XRInputTracker_CurrentInputSystem()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x12244E0", Offset = "0x12244E0", VA = "0x12244E0")]
		[Preserve]
		public static void MenuFlowsManager_GetLevelListMenu()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x1224514", Offset = "0x1224514", VA = "0x1224514")]
		[Preserve]
		public static void PlayStateParameter_CurrentLevelList()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x1224560", Offset = "0x1224560", VA = "0x1224560")]
		public AotStubs()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x2000378")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x2000379")]
		private class CameraState
		{
			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x600208E")]
			[Address(RVA = "0x122EBB0", Offset = "0x122EBB0", VA = "0x122EBB0")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x600208F")]
			[Address(RVA = "0x122F154", Offset = "0x122F154", VA = "0x122F154")]
			public void Translate(Vector3 translation, bool rotateTranslation = true)
			{
			}

			[Token(Token = "0x6002090")]
			[Address(RVA = "0x122F1E8", Offset = "0x122F1E8", VA = "0x122F1E8")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6002091")]
			[Address(RVA = "0x122F270", Offset = "0x122F270", VA = "0x122F270")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6002092")]
			[Address(RVA = "0x122F560", Offset = "0x122F560", VA = "0x122F560")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Movement Settings")]
		[Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		public float boost;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.001f, 1f)]
		[Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		public float positionLerpTime;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Rotation Settings")]
		[Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		[Range(0.001f, 1f)]
		public float rotationLerpTime;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _cameraTransform;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _teleportPosition;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private readonly float LOG_ONE_PERCENT;

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x122EB28", Offset = "0x122EB28", VA = "0x122EB28")]
		private void Start()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x122EB5C", Offset = "0x122EB5C", VA = "0x122EB5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x122EC34", Offset = "0x122EC34", VA = "0x122EC34")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x122EE64", Offset = "0x122EE64", VA = "0x122EE64")]
		private void Update()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x122F2B8", Offset = "0x122F2B8", VA = "0x122F2B8")]
		public void UpdateTeleportPose(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x122F2BC", Offset = "0x122F2BC", VA = "0x122F2BC")]
		public void UpdateTeleportPosition(Vector3 position)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x122F338", Offset = "0x122F338", VA = "0x122F338")]
		public SimpleCameraController()
		{
		}
	}
}
namespace RealisticEyeMovements
{
	[Serializable]
	[Token(Token = "0x200037A")]
	public class EyeRotationLimiter
	{
		[Serializable]
		[Token(Token = "0x200037B")]
		public class EyeRotationLimiterForExport
		{
			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string transformPath;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SerializableQuaternion defaultQ;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SerializableQuaternion lookUpQ;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SerializableQuaternion lookDownQ;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool isLookUpSet;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
			public bool isLookDownSet;

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x122F760", Offset = "0x122F760", VA = "0x122F760")]
			public EyeRotationLimiterForExport()
			{
			}
		}

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform transform;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Quaternion defaultQ;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion lookUpQ;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Quaternion lookDownQ;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float maxUpAngle;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float maxDownAngle;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool isLookUpSet;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool isLookDownSet;

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x122F568", Offset = "0x122F568", VA = "0x122F568")]
		public bool CanImport(EyeRotationLimiterForExport import, Transform startXform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x122F5D4", Offset = "0x122F5D4", VA = "0x122F5D4")]
		public float ClampAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x122F654", Offset = "0x122F654", VA = "0x122F654")]
		public EyeRotationLimiterForExport GetExport(Transform startXform)
		{
			return null;
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x122F768", Offset = "0x122F768", VA = "0x122F768")]
		public float GetEyeUp01(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x122F7A0", Offset = "0x122F7A0", VA = "0x122F7A0")]
		public float GetEyeDown01(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x122F7D4", Offset = "0x122F7D4", VA = "0x122F7D4")]
		public void Import(EyeRotationLimiterForExport import, Transform startXform)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x122FB04", Offset = "0x122FB04", VA = "0x122FB04")]
		public void RestoreDefault()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x122FB2C", Offset = "0x122FB2C", VA = "0x122FB2C")]
		public void RestoreLookDown()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x122FB54", Offset = "0x122FB54", VA = "0x122FB54")]
		public void RestoreLookUp()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x122FB7C", Offset = "0x122FB7C", VA = "0x122FB7C")]
		public void SaveDefault(Transform t)
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x122FD18", Offset = "0x122FD18", VA = "0x122FD18")]
		public void SaveLookDown()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x122FD54", Offset = "0x122FD54", VA = "0x122FD54")]
		public void SaveLookUp()
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x122F8BC", Offset = "0x122F8BC", VA = "0x122F8BC")]
		private void UpdateMaxAngles()
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x122FD90", Offset = "0x122FD90", VA = "0x122FD90")]
		public EyeRotationLimiter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037C")]
	public class EyelidRotationLimiter
	{
		[Serializable]
		[Token(Token = "0x200037D")]
		public class EyelidRotationLimiterForExport
		{
			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string transformPath;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SerializableQuaternion defaultQ;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SerializableQuaternion closedQ;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public SerializableQuaternion lookUpQ;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SerializableQuaternion lookDownQ;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float eyeMaxDownAngle;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float eyeMaxUpAngle;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public SerializableVector3 defaultPos;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public SerializableVector3 closedPos;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public SerializableVector3 lookUpPos;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public SerializableVector3 lookDownPos;

			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public bool isLookUpSet;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
			public bool isLookDownSet;

			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
			public bool isDefaultPosSet;

			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
			public bool isClosedPosSet;

			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public bool isLookUpPosSet;

			[Token(Token = "0x40014D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
			public bool isLookDownPosSet;

			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x122FFB0", Offset = "0x122FFB0", VA = "0x122FFB0")]
			public EyelidRotationLimiterForExport()
			{
			}
		}

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform transform;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Quaternion defaultQ;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Quaternion closedQ;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Quaternion lookUpQ;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Quaternion lookDownQ;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float eyeMaxDownAngle;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float eyeMaxUpAngle;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector3 defaultPos;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Vector3 closedPos;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Vector3 lookUpPos;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector3 lookDownPos;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool isLookUpSet;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool isLookDownSet;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool isDefaultPosSet;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		[SerializeField]
		private bool isClosedPosSet;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool isLookUpPosSet;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[SerializeField]
		private bool isLookDownPosSet;

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x122FD98", Offset = "0x122FD98", VA = "0x122FD98")]
		public bool CanImport(EyelidRotationLimiterForExport import, Transform startXform)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x122FE04", Offset = "0x122FE04", VA = "0x122FE04")]
		public EyelidRotationLimiterForExport GetExport(Transform startXform)
		{
			return null;
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x122FFB8", Offset = "0x122FFB8", VA = "0x122FFB8")]
		public void GetRotationAndPosition(float eyeAngle, float blink01, float eyeWidenOrSquint, bool isUpper, out Quaternion rotation, ref Vector3 position, ControlData.EyelidBoneMode eyelidBoneMode)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x12302C4", Offset = "0x12302C4", VA = "0x12302C4")]
		public void Import(EyelidRotationLimiterForExport import, Transform startXform)
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1230448", Offset = "0x1230448", VA = "0x1230448")]
		public void RestoreClosed(ControlData.EyelidBoneMode eyelidBoneMode)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x12304C4", Offset = "0x12304C4", VA = "0x12304C4")]
		public void RestoreDefault(ControlData.EyelidBoneMode eyelidBoneMode)
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1230540", Offset = "0x1230540", VA = "0x1230540")]
		public void RestoreLookDown(ControlData.EyelidBoneMode eyelidBoneMode)
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x12305BC", Offset = "0x12305BC", VA = "0x12305BC")]
		public void RestoreLookUp(ControlData.EyelidBoneMode eyelidBoneMode)
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x1230638", Offset = "0x1230638", VA = "0x1230638")]
		public void SaveClosed()
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x1230684", Offset = "0x1230684", VA = "0x1230684")]
		public void SaveDefault(Transform t)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x1230880", Offset = "0x1230880", VA = "0x1230880")]
		public void SaveLookDown(float eyeMaxDownAngle)
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x12308D4", Offset = "0x12308D4", VA = "0x12308D4")]
		public void SaveLookUp(float eyeMaxUpAngle)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x1230928", Offset = "0x1230928", VA = "0x1230928")]
		public EyelidRotationLimiter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037E")]
	public class ControlData
	{
		[Serializable]
		[Token(Token = "0x200037F")]
		public class ControlDataForExport
		{
			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EyeControl eyeControl;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public EyelidBoneMode eyelidBoneMode;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string leftEyePath;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string rightEyePath;

			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxEyeUpBoneAngle;

			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float maxEyeDownBoneAngle;

			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float maxEyeUpEyeballAngle;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float maxEyeDownEyeballAngle;

			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isEyeBallDefaultSet;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool isEyeBoneDefaultSet;

			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool isEyeBallLookUpSet;

			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
			public bool isEyeBoneLookUpSet;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool isEyeBallLookDownSet;

			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public bool isEyeBoneLookDownSet;

			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public EyeRotationLimiter.EyeRotationLimiterForExport leftBoneEyeRotationLimiter;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public EyeRotationLimiter.EyeRotationLimiterForExport rightBoneEyeRotationLimiter;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public EyeRotationLimiter.EyeRotationLimiterForExport leftEyeballEyeRotationLimiter;

			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public EyeRotationLimiter.EyeRotationLimiterForExport rightEyeballEyeRotationLimiter;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public EyelidControl eyelidControl;

			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public bool eyelidsFollowEyesVertically;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string upperEyeLidLeftPath;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public string upperEyeLidRightPath;

			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string lowerEyeLidLeftPath;

			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public string lowerEyeLidRightPath;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public bool isEyelidBonesDefaultSet;

			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
			public bool isEyelidBonesClosedSet;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
			public bool isEyelidBonesLookUpSet;

			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
			public bool isEyelidBonesLookDownSet;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public EyelidRotationLimiter.EyelidRotationLimiterForExport upperLeftLimiter;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public EyelidRotationLimiter.EyelidRotationLimiterForExport upperRightLimiter;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public EyelidRotationLimiter.EyelidRotationLimiterForExport lowerLeftLimiter;

			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public EyelidRotationLimiter.EyelidRotationLimiterForExport lowerRightLimiter;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public float eyeWidenOrSquint;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public EyelidPositionBlendshapeForExport[] blendshapesForBlinking;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public EyelidPositionBlendshapeForExport[] blendshapesForLookingUp;

			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public EyelidPositionBlendshapeForExport[] blendshapesForLookingDown;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public BlendshapesConfigForExport[] blendshapesConfigs;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public bool isEyelidBlendshapeDefaultSet;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
			public bool isEyelidBlendshapeClosedSet;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
			public bool isEyelidBlendshapeLookUpSet;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
			public bool isEyelidBlendshapeLookDownSet;

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x1231C18", Offset = "0x1231C18", VA = "0x1231C18")]
			public ControlDataForExport()
			{
			}
		}

		[Token(Token = "0x2000380")]
		public enum EyeControl
		{
			[Token(Token = "0x4001527")]
			None,
			[Token(Token = "0x4001528")]
			MecanimEyeBones,
			[Token(Token = "0x4001529")]
			SelectedObjects
		}

		[Token(Token = "0x2000381")]
		public enum EyelidControl
		{
			[Token(Token = "0x400152B")]
			None,
			[Token(Token = "0x400152C")]
			Bones,
			[Token(Token = "0x400152D")]
			Blendshapes,
			[Token(Token = "0x400152E")]
			MCS_Blendshapes
		}

		[Token(Token = "0x2000382")]
		public enum EyelidBoneMode
		{
			[Token(Token = "0x4001530")]
			RotationAndPosition,
			[Token(Token = "0x4001531")]
			Rotation,
			[Token(Token = "0x4001532")]
			Position
		}

		[Serializable]
		[Token(Token = "0x2000383")]
		public class EyelidPositionBlendshapeForExport
		{
			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string skinnedMeshRendererPath;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float defaultWeight;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float positionWeight;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int index;

			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string name;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isUsedInEalierConfig;

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x1234308", Offset = "0x1234308", VA = "0x1234308")]
			public EyelidPositionBlendshapeForExport()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000384")]
		public class EyelidPositionBlendshape
		{
			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkinnedMeshRenderer skinnedMeshRenderer;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float defaultWeight;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float positionWeight;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int index;

			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string name;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isUsedInEalierConfig;

			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x1230C28", Offset = "0x1230C28", VA = "0x1230C28")]
			public static bool CanImport(EyelidPositionBlendshapeForExport import, Transform startXform, EyelidControl eyelidControl)
			{
				return default(bool);
			}

			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x1231C20", Offset = "0x1231C20", VA = "0x1231C20")]
			public EyelidPositionBlendshapeForExport GetExport(Transform startXform)
			{
				return null;
			}

			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x1232564", Offset = "0x1232564", VA = "0x1232564")]
			public void Import(EyelidPositionBlendshapeForExport export, Transform startXform)
			{
			}

			[Token(Token = "0x60020CC")]
			[Address(RVA = "0x123255C", Offset = "0x123255C", VA = "0x123255C")]
			public EyelidPositionBlendshape()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000385")]
		public class BlendshapesConfigForExport
		{
			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string skinnedMeshRendererPath;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blendShapeCount;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] blendshapeNames;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] blendshapeWeights;

			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x1234310", Offset = "0x1234310", VA = "0x1234310")]
			public BlendshapesConfigForExport()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000386")]
		public class BlendshapesConfig
		{
			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkinnedMeshRenderer skinnedMeshRenderer;

			[Token(Token = "0x4001544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blendShapeCount;

			[Token(Token = "0x4001545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] blendshapeNames;

			[Token(Token = "0x4001546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] blendshapeWeights;

			[Token(Token = "0x60020CE")]
			[Address(RVA = "0x123270C", Offset = "0x123270C", VA = "0x123270C")]
			public static bool CanImport(BlendshapesConfigForExport import, Transform startXform)
			{
				return default(bool);
			}

			[Token(Token = "0x60020CF")]
			[Address(RVA = "0x1231D50", Offset = "0x1231D50", VA = "0x1231D50")]
			public BlendshapesConfigForExport GetExport(Transform startXform)
			{
				return null;
			}

			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x12328E4", Offset = "0x12328E4", VA = "0x12328E4")]
			public void Import(Transform startXform, BlendshapesConfigForExport import)
			{
			}

			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x12328DC", Offset = "0x12328DC", VA = "0x12328DC")]
			public BlendshapesConfig()
			{
			}
		}

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EyeControl eyeControl;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftEye;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightEye;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxEyeUpBoneAngle;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxEyeDownBoneAngle;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxEyeUpEyeballAngle;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxEyeDownEyeballAngle;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isEyeBallDefaultSet;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool isEyeBoneDefaultSet;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool isEyeBallLookUpSet;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool isEyeBoneLookUpSet;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool isEyeBallLookDownSet;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool isEyeBoneLookDownSet;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EyeRotationLimiter leftBoneEyeRotationLimiter;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EyeRotationLimiter rightBoneEyeRotationLimiter;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private EyeRotationLimiter leftEyeballEyeRotationLimiter;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private EyeRotationLimiter rightEyeballEyeRotationLimiter;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EyelidControl eyelidControl;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public EyelidBoneMode eyelidBoneMode;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool eyelidsFollowEyesVertically;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform upperEyeLidLeft;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform upperEyeLidRight;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform lowerEyeLidLeft;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform lowerEyeLidRight;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool isEyelidBonesDefaultSet;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool isEyelidBonesClosedSet;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool isEyelidBonesLookUpSet;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		public bool isEyelidBonesLookDownSet;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private EyelidRotationLimiter upperLeftLimiter;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private EyelidRotationLimiter upperRightLimiter;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private EyelidRotationLimiter lowerLeftLimiter;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private EyelidRotationLimiter lowerRightLimiter;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Tooltip("0: normal. 1: max widened, -1: max squint")]
		[Range(-1f, 1f)]
		public float eyeWidenOrSquint;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private EyelidPositionBlendshape[] blendshapesForBlinking;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private EyelidPositionBlendshape[] blendshapesForLookingUp;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private EyelidPositionBlendshape[] blendshapesForLookingDown;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private BlendshapesConfig[] blendshapesConfigs;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool isEyelidBlendshapeDefaultSet;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool isEyelidBlendshapeClosedSet;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		public bool isEyelidBlendshapeLookUpSet;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
		public bool isEyelidBlendshapeLookDownSet;

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x1230930", Offset = "0x1230930", VA = "0x1230930")]
		public bool CanImport(ControlDataForExport import, Transform startXform)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x1230DEC", Offset = "0x1230DEC", VA = "0x1230DEC")]
		public void CheckConsistency(Animator animator, EyeAndHeadAnimator eyeAndHeadAnimator)
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x12315A4", Offset = "0x12315A4", VA = "0x12315A4")]
		public float ClampLeftVertEyeAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x12315E0", Offset = "0x12315E0", VA = "0x12315E0")]
		public float ClampRightVertEyeAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x123161C", Offset = "0x123161C", VA = "0x123161C")]
		public ControlDataForExport GetExport(Transform startXform)
		{
			return null;
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x1231E80", Offset = "0x1231E80", VA = "0x1231E80")]
		public void Import(ControlDataForExport import, Transform startXform)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x12329C4", Offset = "0x12329C4", VA = "0x12329C4")]
		public void Initialize(Transform startXform)
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1232B80", Offset = "0x1232B80", VA = "0x1232B80")]
		private void LerpBlendshapeConfig(EyelidPositionBlendshape[] blendshapes, float lerpValue, bool relativeToCurrentValueIfUsedInOtherConfig = false)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1232CAC", Offset = "0x1232CAC", VA = "0x1232CAC")]
		public bool NeedsSaveDefaultBlendshapeConfig()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x1232CCC", Offset = "0x1232CCC", VA = "0x1232CCC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1232CD0", Offset = "0x1232CD0", VA = "0x1232CD0")]
		private void ResetBlendshapeConfig(EyelidPositionBlendshape[] blendshapes)
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x1232DA0", Offset = "0x1232DA0", VA = "0x1232DA0")]
		private void ResetAllBlendshapesToDefault()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x1232DC4", Offset = "0x1232DC4", VA = "0x1232DC4")]
		public void RestoreClosed()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x1232F7C", Offset = "0x1232F7C", VA = "0x1232F7C")]
		public void RestoreDefault(bool withEyelids = true)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x12330CC", Offset = "0x12330CC", VA = "0x12330CC")]
		public void RestoreLookDown()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x1233284", Offset = "0x1233284", VA = "0x1233284")]
		public void RestoreLookUp()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x123343C", Offset = "0x123343C", VA = "0x123343C")]
		private void SaveBlendshapesForEyelidPosition(ref EyelidPositionBlendshape[] blendshapesForPosition, UnityEngine.Object rootObject, string positionName)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x12337B0", Offset = "0x12337B0", VA = "0x12337B0")]
		public void SaveClosed(UnityEngine.Object rootObject)
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x1231174", Offset = "0x1231174", VA = "0x1231174")]
		public void SaveDefault(UnityEngine.Object rootObject)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x12338C4", Offset = "0x12338C4", VA = "0x12338C4")]
		public void SaveLookDown(UnityEngine.Object rootObject)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1233A74", Offset = "0x1233A74", VA = "0x1233A74")]
		public void SaveLookUp(UnityEngine.Object rootObject)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x1233C24", Offset = "0x1233C24", VA = "0x1233C24")]
		public void UpdateEyelids(float leftEyeAngle, float rightEyeAngle, float blink01, bool eyelidsFollowEyesVertically)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x12340C0", Offset = "0x12340C0", VA = "0x12340C0")]
		public ControlData()
		{
		}
	}
	[Token(Token = "0x2000387")]
	internal struct CritDampTweenQuaternion
	{
		[StructLayout(2)]
		[Token(Token = "0x2000388")]
		private struct QVUnion
		{
			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector4 v;

			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Quaternion q;
		}

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private QVUnion _rotation;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 velocity;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float omega;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly float maxSpeed;

		[Token(Token = "0x17000351")]
		public Quaternion rotation
		{
			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x123431C", Offset = "0x123431C", VA = "0x123431C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0x1234328", Offset = "0x1234328", VA = "0x1234328")]
			set
			{
			}
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x1234318", Offset = "0x1234318", VA = "0x1234318")]
		private static Vector4 q2v(Quaternion q)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x1234334", Offset = "0x1234334", VA = "0x1234334")]
		public CritDampTweenQuaternion(Quaternion rotation, float omega, float maxSpeed)
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x12343C0", Offset = "0x12343C0", VA = "0x12343C0")]
		public void Step(Quaternion target)
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x12345F4", Offset = "0x12345F4", VA = "0x12345F4")]
		public static implicit operator Quaternion(CritDampTweenQuaternion m)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x2000389")]
	public class DestroyNotifier : MonoBehaviour
	{
		[Token(Token = "0x14000018")]
		public event Action<DestroyNotifier> OnDestroyedEvent
		{
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x1234600", Offset = "0x1234600", VA = "0x1234600")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x12346B0", Offset = "0x12346B0", VA = "0x12346B0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x1234760", Offset = "0x1234760", VA = "0x1234760")]
		private void OnDestroyed()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1234780", Offset = "0x1234780", VA = "0x1234780")]
		public DestroyNotifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038A")]
	public class EyeAndHeadAnimatorForExport
	{
		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string headBonePath;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float headSpeedModifier;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float headWeight;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useMicroSaccades;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool useMacroSaccades;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool kDrawSightlinesInEditor;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControlData.ControlDataForExport controlData;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float kMinNextBlinkTime;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float kMaxNextBlinkTime;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool eyelidsFollowEyesVertically;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxEyeHorizAngle;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxEyeHorizAngleTowardsNose;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float crossEyeCorrection;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float nervousness;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float limitHeadAngle;

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x1234788", Offset = "0x1234788", VA = "0x1234788")]
		public EyeAndHeadAnimatorForExport()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class EyeAndHeadAnimator : MonoBehaviour
	{
		[Token(Token = "0x200038C")]
		private enum HeadControl
		{
			[Token(Token = "0x40015E9")]
			None,
			[Token(Token = "0x40015EA")]
			Mecanim,
			[Token(Token = "0x40015EB")]
			FinalIK,
			[Token(Token = "0x40015EC")]
			Transform
		}

		[Token(Token = "0x200038D")]
		private enum HeadTweenMethod
		{
			[Token(Token = "0x40015EE")]
			SmoothDamping,
			[Token(Token = "0x40015EF")]
			CriticalDamping
		}

		[Token(Token = "0x200038E")]
		private enum BlinkState
		{
			[Token(Token = "0x40015F1")]
			Idle,
			[Token(Token = "0x40015F2")]
			Closing,
			[Token(Token = "0x40015F3")]
			KeepingClosed,
			[Token(Token = "0x40015F4")]
			Opening
		}

		[Token(Token = "0x200038F")]
		public enum HeadSpeed
		{
			[Token(Token = "0x40015F6")]
			Slow,
			[Token(Token = "0x40015F7")]
			Fast
		}

		[Token(Token = "0x2000390")]
		public enum EyeDelay
		{
			[Token(Token = "0x40015F9")]
			Simultaneous,
			[Token(Token = "0x40015FA")]
			EyesFirst,
			[Token(Token = "0x40015FB")]
			HeadFirst
		}

		[Token(Token = "0x2000391")]
		private enum LookTarget
		{
			[Token(Token = "0x40015FD")]
			None,
			[Token(Token = "0x40015FE")]
			StraightAhead,
			[Token(Token = "0x40015FF")]
			ClearingTargetPhase1,
			[Token(Token = "0x4001600")]
			ClearingTargetPhase2,
			[Token(Token = "0x4001601")]
			GeneralDirection,
			[Token(Token = "0x4001602")]
			LookingAroundIdly,
			[Token(Token = "0x4001603")]
			SpecificThing,
			[Token(Token = "0x4001604")]
			Face
		}

		[Token(Token = "0x2000392")]
		private enum FaceLookTarget
		{
			[Token(Token = "0x4001606")]
			EyesCenter,
			[Token(Token = "0x4001607")]
			LeftEye,
			[Token(Token = "0x4001608")]
			RightEye,
			[Token(Token = "0x4001609")]
			Mouth
		}

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Quaternion oldAngleBeforeAnim;

		[Token(Token = "0x400155E")]
		private const float kMaxLimitedHorizontalHeadAngle = 80f;

		[Token(Token = "0x400155F")]
		private const float kMaxLimitedVerticalHeadAngle = 40f;

		[Token(Token = "0x4001560")]
		private const float kMaxHorizViewAngle = 100f;

		[Token(Token = "0x4001561")]
		private const float kMaxVertViewAngle = 60f;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float headSpeedModifier;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float headWeight;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Transform headBoneNonMecanimXform;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion headBoneNonMecanimFromRootQ;

		[Token(Token = "0x4001569")]
		private const float kHeadJitterFrequency = 0.2f;

		[Token(Token = "0x400156A")]
		private const float kHeadJitterAmount = 1f;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 headJitterRotationComponents;

		[Token(Token = "0x400156C")]
		private const int kHeadJitterOctave = 3;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float headJitterTime;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2[] headJitterNoiseVectors;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HeadControl headControl;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private HeadTweenMethod headTweenMethod;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool useMicroSaccades;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool useMacroSaccades;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool useHeadJitter;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		public bool kDrawSightlinesInEditor;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool areUpdatedControlledExternally;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 EyesRootXformOffsetEuler;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public ControlData controlData;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("Minimum seconds until next blink")]
		public float kMinNextBlinkTime;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Tooltip("Maximum seconds until next blink")]
		public float kMaxNextBlinkTime;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Tooltip("The blinking speed. Default is 1.")]
		[Range(0.1f, 3f)]
		public float blinkSpeed;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Tooltip("Whether the eyelids move up a bit when looking up and down when looking down.")]
		public bool eyelidsFollowEyesVertically;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool useUpperEyelids;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool useLowerEyelids;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float timeOfNextBlink;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private BlinkState blinkState;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float blinkStateTime;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float blinkDuration;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool isShortBlink;

		[Token(Token = "0x4001584")]
		private const float kBlinkCloseTimeShort = 0.036f;

		[Token(Token = "0x4001585")]
		private const float kBlinkOpenTimeShort = 0.072f;

		[Token(Token = "0x4001586")]
		private const float kBlinkCloseTimeLong = 0.072f;

		[Token(Token = "0x4001587")]
		private const float kBlinkOpenTimeLong = 0.144f;

		[Token(Token = "0x4001588")]
		private const float kBlinkKeepingClosedTime = 0.008f;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[Tooltip("Maximum horizontal eye angle (away from nose)")]
		public float maxEyeHorizAngle;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Tooltip("Maximum horizontal eye angle towards nose")]
		public float maxEyeHorizAngleTowardsNose;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[Tooltip("Cross eye correction factor")]
		[Range(0f, 5f)]
		public float crossEyeCorrection;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Tooltip("The more nervous, the more often you do micro-and macrosaccades.")]
		[Range(0f, 10f)]
		public float nervousness;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Tooltip("Limits the angle for the head movement")]
		[Range(0f, 1f)]
		public float limitHeadAngle;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform leftEyeAnchor;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform rightEyeAnchor;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float leftMaxSpeedHoriz;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float leftHorizDuration;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float leftMaxSpeedVert;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float leftVertDuration;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float leftCurrentSpeedX;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float leftCurrentSpeedY;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float rightMaxSpeedHoriz;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float rightHorizDuration;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float rightMaxSpeedVert;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float rightVertDuration;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float rightCurrentSpeedX;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float rightCurrentSpeedY;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float startLeftEyeHorizDuration;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float startLeftEyeVertDuration;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float startLeftEyeMaxSpeedHoriz;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float startLeftEyeMaxSpeedVert;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float startRightEyeHorizDuration;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float startRightEyeVertDuration;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float startRightEyeMaxSpeedHoriz;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float startRightEyeMaxSpeedVert;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float timeOfEyeMovementStart;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float timeOfHeadMovementStart;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float headMaxSpeedHoriz;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float headMaxSpeedVert;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float headHorizDuration;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float headVertDuration;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float startHeadHorizDuration;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float startHeadVertDuration;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float startHeadMaxSpeedHoriz;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float startHeadMaxSpeedVert;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float currentHeadHorizSpeed;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float currentHeadVertSpeed;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float currentHeadZSpeed;

		[Token(Token = "0x40015B3")]
		private const float kMaxHeadVelocity = 2f;

		[Token(Token = "0x40015B4")]
		private const float kHeadOmega = 3.5f;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private CritDampTweenQuaternion critDampTween;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 headEulerSpeed;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3 lastHeadEuler;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private float maxHeadHorizSpeedSinceSaccadeStart;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float maxHeadVertSpeedSinceSaccadeStart;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private bool isHeadTracking;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float headTrackingFactor;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float headLatency;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float eyeLatency;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private float ikWeight;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Animator animator;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool hasLateUpdateRunThisFrame;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool hasCheckedIdleLookTargetsThisFrame;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
		private bool placeNewIdleLookTargetsAtNextOpportunity;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Transform currentHeadTargetPOI;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Transform currentEyeTargetPOI;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Transform nextHeadTargetPOI;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Transform nextEyeTargetPOI;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Transform currentTargetLeftEyeXform;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Transform currentTargetRightEyeXform;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Transform nextTargetLeftEyeXform;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Transform nextTargetRightEyeXform;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private readonly Transform[] createdTargetXforms;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private int createdTargetXformIndex;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Transform headTargetPivotXform;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Transform headXform;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Quaternion leftEyeRootFromAnchorQ;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Quaternion rightEyeRootFromAnchorQ;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Quaternion leftAnchorFromEyeRootQ;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private Quaternion rightAnchorFromEyeRootQ;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private Vector3 currentLeftEyeLocalEuler;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private Vector3 currentRightEyeLocalEuler;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Quaternion originalLeftEyeLocalQ;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Quaternion originalRightEyeLocalQ;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Quaternion lastLeftEyeLocalRotation;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Quaternion lastRightEyeLocalQ;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Quaternion headBoneInAvatarQ;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Vector3 macroSaccadeTargetLocal;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private Vector3 microSaccadeTargetLocal;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private float timeOfEnteringClearingPhase;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private float timeOfLastMacroSaccade;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private float timeToMicroSaccade;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private float timeToMacroSaccade;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private bool isInitialized;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private int lastFrameOfUpdate1;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private int lastFrameOfUpdate2;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		private HeadSpeed headSpeed;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private LookTarget lookTarget;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		private FaceLookTarget faceLookTarget;

		[Token(Token = "0x17000352")]
		public float blink01
		{
			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x1234B38", Offset = "0x1234B38", VA = "0x1234B38")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020E4")]
			[Address(RVA = "0x1234B40", Offset = "0x1234B40", VA = "0x1234B40")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public float eyeDistance
		{
			[Token(Token = "0x60020E5")]
			[Address(RVA = "0x1234B48", Offset = "0x1234B48", VA = "0x1234B48")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020E6")]
			[Address(RVA = "0x1234B50", Offset = "0x1234B50", VA = "0x1234B50")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public float eyeDistanceScale
		{
			[Token(Token = "0x60020E7")]
			[Address(RVA = "0x1234B58", Offset = "0x1234B58", VA = "0x1234B58")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0x1234B60", Offset = "0x1234B60", VA = "0x1234B60")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public Transform eyesRootXform
		{
			[Token(Token = "0x60020E9")]
			[Address(RVA = "0x1234B68", Offset = "0x1234B68", VA = "0x1234B68")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60020EA")]
			[Address(RVA = "0x1234B70", Offset = "0x1234B70", VA = "0x1234B70")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public Transform headParentXform
		{
			[Token(Token = "0x60020EB")]
			[Address(RVA = "0x1234B80", Offset = "0x1234B80", VA = "0x1234B80")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0x1234B88", Offset = "0x1234B88", VA = "0x1234B88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action OnCannotGetTargetIntoView
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0x1234790", Offset = "0x1234790", VA = "0x1234790")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020DE")]
			[Address(RVA = "0x123482C", Offset = "0x123482C", VA = "0x123482C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action OnTargetDestroyed
		{
			[Token(Token = "0x60020DF")]
			[Address(RVA = "0x12348C8", Offset = "0x12348C8", VA = "0x12348C8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020E0")]
			[Address(RVA = "0x1234964", Offset = "0x1234964", VA = "0x1234964")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action OnUpdate2Finished
		{
			[Token(Token = "0x60020E1")]
			[Address(RVA = "0x1234A00", Offset = "0x1234A00", VA = "0x1234A00")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60020E2")]
			[Address(RVA = "0x1234A9C", Offset = "0x1234A9C", VA = "0x1234A9C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1234B98", Offset = "0x1234B98", VA = "0x1234B98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1234C14", Offset = "0x1234C14", VA = "0x1234C14")]
		public void Blink(bool isShortBlink = true)
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x1234C60", Offset = "0x1234C60", VA = "0x1234C60")]
		public bool CanGetIntoView(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x1234F64", Offset = "0x1234F64", VA = "0x1234F64")]
		public bool CanChangePointOfAttention()
		{
			return default(bool);
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x1234FA0", Offset = "0x1234FA0", VA = "0x1234FA0")]
		public bool CanImportFromFile(string filename)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x1235254", Offset = "0x1235254", VA = "0x1235254")]
		private void CheckIdleLookTargets()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1235870", Offset = "0x1235870", VA = "0x1235870")]
		private void CheckLatencies()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1235C38", Offset = "0x1235C38", VA = "0x1235C38")]
		private void CheckMacroSaccades()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x12363C4", Offset = "0x12363C4", VA = "0x12363C4")]
		private void CheckMicroSaccades()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x1236B10", Offset = "0x1236B10", VA = "0x1236B10")]
		private float ClampLeftHorizEyeAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1236BA0", Offset = "0x1236BA0", VA = "0x1236BA0")]
		private float ClampRightHorizEyeAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1236C30", Offset = "0x1236C30", VA = "0x1236C30")]
		public void ClearLookTarget()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x1236D78", Offset = "0x1236D78", VA = "0x1236D78")]
		private void DrawSightlinesInEditor()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x12280EC", Offset = "0x12280EC", VA = "0x12280EC")]
		public EyeAndHeadAnimatorForExport GetExportData()
		{
			return null;
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x1237444", Offset = "0x1237444", VA = "0x1237444")]
		public void ExportToFile(string filename)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1235ED4", Offset = "0x1235ED4", VA = "0x1235ED4")]
		private Vector3 GetCurrentEyeTargetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x123760C", Offset = "0x123760C", VA = "0x123760C")]
		private Vector3 GetCurrentHeadTargetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x123563C", Offset = "0x123563C", VA = "0x123563C")]
		public Vector3 GetHeadDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x12376E4", Offset = "0x12376E4", VA = "0x12376E4")]
		public Vector3 GetLeftEyeDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x12360A8", Offset = "0x12360A8", VA = "0x12360A8")]
		private Vector3 GetLookTargetPosForSocialTriangle(FaceLookTarget playerFaceLookTarget)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x123573C", Offset = "0x123573C", VA = "0x123573C")]
		public Vector3 GetOwnEyeCenter()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x12378F8", Offset = "0x12378F8", VA = "0x12378F8")]
		public Transform GetOwnEyeCenterXform()
		{
			return null;
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x12371D8", Offset = "0x12371D8", VA = "0x12371D8")]
		private Vector3 GetOwnLookDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1237900", Offset = "0x1237900", VA = "0x1237900")]
		public Vector3 GetRightEyeDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1237B14", Offset = "0x1237B14", VA = "0x1237B14")]
		public float GetStareAngleMeAtTarget(Vector3 target)
		{
			return default(float);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1237C50", Offset = "0x1237C50", VA = "0x1237C50")]
		public float GetStareAngleTargetAtMe(Transform targetXform)
		{
			return default(float);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1226410", Offset = "0x1226410", VA = "0x1226410")]
		public void ImportFromData(EyeAndHeadAnimatorForExport importData)
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x1237DB0", Offset = "0x1237DB0", VA = "0x1237DB0")]
		public void ImportFromBytes(byte[] arrBytes)
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1238020", Offset = "0x1238020", VA = "0x1238020")]
		public void ImportFromFile(string filename)
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x122656C", Offset = "0x122656C", VA = "0x122656C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1238294", Offset = "0x1238294", VA = "0x1238294")]
		public bool IsInView(Vector3 target)
		{
			return default(bool);
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x123883C", Offset = "0x123883C", VA = "0x123883C")]
		public bool IsLookingAtFace()
		{
			return default(bool);
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x123884C", Offset = "0x123884C", VA = "0x123884C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x1234DBC", Offset = "0x1234DBC", VA = "0x1234DBC")]
		private float LimitHorizontalHeadAngle(float headAngle)
		{
			return default(float);
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1234E90", Offset = "0x1234E90", VA = "0x1234E90")]
		private float LimitVerticalHeadAngle(float headAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x1238E54", Offset = "0x1238E54", VA = "0x1238E54")]
		public void LookAtFace(Transform eyeCenterXform, float headLatency = 0.075f)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1238EF4", Offset = "0x1238EF4", VA = "0x1238EF4")]
		public void LookAtFace(Transform leftEyeXform, Transform rightEyeXform, Transform eyesCenterXform, float headLatency = 0.075f)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x1238FA4", Offset = "0x1238FA4", VA = "0x1238FA4")]
		public void LookAtSpecificThing(Transform poi, float headLatency = 0.075f)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1239040", Offset = "0x1239040", VA = "0x1239040")]
		public void LookAtSpecificThing(Vector3 point, float headLatency = 0.075f)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1234BE0", Offset = "0x1234BE0", VA = "0x1234BE0")]
		public void LookAroundIdly()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x12390EC", Offset = "0x12390EC", VA = "0x12390EC")]
		public void LookAtAreaAround(Transform poi)
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x1236CD4", Offset = "0x1236CD4", VA = "0x1236CD4")]
		public void LookAtAreaAround(Vector3 point)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x1239190", Offset = "0x1239190", VA = "0x1239190")]
		private void OnAnimatorIK()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x12392D4", Offset = "0x12392D4", VA = "0x12392D4")]
		private void OnCreatedXformDestroyed(DestroyNotifier destroyNotifer)
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x12393DC", Offset = "0x12393DC", VA = "0x12393DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1239560", Offset = "0x1239560", VA = "0x1239560")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1235FAC", Offset = "0x1235FAC", VA = "0x1235FAC")]
		private void SetMacroSaccadeTarget(Vector3 targetGlobal, bool blinkIfEyesMoveEnough = true)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x12365B0", Offset = "0x12365B0", VA = "0x12365B0")]
		private void SetMicroSaccadeTarget(Vector3 targetGlobal, bool blinkIfEyesMoveEnough = true)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x1239564", Offset = "0x1239564", VA = "0x1239564")]
		private void Start()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x1235758", Offset = "0x1235758", VA = "0x1235758")]
		private void StartEyeMovement([Optional] Transform targetXform, bool blinkIfEyesMoveEnough = true)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x123592C", Offset = "0x123592C", VA = "0x123592C")]
		private void StartHeadMovement([Optional] Transform targetXform)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x1239568", Offset = "0x1239568", VA = "0x1239568")]
		private void Update()
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1238880", Offset = "0x1238880", VA = "0x1238880")]
		public void Update1()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1239C9C", Offset = "0x1239C9C", VA = "0x1239C9C")]
		public void Update2()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x123A8C0", Offset = "0x123A8C0", VA = "0x123A8C0")]
		private void UpdateBlinking()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x123AAB4", Offset = "0x123AAB4", VA = "0x123AAB4")]
		private void UpdateEyelids()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x1239D58", Offset = "0x1239D58", VA = "0x1239D58")]
		private void UpdateEyeMovement()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x1239608", Offset = "0x1239608", VA = "0x1239608")]
		private void UpdateHeadMovement()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x123AAF0", Offset = "0x123AAF0", VA = "0x123AAF0")]
		public EyeAndHeadAnimator()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[RequireComponent(typeof(EyeAndHeadAnimator), typeof(rcCharacterManager))]
	public class LookAtDialogue : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000394")]
		public class DialogueLookAtTargets
		{
			[Token(Token = "0x400160F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Target;

			[Token(Token = "0x4001610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Duration;

			[Token(Token = "0x600212F")]
			[Address(RVA = "0x123B250", Offset = "0x123B250", VA = "0x123B250")]
			public DialogueLookAtTargets()
			{
			}
		}

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EyeAndHeadAnimator _eyeAndHeadAnimator;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LookTargetController _lookTargetController;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private rcCharacterManager _characterManager;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<DialogueLookAtTargets> Targets;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform StartTarget;

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x123AC3C", Offset = "0x123AC3C", VA = "0x123AC3C")]
		public void LookAtTarget(int index)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x123ADB4", Offset = "0x123ADB4", VA = "0x123ADB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x123AF30", Offset = "0x123AF30", VA = "0x123AF30")]
		private void Start()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x123AFE4", Offset = "0x123AFE4", VA = "0x123AFE4")]
		private void EnableLookAt(bool lookAtEnabled, bool lookAtPlayer, float headWeight)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x123B1C4", Offset = "0x123B1C4", VA = "0x123B1C4")]
		public void DisableLookAt()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x123B200", Offset = "0x123B200", VA = "0x123B200")]
		public void LookAt()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x123B248", Offset = "0x123B248", VA = "0x123B248")]
		public LookAtDialogue()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class LookTargetController : MonoBehaviour
	{
		[Token(Token = "0x2000396")]
		public enum State
		{
			[Token(Token = "0x400163B")]
			LookingAtPlayer,
			[Token(Token = "0x400163C")]
			LookingAroundIdly,
			[Token(Token = "0x400163D")]
			LookingAtPoiDirectly,
			[Token(Token = "0x400163E")]
			LookingAwayFromPlayer
		}

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject DeviceRig;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Drag objects here for the actor to look at. If empty, actor will look in random directions.")]
		public Transform[] pointsOfInterest;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		[Tooltip("Ratio of how often to look at player vs elsewhere. 0: never, 1: always")]
		public float lookAtPlayerRatio;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("How likely the actor is to look back at the player when player stares at actor.")]
		[Range(0f, 1f)]
		public float stareBackFactor;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("If player is closer than this, notice him")]
		[Range(0f, 100f)]
		public float noticePlayerDistance;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("If player is closer than this, look away (overrides noticing him)")]
		[Range(0f, 4f)]
		public float personalSpaceDistance;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Minimum time to look at a target")]
		[Range(1f, 100f)]
		public float minLookTime;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(1f, 100f)]
		[Tooltip("Maximum time to look at a target")]
		public float maxLookTime;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[FormerlySerializedAs("playerEyeCenter")]
		[Tooltip("For 3rd person games, set this to the player's eye center transform")]
		public Transform thirdPersonPlayerEyeCenter;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Keep trying to track target even when it moves out of sight")]
		public bool keepTargetEvenWhenLost;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Events")]
		public UnityEvent OnStartLookingAtPlayer;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnStopLookingAtPlayer;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent OnPlayerEntersPersonalSpace;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnLookAwayFromShyness;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EyeAndHeadAnimator eyeAndHeadAnimator;

		[Token(Token = "0x4001620")]
		private const float minLookAtMeTimeToReact = 4f;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform targetPOI;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform mainCameraXform;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform mainCameraParentXform;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform playerEyeCenterXform;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform playerLeftEyeXform;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform playerRightEyeXform;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform usedThirdPersonPlayerEyeCenter;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject usedDeviceRig;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject createdVRParentGO;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject createdPlayerEyeCenterGO;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GameObject createdPlayerLeftEyeGO;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject createdPlayerRightEyeGO;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lastDistanceToPlayer;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float playerLookingAtMeTime;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float nextChangePOITime;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float stareBackDeadtime;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float timeOfLastNoticeCheck;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float timeOfLastLookBackCheck;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float timeOutsideOfAwarenessZone;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float timeInsidePersonalSpace;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool useNativeVRSupport;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool useVR;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		private bool isInitialized;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		private bool wasInPersonalSpaceLastFrame;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private State state;

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x123B258", Offset = "0x123B258", VA = "0x123B258")]
		public Transform GetCurrentTarget()
		{
			return null;
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x123B260", Offset = "0x123B260", VA = "0x123B260")]
		public State GetCurrentState()
		{
			return default(State);
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x123B268", Offset = "0x123B268", VA = "0x123B268")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x123B330", Offset = "0x123B330", VA = "0x123B330")]
		public void Blink()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x123B350", Offset = "0x123B350", VA = "0x123B350")]
		private void ChangeStateTo(State newState)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x123B3A8", Offset = "0x123B3A8", VA = "0x123B3A8")]
		private Vector3 ChooseNextHeadTargetPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x123B4FC", Offset = "0x123B4FC", VA = "0x123B4FC")]
		private Transform ChooseNextHeadTargetPOI()
		{
			return null;
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x123ACEC", Offset = "0x123ACEC", VA = "0x123ACEC")]
		public void ClearLookTarget()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x123B7E0", Offset = "0x123B7E0", VA = "0x123B7E0")]
		private Transform FindPlayerCamera()
		{
			return null;
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x123B95C", Offset = "0x123B95C", VA = "0x123B95C")]
		public void Initialize(bool lookAroundIdly = true)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x123CF00", Offset = "0x123CF00", VA = "0x123CF00")]
		public bool IsLookingAtPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x123CF10", Offset = "0x123CF10", VA = "0x123CF10")]
		public bool IsPlayerInView()
		{
			return default(bool);
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x123B050", Offset = "0x123B050", VA = "0x123B050")]
		public void LookAtPlayer(float duration = -1f, float headLatency = 0.075f)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x123CDC8", Offset = "0x123CDC8", VA = "0x123CDC8")]
		public void LookAroundIdly()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x123AD18", Offset = "0x123AD18", VA = "0x123AD18")]
		public void LookAtPoiDirectly(Transform poiXform, float duration = -1f, float headLatency = 0.075f)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x123CFB4", Offset = "0x123CFB4", VA = "0x123CFB4")]
		public void LookAtPoiDirectly(Vector3 poi, float duration = -1f, float headLatency = 0.075f)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x123D068", Offset = "0x123D068", VA = "0x123D068")]
		private void LookAwayFromPlayer()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x123D270", Offset = "0x123D270", VA = "0x123D270")]
		private void OnCannotGetTargetIntoView()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x123D32C", Offset = "0x123D32C", VA = "0x123D32C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x123D5A0", Offset = "0x123D5A0", VA = "0x123D5A0")]
		private void OnPlayerEyesParentDestroyed(DestroyNotifier destroyNotifier)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x123D690", Offset = "0x123D690", VA = "0x123D690")]
		private void OnTargetDestroyed()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x123D2CC", Offset = "0x123D2CC", VA = "0x123D2CC")]
		private void OnTargetLost()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x123D694", Offset = "0x123D694", VA = "0x123D694")]
		private void OnTargetOutOfSight()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x123D6A8", Offset = "0x123D6A8", VA = "0x123D6A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x123C6EC", Offset = "0x123C6EC", VA = "0x123C6EC")]
		private void UpdateNativeVREyePositions()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x123C998", Offset = "0x123C998", VA = "0x123C998")]
		private void UpdatePlayerEyeTransformReferences()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x123DA38", Offset = "0x123DA38", VA = "0x123DA38")]
		private void VeryLateUpdate()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x123DFE8", Offset = "0x123DFE8", VA = "0x123DFE8")]
		public LookTargetController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000397")]
	public struct SerializableQuaternion
	{
		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x123E030", Offset = "0x123E030", VA = "0x123E030")]
		public SerializableQuaternion(float rX, float rY, float rZ, float rW)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x123E03C", Offset = "0x123E03C", VA = "0x123E03C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x123E218", Offset = "0x123E218", VA = "0x123E218")]
		public static implicit operator Quaternion(SerializableQuaternion rValue)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x123E21C", Offset = "0x123E21C", VA = "0x123E21C")]
		public static implicit operator SerializableQuaternion(Quaternion rValue)
		{
			return default(SerializableQuaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000398")]
	public struct SerializableVector3
	{
		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x123E220", Offset = "0x123E220", VA = "0x123E220")]
		public SerializableVector3(float rX, float rY, float rZ)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x123E22C", Offset = "0x123E22C", VA = "0x123E22C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x123E2F0", Offset = "0x123E2F0", VA = "0x123E2F0")]
		public static implicit operator Vector3(SerializableVector3 rValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x123E2F4", Offset = "0x123E2F4", VA = "0x123E2F4")]
		public static implicit operator SerializableVector3(Vector3 rValue)
		{
			return default(SerializableVector3);
		}
	}
	[Token(Token = "0x2000399")]
	public class Utils
	{
		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, GameObject> dummyObjects;

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x123E2F8", Offset = "0x123E2F8", VA = "0x123E2F8")]
		public static bool CanGetTransformFromPath(Transform startXform, string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x123E400", Offset = "0x123E400", VA = "0x123E400")]
		public static float EaseSineIn(float t, float b, float c, float d)
		{
			return default(float);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x123E43C", Offset = "0x123E43C", VA = "0x123E43C")]
		public static float Fbm(Vector2 coord, int octave)
		{
			return default(float);
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x123C344", Offset = "0x123C344", VA = "0x123C344")]
		public static GameObject FindChildInHierarchy(GameObject go, string name)
		{
			return null;
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x123E4C0", Offset = "0x123E4C0", VA = "0x123E4C0")]
		public static Transform GetCommonAncestor(Transform xform1, Transform xform2)
		{
			return null;
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x123E718", Offset = "0x123E718", VA = "0x123E718")]
		public static string GetPathForTransform(Transform startXform, Transform targetXform)
		{
			return null;
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x123E3B0", Offset = "0x123E3B0", VA = "0x123E3B0")]
		public static Transform GetTransformFromPath(Transform startXform, string path)
		{
			return null;
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x123D6BC", Offset = "0x123D6BC", VA = "0x123D6BC")]
		public static bool IsEqualOrDescendant(Transform ancestor, Transform descendant)
		{
			return default(bool);
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x123E8F8", Offset = "0x123E8F8", VA = "0x123E8F8")]
		public static float NormalizedDegAngle(float degrees)
		{
			return default(float);
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x123E964", Offset = "0x123E964", VA = "0x123E964")]
		public static void PlaceDummyObject(string name, Vector3 pos, float scale = 0.1f, [Optional] Quaternion? rotation)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x123ECF0", Offset = "0x123ECF0", VA = "0x123ECF0")]
		public Utils()
		{
		}
	}
}
namespace Smooth
{
	[Token(Token = "0x200039A")]
	public class MsgType
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static short SmoothSyncFromServerToNonOwners;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static short SmoothSyncFromOwnerToServer;

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x123ED90", Offset = "0x123ED90", VA = "0x123ED90")]
		public MsgType()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public enum SyncMode
	{
		[Token(Token = "0x400164A")]
		XYZ,
		[Token(Token = "0x400164B")]
		XY,
		[Token(Token = "0x400164C")]
		XZ,
		[Token(Token = "0x400164D")]
		YZ,
		[Token(Token = "0x400164E")]
		X,
		[Token(Token = "0x400164F")]
		Y,
		[Token(Token = "0x4001650")]
		Z,
		[Token(Token = "0x4001651")]
		NONE
	}
	[Token(Token = "0x200039C")]
	public class SmoothControllerMirror : MonoBehaviour
	{
		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isHandlerRegistered;

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x123EDE8", Offset = "0x123EDE8", VA = "0x123EDE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x123EF50", Offset = "0x123EF50", VA = "0x123EF50")]
		public static void RegisterHandlers()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x123F0A0", Offset = "0x123F0A0", VA = "0x123F0A0")]
		public SmoothControllerMirror()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class SmoothSyncMirror : NetworkBehaviour
	{
		[Token(Token = "0x200039E")]
		public enum ExtrapolationMode
		{
			[Token(Token = "0x40016BD")]
			None,
			[Token(Token = "0x40016BE")]
			Limited,
			[Token(Token = "0x40016BF")]
			Unlimited
		}

		[Token(Token = "0x200039F")]
		public enum TransformSource
		{
			[Token(Token = "0x40016C1")]
			Owner,
			[Token(Token = "0x40016C2")]
			Server
		}

		[Token(Token = "0x20003A0")]
		public enum WhenToUpdateTransform
		{
			[Token(Token = "0x40016C4")]
			Update,
			[Token(Token = "0x40016C5")]
			FixedUpdate
		}

		[Token(Token = "0x20003A1")]
		public delegate bool validateStateDelegate(StateMirror receivedState, StateMirror latestVerifiedState);

		[Token(Token = "0x20003A2")]
		private enum RestState
		{
			[Token(Token = "0x40016C7")]
			AT_REST,
			[Token(Token = "0x40016C8")]
			JUST_STARTED_MOVING,
			[Token(Token = "0x40016C9")]
			MOVING
		}

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float interpolationBackTime;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ExtrapolationMode extrapolationMode;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool useExtrapolationTimeLimit;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float extrapolationTimeLimit;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool useExtrapolationDistanceLimit;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float extrapolationDistanceLimit;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float sendPositionThreshold;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float sendRotationThreshold;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float sendScaleThreshold;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float sendVelocityThreshold;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float sendAngularVelocityThreshold;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float receivedPositionThreshold;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float receivedRotationThreshold;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float snapPositionThreshold;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float snapRotationThreshold;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float snapScaleThreshold;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Range(0f, 1f)]
		public float positionLerpSpeed;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(0f, 1f)]
		public float rotationLerpSpeed;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Range(0f, 1f)]
		public float scaleLerpSpeed;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Range(0f, 5f)]
		public float timeCorrectionSpeed;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float snapTimeThreshold;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SyncMode syncPosition;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public SyncMode syncRotation;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public SyncMode syncScale;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SyncMode syncVelocity;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public SyncMode syncAngularVelocity;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isPositionCompressed;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool isRotationCompressed;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		public bool isScaleCompressed;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
		public bool isVelocityCompressed;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool isAngularVelocityCompressed;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool automaticallyResetTime;

		[Token(Token = "0x4001674")]
		private const int maxTimePower = 12;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly float maxLocalTime;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private readonly float minTimePrecision;

		[NonSerialized]
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int localTimeResetIndicator;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool isSmoothingAuthorityChanges;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public TransformSource transformSource;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public WhenToUpdateTransform whenToUpdateTransform;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float sendRate;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int networkChannel;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject childObjectToSync;

		[NonSerialized]
		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool isSyncingChild;

		[NonSerialized]
		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public validateStateDelegate validateStateMethod;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private StateMirror latestValidatedState;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool setVelocityInsteadOfPositionOnNonOwners;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float maxPositionDifferenceForVelocitySyncing;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool useLocalTransformOnly;

		[NonSerialized]
		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public StateMirror[] stateBuffer;

		[NonSerialized]
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int stateCount;

		[NonSerialized]
		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Rigidbody rb;

		[NonSerialized]
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool hasRigidbody;

		[NonSerialized]
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Rigidbody2D rb2D;

		[NonSerialized]
		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool hasRigidbody2D;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool dontEasePosition;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		private bool dontEaseScale;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		private bool dontEaseRotation;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float firstReceivedMessageZeroTime;

		[NonSerialized]
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float lastTimeStateWasSent;

		[NonSerialized]
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Vector3 lastPositionWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Quaternion lastRotationWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Vector3 lastScaleWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public Vector3 lastVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Vector3 lastAngularVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public NetworkIdentity netID;

		[NonSerialized]
		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GameObject realObjectToSync;

		[NonSerialized]
		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public int syncIndex;

		[NonSerialized]
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public SmoothSyncMirror[] childObjectSmoothSyncs;

		[NonSerialized]
		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public bool forceStateSend;

		[NonSerialized]
		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		public bool sendAtPositionalRestMessage;

		[NonSerialized]
		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		public bool sendAtRotationalRestMessage;

		[NonSerialized]
		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AB")]
		public bool sendPosition;

		[NonSerialized]
		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public bool sendRotation;

		[NonSerialized]
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
		public bool sendScale;

		[NonSerialized]
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AE")]
		public bool sendVelocity;

		[NonSerialized]
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AF")]
		public bool sendAngularVelocity;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private StateMirror targetTempState;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private NetworkStateMirror sendingTempState;

		[NonSerialized]
		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Vector3 latestReceivedVelocity;

		[NonSerialized]
		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public Vector3 latestReceivedAngularVelocity;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float timeSpentExtrapolating;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private bool extrapolatedLastFrame;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 positionLastFrame;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private bool changedPositionLastFrame;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Quaternion rotationLastFrame;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool changedRotationLastFrame;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private int atRestThresholdCount;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private int samePositionCount;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private int sameRotationCount;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private RestState restStatePosition;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private RestState restStateRotation;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private bool hadAuthorityLastFrame;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private StateMirror latestEndStateUsed;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 latestTeleportedFromPosition;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Quaternion latestTeleportedFromRotation;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private bool hasCachedNetID;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private NetworkIdentity cachedNetIdentity;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private bool triedToExtrapolateTooFar;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private float _ownerTime;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float lastTimeOwnerTimeWasSet;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float latestAuthorityChangeZeroTime;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private int previousReceivedOwnerInt;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public int ownerChangeIndicator;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public int receivedStatesCounter;

		[Token(Token = "0x17000357")]
		public float localTime
		{
			[Token(Token = "0x6002165")]
			[Address(RVA = "0x123F0A8", Offset = "0x123F0A8", VA = "0x123F0A8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002166")]
			[Address(RVA = "0x123F0B0", Offset = "0x123F0B0", VA = "0x123F0B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public new NetworkIdentity netIdentity
		{
			[Token(Token = "0x6002168")]
			[Address(RVA = "0x123F0C0", Offset = "0x123F0C0", VA = "0x123F0C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public bool hasAuthorityOrUnownedOnServer
		{
			[Token(Token = "0x6002169")]
			[Address(RVA = "0x123F130", Offset = "0x123F130", VA = "0x123F130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035A")]
		public bool hasControl
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0x123F200", Offset = "0x123F200", VA = "0x123F200")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035B")]
		public bool isSyncingXPosition
		{
			[Token(Token = "0x6002198")]
			[Address(RVA = "0x124311C", Offset = "0x124311C", VA = "0x124311C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035C")]
		public bool isSyncingYPosition
		{
			[Token(Token = "0x6002199")]
			[Address(RVA = "0x1243144", Offset = "0x1243144", VA = "0x1243144")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035D")]
		public bool isSyncingZPosition
		{
			[Token(Token = "0x600219A")]
			[Address(RVA = "0x1243170", Offset = "0x1243170", VA = "0x1243170")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035E")]
		public bool isSyncingXRotation
		{
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x12433C4", Offset = "0x12433C4", VA = "0x12433C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035F")]
		public bool isSyncingYRotation
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0x12433EC", Offset = "0x12433EC", VA = "0x12433EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000360")]
		public bool isSyncingZRotation
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0x1243418", Offset = "0x1243418", VA = "0x1243418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000361")]
		public bool isSyncingXScale
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0x12436F0", Offset = "0x12436F0", VA = "0x12436F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000362")]
		public bool isSyncingYScale
		{
			[Token(Token = "0x600219F")]
			[Address(RVA = "0x1243718", Offset = "0x1243718", VA = "0x1243718")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000363")]
		public bool isSyncingZScale
		{
			[Token(Token = "0x60021A0")]
			[Address(RVA = "0x1243744", Offset = "0x1243744", VA = "0x1243744")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000364")]
		public bool isSyncingXVelocity
		{
			[Token(Token = "0x60021A1")]
			[Address(RVA = "0x124488C", Offset = "0x124488C", VA = "0x124488C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000365")]
		public bool isSyncingYVelocity
		{
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0x12448B4", Offset = "0x12448B4", VA = "0x12448B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000366")]
		public bool isSyncingZVelocity
		{
			[Token(Token = "0x60021A3")]
			[Address(RVA = "0x12448E0", Offset = "0x12448E0", VA = "0x12448E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000367")]
		public bool isSyncingXAngularVelocity
		{
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0x1244910", Offset = "0x1244910", VA = "0x1244910")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000368")]
		public bool isSyncingYAngularVelocity
		{
			[Token(Token = "0x60021A5")]
			[Address(RVA = "0x1244938", Offset = "0x1244938", VA = "0x1244938")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000369")]
		public bool isSyncingZAngularVelocity
		{
			[Token(Token = "0x60021A6")]
			[Address(RVA = "0x1244964", Offset = "0x1244964", VA = "0x1244964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036A")]
		public float approximateNetworkTimeOnOwner
		{
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x1241754", Offset = "0x1241754", VA = "0x1241754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x124176C", Offset = "0x124176C", VA = "0x124176C")]
			set
			{
			}
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x123F0B8", Offset = "0x123F0B8", VA = "0x123F0B8")]
		public static bool validateState(StateMirror latestReceivedState, StateMirror latestValidatedState)
		{
			return default(bool);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x123F2BC", Offset = "0x123F2BC", VA = "0x123F2BC")]
		public void Awake()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x123F918", Offset = "0x123F918", VA = "0x123F918")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x123F44C", Offset = "0x123F44C", VA = "0x123F44C")]
		public void SetObjectToSync(GameObject childObjectToSync)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x123F9BC", Offset = "0x123F9BC", VA = "0x123F9BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x123FB78", Offset = "0x123FB78", VA = "0x123FB78")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x123F9F0", Offset = "0x123F9F0", VA = "0x123F9F0")]
		private void SmoothSyncUpdate()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x12410BC", Offset = "0x12410BC", VA = "0x12410BC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x1241320", Offset = "0x1241320", VA = "0x1241320")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x12413C4", Offset = "0x12413C4", VA = "0x12413C4")]
		public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x12413D4", Offset = "0x12413D4", VA = "0x12413D4", Slot = "13")]
		public override void OnStartAuthority()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x124044C", Offset = "0x124044C", VA = "0x124044C")]
		public void ResetLocalTime()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x12416CC", Offset = "0x12416CC", VA = "0x12416CC")]
		public void OnRemoteTimeReset()
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x123FBD8", Offset = "0x123FBD8", VA = "0x123FBD8")]
		private void sendState()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x123FA5C", Offset = "0x123FA5C", VA = "0x123FA5C")]
		private void authorityChangeUpdate()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x12405EC", Offset = "0x12405EC", VA = "0x12405EC")]
		private void applyInterpolationOrExtrapolation()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x12422E8", Offset = "0x12422E8", VA = "0x12422E8")]
		private void interpolate(float interpolationTime)
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x12427BC", Offset = "0x12427BC", VA = "0x12427BC")]
		private bool extrapolate(float interpolationTime)
		{
			return default(bool);
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x12437C4", Offset = "0x12437C4", VA = "0x12437C4")]
		private void shouldTeleport(StateMirror start, ref StateMirror end, float interpolationTime, ref float t)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x1240390", Offset = "0x1240390", VA = "0x1240390")]
		public Vector3 getPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x12403E8", Offset = "0x12403E8", VA = "0x12403E8")]
		public Quaternion getRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x12430F4", Offset = "0x12430F4", VA = "0x12430F4")]
		public Vector3 getScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x12431A0", Offset = "0x12431A0", VA = "0x12431A0")]
		public void setPosition(Vector3 position, bool isTeleporting)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x1243448", Offset = "0x1243448", VA = "0x1243448")]
		public void setRotation(Quaternion rotation, bool isTeleporting)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x1243774", Offset = "0x1243774", VA = "0x1243774")]
		public void setScale(Vector3 scale)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x1240440", Offset = "0x1240440", VA = "0x1240440")]
		private void resetFlags()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x1243AA0", Offset = "0x1243AA0", VA = "0x1243AA0")]
		public void addState(StateMirror state)
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x1243A88", Offset = "0x1243A88", VA = "0x1243A88")]
		public void stopEasing()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x124130C", Offset = "0x124130C", VA = "0x124130C")]
		public void clearBuffer()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x1243C14", Offset = "0x1243C14", VA = "0x1243C14")]
		public void teleport()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x12413F0", Offset = "0x12413F0", VA = "0x12413F0")]
		public void teleportOwnedObjectFromOwner()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x1243F90", Offset = "0x1243F90", VA = "0x1243F90")]
		public void teleportAnyObjectFromServer(Vector3 newPosition, Quaternion newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x12441A8", Offset = "0x12441A8", VA = "0x12441A8")]
		[ClientRpc]
		public void RpcNonServerOwnedTeleportFromServer(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1243DD4", Offset = "0x1243DD4", VA = "0x1243DD4")]
		[Command]
		public void CmdTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x1243C18", Offset = "0x1243C18", VA = "0x1243C18")]
		[ClientRpc]
		public void RpcTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x124434C", Offset = "0x124434C", VA = "0x124434C")]
		private void addTeleportState(StateMirror teleportState)
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x12416C0", Offset = "0x12416C0", VA = "0x12416C0")]
		public void forceStateSendNextFixedUpdate()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x12445D0", Offset = "0x12445D0", VA = "0x12445D0")]
		public void AssignAuthorityCallback(NetworkConnection conn, NetworkIdentity theNetID, bool authorityState)
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x12447D0", Offset = "0x12447D0", VA = "0x12447D0", Slot = "8")]
		public override void OnStartServer()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1244888", Offset = "0x1244888", VA = "0x1244888", Slot = "10")]
		public override void OnStartClient()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x12411E4", Offset = "0x12411E4", VA = "0x12411E4")]
		public void registerClientHandlers()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x1241798", Offset = "0x1241798", VA = "0x1241798")]
		public bool shouldSendPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x12418B8", Offset = "0x12418B8", VA = "0x12418B8")]
		public bool shouldSendRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x12419B0", Offset = "0x12419B0", VA = "0x12419B0")]
		public bool shouldSendScale()
		{
			return default(bool);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x1241AD0", Offset = "0x1241AD0", VA = "0x1241AD0")]
		public bool shouldSendVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x1241CEC", Offset = "0x1241CEC", VA = "0x1241CEC")]
		public bool shouldSendAngularVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x1241ECC", Offset = "0x1241ECC", VA = "0x1241ECC")]
		[Server]
		private void SendStateToNonOwners(NetworkStateMirror state)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1244994", Offset = "0x1244994", VA = "0x1244994")]
		public static void HandleSync(NetworkConnection conn, NetworkStateMirror networkState)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1244B28", Offset = "0x1244B28", VA = "0x1244B28")]
		public void checkIfOwnerHasChanged(StateMirror newState)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x124177C", Offset = "0x124177C", VA = "0x124177C")]
		public float GetNetworkSendInterval()
		{
			return default(float);
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x12404E8", Offset = "0x12404E8", VA = "0x12404E8")]
		private void adjustOwnerTime()
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x1244C44", Offset = "0x1244C44", VA = "0x1244C44")]
		public SmoothSyncMirror()
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x1244F00", Offset = "0x1244F00", VA = "0x1244F00")]
		private void MirrorProcessed()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x1244F04", Offset = "0x1244F04", VA = "0x1244F04")]
		protected void UserCode_RpcNonServerOwnedTeleportFromServer(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x1244FDC", Offset = "0x1244FDC", VA = "0x1244FDC")]
		protected static void InvokeUserCode_RpcNonServerOwnedTeleportFromServer(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x124519C", Offset = "0x124519C", VA = "0x124519C")]
		protected void UserCode_CmdTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x124541C", Offset = "0x124541C", VA = "0x124541C")]
		protected static void InvokeUserCode_CmdTeleport(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x1245638", Offset = "0x1245638", VA = "0x1245638")]
		protected void UserCode_RpcTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x12457B0", Offset = "0x12457B0", VA = "0x12457B0")]
		protected static void InvokeUserCode_RpcTeleport(NetworkBehaviour obj, NetworkReader reader, NetworkConnectionToClient senderConnection)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1245978", Offset = "0x1245978", VA = "0x1245978")]
		static SmoothSyncMirror()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class StateMirror
	{
		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ownerTimestamp;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 angularVelocity;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool teleport;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool atPositionalRest;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool atRotationalRest;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float receivedOnServerTimestamp;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float receivedTimestamp;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int localTimeResetIndicator;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 reusableRotationVector;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool serverShouldRelayPosition;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool serverShouldRelayRotation;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool serverShouldRelayScale;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		public bool serverShouldRelayVelocity;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool serverShouldRelayAngularVelocity;

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x123F910", Offset = "0x123F910", VA = "0x123F910")]
		public StateMirror()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1242750", Offset = "0x1242750", VA = "0x1242750")]
		public StateMirror copyFromState(StateMirror state)
		{
			return null;
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x124392C", Offset = "0x124392C", VA = "0x124392C")]
		public static StateMirror Lerp(StateMirror targetTempStateMirror, StateMirror start, StateMirror end, float t)
		{
			return null;
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x12421D0", Offset = "0x12421D0", VA = "0x12421D0")]
		public void resetTheVariables()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x12452D8", Offset = "0x12452D8", VA = "0x12452D8")]
		public void copyFromSmoothSync(SmoothSyncMirror smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public struct NetworkStateMirror : NetworkMessage
	{
		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SmoothSyncMirror smoothSync;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public StateMirror state;

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1241E98", Offset = "0x1241E98", VA = "0x1241E98")]
		public void copyFromSmoothSync(SmoothSyncMirror smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public static class SyncProjectilesMessageFunctions
	{
		[Token(Token = "0x40016DE")]
		private const byte positionMask = 1;

		[Token(Token = "0x40016DF")]
		private const byte rotationMask = 2;

		[Token(Token = "0x40016E0")]
		private const byte scaleMask = 4;

		[Token(Token = "0x40016E1")]
		private const byte velocityMask = 8;

		[Token(Token = "0x40016E2")]
		private const byte angularVelocityMask = 16;

		[Token(Token = "0x40016E3")]
		private const byte atPositionalRestMask = 64;

		[Token(Token = "0x40016E4")]
		private const byte atRotationalRestMask = 128;

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x1245BDC", Offset = "0x1245BDC", VA = "0x1245BDC")]
		public static void Serialize(this NetworkWriter writer, NetworkStateMirror msg)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x1246D44", Offset = "0x1246D44", VA = "0x1246D44")]
		public static NetworkStateMirror Deserialize(this NetworkReader reader)
		{
			return default(NetworkStateMirror);
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1246C38", Offset = "0x1246C38", VA = "0x1246C38")]
		private static byte encodeSyncInformation(bool sendPosition, bool sendRotation, bool sendScale, bool sendVelocity, bool sendAngularVelocity, bool atPositionalRest, bool atRotationalRest)
		{
			return default(byte);
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1247CD8", Offset = "0x1247CD8", VA = "0x1247CD8")]
		private static bool shouldSyncPosition(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1247CE0", Offset = "0x1247CE0", VA = "0x1247CE0")]
		private static bool shouldSyncRotation(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x1247CE8", Offset = "0x1247CE8", VA = "0x1247CE8")]
		private static bool shouldSyncScale(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x1247CF0", Offset = "0x1247CF0", VA = "0x1247CF0")]
		private static bool shouldSyncVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x1247CF8", Offset = "0x1247CF8", VA = "0x1247CF8")]
		private static bool shouldSyncAngularVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x1247D00", Offset = "0x1247D00", VA = "0x1247D00")]
		private static bool shouldBeAtPositionalRest(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x1247D08", Offset = "0x1247D08", VA = "0x1247D08")]
		private static bool shouldBeAtRotationalRest(byte syncInformation)
		{
			return default(bool);
		}
	}
}
namespace System
{
	[Serializable]
	[Token(Token = "0x20003A6")]
	public struct Half : IComparable, IFormattable, IConvertible, IComparable<Half>, IEquatable<Half>
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[DebuggerBrowsable(DebuggerBrowsableState.Never)]
		public ushort internalValue;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Half Epsilon;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static readonly Half MaxValue;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Half MinValue;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static readonly Half NaN;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Half NegativeInfinity;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static readonly Half PositiveInfinity;

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x1247DDC", Offset = "0x1247DDC", VA = "0x1247DDC")]
		public Half(float value)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x1247F28", Offset = "0x1247F28", VA = "0x1247F28")]
		public Half(int value)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x1247F30", Offset = "0x1247F30", VA = "0x1247F30")]
		public Half(long value)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x1247F38", Offset = "0x1247F38", VA = "0x1247F38")]
		public Half(double value)
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x1247F40", Offset = "0x1247F40", VA = "0x1247F40")]
		public Half(decimal value)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x1247FB4", Offset = "0x1247FB4", VA = "0x1247FB4")]
		public Half(uint value)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x1247FC0", Offset = "0x1247FC0", VA = "0x1247FC0")]
		public Half(ulong value)
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x1247FCC", Offset = "0x1247FCC", VA = "0x1247FCC")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x1248084", Offset = "0x1248084", VA = "0x1248084")]
		public static Half Add(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x1248184", Offset = "0x1248184", VA = "0x1248184")]
		public static Half Subtract(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x1248284", Offset = "0x1248284", VA = "0x1248284")]
		public static Half Multiply(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x1248384", Offset = "0x1248384", VA = "0x1248384")]
		public static Half Divide(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x1248484", Offset = "0x1248484", VA = "0x1248484")]
		public static Half operator +(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x1248028", Offset = "0x1248028", VA = "0x1248028")]
		public static Half operator -(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x12484E4", Offset = "0x12484E4", VA = "0x12484E4")]
		public static Half operator ++(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x12485CC", Offset = "0x12485CC", VA = "0x12485CC")]
		public static Half operator --(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x12480F0", Offset = "0x12480F0", VA = "0x12480F0")]
		public static Half operator +(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x12481F0", Offset = "0x12481F0", VA = "0x12481F0")]
		public static Half operator -(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x12482F0", Offset = "0x12482F0", VA = "0x12482F0")]
		public static Half operator *(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x12483F0", Offset = "0x12483F0", VA = "0x12483F0")]
		public static Half operator /(Half half1, Half half2)
		{
			return default(Half);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x1248644", Offset = "0x1248644", VA = "0x1248644")]
		public static bool operator ==(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x1248720", Offset = "0x1248720", VA = "0x1248720")]
		public static bool operator !=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x1248730", Offset = "0x1248730", VA = "0x1248730")]
		public static bool operator <(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x12487B0", Offset = "0x12487B0", VA = "0x12487B0")]
		public static bool operator >(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1248830", Offset = "0x1248830", VA = "0x1248830")]
		public static bool operator <=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x12488D0", Offset = "0x12488D0", VA = "0x12488D0")]
		public static bool operator >=(Half half1, Half half2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1248970", Offset = "0x1248970", VA = "0x1248970")]
		public static implicit operator Half(byte value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1248994", Offset = "0x1248994", VA = "0x1248994")]
		public static implicit operator Half(short value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x12489B8", Offset = "0x12489B8", VA = "0x12489B8")]
		public static implicit operator Half(char value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x12489DC", Offset = "0x12489DC", VA = "0x12489DC")]
		public static implicit operator Half(int value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x12489FC", Offset = "0x12489FC", VA = "0x12489FC")]
		public static implicit operator Half(long value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x12485B0", Offset = "0x12485B0", VA = "0x12485B0")]
		public static explicit operator Half(float value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x1248A1C", Offset = "0x1248A1C", VA = "0x1248A1C")]
		public static explicit operator Half(double value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x1248A3C", Offset = "0x1248A3C", VA = "0x1248A3C")]
		public static explicit operator Half(decimal value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x1248AB8", Offset = "0x1248AB8", VA = "0x1248AB8")]
		public static explicit operator byte(Half value)
		{
			return default(byte);
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x1248B1C", Offset = "0x1248B1C", VA = "0x1248B1C")]
		public static explicit operator char(Half value)
		{
			return default(char);
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x1248B80", Offset = "0x1248B80", VA = "0x1248B80")]
		public static explicit operator short(Half value)
		{
			return default(short);
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x1248BEC", Offset = "0x1248BEC", VA = "0x1248BEC")]
		public static explicit operator int(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x1248C5C", Offset = "0x1248C5C", VA = "0x1248C5C")]
		public static explicit operator long(Half value)
		{
			return default(long);
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x124855C", Offset = "0x124855C", VA = "0x124855C")]
		public static implicit operator float(Half value)
		{
			return default(float);
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x1248D90", Offset = "0x1248D90", VA = "0x1248D90")]
		public static implicit operator double(Half value)
		{
			return default(double);
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1248DEC", Offset = "0x1248DEC", VA = "0x1248DEC")]
		public static explicit operator decimal(Half value)
		{
			return default(decimal);
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x1248E7C", Offset = "0x1248E7C", VA = "0x1248E7C")]
		public static implicit operator Half(sbyte value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x1248EA0", Offset = "0x1248EA0", VA = "0x1248EA0")]
		public static implicit operator Half(ushort value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x1248EC4", Offset = "0x1248EC4", VA = "0x1248EC4")]
		public static implicit operator Half(uint value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1248EE8", Offset = "0x1248EE8", VA = "0x1248EE8")]
		public static implicit operator Half(ulong value)
		{
			return default(Half);
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x1248F0C", Offset = "0x1248F0C", VA = "0x1248F0C")]
		public static explicit operator sbyte(Half value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1248F78", Offset = "0x1248F78", VA = "0x1248F78")]
		public static explicit operator ushort(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x1248FDC", Offset = "0x1248FDC", VA = "0x1248FDC")]
		public static explicit operator uint(Half value)
		{
			return default(uint);
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x1249044", Offset = "0x1249044", VA = "0x1249044")]
		public static explicit operator ulong(Half value)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x12490AC", Offset = "0x12490AC", VA = "0x12490AC", Slot = "23")]
		public int CompareTo(Half other)
		{
			return default(int);
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x12491B8", Offset = "0x12491B8", VA = "0x12491B8", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x124927C", Offset = "0x124927C", VA = "0x124927C", Slot = "24")]
		public bool Equals(Half other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x1249340", Offset = "0x1249340", VA = "0x1249340", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x1249420", Offset = "0x1249420", VA = "0x1249420", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x1249428", Offset = "0x1249428", VA = "0x1249428")]
		public TypeCode GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1249430", Offset = "0x1249430", VA = "0x1249430")]
		public static byte[] GetBytes(Half value)
		{
			return null;
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1249488", Offset = "0x1249488", VA = "0x1249488")]
		public static ushort GetBits(Half value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x124948C", Offset = "0x124948C", VA = "0x124948C")]
		public static Half ToHalf(byte[] value, int startIndex)
		{
			return default(Half);
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1249528", Offset = "0x1249528", VA = "0x1249528")]
		public static Half ToHalf(ushort bits)
		{
			return default(Half);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x1249530", Offset = "0x1249530", VA = "0x1249530")]
		public static int Sign(Half value)
		{
			return default(int);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x1249668", Offset = "0x1249668", VA = "0x1249668")]
		public static Half Abs(Half value)
		{
			return default(Half);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1249718", Offset = "0x1249718", VA = "0x1249718")]
		public static Half Max(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x124978C", Offset = "0x124978C", VA = "0x124978C")]
		public static Half Min(Half value1, Half value2)
		{
			return default(Half);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x12486C0", Offset = "0x12486C0", VA = "0x12486C0")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x1249814", Offset = "0x1249814", VA = "0x1249814")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x1249888", Offset = "0x1249888", VA = "0x1249888")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x12498F4", Offset = "0x12498F4", VA = "0x12498F4")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x1249960", Offset = "0x1249960", VA = "0x1249960")]
		public static Half Parse(string value)
		{
			return default(Half);
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x1249A0C", Offset = "0x1249A0C", VA = "0x1249A0C")]
		public static Half Parse(string value, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x1249AA0", Offset = "0x1249AA0", VA = "0x1249AA0")]
		public static Half Parse(string value, NumberStyles style)
		{
			return default(Half);
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1249B64", Offset = "0x1249B64", VA = "0x1249B64")]
		public static Half Parse(string value, NumberStyles style, IFormatProvider provider)
		{
			return default(Half);
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1249BF8", Offset = "0x1249BF8", VA = "0x1249BF8")]
		public static bool TryParse(string value, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x1249C98", Offset = "0x1249C98", VA = "0x1249C98")]
		public static bool TryParse(string value, NumberStyles style, IFormatProvider provider, out Half result)
		{
			return default(bool);
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x1249D50", Offset = "0x1249D50", VA = "0x1249D50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1249DF8", Offset = "0x1249DF8", VA = "0x1249DF8")]
		public string ToString(IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x1249E78", Offset = "0x1249E78", VA = "0x1249E78")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x1249F28", Offset = "0x1249F28", VA = "0x1249F28", Slot = "5")]
		public string ToString(string format, IFormatProvider formatProvider)
		{
			return null;
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x1249FB8", Offset = "0x1249FB8", VA = "0x1249FB8", Slot = "17")]
		private float System.IConvertible.ToSingle(IFormatProvider provider)
		{
			return default(float);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x124A010", Offset = "0x124A010", VA = "0x124A010", Slot = "6")]
		private TypeCode System.IConvertible.GetTypeCode()
		{
			return default(TypeCode);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x124A018", Offset = "0x124A018", VA = "0x124A018", Slot = "7")]
		private bool System.IConvertible.ToBoolean(IFormatProvider provider)
		{
			return default(bool);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x124A0AC", Offset = "0x124A0AC", VA = "0x124A0AC", Slot = "10")]
		private byte System.IConvertible.ToByte(IFormatProvider provider)
		{
			return default(byte);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x124A140", Offset = "0x124A140", VA = "0x124A140", Slot = "8")]
		private char System.IConvertible.ToChar(IFormatProvider provider)
		{
			return default(char);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x124A1EC", Offset = "0x124A1EC", VA = "0x124A1EC", Slot = "20")]
		private DateTime System.IConvertible.ToDateTime(IFormatProvider provider)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x124A298", Offset = "0x124A298", VA = "0x124A298", Slot = "19")]
		private decimal System.IConvertible.ToDecimal(IFormatProvider provider)
		{
			return default(decimal);
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x124A32C", Offset = "0x124A32C", VA = "0x124A32C", Slot = "18")]
		private double System.IConvertible.ToDouble(IFormatProvider provider)
		{
			return default(double);
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x124A3C0", Offset = "0x124A3C0", VA = "0x124A3C0", Slot = "11")]
		private short System.IConvertible.ToInt16(IFormatProvider provider)
		{
			return default(short);
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x124A454", Offset = "0x124A454", VA = "0x124A454", Slot = "13")]
		private int System.IConvertible.ToInt32(IFormatProvider provider)
		{
			return default(int);
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x124A4E8", Offset = "0x124A4E8", VA = "0x124A4E8", Slot = "15")]
		private long System.IConvertible.ToInt64(IFormatProvider provider)
		{
			return default(long);
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x124A57C", Offset = "0x124A57C", VA = "0x124A57C", Slot = "9")]
		private sbyte System.IConvertible.ToSByte(IFormatProvider provider)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x124A610", Offset = "0x124A610", VA = "0x124A610", Slot = "21")]
		private string System.IConvertible.ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x124A6DC", Offset = "0x124A6DC", VA = "0x124A6DC", Slot = "22")]
		private object System.IConvertible.ToType(Type conversionType, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x124A7AC", Offset = "0x124A7AC", VA = "0x124A7AC", Slot = "12")]
		private ushort System.IConvertible.ToUInt16(IFormatProvider provider)
		{
			return default(ushort);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x124A840", Offset = "0x124A840", VA = "0x124A840", Slot = "14")]
		private uint System.IConvertible.ToUInt32(IFormatProvider provider)
		{
			return default(uint);
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x124A8D4", Offset = "0x124A8D4", VA = "0x124A8D4", Slot = "16")]
		private ulong System.IConvertible.ToUInt64(IFormatProvider provider)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20003A7")]
	public static class HalfHelper
	{
		[StructLayout(2)]
		[Token(Token = "0x20003A8")]
		private struct UIntFloat
		{
			[Token(Token = "0x40016F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint UIntValue;

			[Token(Token = "0x40016F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float FloatValue;
		}

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] mantissaTable;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static uint[] exponentTable;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ushort[] offsetTable;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ushort[] baseTable;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static sbyte[] shiftTable;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static UIntFloat floatToIntConverter;

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x124AA00", Offset = "0x124AA00", VA = "0x124AA00")]
		private static uint FloatToUInt(float v)
		{
			return default(uint);
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x124AA6C", Offset = "0x124AA6C", VA = "0x124AA6C")]
		private static float UIntToFloat(uint v)
		{
			return default(float);
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x124AAD0", Offset = "0x124AAD0", VA = "0x124AAD0")]
		private static uint ConvertMantissa(int i)
		{
			return default(uint);
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x124AB00", Offset = "0x124AB00", VA = "0x124AB00")]
		private static uint[] GenerateMantissaTable()
		{
			return null;
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x124AC14", Offset = "0x124AC14", VA = "0x124AC14")]
		private static uint[] GenerateExponentTable()
		{
			return null;
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x124AD04", Offset = "0x124AD04", VA = "0x124AD04")]
		private static ushort[] GenerateOffsetTable()
		{
			return null;
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x124ADC8", Offset = "0x124ADC8", VA = "0x124ADC8")]
		private static ushort[] GenerateBaseTable()
		{
			return null;
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x124AF08", Offset = "0x124AF08", VA = "0x124AF08")]
		private static sbyte[] GenerateShiftTable()
		{
			return null;
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x1248CCC", Offset = "0x1248CCC", VA = "0x1248CCC")]
		public static float HalfToSingle(Half half)
		{
			return default(float);
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1247E44", Offset = "0x1247E44", VA = "0x1247E44")]
		public static Half SingleToHalf(float single)
		{
			return default(Half);
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1247D18", Offset = "0x1247D18", VA = "0x1247D18")]
		public static float Decompress(ushort compressedFloat)
		{
			return default(float);
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1246C8C", Offset = "0x1246C8C", VA = "0x1246C8C")]
		public static ushort Compress(float uncompressedFloat)
		{
			return default(ushort);
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x124848C", Offset = "0x124848C", VA = "0x124848C")]
		public static Half Negate(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x12496C4", Offset = "0x12496C4", VA = "0x12496C4")]
		public static Half Abs(Half half)
		{
			return default(Half);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1249800", Offset = "0x1249800", VA = "0x1249800")]
		public static bool IsNaN(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1249874", Offset = "0x1249874", VA = "0x1249874")]
		public static bool IsInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x1249950", Offset = "0x1249950", VA = "0x1249950")]
		public static bool IsPositiveInfinity(Half half)
		{
			return default(bool);
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x12498E4", Offset = "0x12498E4", VA = "0x12498E4")]
		public static bool IsNegativeInfinity(Half half)
		{
			return default(bool);
		}
	}
}
namespace Realcast.Toolkit.MixedReality
{
	[Token(Token = "0x20003A9")]
	public class rcPhyHandsOculus : rcFSM
	{
		[Token(Token = "0x20003AA")]
		private enum MENU_ITEMS
		{
			[Token(Token = "0x40016FB")]
			BACK,
			[Token(Token = "0x40016FC")]
			APP_SPACE_WARP,
			[Token(Token = "0x40016FD")]
			COUNT
		}

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _cycles;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private rcSceneManager _sm;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private rcMenuRootLoop _root;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _highColor;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _baseColor;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _validColor;

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x124B108", Offset = "0x124B108", VA = "0x124B108", Slot = "18")]
		protected override void OnStateEntered()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x124B1E0", Offset = "0x124B1E0", VA = "0x124B1E0", Slot = "19")]
		protected override void OnStateExited()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x124B1E4", Offset = "0x124B1E4", VA = "0x124B1E4", Slot = "20")]
		protected override void OnStateUpdated()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x124B63C", Offset = "0x124B63C", VA = "0x124B63C")]
		public rcPhyHandsOculus()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class GestureManager : MonoBehaviour
	{
		[Token(Token = "0x20003AC")]
		public enum PinchState
		{
			[Token(Token = "0x4001706")]
			NEUTRAL,
			[Token(Token = "0x4001707")]
			FOCUS,
			[Token(Token = "0x4001708")]
			SELECT
		}

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PinchState CurrentPinchState;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private rcXRInputs _inputs;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _delta;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float InactivePinchThreshold;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ActivePinchThreshold;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _thumbBonePos;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _IndexBonePos;

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x124B6E4", Offset = "0x124B6E4", VA = "0x124B6E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x124B75C", Offset = "0x124B75C", VA = "0x124B75C")]
		private void UpdatePinchState(Vector3 pos1, Vector2 pos2)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x124B82C", Offset = "0x124B82C", VA = "0x124B82C")]
		public GestureManager()
		{
		}
	}
}
namespace Mirror
{
	[StructLayout(3, CharSet = CharSet.Auto)]
	[Token(Token = "0x20003B0")]
	public static class GeneratedNetworkCode
	{
		[Token(Token = "0x6002245")]
		[Address(RVA = "0x124B834", Offset = "0x124B834", VA = "0x124B834")]
		public static ReadyMessage _Read_Mirror.ReadyMessage(NetworkReader reader)
		{
			return default(ReadyMessage);
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x124B83C", Offset = "0x124B83C", VA = "0x124B83C")]
		public static void _Write_Mirror.ReadyMessage(NetworkWriter writer, ReadyMessage value)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x124B840", Offset = "0x124B840", VA = "0x124B840")]
		public static NotReadyMessage _Read_Mirror.NotReadyMessage(NetworkReader reader)
		{
			return default(NotReadyMessage);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x124B848", Offset = "0x124B848", VA = "0x124B848")]
		public static void _Write_Mirror.NotReadyMessage(NetworkWriter writer, NotReadyMessage value)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x124B84C", Offset = "0x124B84C", VA = "0x124B84C")]
		public static AddPlayerMessage _Read_Mirror.AddPlayerMessage(NetworkReader reader)
		{
			return default(AddPlayerMessage);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x124B854", Offset = "0x124B854", VA = "0x124B854")]
		public static void _Write_Mirror.AddPlayerMessage(NetworkWriter writer, AddPlayerMessage value)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x124B858", Offset = "0x124B858", VA = "0x124B858")]
		public static SceneMessage _Read_Mirror.SceneMessage(NetworkReader reader)
		{
			return default(SceneMessage);
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x124B8F4", Offset = "0x124B8F4", VA = "0x124B8F4")]
		public static SceneOperation _Read_Mirror.SceneOperation(NetworkReader reader)
		{
			return default(SceneOperation);
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x124B94C", Offset = "0x124B94C", VA = "0x124B94C")]
		public static void _Write_Mirror.SceneMessage(NetworkWriter writer, SceneMessage value)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x124B9D4", Offset = "0x124B9D4", VA = "0x124B9D4")]
		public static void _Write_Mirror.SceneOperation(NetworkWriter writer, SceneOperation value)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x124BA3C", Offset = "0x124BA3C", VA = "0x124BA3C")]
		public static CommandMessage _Read_Mirror.CommandMessage(NetworkReader reader)
		{
			return default(CommandMessage);
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x124BB04", Offset = "0x124BB04", VA = "0x124BB04")]
		public static void _Write_Mirror.CommandMessage(NetworkWriter writer, CommandMessage value)
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x124BBA0", Offset = "0x124BBA0", VA = "0x124BBA0")]
		public static RpcMessage _Read_Mirror.RpcMessage(NetworkReader reader)
		{
			return default(RpcMessage);
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x124BC68", Offset = "0x124BC68", VA = "0x124BC68")]
		public static void _Write_Mirror.RpcMessage(NetworkWriter writer, RpcMessage value)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x124BD04", Offset = "0x124BD04", VA = "0x124BD04")]
		public static SpawnMessage _Read_Mirror.SpawnMessage(NetworkReader reader)
		{
			return default(SpawnMessage);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x124BE44", Offset = "0x124BE44", VA = "0x124BE44")]
		public static void _Write_Mirror.SpawnMessage(NetworkWriter writer, SpawnMessage value)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x124BF44", Offset = "0x124BF44", VA = "0x124BF44")]
		public static ObjectSpawnStartedMessage _Read_Mirror.ObjectSpawnStartedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnStartedMessage);
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x124BF4C", Offset = "0x124BF4C", VA = "0x124BF4C")]
		public static void _Write_Mirror.ObjectSpawnStartedMessage(NetworkWriter writer, ObjectSpawnStartedMessage value)
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x124BF50", Offset = "0x124BF50", VA = "0x124BF50")]
		public static ObjectSpawnFinishedMessage _Read_Mirror.ObjectSpawnFinishedMessage(NetworkReader reader)
		{
			return default(ObjectSpawnFinishedMessage);
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x124BF58", Offset = "0x124BF58", VA = "0x124BF58")]
		public static void _Write_Mirror.ObjectSpawnFinishedMessage(NetworkWriter writer, ObjectSpawnFinishedMessage value)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x124BF5C", Offset = "0x124BF5C", VA = "0x124BF5C")]
		public static ObjectDestroyMessage _Read_Mirror.ObjectDestroyMessage(NetworkReader reader)
		{
			return default(ObjectDestroyMessage);
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x124BFBC", Offset = "0x124BFBC", VA = "0x124BFBC")]
		public static void _Write_Mirror.ObjectDestroyMessage(NetworkWriter writer, ObjectDestroyMessage value)
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x124C024", Offset = "0x124C024", VA = "0x124C024")]
		public static ObjectHideMessage _Read_Mirror.ObjectHideMessage(NetworkReader reader)
		{
			return default(ObjectHideMessage);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x124C084", Offset = "0x124C084", VA = "0x124C084")]
		public static void _Write_Mirror.ObjectHideMessage(NetworkWriter writer, ObjectHideMessage value)
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x124C0EC", Offset = "0x124C0EC", VA = "0x124C0EC")]
		public static EntityStateMessage _Read_Mirror.EntityStateMessage(NetworkReader reader)
		{
			return default(EntityStateMessage);
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x124C198", Offset = "0x124C198", VA = "0x124C198")]
		public static void _Write_Mirror.EntityStateMessage(NetworkWriter writer, EntityStateMessage value)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x124C214", Offset = "0x124C214", VA = "0x124C214")]
		public static NetworkPingMessage _Read_Mirror.NetworkPingMessage(NetworkReader reader)
		{
			return default(NetworkPingMessage);
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x124C26C", Offset = "0x124C26C", VA = "0x124C26C")]
		public static void _Write_Mirror.NetworkPingMessage(NetworkWriter writer, NetworkPingMessage value)
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x124C2D4", Offset = "0x124C2D4", VA = "0x124C2D4")]
		public static NetworkPongMessage _Read_Mirror.NetworkPongMessage(NetworkReader reader)
		{
			return default(NetworkPongMessage);
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x124C350", Offset = "0x124C350", VA = "0x124C350")]
		public static void _Write_Mirror.NetworkPongMessage(NetworkWriter writer, NetworkPongMessage value)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x124C3CC", Offset = "0x124C3CC", VA = "0x124C3CC")]
		public static void _Write_BallsPool/NetworkBallSearchCriteria[](NetworkWriter writer, BallsPool.NetworkBallSearchCriteria[] value)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x124C448", Offset = "0x124C448", VA = "0x124C448")]
		public static void _Write_BallsPool/NetworkBallSearchCriteria(NetworkWriter writer, BallsPool.NetworkBallSearchCriteria value)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x124C4E4", Offset = "0x124C4E4", VA = "0x124C4E4")]
		public static void _Write_System.String[](NetworkWriter writer, string[] value)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x124C560", Offset = "0x124C560", VA = "0x124C560")]
		public static BallsPool.NetworkBallSearchCriteria[] _Read_BallsPool/NetworkBallSearchCriteria[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x124C5CC", Offset = "0x124C5CC", VA = "0x124C5CC")]
		public static BallsPool.NetworkBallSearchCriteria _Read_BallsPool/NetworkBallSearchCriteria(NetworkReader reader)
		{
			return default(BallsPool.NetworkBallSearchCriteria);
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x124C6A0", Offset = "0x124C6A0", VA = "0x124C6A0")]
		public static string[] _Read_System.String[](NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x124C70C", Offset = "0x124C70C", VA = "0x124C70C")]
		public static void _Write_ComboDetection/BallState(NetworkWriter writer, ComboDetection.BallState value)
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x124C774", Offset = "0x124C774", VA = "0x124C774")]
		public static ComboDetection.BallState _Read_ComboDetection/BallState(NetworkReader reader)
		{
			return default(ComboDetection.BallState);
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x124C7CC", Offset = "0x124C7CC", VA = "0x124C7CC")]
		public static OnlineMatchFlow.PlayAgainChoice _Read_OnlineMatchFlow/PlayAgainChoice(NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x124C898", Offset = "0x124C898", VA = "0x124C898")]
		public static void _Write_OnlineMatchFlow/PlayAgainChoice(NetworkWriter writer, OnlineMatchFlow.PlayAgainChoice value)
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x124C944", Offset = "0x124C944", VA = "0x124C944")]
		public static void _Write_OnlineMatchFlow/LeaveLobbyType(NetworkWriter writer, OnlineMatchFlow.LeaveLobbyType value)
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x124C9AC", Offset = "0x124C9AC", VA = "0x124C9AC")]
		public static OnlineMatchFlow.LeaveLobbyType _Read_OnlineMatchFlow/LeaveLobbyType(NetworkReader reader)
		{
			return default(OnlineMatchFlow.LeaveLobbyType);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x124CA04", Offset = "0x124CA04", VA = "0x124CA04")]
		public static void _Write_Menu_Manager/VSManager(NetworkWriter writer, Menu_Manager.VSManager value)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x124CA6C", Offset = "0x124CA6C", VA = "0x124CA6C")]
		public static Menu_Manager.VSManager _Read_Menu_Manager/VSManager(NetworkReader reader)
		{
			return default(Menu_Manager.VSManager);
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x124CAC4", Offset = "0x124CAC4", VA = "0x124CAC4")]
		public static OnlineSelectChallenge.ChallengeSelected _Read_OnlineSelectChallenge/ChallengeSelected(NetworkReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x124CB8C", Offset = "0x124CB8C", VA = "0x124CB8C")]
		public static void _Write_OnlineSelectChallenge/ChallengeSelected(NetworkWriter writer, OnlineSelectChallenge.ChallengeSelected value)
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x124CC38", Offset = "0x124CC38", VA = "0x124CC38")]
		public static void _Write_UnityEngine.KeyCode(NetworkWriter writer, KeyCode value)
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x124CCA0", Offset = "0x124CCA0", VA = "0x124CCA0")]
		public static KeyCode _Read_UnityEngine.KeyCode(NetworkReader reader)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x124CCF8", Offset = "0x124CCF8", VA = "0x124CCF8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		public static void InitReadWriters()
		{
		}
	}
}
