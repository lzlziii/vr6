using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using Il2CppDummyDll;
using LitJson;
using MEC;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Peril.Physics;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using TMPro;
using Tutorial;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using VRTK;
using VRTK.GrabAttachMechanics;
using VRTK.Highlighters;
using VRTK.SecondaryControllerGrabActions;
using VRTK.UnityEventHelper;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x536158", Offset = "0x536158")]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader _combineLayersShader;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x17000001")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x9C4FD4", Offset = "0x9C4FD4", VA = "0x9C4FD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x9C506C", Offset = "0x9C506C", VA = "0x9C506C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x6000003")]
		[Address(RVA = "0x9C512C", Offset = "0x9C512C", VA = "0x9C512C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x6000004")]
		[Address(RVA = "0x9C52DC", Offset = "0x9C52DC", VA = "0x9C52DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x6000005")]
		[Address(RVA = "0x9C5374", Offset = "0x9C5374", VA = "0x9C5374")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x9C5434", Offset = "0x9C5434", VA = "0x9C5434")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x9C51B0", Offset = "0x9C51B0", VA = "0x9C51B0")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x9C5508", Offset = "0x9C5508", VA = "0x9C5508")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x9C55A0", Offset = "0x9C55A0", VA = "0x9C55A0")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x9C55DC", Offset = "0x9C55DC", VA = "0x9C55DC")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x2000003")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x539CBC", Offset = "0x539CBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539CBC", Offset = "0x539CBC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x539CBC", Offset = "0x539CBC")]
	public float radius;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539D38", Offset = "0x539D38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x539D38", Offset = "0x539D38")]
	public float density;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539D8C", Offset = "0x539D8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x539D8C", Offset = "0x539D8C")]
	public float exponent;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539DE4", Offset = "0x539DE4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x539DE4", Offset = "0x539DE4")]
	public int maxPixelizationLevel;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539E38", Offset = "0x539E38")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x539E70", Offset = "0x539E70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539E70", Offset = "0x539E70")]
	public bool debugSphere;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xC08D08", Offset = "0xC08D08", VA = "0xC08D08")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xC08E80", Offset = "0xC08E80", VA = "0xC08E80")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xC08ED8", Offset = "0xC08ED8", VA = "0xC08ED8")]
	public VolumetricSphere()
	{
	}
}
[Token(Token = "0x2000004")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x7C6F08", Offset = "0x7C6F08", VA = "0x7C6F08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x7C7198", Offset = "0x7C7198", VA = "0x7C7198")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000005")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x7C71A0", Offset = "0x7C71A0", VA = "0x7C71A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x7C723C", Offset = "0x7C723C", VA = "0x7C723C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x7C7538", Offset = "0x7C7538", VA = "0x7C7538")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000006")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x6000013")]
		[Address(RVA = "0x7C7880", Offset = "0x7C7880", VA = "0x7C7880")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000014")]
		[Address(RVA = "0x7C7888", Offset = "0x7C7888", VA = "0x7C7888")]
		set
		{
		}
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x7C7890", Offset = "0x7C7890", VA = "0x7C7890")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x7C78CC", Offset = "0x7C78CC", VA = "0x7C78CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x7C7B08", Offset = "0x7C7B08", VA = "0x7C7B08")]
	public Smear()
	{
	}
}
[Token(Token = "0x2000007")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x9CBBFC", Offset = "0x9CBBFC", VA = "0x9CBBFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x9CBCD4", Offset = "0x9CBCD4", VA = "0x9CBCD4")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x9CBD58", Offset = "0x9CBD58", VA = "0x9CBD58")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x2000008")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x7CF4FC", Offset = "0x7CF4FC", VA = "0x7CF4FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x7CF5E0", Offset = "0x7CF5E0", VA = "0x7CF5E0")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x2000009")]
public class MaterialSwitch : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentMatIndex;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x8605C8", Offset = "0x8605C8", VA = "0x8605C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x86069C", Offset = "0x86069C", VA = "0x86069C")]
	private void updateSky()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x8606F0", Offset = "0x8606F0", VA = "0x8606F0")]
	public MaterialSwitch()
	{
	}
}
[Token(Token = "0x200000A")]
public class DebugConsole : MonoBehaviour
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DebugGui;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 defaultGuiPosition;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 defaultGuiScale;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color normal;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color warning;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color error;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int maxMessages;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float lineSpacing;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ArrayList messages;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ArrayList guis;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ArrayList colors;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool draggable;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool visible;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool pixelCorrect;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DebugConsole s_Instance;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	protected bool guisCreated;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected float screenHeight;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool connectedToMouse;

	[Token(Token = "0x17000007")]
	public static bool isVisible
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x767578", Offset = "0x767578", VA = "0x767578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000021")]
		[Address(RVA = "0x7678DC", Offset = "0x7678DC", VA = "0x7678DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public static bool isDraggable
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x768008", Offset = "0x768008", VA = "0x768008")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000023")]
		[Address(RVA = "0x768078", Offset = "0x768078", VA = "0x768078")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public static DebugConsole instance
	{
		[Token(Token = "0x6000024")]
		[Address(RVA = "0x7675E8", Offset = "0x7675E8", VA = "0x7675E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x7687B0", Offset = "0x7687B0", VA = "0x7687B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x7680F0", Offset = "0x7680F0", VA = "0x7680F0")]
	public void InitGuis()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x768820", Offset = "0x768820", VA = "0x768820")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x768A48", Offset = "0x768A48", VA = "0x768A48")]
	public static void Log(string message, string color)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x768B50", Offset = "0x768B50", VA = "0x768B50")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x768C70", Offset = "0x768C70", VA = "0x768C70")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x768AD0", Offset = "0x768AD0", VA = "0x768AD0")]
	public void AddMessage(string message, string color)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x768BC8", Offset = "0x768BC8", VA = "0x768BC8")]
	public void AddMessage(string message)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x768CE0", Offset = "0x768CE0", VA = "0x768CE0")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x767E20", Offset = "0x767E20", VA = "0x767E20")]
	private void ClearScreen()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x768D48", Offset = "0x768D48", VA = "0x768D48")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x7679C0", Offset = "0x7679C0", VA = "0x7679C0")]
	private void Display()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x768E60", Offset = "0x768E60", VA = "0x768E60")]
	public DebugConsole()
	{
	}
}
[Token(Token = "0x200000B")]
public class BufferedAudioStream
{
	[Token(Token = "0x400002E")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x4000032")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x4000033")]
	private const int sampleRate = 48000;

	[Token(Token = "0x4000034")]
	private const int bufferSize = 12000;

	[Token(Token = "0x4000035")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x75BF74", Offset = "0x75BF74", VA = "0x75BF74")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x75C0AC", Offset = "0x75C0AC", VA = "0x75C0AC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x75C048", Offset = "0x75C048", VA = "0x75C048")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x75C2B0", Offset = "0x75C2B0", VA = "0x75C2B0")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53620C", Offset = "0x53620C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20003AE")]
	public enum RotationAxes
	{
		[Token(Token = "0x40015A6")]
		MouseXAndY,
		[Token(Token = "0x40015A7")]
		MouseX,
		[Token(Token = "0x40015A8")]
		MouseY
	}

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x860AB4", Offset = "0x860AB4", VA = "0x860AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x860D38", Offset = "0x860D38", VA = "0x860D38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x860E00", Offset = "0x860E00", VA = "0x860E00")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200000D")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200000E")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x8748C4", Offset = "0x8748C4", VA = "0x8748C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x8748C8", Offset = "0x8748C8", VA = "0x8748C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x8748CC", Offset = "0x8748CC", VA = "0x8748CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x874A58", Offset = "0x874A58", VA = "0x874A58")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x874920", Offset = "0x874920", VA = "0x874920")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x8749B4", Offset = "0x8749B4", VA = "0x8749B4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x874AAC", Offset = "0x874AAC", VA = "0x874AAC")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x874B4C", Offset = "0x874B4C", VA = "0x874B4C")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x874CD8", Offset = "0x874CD8", VA = "0x874CD8")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x874E64", Offset = "0x874E64", VA = "0x874E64")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200000F")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20003AF")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000055")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400005B")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x8900B8", Offset = "0x8900B8", VA = "0x8900B8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x8900F0", Offset = "0x8900F0", VA = "0x8900F0")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x8902C0", Offset = "0x8902C0", VA = "0x8902C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x890378", Offset = "0x890378", VA = "0x890378")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x890488", Offset = "0x890488", VA = "0x890488")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x8910C0", Offset = "0x8910C0", VA = "0x8910C0")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600004B")]
	[Address(RVA = "0x890354", Offset = "0x890354", VA = "0x890354")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600004C")]
	[Address(RVA = "0x8903DC", Offset = "0x8903DC", VA = "0x8903DC")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600004D")]
	[Address(RVA = "0x890DA8", Offset = "0x890DA8", VA = "0x890DA8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600004E")]
	[Address(RVA = "0x890E44", Offset = "0x890E44", VA = "0x890E44")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600004F")]
	[Address(RVA = "0x890EE4", Offset = "0x890EE4", VA = "0x890EE4")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000050")]
	[Address(RVA = "0x890F84", Offset = "0x890F84", VA = "0x890F84")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000051")]
	[Address(RVA = "0x891020", Offset = "0x891020", VA = "0x891020")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000052")]
	[Address(RVA = "0x892428", Offset = "0x892428", VA = "0x892428")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000053")]
	[Address(RVA = "0x8924EC", Offset = "0x8924EC", VA = "0x8924EC")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x8925B0", Offset = "0x8925B0", VA = "0x8925B0")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000010")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20003B0")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40015AA")]
		Uninitialized = -1,
		[Token(Token = "0x40015AB")]
		NotEnabled,
		[Token(Token = "0x40015AC")]
		Success,
		[Token(Token = "0x40015AD")]
		StreamError,
		[Token(Token = "0x40015AE")]
		ProcessError,
		[Token(Token = "0x40015AF")]
		MaxStatValue
	}

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700000A")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x861D50", Offset = "0x861D50", VA = "0x861D50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x861D58", Offset = "0x861D58", VA = "0x861D58")]
		set
		{
		}
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x861D64", Offset = "0x861D64", VA = "0x861D64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x861FB4", Offset = "0x861FB4", VA = "0x861FB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x862240", Offset = "0x862240", VA = "0x862240")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000011")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20003B1")]
	private enum Parameters
	{
		[Token(Token = "0x40015B1")]
		P_GAIN,
		[Token(Token = "0x40015B2")]
		P_USEINVSQR,
		[Token(Token = "0x40015B3")]
		P_NEAR,
		[Token(Token = "0x40015B4")]
		P_FAR,
		[Token(Token = "0x40015B5")]
		P_RADIUS,
		[Token(Token = "0x40015B6")]
		P_DISABLE_RFL,
		[Token(Token = "0x40015B7")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40015B8")]
		P_AMBISTAT,
		[Token(Token = "0x40015B9")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40015BA")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40015BB")]
		P_SENDLEVEL,
		[Token(Token = "0x40015BC")]
		P_NUM
	}

	[Token(Token = "0x4000061")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700000B")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x8623C0", Offset = "0x8623C0", VA = "0x8623C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x8623C8", Offset = "0x8623C8", VA = "0x8623C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public float Gain
	{
		[Token(Token = "0x600005F")]
		[Address(RVA = "0x8623D4", Offset = "0x8623D4", VA = "0x8623D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000060")]
		[Address(RVA = "0x8623DC", Offset = "0x8623DC", VA = "0x8623DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0x862460", Offset = "0x862460", VA = "0x862460")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000062")]
		[Address(RVA = "0x862468", Offset = "0x862468", VA = "0x862468")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float Near
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x862474", Offset = "0x862474", VA = "0x862474")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000064")]
		[Address(RVA = "0x86247C", Offset = "0x86247C", VA = "0x86247C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public float Far
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0x862504", Offset = "0x862504", VA = "0x862504")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000066")]
		[Address(RVA = "0x86250C", Offset = "0x86250C", VA = "0x86250C")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000067")]
		[Address(RVA = "0x862594", Offset = "0x862594", VA = "0x862594")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x86259C", Offset = "0x86259C", VA = "0x86259C")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float ReverbSend
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x862624", Offset = "0x862624", VA = "0x862624")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600006A")]
		[Address(RVA = "0x86262C", Offset = "0x86262C", VA = "0x86262C")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public bool EnableRfl
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0x8626B4", Offset = "0x8626B4", VA = "0x8626B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600006C")]
		[Address(RVA = "0x8626BC", Offset = "0x8626BC", VA = "0x8626BC")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x600005C")]
	[Address(RVA = "0x8622C4", Offset = "0x8622C4", VA = "0x8622C4")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x8626C8", Offset = "0x8626C8", VA = "0x8626C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x8628C8", Offset = "0x8628C8", VA = "0x8628C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x8628CC", Offset = "0x8628CC", VA = "0x8628CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x862734", Offset = "0x862734", VA = "0x862734")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x8629AC", Offset = "0x8629AC", VA = "0x8629AC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x862E80", Offset = "0x862E80", VA = "0x862E80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x862F50", Offset = "0x862F50", VA = "0x862F50")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000012")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400006C")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400006E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x862F70", Offset = "0x862F70", VA = "0x862F70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x862F7C", Offset = "0x862F7C", VA = "0x862F7C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000077")]
	[Address(RVA = "0x863050", Offset = "0x863050", VA = "0x863050")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000078")]
	[Address(RVA = "0x862FB4", Offset = "0x862FB4", VA = "0x862FB4")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x8630EC", Offset = "0x8630EC", VA = "0x8630EC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000013")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20003B2")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20003B3")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000075")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000013")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x866074", Offset = "0x866074", VA = "0x866074")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000014")]
	public string filePath
	{
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x866100", Offset = "0x866100", VA = "0x866100")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x866178", Offset = "0x866178", VA = "0x866178")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x8662F0", Offset = "0x8662F0", VA = "0x8662F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x8662F4", Offset = "0x8662F4", VA = "0x8662F4")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x8668A4", Offset = "0x8668A4", VA = "0x8668A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x866D7C", Offset = "0x866D7C", VA = "0x866D7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x866EE0", Offset = "0x866EE0", VA = "0x866EE0")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x867740", Offset = "0x867740", VA = "0x867740")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x86778C", Offset = "0x86778C", VA = "0x86778C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x869358", Offset = "0x869358", VA = "0x869358")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x86920C", Offset = "0x86920C", VA = "0x86920C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x8666B8", Offset = "0x8666B8", VA = "0x8666B8")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x8664D8", Offset = "0x8664D8", VA = "0x8664D8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x869B30", Offset = "0x869B30", VA = "0x869B30")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x869FA4", Offset = "0x869FA4", VA = "0x869FA4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000014")]
internal class ONSPPropagation
{
	[Token(Token = "0x20003B4")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40015C3")]
		Int8,
		[Token(Token = "0x40015C4")]
		UInt8,
		[Token(Token = "0x40015C5")]
		Int16,
		[Token(Token = "0x40015C6")]
		UInt16,
		[Token(Token = "0x40015C7")]
		Int32,
		[Token(Token = "0x40015C8")]
		UInt32,
		[Token(Token = "0x40015C9")]
		Int64,
		[Token(Token = "0x40015CA")]
		UInt64,
		[Token(Token = "0x40015CB")]
		Float16,
		[Token(Token = "0x40015CC")]
		Float32,
		[Token(Token = "0x40015CD")]
		Float64
	}

	[Token(Token = "0x20003B5")]
	public class ClientType
	{
		[Token(Token = "0x40015CE")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40015CF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40015D0")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40015D1")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40015D2")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40015D3")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40015D4")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40015D5")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40015D6")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40015D7")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40015D8")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40015D9")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40015DA")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x8635E0", Offset = "0x8635E0", VA = "0x8635E0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20003B6")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600233E")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600233F")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6002340")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6002341")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002342")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6002343")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002344")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002345")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002346")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002347")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002348")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002349")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600234A")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600234B")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600234C")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20003B7")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40015DB")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001C0")]
		private IntPtr context
		{
			[Token(Token = "0x600234D")]
			[Address(RVA = "0x8643E0", Offset = "0x8643E0", VA = "0x8643E0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600234E")]
		[Address(RVA = "0x864444", Offset = "0x864444", VA = "0x864444")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600234F")]
		[Address(RVA = "0x8644F0", Offset = "0x8644F0", VA = "0x8644F0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x86459C", Offset = "0x86459C", VA = "0x86459C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002351")]
		[Address(RVA = "0x8645C0", Offset = "0x8645C0", VA = "0x8645C0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x86466C", Offset = "0x86466C", VA = "0x86466C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002353")]
		[Address(RVA = "0x864690", Offset = "0x864690", VA = "0x864690")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x864738", Offset = "0x864738", VA = "0x864738", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002355")]
		[Address(RVA = "0x86475C", Offset = "0x86475C", VA = "0x86475C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x8647F8", Offset = "0x8647F8", VA = "0x8647F8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002357")]
		[Address(RVA = "0x864800", Offset = "0x864800", VA = "0x864800")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x864928", Offset = "0x864928", VA = "0x864928", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002359")]
		[Address(RVA = "0x864A20", Offset = "0x864A20", VA = "0x864A20")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x864AD4", Offset = "0x864AD4", VA = "0x864AD4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600235B")]
		[Address(RVA = "0x864AE0", Offset = "0x864AE0", VA = "0x864AE0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x864C28", Offset = "0x864C28", VA = "0x864C28", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600235D")]
		[Address(RVA = "0x864C34", Offset = "0x864C34", VA = "0x864C34")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x864CFC", Offset = "0x864CFC", VA = "0x864CFC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600235F")]
		[Address(RVA = "0x864D08", Offset = "0x864D08", VA = "0x864D08")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x864DD0", Offset = "0x864DD0", VA = "0x864DD0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002361")]
		[Address(RVA = "0x864DDC", Offset = "0x864DDC", VA = "0x864DDC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x864EA4", Offset = "0x864EA4", VA = "0x864EA4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002363")]
		[Address(RVA = "0x864EB0", Offset = "0x864EB0", VA = "0x864EB0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x864F58", Offset = "0x864F58", VA = "0x864F58", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002365")]
		[Address(RVA = "0x864F7C", Offset = "0x864F7C", VA = "0x864F7C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x865018", Offset = "0x865018", VA = "0x865018", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002367")]
		[Address(RVA = "0x865020", Offset = "0x865020", VA = "0x865020")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x8650E4", Offset = "0x8650E4", VA = "0x8650E4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002369")]
		[Address(RVA = "0x8650F0", Offset = "0x8650F0", VA = "0x8650F0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x8651B4", Offset = "0x8651B4", VA = "0x8651B4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600236B")]
		[Address(RVA = "0x8651C4", Offset = "0x8651C4", VA = "0x8651C4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x865270", Offset = "0x865270", VA = "0x865270", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x86358C", Offset = "0x86358C", VA = "0x86358C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20003B8")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40015DD")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001C1")]
		private IntPtr context
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0x86527C", Offset = "0x86527C", VA = "0x86527C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600236F")]
		[Address(RVA = "0x86339C", Offset = "0x86339C", VA = "0x86339C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002370")]
		[Address(RVA = "0x8652E0", Offset = "0x8652E0", VA = "0x8652E0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x86538C", Offset = "0x86538C", VA = "0x86538C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002372")]
		[Address(RVA = "0x8653B0", Offset = "0x8653B0", VA = "0x8653B0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x86545C", Offset = "0x86545C", VA = "0x86545C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002374")]
		[Address(RVA = "0x865480", Offset = "0x865480", VA = "0x865480")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x86552C", Offset = "0x86552C", VA = "0x86552C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002376")]
		[Address(RVA = "0x865550", Offset = "0x865550", VA = "0x865550")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x8655EC", Offset = "0x8655EC", VA = "0x8655EC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002378")]
		[Address(RVA = "0x8655F4", Offset = "0x8655F4", VA = "0x8655F4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x86571C", Offset = "0x86571C", VA = "0x86571C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600237A")]
		[Address(RVA = "0x865814", Offset = "0x865814", VA = "0x865814")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x8658C8", Offset = "0x8658C8", VA = "0x8658C8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600237C")]
		[Address(RVA = "0x8658D4", Offset = "0x8658D4", VA = "0x8658D4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x865A1C", Offset = "0x865A1C", VA = "0x865A1C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600237E")]
		[Address(RVA = "0x865A28", Offset = "0x865A28", VA = "0x865A28")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x865AF0", Offset = "0x865AF0", VA = "0x865AF0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002380")]
		[Address(RVA = "0x865AFC", Offset = "0x865AFC", VA = "0x865AFC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x865BC4", Offset = "0x865BC4", VA = "0x865BC4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002382")]
		[Address(RVA = "0x865BD0", Offset = "0x865BD0", VA = "0x865BD0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x865C98", Offset = "0x865C98", VA = "0x865C98", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002384")]
		[Address(RVA = "0x865CA4", Offset = "0x865CA4", VA = "0x865CA4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x865D50", Offset = "0x865D50", VA = "0x865D50", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002386")]
		[Address(RVA = "0x865D74", Offset = "0x865D74", VA = "0x865D74")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x865E10", Offset = "0x865E10", VA = "0x865E10", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002388")]
		[Address(RVA = "0x865E18", Offset = "0x865E18", VA = "0x865E18")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x865EDC", Offset = "0x865EDC", VA = "0x865EDC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600238A")]
		[Address(RVA = "0x865EE8", Offset = "0x865EE8", VA = "0x865EE8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x865FAC", Offset = "0x865FAC", VA = "0x865FAC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600238C")]
		[Address(RVA = "0x865FBC", Offset = "0x865FBC", VA = "0x865FBC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x866068", Offset = "0x866068", VA = "0x866068", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x863448", Offset = "0x863448", VA = "0x863448")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20003B9")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40015DF")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001C2")]
		private IntPtr context
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0x8635E8", Offset = "0x8635E8", VA = "0x8635E8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002390")]
		[Address(RVA = "0x863494", Offset = "0x863494", VA = "0x863494")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002391")]
		[Address(RVA = "0x86364C", Offset = "0x86364C", VA = "0x86364C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x8636F8", Offset = "0x8636F8", VA = "0x8636F8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002393")]
		[Address(RVA = "0x86371C", Offset = "0x86371C", VA = "0x86371C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x8637C8", Offset = "0x8637C8", VA = "0x8637C8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002395")]
		[Address(RVA = "0x8637EC", Offset = "0x8637EC", VA = "0x8637EC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x863898", Offset = "0x863898", VA = "0x863898", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002397")]
		[Address(RVA = "0x8638BC", Offset = "0x8638BC", VA = "0x8638BC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x863958", Offset = "0x863958", VA = "0x863958", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002399")]
		[Address(RVA = "0x863960", Offset = "0x863960", VA = "0x863960")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x863A88", Offset = "0x863A88", VA = "0x863A88", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600239B")]
		[Address(RVA = "0x863B80", Offset = "0x863B80", VA = "0x863B80")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x863C34", Offset = "0x863C34", VA = "0x863C34", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600239D")]
		[Address(RVA = "0x863C40", Offset = "0x863C40", VA = "0x863C40")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x863D88", Offset = "0x863D88", VA = "0x863D88", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600239F")]
		[Address(RVA = "0x863D94", Offset = "0x863D94", VA = "0x863D94")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x863E5C", Offset = "0x863E5C", VA = "0x863E5C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x863E68", Offset = "0x863E68", VA = "0x863E68")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x863F30", Offset = "0x863F30", VA = "0x863F30", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x863F3C", Offset = "0x863F3C", VA = "0x863F3C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x864004", Offset = "0x864004", VA = "0x864004", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x864010", Offset = "0x864010", VA = "0x864010")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x8640BC", Offset = "0x8640BC", VA = "0x8640BC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x8640E0", Offset = "0x8640E0", VA = "0x8640E0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x86417C", Offset = "0x86417C", VA = "0x86417C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x864184", Offset = "0x864184", VA = "0x864184")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x864248", Offset = "0x864248", VA = "0x864248", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x864254", Offset = "0x864254", VA = "0x864254")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x864318", Offset = "0x864318", VA = "0x864318", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x864328", Offset = "0x864328", VA = "0x864328")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x8643D4", Offset = "0x8643D4", VA = "0x8643D4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x863540", Offset = "0x863540", VA = "0x863540")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000015")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0x8630FC", Offset = "0x8630FC", VA = "0x8630FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x86316C", Offset = "0x86316C", VA = "0x86316C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x8635D8", Offset = "0x8635D8", VA = "0x8635D8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000015")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20003BA")]
	public enum Preset
	{
		[Token(Token = "0x40015E2")]
		Custom,
		[Token(Token = "0x40015E3")]
		AcousticTile,
		[Token(Token = "0x40015E4")]
		Brick,
		[Token(Token = "0x40015E5")]
		BrickPainted,
		[Token(Token = "0x40015E6")]
		Carpet,
		[Token(Token = "0x40015E7")]
		CarpetHeavy,
		[Token(Token = "0x40015E8")]
		CarpetHeavyPadded,
		[Token(Token = "0x40015E9")]
		CeramicTile,
		[Token(Token = "0x40015EA")]
		Concrete,
		[Token(Token = "0x40015EB")]
		ConcreteRough,
		[Token(Token = "0x40015EC")]
		ConcreteBlock,
		[Token(Token = "0x40015ED")]
		ConcreteBlockPainted,
		[Token(Token = "0x40015EE")]
		Curtain,
		[Token(Token = "0x40015EF")]
		Foliage,
		[Token(Token = "0x40015F0")]
		Glass,
		[Token(Token = "0x40015F1")]
		GlassHeavy,
		[Token(Token = "0x40015F2")]
		Grass,
		[Token(Token = "0x40015F3")]
		Gravel,
		[Token(Token = "0x40015F4")]
		GypsumBoard,
		[Token(Token = "0x40015F5")]
		PlasterOnBrick,
		[Token(Token = "0x40015F6")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40015F7")]
		Soil,
		[Token(Token = "0x40015F8")]
		SoundProof,
		[Token(Token = "0x40015F9")]
		Snow,
		[Token(Token = "0x40015FA")]
		Steel,
		[Token(Token = "0x40015FB")]
		Water,
		[Token(Token = "0x40015FC")]
		WoodThin,
		[Token(Token = "0x40015FD")]
		WoodThick,
		[Token(Token = "0x40015FE")]
		WoodFloor,
		[Token(Token = "0x40015FF")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20003BB")]
	public sealed class Point
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x8740DC", Offset = "0x8740DC", VA = "0x8740DC")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x874224", Offset = "0x874224", VA = "0x874224")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x874294", Offset = "0x874294", VA = "0x874294")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x539338", Offset = "0x539338")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539CAC", Offset = "0x539CAC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6002792")]
			[Address(RVA = "0x874784", Offset = "0x874784", VA = "0x874784")]
			public <>c()
			{
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0x87478C", Offset = "0x87478C", VA = "0x87478C")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6002794")]
			[Address(RVA = "0x8747B8", Offset = "0x8747B8", VA = "0x8747B8")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170001C3")]
		public float Item
		{
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x8742FC", Offset = "0x8742FC", VA = "0x8742FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x8741AC", Offset = "0x8741AC", VA = "0x8741AC")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539F60", Offset = "0x539F60")]
	public Spectrum absorption;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539F98", Offset = "0x539F98")]
	public Spectrum transmission;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x539FD0", Offset = "0x539FD0")]
	public Spectrum scattering;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000016")]
	public Preset preset
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x86A07C", Offset = "0x86A07C", VA = "0x86A07C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x86A084", Offset = "0x86A084", VA = "0x86A084")]
		set
		{
		}
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x86A0AC", Offset = "0x86A0AC", VA = "0x86A0AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x8699BC", Offset = "0x8699BC", VA = "0x8699BC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x86A754", Offset = "0x86A754", VA = "0x86A754")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x86A758", Offset = "0x86A758", VA = "0x86A758")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x86A0B0", Offset = "0x86A0B0", VA = "0x86A0B0")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x869078", Offset = "0x869078", VA = "0x869078")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x86A83C", Offset = "0x86A83C", VA = "0x86A83C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x86ADD0", Offset = "0x86ADD0", VA = "0x86ADD0")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x86B36C", Offset = "0x86B36C", VA = "0x86B36C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x86B908", Offset = "0x86B908", VA = "0x86B908")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x86BEA8", Offset = "0x86BEA8", VA = "0x86BEA8")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x86C440", Offset = "0x86C440", VA = "0x86C440")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x86C9D8", Offset = "0x86C9D8", VA = "0x86C9D8")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x86CF78", Offset = "0x86CF78", VA = "0x86CF78")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x86D518", Offset = "0x86D518", VA = "0x86D518")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x86DAB4", Offset = "0x86DAB4", VA = "0x86DAB4")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x86E054", Offset = "0x86E054", VA = "0x86E054")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x86E5F4", Offset = "0x86E5F4", VA = "0x86E5F4")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x86EB8C", Offset = "0x86EB8C", VA = "0x86EB8C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x86F124", Offset = "0x86F124", VA = "0x86F124")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x86F6BC", Offset = "0x86F6BC", VA = "0x86F6BC")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x86FC5C", Offset = "0x86FC5C", VA = "0x86FC5C")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x870078", Offset = "0x870078", VA = "0x870078")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x87048C", Offset = "0x87048C", VA = "0x87048C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x870A2C", Offset = "0x870A2C", VA = "0x870A2C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x870FC8", Offset = "0x870FC8", VA = "0x870FC8")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x871564", Offset = "0x871564", VA = "0x871564")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x87197C", Offset = "0x87197C", VA = "0x87197C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x871B10", Offset = "0x871B10", VA = "0x871B10")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x871F24", Offset = "0x871F24", VA = "0x871F24")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x8724C0", Offset = "0x8724C0", VA = "0x8724C0")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x872A60", Offset = "0x872A60", VA = "0x872A60")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x872FFC", Offset = "0x872FFC", VA = "0x872FFC")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x87359C", Offset = "0x87359C", VA = "0x87359C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x873B3C", Offset = "0x873B3C", VA = "0x873B3C")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x874114", Offset = "0x874114", VA = "0x874114")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000016")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x8747E4", Offset = "0x8747E4", VA = "0x8747E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x8748B4", Offset = "0x8748B4", VA = "0x8748B4")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000017")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400007E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x874EEC", Offset = "0x874EEC", VA = "0x874EEC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x874FA0", Offset = "0x874FA0", VA = "0x874FA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x8750AC", Offset = "0x8750AC", VA = "0x8750AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x8750B0", Offset = "0x8750B0", VA = "0x8750B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x8750B4", Offset = "0x8750B4", VA = "0x8750B4")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000018")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xA2EA34", Offset = "0xA2EA34", VA = "0xA2EA34")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xA2EA94", Offset = "0xA2EA94", VA = "0xA2EA94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xA2EAF4", Offset = "0xA2EAF4", VA = "0xA2EAF4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xA2ECE0", Offset = "0xA2ECE0", VA = "0xA2ECE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xA2ECEC", Offset = "0xA2ECEC", VA = "0xA2ECEC")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xA2ED74", Offset = "0xA2ED74", VA = "0xA2ED74")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xA2EF90", Offset = "0xA2EF90", VA = "0xA2EF90")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xA2F1AC", Offset = "0xA2F1AC", VA = "0xA2F1AC")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xA2F2E0", Offset = "0xA2F2E0", VA = "0xA2F2E0")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xA2F414", Offset = "0xA2F414", VA = "0xA2F414")]
	public void UnLock()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xA2F5D4", Offset = "0xA2F5D4", VA = "0xA2F5D4")]
	public void AddCount()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xA2F944", Offset = "0xA2F944", VA = "0xA2F944")]
	public void AddFields()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xA2EC34", Offset = "0xA2EC34", VA = "0xA2EC34")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xA2F234", Offset = "0xA2F234", VA = "0xA2F234")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xA2F368", Offset = "0xA2F368", VA = "0xA2F368")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xA2FAE4", Offset = "0xA2FAE4", VA = "0xA2FAE4")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xA2F85C", Offset = "0xA2F85C", VA = "0xA2F85C")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA2F520", Offset = "0xA2F520", VA = "0xA2F520")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xA2F0F8", Offset = "0xA2F0F8", VA = "0xA2F0F8")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xA2EEDC", Offset = "0xA2EEDC", VA = "0xA2EEDC")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xA2EB6C", Offset = "0xA2EB6C", VA = "0xA2EB6C")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xA2FBA0", Offset = "0xA2FBA0", VA = "0xA2FBA0")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xA304C8", Offset = "0xA304C8", VA = "0xA304C8")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xA30BDC", Offset = "0xA30BDC", VA = "0xA30BDC")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA30EF8", Offset = "0xA30EF8", VA = "0xA30EF8")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA31214", Offset = "0xA31214", VA = "0xA31214")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xA31530", Offset = "0xA31530", VA = "0xA31530")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xA31B20", Offset = "0xA31B20", VA = "0xA31B20")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xA32188", Offset = "0xA32188", VA = "0xA32188")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xA324A4", Offset = "0xA324A4", VA = "0xA324A4")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xA3255C", Offset = "0xA3255C", VA = "0xA3255C")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x2000019")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x20003BD")]
	public enum UserHandNess
	{
		[Token(Token = "0x4001605")]
		Right,
		[Token(Token = "0x4001606")]
		Left
	}

	[Token(Token = "0x20003BE")]
	public enum GazeType
	{
		[Token(Token = "0x4001608")]
		Never,
		[Token(Token = "0x4001609")]
		DuringMotion,
		[Token(Token = "0x400160A")]
		Always
	}

	[Token(Token = "0x20003BF")]
	public enum ControllerAxis
	{
		[Token(Token = "0x400160C")]
		Controller,
		[Token(Token = "0x400160D")]
		Wrist,
		[Token(Token = "0x400160E")]
		Elbow,
		[Token(Token = "0x400160F")]
		Shoulder
	}

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53A018", Offset = "0x53A018")]
	public float ElbowHeight;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53A034", Offset = "0x53A034")]
	public float ElbowDepth;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53A050", Offset = "0x53A050")]
	public float PointerTiltAngle;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A068", Offset = "0x53A068")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A078", Offset = "0x53A078")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A088", Offset = "0x53A088")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A098", Offset = "0x53A098")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A0A8", Offset = "0x53A0A8")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A0B8", Offset = "0x53A0B8")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A0C8", Offset = "0x53A0C8")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A0D8", Offset = "0x53A0D8")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000017")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x9CEE7C", Offset = "0x9CEE7C", VA = "0x9CEE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E1B8", Offset = "0x54E1B8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x9CED98", Offset = "0x9CED98", VA = "0x9CED98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E1C8", Offset = "0x54E1C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x9CEED0", Offset = "0x9CEED0", VA = "0x9CEED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E1D8", Offset = "0x54E1D8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x9CEE08", Offset = "0x9CEE08", VA = "0x9CEE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E1E8", Offset = "0x54E1E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x9CF194", Offset = "0x9CF194", VA = "0x9CF194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E1F8", Offset = "0x54E1F8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x9CF0B0", Offset = "0x9CF0B0", VA = "0x9CF0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E208", Offset = "0x54E208")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x9CF1E8", Offset = "0x9CF1E8", VA = "0x9CF1E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E218", Offset = "0x54E218")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x9CF120", Offset = "0x9CF120", VA = "0x9CF120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E228", Offset = "0x54E228")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x9CF008", Offset = "0x9CF008", VA = "0x9CF008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E238", Offset = "0x54E238")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x9CEF24", Offset = "0x9CEF24", VA = "0x9CEF24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E248", Offset = "0x54E248")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x9CF05C", Offset = "0x9CF05C", VA = "0x9CF05C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E258", Offset = "0x54E258")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x9CEF94", Offset = "0x9CEF94", VA = "0x9CEF94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E268", Offset = "0x54E268")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x9CF320", Offset = "0x9CF320", VA = "0x9CF320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E278", Offset = "0x54E278")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x9CF23C", Offset = "0x9CF23C", VA = "0x9CF23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E288", Offset = "0x54E288")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x9CF374", Offset = "0x9CF374", VA = "0x9CF374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E298", Offset = "0x54E298")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x9CF2AC", Offset = "0x9CF2AC", VA = "0x9CF2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E2A8", Offset = "0x54E2A8")]
		set
		{
		}
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x9CBDD8", Offset = "0x9CBDD8", VA = "0x9CBDD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x9CC3C4", Offset = "0x9CC3C4", VA = "0x9CC3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x9CC434", Offset = "0x9CC434", VA = "0x9CC434")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x9CCA20", Offset = "0x9CCA20", VA = "0x9CCA20")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x9CCAC8", Offset = "0x9CCAC8", VA = "0x9CCAC8")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x9CCACC", Offset = "0x9CCACC", VA = "0x9CCACC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x9CCA24", Offset = "0x9CCA24", VA = "0x9CCA24")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x9CCB2C", Offset = "0x9CCB2C", VA = "0x9CCB2C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x9CCD14", Offset = "0x9CCD14", VA = "0x9CCD14")]
	private void ShowController()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x9CCEE0", Offset = "0x9CCEE0", VA = "0x9CCEE0")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x9CCFCC", Offset = "0x9CCFCC", VA = "0x9CCFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x9CCAD0", Offset = "0x9CCAD0", VA = "0x9CCAD0")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x9CD2B4", Offset = "0x9CD2B4", VA = "0x9CD2B4")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x9CD330", Offset = "0x9CD330", VA = "0x9CD330")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x9CD3B4", Offset = "0x9CD3B4", VA = "0x9CD3B4")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x9CEBB4", Offset = "0x9CEBB4", VA = "0x9CEBB4")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x9CD538", Offset = "0x9CD538", VA = "0x9CD538")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x9CD548", Offset = "0x9CD548", VA = "0x9CD548")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x9CDC3C", Offset = "0x9CDC3C", VA = "0x9CDC3C")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x9CF3C8", Offset = "0x9CF3C8", VA = "0x9CF3C8")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x200001A")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x9CF430", Offset = "0x9CF430", VA = "0x9CF430")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x9CF818", Offset = "0x9CF818", VA = "0x9CF818")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x9CFB84", Offset = "0x9CFB84", VA = "0x9CFB84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x9D1C00", Offset = "0x9D1C00", VA = "0x9D1C00")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x9D1CAC", Offset = "0x9D1CAC", VA = "0x9D1CAC")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x9D1D58", Offset = "0x9D1D58", VA = "0x9D1D58")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x9D1DF8", Offset = "0x9D1DF8", VA = "0x9D1DF8")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x9D1DFC", Offset = "0x9D1DFC", VA = "0x9D1DFC")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x200001B")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x6000106")]
	[Address(RVA = "0x9D1E0C", Offset = "0x9D1E0C", VA = "0x9D1E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x9D2068", Offset = "0x9D2068", VA = "0x9D2068")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x9D2110", Offset = "0x9D2110", VA = "0x9D2110")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x9D21B8", Offset = "0x9D21B8", VA = "0x9D21B8")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x9D2260", Offset = "0x9D2260", VA = "0x9D2260")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x9D2308", Offset = "0x9D2308", VA = "0x9D2308")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x9D23B0", Offset = "0x9D23B0", VA = "0x9D23B0")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x200001C")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539370", Offset = "0x539370")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0x9D4898", Offset = "0x9D4898", VA = "0x9D4898", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023BA")]
			[Address(RVA = "0x9D4908", Offset = "0x9D4908", VA = "0x9D4908", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x9D33D8", Offset = "0x9D33D8", VA = "0x9D33D8")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x9D4350", Offset = "0x9D4350", VA = "0x9D4350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x9D4354", Offset = "0x9D4354", VA = "0x9D4354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x9D48A0", Offset = "0x9D48A0", VA = "0x9D48A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x40000C2")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x40000C3")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x40000C4")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x40000C5")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x9D23B8", Offset = "0x9D23B8", VA = "0x9D23B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x9D2554", Offset = "0x9D2554", VA = "0x9D2554")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x9D264C", Offset = "0x9D264C", VA = "0x9D264C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x9D29CC", Offset = "0x9D29CC", VA = "0x9D29CC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x9D2C00", Offset = "0x9D2C00", VA = "0x9D2C00")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x9D2E34", Offset = "0x9D2E34", VA = "0x9D2E34")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x9D3264", Offset = "0x9D3264", VA = "0x9D3264")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x9D2658", Offset = "0x9D2658", VA = "0x9D2658")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x9D2F20", Offset = "0x9D2F20", VA = "0x9D2F20")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x9D2D9C", Offset = "0x9D2D9C", VA = "0x9D2D9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E2B8", Offset = "0x54E2B8")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x9D3404", Offset = "0x9D3404", VA = "0x9D3404")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x9D3AD0", Offset = "0x9D3AD0", VA = "0x9D3AD0")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x9D3700", Offset = "0x9D3700", VA = "0x9D3700")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x9D4048", Offset = "0x9D4048", VA = "0x9D4048")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x9D4168", Offset = "0x9D4168", VA = "0x9D4168")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x9D42DC", Offset = "0x9D42DC", VA = "0x9D42DC")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x200001D")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x9D4910", Offset = "0x9D4910", VA = "0x9D4910")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x9D4D1C", Offset = "0x9D4D1C", VA = "0x9D4D1C")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x9D5740", Offset = "0x9D5740", VA = "0x9D5740")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x9D54A4", Offset = "0x9D54A4", VA = "0x9D54A4")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x9D55C4", Offset = "0x9D55C4", VA = "0x9D55C4")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x9D58F8", Offset = "0x9D58F8", VA = "0x9D58F8")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x9D5A74", Offset = "0x9D5A74", VA = "0x9D5A74")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x9D5C0C", Offset = "0x9D5C0C", VA = "0x9D5C0C")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x9D5D60", Offset = "0x9D5D60", VA = "0x9D5D60")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x9D5EF8", Offset = "0x9D5EF8", VA = "0x9D5EF8")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x9D60DC", Offset = "0x9D60DC", VA = "0x9D60DC")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x9D6274", Offset = "0x9D6274", VA = "0x9D6274")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x9D63D8", Offset = "0x9D63D8", VA = "0x9D63D8")]
	public void StartScan()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x9D6504", Offset = "0x9D6504", VA = "0x9D6504")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x9D53A8", Offset = "0x9D53A8", VA = "0x9D53A8")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x9D662C", Offset = "0x9D662C", VA = "0x9D662C")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x9D67C4", Offset = "0x9D67C4", VA = "0x9D67C4")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x9D6908", Offset = "0x9D6908", VA = "0x9D6908")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x9D69A8", Offset = "0x9D69A8", VA = "0x9D69A8")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x9D6A6C", Offset = "0x9D6A6C", VA = "0x9D6A6C")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x9D6C14", Offset = "0x9D6C14", VA = "0x9D6C14")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x9D6D00", Offset = "0x9D6D00", VA = "0x9D6D00")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x9D6DF0", Offset = "0x9D6DF0", VA = "0x9D6DF0")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x9D6EDC", Offset = "0x9D6EDC", VA = "0x9D6EDC")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x9D6FCC", Offset = "0x9D6FCC", VA = "0x9D6FCC")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x9D7324", Offset = "0x9D7324", VA = "0x9D7324")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x9D7410", Offset = "0x9D7410", VA = "0x9D7410")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x9D75B8", Offset = "0x9D75B8", VA = "0x9D75B8")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x9D7760", Offset = "0x9D7760", VA = "0x9D7760")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x9D7BF8", Offset = "0x9D7BF8", VA = "0x9D7BF8")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x9D7D5C", Offset = "0x9D7D5C", VA = "0x9D7D5C")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x9D7DE8", Offset = "0x9D7DE8", VA = "0x9D7DE8")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x9D8960", Offset = "0x9D8960", VA = "0x9D8960")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x9D8B04", Offset = "0x9D8B04", VA = "0x9D8B04")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x9D9364", Offset = "0x9D9364", VA = "0x9D9364")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x9D9BFC", Offset = "0x9D9BFC", VA = "0x9D9BFC")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x9DB9E8", Offset = "0x9DB9E8", VA = "0x9DB9E8")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x9DBB10", Offset = "0x9DBB10", VA = "0x9DBB10")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x9DE63C", Offset = "0x9DE63C", VA = "0x9DE63C")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x9DE838", Offset = "0x9DE838", VA = "0x9DE838")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x9DE9E4", Offset = "0x9DE9E4", VA = "0x9DE9E4")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x9DEBDC", Offset = "0x9DEBDC", VA = "0x9DEBDC")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x9DEDD4", Offset = "0x9DEDD4", VA = "0x9DEDD4")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x9DEEFC", Offset = "0x9DEEFC", VA = "0x9DEEFC")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x9DF3FC", Offset = "0x9DF3FC", VA = "0x9DF3FC")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x9DF8A8", Offset = "0x9DF8A8", VA = "0x9DF8A8")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x9DFCB4", Offset = "0x9DFCB4", VA = "0x9DFCB4")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x9DFDA0", Offset = "0x9DFDA0", VA = "0x9DFDA0")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x9E014C", Offset = "0x9E014C", VA = "0x9E014C")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x9E024C", Offset = "0x9E024C", VA = "0x9E024C")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x9E03AC", Offset = "0x9E03AC", VA = "0x9E03AC")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x9E0454", Offset = "0x9E0454", VA = "0x9E0454")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x9E05BC", Offset = "0x9E05BC", VA = "0x9E05BC")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x9E0724", Offset = "0x9E0724", VA = "0x9E0724")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x9E088C", Offset = "0x9E088C", VA = "0x9E088C")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x9E0934", Offset = "0x9E0934", VA = "0x9E0934")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x9E09DC", Offset = "0x9E09DC", VA = "0x9E09DC")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x9E0BC4", Offset = "0x9E0BC4", VA = "0x9E0BC4")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x9E0D2C", Offset = "0x9E0D2C", VA = "0x9E0D2C")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x9E0E94", Offset = "0x9E0E94", VA = "0x9E0E94")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x9E0F98", Offset = "0x9E0F98", VA = "0x9E0F98")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x9E109C", Offset = "0x9E109C", VA = "0x9E109C")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x9E11A0", Offset = "0x9E11A0", VA = "0x9E11A0")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x9E1308", Offset = "0x9E1308", VA = "0x9E1308")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x9E13B0", Offset = "0x9E13B0", VA = "0x9E13B0")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x9E1458", Offset = "0x9E1458", VA = "0x9E1458")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x9E15DC", Offset = "0x9E15DC", VA = "0x9E15DC")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x9E1690", Offset = "0x9E1690", VA = "0x9E1690")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x9E1730", Offset = "0x9E1730", VA = "0x9E1730")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x9E182C", Offset = "0x9E182C", VA = "0x9E182C")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x9E1928", Offset = "0x9E1928", VA = "0x9E1928")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x9E19B8", Offset = "0x9E19B8", VA = "0x9E19B8")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x9E1A9C", Offset = "0x9E1A9C", VA = "0x9E1A9C")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x9E1B80", Offset = "0x9E1B80", VA = "0x9E1B80")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x9E1C68", Offset = "0x9E1C68", VA = "0x9E1C68")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x9E1DD0", Offset = "0x9E1DD0", VA = "0x9E1DD0")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x9E1F38", Offset = "0x9E1F38", VA = "0x9E1F38")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x9E20B4", Offset = "0x9E20B4", VA = "0x9E20B4")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x9E220C", Offset = "0x9E220C", VA = "0x9E220C")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x200001E")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x20003C1")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x20003C2")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x20003C3")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x20003C4")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x20003C5")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x20003C6")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x20003C7")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x20003C8")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x20003C9")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x20003CA")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x20003CB")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x20003CC")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x20003CD")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x20003CE")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x20003CF")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x20003D0")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x20003D1")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x20003D2")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x20003D3")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x20003D4")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x1700001F")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x9CE944", Offset = "0x9CE944", VA = "0x9CE944")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x9CBF04", Offset = "0x9CBF04", VA = "0x9CBF04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E31C", Offset = "0x54E31C")]
		add
		{
		}
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x9CC560", Offset = "0x9CC560", VA = "0x9CC560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E32C", Offset = "0x54E32C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x9E2388", Offset = "0x9E2388", VA = "0x9E2388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E33C", Offset = "0x54E33C")]
		add
		{
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x9E24B8", Offset = "0x9E24B8", VA = "0x9E24B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E34C", Offset = "0x54E34C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x9CC164", Offset = "0x9CC164", VA = "0x9CC164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E35C", Offset = "0x54E35C")]
		add
		{
		}
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x9CC7C0", Offset = "0x9CC7C0", VA = "0x9CC7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E36C", Offset = "0x54E36C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x9CC294", Offset = "0x9CC294", VA = "0x9CC294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E37C", Offset = "0x54E37C")]
		add
		{
		}
		[Token(Token = "0x6000174")]
		[Address(RVA = "0x9CC8F0", Offset = "0x9CC8F0", VA = "0x9CC8F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E38C", Offset = "0x54E38C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0x9E25E8", Offset = "0x9E25E8", VA = "0x9E25E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E39C", Offset = "0x54E39C")]
		add
		{
		}
		[Token(Token = "0x6000176")]
		[Address(RVA = "0x9E2718", Offset = "0x9E2718", VA = "0x9E2718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E3AC", Offset = "0x54E3AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x9E2848", Offset = "0x9E2848", VA = "0x9E2848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E3BC", Offset = "0x54E3BC")]
		add
		{
		}
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x9E2978", Offset = "0x9E2978", VA = "0x9E2978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E3CC", Offset = "0x54E3CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x9E2AA8", Offset = "0x9E2AA8", VA = "0x9E2AA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E3DC", Offset = "0x54E3DC")]
		add
		{
		}
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x9E2BD8", Offset = "0x9E2BD8", VA = "0x9E2BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E3EC", Offset = "0x54E3EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0x9CF6E8", Offset = "0x9CF6E8", VA = "0x9CF6E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E3FC", Offset = "0x54E3FC")]
		add
		{
		}
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x9CFA54", Offset = "0x9CFA54", VA = "0x9CFA54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E40C", Offset = "0x54E40C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x9CC034", Offset = "0x9CC034", VA = "0x9CC034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E41C", Offset = "0x54E41C")]
		add
		{
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x9CC690", Offset = "0x9CC690", VA = "0x9CC690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E42C", Offset = "0x54E42C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x9CF5B8", Offset = "0x9CF5B8", VA = "0x9CF5B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E43C", Offset = "0x54E43C")]
		add
		{
		}
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x9CF924", Offset = "0x9CF924", VA = "0x9CF924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E44C", Offset = "0x54E44C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x9E2D08", Offset = "0x9E2D08", VA = "0x9E2D08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E45C", Offset = "0x54E45C")]
		add
		{
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x9E2E38", Offset = "0x9E2E38", VA = "0x9E2E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E46C", Offset = "0x54E46C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x9E2F68", Offset = "0x9E2F68", VA = "0x9E2F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E47C", Offset = "0x54E47C")]
		add
		{
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x9E3098", Offset = "0x9E3098", VA = "0x9E3098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E48C", Offset = "0x54E48C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x9E31C8", Offset = "0x9E31C8", VA = "0x9E31C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E49C", Offset = "0x54E49C")]
		add
		{
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x9E32F8", Offset = "0x9E32F8", VA = "0x9E32F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E4AC", Offset = "0x54E4AC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x9E3428", Offset = "0x9E3428", VA = "0x9E3428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E4BC", Offset = "0x54E4BC")]
		add
		{
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x9E3558", Offset = "0x9E3558", VA = "0x9E3558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E4CC", Offset = "0x54E4CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x9E3688", Offset = "0x9E3688", VA = "0x9E3688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E4DC", Offset = "0x54E4DC")]
		add
		{
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x9E37B8", Offset = "0x9E37B8", VA = "0x9E37B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E4EC", Offset = "0x54E4EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x9E38E8", Offset = "0x9E38E8", VA = "0x9E38E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E4FC", Offset = "0x54E4FC")]
		add
		{
		}
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x9E3A18", Offset = "0x9E3A18", VA = "0x9E3A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E50C", Offset = "0x54E50C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x9E3B48", Offset = "0x9E3B48", VA = "0x9E3B48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E51C", Offset = "0x54E51C")]
		add
		{
		}
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x9E3C78", Offset = "0x9E3C78", VA = "0x9E3C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E52C", Offset = "0x54E52C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x9E3DA8", Offset = "0x9E3DA8", VA = "0x9E3DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E53C", Offset = "0x54E53C")]
		add
		{
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x9E3ED8", Offset = "0x9E3ED8", VA = "0x9E3ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E54C", Offset = "0x54E54C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x9E4008", Offset = "0x9E4008", VA = "0x9E4008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E55C", Offset = "0x54E55C")]
		add
		{
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x9E4138", Offset = "0x9E4138", VA = "0x9E4138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E56C", Offset = "0x54E56C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x9E4268", Offset = "0x9E4268", VA = "0x9E4268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E57C", Offset = "0x54E57C")]
		add
		{
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x9E4398", Offset = "0x9E4398", VA = "0x9E4398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E58C", Offset = "0x54E58C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x9E44C8", Offset = "0x9E44C8", VA = "0x9E44C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x9E47DC", Offset = "0x9E47DC", VA = "0x9E47DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x9E4888", Offset = "0x9E4888", VA = "0x9E4888")]
	private void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x9E724C", Offset = "0x9E724C", VA = "0x9E724C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x9E77BC", Offset = "0x9E77BC", VA = "0x9E77BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x9E78A0", Offset = "0x9E78A0", VA = "0x9E78A0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x9E7A40", Offset = "0x9E7A40", VA = "0x9E7A40")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x9E7AEC", Offset = "0x9E7AEC", VA = "0x9E7AEC")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x9E7BD4", Offset = "0x9E7BD4", VA = "0x9E7BD4")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x9E4730", Offset = "0x9E4730", VA = "0x9E4730")]
	public void BindService()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x9E7CBC", Offset = "0x9E7CBC", VA = "0x9E7CBC")]
	public void StartScan()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x9E7D68", Offset = "0x9E7D68", VA = "0x9E7D68")]
	public void StopScan()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x9E7E14", Offset = "0x9E7E14", VA = "0x9E7E14")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x9E773C", Offset = "0x9E773C", VA = "0x9E773C")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x9E7EC8", Offset = "0x9E7EC8", VA = "0x9E7EC8")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x9E7F74", Offset = "0x9E7F74", VA = "0x9E7F74")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x9E8020", Offset = "0x9E8020", VA = "0x9E8020")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x9E80E8", Offset = "0x9E80E8", VA = "0x9E80E8")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x9E8194", Offset = "0x9E8194", VA = "0x9E8194")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x9E820C", Offset = "0x9E820C", VA = "0x9E820C")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x9E8284", Offset = "0x9E8284", VA = "0x9E8284")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x9E82FC", Offset = "0x9E82FC", VA = "0x9E82FC")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x9E8374", Offset = "0x9E8374", VA = "0x9E8374")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x9E8428", Offset = "0x9E8428", VA = "0x9E8428")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x9E84E4", Offset = "0x9E84E4", VA = "0x9E84E4")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x9E86D4", Offset = "0x9E86D4", VA = "0x9E86D4")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x9E874C", Offset = "0x9E874C", VA = "0x9E874C")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x9E8A58", Offset = "0x9E8A58", VA = "0x9E8A58")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x9E8D40", Offset = "0x9E8D40", VA = "0x9E8D40")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x9E9054", Offset = "0x9E9054", VA = "0x9E9054")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x9E9748", Offset = "0x9E9748", VA = "0x9E9748")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x9E984C", Offset = "0x9E984C", VA = "0x9E984C")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x9E9D50", Offset = "0x9E9D50", VA = "0x9E9D50")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x9E9E54", Offset = "0x9E9E54", VA = "0x9E9E54")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x9E9F58", Offset = "0x9E9F58", VA = "0x9E9F58")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x9EA05C", Offset = "0x9EA05C", VA = "0x9EA05C")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x9EA160", Offset = "0x9EA160", VA = "0x9EA160")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x9EA264", Offset = "0x9EA264", VA = "0x9EA264")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x9EA368", Offset = "0x9EA368", VA = "0x9EA368")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x9EA46C", Offset = "0x9EA46C", VA = "0x9EA46C")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x9EA570", Offset = "0x9EA570", VA = "0x9EA570")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x9EA628", Offset = "0x9EA628", VA = "0x9EA628")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x9EA62C", Offset = "0x9EA62C", VA = "0x9EA62C")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x9EA630", Offset = "0x9EA630", VA = "0x9EA630")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x9EA634", Offset = "0x9EA634", VA = "0x9EA634")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x9EA970", Offset = "0x9EA970", VA = "0x9EA970")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x9EAACC", Offset = "0x9EAACC", VA = "0x9EAACC")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x9EAC2C", Offset = "0x9EAC2C", VA = "0x9EAC2C")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x9EA788", Offset = "0x9EA788", VA = "0x9EA788")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x9EAD8C", Offset = "0x9EAD8C", VA = "0x9EAD8C")]
	private void HideToast()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x9EAE3C", Offset = "0x9EAE3C", VA = "0x9EAE3C")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x9E99A0", Offset = "0x9E99A0", VA = "0x9E99A0")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x9E6A7C", Offset = "0x9E6A7C", VA = "0x9E6A7C")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x9E6538", Offset = "0x9E6538", VA = "0x9E6538")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x9EAE50", Offset = "0x9EAE50", VA = "0x9EAE50")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x9EB008", Offset = "0x9EB008", VA = "0x9EB008")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x9EB138", Offset = "0x9EB138", VA = "0x9EB138")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x9EB278", Offset = "0x9EB278", VA = "0x9EB278")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x200001F")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539380", Offset = "0x539380")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600240E")]
			[Address(RVA = "0xA56948", Offset = "0xA56948", VA = "0xA56948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002410")]
			[Address(RVA = "0xA569B8", Offset = "0xA569B8", VA = "0xA569B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xA563F8", Offset = "0xA563F8", VA = "0xA563F8")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xA56854", Offset = "0xA56854", VA = "0xA56854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xA56858", Offset = "0xA56858", VA = "0xA56858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xA56950", Offset = "0xA56950", VA = "0xA56950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xA55EAC", Offset = "0xA55EAC", VA = "0xA55EAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xA5609C", Offset = "0xA5609C", VA = "0xA5609C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xA56190", Offset = "0xA56190", VA = "0xA56190")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xA56204", Offset = "0xA56204", VA = "0xA56204")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xA5635C", Offset = "0xA5635C", VA = "0xA5635C")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xA56194", Offset = "0xA56194", VA = "0xA56194")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xA56360", Offset = "0xA56360", VA = "0xA56360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E59C", Offset = "0x54E59C")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xA56424", Offset = "0xA56424", VA = "0xA56424")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xA5656C", Offset = "0xA5656C", VA = "0xA5656C")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xA56844", Offset = "0xA56844", VA = "0xA56844")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000020")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xA569C0", Offset = "0xA569C0", VA = "0xA569C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xA56AB8", Offset = "0xA56AB8", VA = "0xA56AB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xA56AF0", Offset = "0xA56AF0", VA = "0xA56AF0")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xA56C60", Offset = "0xA56C60", VA = "0xA56C60")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000021")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xA56C68", Offset = "0xA56C68", VA = "0xA56C68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xA56CC0", Offset = "0xA56CC0", VA = "0xA56CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xA56D40", Offset = "0xA56D40", VA = "0xA56D40")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xA56D78", Offset = "0xA56D78", VA = "0xA56D78")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xA57138", Offset = "0xA57138", VA = "0xA57138")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x2000022")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x20003D6")]
	public enum TipBtn
	{
		[Token(Token = "0x4001619")]
		app,
		[Token(Token = "0x400161A")]
		touchpad,
		[Token(Token = "0x400161B")]
		home,
		[Token(Token = "0x400161C")]
		volup,
		[Token(Token = "0x400161D")]
		voldown,
		[Token(Token = "0x400161E")]
		trigger,
		[Token(Token = "0x400161F")]
		grip
	}

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xA5C958", Offset = "0xA5C958", VA = "0xA5C958")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xA5CB20", Offset = "0xA5CB20", VA = "0xA5CB20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xA5CBA0", Offset = "0xA5CBA0", VA = "0xA5CBA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xA5CE40", Offset = "0xA5CE40", VA = "0xA5CE40")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xA5D394", Offset = "0xA5D394", VA = "0xA5D394")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xA5D440", Offset = "0xA5D440", VA = "0xA5D440")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x2000023")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xA5D448", Offset = "0xA5D448", VA = "0xA5D448")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xA5D4EC", Offset = "0xA5D4EC", VA = "0xA5D4EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xA5DA48", Offset = "0xA5DA48", VA = "0xA5DA48")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xA5D67C", Offset = "0xA5D67C", VA = "0xA5D67C")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xA5DC44", Offset = "0xA5DC44", VA = "0xA5DC44")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xA5DFF8", Offset = "0xA5DFF8", VA = "0xA5DFF8")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xA5E3E0", Offset = "0xA5E3E0", VA = "0xA5E3E0")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xA5D7D8", Offset = "0xA5D7D8", VA = "0xA5D7D8")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xA5DB34", Offset = "0xA5DB34", VA = "0xA5DB34")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xA5D518", Offset = "0xA5D518", VA = "0xA5D518")]
	private void Process()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xA5E41C", Offset = "0xA5E41C", VA = "0xA5E41C")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xA5E648", Offset = "0xA5E648", VA = "0xA5E648")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xA5E73C", Offset = "0xA5E73C", VA = "0xA5E73C")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x2000024")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xA5E7F8", Offset = "0xA5E7F8", VA = "0xA5E7F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xA5E8B8", Offset = "0xA5E8B8", VA = "0xA5E8B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xA5E8F0", Offset = "0xA5E8F0", VA = "0xA5E8F0")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xA5EA20", Offset = "0xA5EA20", VA = "0xA5EA20")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x2000025")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x20003D7")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539390", Offset = "0x539390")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x769948", Offset = "0x769948", VA = "0x769948")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x76A2EC", Offset = "0x76A2EC", VA = "0x76A2EC")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x768FC8", Offset = "0x768FC8", VA = "0x768FC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x769228", Offset = "0x769228", VA = "0x769228")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x7697C4", Offset = "0x7697C4", VA = "0x7697C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x7692FC", Offset = "0x7692FC", VA = "0x7692FC")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x769950", Offset = "0x769950", VA = "0x769950")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x769D14", Offset = "0x769D14", VA = "0x769D14")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x769CBC", Offset = "0x769CBC", VA = "0x769CBC")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x769D58", Offset = "0x769D58", VA = "0x769D58")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x769E7C", Offset = "0x769E7C", VA = "0x769E7C")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x76A1E4", Offset = "0x76A1E4", VA = "0x76A1E4")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x76A2E4", Offset = "0x76A2E4", VA = "0x76A2E4")]
	public DemoController()
	{
	}
}
[Token(Token = "0x2000026")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x6000205")]
	[Address(RVA = "0x85B980", Offset = "0x85B980", VA = "0x85B980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x85B984", Offset = "0x85B984", VA = "0x85B984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x85BA08", Offset = "0x85BA08", VA = "0x85BA08")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x2000027")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x20003D9")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5393A0", Offset = "0x5393A0")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x773948", Offset = "0x773948", VA = "0x773948")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x77498C", Offset = "0x77498C", VA = "0x77498C")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x772DFC", Offset = "0x772DFC", VA = "0x772DFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x773940", Offset = "0x773940", VA = "0x773940")]
	private void Start()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x773944", Offset = "0x773944", VA = "0x773944")]
	private void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x772E00", Offset = "0x772E00", VA = "0x772E00")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x773950", Offset = "0x773950", VA = "0x773950")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x7747D8", Offset = "0x7747D8", VA = "0x7747D8")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x773C54", Offset = "0x773C54", VA = "0x773C54")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x774324", Offset = "0x774324", VA = "0x774324")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x774904", Offset = "0x774904", VA = "0x774904")]
	public InputManager()
	{
	}
}
[Token(Token = "0x2000028")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x75ECC0", Offset = "0x75ECC0", VA = "0x75ECC0")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x75F504", Offset = "0x75F504", VA = "0x75F504")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x75F7B4", Offset = "0x75F7B4", VA = "0x75F7B4")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x75EF48", Offset = "0x75EF48", VA = "0x75EF48")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x75F898", Offset = "0x75F898", VA = "0x75F898")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x75F8E4", Offset = "0x75F8E4", VA = "0x75F8E4")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x75F9EC", Offset = "0x75F9EC", VA = "0x75F9EC")]
	public Callback()
	{
	}
}
[Token(Token = "0x2000029")]
public class CommonDic
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x17000020")]
	public string subject
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x76665C", Offset = "0x76665C", VA = "0x76665C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x7665AC", Offset = "0x7665AC", VA = "0x7665AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public string body
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x766664", Offset = "0x766664", VA = "0x766664")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x7665B4", Offset = "0x7665B4", VA = "0x7665B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public string order_id
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x76666C", Offset = "0x76666C", VA = "0x76666C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x7665BC", Offset = "0x7665BC", VA = "0x7665BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public string total
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x766674", Offset = "0x766674", VA = "0x766674")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x7665C4", Offset = "0x7665C4", VA = "0x7665C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public string goods_tag
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x76667C", Offset = "0x76667C", VA = "0x76667C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x7665CC", Offset = "0x7665CC", VA = "0x7665CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public string notify_url
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x766684", Offset = "0x766684", VA = "0x766684")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x7665D4", Offset = "0x7665D4", VA = "0x7665D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public string pay_code
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x76668C", Offset = "0x76668C", VA = "0x76668C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x7665E4", Offset = "0x7665E4", VA = "0x7665E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public string trade_type
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x766694", Offset = "0x766694", VA = "0x766694")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x7665DC", Offset = "0x7665DC", VA = "0x7665DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public string user_token
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x76669C", Offset = "0x76669C", VA = "0x76669C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x7666A4", Offset = "0x7666A4", VA = "0x7666A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public string access_token
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x7666AC", Offset = "0x7666AC", VA = "0x7666AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x7666B4", Offset = "0x7666B4", VA = "0x7666B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public string open_id
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x7666BC", Offset = "0x7666BC", VA = "0x7666BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x7666C4", Offset = "0x7666C4", VA = "0x7666C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public string refresh_token
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x7666CC", Offset = "0x7666CC", VA = "0x7666CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x7666D4", Offset = "0x7666D4", VA = "0x7666D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public string expires_in
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x7666DC", Offset = "0x7666DC", VA = "0x7666DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x7666E4", Offset = "0x7666E4", VA = "0x7666E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public string isSuccess
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x7666EC", Offset = "0x7666EC", VA = "0x7666EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x75F4F4", Offset = "0x75F4F4", VA = "0x75F4F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public string loginMsg
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x7666F4", Offset = "0x7666F4", VA = "0x7666F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x75F4FC", Offset = "0x75F4FC", VA = "0x75F4FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public string user_info
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x7666FC", Offset = "0x7666FC", VA = "0x7666FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x75F890", Offset = "0x75F890", VA = "0x75F890")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public string order_info
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x766704", Offset = "0x766704", VA = "0x766704")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x75F7AC", Offset = "0x75F7AC", VA = "0x75F7AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public string code
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x76670C", Offset = "0x76670C", VA = "0x76670C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x75F79C", Offset = "0x75F79C", VA = "0x75F79C")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public string msg
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x766714", Offset = "0x766714", VA = "0x766714")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x75F7A4", Offset = "0x75F7A4", VA = "0x75F7A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public string app_ID
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x76671C", Offset = "0x76671C", VA = "0x76671C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x766724", Offset = "0x766724", VA = "0x766724")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public string app_Key
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x76672C", Offset = "0x76672C", VA = "0x76672C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x766734", Offset = "0x766734", VA = "0x766734")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public string merchant_ID
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x76673C", Offset = "0x76673C", VA = "0x76673C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x766744", Offset = "0x766744", VA = "0x766744")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public string paykey
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x76674C", Offset = "0x76674C", VA = "0x76674C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024A")]
		[Address(RVA = "0x766754", Offset = "0x766754", VA = "0x766754")]
		set
		{
		}
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x75F430", Offset = "0x75F430", VA = "0x75F430")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x7663AC", Offset = "0x7663AC", VA = "0x7663AC")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x7663FC", Offset = "0x7663FC", VA = "0x7663FC")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x7665EC", Offset = "0x7665EC", VA = "0x7665EC")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x765BD0", Offset = "0x765BD0", VA = "0x765BD0")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x765B64", Offset = "0x765B64", VA = "0x765B64")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x200002A")]
public class LoginSDK
{
	[Token(Token = "0x600024D")]
	[Address(RVA = "0x85CC90", Offset = "0x85CC90", VA = "0x85CC90")]
	public static void Login()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x85CCF0", Offset = "0x85CCF0", VA = "0x85CCF0")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x85CD50", Offset = "0x85CD50", VA = "0x85CD50")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x200002B")]
public class PicoPaymentSDK
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000037")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x9C471C", Offset = "0x9C471C", VA = "0x9C471C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x9C4784", Offset = "0x9C4784", VA = "0x9C4784")]
		set
		{
		}
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x9C47F0", Offset = "0x9C47F0", VA = "0x9C47F0")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x9C4994", Offset = "0x9C4994", VA = "0x9C4994")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x9C4B94", Offset = "0x9C4B94", VA = "0x9C4B94")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x9C4D94", Offset = "0x9C4D94", VA = "0x9C4D94")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x9C4F38", Offset = "0x9C4F38", VA = "0x9C4F38")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x200002C")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xA5C42C", Offset = "0xA5C42C", VA = "0xA5C42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xA5C464", Offset = "0xA5C464", VA = "0xA5C464")]
	private void Start()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xA5C474", Offset = "0xA5C474", VA = "0xA5C474")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xA5C430", Offset = "0xA5C430", VA = "0xA5C430")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xA5C46C", Offset = "0xA5C46C", VA = "0xA5C46C")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xA5C47C", Offset = "0xA5C47C", VA = "0xA5C47C")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xA5C484", Offset = "0xA5C484", VA = "0xA5C484")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xA5C534", Offset = "0xA5C534", VA = "0xA5C534")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xA5C5C4", Offset = "0xA5C5C4", VA = "0xA5C5C4")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xA5C654", Offset = "0xA5C654", VA = "0xA5C654")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xA5C6E4", Offset = "0xA5C6E4", VA = "0xA5C6E4")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xA5C764", Offset = "0xA5C764", VA = "0xA5C764")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xA5C814", Offset = "0xA5C814", VA = "0xA5C814")]
	public void AppManager()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xA5C8A0", Offset = "0xA5C8A0", VA = "0xA5C8A0")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xA5C950", Offset = "0xA5C950", VA = "0xA5C950")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x200002D")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x8932E4", Offset = "0x8932E4", VA = "0x8932E4")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x893350", Offset = "0x893350", VA = "0x893350")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x8933F8", Offset = "0x8933F8", VA = "0x8933F8")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x8934A0", Offset = "0x8934A0", VA = "0x8934A0")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x893548", Offset = "0x893548", VA = "0x893548")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x8935B0", Offset = "0x8935B0", VA = "0x8935B0")]
	public PLOG()
	{
	}
}
[Token(Token = "0x200002E")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x75ECB8", Offset = "0x75ECB8", VA = "0x75ECB8")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x7B5938", Offset = "0x7B5938", VA = "0x7B5938")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x7B598C", Offset = "0x7B598C", VA = "0x7B598C")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x2000030")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x20003DB")]
	public enum simulationType
	{
		[Token(Token = "0x4001625")]
		Null,
		[Token(Token = "0x4001626")]
		Invalid,
		[Token(Token = "0x4001627")]
		Valid
	}

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000038")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0x7B49D8", Offset = "0x7B49D8", VA = "0x7B49D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x7B4A04", Offset = "0x7B4A04", VA = "0x7B4A04")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x7B418C", Offset = "0x7B418C", VA = "0x7B418C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x7B4A5C", Offset = "0x7B4A5C", VA = "0x7B4A5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x7B41B8", Offset = "0x7B41B8", VA = "0x7B41B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x7B4AB4", Offset = "0x7B4AB4", VA = "0x7B4AB4")]
		set
		{
		}
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x7B4B08", Offset = "0x7B4B08", VA = "0x7B4B08")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000031")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x20003DC")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5393B0", Offset = "0x5393B0")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002424")]
			[Address(RVA = "0x7B4478", Offset = "0x7B4478", VA = "0x7B4478", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002426")]
			[Address(RVA = "0x7B44E8", Offset = "0x7B44E8", VA = "0x7B44E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x7B42E8", Offset = "0x7B42E8", VA = "0x7B42E8")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x7B4314", Offset = "0x7B4314", VA = "0x7B4314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x7B4318", Offset = "0x7B4318", VA = "0x7B4318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x7B4480", Offset = "0x7B4480", VA = "0x7B4480", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5393C0", Offset = "0x5393C0")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x7B2B9C", Offset = "0x7B2B9C", VA = "0x7B2B9C")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x7B2BA4", Offset = "0x7B2BA4", VA = "0x7B2BA4")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5393D0", Offset = "0x5393D0")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600242C")]
			[Address(RVA = "0x7B2D20", Offset = "0x7B2D20", VA = "0x7B2D20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600242E")]
			[Address(RVA = "0x7B2D90", Offset = "0x7B2D90", VA = "0x7B2D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x7B2C30", Offset = "0x7B2C30", VA = "0x7B2C30")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x7B2C5C", Offset = "0x7B2C5C", VA = "0x7B2C5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x7B2C60", Offset = "0x7B2C60", VA = "0x7B2C60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x7B2D28", Offset = "0x7B2D28", VA = "0x7B2D28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5393E0", Offset = "0x5393E0")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002432")]
			[Address(RVA = "0x7B4270", Offset = "0x7B4270", VA = "0x7B4270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002434")]
			[Address(RVA = "0x7B42E0", Offset = "0x7B42E0", VA = "0x7B42E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x7B3E80", Offset = "0x7B3E80", VA = "0x7B3E80")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x7B3EAC", Offset = "0x7B3EAC", VA = "0x7B3EAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x7B3EB0", Offset = "0x7B3EB0", VA = "0x7B3EB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x7B4278", Offset = "0x7B4278", VA = "0x7B4278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5393F0", Offset = "0x5393F0")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002438")]
			[Address(RVA = "0x7B3184", Offset = "0x7B3184", VA = "0x7B3184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600243A")]
			[Address(RVA = "0x7B31F4", Offset = "0x7B31F4", VA = "0x7B31F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x7B2D98", Offset = "0x7B2D98", VA = "0x7B2D98")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x7B2DC4", Offset = "0x7B2DC4", VA = "0x7B2DC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x7B2DC8", Offset = "0x7B2DC8", VA = "0x7B2DC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x7B318C", Offset = "0x7B318C", VA = "0x7B318C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539400", Offset = "0x539400")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600243E")]
			[Address(RVA = "0x7B3E08", Offset = "0x7B3E08", VA = "0x7B3E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002440")]
			[Address(RVA = "0x7B3E78", Offset = "0x7B3E78", VA = "0x7B3E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x7B31FC", Offset = "0x7B31FC", VA = "0x7B31FC")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x7B3228", Offset = "0x7B3228", VA = "0x7B3228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x7B322C", Offset = "0x7B322C", VA = "0x7B322C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x7B3E10", Offset = "0x7B3E10", VA = "0x7B3E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A548", Offset = "0x53A548")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x1700003B")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xB2C3CC", Offset = "0xB2C3CC", VA = "0xB2C3CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003C")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xB423F4", Offset = "0xB423F4", VA = "0xB423F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xB423FC", Offset = "0xB423FC", VA = "0xB423FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xB4241C", Offset = "0xB4241C", VA = "0xB4241C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xB42424", Offset = "0xB42424", VA = "0xB42424")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xB42444", Offset = "0xB42444", VA = "0xB42444")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xB4244C", Offset = "0xB4244C", VA = "0xB4244C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xB4246C", Offset = "0xB4246C", VA = "0xB4246C")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xB42474", Offset = "0xB42474", VA = "0xB42474")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xB3BB08", Offset = "0xB3BB08", VA = "0xB3BB08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xB39C00", Offset = "0xB39C00", VA = "0xB39C00")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xB4252C", Offset = "0xB4252C", VA = "0xB4252C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E600", Offset = "0x54E600")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xB38B14", Offset = "0xB38B14", VA = "0xB38B14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E610", Offset = "0x54E610")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xB42534", Offset = "0xB42534", VA = "0xB42534")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xB4253C", Offset = "0xB4253C", VA = "0xB4253C")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public bool PVRNeck
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xB4255C", Offset = "0xB4255C", VA = "0xB4255C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xB42564", Offset = "0xB42564", VA = "0xB42564")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xB3B2AC", Offset = "0xB3B2AC", VA = "0xB3B2AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xB42584", Offset = "0xB42584", VA = "0xB42584")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xB425AC", Offset = "0xB425AC", VA = "0xB425AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E620", Offset = "0x54E620")]
		add
		{
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xB426DC", Offset = "0xB426DC", VA = "0xB426DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E630", Offset = "0x54E630")]
		remove
		{
		}
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xB42490", Offset = "0xB42490", VA = "0xB42490")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xB3B274", Offset = "0xB3B274", VA = "0xB3B274")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xB424F0", Offset = "0xB424F0", VA = "0xB424F0")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xB4280C", Offset = "0xB4280C", VA = "0xB4280C")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xB42964", Offset = "0xB42964", VA = "0xB42964")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xB42AA0", Offset = "0xB42AA0", VA = "0xB42AA0")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xB434C4", Offset = "0xB434C4", VA = "0xB434C4")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xB43920", Offset = "0xB43920", VA = "0xB43920")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xB43BFC", Offset = "0xB43BFC", VA = "0xB43BFC")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xB42EFC", Offset = "0xB42EFC", VA = "0xB42EFC")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xB43D3C", Offset = "0xB43D3C", VA = "0xB43D3C")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xB433F0", Offset = "0xB433F0", VA = "0xB433F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E640", Offset = "0x54E640")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xB43D40", Offset = "0xB43D40", VA = "0xB43D40")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xB43EF4", Offset = "0xB43EF4", VA = "0xB43EF4")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xB452B8", Offset = "0xB452B8", VA = "0xB452B8")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xB453E4", Offset = "0xB453E4", VA = "0xB453E4")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xB4434C", Offset = "0xB4434C", VA = "0xB4434C")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xB44994", Offset = "0xB44994", VA = "0xB44994")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xB44EC4", Offset = "0xB44EC4", VA = "0xB44EC4")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xB45590", Offset = "0xB45590", VA = "0xB45590")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xB45220", Offset = "0xB45220", VA = "0xB45220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E6A4", Offset = "0x54E6A4")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xB45918", Offset = "0xB45918", VA = "0xB45918")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xB45994", Offset = "0xB45994", VA = "0xB45994")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB428F0", Offset = "0xB428F0", VA = "0xB428F0")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xB45B70", Offset = "0xB45B70", VA = "0xB45B70")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xB45C20", Offset = "0xB45C20", VA = "0xB45C20")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xB45C28", Offset = "0xB45C28", VA = "0xB45C28")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xB45D40", Offset = "0xB45D40", VA = "0xB45D40")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xB45FF8", Offset = "0xB45FF8", VA = "0xB45FF8")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xB46148", Offset = "0xB46148", VA = "0xB46148")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xB462A0", Offset = "0xB462A0", VA = "0xB462A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xB4744C", Offset = "0xB4744C", VA = "0xB4744C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E708", Offset = "0x54E708")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xB474C0", Offset = "0xB474C0", VA = "0xB474C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E76C", Offset = "0x54E76C")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xB47520", Offset = "0xB47520", VA = "0xB47520")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xB477E0", Offset = "0xB477E0", VA = "0xB477E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xB47940", Offset = "0xB47940", VA = "0xB47940")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xB47A78", Offset = "0xB47A78", VA = "0xB47A78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB47A80", Offset = "0xB47A80", VA = "0xB47A80")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xB47BA8", Offset = "0xB47BA8", VA = "0xB47BA8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xB47E58", Offset = "0xB47E58", VA = "0xB47E58")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xB47B38", Offset = "0xB47B38", VA = "0xB47B38")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xB47F48", Offset = "0xB47F48", VA = "0xB47F48")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xB46C80", Offset = "0xB46C80", VA = "0xB46C80")]
	private void InitUI()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xB46F1C", Offset = "0xB46F1C", VA = "0xB46F1C")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xB468DC", Offset = "0xB468DC", VA = "0xB468DC")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xB47DE4", Offset = "0xB47DE4", VA = "0xB47DE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E7D0", Offset = "0x54E7D0")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xB47F50", Offset = "0xB47F50", VA = "0xB47F50")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x2000032")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x7C2250", Offset = "0x7C2250", VA = "0x7C2250")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x7C2254", Offset = "0x7C2254", VA = "0x7C2254")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x7C2280", Offset = "0x7C2280", VA = "0x7C2280")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x2000033")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x20003E3")]
	private class EyeMaskData
	{
		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xA64C84", Offset = "0xA64C84", VA = "0xA64C84")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xA62FC4", Offset = "0xA62FC4", VA = "0xA62FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xA63080", Offset = "0xA63080", VA = "0xA63080")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xA63D34", Offset = "0xA63D34", VA = "0xA63D34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xA6370C", Offset = "0xA6370C", VA = "0xA6370C")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xA64A64", Offset = "0xA64A64", VA = "0xA64A64")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xA64188", Offset = "0xA64188", VA = "0xA64188")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xA645F0", Offset = "0xA645F0", VA = "0xA645F0")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xA64044", Offset = "0xA64044", VA = "0xA64044")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xA63348", Offset = "0xA63348", VA = "0xA63348")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xA64C24", Offset = "0xA64C24", VA = "0xA64C24")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA63F70", Offset = "0xA63F70", VA = "0xA63F70")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA63FD0", Offset = "0xA63FD0", VA = "0xA63FD0")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA64C8C", Offset = "0xA64C8C", VA = "0xA64C8C")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x536244", Offset = "0x536244")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A5F8", Offset = "0x53A5F8")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x40001C4")]
	private const int bufferSize = 3;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x17000045")]
	public Camera eyecamera
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xB39CBC", Offset = "0xB39CBC", VA = "0xB39CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E834", Offset = "0x54E834")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xB39CC4", Offset = "0xB39CC4", VA = "0xB39CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E844", Offset = "0x54E844")]
		private set
		{
		}
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xB39CCC", Offset = "0xB39CCC", VA = "0xB39CCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xB39D74", Offset = "0xB39D74", VA = "0xB39D74")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xB3A440", Offset = "0xB3A440", VA = "0xB3A440")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xB3A720", Offset = "0xB3A720", VA = "0xB3A720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xB3A7EC", Offset = "0xB3A7EC", VA = "0xB3A7EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xB3A8B8", Offset = "0xB3A8B8", VA = "0xB3A8B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xB3A944", Offset = "0xB3A944", VA = "0xB3A944")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xB3AB7C", Offset = "0xB3AB7C", VA = "0xB3AB7C")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xB3AC40", Offset = "0xB3AC40", VA = "0xB3AC40")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xB3AA08", Offset = "0xB3AA08", VA = "0xB3AA08")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xB3AD04", Offset = "0xB3AD04", VA = "0xB3AD04")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xB3B090", Offset = "0xB3B090", VA = "0xB3B090")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xB39E64", Offset = "0xB39E64", VA = "0xB39E64")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xB3A0EC", Offset = "0xB3A0EC", VA = "0xB3A0EC")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xB30EF4", Offset = "0xB30EF4", VA = "0xB30EF4")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xB3B2B4", Offset = "0xB3B2B4", VA = "0xB3B2B4")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xB3B3E8", Offset = "0xB3B3E8", VA = "0xB3B3E8")]
	private void vignette()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xB3AEEC", Offset = "0xB3AEEC", VA = "0xB3AEEC")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xB3B668", Offset = "0xB3B668", VA = "0xB3B668")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x2000035")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539410", Offset = "0x539410")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002445")]
			[Address(RVA = "0xB408B0", Offset = "0xB408B0", VA = "0xB408B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002447")]
			[Address(RVA = "0xB40920", Offset = "0xB40920", VA = "0xB40920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xB3DA44", Offset = "0xB3DA44", VA = "0xB3DA44")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xB3E958", Offset = "0xB3E958", VA = "0xB3E958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xB3E95C", Offset = "0xB3E95C", VA = "0xB3E95C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xB408B8", Offset = "0xB408B8", VA = "0xB408B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539420", Offset = "0x539420")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600244B")]
			[Address(RVA = "0xB40A64", Offset = "0xB40A64", VA = "0xB40A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0xB40AD4", Offset = "0xB40AD4", VA = "0xB40AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xB3E894", Offset = "0xB3E894", VA = "0xB3E894")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xB40928", Offset = "0xB40928", VA = "0xB40928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xB4092C", Offset = "0xB4092C", VA = "0xB4092C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xB40A6C", Offset = "0xB40A6C", VA = "0xB40A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53A6E8", Offset = "0x53A6E8")]
	public bool screenFade;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53A720", Offset = "0x53A720")]
	public float fadeTime;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53A758", Offset = "0x53A758")]
	public Color fadeColor;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000046")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xB30D64", Offset = "0xB30D64", VA = "0xB30D64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xB30E5C", Offset = "0xB30E5C", VA = "0xB30E5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xB3B788", Offset = "0xB3B788", VA = "0xB3B788")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xB3B790", Offset = "0xB3B790", VA = "0xB3B790")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xB3B7F4", Offset = "0xB3B7F4", VA = "0xB3B7F4")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xB3B7FC", Offset = "0xB3B7FC", VA = "0xB3B7FC")]
		set
		{
		}
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xB3B810", Offset = "0xB3B810", VA = "0xB3B810")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xB3BB10", Offset = "0xB3BB10", VA = "0xB3BB10")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xB3BBF8", Offset = "0xB3BBF8", VA = "0xB3BBF8")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xB3BD5C", Offset = "0xB3BD5C", VA = "0xB3BD5C")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xB3BE80", Offset = "0xB3BE80", VA = "0xB3BE80")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xB3C064", Offset = "0xB3C064", VA = "0xB3C064")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xB3CAB4", Offset = "0xB3CAB4", VA = "0xB3CAB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xB3D2A8", Offset = "0xB3D2A8", VA = "0xB3D2A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xB3D2CC", Offset = "0xB3D2CC", VA = "0xB3D2CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xB3D634", Offset = "0xB3D634", VA = "0xB3D634")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xB3D75C", Offset = "0xB3D75C", VA = "0xB3D75C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB3D764", Offset = "0xB3D764", VA = "0xB3D764")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB3D8CC", Offset = "0xB3D8CC", VA = "0xB3D8CC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB3D9D0", Offset = "0xB3D9D0", VA = "0xB3D9D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E854", Offset = "0x54E854")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB3DA70", Offset = "0xB3DA70", VA = "0xB3DA70")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB3E0A0", Offset = "0xB3E0A0", VA = "0xB3E0A0")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB31E10", Offset = "0xB31E10", VA = "0xB31E10")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB3E3F8", Offset = "0xB3E3F8", VA = "0xB3E3F8")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB3C46C", Offset = "0xB3C46C", VA = "0xB3C46C")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB3D768", Offset = "0xB3D768", VA = "0xB3D768")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB3CAAC", Offset = "0xB3CAAC", VA = "0xB3CAAC")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB3D1F8", Offset = "0xB3D1F8", VA = "0xB3D1F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54E8B8", Offset = "0x54E8B8")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB3E6F4", Offset = "0xB3E6F4", VA = "0xB3E6F4")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB3D1F0", Offset = "0xB3D1F0", VA = "0xB3D1F0")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB3E8C0", Offset = "0xB3E8C0", VA = "0xB3E8C0")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x2000036")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x20003E6")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x20003E7")]
	public enum OverlayShape
	{
		[Token(Token = "0x400164E")]
		Quad,
		[Token(Token = "0x400164F")]
		Cylinder,
		[Token(Token = "0x4001650")]
		Equirect
	}

	[Token(Token = "0x20003E8")]
	public enum OverlayType
	{
		[Token(Token = "0x4001652")]
		Overlay,
		[Token(Token = "0x4001653")]
		Underlay
	}

	[Token(Token = "0x20003E9")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4001655")]
		NotCare,
		[Token(Token = "0x4001656")]
		Nearest,
		[Token(Token = "0x4001657")]
		Linear,
		[Token(Token = "0x4001658")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x4001659")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x400165A")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x400165B")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB40ADC", Offset = "0xB40ADC", VA = "0xB40ADC", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xB40B14", Offset = "0xB40B14", VA = "0xB40B14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xB4112C", Offset = "0xB4112C", VA = "0xB4112C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xB41824", Offset = "0xB41824", VA = "0xB41824")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xB3CEF8", Offset = "0xB3CEF8", VA = "0xB3CEF8")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB40F24", Offset = "0xB40F24", VA = "0xB40F24")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB41130", Offset = "0xB41130", VA = "0xB41130")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xB418B0", Offset = "0xB418B0", VA = "0xB418B0")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB41974", Offset = "0xB41974", VA = "0xB41974")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xB40830", Offset = "0xB40830", VA = "0xB40830")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB40870", Offset = "0xB40870", VA = "0xB40870")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB41988", Offset = "0xB41988", VA = "0xB41988")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x2000037")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A790", Offset = "0x53A790")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x1700004A")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x7B2F74", Offset = "0x7B2F74", VA = "0x7B2F74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x7B5AA4", Offset = "0x7B5AA4", VA = "0x7B5AA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x7B64A4", Offset = "0x7B64A4", VA = "0x7B64A4")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x1700004C")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x7B64AC", Offset = "0x7B64AC", VA = "0x7B64AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E91C", Offset = "0x54E91C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x7B64B4", Offset = "0x7B64B4", VA = "0x7B64B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E92C", Offset = "0x54E92C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x7B64BC", Offset = "0x7B64BC", VA = "0x7B64BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x7B64C4", Offset = "0x7B64C4", VA = "0x7B64C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x7B6664", Offset = "0x7B6664", VA = "0x7B6664")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x7B666C", Offset = "0x7B666C", VA = "0x7B666C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float EyeHFoV
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0x7B6680", Offset = "0x7B6680", VA = "0x7B6680")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x7B6688", Offset = "0x7B6688", VA = "0x7B6688")]
		set
		{
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x7B5994", Offset = "0x7B5994", VA = "0x7B5994")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x7B5B10", Offset = "0x7B5B10", VA = "0x7B5B10")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x7B6424", Offset = "0x7B6424", VA = "0x7B6424")]
	public void Init()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x7B6A40", Offset = "0x7B6A40", VA = "0x7B6A40")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x7B6B68", Offset = "0x7B6B68", VA = "0x7B6B68")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x7B6C1C", Offset = "0x7B6C1C", VA = "0x7B6C1C")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x7B76D0", Offset = "0x7B76D0", VA = "0x7B76D0")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x7B7034", Offset = "0x7B7034", VA = "0x7B7034")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x7B71A0", Offset = "0x7B71A0", VA = "0x7B71A0")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x7B78EC", Offset = "0x7B78EC", VA = "0x7B78EC")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x7B64DC", Offset = "0x7B64DC", VA = "0x7B64DC")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x7B4174", Offset = "0x7B4174", VA = "0x7B4174")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x7B3034", Offset = "0x7B3034", VA = "0x7B3034")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x7B7FD4", Offset = "0x7B7FD4", VA = "0x7B7FD4")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x7B730C", Offset = "0x7B730C", VA = "0x7B730C")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x7B8298", Offset = "0x7B8298", VA = "0x7B8298")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x7B669C", Offset = "0x7B669C", VA = "0x7B669C")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000038")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x7BBC70", Offset = "0x7BBC70", VA = "0x7BBC70", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x7BC700", Offset = "0x7BC700", VA = "0x7BC700", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x7BC860", Offset = "0x7BC860", VA = "0x7BC860", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x7BD330", Offset = "0x7BD330", VA = "0x7BD330", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x7BC704", Offset = "0x7BC704", VA = "0x7BC704")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x7BD3E8", Offset = "0x7BD3E8", VA = "0x7BD3E8")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x7BC090", Offset = "0x7BC090", VA = "0x7BC090")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x7BC58C", Offset = "0x7BC58C", VA = "0x7BC58C")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x7BD4F0", Offset = "0x7BD4F0", VA = "0x7BD4F0")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x7BD7C8", Offset = "0x7BD7C8", VA = "0x7BD7C8")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x7BD5C4", Offset = "0x7BD5C4", VA = "0x7BD5C4")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x7BD338", Offset = "0x7BD338", VA = "0x7BD338")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x7BD9B0", Offset = "0x7BD9B0", VA = "0x7BD9B0")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x7BC864", Offset = "0x7BC864", VA = "0x7BC864")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x7BDCEC", Offset = "0x7BDCEC", VA = "0x7BDCEC")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x7BDC34", Offset = "0x7BDC34", VA = "0x7BDC34")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x7B7F2C", Offset = "0x7B7F2C", VA = "0x7B7F2C")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x2000039")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x600033F")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x6000340")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000341")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000342")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x7BE4E0", Offset = "0x7BE4E0", VA = "0x7BE4E0")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x200003A")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x772AE4", Offset = "0x772AE4", VA = "0x772AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x772B7C", Offset = "0x772B7C", VA = "0x772B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x772DBC", Offset = "0x772DBC", VA = "0x772DBC")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x200003B")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x7C34C0", Offset = "0x7C34C0", VA = "0x7C34C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x7C3578", Offset = "0x7C3578", VA = "0x7C3578")]
	private void Update()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x7C375C", Offset = "0x7C375C", VA = "0x7C375C")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x200003C")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x771298", Offset = "0x771298", VA = "0x771298")]
	private void Start()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x7713E4", Offset = "0x7713E4", VA = "0x7713E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x771470", Offset = "0x771470", VA = "0x771470")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x77129C", Offset = "0x77129C", VA = "0x77129C")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x771420", Offset = "0x771420", VA = "0x771420")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x771488", Offset = "0x771488", VA = "0x771488")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x200003D")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539430", Offset = "0x539430")]
	private sealed class <>c
	{
		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x893270", Offset = "0x893270", VA = "0x893270")]
		public <>c()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x893278", Offset = "0x893278", VA = "0x893278")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x400023A")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x892E28", Offset = "0x892E28", VA = "0x892E28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x892F74", Offset = "0x892F74", VA = "0x892F74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x892FF8", Offset = "0x892FF8", VA = "0x892FF8")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x893204", Offset = "0x893204", VA = "0x893204")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x200003E")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x8610E8", Offset = "0x8610E8", VA = "0x8610E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x861158", Offset = "0x861158", VA = "0x861158")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x8611F0", Offset = "0x8611F0", VA = "0x8611F0")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5362A8", Offset = "0x5362A8")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x8611F8", Offset = "0x8611F8", VA = "0x8611F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x8613EC", Offset = "0x8613EC", VA = "0x8613EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x861318", Offset = "0x861318", VA = "0x861318")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x8613F0", Offset = "0x8613F0", VA = "0x8613F0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x861560", Offset = "0x861560", VA = "0x861560")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x861688", Offset = "0x861688", VA = "0x861688")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x2000040")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x600035D")]
	[Address(RVA = "0x7C3764", Offset = "0x7C3764", VA = "0x7C3764")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x7C3800", Offset = "0x7C3800", VA = "0x7C3800")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x2000041")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x600035F")]
	[Address(RVA = "0x7A3C3C", Offset = "0x7A3C3C", VA = "0x7A3C3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x7A3CD0", Offset = "0x7A3CD0", VA = "0x7A3CD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x7A3D64", Offset = "0x7A3D64", VA = "0x7A3D64")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x7A4030", Offset = "0x7A4030", VA = "0x7A4030")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000042")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53A7A0", Offset = "0x53A7A0")]
	public bool trackRotation;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53A7D8", Offset = "0x53A7D8")]
	public bool trackPosition;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x17000050")]
	public Ray Gaze
	{
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xB41D68", Offset = "0xB41D68", VA = "0xB41D68")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xB423DC", Offset = "0xB423DC", VA = "0xB423DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xB41E20", Offset = "0xB41E20", VA = "0xB41E20")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xB423E4", Offset = "0xB423E4", VA = "0xB423E4")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x2000043")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A810", Offset = "0x53A810")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A820", Offset = "0x53A820")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A830", Offset = "0x53A830")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x17000051")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x7B521C", Offset = "0x7B521C", VA = "0x7B521C")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x17000052")]
	public Vector3 Position
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x7B53AC", Offset = "0x7B53AC", VA = "0x7B53AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E93C", Offset = "0x54E93C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x7B53B8", Offset = "0x7B53B8", VA = "0x7B53B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E94C", Offset = "0x54E94C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public Quaternion Orientation
	{
		[Token(Token = "0x600036A")]
		[Address(RVA = "0x7B53C4", Offset = "0x7B53C4", VA = "0x7B53C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E95C", Offset = "0x54E95C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x7B53D0", Offset = "0x7B53D0", VA = "0x7B53D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E96C", Offset = "0x54E96C")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x7B5388", Offset = "0x7B5388", VA = "0x7B5388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E97C", Offset = "0x54E97C")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x600036D")]
		[Address(RVA = "0x7B53DC", Offset = "0x7B53DC", VA = "0x7B53DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E98C", Offset = "0x54E98C")]
		protected set
		{
		}
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x7B53F8", Offset = "0x7B53F8", VA = "0x7B53F8")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x7B55C0", Offset = "0x7B55C0", VA = "0x7B55C0")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x7B5640", Offset = "0x7B5640", VA = "0x7B5640")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x7B5454", Offset = "0x7B5454", VA = "0x7B5454")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x7B5780", Offset = "0x7B5780", VA = "0x7B5780")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000044")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x20003EB")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x20003EC")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x17000055")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x7B3880", Offset = "0x7B3880", VA = "0x7B3880")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000375")]
		[Address(RVA = "0x7B8360", Offset = "0x7B8360", VA = "0x7B8360")]
		set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x7B8500", Offset = "0x7B8500", VA = "0x7B8500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E99C", Offset = "0x54E99C")]
		add
		{
		}
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x7B8630", Offset = "0x7B8630", VA = "0x7B8630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E9AC", Offset = "0x54E9AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x7B8760", Offset = "0x7B8760", VA = "0x7B8760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E9BC", Offset = "0x54E9BC")]
		add
		{
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x7B8890", Offset = "0x7B8890", VA = "0x7B8890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E9CC", Offset = "0x54E9CC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x7B82A4", Offset = "0x7B82A4", VA = "0x7B82A4")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x7B83CC", Offset = "0x7B83CC", VA = "0x7B83CC")]
	public void Init()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x7B8D88", Offset = "0x7B8D88", VA = "0x7B8D88")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x7B8C40", Offset = "0x7B8C40", VA = "0x7B8C40")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x7B89C0", Offset = "0x7B89C0", VA = "0x7B89C0")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x7B3940", Offset = "0x7B3940", VA = "0x7B3940")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x7B9F7C", Offset = "0x7B9F7C", VA = "0x7B9F7C")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x7B3A88", Offset = "0x7B3A88", VA = "0x7B3A88")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x7B3C10", Offset = "0x7B3C10", VA = "0x7B3C10")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x7B8E28", Offset = "0x7B8E28", VA = "0x7B8E28")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x7BAB34", Offset = "0x7BAB34", VA = "0x7BAB34")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x7BA8C4", Offset = "0x7BA8C4", VA = "0x7BA8C4")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x2000045")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x75EC48", Offset = "0x75EC48", VA = "0x75EC48")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000046")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x20003ED")]
	public struct Lenses
	{
		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4001662")]
		public const int AlignTop = -1;

		[Token(Token = "0x4001663")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4001664")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x20003EE")]
	public struct MaxFOV
	{
		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x20003EF")]
	public struct Distortion
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x5C052C", Offset = "0x5C052C", VA = "0x5C052C")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x5C0534", Offset = "0x5C0534", VA = "0x5C0534")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x5C053C", Offset = "0x5C053C", VA = "0x5C053C")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20003F0")]
	public struct Device
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xB37D3C", Offset = "0xB37D3C", VA = "0xB37D3C")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xB37DD8", Offset = "0xB37DD8", VA = "0xB37DD8")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xB37E84", Offset = "0xB37E84", VA = "0xB37E84")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xB38218", Offset = "0xB38218", VA = "0xB38218")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xB3848C", Offset = "0xB3848C", VA = "0xB3848C")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xB37DD0", Offset = "0xB37DD0", VA = "0xB37DD0")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x53630C", Offset = "0x53630C")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xB41BC0", Offset = "0xB41BC0", VA = "0xB41BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xB41C48", Offset = "0xB41C48", VA = "0xB41C48")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xB41D58", Offset = "0xB41D58", VA = "0xB41D58")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x2000048")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xA57148", Offset = "0xA57148", VA = "0xA57148")]
	private void Start()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xA571A0", Offset = "0xA571A0", VA = "0xA571A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xA57374", Offset = "0xA57374", VA = "0xA57374")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xA57424", Offset = "0xA57424", VA = "0xA57424")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x2000049")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x20003F1")]
	public enum Mode
	{
		[Token(Token = "0x4001674")]
		Click,
		[Token(Token = "0x4001675")]
		Gaze
	}

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53A860", Offset = "0x53A860")]
	public string ClickInputName;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53A898", Offset = "0x53A898")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A8D0", Offset = "0x53A8D0")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A8E0", Offset = "0x53A8E0")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000056")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0xA57324", Offset = "0xA57324", VA = "0xA57324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E9DC", Offset = "0x54E9DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000397")]
		[Address(RVA = "0xA5742C", Offset = "0xA5742C", VA = "0xA5742C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E9EC", Offset = "0x54E9EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xA572D4", Offset = "0xA572D4", VA = "0xA572D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E9FC", Offset = "0x54E9FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000399")]
		[Address(RVA = "0xA57488", Offset = "0xA57488", VA = "0xA57488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EA0C", Offset = "0x54EA0C")]
		private set
		{
		}
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xA574DC", Offset = "0xA574DC", VA = "0xA574DC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xA57500", Offset = "0xA57500", VA = "0xA57500")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xA57740", Offset = "0xA57740", VA = "0xA57740")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xA57BD8", Offset = "0xA57BD8", VA = "0xA57BD8")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x536370", Offset = "0x536370")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53A8F0", Offset = "0x53A8F0")]
	public Transform Crosshair;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xA57C38", Offset = "0xA57C38", VA = "0xA57C38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xA57C90", Offset = "0xA57C90", VA = "0xA57C90")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xA57D24", Offset = "0xA57D24", VA = "0xA57D24")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xA57E5C", Offset = "0xA57E5C", VA = "0xA57E5C")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xA57F84", Offset = "0xA57F84", VA = "0xA57F84")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x200004B")]
public enum RenderEventType
{
	[Token(Token = "0x4000283")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000284")]
	Pause,
	[Token(Token = "0x4000285")]
	Resume,
	[Token(Token = "0x4000286")]
	LeftEyeEndFrame,
	[Token(Token = "0x4000287")]
	RightEyeEndFrame,
	[Token(Token = "0x4000288")]
	TimeWarp,
	[Token(Token = "0x4000289")]
	ResetVrModeParms,
	[Token(Token = "0x400028A")]
	ShutdownRenderThread,
	[Token(Token = "0x400028B")]
	BeginEye,
	[Token(Token = "0x400028C")]
	EndEye,
	[Token(Token = "0x400028D")]
	BoundaryRenderLeft,
	[Token(Token = "0x400028E")]
	BoundaryRenderRight,
	[Token(Token = "0x400028F")]
	BothEyeEndFrame,
	[Token(Token = "0x4000290")]
	CameraFrameLeft,
	[Token(Token = "0x4000291")]
	CameraFrameRight,
	[Token(Token = "0x4000292")]
	StartCameraFrame,
	[Token(Token = "0x4000293")]
	StopCameraFrame
}
[Token(Token = "0x200004C")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x20003F2")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000294")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000295")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4000296")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x4000297")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x4000298")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x4000299")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x400029A")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x7B4B80", Offset = "0x7B4B80", VA = "0x7B4B80")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x7B4BAC", Offset = "0x7B4BAC", VA = "0x7B4BAC")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x7B4BB4", Offset = "0x7B4BB4", VA = "0x7B4BB4")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x7B4BD4", Offset = "0x7B4BD4", VA = "0x7B4BD4")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x7B4B78", Offset = "0x7B4B78", VA = "0x7B4B78")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x54EA1C", Offset = "0x54EA1C")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x7B4BE8", Offset = "0x7B4BE8", VA = "0x7B4BE8")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x200004D")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53A928", Offset = "0x53A928")]
	public GameObject cursor;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x7BAD20", Offset = "0x7BAD20", VA = "0x7BAD20", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x7BADBC", Offset = "0x7BADBC", VA = "0x7BADBC", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x7BB114", Offset = "0x7BB114", VA = "0x7BB114", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x7BB1A4", Offset = "0x7BB1A4", VA = "0x7BB1A4", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x7BB1E0", Offset = "0x7BB1E0", VA = "0x7BB1E0")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x7BB388", Offset = "0x7BB388", VA = "0x7BB388")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x7BB584", Offset = "0x7BB584", VA = "0x7BB584")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x7BAEE4", Offset = "0x7BAEE4", VA = "0x7BAEE4")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x7BB87C", Offset = "0x7BB87C", VA = "0x7BB87C")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x7BBC1C", Offset = "0x7BBC1C", VA = "0x7BBC1C")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x200004E")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x40002A9")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x40002AA")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x40002AB")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000058")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xA5AD4C", Offset = "0xA5AD4C", VA = "0xA5AD4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xA5ADF8", Offset = "0xA5ADF8", VA = "0xA5ADF8")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xA5B390", Offset = "0xA5B390", VA = "0xA5B390")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xA5BBF4", Offset = "0xA5BBF4", VA = "0xA5BBF4")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xA5BDD4", Offset = "0xA5BDD4", VA = "0xA5BDD4")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xA5C2C0", Offset = "0xA5C2C0", VA = "0xA5C2C0")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xA5BF5C", Offset = "0xA5BF5C", VA = "0xA5BF5C")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xA5C23C", Offset = "0xA5C23C", VA = "0xA5C23C")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xA5ADF0", Offset = "0xA5ADF0", VA = "0xA5ADF0")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x200004F")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A980", Offset = "0x53A980")]
	private int <x>k__BackingField;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A990", Offset = "0x53A990")]
	private int <y>k__BackingField;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53A9A0", Offset = "0x53A9A0")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000059")]
	public int x
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x9CBD60", Offset = "0x9CBD60", VA = "0x9CBD60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EA80", Offset = "0x54EA80")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x9CBD68", Offset = "0x9CBD68", VA = "0x9CBD68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EA90", Offset = "0x54EA90")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public int y
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x9CBD70", Offset = "0x9CBD70", VA = "0x9CBD70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EAA0", Offset = "0x54EAA0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x9CBD78", Offset = "0x9CBD78", VA = "0x9CBD78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EAB0", Offset = "0x54EAB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public int z
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x9CBD80", Offset = "0x9CBD80", VA = "0x9CBD80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EAC0", Offset = "0x54EAC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x9CBD88", Offset = "0x9CBD88", VA = "0x9CBD88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EAD0", Offset = "0x54EAD0")]
		set
		{
		}
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x9CBD90", Offset = "0x9CBD90", VA = "0x9CBD90")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x9CBD98", Offset = "0x9CBD98", VA = "0x9CBD98")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000050")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xA57140", Offset = "0xA57140", VA = "0xA57140")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000051")]
public enum ConfirmBtn
{
	[Token(Token = "0x40002B1")]
	App = 1,
	[Token(Token = "0x40002B2")]
	TouchPad = 2,
	[Token(Token = "0x40002B3")]
	Trigger = 4
}
[Token(Token = "0x2000052")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xA57FE0", Offset = "0xA57FE0", VA = "0xA57FE0", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xA58064", Offset = "0xA58064", VA = "0xA58064")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xA58154", Offset = "0xA58154", VA = "0xA58154")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xA58244", Offset = "0xA58244", VA = "0xA58244", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xA58630", Offset = "0xA58630", VA = "0xA58630", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xA58730", Offset = "0xA58730", VA = "0xA58730", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xA58830", Offset = "0xA58830", VA = "0xA58830", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xA58988", Offset = "0xA58988", VA = "0xA58988", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xA58BEC", Offset = "0xA58BEC", VA = "0xA58BEC", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xA58CA8", Offset = "0xA58CA8", VA = "0xA58CA8", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xA58D48", Offset = "0xA58D48", VA = "0xA58D48", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xA59C30", Offset = "0xA59C30", VA = "0xA59C30", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xA59CCC", Offset = "0xA59CCC", VA = "0xA59CCC", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xA59DA4", Offset = "0xA59DA4", VA = "0xA59DA4", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xA59E9C", Offset = "0xA59E9C", VA = "0xA59E9C", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xA5A1D0", Offset = "0xA5A1D0", VA = "0xA5A1D0", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xA5A4F8", Offset = "0xA5A4F8", VA = "0xA5A4F8", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xA5AC60", Offset = "0xA5AC60", VA = "0xA5AC60")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000053")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539440", Offset = "0x539440")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002467")]
			[Address(RVA = "0xA5F848", Offset = "0xA5F848", VA = "0xA5F848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002469")]
			[Address(RVA = "0xA5F8B8", Offset = "0xA5F8B8", VA = "0xA5F8B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xA5EFD4", Offset = "0xA5EFD4", VA = "0xA5EFD4")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xA5F344", Offset = "0xA5F344", VA = "0xA5F344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xA5F348", Offset = "0xA5F348", VA = "0xA5F348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xA5F850", Offset = "0xA5F850", VA = "0xA5F850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x40002BD")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xA5EA28", Offset = "0xA5EA28", VA = "0xA5EA28", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xA5EA34", Offset = "0xA5EA34", VA = "0xA5EA34", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xA5EA40", Offset = "0xA5EA40", VA = "0xA5EA40", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xA5EA4C", Offset = "0xA5EA4C", VA = "0xA5EA4C", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xA5EF38", Offset = "0xA5EF38", VA = "0xA5EF38", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54EAE0", Offset = "0x54EAE0")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xA5F000", Offset = "0xA5F000", VA = "0xA5F000", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xA5F33C", Offset = "0xA5F33C", VA = "0xA5F33C")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x2000054")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x2000055")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x2000056")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000018")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xA5F8C0", Offset = "0xA5F8C0", VA = "0xA5F8C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EB44", Offset = "0x54EB44")]
		add
		{
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xA5F9AC", Offset = "0xA5F9AC", VA = "0xA5F9AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EB54", Offset = "0x54EB54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xA5FA98", Offset = "0xA5FA98", VA = "0xA5FA98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EB64", Offset = "0x54EB64")]
		add
		{
		}
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xA5FB84", Offset = "0xA5FB84", VA = "0xA5FB84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EB74", Offset = "0x54EB74")]
		remove
		{
		}
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xA5FC70", Offset = "0xA5FC70", VA = "0xA5FC70", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xA5FC94", Offset = "0xA5FC94", VA = "0xA5FC94", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xA5FCB8", Offset = "0xA5FCB8", VA = "0xA5FCB8", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xA5FF20", Offset = "0xA5FF20", VA = "0xA5FF20", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xA5FF2C", Offset = "0xA5FF2C", VA = "0xA5FF2C", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xA60414", Offset = "0xA60414", VA = "0xA60414", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xA60508", Offset = "0xA60508", VA = "0xA60508", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xA606C0", Offset = "0xA606C0", VA = "0xA606C0", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xA60A70", Offset = "0xA60A70", VA = "0xA60A70", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xA60B80", Offset = "0xA60B80", VA = "0xA60B80", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xA60B88", Offset = "0xA60B88", VA = "0xA60B88")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x2000057")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xA60B9C", Offset = "0xA60B9C", VA = "0xA60B9C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xA60CC8", Offset = "0xA60CC8", VA = "0xA60CC8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xA60D54", Offset = "0xA60D54", VA = "0xA60D54")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x2000058")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539450", Offset = "0x539450")]
	private sealed class <>c
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xA61E58", Offset = "0xA61E58", VA = "0xA61E58")]
		public <>c()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xA61E60", Offset = "0xA61E60", VA = "0xA61E60")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Canvas currentCanvas;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x40002D0")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x1700005C")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xA61C68", Offset = "0xA61C68", VA = "0xA61C68", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xA60D5C", Offset = "0xA60D5C", VA = "0xA60D5C", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xA60F70", Offset = "0xA60F70", VA = "0xA60F70", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xA612C8", Offset = "0xA612C8", VA = "0xA612C8", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xA61638", Offset = "0xA61638", VA = "0xA61638", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xA61D18", Offset = "0xA61D18", VA = "0xA61D18")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x2000059")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x200005A")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x200005B")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x20003F5")]
	public enum ClickMethods
	{
		[Token(Token = "0x400167D")]
		ClickOnButtonUp,
		[Token(Token = "0x400167E")]
		ClickOnButtonDown
	}

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001A")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xA61E70", Offset = "0xA61E70", VA = "0xA61E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EB84", Offset = "0x54EB84")]
		add
		{
		}
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xA61F5C", Offset = "0xA61F5C", VA = "0xA61F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EB94", Offset = "0x54EB94")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0xA62048", Offset = "0xA62048", VA = "0xA62048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EBA4", Offset = "0x54EBA4")]
		add
		{
		}
		[Token(Token = "0x6000406")]
		[Address(RVA = "0xA62134", Offset = "0xA62134", VA = "0xA62134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EBB4", Offset = "0x54EBB4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0xA62220", Offset = "0xA62220", VA = "0xA62220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EBC4", Offset = "0x54EBC4")]
		add
		{
		}
		[Token(Token = "0x6000408")]
		[Address(RVA = "0xA6230C", Offset = "0xA6230C", VA = "0xA6230C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EBD4", Offset = "0x54EBD4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0xA623F8", Offset = "0xA623F8", VA = "0xA623F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EBE4", Offset = "0x54EBE4")]
		add
		{
		}
		[Token(Token = "0x600040A")]
		[Address(RVA = "0xA624E4", Offset = "0xA624E4", VA = "0xA624E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EBF4", Offset = "0x54EBF4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x600040B")]
		[Address(RVA = "0xA625D0", Offset = "0xA625D0", VA = "0xA625D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EC04", Offset = "0x54EC04")]
		add
		{
		}
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xA626BC", Offset = "0xA626BC", VA = "0xA626BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EC14", Offset = "0x54EC14")]
		remove
		{
		}
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xA627A8", Offset = "0xA627A8", VA = "0xA627A8", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xA627B0", Offset = "0xA627B0", VA = "0xA627B0", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xA62890", Offset = "0xA62890", VA = "0xA62890", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xA6292C", Offset = "0xA6292C", VA = "0xA6292C", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xA629C8", Offset = "0xA629C8", VA = "0xA629C8", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xA629E4", Offset = "0xA629E4", VA = "0xA629E4", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xA629F0", Offset = "0xA629F0", VA = "0xA629F0", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xA62AD4", Offset = "0xA62AD4", VA = "0xA62AD4", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xA62BA0", Offset = "0xA62BA0", VA = "0xA62BA0", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xA62C6C", Offset = "0xA62C6C", VA = "0xA62C6C", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xA62CB8", Offset = "0xA62CB8", VA = "0xA62CB8", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xA62D04", Offset = "0xA62D04", VA = "0xA62D04", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xA62D68", Offset = "0xA62D68", VA = "0xA62D68", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xA62D74", Offset = "0xA62D74", VA = "0xA62D74", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xA62DAC", Offset = "0xA62DAC", VA = "0xA62DAC", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xA62E10", Offset = "0xA62E10", VA = "0xA62E10", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xA62FB8", Offset = "0xA62FB8", VA = "0xA62FB8")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x200005C")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40002FB")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xB386C4", Offset = "0xB386C4", VA = "0xB386C4")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xB38710", Offset = "0xB38710", VA = "0xB38710")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xB3875C", Offset = "0xB3875C", VA = "0xB3875C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xB38964", Offset = "0xB38964", VA = "0xB38964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xB38770", Offset = "0xB38770", VA = "0xB38770")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xB388C8", Offset = "0xB388C8", VA = "0xB388C8")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xB393F0", Offset = "0xB393F0", VA = "0xB393F0")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xB39594", Offset = "0xB39594", VA = "0xB39594")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xB38B20", Offset = "0xB38B20", VA = "0xB38B20")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xB39A1C", Offset = "0xB39A1C", VA = "0xB39A1C")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xB38A0C", Offset = "0xB38A0C", VA = "0xB38A0C")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xB39320", Offset = "0xB39320", VA = "0xB39320")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xB39AD0", Offset = "0xB39AD0", VA = "0xB39AD0")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xB395AC", Offset = "0xB395AC", VA = "0xB395AC")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xB391B0", Offset = "0xB391B0", VA = "0xB391B0")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xB39A30", Offset = "0xB39A30", VA = "0xB39A30")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xB39C20", Offset = "0xB39C20", VA = "0xB39C20")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x200005D")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x7BE564", Offset = "0x7BE564", VA = "0x7BE564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x7BE63C", Offset = "0x7BE63C", VA = "0x7BE63C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x7BE690", Offset = "0x7BE690", VA = "0x7BE690")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x7BE738", Offset = "0x7BE738", VA = "0x7BE738")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x7BE7E0", Offset = "0x7BE7E0", VA = "0x7BE7E0")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x7BE864", Offset = "0x7BE864", VA = "0x7BE864")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x7BE8E8", Offset = "0x7BE8E8", VA = "0x7BE8E8")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x7BEA10", Offset = "0x7BEA10", VA = "0x7BEA10")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x7BEB38", Offset = "0x7BEB38", VA = "0x7BEB38")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x7BEBE0", Offset = "0x7BEBE0", VA = "0x7BEBE0")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x7BEC74", Offset = "0x7BEC74", VA = "0x7BEC74")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x7BE5D4", Offset = "0x7BE5D4", VA = "0x7BE5D4")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x7BE5DC", Offset = "0x7BE5DC", VA = "0x7BE5DC")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x7BE688", Offset = "0x7BE688", VA = "0x7BE688")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x7BE60C", Offset = "0x7BE60C", VA = "0x7BE60C")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x7BE680", Offset = "0x7BE680", VA = "0x7BE680")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x7BED08", Offset = "0x7BED08", VA = "0x7BED08")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x200005E")]
public class SDK_PlayStationVRManager : MonoBehaviour
{
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539460", Offset = "0x539460")]
	private sealed class <BeginVRSetup>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_PlayStationVRManager <>4__this;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002470")]
			[Address(RVA = "0x7C3F24", Offset = "0x7C3F24", VA = "0x7C3F24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0x7C3F94", Offset = "0x7C3F94", VA = "0x7C3F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x7C3AF4", Offset = "0x7C3AF4", VA = "0x7C3AF4")]
		[DebuggerHidden]
		public <BeginVRSetup>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x7C3E74", Offset = "0x7C3E74", VA = "0x7C3E74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x7C3E78", Offset = "0x7C3E78", VA = "0x7C3E78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x7C3F2C", Offset = "0x7C3F2C", VA = "0x7C3F2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539470", Offset = "0x539470")]
	private sealed class <SetupVR>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_PlayStationVRManager <>4__this;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002476")]
			[Address(RVA = "0x7C42E8", Offset = "0x7C42E8", VA = "0x7C42E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002478")]
			[Address(RVA = "0x7C4358", Offset = "0x7C4358", VA = "0x7C4358", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x7C3B94", Offset = "0x7C3B94", VA = "0x7C3B94")]
		[DebuggerHidden]
		public <SetupVR>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x7C415C", Offset = "0x7C415C", VA = "0x7C415C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x7C4160", Offset = "0x7C4160", VA = "0x7C4160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x7C42F0", Offset = "0x7C42F0", VA = "0x7C42F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539480", Offset = "0x539480")]
	private sealed class <ShutdownVR>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x7C4440", Offset = "0x7C4440", VA = "0x7C4440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600247E")]
			[Address(RVA = "0x7C44B0", Offset = "0x7C44B0", VA = "0x7C44B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x7C3CC0", Offset = "0x7C3CC0", VA = "0x7C3CC0")]
		[DebuggerHidden]
		public <ShutdownVR>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x7C4360", Offset = "0x7C4360", VA = "0x7C4360", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x7C4364", Offset = "0x7C4364", VA = "0x7C4364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x7C4448", Offset = "0x7C4448", VA = "0x7C4448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539490", Offset = "0x539490")]
	private sealed class <DelayedSetupHmdDevice>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_PlayStationVRManager <>4__this;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002482")]
			[Address(RVA = "0x7C40E4", Offset = "0x7C40E4", VA = "0x7C40E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002484")]
			[Address(RVA = "0x7C4154", Offset = "0x7C4154", VA = "0x7C4154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x7C3DF0", Offset = "0x7C3DF0", VA = "0x7C3DF0")]
		[DebuggerHidden]
		public <DelayedSetupHmdDevice>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x7C3F9C", Offset = "0x7C3F9C", VA = "0x7C3F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x7C3FA0", Offset = "0x7C3FA0", VA = "0x7C3FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x7C40EC", Offset = "0x7C40EC", VA = "0x7C40EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float renderScale;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showHmdViewOnMonitor;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool doSetupOnAwake;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SDK_PlayStationVRManager s_Instance;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool isInVRSetup;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool hasRequestedDelayedShutdown;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool tryingToSetupHmdDevice;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 leftControllerVelocity;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 rightControllerVelocity;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 leftControllerAngularVelocity;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rightControllerAngularVelocity;

	[Token(Token = "0x1700005D")]
	public static SDK_PlayStationVRManager instance
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x7C3808", Offset = "0x7C3808", VA = "0x7C3808")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x7C3900", Offset = "0x7C3900", VA = "0x7C3900")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x7C3AEC", Offset = "0x7C3AEC", VA = "0x7C3AEC")]
	public void changeRenderScale(float renderScale)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x7C3A78", Offset = "0x7C3A78", VA = "0x7C3A78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54EC24", Offset = "0x54EC24")]
	public IEnumerator BeginVRSetup()
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x7C3B20", Offset = "0x7C3B20", VA = "0x7C3B20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54EC88", Offset = "0x54EC88")]
	private IEnumerator SetupVR()
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x7C3BC0", Offset = "0x7C3BC0", VA = "0x7C3BC0")]
	public void BeginShutdownVR()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x7C3C60", Offset = "0x7C3C60", VA = "0x7C3C60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54ECEC", Offset = "0x54ECEC")]
	private IEnumerator ShutdownVR()
	{
		return null;
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x7C3CEC", Offset = "0x7C3CEC", VA = "0x7C3CEC")]
	public void SetupHmdDevice()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x7C3D7C", Offset = "0x7C3D7C", VA = "0x7C3D7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54ED50", Offset = "0x54ED50")]
	private IEnumerator DelayedSetupHmdDevice()
	{
		return null;
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x7C3E1C", Offset = "0x7C3E1C", VA = "0x7C3E1C")]
	public void ToggleHmdViewOnMonitor(bool showOnMonitor)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x7C3E30", Offset = "0x7C3E30", VA = "0x7C3E30")]
	public void ToggleHmdViewOnMonitor()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x7C3E50", Offset = "0x7C3E50", VA = "0x7C3E50")]
	public void ChangeRenderScale(float scale)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x7C3E58", Offset = "0x7C3E58", VA = "0x7C3E58")]
	public SDK_PlayStationVRManager()
	{
	}
}
[Token(Token = "0x200005F")]
public class DEV_AudioTester : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioManager.AudioManagerType managerTypeToPlay;

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x766F4C", Offset = "0x766F4C", VA = "0x766F4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x766F50", Offset = "0x766F50", VA = "0x766F50")]
	public DEV_AudioTester()
	{
	}
}
[Token(Token = "0x2000060")]
public class DEV_ChangeColor : MonoBehaviour
{
	[Token(Token = "0x6000451")]
	[Address(RVA = "0x766F58", Offset = "0x766F58", VA = "0x766F58")]
	public DEV_ChangeColor()
	{
	}
}
[Token(Token = "0x2000061")]
public class DEV_FloorTextureScaler : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool up;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material myMaterial;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 tiling;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 offset;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x766F60", Offset = "0x766F60", VA = "0x766F60")]
	public void OffSetMaterial(Vector3 newPosition)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x767020", Offset = "0x767020", VA = "0x767020")]
	public DEV_FloorTextureScaler()
	{
	}
}
[Token(Token = "0x2000062")]
public class DEV_Timer : MonoBehaviour
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text levelStageText;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text levelTimeText;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53AB00", Offset = "0x53AB00")]
	public int fontSize;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53AB38", Offset = "0x53AB38")]
	public Vector3 levelStageTextPosition;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 levelTimeTextPosition;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Canvas canvas;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x767028", Offset = "0x767028", VA = "0x767028")]
	private void Update()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x76704C", Offset = "0x76704C", VA = "0x76704C")]
	public void ChangeLevelStageText()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x767150", Offset = "0x767150", VA = "0x767150")]
	public void ChangeLevelTimeText()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x767234", Offset = "0x767234", VA = "0x767234", Slot = "4")]
	protected virtual void InitCanvas()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x7673F8", Offset = "0x7673F8", VA = "0x7673F8", Slot = "5")]
	protected virtual void SetCanvasCamera()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x7674E8", Offset = "0x7674E8", VA = "0x7674E8")]
	public DEV_Timer()
	{
	}
}
[Token(Token = "0x2000063")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x20003FA")]
	public enum AudioManagerType
	{
		[Token(Token = "0x400168B")]
		Drums,
		[Token(Token = "0x400168C")]
		Bass,
		[Token(Token = "0x400168D")]
		Synth,
		[Token(Token = "0x400168E")]
		Saw,
		[Token(Token = "0x400168F")]
		Glitter
	}

	[Token(Token = "0x20003FB")]
	public enum SFXType
	{
		[Token(Token = "0x4001691")]
		CubeCrumble,
		[Token(Token = "0x4001692")]
		BallShattering,
		[Token(Token = "0x4001693")]
		Quasar,
		[Token(Token = "0x4001694")]
		StarExplosion,
		[Token(Token = "0x4001695")]
		SpinningTopExplosion,
		[Token(Token = "0x4001696")]
		SpinningTopBounce,
		[Token(Token = "0x4001697")]
		TetraExplosion,
		[Token(Token = "0x4001698")]
		TetraShrinking
	}

	[Serializable]
	[Token(Token = "0x20003FC")]
	public class SFXClip
	{
		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float audioVolume;

		[Token(Token = "0x6002485")]
		[Address(RVA = "0xA36BB0", Offset = "0xA36BB0", VA = "0xA36BB0")]
		public SFXClip()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003FD")]
	public class AudioClipHolder
	{
		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool playing;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float smooth;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scalingMultiplier;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int audioIndex;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AudioManagerType audioManagerType;

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xA36B94", Offset = "0xA36B94", VA = "0xA36B94")]
		public AudioClipHolder()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003FE")]
	public class FreeDrawClipHolder
	{
		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float heightMin;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float heightMax;

		[Token(Token = "0x6002487")]
		[Address(RVA = "0xA36BA8", Offset = "0xA36BA8", VA = "0xA36BA8")]
		public FreeDrawClipHolder()
		{
		}
	}

	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5394A0", Offset = "0x5394A0")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioManagerType managerType;

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xA3471C", Offset = "0xA3471C", VA = "0xA3471C")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0xA36AE0", Offset = "0xA36AE0", VA = "0xA36AE0")]
		internal bool <MuteAudio>b__0(AudioClipHolder audioClipHolder)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5394B0", Offset = "0x5394B0")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioManagerType managerType;

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xA35184", Offset = "0xA35184", VA = "0xA35184")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xA36B1C", Offset = "0xA36B1C", VA = "0xA36B1C")]
		internal bool <CancelAudio>b__0(AudioClipHolder audioClipHolder)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5394C0", Offset = "0x5394C0")]
	private sealed class <>c__DisplayClass48_0
	{
		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioManagerType managerType;

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xA3518C", Offset = "0xA3518C", VA = "0xA3518C")]
		public <>c__DisplayClass48_0()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xA36B58", Offset = "0xA36B58", VA = "0xA36B58")]
		internal bool <MuteOldest>b__0(AudioClipHolder audioClipHolder)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5394D0", Offset = "0x5394D0")]
	private sealed class <>c
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<AudioClipHolder> <>9__55_0;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<AudioClipHolder> <>9__55_1;

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xA36A70", Offset = "0xA36A70", VA = "0xA36A70")]
		public <>c()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xA36A78", Offset = "0xA36A78", VA = "0xA36A78")]
		internal bool <ScaleObjects>b__55_0(AudioClipHolder audioClipHolder)
		{
			return default(bool);
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xA36AAC", Offset = "0xA36AAC", VA = "0xA36AAC")]
		internal bool <ScaleObjects>b__55_1(AudioClipHolder audioClipHolder)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioManager _instance;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClipHolder> drumObjectAudioClipHolder;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioClipHolder> bassObjectAudioClipHolder;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AudioClipHolder> glitterObjectAudioClipHolder;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioClipHolder> sawObjectAudioClipHolder;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<AudioClipHolder> synthObjectAudioClipHolder;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float freeDrawHeightMin;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float freeDrawHeightMax;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float freeDrawNoteVolume;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private int sampleDataLength;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<FreeDrawClipHolder> freeDrawAudioClipHolders;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SFXClip cubeCrumbleSFX;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SFXClip ballShatteringSFX;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SFXClip quasarSFX;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SFXClip starExplosionSFX;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SFXClip spinningTopExplosionSFX;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SFXClip spinningTopBounceSFX;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SFXClip tetraExplosionSFX;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SFXClip tetraShrinkingSFX;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ObjectTool scalableBoxTool;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ObjectTool solidBoxTool;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ObjectTool ballObjectTool;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ObjectTool starObjectTool;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ObjectTool spinningTopTool;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ObjectTool pyramidTool;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int maxGlitterAmount;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<AudioClipHolder> oldAudioClipHolders;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] clipSampleData;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource currentlyPlayingBassAudioSource;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private AudioSource currentlyPlayingSynthAudioSource;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<AudioSource> currentlyPlayingGlitterAudioSources;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool forceMute;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float currentClipLoudness;

	[Token(Token = "0x1700005E")]
	public static AudioManager Instance
	{
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xA32A54", Offset = "0xA32A54", VA = "0xA32A54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xA32AA4", Offset = "0xA32AA4", VA = "0xA32AA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xA32C74", Offset = "0xA32C74", VA = "0xA32C74")]
	private void Update()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xA332B4", Offset = "0xA332B4", VA = "0xA332B4")]
	public void PlayFreeDrawNote(Vector3 position, Vector3 playPosition)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xA33590", Offset = "0xA33590", VA = "0xA33590")]
	private void CalculateFreedrawSteps()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xA336D8", Offset = "0xA336D8", VA = "0xA336D8")]
	public void PlaySFX(SFXType sfx, GameObject senderObject)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xA33A50", Offset = "0xA33A50", VA = "0xA33A50")]
	public void PlayAudio(AudioManagerType managerType, int index)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xA344E0", Offset = "0xA344E0", VA = "0xA344E0")]
	public void MuteAudio(AudioManagerType managerType, int index)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xA34724", Offset = "0xA34724", VA = "0xA34724")]
	public void CancelAudio(AudioManagerType managerType, int index)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA3428C", Offset = "0xA3428C", VA = "0xA3428C")]
	public void MuteOldest(AudioManagerType managerType)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xA35194", Offset = "0xA35194", VA = "0xA35194")]
	public void PlayAllAudio()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA356F8", Offset = "0xA356F8", VA = "0xA356F8")]
	public void MuteAllAudio()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xA35C7C", Offset = "0xA35C7C", VA = "0xA35C7C")]
	public void StopAllAudio()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xA361D8", Offset = "0xA361D8", VA = "0xA361D8")]
	public void EmptyLists()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xA36238", Offset = "0xA36238", VA = "0xA36238")]
	public void CheckAudios()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xA367D0", Offset = "0xA367D0", VA = "0xA367D0")]
	public int GetCurrentlyPlayingAudiosAmount()
	{
		return default(int);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xA32C78", Offset = "0xA32C78", VA = "0xA32C78")]
	private void ScaleObjects()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xA36840", Offset = "0xA36840", VA = "0xA36840")]
	private float GetClipLoudness(AudioSource audioSource)
	{
		return default(float);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xA3695C", Offset = "0xA3695C", VA = "0xA3695C")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000064")]
public class AudioManagerNew : MonoBehaviour
{
	[Token(Token = "0x600046D")]
	[Address(RVA = "0xA36BB8", Offset = "0xA36BB8", VA = "0xA36BB8")]
	public AudioManagerNew()
	{
	}
}
[Token(Token = "0x2000065")]
public class ButtonEventManager : MonoBehaviour
{
	[Token(Token = "0x2000403")]
	public enum ButtonAlias
	{
		[Token(Token = "0x40016AB")]
		TriggerL,
		[Token(Token = "0x40016AC")]
		TriggerR,
		[Token(Token = "0x40016AD")]
		ButtonOneL,
		[Token(Token = "0x40016AE")]
		ButtonTwoL,
		[Token(Token = "0x40016AF")]
		ButtonThreeL,
		[Token(Token = "0x40016B0")]
		ButtonFourL,
		[Token(Token = "0x40016B1")]
		ButtonFiveL,
		[Token(Token = "0x40016B2")]
		ButtonSixL,
		[Token(Token = "0x40016B3")]
		ButtonSevenL,
		[Token(Token = "0x40016B4")]
		ButtonEightL,
		[Token(Token = "0x40016B5")]
		ButtonOneR,
		[Token(Token = "0x40016B6")]
		ButtonTwoR,
		[Token(Token = "0x40016B7")]
		ButtonThreeR,
		[Token(Token = "0x40016B8")]
		ButtonFourR
	}

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ButtonEventManager _instance;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ToolIconChanger[] toolIconChangers;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Tool freeDrawTool;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject buttonOneObjectR;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject buttonTwoObjectR;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject buttonThreeObjectR;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject buttonFourObjectR;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject buttonOneObjectL;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject buttonTwoObjectL;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject buttonThreeObjectL;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject buttonFourObjectL;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material automaticHueMaterial;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material defaultMaterial;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Slider freeDrawSizeSlider;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ToolPicker toolPicker;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VRTK_ControllerEvents handEventsL;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VRTK_ControllerEvents handEventsR;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color buttonOneColorR;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color buttonTwoColorR;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color buttonThreeColorR;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color buttonFourColorR;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Tool buttonOneToolL;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Tool buttonTwoToolL;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Tool buttonThreeToolL;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Tool buttonFourToolL;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float buttonOneFreeDrawSize;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float buttonTwoFreeDrawSize;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float buttonThreeFreeDrawSize;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float buttonFourFreeDrawSize;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool buttonOneUsingAutomaticHue;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool buttonTwoUsingAutomaticHue;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	private bool buttonThreeUsingAutomaticHue;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	private bool buttonFourUsingAutomaticHue;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Tool currentTool;

	[Token(Token = "0x1700005F")]
	public static ButtonEventManager Instance
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0x75C474", Offset = "0x75C474", VA = "0x75C474")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x75C4C4", Offset = "0x75C4C4", VA = "0x75C4C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x75C7D8", Offset = "0x75C7D8", VA = "0x75C7D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x75CA44", Offset = "0x75CA44", VA = "0x75CA44")]
	private void TriggerPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x75CB00", Offset = "0x75CB00", VA = "0x75CB00")]
	private void TriggerPressedR(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x75CBBC", Offset = "0x75CBBC", VA = "0x75CBBC")]
	private void TriggerReleasedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x75CC78", Offset = "0x75CC78", VA = "0x75CC78")]
	private void TriggerReleasedR(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x75CD34", Offset = "0x75CD34", VA = "0x75CD34")]
	private void ButtonFivePressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x75CFA4", Offset = "0x75CFA4", VA = "0x75CFA4")]
	public void ButtonSixPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x75D0E0", Offset = "0x75D0E0", VA = "0x75D0E0")]
	private void ButtonSevenPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x75D21C", Offset = "0x75D21C", VA = "0x75D21C")]
	private void ButtonEightPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x75D358", Offset = "0x75D358", VA = "0x75D358")]
	public void ButtonOnePressedR()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x75D6A8", Offset = "0x75D6A8", VA = "0x75D6A8")]
	public void ButtonTwoPressedR()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x75D82C", Offset = "0x75D82C", VA = "0x75D82C")]
	public void ButtonThreePressedR()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x75D9B0", Offset = "0x75D9B0", VA = "0x75D9B0")]
	public void ButtonFourPressedR()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x75DB34", Offset = "0x75DB34", VA = "0x75DB34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x75DCE4", Offset = "0x75DCE4", VA = "0x75DCE4")]
	public Tool GetCurrentTool()
	{
		return null;
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x75DCEC", Offset = "0x75DCEC", VA = "0x75DCEC")]
	private bool CheckFullBinds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x75DEC8", Offset = "0x75DEC8", VA = "0x75DEC8")]
	public void AssignButtonColor(ButtonAlias button, Color color)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x75E284", Offset = "0x75E284", VA = "0x75E284")]
	public void AssignButtonAutomaticHue(ButtonAlias button)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x75E4B8", Offset = "0x75E4B8", VA = "0x75E4B8")]
	public void AssignButtonTool(ButtonAlias button, Tool toolObject, bool changeTool)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x75E914", Offset = "0x75E914", VA = "0x75E914")]
	public void ClearQuickBinds()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x75D604", Offset = "0x75D604", VA = "0x75D604")]
	private void ChangeColor(Color toColor)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x75CE70", Offset = "0x75CE70", VA = "0x75CE70")]
	private void ChangeTool(Tool toTool)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x75E118", Offset = "0x75E118", VA = "0x75E118")]
	private void ChangeButtonColor(GameObject objectToAffect, Color toColor)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x75E40C", Offset = "0x75E40C", VA = "0x75E40C")]
	private void ChangeButtonMaterial(GameObject objectToAffect, Material newMaterial)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x75EBD4", Offset = "0x75EBD4", VA = "0x75EBD4")]
	public ButtonEventManager()
	{
	}
}
[Token(Token = "0x2000066")]
public class CinematicModeManager : MonoBehaviour
{
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5394E0", Offset = "0x5394E0")]
	private sealed class <_RandomSpawning>d__32 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CinematicModeManager <>4__this;

		[Token(Token = "0x170001E0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002495")]
			[Address(RVA = "0x761D60", Offset = "0x761D60", VA = "0x761D60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002497")]
			[Address(RVA = "0x761DD0", Offset = "0x761DD0", VA = "0x761DD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x761B1C", Offset = "0x761B1C", VA = "0x761B1C")]
		[DebuggerHidden]
		public <_RandomSpawning>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x761C20", Offset = "0x761C20", VA = "0x761C20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x761C24", Offset = "0x761C24", VA = "0x761C24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x761D68", Offset = "0x761D68", VA = "0x761D68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CinematicModeManager _instance;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minHeight;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxHeight;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53ACC0", Offset = "0x53ACC0")]
	[SerializeField]
	private Vector2 spawningAreaSize;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53AD0C", Offset = "0x53AD0C")]
	[SerializeField]
	private float minTime;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53AD58", Offset = "0x53AD58")]
	[SerializeField]
	private float maxTime;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53ADA4", Offset = "0x53ADA4")]
	[SerializeField]
	private float minScale;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53ADF0", Offset = "0x53ADF0")]
	[SerializeField]
	private float maxScale;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53AE3C", Offset = "0x53AE3C")]
	[SerializeField]
	private Vector3 maxDistance;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera playerCamera;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ColorWheel colorWheel;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ToolSelection toolSelection;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ObjectTool> tools;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform centerEyeAnchor;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FreeDrawBatcher freeDrawBatcher;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int index;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 randomStartPosition;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 randomEndPosition;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Quaternion randomRotation;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 randomScale;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float timeLeft;

	[Token(Token = "0x17000060")]
	public static CinematicModeManager Instance
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0x7607E8", Offset = "0x7607E8", VA = "0x7607E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x760838", Offset = "0x760838", VA = "0x760838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x7609A8", Offset = "0x7609A8", VA = "0x7609A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x760B18", Offset = "0x760B18", VA = "0x760B18")]
	private void DeteriorateStarted()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x760C90", Offset = "0x760C90", VA = "0x760C90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x760EA4", Offset = "0x760EA4", VA = "0x760EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x761224", Offset = "0x761224", VA = "0x761224")]
	public void StartCinematicMode(bool experience)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x760B90", Offset = "0x760B90", VA = "0x760B90")]
	public void StopCinematicMode()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x7616D0", Offset = "0x7616D0", VA = "0x7616D0")]
	private void SpawnObject(int index, Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x7617C0", Offset = "0x7617C0", VA = "0x7617C0")]
	private void PopulateRandomFields()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x761650", Offset = "0x761650", VA = "0x761650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54EDB4", Offset = "0x54EDB4")]
	private IEnumerator<float> _RandomSpawning()
	{
		return null;
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x761B48", Offset = "0x761B48", VA = "0x761B48")]
	public CinematicModeManager()
	{
	}
}
[Token(Token = "0x2000067")]
public class EasyModeManager : MonoBehaviour
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EasyModeManager _instance;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Tool buttonOneTool;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Tool buttonThreeTool;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Tool buttonFourTool;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color buttonTwoColor;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color buttonThreeColor;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color buttonFourColor;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Tool freeDrawTool;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Slider freeDrawSlider;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VRTK_ControllerEvents controllerEventsL;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private VRTK_ControllerEvents controllerEventsR;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool usingEasyMode;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ColorWheel colorWheel;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ToolSelection toolSelection;

	[Token(Token = "0x17000061")]
	public static EasyModeManager Instance
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x76A4F8", Offset = "0x76A4F8", VA = "0x76A4F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x76A548", Offset = "0x76A548", VA = "0x76A548")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x76A6F0", Offset = "0x76A6F0", VA = "0x76A6F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x76A758", Offset = "0x76A758", VA = "0x76A758")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x76ACFC", Offset = "0x76ACFC", VA = "0x76ACFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x76B290", Offset = "0x76B290", VA = "0x76B290")]
	private void TriggerPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x76B33C", Offset = "0x76B33C", VA = "0x76B33C")]
	private void TriggerReleasedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x76B3E8", Offset = "0x76B3E8", VA = "0x76B3E8")]
	private void ButtonOnePressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x76B428", Offset = "0x76B428", VA = "0x76B428")]
	private void ButtonOneReleasedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x76B468", Offset = "0x76B468", VA = "0x76B468")]
	private void ButtonThreePressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x76B4A8", Offset = "0x76B4A8", VA = "0x76B4A8")]
	private void ButtonThreeReleasedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x76B4E8", Offset = "0x76B4E8", VA = "0x76B4E8")]
	private void ButtonFourPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x76B528", Offset = "0x76B528", VA = "0x76B528")]
	private void ButtonFourReleasedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x76B568", Offset = "0x76B568", VA = "0x76B568")]
	private void TriggerPressedR(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x76B5A8", Offset = "0x76B5A8", VA = "0x76B5A8")]
	private void TriggerReleasedR(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x76B5E8", Offset = "0x76B5E8", VA = "0x76B5E8")]
	private void ButtonTwoPressedR(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x76B6DC", Offset = "0x76B6DC", VA = "0x76B6DC")]
	private void ButtonThreePressedR(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x76B6EC", Offset = "0x76B6EC", VA = "0x76B6EC")]
	private void ButtonFourPressedR(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x76B6FC", Offset = "0x76B6FC", VA = "0x76B6FC")]
	private void GameStarted()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x76BBA0", Offset = "0x76BBA0", VA = "0x76BBA0")]
	public void ToggleEasyMode(bool usingEasyMode)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x76B5F8", Offset = "0x76B5F8", VA = "0x76B5F8")]
	private void ChangeColor(Color toColor, int index)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x76B2D0", Offset = "0x76B2D0", VA = "0x76B2D0")]
	private void UseTool(Tool toolToUse, int handIndex)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x76B37C", Offset = "0x76B37C", VA = "0x76B37C")]
	private void ReleaseTool(Tool toolToUse, int handIndex)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x76BC24", Offset = "0x76BC24", VA = "0x76BC24")]
	public EasyModeManager()
	{
	}
}
[Token(Token = "0x2000068")]
public class EventManager : MonoBehaviour
{
	[Token(Token = "0x2000405")]
	public delegate void GeneralEvent();

	[Token(Token = "0x1400001F")]
	public static event GeneralEvent OnForceReleaseObject
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x76BC2C", Offset = "0x76BC2C", VA = "0x76BC2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE18", Offset = "0x54EE18")]
		add
		{
		}
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x76BD28", Offset = "0x76BD28", VA = "0x76BD28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE28", Offset = "0x54EE28")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event GeneralEvent OnToolChanged
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x76BE24", Offset = "0x76BE24", VA = "0x76BE24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE38", Offset = "0x54EE38")]
		add
		{
		}
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x76BF24", Offset = "0x76BF24", VA = "0x76BF24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE48", Offset = "0x54EE48")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event GeneralEvent OnToolQuickbinded
	{
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x76C024", Offset = "0x76C024", VA = "0x76C024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE58", Offset = "0x54EE58")]
		add
		{
		}
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x76C124", Offset = "0x76C124", VA = "0x76C124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE68", Offset = "0x54EE68")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event GeneralEvent OnColorQuickbinded
	{
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x76C224", Offset = "0x76C224", VA = "0x76C224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE78", Offset = "0x54EE78")]
		add
		{
		}
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x76C324", Offset = "0x76C324", VA = "0x76C324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE88", Offset = "0x54EE88")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event GeneralEvent OnStartGame
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x76ABFC", Offset = "0x76ABFC", VA = "0x76ABFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EE98", Offset = "0x54EE98")]
		add
		{
		}
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x76B190", Offset = "0x76B190", VA = "0x76B190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EEA8", Offset = "0x54EEA8")]
		remove
		{
		}
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x75EB14", Offset = "0x75EB14", VA = "0x75EB14")]
	public static void ForceReleaseObjects()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x75EB74", Offset = "0x75EB74", VA = "0x75EB74")]
	public static void ToolChanged()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x75E8B4", Offset = "0x75E8B4", VA = "0x75E8B4")]
	public static void ToolQuickbinded()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x75E224", Offset = "0x75E224", VA = "0x75E224")]
	public static void ColorQuickbinded()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x76C824", Offset = "0x76C824", VA = "0x76C824")]
	public static void GameStarted()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x76C884", Offset = "0x76C884", VA = "0x76C884")]
	public EventManager()
	{
	}
}
[Token(Token = "0x2000069")]
public class LevelManager : MonoBehaviour
{
	[Token(Token = "0x2000406")]
	public delegate void StageChanged();

	[Token(Token = "0x2000407")]
	public enum LevelState
	{
		[Token(Token = "0x40016BD")]
		MainMenu,
		[Token(Token = "0x40016BE")]
		Draw,
		[Token(Token = "0x40016BF")]
		ColorPicking,
		[Token(Token = "0x40016C0")]
		Deteriorate
	}

	[Token(Token = "0x2000408")]
	public enum GameMode
	{
		[Token(Token = "0x40016C2")]
		Endless,
		[Token(Token = "0x40016C3")]
		Experience,
		[Token(Token = "0x40016C4")]
		EasyMode,
		[Token(Token = "0x40016C5")]
		Cinematic,
		[Token(Token = "0x40016C6")]
		Tutorial,
		[Token(Token = "0x40016C7")]
		None
	}

	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5394F0", Offset = "0x5394F0")]
	private sealed class <_ChangeState>d__93 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelManager <>4__this;

		[Token(Token = "0x170001E2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x85AED8", Offset = "0x85AED8", VA = "0x85AED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x85AF48", Offset = "0x85AF48", VA = "0x85AF48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x85ACA0", Offset = "0x85ACA0", VA = "0x85ACA0")]
		[DebuggerHidden]
		public <_ChangeState>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x85ACCC", Offset = "0x85ACCC", VA = "0x85ACCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x85ACD0", Offset = "0x85ACD0", VA = "0x85ACD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x85AEE0", Offset = "0x85AEE0", VA = "0x85AEE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539500", Offset = "0x539500")]
	private sealed class <_Deteriorate>d__94 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelManager <>4__this;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeToDeteriorate;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SpawnedObject> objectsToDeteriorate;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__2;

		[Token(Token = "0x170001E4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x85B264", Offset = "0x85B264", VA = "0x85B264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x85B2D4", Offset = "0x85B2D4", VA = "0x85B2D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x85AFAC", Offset = "0x85AFAC", VA = "0x85AFAC")]
		[DebuggerHidden]
		public <_Deteriorate>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x85AFD8", Offset = "0x85AFD8", VA = "0x85AFD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x85AFDC", Offset = "0x85AFDC", VA = "0x85AFDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x85B26C", Offset = "0x85B26C", VA = "0x85B26C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539510", Offset = "0x539510")]
	private sealed class <_Deteriorate>d__95 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelManager <>4__this;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnedObject objectToDeteriorate;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeToDeteriorate;

		[Token(Token = "0x170001E6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024AF")]
			[Address(RVA = "0x85B45C", Offset = "0x85B45C", VA = "0x85B45C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x85B4CC", Offset = "0x85B4CC", VA = "0x85B4CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x85B338", Offset = "0x85B338", VA = "0x85B338")]
		[DebuggerHidden]
		public <_Deteriorate>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x85B364", Offset = "0x85B364", VA = "0x85B364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x85B368", Offset = "0x85B368", VA = "0x85B368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x85B464", Offset = "0x85B464", VA = "0x85B464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LevelManager _instance;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelState currentLevelState;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameMode currentGameMode;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float drawStageTime;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float originalDeteriorateTime;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float deteriorateTime;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int objectColorsQuantity;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FreeDrawBatcher freeDrawBatcher;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject controllerModelL;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject controllerModelR;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRTK_ControllerEvents controllerHandEventsL;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VRTK_ControllerEvents controllerHandEventsR;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ObjectTool scalableBoxTool;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ObjectTool solidBoxTool;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ObjectTool pyramidTool;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ObjectTool springTool;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ObjectTool spinningTopTool;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ObjectTool ballTool;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ObjectTool starTool;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ObjectTool freeDrawTool;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ObjectTool blackHoleTool;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject centerEyeAnchor;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ColorWheel colorWheel;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ToolSelection toolSelection;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VRTK_RadialMenu radialMenuL;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public VRTK_RadialMenu radialMenuR;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ColorPicker colorPicker;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ToolPicker toolPicker;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public GameObject controllerScriptObjectL;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public GameObject controllerScriptObjectR;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public VRTK_VelocityEstimator velocityEstimatorL;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public VRTK_VelocityEstimator velocityEstimatorR;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int currentID;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int currentColorIndex;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float timeLeftTotal;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float timeLeftInThisStage;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float deteriorateBufferInSeconds;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float timeRemainingInThisStage;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Color currentObjectColor;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<SpawnedObject> spawnedObjects;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<SpawnedObject> spawnedDeteriorableObjects;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Spawner[] spawners;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool blackAndWhiteOnly;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	public bool shootingStarsAndBlackHolesOnly;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	public bool freeDrawWasUsed;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public List<DateTime> spinningTopExplosionTimes;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Material[] skyboxes;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Cubemap[] reflectionCubemaps;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int selectedSkybox;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool changeStateRunning;

	[Token(Token = "0x17000062")]
	public static LevelManager Instance
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x75BE94", Offset = "0x75BE94", VA = "0x75BE94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000024")]
	public static event StageChanged OnStartWall
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x766900", Offset = "0x766900", VA = "0x766900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EEB8", Offset = "0x54EEB8")]
		add
		{
		}
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x766BA4", Offset = "0x766BA4", VA = "0x766BA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EEC8", Offset = "0x54EEC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public static event StageChanged OnDrawingStart
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x766800", Offset = "0x766800", VA = "0x766800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EED8", Offset = "0x54EED8")]
		add
		{
		}
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x766AA4", Offset = "0x766AA4", VA = "0x766AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EEE8", Offset = "0x54EEE8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event StageChanged OnDeteriorateStart
	{
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x7608A8", Offset = "0x7608A8", VA = "0x7608A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EEF8", Offset = "0x54EEF8")]
		add
		{
		}
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x760A18", Offset = "0x760A18", VA = "0x760A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EF08", Offset = "0x54EF08")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public static event StageChanged OnColorChanged
	{
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x75FAEC", Offset = "0x75FAEC", VA = "0x75FAEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EF18", Offset = "0x54EF18")]
		add
		{
		}
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x75FC5C", Offset = "0x75FC5C", VA = "0x75FC5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EF28", Offset = "0x54EF28")]
		remove
		{
		}
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x774BD0", Offset = "0x774BD0", VA = "0x774BD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x775200", Offset = "0x775200", VA = "0x775200")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x761540", Offset = "0x761540", VA = "0x761540")]
	public void StartGame()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x775280", Offset = "0x775280", VA = "0x775280")]
	public void EndGame()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x77552C", Offset = "0x77552C", VA = "0x77552C")]
	public void EmptyScene()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x775818", Offset = "0x775818", VA = "0x775818")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x775708", Offset = "0x775708", VA = "0x775708")]
	private void CancelAll()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x775A18", Offset = "0x775A18", VA = "0x775A18")]
	public void AddFreeDrawObject(SpawnedObject freeDrawObject)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x775A88", Offset = "0x775A88", VA = "0x775A88")]
	public void AddSpawnedObject(SpawnedObject spawnedObject)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x75EA74", Offset = "0x75EA74", VA = "0x75EA74")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x7658CC", Offset = "0x7658CC", VA = "0x7658CC")]
	public int GetObjectColoursQuantity()
	{
		return default(int);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x775C60", Offset = "0x775C60", VA = "0x775C60")]
	public int GetCurrentColorIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x765ACC", Offset = "0x765ACC", VA = "0x765ACC")]
	public void SetCurrentColorIndex(int index)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x775C68", Offset = "0x775C68", VA = "0x775C68")]
	public void ChangeSkybox(int skyboxID)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x770FD0", Offset = "0x770FD0", VA = "0x770FD0")]
	public void RemoveSpawnedObject(SpawnedObject spawnedObject)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x75D694", Offset = "0x75D694", VA = "0x75D694")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x770248", Offset = "0x770248", VA = "0x770248")]
	public int GetCurrentID()
	{
		return default(int);
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x770250", Offset = "0x770250", VA = "0x770250")]
	public void SetCurrentID(int ID)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x775D74", Offset = "0x775D74", VA = "0x775D74")]
	public float TimeLeft()
	{
		return default(float);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x76722C", Offset = "0x76722C", VA = "0x76722C")]
	public float TimeLeftInThisStage()
	{
		return default(float);
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x761538", Offset = "0x761538", VA = "0x761538")]
	public void SetTimeLeftInThisStage(float timeLeft)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x775D94", Offset = "0x775D94", VA = "0x775D94")]
	public List<SpawnedObject> GetSpawnedObjects()
	{
		return null;
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x775D9C", Offset = "0x775D9C", VA = "0x775D9C")]
	public Spawner[] GetAllSpawners()
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x775C48", Offset = "0x775C48", VA = "0x775C48")]
	private void CheckDeteriorateBuffer()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x775DA4", Offset = "0x775DA4", VA = "0x775DA4")]
	private void DeteriorateExcess()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x775F68", Offset = "0x775F68", VA = "0x775F68")]
	private void StartDeteriorate()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x77520C", Offset = "0x77520C", VA = "0x77520C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54EF38", Offset = "0x54EF38")]
	private IEnumerator<float> _ChangeState()
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x77603C", Offset = "0x77603C", VA = "0x77603C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54EF9C", Offset = "0x54EF9C")]
	private IEnumerator<float> _Deteriorate(List<SpawnedObject> objectsToDeteriorate, float timeToDeteriorate)
	{
		return null;
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x775EB4", Offset = "0x775EB4", VA = "0x775EB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F000", Offset = "0x54F000")]
	private IEnumerator<float> _Deteriorate(SpawnedObject objectToDeteriorate, float timeToDeteriorate)
	{
		return null;
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x7760F4", Offset = "0x7760F4", VA = "0x7760F4")]
	public LevelManager()
	{
	}
}
[Token(Token = "0x200006A")]
public class LocalizationManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200040C")]
	public struct LocalizationWrapper
	{
		[Serializable]
		[Token(Token = "0x2000520")]
		public struct MultiLanguageString
		{
			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string id;

			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string english;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string schinese;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string tchinese;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string korean;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string spanish;

			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string german;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string japanese;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string french;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string russian;

			[Token(Token = "0x6002795")]
			[Address(RVA = "0x5B820C", Offset = "0x5B820C", VA = "0x5B820C")]
			public MultiLanguageString(string id, string english, string schinese, string tchinese, string korean, string spanish, string german, string japanese, string french, string russian)
			{
			}
		}

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MultiLanguageString[] localization;
	}

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocalizationWrapper localizationData;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string path;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, string> localizedString;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x85BE24", Offset = "0x85BE24", VA = "0x85BE24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x85C458", Offset = "0x85C458", VA = "0x85C458")]
	private void AddLocalizedStringToDictionary(int i, string translatedString)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x85C580", Offset = "0x85C580", VA = "0x85C580")]
	public LocalizationManager()
	{
	}
}
[Token(Token = "0x200006B")]
public class LocalizationTextFinderManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200040D")]
	public class TextObject
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI textMeshPro;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string localizationId;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string originalText;

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x85C9F4", Offset = "0x85C9F4", VA = "0x85C9F4")]
		public TextObject(TextMeshProUGUI textMeshPro, Text text, string localizationId, string originalText)
		{
		}
	}

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TextObject> texts;

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x85C66C", Offset = "0x85C66C", VA = "0x85C66C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x85C984", Offset = "0x85C984", VA = "0x85C984")]
	public LocalizationTextFinderManager()
	{
	}
}
[Token(Token = "0x200006C")]
public class MainMenuManager : MonoBehaviour
{
	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539520", Offset = "0x539520")]
	private sealed class <_ScaleMainMenu>d__77 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenuManager <>4__this;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool show;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float timeToMove;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lastDeltaTime>5__3;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <mainMenuCurrentScale>5__4;

		[Token(Token = "0x170001E8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x8604F4", Offset = "0x8604F4", VA = "0x8604F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x860564", Offset = "0x860564", VA = "0x860564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x860180", Offset = "0x860180", VA = "0x860180")]
		[DebuggerHidden]
		public <_ScaleMainMenu>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x86023C", Offset = "0x86023C", VA = "0x86023C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x860240", Offset = "0x860240", VA = "0x860240", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x8604FC", Offset = "0x8604FC", VA = "0x8604FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MainMenuManager _instance;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button startGameButton;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button startTutorialButton;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button emptySceneButton;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI startGameButtonText;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle experienceModeToggle;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Toggle cinematicModeToggle;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Toggle noDecayModeToggle;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Toggle turningTypeToggle;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Toggle easyModeToggle;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Toggle muteFreedrawToggle;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Toggle reflectionsToggle;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Toggle songPack1Toggle;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Toggle songPack2Toggle;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Toggle songPack3Toggle;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Toggle songPack4Toggle;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Toggle songPack5Toggle;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Toggle songPack6Toggle;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Toggle muteToggle;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Toggle totalBlacknessToggle;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Toggle skyBox1Toggle;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Toggle skyBox2Toggle;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Toggle skyBox3Toggle;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Toggle skyBox4Toggle;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float moveTime;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Slider movementSpeedSlider;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ColorWheel colorWheel;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ToolSelection toolSelection;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject cameraRigCenterEye;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private float spawnDistance;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private float spawnHeight;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Canvas myCanvas;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private RectTransform myCanvasRectTransform;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private MenuPointer[] menuPointers;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 originalScale;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 mainMenuToScale;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool startMenuIsUp;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool experienceMode;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	private bool first;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
	private bool cinematicMode;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool noDecayMode;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	public bool mutedFreedraw;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
	public bool reflectionsEnabled;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int turningType;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int easyMode;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float flySpeed;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int currentSkyBox;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int currentSongPack;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private VRTK_ControllerEvents controllerEventsL;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private VRTK_ControllerEvents controllerEventsR;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool fatalChanges;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool mainMenuMoving;

	[Token(Token = "0x17000063")]
	public static MainMenuManager Instance
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0x85D014", Offset = "0x85D014", VA = "0x85D014")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x85D064", Offset = "0x85D064", VA = "0x85D064")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x85E3E0", Offset = "0x85E3E0", VA = "0x85E3E0")]
	private void StartMenuPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x85EED8", Offset = "0x85EED8", VA = "0x85EED8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x85EFDC", Offset = "0x85EFDC", VA = "0x85EFDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x85F234", Offset = "0x85F234", VA = "0x85F234")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x85F6F0", Offset = "0x85F6F0", VA = "0x85F6F0")]
	private void SetPlayerPrefs()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x85F2C8", Offset = "0x85F2C8", VA = "0x85F2C8")]
	private void LoadPlayerPrefs()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x85F904", Offset = "0x85F904", VA = "0x85F904")]
	private void TurningTypeToggleValueChanged(Toggle change)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x85F964", Offset = "0x85F964", VA = "0x85F964")]
	private void EasyModeToggleValueChanged(Toggle change)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x85F9C4", Offset = "0x85F9C4", VA = "0x85F9C4")]
	private void MuteFreedrawToggleValueChanged(Toggle change)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x85F9D4", Offset = "0x85F9D4", VA = "0x85F9D4")]
	private void ReflectionsToggleValueChanged(Toggle change)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x85FA68", Offset = "0x85FA68", VA = "0x85FA68")]
	private void SkyBoxToggleValueChanged(Toggle change)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x85FBBC", Offset = "0x85FBBC", VA = "0x85FBBC")]
	private void SongPackToggleValueChanged(Toggle change)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x85F8C4", Offset = "0x85F8C4", VA = "0x85F8C4")]
	private void SongPackChanged()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x85FCF0", Offset = "0x85FCF0", VA = "0x85FCF0")]
	private void StartTutorial()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x85FD68", Offset = "0x85FD68", VA = "0x85FD68")]
	private void EmptyScene()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x85EBF8", Offset = "0x85EBF8", VA = "0x85EBF8")]
	private void StartGame()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x85FDF8", Offset = "0x85FDF8", VA = "0x85FDF8")]
	public void ToggleMainMenu()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x85F6C8", Offset = "0x85F6C8", VA = "0x85F6C8")]
	private void ShowMainMenu()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x85FEF8", Offset = "0x85FEF8", VA = "0x85FEF8")]
	private void CheckFatalChanges()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x85E478", Offset = "0x85E478", VA = "0x85E478")]
	public void ShowMainMenu(bool show)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x85FFBC", Offset = "0x85FFBC", VA = "0x85FFBC")]
	private void ShowPointers(bool show)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x85FE08", Offset = "0x85FE08", VA = "0x85FE08")]
	private void CheckStartGameButtonText()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x860080", Offset = "0x860080", VA = "0x860080")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F064", Offset = "0x54F064")]
	private IEnumerator<float> _ScaleMainMenu(bool show, float timeToMove)
	{
		return null;
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x8601AC", Offset = "0x8601AC", VA = "0x8601AC")]
	public MainMenuManager()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x8601E0", Offset = "0x8601E0", VA = "0x8601E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F0C8", Offset = "0x54F0C8")]
	private void <OnEnable>b__54_0(bool <p0>)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x8601E4", Offset = "0x8601E4", VA = "0x8601E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F0D8", Offset = "0x54F0D8")]
	private void <OnEnable>b__54_1(bool <p0>)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x8601E8", Offset = "0x8601E8", VA = "0x8601E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F0E8", Offset = "0x54F0E8")]
	private void <OnEnable>b__54_2(bool <p0>)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x8601EC", Offset = "0x8601EC", VA = "0x8601EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F0F8", Offset = "0x54F0F8")]
	private void <OnEnable>b__54_3(bool <p0>)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x8601F0", Offset = "0x8601F0", VA = "0x8601F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F108", Offset = "0x54F108")]
	private void <OnEnable>b__54_4(bool <p0>)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x8601F4", Offset = "0x8601F4", VA = "0x8601F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F118", Offset = "0x54F118")]
	private void <OnEnable>b__54_5(bool <p0>)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x860204", Offset = "0x860204", VA = "0x860204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F128", Offset = "0x54F128")]
	private void <OnEnable>b__54_6(bool <p0>)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x86020C", Offset = "0x86020C", VA = "0x86020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F138", Offset = "0x54F138")]
	private void <OnEnable>b__54_7(bool <p0>)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x860210", Offset = "0x860210", VA = "0x860210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F148", Offset = "0x54F148")]
	private void <OnEnable>b__54_8(bool <p0>)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x860214", Offset = "0x860214", VA = "0x860214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F158", Offset = "0x54F158")]
	private void <OnEnable>b__54_9(bool <p0>)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x860218", Offset = "0x860218", VA = "0x860218")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F168", Offset = "0x54F168")]
	private void <OnEnable>b__54_10(bool <p0>)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x86021C", Offset = "0x86021C", VA = "0x86021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F178", Offset = "0x54F178")]
	private void <OnEnable>b__54_11(bool <p0>)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x860220", Offset = "0x860220", VA = "0x860220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F188", Offset = "0x54F188")]
	private void <OnEnable>b__54_12(bool <p0>)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x860224", Offset = "0x860224", VA = "0x860224")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F198", Offset = "0x54F198")]
	private void <OnEnable>b__54_13(bool <p0>)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x860228", Offset = "0x860228", VA = "0x860228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F1A8", Offset = "0x54F1A8")]
	private void <OnEnable>b__54_14(bool <p0>)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x86022C", Offset = "0x86022C", VA = "0x86022C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F1B8", Offset = "0x54F1B8")]
	private void <OnEnable>b__54_15(bool <p0>)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x860230", Offset = "0x860230", VA = "0x860230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F1C8", Offset = "0x54F1C8")]
	private void <OnEnable>b__54_16(bool <p0>)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x860234", Offset = "0x860234", VA = "0x860234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F1D8", Offset = "0x54F1D8")]
	private void <OnEnable>b__54_17(bool <p0>)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x860238", Offset = "0x860238", VA = "0x860238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F1E8", Offset = "0x54F1E8")]
	private void <OnEnable>b__54_18(bool <p0>)
	{
	}
}
[Token(Token = "0x200006D")]
public class PlayerSetupManager : MonoBehaviour
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerSetupManager _instance;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B1A8", Offset = "0x53B1A8")]
	public bool usingSmoothRotation;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B1E0", Offset = "0x53B1E0")]
	public bool usingEasyMode;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B218", Offset = "0x53B218")]
	public bool usingFixedEnvironmentColor;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B250", Offset = "0x53B250")]
	public bool usingAutomaticHueCycle;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B288", Offset = "0x53B288")]
	public bool showTutorial;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HandMovement handMovement;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HandTurning handTurning;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int tutorialDone;

	[Token(Token = "0x40003FB")]
	private const string tutorialState = "TutorialState";

	[Token(Token = "0x17000064")]
	public static PlayerSetupManager Instance
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x9CB8D4", Offset = "0x9CB8D4", VA = "0x9CB8D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x9CB924", Offset = "0x9CB924", VA = "0x9CB924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x9CBAD0", Offset = "0x9CBAD0", VA = "0x9CBAD0")]
	public void UsingSmoothRotation(bool usingSmoothRotation)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x9CBB7C", Offset = "0x9CBB7C", VA = "0x9CBB7C")]
	public void UsingFixedEnvironmentColor(bool usingFixedEnvironmentColor)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x9CBB14", Offset = "0x9CBB14", VA = "0x9CBB14")]
	private void GetPlayerPrefData()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x9CBB88", Offset = "0x9CBB88", VA = "0x9CBB88")]
	public void SetPlayerPrefTutorialState(int newTutorialState)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x9CBBF4", Offset = "0x9CBBF4", VA = "0x9CBBF4")]
	public PlayerSetupManager()
	{
	}
}
[Token(Token = "0x200006E")]
public class QuadTreeManager : MonoBehaviour
{
	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static QuadTreeManager _instance;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53B2D0", Offset = "0x53B2D0")]
	public Vector2 worldSize;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int BodiesPerNode;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MaxSplits;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public QuadTree _quadTree;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CollisionSystemQuadTree _csQuad;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VacuumTool vacuumTool;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ICollisionBody vacuumBodyLeft;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ICollisionBody vacuumBodyRight;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool vacuumingActiveLeft;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool vacuumingActiveRight;

	[Token(Token = "0x17000065")]
	public static QuadTreeManager Instance
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x7C14E8", Offset = "0x7C14E8", VA = "0x7C14E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x7C1538", Offset = "0x7C1538", VA = "0x7C1538")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x7C1708", Offset = "0x7C1708", VA = "0x7C1708")]
	private void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x7C17E8", Offset = "0x7C17E8", VA = "0x7C17E8")]
	public void FreeDrawRemoved(IQuadTreeBody treeBody)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x7C1884", Offset = "0x7C1884", VA = "0x7C1884")]
	public void AddBody(ICollisionBody collisionBody, IQuadTreeBody treeBody)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x7C18F0", Offset = "0x7C18F0", VA = "0x7C18F0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x7C1904", Offset = "0x7C1904", VA = "0x7C1904")]
	public QuadTreeManager()
	{
	}
}
[Token(Token = "0x200006F")]
public class RadialMenuManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200040F")]
	public class ToolIcons
	{
		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite sprite;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string toolName;

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x7C3468", Offset = "0x7C3468", VA = "0x7C3468")]
		public ToolIcons()
		{
		}
	}

	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539530", Offset = "0x539530")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RadialMenuManager <>4__this;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ID;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_RadialMenu.RadialMenuButton button;

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x7C2928", Offset = "0x7C2928", VA = "0x7C2928")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x7C3398", Offset = "0x7C3398", VA = "0x7C3398")]
		internal void <AddRadialMenuListenerR>b__0()
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x7C33CC", Offset = "0x7C33CC", VA = "0x7C33CC")]
		internal void <AddRadialMenuListenerR>b__1()
		{
		}
	}

	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539540", Offset = "0x539540")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RadialMenuManager <>4__this;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ID;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_RadialMenu.RadialMenuButton button;

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x7C2930", Offset = "0x7C2930", VA = "0x7C2930")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x7C3400", Offset = "0x7C3400", VA = "0x7C3400")]
		internal void <AddRadialMenuListenerL>b__0()
		{
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x7C3434", Offset = "0x7C3434", VA = "0x7C3434")]
		internal void <AddRadialMenuListenerL>b__1()
		{
		}
	}

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RadialMenuManager _instance;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ToolIcons> toolIcons;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NewRadialMenu radialMenuControlL;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NewRadialMenu radialMenuControlR;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ColorPicker colorPicker;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ToolPicker toolPicker;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ToolSelection toolSelection;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRTK_RadialMenu radialMenuR;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRTK_RadialMenu radialMenuL;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<VRTK_RadialMenu.RadialMenuButton> radialMenuButtonsR;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<VRTK_RadialMenu.RadialMenuButton> radialMenuButtonsL;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VRTK_ControllerEvents controllerEventsL;

	[Token(Token = "0x17000066")]
	public static RadialMenuManager Instance
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x7C2288", Offset = "0x7C2288", VA = "0x7C2288")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x7C22D8", Offset = "0x7C22D8", VA = "0x7C22D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x7C2508", Offset = "0x7C2508", VA = "0x7C2508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x7C2628", Offset = "0x7C2628", VA = "0x7C2628")]
	private void AddRadialMenuListenerR(int ID, VRTK_RadialMenu.RadialMenuButton button)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x7C27A8", Offset = "0x7C27A8", VA = "0x7C27A8")]
	private void AddRadialMenuListenerL(int ID, VRTK_RadialMenu.RadialMenuButton button)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x7C2938", Offset = "0x7C2938", VA = "0x7C2938")]
	public void ChangeToolIcon(int ID, string toolTag)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x7C2B50", Offset = "0x7C2B50", VA = "0x7C2B50")]
	public void ToggleRadialMenus(bool toggleValue)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x7C2BB8", Offset = "0x7C2BB8", VA = "0x7C2BB8")]
	public void ToggleRadialMenuL(bool toggleValue)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x7C2BF0", Offset = "0x7C2BF0", VA = "0x7C2BF0")]
	public void ToggleRadialMenuR(bool toggleValue)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x7C2C28", Offset = "0x7C2C28", VA = "0x7C2C28")]
	private void RadialMenuButtonPressedR(int ID, VRTK_RadialMenu.RadialMenuButton button)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x7C2F08", Offset = "0x7C2F08", VA = "0x7C2F08")]
	private void RadialMenuButtonPressedL(int ID, VRTK_RadialMenu.RadialMenuButton button)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x7C2FE0", Offset = "0x7C2FE0", VA = "0x7C2FE0")]
	private void RadialMenuButtonReleasedR(int ID, VRTK_RadialMenu.RadialMenuButton button)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x7C3230", Offset = "0x7C3230", VA = "0x7C3230")]
	private void RadialMenuButtonReleasedL(int ID, VRTK_RadialMenu.RadialMenuButton button)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x7C2D80", Offset = "0x7C2D80", VA = "0x7C2D80")]
	private void ObjectSelected(int ID, VRTK_RadialMenu radialMenu)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x7C30B8", Offset = "0x7C30B8", VA = "0x7C30B8")]
	private void ObjectDeselected(int ID, VRTK_RadialMenu radialMenu)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x7C3308", Offset = "0x7C3308", VA = "0x7C3308")]
	public RadialMenuManager()
	{
	}
}
[Token(Token = "0x2000070")]
public class TotalBlacknessModeManager : MonoBehaviour
{
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TotalBlacknessModeManager _instance;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Light[] lightsToDisable;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] objectsToDisable;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FloorChangeColor floorChangeColor;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color floorPatternColor;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float originalAlphaDistance;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float blacknessAlphaDistance;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material lastUsedSkybox;

	[Token(Token = "0x17000067")]
	public static TotalBlacknessModeManager Instance
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x79CDFC", Offset = "0x79CDFC", VA = "0x79CDFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x79CE4C", Offset = "0x79CE4C", VA = "0x79CE4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x79CF98", Offset = "0x79CF98", VA = "0x79CF98")]
	public void TotalBlackness(bool enabled)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x79D248", Offset = "0x79D248", VA = "0x79D248")]
	public TotalBlacknessModeManager()
	{
	}
}
[Token(Token = "0x2000071")]
public class TutorialManager : MonoBehaviour
{
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539550", Offset = "0x539550")]
	private sealed class <_StageLoop>d__41 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialManager <>4__this;

		[Token(Token = "0x170001EA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x7A2838", Offset = "0x7A2838", VA = "0x7A2838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x7A28A8", Offset = "0x7A28A8", VA = "0x7A28A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x7A2214", Offset = "0x7A2214", VA = "0x7A2214")]
		[DebuggerHidden]
		public <_StageLoop>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x7A2624", Offset = "0x7A2624", VA = "0x7A2624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x7A2628", Offset = "0x7A2628", VA = "0x7A2628", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x7A2840", Offset = "0x7A2840", VA = "0x7A2840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539560", Offset = "0x539560")]
	private sealed class <_PulseMaterial>d__42 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float interval;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material materialToPulse;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialManager <>4__this;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__2;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <pulseColorActive>5__3;

		[Token(Token = "0x170001EC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x7A2550", Offset = "0x7A2550", VA = "0x7A2550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x7A25C0", Offset = "0x7A25C0", VA = "0x7A25C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x7A2240", Offset = "0x7A2240", VA = "0x7A2240")]
		[DebuggerHidden]
		public <_PulseMaterial>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x7A23EC", Offset = "0x7A23EC", VA = "0x7A23EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x7A23F0", Offset = "0x7A23F0", VA = "0x7A23F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x7A2558", Offset = "0x7A2558", VA = "0x7A2558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TutorialManager _instance;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B358", Offset = "0x53B358")]
	public float pulseSpeed;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRTK_ControllerTooltips toolTipsL;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRTK_ControllerTooltips toolTipsR;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B390", Offset = "0x53B390")]
	public Color fromColor;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B3C8", Offset = "0x53B3C8")]
	public Color toColor;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53B400", Offset = "0x53B400")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B400", Offset = "0x53B400")]
	[SerializeField]
	private bool stage1Active;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B470", Offset = "0x53B470")]
	[SerializeField]
	private bool stage2Active;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B4BC", Offset = "0x53B4BC")]
	[SerializeField]
	private bool stage3Active;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B508", Offset = "0x53B508")]
	[SerializeField]
	private bool stage4Active;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B554", Offset = "0x53B554")]
	[SerializeField]
	private bool stage5Active;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Stage1 stage1;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Stage2 stage2;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Stage3 stage3;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Stage4 stage4;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Stage5 stage5;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53B5F0", Offset = "0x53B5F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B5F0", Offset = "0x53B5F0")]
	[SerializeField]
	private Material startButtonMaterialL;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VRTK_ControllerEvents controllerEventsL;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VRTK_ControllerEvents controllerEventsR;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ToolTipGetter toolTipGetterL;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ToolTipGetter toolTipGetterR;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool allowStartMenuPress;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public VRTK_ObjectTooltip triggerToolTipL;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public VRTK_ObjectTooltip touchpadToolTipL;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public VRTK_ObjectTooltip startMenuToolTipL;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public VRTK_ObjectTooltip buttonOneToolTipL;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public VRTK_ObjectTooltip buttonTwoToolTipL;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public VRTK_ObjectTooltip triggerToolTipR;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public VRTK_ObjectTooltip touchpadToolTipR;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public VRTK_ObjectTooltip startMenuToolTipR;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public VRTK_ObjectTooltip buttonOneToolTipR;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public VRTK_ObjectTooltip buttonTwoToolTipR;

	[Token(Token = "0x17000068")]
	public static TutorialManager Instance
	{
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x7A127C", Offset = "0x7A127C", VA = "0x7A127C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x7A12CC", Offset = "0x7A12CC", VA = "0x7A12CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x7A16EC", Offset = "0x7A16EC", VA = "0x7A16EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x7A1BA8", Offset = "0x7A1BA8", VA = "0x7A1BA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x7A1C7C", Offset = "0x7A1C7C", VA = "0x7A1C7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x7A1D50", Offset = "0x7A1D50", VA = "0x7A1D50")]
	private void StartMenuPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x7A1784", Offset = "0x7A1784", VA = "0x7A1784")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x7A1F08", Offset = "0x7A1F08", VA = "0x7A1F08")]
	private void EndTutorial()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x7A1E94", Offset = "0x7A1E94", VA = "0x7A1E94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F1F8", Offset = "0x54F1F8")]
	private IEnumerator<float> _StageLoop()
	{
		return null;
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x7A2160", Offset = "0x7A2160", VA = "0x7A2160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F25C", Offset = "0x54F25C")]
	private IEnumerator<float> _PulseMaterial(Material materialToPulse, float interval)
	{
		return null;
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x7A226C", Offset = "0x7A226C", VA = "0x7A226C")]
	private bool CheckThatStagesArentRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x7A2304", Offset = "0x7A2304", VA = "0x7A2304")]
	private bool CheckThatAllStagesAreFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x7A23CC", Offset = "0x7A23CC", VA = "0x7A23CC")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x2000072")]
public class BallObject : SpawnedObject
{
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539570", Offset = "0x539570")]
	private sealed class <_DestroyDelay>d__26 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float seconds;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallObject <>4__this;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <repeating>5__3;

		[Token(Token = "0x170001EE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xA37E5C", Offset = "0xA37E5C", VA = "0xA37E5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0xA37ECC", Offset = "0xA37ECC", VA = "0xA37ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xA37A70", Offset = "0xA37A70", VA = "0xA37A70")]
		[DebuggerHidden]
		public <_DestroyDelay>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xA37D80", Offset = "0xA37D80", VA = "0xA37D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xA37D84", Offset = "0xA37D84", VA = "0xA37D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xA37E64", Offset = "0xA37E64", VA = "0xA37E64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539580", Offset = "0x539580")]
	private sealed class <_ColorAnimation>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BallObject <>4__this;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MaterialPropertyBlock <_propBlock>5__2;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__3;

		[Token(Token = "0x170001F0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0xA37CAC", Offset = "0xA37CAC", VA = "0xA37CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0xA37D1C", Offset = "0xA37D1C", VA = "0xA37D1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0xA37A9C", Offset = "0xA37A9C", VA = "0xA37A9C")]
		[DebuggerHidden]
		public <_ColorAnimation>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xA37AF4", Offset = "0xA37AF4", VA = "0xA37AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xA37AF8", Offset = "0xA37AF8", VA = "0xA37AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0xA37CB4", Offset = "0xA37CB4", VA = "0xA37CB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float shatterLifeTime;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float rotateMinSpeed;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float rotateMaxSpeed;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystem myParticleSystemDeath;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ParticleSystem myParticleSystemBeating;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float minRandomTime;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float maxRandomTime;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float randomTime;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool releaseParticles;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject animationChild;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator anim;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rigidbody myRB;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float rotateSpeed;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool shattered;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Renderer[] brokenBallPiecesRenderers;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xA36EE4", Offset = "0xA36EE4", VA = "0xA36EE4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xA36EEC", Offset = "0xA36EEC", VA = "0xA36EEC", Slot = "5")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xA36F98", Offset = "0xA36F98", VA = "0xA36F98", Slot = "6")]
	public override void ManualScale(Vector3 newScale, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xA371E0", Offset = "0xA371E0", VA = "0xA371E0", Slot = "8")]
	public override void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA374B4", Offset = "0xA374B4", VA = "0xA374B4", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA37644", Offset = "0xA37644", VA = "0xA37644", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA377A8", Offset = "0xA377A8", VA = "0xA377A8", Slot = "10")]
	public override void VacuumObject()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA3743C", Offset = "0xA3743C", VA = "0xA3743C")]
	private void ReleaseSurface()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA375BC", Offset = "0xA375BC", VA = "0xA375BC")]
	private void Shatter()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xA376E4", Offset = "0xA376E4", VA = "0xA376E4")]
	private void RestartObject()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA37840", Offset = "0xA37840", VA = "0xA37840")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA379D8", Offset = "0xA379D8", VA = "0xA379D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F2C0", Offset = "0x54F2C0")]
	private IEnumerator<float> _DestroyDelay(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xA373C8", Offset = "0xA373C8", VA = "0xA373C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F324", Offset = "0x54F324")]
	private IEnumerator<float> _ColorAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA37AC8", Offset = "0xA37AC8", VA = "0xA37AC8")]
	public BallObject()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA37AEC", Offset = "0xA37AEC", VA = "0xA37AEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F388", Offset = "0x54F388")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000073")]
public class BlackHoleObject : SpawnedObject
{
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539590", Offset = "0x539590")]
	private sealed class <_DeathEffect>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlackHoleObject <>4__this;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 <originalScale>5__2;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <i>5__3;

		[Token(Token = "0x170001F2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0xA4B450", Offset = "0xA4B450", VA = "0xA4B450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0xA4B4C0", Offset = "0xA4B4C0", VA = "0xA4B4C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xA4B138", Offset = "0xA4B138", VA = "0xA4B138")]
		[DebuggerHidden]
		public <_DeathEffect>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xA4B190", Offset = "0xA4B190", VA = "0xA4B190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xA4B194", Offset = "0xA4B194", VA = "0xA4B194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xA4B458", Offset = "0xA4B458", VA = "0xA4B458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float rotateMinSpeed;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float rotateMaxSpeed;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystem myParticleSystemIdle;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ParticleSystem myParticleSystemDeath;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ParticleSystem myParticleSystemDeath2;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ParticleSystem[] myParticleSystemsIdle;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float deathEffectDuration;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float rotateSpeed;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool shattered;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BlackHoleStarEffectArea blackHoleStarEffectArea;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xA4A438", Offset = "0xA4A438", VA = "0xA4A438", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xA4A540", Offset = "0xA4A540", VA = "0xA4A540", Slot = "5")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA4A5EC", Offset = "0xA4A5EC", VA = "0xA4A5EC", Slot = "6")]
	public override void ManualScale(Vector3 newScale, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA4A834", Offset = "0xA4A834", VA = "0xA4A834", Slot = "8")]
	public override void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA4A8DC", Offset = "0xA4A8DC", VA = "0xA4A8DC")]
	private void UpdatePS()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA4AAB0", Offset = "0xA4AAB0", VA = "0xA4AAB0", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xA4AC88", Offset = "0xA4AC88", VA = "0xA4AC88", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xA4AE20", Offset = "0xA4AE20", VA = "0xA4AE20", Slot = "10")]
	public override void VacuumObject()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xA4AD20", Offset = "0xA4AD20", VA = "0xA4AD20")]
	private void RestartObject()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA4AFF4", Offset = "0xA4AFF4", VA = "0xA4AFF4")]
	private void PlayParticles(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA4ABF0", Offset = "0xA4ABF0", VA = "0xA4ABF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F3C0", Offset = "0x54F3C0")]
	private IEnumerator<float> _DeathEffect(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA4B164", Offset = "0xA4B164", VA = "0xA4B164")]
	public BlackHoleObject()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xA4B188", Offset = "0xA4B188", VA = "0xA4B188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F424", Offset = "0x54F424")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000074")]
public class BlackHoleStarEffectArea : MonoBehaviour
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float gravityMultiplier;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> nearbyStars;

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xA4C00C", Offset = "0xA4C00C", VA = "0xA4C00C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xA4AEB8", Offset = "0xA4AEB8", VA = "0xA4AEB8")]
	public void RestartObject()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xA4C31C", Offset = "0xA4C31C", VA = "0xA4C31C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xA4C468", Offset = "0xA4C468", VA = "0xA4C468")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xA4C5B4", Offset = "0xA4C5B4", VA = "0xA4C5B4")]
	public BlackHoleStarEffectArea()
	{
	}
}
[Token(Token = "0x2000075")]
public class FreeDrawnObject : SpawnedObject
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FreeDrawSpawner freeDrawSpawner;

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x770EF4", Offset = "0x770EF4", VA = "0x770EF4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x770F68", Offset = "0x770F68", VA = "0x770F68", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x7710F0", Offset = "0x7710F0", VA = "0x7710F0", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x771158", Offset = "0x771158", VA = "0x771158")]
	public FreeDrawnObject()
	{
	}
}
[Token(Token = "0x2000076")]
public class PyramidObject : SpawnedObject
{
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5395A0", Offset = "0x5395A0")]
	private sealed class <_DeathEffect>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PyramidObject <>4__this;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <time>5__2;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 <originalScale>5__3;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x170001F4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x7BFE5C", Offset = "0x7BFE5C", VA = "0x7BFE5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x7BFECC", Offset = "0x7BFECC", VA = "0x7BFECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x7BF85C", Offset = "0x7BF85C", VA = "0x7BF85C")]
		[DebuggerHidden]
		public <_DeathEffect>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x7BF9FC", Offset = "0x7BF9FC", VA = "0x7BF9FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x7BFA00", Offset = "0x7BFA00", VA = "0x7BFA00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x7BFE64", Offset = "0x7BFE64", VA = "0x7BFE64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator myAnimator;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool objectIsActive;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SkinnedMeshRenderer mySkinnedMeshRender;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float blendShapeWeight;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool grow;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 lerpVector;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject myGameObject;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject ShrinkEffectParent;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ParticleSystem myIdleParticleSystem;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private ParticleSystem myDeathParticleSystem;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x7BED10", Offset = "0x7BED10", VA = "0x7BED10", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x7BEDA4", Offset = "0x7BEDA4", VA = "0x7BEDA4", Slot = "5")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x7BEDA8", Offset = "0x7BEDA8", VA = "0x7BEDA8", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x7BEF30", Offset = "0x7BEF30", VA = "0x7BEF30", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x7BF058", Offset = "0x7BF058", VA = "0x7BF058", Slot = "10")]
	public override void VacuumObject()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x7BF180", Offset = "0x7BF180", VA = "0x7BF180", Slot = "8")]
	public override void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x7BF4E8", Offset = "0x7BF4E8", VA = "0x7BF4E8", Slot = "6")]
	public override void ManualScale(Vector3 newScale, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x7BF5FC", Offset = "0x7BF5FC", VA = "0x7BF5FC")]
	private void RestartObject()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x7BF4EC", Offset = "0x7BF4EC", VA = "0x7BF4EC")]
	private void UpdateBlendShapeWeight(Vector3 newScale, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x7BF71C", Offset = "0x7BF71C", VA = "0x7BF71C")]
	private void PlayParticles(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x7BEEB4", Offset = "0x7BEEB4", VA = "0x7BEEB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F45C", Offset = "0x54F45C")]
	public IEnumerator<float> _DeathEffect()
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x7BF888", Offset = "0x7BF888", VA = "0x7BF888")]
	public PyramidObject()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x7BF8F8", Offset = "0x7BF8F8", VA = "0x7BF8F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F4C0", Offset = "0x54F4C0")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000077")]
public class ScalableBoxObject : SpawnedObject
{
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5395B0", Offset = "0x5395B0")]
	private sealed class <_DeathEffect>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScalableBoxObject <>4__this;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool <repeating>5__2;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__3;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] <originalScales>5__4;

		[Token(Token = "0x170001F6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x7C5D08", Offset = "0x7C5D08", VA = "0x7C5D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x7C5D78", Offset = "0x7C5D78", VA = "0x7C5D78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x7C5978", Offset = "0x7C5978", VA = "0x7C5978")]
		[DebuggerHidden]
		public <_DeathEffect>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x7C59B8", Offset = "0x7C59B8", VA = "0x7C59B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x7C59BC", Offset = "0x7C59BC", VA = "0x7C59BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x7C5D10", Offset = "0x7C5D10", VA = "0x7C5D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float lifeTime;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform[] childrenTransforms;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] originalPositions;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion[] originalRotations;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody[] childrenRB;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem myParticleSystem;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool objectSpawned;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x7C4A88", Offset = "0x7C4A88", VA = "0x7C4A88", Slot = "6")]
	public override void ManualScale(Vector3 newScale, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x7C4CD0", Offset = "0x7C4CD0", VA = "0x7C4CD0", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x7C52FC", Offset = "0x7C52FC", VA = "0x7C52FC", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x7C55C0", Offset = "0x7C55C0", VA = "0x7C55C0", Slot = "10")]
	public override void VacuumObject()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x7C5678", Offset = "0x7C5678", VA = "0x7C5678", Slot = "8")]
	public override void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x7C4E00", Offset = "0x7C4E00", VA = "0x7C4E00")]
	private void ShatterCube()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x7C53B4", Offset = "0x7C53B4", VA = "0x7C53B4")]
	private void ResetChildrens()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x7C5264", Offset = "0x7C5264", VA = "0x7C5264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F4F8", Offset = "0x54F4F8")]
	private IEnumerator<float> _DeathEffect(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x7C59A4", Offset = "0x7C59A4", VA = "0x7C59A4")]
	public ScalableBoxObject()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x7C59B4", Offset = "0x7C59B4", VA = "0x7C59B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F55C", Offset = "0x54F55C")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000078")]
public class SolidBoxObject : SpawnedObject
{
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5395C0", Offset = "0x5395C0")]
	private sealed class <_DeathEffect>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SolidBoxObject <>4__this;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <i>5__2;

		[Token(Token = "0x170001F8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x7C8C30", Offset = "0x7C8C30", VA = "0x7C8C30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x7C8CA0", Offset = "0x7C8CA0", VA = "0x7C8CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x7C8760", Offset = "0x7C8760", VA = "0x7C8760")]
		[DebuggerHidden]
		public <_DeathEffect>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x7C8820", Offset = "0x7C8820", VA = "0x7C8820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x7C8824", Offset = "0x7C8824", VA = "0x7C8824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x7C8C38", Offset = "0x7C8C38", VA = "0x7C8C38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float lifeTime;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 originalPosition;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion originalRotation;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem myParticleSystem;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem[] myParticleSystems;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool objectSpawned;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3[] particleOriginalScale;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] particleOriginalStartSpeed;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] particleOriginalStarSize;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x7C7B78", Offset = "0x7C7B78", VA = "0x7C7B78", Slot = "6")]
	public override void ManualScale(Vector3 newScale, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x7C7DC0", Offset = "0x7C7DC0", VA = "0x7C7DC0", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x7C7F88", Offset = "0x7C7F88", VA = "0x7C7F88", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x7C8364", Offset = "0x7C8364", VA = "0x7C8364", Slot = "10")]
	public override void VacuumObject()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x7C841C", Offset = "0x7C841C", VA = "0x7C841C", Slot = "8")]
	public override void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x7C8040", Offset = "0x7C8040", VA = "0x7C8040")]
	private void ResetObject()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x7C7F14", Offset = "0x7C7F14", VA = "0x7C7F14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F594", Offset = "0x54F594")]
	private IEnumerator<float> _DeathEffect(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x7C878C", Offset = "0x7C878C", VA = "0x7C878C")]
	public SolidBoxObject()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x7C881C", Offset = "0x7C881C", VA = "0x7C881C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F5F8", Offset = "0x54F5F8")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x2000079")]
public class SpawnedObject : MonoBehaviour
{
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5395D0", Offset = "0x5395D0")]
	private sealed class <_DeteriorateTime>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnedObject <>4__this;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dTime;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <i>5__2;

		[Token(Token = "0x170001FA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0x7CA870", Offset = "0x7CA870", VA = "0x7CA870", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x7CA8E0", Offset = "0x7CA8E0", VA = "0x7CA8E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x7CA784", Offset = "0x7CA784", VA = "0x7CA784")]
		[DebuggerHidden]
		public <_DeteriorateTime>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x7CA7B0", Offset = "0x7CA7B0", VA = "0x7CA7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x7CA7B4", Offset = "0x7CA7B4", VA = "0x7CA7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x7CA878", Offset = "0x7CA878", VA = "0x7CA878", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float deteoriateTime;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected Vector3 maxScale;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Vector3 minScale;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Vector3 originalScale;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool destroyed;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color myColor;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem ps;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int myID;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float remainingTime;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Spawner mySpawner;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int myAudioIndex;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x7BEDA0", Offset = "0x7BEDA0", VA = "0x7BEDA0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x7CA5C8", Offset = "0x7CA5C8", VA = "0x7CA5C8", Slot = "5")]
	public virtual void ManualUpdate()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x7BF5F8", Offset = "0x7BF5F8", VA = "0x7BF5F8", Slot = "6")]
	public virtual void ManualScale(Vector3 newScale, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x7BF8FC", Offset = "0x7BF8FC", VA = "0x7BF8FC", Slot = "7")]
	public virtual void Destroy()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x7BF3C8", Offset = "0x7BF3C8", VA = "0x7BF3C8", Slot = "8")]
	public virtual void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x7BEF8C", Offset = "0x7BEF8C", VA = "0x7BEF8C", Slot = "9")]
	public virtual void CancelObject()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x7BF0B4", Offset = "0x7BF0B4", VA = "0x7BF0B4", Slot = "10")]
	public virtual void VacuumObject()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x7C0D74", Offset = "0x7C0D74", VA = "0x7C0D74")]
	public void SetMyColor(Color Color)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x7BF3BC", Offset = "0x7BF3BC", VA = "0x7BF3BC")]
	public Color GetMyColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x7BEF28", Offset = "0x7BEF28", VA = "0x7BEF28")]
	public int GetMyAudioIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x7C0D80", Offset = "0x7C0D80", VA = "0x7C0D80")]
	public void SetMyAudioIndex(int index)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x7CA61C", Offset = "0x7CA61C", VA = "0x7CA61C")]
	public void SetMyID(int ID)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x7CA624", Offset = "0x7CA624", VA = "0x7CA624")]
	public int GetMyID()
	{
		return default(int);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x7CA62C", Offset = "0x7CA62C", VA = "0x7CA62C")]
	public void SetParticleSystem(ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x7CA634", Offset = "0x7CA634", VA = "0x7CA634")]
	public ParticleSystem GetParticleSystem()
	{
		return null;
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x7CA63C", Offset = "0x7CA63C", VA = "0x7CA63C")]
	public float GetHapticFeedbackAmount()
	{
		return default(float);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x7CA5DC", Offset = "0x7CA5DC", VA = "0x7CA5DC")]
	private void GetRemainingTime()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x7CA6EC", Offset = "0x7CA6EC", VA = "0x7CA6EC", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F630", Offset = "0x54F630")]
	protected virtual IEnumerator<float> _DeteriorateTime(float dTime)
	{
		return null;
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x7BF8F0", Offset = "0x7BF8F0", VA = "0x7BF8F0")]
	public SpawnedObject()
	{
	}
}
[Token(Token = "0x200007A")]
public class SpinningTopObject : SpawnedObject
{
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5395E0", Offset = "0x5395E0")]
	private sealed class <_DeathEffect>d__23 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpinningTopObject <>4__this;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <repeating>5__2;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <time>5__3;

		[Token(Token = "0x170001FC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x7CC600", Offset = "0x7CC600", VA = "0x7CC600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x7CC670", Offset = "0x7CC670", VA = "0x7CC670", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x7CBE54", Offset = "0x7CBE54", VA = "0x7CBE54")]
		[DebuggerHidden]
		public <_DeathEffect>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x7CC4C8", Offset = "0x7CC4C8", VA = "0x7CC4C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x7CC4CC", Offset = "0x7CC4CC", VA = "0x7CC4CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x7CC608", Offset = "0x7CC608", VA = "0x7CC608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5395F0", Offset = "0x5395F0")]
	private sealed class <_Accelerate>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpinningTopObject <>4__this;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float acceleratedTime;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <animSpeed>5__2;

		[Token(Token = "0x170001FE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x7CC0EC", Offset = "0x7CC0EC", VA = "0x7CC0EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002501")]
			[Address(RVA = "0x7CC15C", Offset = "0x7CC15C", VA = "0x7CC15C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x7CBE80", Offset = "0x7CBE80", VA = "0x7CBE80")]
		[DebuggerHidden]
		public <_Accelerate>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x7CBEF0", Offset = "0x7CBEF0", VA = "0x7CBEF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x7CBEF4", Offset = "0x7CBEF4", VA = "0x7CBEF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x7CC0F4", Offset = "0x7CC0F4", VA = "0x7CC0F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539600", Offset = "0x539600")]
	private sealed class <_Bounce>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpinningTopObject <>4__this;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <remainingTime>5__2;

		[Token(Token = "0x17000200")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002505")]
			[Address(RVA = "0x7CC3F4", Offset = "0x7CC3F4", VA = "0x7CC3F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000201")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002507")]
			[Address(RVA = "0x7CC464", Offset = "0x7CC464", VA = "0x7CC464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x7CBEAC", Offset = "0x7CBEAC", VA = "0x7CBEAC")]
		[DebuggerHidden]
		public <_Bounce>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x7CC1C0", Offset = "0x7CC1C0", VA = "0x7CC1C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x7CC1C4", Offset = "0x7CC1C4", VA = "0x7CC1C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x7CC3FC", Offset = "0x7CC3FC", VA = "0x7CC3FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float maxRotatingVelocity;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float minRotatingVelocity;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool objectIsActive;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator myAnimator;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Rigidbody myRB;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ParticleSystem[] myTrailParticleSystemsToColor;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem idleParticleSystem;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private ParticleSystem jumpEffectParticleSystem;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private ParticleSystem myDeathEffectParticleSystem;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ParticleSystem[] idleSubParticleSystems;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool bouncing;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x7CAED8", Offset = "0x7CAED8", VA = "0x7CAED8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x7CAFF8", Offset = "0x7CAFF8", VA = "0x7CAFF8", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x7CB1B4", Offset = "0x7CB1B4", VA = "0x7CB1B4", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x7CB324", Offset = "0x7CB324", VA = "0x7CB324", Slot = "10")]
	public override void VacuumObject()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x7CB3E4", Offset = "0x7CB3E4", VA = "0x7CB3E4", Slot = "8")]
	public override void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x7CB7F4", Offset = "0x7CB7F4", VA = "0x7CB7F4")]
	private void SetParticleSystemColor()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x7CAFA8", Offset = "0x7CAFA8", VA = "0x7CAFA8")]
	private void ToggleParticleSystem(bool activate, ParticleSystem particleSystem)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x7CB750", Offset = "0x7CB750", VA = "0x7CB750")]
	public void ThrowObject(Vector3 velocity)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x7CB9C0", Offset = "0x7CB9C0", VA = "0x7CB9C0")]
	private void SetParticleSystemSpeed(float speed)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x7CBA80", Offset = "0x7CBA80", VA = "0x7CBA80")]
	public void AccelerateMomentarely(float acceleratedTime)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x7CB274", Offset = "0x7CB274", VA = "0x7CB274")]
	private void RestartObject()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x7CBBA0", Offset = "0x7CBBA0", VA = "0x7CBBA0")]
	private void Explosion()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x7CB140", Offset = "0x7CB140", VA = "0x7CB140")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F694", Offset = "0x54F694")]
	private IEnumerator<float> _DeathEffect()
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x7CBB08", Offset = "0x7CBB08", VA = "0x7CBB08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F6F8", Offset = "0x54F6F8")]
	private IEnumerator<float> _Accelerate(float acceleratedTime)
	{
		return null;
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x7CB6B8", Offset = "0x7CB6B8", VA = "0x7CB6B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F75C", Offset = "0x54F75C")]
	private IEnumerator<float> _Bounce(float time)
	{
		return null;
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x7CBED8", Offset = "0x7CBED8", VA = "0x7CBED8")]
	public SpinningTopObject()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x7CBEEC", Offset = "0x7CBEEC", VA = "0x7CBEEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F7C0", Offset = "0x54F7C0")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x200007B")]
public class SpringObject : SpawnedObject
{
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539610", Offset = "0x539610")]
	private sealed class <_BuildUp>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float seconds;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpringObject <>4__this;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <repeating>5__2;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeLeft>5__3;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <originalTime>5__4;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoxCollider <myBoxCollider>5__5;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <originalBoxColliderY>5__6;

		[Token(Token = "0x17000202")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600250B")]
			[Address(RVA = "0x7CE458", Offset = "0x7CE458", VA = "0x7CE458", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000203")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600250D")]
			[Address(RVA = "0x7CE4C8", Offset = "0x7CE4C8", VA = "0x7CE4C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x7CE084", Offset = "0x7CE084", VA = "0x7CE084")]
		[DebuggerHidden]
		public <_BuildUp>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x7CE110", Offset = "0x7CE110", VA = "0x7CE110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x7CE114", Offset = "0x7CE114", VA = "0x7CE114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x7CE460", Offset = "0x7CE460", VA = "0x7CE460", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539620", Offset = "0x539620")]
	private sealed class <_ExplosionEffect>d__26 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpringObject <>4__this;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <seconds>5__2;

		[Token(Token = "0x17000204")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002511")]
			[Address(RVA = "0x7CE6F4", Offset = "0x7CE6F4", VA = "0x7CE6F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002513")]
			[Address(RVA = "0x7CE764", Offset = "0x7CE764", VA = "0x7CE764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x7CE0B0", Offset = "0x7CE0B0", VA = "0x7CE0B0")]
		[DebuggerHidden]
		public <_ExplosionEffect>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x7CE52C", Offset = "0x7CE52C", VA = "0x7CE52C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x7CE530", Offset = "0x7CE530", VA = "0x7CE530", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x7CE6FC", Offset = "0x7CE6FC", VA = "0x7CE6FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539630", Offset = "0x539630")]
	private sealed class <_WaitAndRun>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float seconds;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> run;

		[Token(Token = "0x17000206")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002517")]
			[Address(RVA = "0x7CE884", Offset = "0x7CE884", VA = "0x7CE884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000207")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002519")]
			[Address(RVA = "0x7CE8F4", Offset = "0x7CE8F4", VA = "0x7CE8F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x7CE0DC", Offset = "0x7CE0DC", VA = "0x7CE0DC")]
		[DebuggerHidden]
		public <_WaitAndRun>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x7CE7C8", Offset = "0x7CE7C8", VA = "0x7CE7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x7CE7CC", Offset = "0x7CE7CC", VA = "0x7CE7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x7CE88C", Offset = "0x7CE88C", VA = "0x7CE88C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float launchSpeedMultiplier;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float timeFromLaunchToExplosion;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float rotateSpeed;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float minLaunchSpeed;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float maxLaunchSpeed;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float lifeDuration;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private CoroutineHandle BuildUpCoroutine;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody myRB;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool flying;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator myAnimator;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool destroying;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool particleSystemRotationXChanged;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool particleSystemRotationZChanged;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private ParticleSystem myParticleSystem;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ParticleSystem myTrailSystem;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x7CD0D8", Offset = "0x7CD0D8", VA = "0x7CD0D8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x7CD160", Offset = "0x7CD160", VA = "0x7CD160", Slot = "5")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x7CD234", Offset = "0x7CD234", VA = "0x7CD234", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x7CDA2C", Offset = "0x7CDA2C", VA = "0x7CDA2C", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x7CDE9C", Offset = "0x7CDE9C", VA = "0x7CDE9C", Slot = "10")]
	public override void VacuumObject()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x7CDEC0", Offset = "0x7CDEC0", VA = "0x7CDEC0", Slot = "8")]
	public override void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x7CD330", Offset = "0x7CD330", VA = "0x7CD330")]
	private void Launch(float speed)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x7CE05C", Offset = "0x7CE05C", VA = "0x7CE05C")]
	private void ExplosionEffect()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x7CDA68", Offset = "0x7CDA68", VA = "0x7CDA68")]
	private void RestartObject()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x7CD300", Offset = "0x7CD300", VA = "0x7CD300")]
	private float CalculateLaunchSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x7CDFC4", Offset = "0x7CDFC4", VA = "0x7CDFC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F7F8", Offset = "0x54F7F8")]
	private IEnumerator<float> _BuildUp(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x7CD920", Offset = "0x7CD920", VA = "0x7CD920")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F85C", Offset = "0x54F85C")]
	private IEnumerator<float> _ExplosionEffect()
	{
		return null;
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x7CD994", Offset = "0x7CD994", VA = "0x7CD994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F8C0", Offset = "0x54F8C0")]
	private IEnumerator<float> _WaitAndRun(float seconds, IEnumerator<float> run)
	{
		return null;
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x7CE108", Offset = "0x7CE108", VA = "0x7CE108")]
	public SpringObject()
	{
	}
}
[Token(Token = "0x200007C")]
public class StarObject : SpawnedObject
{
	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539640", Offset = "0x539640")]
	private sealed class <_DeathEffect>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StarObject <>4__this;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <time>5__2;

		[Token(Token = "0x17000208")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0x7D0748", Offset = "0x7D0748", VA = "0x7D0748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000209")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600251F")]
			[Address(RVA = "0x7D07B8", Offset = "0x7D07B8", VA = "0x7D07B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x7D0528", Offset = "0x7D0528", VA = "0x7D0528")]
		[DebuggerHidden]
		public <_DeathEffect>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x7D056C", Offset = "0x7D056C", VA = "0x7D056C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x7D0570", Offset = "0x7D0570", VA = "0x7D0570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x7D0750", Offset = "0x7D0750", VA = "0x7D0750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float spinSpeed;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float maxVelocity;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystem trailParticleSystem;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ParticleSystem myDeathParticleSystem;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject myGameObject;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Rigidbody myRB;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform childTransform;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 originalChildDistance;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isInBlackHoleArea;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool objectSpawned;

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x7CF5E8", Offset = "0x7CF5E8", VA = "0x7CF5E8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x7CF74C", Offset = "0x7CF74C", VA = "0x7CF74C", Slot = "5")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x7CFBEC", Offset = "0x7CFBEC", VA = "0x7CFBEC", Slot = "7")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x7CFD94", Offset = "0x7CFD94", VA = "0x7CFD94", Slot = "9")]
	public override void CancelObject()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x7CFF14", Offset = "0x7CFF14", VA = "0x7CFF14", Slot = "10")]
	public override void VacuumObject()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x7CFF74", Offset = "0x7CFF74", VA = "0x7CFF74", Slot = "8")]
	public override void ObjectGenerated(Spawner senderSpawner)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x7D0390", Offset = "0x7D0390", VA = "0x7D0390")]
	public void EnteredBalckHoleArea(bool entered)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x7D0328", Offset = "0x7D0328", VA = "0x7D0328")]
	private void ThrowObject(Vector3 velocity)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x7CFDF4", Offset = "0x7CFDF4", VA = "0x7CFDF4")]
	private void RestartObject()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x7D039C", Offset = "0x7D039C", VA = "0x7D039C")]
	private void StartParticleSystem()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x7CFD20", Offset = "0x7CFD20", VA = "0x7CFD20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F924", Offset = "0x54F924")]
	public IEnumerator<float> _DeathEffect()
	{
		return null;
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x7D0554", Offset = "0x7D0554", VA = "0x7D0554")]
	public StarObject()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x7D0568", Offset = "0x7D0568", VA = "0x7D0568")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F988", Offset = "0x54F988")]
	[DebuggerHidden]
	private void <>n__0()
	{
	}
}
[Token(Token = "0x200007D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x5363E4", Offset = "0x5363E4")]
public class AchievementScriptable : ScriptableObject
{
	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ps4AchievementIds;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] ps4AchievementIds2;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool[] alreadyAchieved;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<string, int> ps4IdDictionary;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xA32564", Offset = "0xA32564", VA = "0xA32564")]
	public void InitDictionary()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xA32808", Offset = "0xA32808", VA = "0xA32808")]
	public static void TriggerAchievement(string achievementId)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xA329BC", Offset = "0xA329BC", VA = "0xA329BC")]
	public AchievementScriptable()
	{
	}
}
[Token(Token = "0x200007E")]
public class AudioSpectrumToShaders : MonoBehaviour
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lowSpectrum;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float midSpectrum;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float highSpectrum;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lowTotal;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float midTotal;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float highTotal;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float decayRate;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float effectMultiplier;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xA36BC0", Offset = "0xA36BC0", VA = "0xA36BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xA36ED0", Offset = "0xA36ED0", VA = "0xA36ED0")]
	public AudioSpectrumToShaders()
	{
	}
}
[Token(Token = "0x200007F")]
public class BiggerFovDisplayCamera : MonoBehaviour
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera myCamera;

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xA4A308", Offset = "0xA4A308", VA = "0xA4A308")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xA4A378", Offset = "0xA4A378", VA = "0xA4A378")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xA4A3AC", Offset = "0xA4A3AC", VA = "0xA4A3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xA4A430", Offset = "0xA4A430", VA = "0xA4A430")]
	public BiggerFovDisplayCamera()
	{
	}
}
[Token(Token = "0x2000080")]
public class ChangeToolsColor : MonoBehaviour
{
	[Token(Token = "0x2000422")]
	public class ToolIconObject
	{
		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh myMesh;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color[] colors;

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x7600F8", Offset = "0x7600F8", VA = "0x7600F8")]
		public ToolIconObject()
		{
		}
	}

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter[] myMeshFilters;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh[] myMeshes;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ToolIconObject> toolIcons;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] myControllers;

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x75FA7C", Offset = "0x75FA7C", VA = "0x75FA7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x75FBEC", Offset = "0x75FBEC", VA = "0x75FBEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x75FD5C", Offset = "0x75FD5C", VA = "0x75FD5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x75FEC8", Offset = "0x75FEC8", VA = "0x75FEC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x760100", Offset = "0x760100", VA = "0x760100")]
	private void ChangeColors()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x760370", Offset = "0x760370", VA = "0x760370")]
	private void ChangeObjectVertexColor(Mesh objectToAffectMesh, Color toColor)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x7602BC", Offset = "0x7602BC", VA = "0x7602BC")]
	private void ChangeObjectVertexColor(ToolIconObject objectToAffect, Color toColor)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x7604BC", Offset = "0x7604BC", VA = "0x7604BC")]
	private void BasicColor()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x760760", Offset = "0x760760", VA = "0x760760")]
	public ChangeToolsColor()
	{
	}
}
[Token(Token = "0x2000081")]
public class ColorPicker : MonoBehaviour
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color selectedColor;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 position;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRTK_ControllerEvents rightHandEvents;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ColorWheel colorWheel;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool onElementArea;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool triggerBeingPressed;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool buttonOnePressed;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool buttonTwoPressed;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool buttonThreePressed;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool buttonFourPressed;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool pointerActive;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRTK_Pointer pointer;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public ButtonEventManager.ButtonAlias buttonAlias;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x761E34", Offset = "0x761E34", VA = "0x761E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x761F50", Offset = "0x761F50", VA = "0x761F50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x762024", Offset = "0x762024", VA = "0x762024")]
	private void TriggerPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x762034", Offset = "0x762034", VA = "0x762034")]
	public void ButtonOnePressed()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x762048", Offset = "0x762048", VA = "0x762048")]
	public void ButtonTwoPressed()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x76205C", Offset = "0x76205C", VA = "0x76205C")]
	public void ButtonThreePressed()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x762070", Offset = "0x762070", VA = "0x762070")]
	public void ButtonFourPressed()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x762084", Offset = "0x762084", VA = "0x762084")]
	private void TriggerReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x76208C", Offset = "0x76208C", VA = "0x76208C")]
	public void ButtonOneReleased()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x762094", Offset = "0x762094", VA = "0x762094")]
	public void ButtonTwoReleased()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x76209C", Offset = "0x76209C", VA = "0x76209C")]
	public void ButtonThreeReleased()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x7620A4", Offset = "0x7620A4", VA = "0x7620A4")]
	public void ButtonFourReleased()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x7620AC", Offset = "0x7620AC", VA = "0x7620AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x762168", Offset = "0x762168", VA = "0x762168")]
	public void ElementEnter(object sender, VRTK_UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x762218", Offset = "0x762218", VA = "0x762218")]
	public void ElementExit(object sender, VRTK_UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x762220", Offset = "0x762220", VA = "0x762220")]
	public void ShowPointer(bool show)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x762388", Offset = "0x762388", VA = "0x762388")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x7623CC", Offset = "0x7623CC", VA = "0x7623CC")]
	private void PickColor(ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x762288", Offset = "0x762288", VA = "0x762288")]
	private void ToggleSpawning(bool spawningActive)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x7628E8", Offset = "0x7628E8", VA = "0x7628E8")]
	public ColorPicker()
	{
	}
}
[Token(Token = "0x2000082")]
public class ColorWheel : MonoBehaviour
{
	[Token(Token = "0x2000423")]
	public class AutomaticHueColorIndex
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minValue;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxValue;

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x765AD4", Offset = "0x765AD4", VA = "0x765AD4")]
		public AutomaticHueColorIndex()
		{
		}
	}

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorPicker colorPicker;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button hueButton;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B990", Offset = "0x53B990")]
	public int hueStepsFreeDraw;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53B9C8", Offset = "0x53B9C8")]
	public int hueStepsObject;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image pickedColorImage;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image buttonImage;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 screenPoint;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RectTransform rectTransform;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float imgWidth;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float imgHeight;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Canvas myCanvas;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color pickedColor;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] localCorners;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool canShow;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool usingHueCycle;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float hueAmount;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<AutomaticHueColorIndex> automaticHueColorIndices;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x764EDC", Offset = "0x764EDC", VA = "0x764EDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x765034", Offset = "0x765034", VA = "0x765034")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x76518C", Offset = "0x76518C", VA = "0x76518C")]
	private void TouchPadPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x765204", Offset = "0x765204", VA = "0x765204")]
	private void TouchPadReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x76520C", Offset = "0x76520C", VA = "0x76520C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x75D4DC", Offset = "0x75D4DC", VA = "0x75D4DC")]
	public void SwitchToHueCycle()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x7655E0", Offset = "0x7655E0", VA = "0x7655E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x765654", Offset = "0x765654", VA = "0x765654")]
	public Color GetNextHueColorFreeDraw()
	{
		return default(Color);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x765688", Offset = "0x765688", VA = "0x765688")]
	public Color GetCurrentHueColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x765580", Offset = "0x765580", VA = "0x765580")]
	public Color GetNextHueColorObject()
	{
		return default(Color);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x762554", Offset = "0x762554", VA = "0x762554")]
	public Color GetPixel(Vector2 position)
	{
		return default(Color);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x761AB8", Offset = "0x761AB8", VA = "0x761AB8")]
	public Color GetRandomColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x7616C4", Offset = "0x7616C4", VA = "0x7616C4")]
	public void ToggleCanShow(bool show)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x765864", Offset = "0x765864", VA = "0x765864")]
	private void ChangePickedColor(Color newColor)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x7651A0", Offset = "0x7651A0", VA = "0x7651A0")]
	private void ShowColorWheel(bool show)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x7658D4", Offset = "0x7658D4", VA = "0x7658D4")]
	private void DetermineColorIndex(float coordinateX, float coordinateY, int sectorQuantity)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x76569C", Offset = "0x76569C", VA = "0x76569C")]
	public void DetermineAutomaticColorIndex()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x7653F0", Offset = "0x7653F0", VA = "0x7653F0")]
	private void SetupAutomaticHueColorIndex()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x765ADC", Offset = "0x765ADC", VA = "0x765ADC")]
	public ColorWheel()
	{
	}
}
[Token(Token = "0x2000083")]
public class ControlTouchpadMovement : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_TouchpadControl touchpadControl;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 originalAxisDeadzone;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x76675C", Offset = "0x76675C", VA = "0x76675C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x766A00", Offset = "0x766A00", VA = "0x766A00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x766CA4", Offset = "0x766CA4", VA = "0x766CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x766D9C", Offset = "0x766D9C", VA = "0x766D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x766EA0", Offset = "0x766EA0", VA = "0x766EA0")]
	private void AllowTouchpadMovement()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x766E14", Offset = "0x766E14", VA = "0x766E14")]
	private void DisableTouchpadMovement()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x766ED8", Offset = "0x766ED8", VA = "0x766ED8")]
	public ControlTouchpadMovement()
	{
	}
}
[Token(Token = "0x2000084")]
public static class ExtensionMethods
{
	[Token(Token = "0x600060B")]
	[Address(RVA = "0x76C8CC", Offset = "0x76C8CC", VA = "0x76C8CC")]
	public static float Remap(this float value, float oldMin, float oldMax, float newMin, float newMax)
	{
		return default(float);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x76C8E8", Offset = "0x76C8E8", VA = "0x76C8E8")]
	public static bool IsInside(this Vector3 p_Point, BoxCollider p_Box)
	{
		return default(bool);
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x76CAC4", Offset = "0x76CAC4", VA = "0x76CAC4")]
	public static bool HasCommandLineArgument(string argumentName)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000085")]
public static class QuaternionExtension
{
	[Token(Token = "0x600060E")]
	[Address(RVA = "0x7C1E58", Offset = "0x7C1E58", VA = "0x7C1E58")]
	public static Quaternion Lerp(Quaternion p, Quaternion q, float t, bool shortWay)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x7C2014", Offset = "0x7C2014", VA = "0x7C2014")]
	public static Quaternion Slerp(Quaternion p, Quaternion q, float t, bool shortWay)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x7C1FD4", Offset = "0x7C1FD4", VA = "0x7C1FD4")]
	public static Quaternion ScalarMultiply(Quaternion input, float scalar)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x7C2210", Offset = "0x7C2210", VA = "0x7C2210")]
	public static Quaternion Add(Quaternion p, Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000086")]
public class FloorChangeColor : MonoBehaviour
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material myMaterial;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color fogColorMultiplier;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 newPosition;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 offset;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DEV_FloorTextureScaler[] dEV_FloorTextureScalers;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x76CB64", Offset = "0x76CB64", VA = "0x76CB64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x76CBD4", Offset = "0x76CBD4", VA = "0x76CBD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x76CC44", Offset = "0x76CC44", VA = "0x76CC44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x76CCFC", Offset = "0x76CCFC", VA = "0x76CCFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x76CD00", Offset = "0x76CD00", VA = "0x76CD00")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x76CD04", Offset = "0x76CD04", VA = "0x76CD04")]
	public void ChangeColor(Color toColor)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x76CD7C", Offset = "0x76CD7C", VA = "0x76CD7C")]
	private void ChangeColor()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x76CECC", Offset = "0x76CECC", VA = "0x76CECC")]
	public FloorChangeColor()
	{
	}
}
[Token(Token = "0x2000087")]
public class FreeDrawBatcher : MonoBehaviour
{
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539650", Offset = "0x539650")]
	private sealed class <_Deteriorate>d__40 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToDeteriorate2;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FreeDrawBatcher <>4__this;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <deterioratedObjectsCount>5__3;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timeToDeteriorate>5__4;

		[Token(Token = "0x1700020A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x76FA7C", Offset = "0x76FA7C", VA = "0x76FA7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x76FAEC", Offset = "0x76FAEC", VA = "0x76FAEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x76F430", Offset = "0x76F430", VA = "0x76F430")]
		[DebuggerHidden]
		public <_Deteriorate>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x76F748", Offset = "0x76F748", VA = "0x76F748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x76F74C", Offset = "0x76F74C", VA = "0x76F74C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x76FA84", Offset = "0x76FA84", VA = "0x76FA84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FreeDrawBatcher _instance;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 minScale;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53BA10", Offset = "0x53BA10")]
	public float distanceBetweenSpawnedObjects;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public QuadTreeManager quadTreeManager;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Matrix4x4[]> bufferedData;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector4[]> bufferedColors;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Matrix4x4> lastBufferedData;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector4> lastBufferedColors;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Matrix4x4[]> tBuffers;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector4[]> colors;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int activeObjectsCount;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int toBatchCount;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int alreadyBatchedCount;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int lastBatchAmount;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> modifyBatchNumbers;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool modifyBatch;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int maxFreeDrawObjectAmount;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<FreeDrawnObjectData> activeObjects;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool hasChanged;

	[Token(Token = "0x40004EC")]
	private const int batchSize = 1023;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int runningIndex;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FreeDrawSpawner[] mySpawners;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color objectColor;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Camera mainCamera;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Camera secondaryCamera;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public float freeDrawLength;

	[Token(Token = "0x17000069")]
	public static FreeDrawBatcher Instance
	{
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x76CF70", Offset = "0x76CF70", VA = "0x76CF70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x76CFC0", Offset = "0x76CFC0", VA = "0x76CFC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x76D11C", Offset = "0x76D11C", VA = "0x76D11C")]
	private void InitCameras()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x76D3B8", Offset = "0x76D3B8", VA = "0x76D3B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x76D554", Offset = "0x76D554", VA = "0x76D554")]
	private void Update()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x76E6FC", Offset = "0x76E6FC", VA = "0x76E6FC")]
	public void ChangeSize(float newSize)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x76E81C", Offset = "0x76E81C", VA = "0x76E81C")]
	public void DeteriorateObjects(float time)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x76E93C", Offset = "0x76E93C", VA = "0x76E93C")]
	public void ActivateObject(Vector3 position, Quaternion rotation, int objectID)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x76F144", Offset = "0x76F144", VA = "0x76F144")]
	public void ModifyBatches(List<int> batchNumbers)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x76F2A0", Offset = "0x76F2A0", VA = "0x76F2A0")]
	public void AddBatchToModify(int batchNumber)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x76D558", Offset = "0x76D558", VA = "0x76D558")]
	public void BatchAndRender()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x76E8A4", Offset = "0x76E8A4", VA = "0x76E8A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54F9E0", Offset = "0x54F9E0")]
	public IEnumerator<float> _Deteriorate(float timeToDeteriorate2)
	{
		return null;
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x76F45C", Offset = "0x76F45C", VA = "0x76F45C")]
	public void DisableAll()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x76F5F8", Offset = "0x76F5F8", VA = "0x76F5F8")]
	public List<FreeDrawnObjectData> GetActiveObjects()
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x76F600", Offset = "0x76F600", VA = "0x76F600")]
	public FreeDrawBatcher()
	{
	}
}
[Token(Token = "0x2000088")]
public static class MatrixExtensions
{
	[Token(Token = "0x6000629")]
	[Address(RVA = "0x8606F8", Offset = "0x8606F8", VA = "0x8606F8")]
	public static Vector3 ExtractPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000089")]
public class FreeDrawnObjectData : ICollisionBody, IQuadTreeBody
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 pos;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion rot;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 scale;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 color;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int myID;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ICollisionShape _shape;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53BA58", Offset = "0x53BA58")]
	private int <RefId>k__BackingField;

	[Token(Token = "0x1700006A")]
	public Matrix4x4 renderData
	{
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x76F358", Offset = "0x76F358", VA = "0x76F358")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700006B")]
	public int RefId
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x771160", Offset = "0x771160", VA = "0x771160", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FA54", Offset = "0x54FA54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x76F13C", Offset = "0x76F13C", VA = "0x76F13C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FA64", Offset = "0x54FA64")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public bool Sleeping
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x771168", Offset = "0x771168", VA = "0x771168", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006D")]
	public ICollisionShape CollisionShape
	{
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x771170", Offset = "0x771170", VA = "0x771170", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public Vector2 Position
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x771178", Offset = "0x771178", VA = "0x771178", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700006F")]
	public bool QuadTreeIgnore
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x7711AC", Offset = "0x7711AC", VA = "0x7711AC", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x76EF78", Offset = "0x76EF78", VA = "0x76EF78")]
	public void SetShape()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x7711B4", Offset = "0x7711B4", VA = "0x7711B4", Slot = "8")]
	public void OnCollision(CollisionResult result, ICollisionBody other)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x76F134", Offset = "0x76F134", VA = "0x76F134")]
	public FreeDrawnObjectData()
	{
	}
}
[Token(Token = "0x200008A")]
public class HandMovement : MonoBehaviour
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 playAreaSize;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool buttonPressed;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform playArea;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform centerEyeAnchorTransform;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x771490", Offset = "0x771490", VA = "0x771490")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x7715AC", Offset = "0x7715AC", VA = "0x7715AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x771680", Offset = "0x771680", VA = "0x771680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x771700", Offset = "0x771700", VA = "0x771700")]
	private void ButtonPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x7717A8", Offset = "0x7717A8", VA = "0x7717A8")]
	private void ButtonReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x7717B0", Offset = "0x7717B0", VA = "0x7717B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x7717C0", Offset = "0x7717C0", VA = "0x7717C0")]
	private void Move()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x771AF8", Offset = "0x771AF8", VA = "0x771AF8")]
	public void AdjustMovementSpeed(float speed)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x771B00", Offset = "0x771B00", VA = "0x771B00")]
	public HandMovement()
	{
	}
}
[Token(Token = "0x200008B")]
public class HandTurning : MonoBehaviour
{
	[Token(Token = "0x2000425")]
	public enum MovementType
	{
		[Token(Token = "0x400174C")]
		SnapTurn,
		[Token(Token = "0x400174D")]
		SmoothRotation,
		[Token(Token = "0x400174E")]
		SlideRotation
	}

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53BA88", Offset = "0x53BA88")]
	private float smoothRotationSpeed;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53BAD4", Offset = "0x53BAD4")]
	private float sliderRotationAngleThreshold;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementType movementType;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform playArea;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool buttonBeingPressed;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float oldRotation;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x771B90", Offset = "0x771B90", VA = "0x771B90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x771CAC", Offset = "0x771CAC", VA = "0x771CAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x771D80", Offset = "0x771D80", VA = "0x771D80")]
	private void ButtonPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x7720E0", Offset = "0x7720E0", VA = "0x7720E0")]
	private void ButtonReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x7720E8", Offset = "0x7720E8", VA = "0x7720E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x771E9C", Offset = "0x771E9C", VA = "0x771E9C")]
	private void SnapRotatePlayer()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x772144", Offset = "0x772144", VA = "0x772144")]
	private void SmoothRotation()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x7723C0", Offset = "0x7723C0", VA = "0x7723C0")]
	private void SlideRotation()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x772634", Offset = "0x772634", VA = "0x772634")]
	public HandTurning()
	{
	}
}
[Token(Token = "0x200008C")]
public static class HandyExtensions
{
	[Token(Token = "0x6000646")]
	public static bool HasComponent<T>(this GameObject obj) where T : Component
	{
		return default(bool);
	}

	[Token(Token = "0x6000647")]
	public static bool HasComponentInParent<T>(this GameObject obj) where T : Component
	{
		return default(bool);
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x772650", Offset = "0x772650", VA = "0x772650")]
	public static void PlayParticles(ParticleSystem particleSystem, SpawnedObject caller)
	{
	}
}
[Token(Token = "0x200008D")]
public class HapticRumble : MonoBehaviour
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpawnedObject touchedObject;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool controllerInsideObject;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private OVRInput.Controller controller;

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x772814", Offset = "0x772814", VA = "0x772814")]
	private void Update()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x77290C", Offset = "0x77290C", VA = "0x77290C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x7729B0", Offset = "0x7729B0", VA = "0x7729B0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x772A5C", Offset = "0x772A5C", VA = "0x772A5C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x772824", Offset = "0x772824", VA = "0x772824")]
	private void TriggerHapticRumble()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x772ADC", Offset = "0x772ADC", VA = "0x772ADC")]
	public HapticRumble()
	{
	}
}
[Token(Token = "0x200008E")]
public class LoadingScreen : MonoBehaviour
{
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539660", Offset = "0x539660")]
	private sealed class <QuitCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700020C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600252B")]
			[Address(RVA = "0x85BDAC", Offset = "0x85BDAC", VA = "0x85BDAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0x85BE1C", Offset = "0x85BE1C", VA = "0x85BE1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x85BB34", Offset = "0x85BB34", VA = "0x85BB34")]
		[DebuggerHidden]
		public <QuitCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x85BD0C", Offset = "0x85BD0C", VA = "0x85BD0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x85BD10", Offset = "0x85BD10", VA = "0x85BD10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x85BDB4", Offset = "0x85BDB4", VA = "0x85BDB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539670", Offset = "0x539670")]
	private sealed class <DelayedLoad>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreen <>4__this;

		[Token(Token = "0x1700020E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002531")]
			[Address(RVA = "0x85BC94", Offset = "0x85BC94", VA = "0x85BC94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002533")]
			[Address(RVA = "0x85BD04", Offset = "0x85BD04", VA = "0x85BD04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x85BB60", Offset = "0x85BB60", VA = "0x85BB60")]
		[DebuggerHidden]
		public <DelayedLoad>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x85BB9C", Offset = "0x85BB9C", VA = "0x85BB9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x85BBA0", Offset = "0x85BBA0", VA = "0x85BBA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x85BC9C", Offset = "0x85BC9C", VA = "0x85BC9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int SceneIndex;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool loading;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AsyncOperation loadOperation;

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x85BA10", Offset = "0x85BA10", VA = "0x85BA10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x85BA14", Offset = "0x85BA14", VA = "0x85BA14")]
	private void DoLoad()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x85BAD4", Offset = "0x85BAD4", VA = "0x85BAD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54FA94", Offset = "0x54FA94")]
	private IEnumerator QuitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x85BA60", Offset = "0x85BA60", VA = "0x85BA60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54FAF8", Offset = "0x54FAF8")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x85BB8C", Offset = "0x85BB8C", VA = "0x85BB8C")]
	public LoadingScreen()
	{
	}
}
[Token(Token = "0x200008F")]
public class LocalizeText : MonoBehaviour
{
	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI tmp;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textID;

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x85CA40", Offset = "0x85CA40", VA = "0x85CA40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x85CC88", Offset = "0x85CC88", VA = "0x85CC88")]
	public LocalizeText()
	{
	}
}
[Token(Token = "0x2000090")]
public class MenuPointer : MonoBehaviour
{
	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_Pointer pointer;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x860704", Offset = "0x860704", VA = "0x860704")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x860140", Offset = "0x860140", VA = "0x860140")]
	public void ShowPointer(bool show)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x860774", Offset = "0x860774", VA = "0x860774")]
	public MenuPointer()
	{
	}
}
[Token(Token = "0x2000091")]
public class MeshMerger : MonoBehaviour
{
	[Token(Token = "0x6000659")]
	[Address(RVA = "0x86077C", Offset = "0x86077C", VA = "0x86077C")]
	private void Start()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x860AAC", Offset = "0x860AAC", VA = "0x860AAC")]
	public MeshMerger()
	{
	}
}
[Token(Token = "0x2000092")]
public class NewRadialMenu : VRTK_RadialMenuController
{
	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool allowShow;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x861690", Offset = "0x861690", VA = "0x861690", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x861A4C", Offset = "0x861A4C", VA = "0x861A4C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x861C30", Offset = "0x861C30", VA = "0x861C30", Slot = "18")]
	protected override void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x861D24", Offset = "0x861D24", VA = "0x861D24")]
	public void ToggleRadialMenu(bool toggle)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x861D48", Offset = "0x861D48", VA = "0x861D48")]
	public NewRadialMenu()
	{
	}
}
[Token(Token = "0x2000093")]
public class ObjectCancel : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SpawnedObject> spawnedObjects;

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x8750BC", Offset = "0x8750BC", VA = "0x8750BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x875164", Offset = "0x875164", VA = "0x875164")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x8751F4", Offset = "0x8751F4", VA = "0x8751F4")]
	private void ButtonPressedEvent(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x8751F8", Offset = "0x8751F8", VA = "0x8751F8")]
	private void ButtonPressed()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x875264", Offset = "0x875264", VA = "0x875264")]
	private void RemoveObject()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x87555C", Offset = "0x87555C", VA = "0x87555C")]
	public ObjectCancel()
	{
	}
}
[Token(Token = "0x2000094")]
public class OculusDashSupport : MonoBehaviour
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ToolIconChanger toolIconChangerL;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ToolIconChanger toolIconChangerR;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRTK_Pointer menuPointerL;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRTK_Pointer menuPointerR;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer controllerModelL;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer controllerModelR;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x88FA74", Offset = "0x88FA74", VA = "0x88FA74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x88FC48", Offset = "0x88FC48", VA = "0x88FC48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x88FD14", Offset = "0x88FD14", VA = "0x88FD14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x88FE24", Offset = "0x88FE24", VA = "0x88FE24")]
	private void InputFocusAcquired()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x88FF58", Offset = "0x88FF58", VA = "0x88FF58")]
	private void InputFocusLost()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x8900B0", Offset = "0x8900B0", VA = "0x8900B0")]
	public OculusDashSupport()
	{
	}
}
[Token(Token = "0x2000095")]
public class PhaseChangeIndicator : MonoBehaviour
{
	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] myScriptAliases;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[][] childHost;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x897A44", Offset = "0x897A44", VA = "0x897A44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x897AF0", Offset = "0x897AF0", VA = "0x897AF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x897B9C", Offset = "0x897B9C", VA = "0x897B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x897D10", Offset = "0x897D10", VA = "0x897D10")]
	private void DisableIcons()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x897E00", Offset = "0x897E00", VA = "0x897E00")]
	private void EnableIcons()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x897EF0", Offset = "0x897EF0", VA = "0x897EF0")]
	public PhaseChangeIndicator()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x536468", Offset = "0x536468")]
public class SongPackSelector : MonoBehaviour
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SongPackSelector _instance;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<AudioClipData> drumObjectAudioDataHolder;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<AudioClipData> bassObjectAudioDataHolder;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<AudioClipData> glitterObjectAudioDataHolder;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<AudioClipData> sawObjectAudioDataHolder;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<AudioClipData> synthObjectAudioDataHolder;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<FreeDrawClipData> freeDrawAudioClipDatas;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioManager audioManager;

	[Token(Token = "0x17000070")]
	public static SongPackSelector Instance
	{
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x7C9960", Offset = "0x7C9960", VA = "0x7C9960")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x7C99B0", Offset = "0x7C99B0", VA = "0x7C99B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x7C9AF0", Offset = "0x7C9AF0", VA = "0x7C9AF0")]
	public void ChangeSongPack(int songPackID)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x7CA5C0", Offset = "0x7CA5C0", VA = "0x7CA5C0")]
	public SongPackSelector()
	{
	}
}
[Token(Token = "0x2000097")]
public class StartGamePrompt : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] myControllers;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float blinkDuration;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeLeft;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color newColor;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject startWallControllerL;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject startWallControllerR;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private OVRInput.Controller controller1;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private OVRInput.Controller controller2;

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x7942A4", Offset = "0x7942A4", VA = "0x7942A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x7942A8", Offset = "0x7942A8", VA = "0x7942A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x7942AC", Offset = "0x7942AC", VA = "0x7942AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x794484", Offset = "0x794484", VA = "0x794484")]
	private void Awake()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x7944FC", Offset = "0x7944FC", VA = "0x7944FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x79482C", Offset = "0x79482C", VA = "0x79482C")]
	private void ReturnBaseColor()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x794790", Offset = "0x794790", VA = "0x794790")]
	private void HapticRumble(float rumbleStrength)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x7949CC", Offset = "0x7949CC", VA = "0x7949CC")]
	public StartGamePrompt()
	{
	}
}
[Token(Token = "0x2000098")]
public class StartWall : MonoBehaviour
{
	[Token(Token = "0x2000428")]
	public enum StartWallState
	{
		[Token(Token = "0x4001755")]
		Ready,
		[Token(Token = "0x4001756")]
		Moving
	}

	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539680", Offset = "0x539680")]
	private sealed class <_MoveWall>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartWall <>4__this;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float height;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lowerTime;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <newPosition>5__3;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startingPosition>5__4;

		[Token(Token = "0x17000210")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002537")]
			[Address(RVA = "0x7956B0", Offset = "0x7956B0", VA = "0x7956B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000211")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002539")]
			[Address(RVA = "0x795720", Offset = "0x795720", VA = "0x795720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x795358", Offset = "0x795358", VA = "0x795358")]
		[DebuggerHidden]
		public <_MoveWall>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x7953F0", Offset = "0x7953F0", VA = "0x7953F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x7953F4", Offset = "0x7953F4", VA = "0x7953F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x7956B8", Offset = "0x7956B8", VA = "0x7956B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539690", Offset = "0x539690")]
	private sealed class <_WaitAndRun>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float seconds;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> run;

		[Token(Token = "0x17000212")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600253D")]
			[Address(RVA = "0x795A74", Offset = "0x795A74", VA = "0x795A74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0x795AE4", Offset = "0x795AE4", VA = "0x795AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x795384", Offset = "0x795384", VA = "0x795384")]
		[DebuggerHidden]
		public <_WaitAndRun>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x7959B8", Offset = "0x7959B8", VA = "0x7959B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x7959BC", Offset = "0x7959BC", VA = "0x7959BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x795A7C", Offset = "0x795A7C", VA = "0x795A7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5396A0", Offset = "0x5396A0")]
	private sealed class <_ToggleWallMeshes>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartWall <>4__this;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool boolean;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer[] <>7__wrap1;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x17000214")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0x7958E4", Offset = "0x7958E4", VA = "0x7958E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000215")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002545")]
			[Address(RVA = "0x795954", Offset = "0x795954", VA = "0x795954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x7953B0", Offset = "0x7953B0", VA = "0x7953B0")]
		[DebuggerHidden]
		public <_ToggleWallMeshes>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x795784", Offset = "0x795784", VA = "0x795784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x795788", Offset = "0x795788", VA = "0x795788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x7958EC", Offset = "0x7958EC", VA = "0x7958EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float spawnDistance;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float lowerSpeedInSeconds;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject simulator;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject oculus;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject toFollow;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float sizeY;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public StartWallState currentWallState;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x794A44", Offset = "0x794A44", VA = "0x794A44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x794A48", Offset = "0x794A48", VA = "0x794A48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x794A4C", Offset = "0x794A4C", VA = "0x794A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x794E64", Offset = "0x794E64", VA = "0x794E64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x794AD0", Offset = "0x794AD0", VA = "0x794AD0")]
	public void RaiseWall()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x7950A0", Offset = "0x7950A0", VA = "0x7950A0")]
	public void LowerWall()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x795144", Offset = "0x795144", VA = "0x795144")]
	private void ChangeColors()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x795240", Offset = "0x795240", VA = "0x795240")]
	private void ChangeObjectVertexColor(MeshFilter objectToAffectMeshFilter, Color toColor)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x794F58", Offset = "0x794F58", VA = "0x794F58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54FB5C", Offset = "0x54FB5C")]
	private IEnumerator<float> _MoveWall(float height, float lowerTime)
	{
		return null;
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x795008", Offset = "0x795008", VA = "0x795008")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54FBC0", Offset = "0x54FBC0")]
	private IEnumerator<float> _WaitAndRun(float seconds, IEnumerator<float> run)
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x794EBC", Offset = "0x794EBC", VA = "0x794EBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54FC24", Offset = "0x54FC24")]
	private IEnumerator<float> _ToggleWallMeshes(bool boolean)
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x7953DC", Offset = "0x7953DC", VA = "0x7953DC")]
	public StartWall()
	{
	}
}
[Token(Token = "0x2000099")]
public class SubMenuColorPicker : MonoBehaviour
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color selectedColor;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SubMenuColorWheel colorWheel;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool onElementArea;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRTK_Pointer pointer;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x795B48", Offset = "0x795B48", VA = "0x795B48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x795C3C", Offset = "0x795C3C", VA = "0x795C3C")]
	public void PickColor(Vector2 position)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x795F3C", Offset = "0x795F3C", VA = "0x795F3C")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x795F48", Offset = "0x795F48", VA = "0x795F48")]
	public SubMenuColorPicker()
	{
	}
}
[Token(Token = "0x200009A")]
public class SubMenuColorWheel : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image buttonImage;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 screenPoint;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float imgWidth;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float imgHeight;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color pickedColor;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] localCorners;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera cam;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x795F7C", Offset = "0x795F7C", VA = "0x795F7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x79601C", Offset = "0x79601C", VA = "0x79601C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x795C90", Offset = "0x795C90", VA = "0x795C90")]
	public Color GetPixel(Vector2 position)
	{
		return default(Color);
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x796088", Offset = "0x796088", VA = "0x796088")]
	public SubMenuColorWheel()
	{
	}
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x5364CC", Offset = "0x5364CC")]
public class AudioClipData : ScriptableObject
{
	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int songPackNumber;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smooth;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scalingMultiplier;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float audioVolume;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip audioClip;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int audioIndex;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xA32A38", Offset = "0xA32A38", VA = "0xA32A38")]
	public AudioClipData()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x53653C", Offset = "0x53653C")]
public class FreeDrawClipData : ScriptableObject
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int songPackNumber;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int audioIndex;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip audioClip;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float audioVolume;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x76FB50", Offset = "0x76FB50", VA = "0x76FB50")]
	public FreeDrawClipData()
	{
	}
}
[Token(Token = "0x200009D")]
public class BallSpawner : Spawner
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float growthSpeed;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float currentScale;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xA37F30", Offset = "0xA37F30", VA = "0xA37F30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xA3802C", Offset = "0xA3802C", VA = "0xA3802C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xA38128", Offset = "0xA38128", VA = "0xA38128")]
	private void Update()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xA381F4", Offset = "0xA381F4", VA = "0xA381F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xA38388", Offset = "0xA38388", VA = "0xA38388", Slot = "4")]
	public override void ScaleObject(Vector3 newScale, int audioIndex, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xA384F4", Offset = "0xA384F4", VA = "0xA384F4", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xA38548", Offset = "0xA38548", VA = "0xA38548", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xA38580", Offset = "0xA38580", VA = "0xA38580", Slot = "9")]
	public override void GenerateTransparent()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xA3870C", Offset = "0xA3870C", VA = "0xA3870C", Slot = "10")]
	public override void GenerateFinal()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xA38878", Offset = "0xA38878", VA = "0xA38878")]
	private void ChangeColorEvent()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xA38938", Offset = "0xA38938", VA = "0xA38938", Slot = "6")]
	public override void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xA38AD8", Offset = "0xA38AD8", VA = "0xA38AD8")]
	public BallSpawner()
	{
	}
}
[Token(Token = "0x200009E")]
public class BlackHoleSpawner : Spawner
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float growthSpeed;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float currentScale;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xA4B524", Offset = "0xA4B524", VA = "0xA4B524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xA4B620", Offset = "0xA4B620", VA = "0xA4B620")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xA4B71C", Offset = "0xA4B71C", VA = "0xA4B71C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xA4B7E8", Offset = "0xA4B7E8", VA = "0xA4B7E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xA4B97C", Offset = "0xA4B97C", VA = "0xA4B97C", Slot = "4")]
	public override void ScaleObject(Vector3 newScale, int audioIndex, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xA4BAE8", Offset = "0xA4BAE8", VA = "0xA4BAE8", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xA4BB3C", Offset = "0xA4BB3C", VA = "0xA4BB3C", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xA4BB74", Offset = "0xA4BB74", VA = "0xA4BB74", Slot = "9")]
	public override void GenerateTransparent()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xA4BCE0", Offset = "0xA4BCE0", VA = "0xA4BCE0", Slot = "10")]
	public override void GenerateFinal()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xA4BE4C", Offset = "0xA4BE4C", VA = "0xA4BE4C")]
	private void ChangeColorEvent()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xA4BE50", Offset = "0xA4BE50", VA = "0xA4BE50", Slot = "6")]
	public override void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xA4BFF0", Offset = "0xA4BFF0", VA = "0xA4BFF0")]
	public BlackHoleSpawner()
	{
	}
}
[Token(Token = "0x200009F")]
public class FreeDrawSpawner : Spawner
{
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public float maxDistanceBetweenObjects;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private FreeDrawBatcher freeDrawBatcher;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float handDirectionSmoothAmount;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 handLastPos;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool handGoingUp;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool handGoingRight;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool handGoingForward;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int handID;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 objLastPos;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion objLastRot;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject controllerPosToPlayAudio;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x76FB58", Offset = "0x76FB58", VA = "0x76FB58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x76FC10", Offset = "0x76FC10", VA = "0x76FC10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x76FCC8", Offset = "0x76FCC8", VA = "0x76FCC8", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x76FE54", Offset = "0x76FE54", VA = "0x76FE54", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x7702E4", Offset = "0x7702E4", VA = "0x7702E4", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x7703D4", Offset = "0x7703D4", VA = "0x7703D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x770258", Offset = "0x770258", VA = "0x770258")]
	private void ActivateObject(Vector3 position, Quaternion rotation, int objectID)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x770890", Offset = "0x770890", VA = "0x770890")]
	private void GetHandDirection()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x770AE4", Offset = "0x770AE4", VA = "0x770AE4")]
	private void HandDirectionChanged(Vector3 position)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x770C10", Offset = "0x770C10", VA = "0x770C10")]
	public FreeDrawSpawner()
	{
	}
}
[Token(Token = "0x20000A0")]
public class PyramidSpawner : Spawner
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float baseMinSize;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float growthSpeed;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 controllerStartPosition;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float baseScale;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x7BFF30", Offset = "0x7BFF30", VA = "0x7BFF30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x7C002C", Offset = "0x7C002C", VA = "0x7C002C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x7C0128", Offset = "0x7C0128", VA = "0x7C0128", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x7C02AC", Offset = "0x7C02AC", VA = "0x7C02AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x7C0378", Offset = "0x7C0378", VA = "0x7C0378")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x7C0518", Offset = "0x7C0518", VA = "0x7C0518", Slot = "4")]
	public override void ScaleObject(Vector3 newScale, int audioIndex, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x7C0684", Offset = "0x7C0684", VA = "0x7C0684", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x7C0764", Offset = "0x7C0764", VA = "0x7C0764", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x7C0804", Offset = "0x7C0804", VA = "0x7C0804", Slot = "9")]
	public override void GenerateTransparent()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x7C0D88", Offset = "0x7C0D88", VA = "0x7C0D88", Slot = "10")]
	public override void GenerateFinal()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x7C10E8", Offset = "0x7C10E8", VA = "0x7C10E8")]
	private void ChangeColorEvent()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x7C1194", Offset = "0x7C1194", VA = "0x7C1194", Slot = "6")]
	public override void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x7C1430", Offset = "0x7C1430", VA = "0x7C1430")]
	public PyramidSpawner()
	{
	}
}
[Token(Token = "0x20000A1")]
public class ScalableBoxSpawner : Spawner
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 controllerStartPosition;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float originalThickness;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float maxThickness;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool flatEnough;

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x7C5DDC", Offset = "0x7C5DDC", VA = "0x7C5DDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x7C5F30", Offset = "0x7C5F30", VA = "0x7C5F30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x7C6068", Offset = "0x7C6068", VA = "0x7C6068")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x7C61C0", Offset = "0x7C61C0", VA = "0x7C61C0", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x7C6244", Offset = "0x7C6244", VA = "0x7C6244", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x7C62D4", Offset = "0x7C62D4", VA = "0x7C62D4", Slot = "9")]
	public override void GenerateTransparent()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x7C65B4", Offset = "0x7C65B4", VA = "0x7C65B4", Slot = "10")]
	public override void GenerateFinal()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x7C6700", Offset = "0x7C6700", VA = "0x7C6700")]
	private void ChangeColorEvent()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x7C64B8", Offset = "0x7C64B8", VA = "0x7C64B8")]
	public void ColorChildren()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x7C6858", Offset = "0x7C6858", VA = "0x7C6858", Slot = "6")]
	public override void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x7C6EF0", Offset = "0x7C6EF0", VA = "0x7C6EF0")]
	public ScalableBoxSpawner()
	{
	}
}
[Token(Token = "0x20000A2")]
public class SolidBoxSpawner : Spawner
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 controllerStartPosition;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool flatEnough;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x7C8D04", Offset = "0x7C8D04", VA = "0x7C8D04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x7C8E58", Offset = "0x7C8E58", VA = "0x7C8E58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x7C8F90", Offset = "0x7C8F90", VA = "0x7C8F90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x7C90E8", Offset = "0x7C90E8", VA = "0x7C90E8", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x7C916C", Offset = "0x7C916C", VA = "0x7C916C", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x7C91FC", Offset = "0x7C91FC", VA = "0x7C91FC", Slot = "9")]
	public override void GenerateTransparent()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x7C9394", Offset = "0x7C9394", VA = "0x7C9394", Slot = "10")]
	public override void GenerateFinal()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x7C94E0", Offset = "0x7C94E0", VA = "0x7C94E0")]
	private void ChangeColorEvent()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x7C935C", Offset = "0x7C935C", VA = "0x7C935C")]
	public void ChangeObjectColor()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x7C9638", Offset = "0x7C9638", VA = "0x7C9638", Slot = "6")]
	public override void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x7C995C", Offset = "0x7C995C", VA = "0x7C995C")]
	public SolidBoxSpawner()
	{
	}
}
[Token(Token = "0x20000A3")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x200042C")]
	public enum Hand
	{
		[Token(Token = "0x400176A")]
		Left,
		[Token(Token = "0x400176B")]
		Right
	}

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject objectToInstantiate;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected int maxObjectAmount;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected Vector3 minScale;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Material finalMaterial;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Material transparentMaterial;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53BD40", Offset = "0x53BD40")]
	[SerializeField]
	private float lifeTime;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Hand hand;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected VRTK_ControllerEvents controllerEvents;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject objectParent;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool buttonBeingPressed;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject currentlyGeneratingGameObject;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected List<GameObject> generatedGameObjects;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected List<SpawnedObject> generatedObjectsSript;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected SpawnedObject currentlyGeneratingObjectScript;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected GameObject spawningPosition;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float originalLifeTime;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x7CA944", Offset = "0x7CA944", VA = "0x7CA944")]
	public void RemoveInstance(SpawnedObject spawnedObject)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x7CAA78", Offset = "0x7CAA78", VA = "0x7CAA78")]
	public void AssignSpawningPosObject(GameObject spawnPosObject)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x7CAA80", Offset = "0x7CAA80", VA = "0x7CAA80", Slot = "4")]
	public virtual void ScaleObject(Vector3 newScale, int audioIndex, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x7CAC00", Offset = "0x7CAC00", VA = "0x7CAC00")]
	public void ButtonPressed(VRTK_ControllerEvents controller)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x7C0710", Offset = "0x7C0710", VA = "0x7C0710", Slot = "5")]
	protected virtual void ButtonPressed()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x7CAC10", Offset = "0x7CAC10", VA = "0x7CAC10")]
	public void ButtonReleased(VRTK_ControllerEvents controller)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x7CAC1C", Offset = "0x7CAC1C", VA = "0x7CAC1C")]
	public void CancelAll()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x7C142C", Offset = "0x7C142C", VA = "0x7C142C", Slot = "6")]
	public virtual void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x7C0774", Offset = "0x7C0774", VA = "0x7C0774", Slot = "7")]
	protected virtual void ButtonReleased()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x7C0150", Offset = "0x7C0150", VA = "0x7C0150", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x7CAD2C", Offset = "0x7CAD2C", VA = "0x7CAD2C")]
	private void GenerateObjectPool()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x7CAD70", Offset = "0x7CAD70", VA = "0x7CAD70")]
	private void GenerateObject()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x7C09A4", Offset = "0x7C09A4", VA = "0x7C09A4", Slot = "9")]
	public virtual void GenerateTransparent()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x7C0F28", Offset = "0x7C0F28", VA = "0x7C0F28", Slot = "10")]
	public virtual void GenerateFinal()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x7C6434", Offset = "0x7C6434", VA = "0x7C6434")]
	protected void ChangeCurrentObjectMaterial(GameObject objectToAffect, Material toMaterial)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x7C0BDC", Offset = "0x7C0BDC", VA = "0x7C0BDC")]
	protected void ChangeCurrentObjectColor(GameObject objectToAffect, Color toColor)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x7CAEBC", Offset = "0x7CAEBC", VA = "0x7CAEBC")]
	public Hand GetHand()
	{
		return default(Hand);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x7CAEC4", Offset = "0x7CAEC4", VA = "0x7CAEC4")]
	public void SetLifeTime(bool toOriginal, float time)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x7CA5CC", Offset = "0x7CA5CC", VA = "0x7CA5CC")]
	public float GetLifeTime()
	{
		return default(float);
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x7C1448", Offset = "0x7C1448", VA = "0x7C1448")]
	public Spawner()
	{
	}
}
[Token(Token = "0x20000A4")]
public class SpinningTopSpawner : Spawner
{
	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float baseMinSize;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float growthSpeed;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float baseScale;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject myRenderingObject;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x7CC6D4", Offset = "0x7CC6D4", VA = "0x7CC6D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x7CC7D0", Offset = "0x7CC7D0", VA = "0x7CC7D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x7CC8CC", Offset = "0x7CC8CC", VA = "0x7CC8CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x7CC998", Offset = "0x7CC998", VA = "0x7CC998")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x7CCB2C", Offset = "0x7CCB2C", VA = "0x7CCB2C", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x7CCB7C", Offset = "0x7CCB7C", VA = "0x7CCB7C", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x7CCB8C", Offset = "0x7CCB8C", VA = "0x7CCB8C", Slot = "9")]
	public override void GenerateTransparent()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x7CCD30", Offset = "0x7CCD30", VA = "0x7CCD30", Slot = "10")]
	public override void GenerateFinal()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x7CCEDC", Offset = "0x7CCEDC", VA = "0x7CCEDC")]
	private void ChangeColorEvent()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x7CCF88", Offset = "0x7CCF88", VA = "0x7CCF88", Slot = "6")]
	public override void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x7CD0C0", Offset = "0x7CD0C0", VA = "0x7CD0C0")]
	public SpinningTopSpawner()
	{
	}
}
[Token(Token = "0x20000A5")]
public class SpringSpawner : Spawner
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float maxLength;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float springSizeZ;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float springSizeX;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject myRenderingObject;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 controllerStartPosition;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Animator objectAnimator;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x7CE958", Offset = "0x7CE958", VA = "0x7CE958")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x7CEA54", Offset = "0x7CEA54", VA = "0x7CEA54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x7CEB50", Offset = "0x7CEB50", VA = "0x7CEB50")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x7CEC1C", Offset = "0x7CEC1C", VA = "0x7CEC1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x7CED74", Offset = "0x7CED74", VA = "0x7CED74", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x7CEDF8", Offset = "0x7CEDF8", VA = "0x7CEDF8", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x7CEE00", Offset = "0x7CEE00", VA = "0x7CEE00", Slot = "9")]
	public override void GenerateTransparent()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x7CF000", Offset = "0x7CF000", VA = "0x7CF000", Slot = "10")]
	public override void GenerateFinal()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x7CF1B8", Offset = "0x7CF1B8", VA = "0x7CF1B8")]
	private void ChangeColorEvent()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x7CF264", Offset = "0x7CF264", VA = "0x7CF264", Slot = "6")]
	public override void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x7CF4F8", Offset = "0x7CF4F8", VA = "0x7CF4F8")]
	public SpringSpawner()
	{
	}
}
[Token(Token = "0x20000A6")]
public class StarSpawner : Spawner
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private Vector3 addedRotation;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject myRenderingObject;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x79371C", Offset = "0x79371C", VA = "0x79371C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x793818", Offset = "0x793818", VA = "0x793818")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x793914", Offset = "0x793914", VA = "0x793914")]
	private void Update()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x7939E0", Offset = "0x7939E0", VA = "0x7939E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x793B58", Offset = "0x793B58", VA = "0x793B58", Slot = "5")]
	protected override void ButtonPressed()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x793BAC", Offset = "0x793BAC", VA = "0x793BAC", Slot = "7")]
	protected override void ButtonReleased()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x793BB8", Offset = "0x793BB8", VA = "0x793BB8", Slot = "9")]
	public override void GenerateTransparent()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x793D84", Offset = "0x793D84", VA = "0x793D84", Slot = "10")]
	public override void GenerateFinal()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x793F5C", Offset = "0x793F5C", VA = "0x793F5C")]
	private void ChangeColorEvent()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x79401C", Offset = "0x79401C", VA = "0x79401C", Slot = "6")]
	public override void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x79429C", Offset = "0x79429C", VA = "0x79429C")]
	public StarSpawner()
	{
	}
}
[Token(Token = "0x20000A7")]
public class BallToolButton : ToolButton
{
	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ToolSubMenu overrideSubMenuObject;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tool blackHoleTool;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Tool normalBallTool;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SubMenuToolButton blackHoleButton;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SubMenuToolButton normalBallButton;

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xA38AF4", Offset = "0xA38AF4", VA = "0xA38AF4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xA38C70", Offset = "0xA38C70", VA = "0xA38C70", Slot = "5")]
	public override void ButtonPressed()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xA38CE0", Offset = "0xA38CE0", VA = "0xA38CE0")]
	private void NormalBallButtonPressed()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xA38CEC", Offset = "0xA38CEC", VA = "0xA38CEC")]
	private void BlackHoleButtonPressed()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xA38CF8", Offset = "0xA38CF8", VA = "0xA38CF8")]
	public BallToolButton()
	{
	}
}
[Token(Token = "0x20000A8")]
public class BoxToolButton : ToolButton
{
	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ToolSubMenu overrideSubMenuObject;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tool scalableBoxTool;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Tool solidBoxTool;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SubMenuToolButton scalableBoxButton;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SubMenuToolButton solidBoxButton;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x75BCB8", Offset = "0x75BCB8", VA = "0x75BCB8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x75BEE4", Offset = "0x75BEE4", VA = "0x75BEE4", Slot = "5")]
	public override void ButtonPressed()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x75BF54", Offset = "0x75BF54", VA = "0x75BF54")]
	private void ScalableBoxButtonPressed()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x75BF60", Offset = "0x75BF60", VA = "0x75BF60")]
	private void SolidCubeButtonPressed()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x75BF6C", Offset = "0x75BF6C", VA = "0x75BF6C")]
	public BoxToolButton()
	{
	}
}
[Token(Token = "0x20000A9")]
public struct ColorUIPointerEventArgs
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53BE5C", Offset = "0x53BE5C")]
	public uint controllerIndex;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public VRTK_ControllerReference controllerReference;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isActive;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject currentTarget;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject previousTarget;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RaycastResult raycastResult;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonEventManager.ButtonAlias buttonAlias;
}
[Token(Token = "0x20000AA")]
public delegate void ColorUIPointerEventHandler(object sender, ColorUIPointerEventArgs e);
[Token(Token = "0x20000AB")]
public class ColorSelectionPointer : VRTK_UIPointer
{
	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool triggerPressed;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool buttonTwoPressed;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
	private bool buttonThreePressed;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
	private bool buttonFourPressed;

	[Token(Token = "0x14000028")]
	public event ControllerInteractionEventHandler ColorSelectionButtonPressed
	{
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x76291C", Offset = "0x76291C", VA = "0x76291C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FC88", Offset = "0x54FC88")]
		add
		{
		}
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x762A08", Offset = "0x762A08", VA = "0x762A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FC98", Offset = "0x54FC98")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event ControllerInteractionEventHandler ColorSelectionButtonReleased
	{
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x762AF4", Offset = "0x762AF4", VA = "0x762AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FCA8", Offset = "0x54FCA8")]
		add
		{
		}
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x762BE0", Offset = "0x762BE0", VA = "0x762BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FCB8", Offset = "0x54FCB8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event ColorUIPointerEventHandler ColorUIPointerElementEnter
	{
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x762CCC", Offset = "0x762CCC", VA = "0x762CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FCC8", Offset = "0x54FCC8")]
		add
		{
		}
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x762DB8", Offset = "0x762DB8", VA = "0x762DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FCD8", Offset = "0x54FCD8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event ColorUIPointerEventHandler ColorUIPointerElementExit
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x762EA4", Offset = "0x762EA4", VA = "0x762EA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FCE8", Offset = "0x54FCE8")]
		add
		{
		}
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x762F94", Offset = "0x762F94", VA = "0x762F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FCF8", Offset = "0x54FCF8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event ColorUIPointerEventHandler ColorUIPointerElementClick
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x763084", Offset = "0x763084", VA = "0x763084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FD08", Offset = "0x54FD08")]
		add
		{
		}
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x763174", Offset = "0x763174", VA = "0x763174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FD18", Offset = "0x54FD18")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event ColorUIPointerEventHandler ColorUIPointerElementDragStart
	{
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x763264", Offset = "0x763264", VA = "0x763264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FD28", Offset = "0x54FD28")]
		add
		{
		}
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x763354", Offset = "0x763354", VA = "0x763354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FD38", Offset = "0x54FD38")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event ColorUIPointerEventHandler ColorUIPointerElementDragEnd
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x763444", Offset = "0x763444", VA = "0x763444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FD48", Offset = "0x54FD48")]
		add
		{
		}
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x763534", Offset = "0x763534", VA = "0x763534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FD58", Offset = "0x54FD58")]
		remove
		{
		}
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x763624", Offset = "0x763624", VA = "0x763624", Slot = "34")]
	public virtual void OnColorUIPointerElementEnter(ColorUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x764178", Offset = "0x764178", VA = "0x764178", Slot = "35")]
	public virtual void OnColorUIPointerElementExit(ColorUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x7642AC", Offset = "0x7642AC", VA = "0x7642AC", Slot = "36")]
	public virtual void OnColorUIPointerElementClick(ColorUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x764378", Offset = "0x764378", VA = "0x764378", Slot = "37")]
	public virtual void OnColorUIPointerElementDragStart(ColorUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x7643C0", Offset = "0x7643C0", VA = "0x7643C0", Slot = "38")]
	public virtual void OnColorUIPointerElementDragEnd(ColorUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x764408", Offset = "0x764408", VA = "0x764408", Slot = "39")]
	public virtual void ColorOnSelectionButtonPressed(ControllerInteractionEventArgs e, ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x76444C", Offset = "0x76444C", VA = "0x76444C", Slot = "40")]
	public virtual void ColorOnSelectionButtonReleased(ControllerInteractionEventArgs e, ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x764490", Offset = "0x764490", VA = "0x764490", Slot = "41")]
	public virtual ColorUIPointerEventArgs SetToolUIPointerEvent(RaycastResult currentRaycastResult, ButtonEventManager.ButtonAlias buttonAlias, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(ColorUIPointerEventArgs);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x7645B8", Offset = "0x7645B8", VA = "0x7645B8", Slot = "19")]
	public override bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x76465C", Offset = "0x76465C", VA = "0x76465C", Slot = "24")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x7649F4", Offset = "0x7649F4", VA = "0x7649F4", Slot = "25")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x764CC4", Offset = "0x764CC4", VA = "0x764CC4")]
	private void TriggerPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x764CD0", Offset = "0x764CD0", VA = "0x764CD0")]
	private void ButtonTwoPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x764CDC", Offset = "0x764CDC", VA = "0x764CDC")]
	private void ButtonThreePressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x764CE8", Offset = "0x764CE8", VA = "0x764CE8")]
	private void ButtonFourPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x764CF4", Offset = "0x764CF4", VA = "0x764CF4")]
	private void TriggerReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x764CFC", Offset = "0x764CFC", VA = "0x764CFC")]
	private void ButtonTwoReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x764D04", Offset = "0x764D04", VA = "0x764D04")]
	private void ButtonThreeReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x764D0C", Offset = "0x764D0C", VA = "0x764D0C")]
	private void ButtonFourReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x764D14", Offset = "0x764D14", VA = "0x764D14", Slot = "42")]
	protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e, ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x764D98", Offset = "0x764D98", VA = "0x764D98", Slot = "43")]
	protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e, ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x764E1C", Offset = "0x764E1C", VA = "0x764E1C")]
	public ColorSelectionPointer()
	{
	}
}
[Token(Token = "0x20000AC")]
public class FreeDrawToolIcon : MonoBehaviour
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ToolIconChanger toolIconChanger;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x770CE0", Offset = "0x770CE0", VA = "0x770CE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x770D50", Offset = "0x770D50", VA = "0x770D50")]
	public void ChangeScale(float newScale)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x770EEC", Offset = "0x770EEC", VA = "0x770EEC")]
	public FreeDrawToolIcon()
	{
	}
}
[Token(Token = "0x20000AD")]
public class ObjectTool : Tool
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Spawner mySpawnerL;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Spawner mySpawnerR;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool wasUsed;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ToolIconChanger toolIconChangerL;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ToolIconChanger toolIconChangerR;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRTK_ControllerEvents controllerEventsL;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRTK_ControllerEvents controllerEventsR;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x875564", Offset = "0x875564", VA = "0x875564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x87562C", Offset = "0x87562C", VA = "0x87562C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x8758CC", Offset = "0x8758CC", VA = "0x8758CC")]
	public void SetScaleAndPos(Vector3 startPos, Vector3 endPos, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x8759AC", Offset = "0x8759AC", VA = "0x8759AC")]
	public void ScaleObject(Vector3 newScale, int audioIndex, float smooth, float scalingMultiplier)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x875A6C", Offset = "0x875A6C", VA = "0x875A6C", Slot = "4")]
	public override void ButtonPressedL()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x875ABC", Offset = "0x875ABC", VA = "0x875ABC", Slot = "5")]
	public override void ButtonPressedR()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x875B0C", Offset = "0x875B0C", VA = "0x875B0C", Slot = "6")]
	public override void ButtonReleasedL()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x875B64", Offset = "0x875B64", VA = "0x875B64", Slot = "7")]
	public override void ButtonReleasedR()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x875BBC", Offset = "0x875BBC", VA = "0x875BBC")]
	public void CancelAll()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x875C0C", Offset = "0x875C0C", VA = "0x875C0C")]
	public Spawner GetSpawnerL()
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x875C14", Offset = "0x875C14", VA = "0x875C14")]
	public Spawner GetSpawnerR()
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x875C1C", Offset = "0x875C1C", VA = "0x875C1C")]
	public ObjectTool()
	{
	}
}
[Token(Token = "0x20000AE")]
public class SkyboxTool : Tool
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Light[] lightsToDisable;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] objectsToDisable;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FloorChangeColor floorChangeColor;

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x7C766C", Offset = "0x7C766C", VA = "0x7C766C")]
	public void ColorChoosing(Color fogColor)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x7C76F8", Offset = "0x7C76F8", VA = "0x7C76F8")]
	public void TotalBlackness(bool enabled)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x7C7878", Offset = "0x7C7878", VA = "0x7C7878")]
	public SkyboxTool()
	{
	}
}
[Token(Token = "0x20000AF")]
public class SubMenuToolButton : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200042D")]
	public class InteractionEvent : UnityEvent
	{
		[Token(Token = "0x6002546")]
		[Address(RVA = "0x7961E0", Offset = "0x7961E0", VA = "0x7961E0")]
		public InteractionEvent()
		{
		}
	}

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractionEvent onPointerUp;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ToolButton myToolButton;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x7960E8", Offset = "0x7960E8", VA = "0x7960E8")]
	public void ButtonReleased()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x79613C", Offset = "0x79613C", VA = "0x79613C")]
	public void ToggleComponent(bool toggle)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x796178", Offset = "0x796178", VA = "0x796178")]
	public SubMenuToolButton()
	{
	}
}
[Token(Token = "0x20000B0")]
public class Tool : MonoBehaviour
{
	[Token(Token = "0x6000755")]
	[Address(RVA = "0x796A64", Offset = "0x796A64", VA = "0x796A64", Slot = "4")]
	public virtual void ButtonPressedL()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x796A68", Offset = "0x796A68", VA = "0x796A68", Slot = "5")]
	public virtual void ButtonPressedR()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x796A6C", Offset = "0x796A6C", VA = "0x796A6C", Slot = "6")]
	public virtual void ButtonReleasedL()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x796A70", Offset = "0x796A70", VA = "0x796A70", Slot = "7")]
	public virtual void ButtonReleasedR()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x796A74", Offset = "0x796A74", VA = "0x796A74")]
	public Tool()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ToolButton : MonoBehaviour
{
	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ToolSubMenu toolSubMenu;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Tool myTool;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasSubMenu;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ToolSelection toolSelection;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button myButton;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x796A7C", Offset = "0x796A7C", VA = "0x796A7C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x796B6C", Offset = "0x796B6C", VA = "0x796B6C")]
	public void ShowTool(bool show)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x796BE8", Offset = "0x796BE8", VA = "0x796BE8", Slot = "5")]
	public virtual void ButtonPressed()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x796E18", Offset = "0x796E18", VA = "0x796E18", Slot = "6")]
	public virtual void ButtonReleased()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x797044", Offset = "0x797044", VA = "0x797044")]
	public ToolButton()
	{
	}
}
[Token(Token = "0x20000B2")]
public class ToolButtonIcons : MonoBehaviour
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> myToolIcons;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject currentTool;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer[] myRenderers;

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x79704C", Offset = "0x79704C", VA = "0x79704C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x7970C0", Offset = "0x7970C0", VA = "0x7970C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x797134", Offset = "0x797134", VA = "0x797134")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x797464", Offset = "0x797464", VA = "0x797464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x797468", Offset = "0x797468", VA = "0x797468")]
	private void DisableAll()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x797534", Offset = "0x797534", VA = "0x797534")]
	public void ChangeTool(string newObjectTag)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x797680", Offset = "0x797680", VA = "0x797680")]
	private void ChangeColor()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x7976C0", Offset = "0x7976C0", VA = "0x7976C0")]
	private void ChangeToolsColor(Color toColor)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x797834", Offset = "0x797834", VA = "0x797834")]
	public ToolButtonIcons()
	{
	}
}
[Token(Token = "0x20000B3")]
public class ToolIconChanger : MonoBehaviour
{
	[Token(Token = "0x200042E")]
	private class ToolIconObject
	{
		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject myObject;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 originalScale;

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x797F4C", Offset = "0x797F4C", VA = "0x797F4C")]
		public ToolIconObject()
		{
		}
	}

	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5396B0", Offset = "0x5396B0")]
	private sealed class <_ChangeTool>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float changingTime;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToolIconChanger <>4__this;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToolIconObject toTool;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <time>5__2;

		[Token(Token = "0x17000216")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0x798CE4", Offset = "0x798CE4", VA = "0x798CE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600254D")]
			[Address(RVA = "0x798D54", Offset = "0x798D54", VA = "0x798D54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x7986FC", Offset = "0x7986FC", VA = "0x7986FC")]
		[DebuggerHidden]
		public <_ChangeTool>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x79893C", Offset = "0x79893C", VA = "0x79893C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x798940", Offset = "0x798940", VA = "0x798940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x798CEC", Offset = "0x798CEC", VA = "0x798CEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 toPosition;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float changeTime;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ToolIconObject currentObject;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ToolIconObject lastObject;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ToolIconObject> myTools;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer[] toolRenderers;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Renderer> toolRenderersList;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color newColor;

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x7978A4", Offset = "0x7978A4", VA = "0x7978A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x797918", Offset = "0x797918", VA = "0x797918")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x79798C", Offset = "0x79798C", VA = "0x79798C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x797FC4", Offset = "0x797FC4", VA = "0x797FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x798134", Offset = "0x798134", VA = "0x798134")]
	private void ChangeActivity(GameObject tool, bool active)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x7981DC", Offset = "0x7981DC", VA = "0x7981DC")]
	public void ChangeTool(string toolTag)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x79849C", Offset = "0x79849C", VA = "0x79849C")]
	public GameObject GetTool(string toolTag)
	{
		return null;
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x7985C0", Offset = "0x7985C0", VA = "0x7985C0")]
	public void ChangeToolOriginalScale(string toolTag, Vector3 newScale)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x7983E8", Offset = "0x7983E8", VA = "0x7983E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54FD68", Offset = "0x54FD68")]
	private IEnumerator<float> _ChangeTool(ToolIconObject toTool, float changingTime)
	{
		return null;
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x798728", Offset = "0x798728", VA = "0x798728")]
	private void ChangeColor()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x79889C", Offset = "0x79889C", VA = "0x79889C")]
	public ToolIconChanger()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ToolPicker : MonoBehaviour
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ToolSelection toolSelection;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool onElementArea;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool triggerBeingPressed;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool pointerActive;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 position;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRTK_Pointer pointer;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ToolButton currentToolButton;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SubMenuToolButton currentSubMenuToolButton;

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x798DB8", Offset = "0x798DB8", VA = "0x798DB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x798E44", Offset = "0x798E44", VA = "0x798E44")]
	public void ElementEnter(object sender, VRTK_UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x798E48", Offset = "0x798E48", VA = "0x798E48")]
	public void ElementClick(object sender, VRTK_UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x798EE8", Offset = "0x798EE8", VA = "0x798EE8")]
	public void ElementRelease(object sender, VRTK_UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x798FD8", Offset = "0x798FD8", VA = "0x798FD8")]
	public void ElementExit(object sender, VRTK_UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x798FDC", Offset = "0x798FDC", VA = "0x798FDC")]
	public void ShowPointer(bool show)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x7990C4", Offset = "0x7990C4", VA = "0x7990C4")]
	public bool IsPointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x799044", Offset = "0x799044", VA = "0x799044")]
	private void ToggleSpawning(bool spawningActive)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x7990CC", Offset = "0x7990CC", VA = "0x7990CC")]
	public ToolPicker()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ToolSelection : MonoBehaviour
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToolPicker toolPicker;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ToolButton[] myTools;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Canvas myCanvas;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ButtonEventManager.ButtonAlias buttonAlias;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canShow;

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x7990D4", Offset = "0x7990D4", VA = "0x7990D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x7993F0", Offset = "0x7993F0", VA = "0x7993F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x7996FC", Offset = "0x7996FC", VA = "0x7996FC")]
	private void TriggerReleasedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x799758", Offset = "0x799758", VA = "0x799758")]
	private void TriggerPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x799760", Offset = "0x799760", VA = "0x799760")]
	private void ButtonFivePressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x79976C", Offset = "0x79976C", VA = "0x79976C")]
	private void ButtonSixPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x799778", Offset = "0x799778", VA = "0x799778")]
	private void ButtonSevenPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x799784", Offset = "0x799784", VA = "0x799784")]
	private void ButtonEightPressedL(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x799790", Offset = "0x799790", VA = "0x799790")]
	private void TouchPadPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x7997A4", Offset = "0x7997A4", VA = "0x7997A4")]
	private void TouchPadReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x7997AC", Offset = "0x7997AC", VA = "0x7997AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x79984C", Offset = "0x79984C", VA = "0x79984C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x796EC8", Offset = "0x796EC8", VA = "0x796EC8")]
	public void ShowTools(bool show)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x796C64", Offset = "0x796C64", VA = "0x796C64")]
	public void DisappearOtherTools(ToolButton myTool, bool show)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x796DC4", Offset = "0x796DC4", VA = "0x796DC4")]
	public void AssignTool(Tool pickedTool)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x799854", Offset = "0x799854", VA = "0x799854")]
	public void ToggleCanShow(bool show)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x799860", Offset = "0x799860", VA = "0x799860")]
	public ToolSelection()
	{
	}
}
[Token(Token = "0x20000B6")]
public struct ToolUIPointerEventArgs
{
	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53BF94", Offset = "0x53BF94")]
	public uint controllerIndex;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public VRTK_ControllerReference controllerReference;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isActive;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject currentTarget;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject previousTarget;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RaycastResult raycastResult;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonEventManager.ButtonAlias buttonAlias;
}
[Token(Token = "0x20000B7")]
public delegate void ToolUIPointerEventHandler(object sender, ToolUIPointerEventArgs e);
[Token(Token = "0x20000B8")]
public class ToolSelectionPointer : VRTK_UIPointer
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool triggerPressed;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool buttonOnePressed;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
	private bool buttonTwoPressed;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
	private bool buttonThreePressed;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool buttonFourPressed;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	private bool buttonFivePressed;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
	private bool buttonSixPressed;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x127")]
	private bool buttonSevenPressed;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool buttonEightPressed;

	[Token(Token = "0x1400002F")]
	public event ControllerInteractionEventHandler ToolSelectionButtonPressed
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0x799868", Offset = "0x799868", VA = "0x799868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FDCC", Offset = "0x54FDCC")]
		add
		{
		}
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x799954", Offset = "0x799954", VA = "0x799954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FDDC", Offset = "0x54FDDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event ControllerInteractionEventHandler ToolSelectionButtonReleased
	{
		[Token(Token = "0x6000793")]
		[Address(RVA = "0x799A40", Offset = "0x799A40", VA = "0x799A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FDEC", Offset = "0x54FDEC")]
		add
		{
		}
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x799B2C", Offset = "0x799B2C", VA = "0x799B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FDFC", Offset = "0x54FDFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event ToolUIPointerEventHandler ToolUIPointerElementEnter
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x799C18", Offset = "0x799C18", VA = "0x799C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE0C", Offset = "0x54FE0C")]
		add
		{
		}
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x799D04", Offset = "0x799D04", VA = "0x799D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE1C", Offset = "0x54FE1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public event ToolUIPointerEventHandler ToolUIPointerElementExit
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x799DF0", Offset = "0x799DF0", VA = "0x799DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE2C", Offset = "0x54FE2C")]
		add
		{
		}
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x799EE0", Offset = "0x799EE0", VA = "0x799EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE3C", Offset = "0x54FE3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event ToolUIPointerEventHandler ToolUIPointerElementClick
	{
		[Token(Token = "0x6000799")]
		[Address(RVA = "0x799FD0", Offset = "0x799FD0", VA = "0x799FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE4C", Offset = "0x54FE4C")]
		add
		{
		}
		[Token(Token = "0x600079A")]
		[Address(RVA = "0x79A0C0", Offset = "0x79A0C0", VA = "0x79A0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE5C", Offset = "0x54FE5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	public event ToolUIPointerEventHandler ToolUIPointerElementDragStart
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x79A1B0", Offset = "0x79A1B0", VA = "0x79A1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE6C", Offset = "0x54FE6C")]
		add
		{
		}
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x79A2A0", Offset = "0x79A2A0", VA = "0x79A2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE7C", Offset = "0x54FE7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000035")]
	public event ToolUIPointerEventHandler ToolUIPointerElementDragEnd
	{
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x79A390", Offset = "0x79A390", VA = "0x79A390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE8C", Offset = "0x54FE8C")]
		add
		{
		}
		[Token(Token = "0x600079E")]
		[Address(RVA = "0x79A480", Offset = "0x79A480", VA = "0x79A480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FE9C", Offset = "0x54FE9C")]
		remove
		{
		}
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x79A570", Offset = "0x79A570", VA = "0x79A570", Slot = "34")]
	public virtual void OnToolUIPointerElementEnter(ToolUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x79B0C4", Offset = "0x79B0C4", VA = "0x79B0C4", Slot = "35")]
	public virtual void OnToolUIPointerElementExit(ToolUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x79B1F8", Offset = "0x79B1F8", VA = "0x79B1F8", Slot = "36")]
	public virtual void OnToolUIPointerElementClick(ToolUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x79B2C4", Offset = "0x79B2C4", VA = "0x79B2C4", Slot = "37")]
	public virtual void OnToolUIPointerElementDragStart(ToolUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x79B30C", Offset = "0x79B30C", VA = "0x79B30C", Slot = "38")]
	public virtual void OnToolUIPointerElementDragEnd(ToolUIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x79B354", Offset = "0x79B354", VA = "0x79B354", Slot = "39")]
	public virtual void ToolOnSelectionButtonPressed(ControllerInteractionEventArgs e, ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x79BD84", Offset = "0x79BD84", VA = "0x79BD84", Slot = "40")]
	public virtual void ToolOnSelectionButtonReleased(ControllerInteractionEventArgs e, ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x79BDC4", Offset = "0x79BDC4", VA = "0x79BDC4", Slot = "41")]
	public virtual ColorUIPointerEventArgs SetToolUIPointerEvent(RaycastResult currentRaycastResult, ButtonEventManager.ButtonAlias buttonAlias, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(ColorUIPointerEventArgs);
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x79BEEC", Offset = "0x79BEEC", VA = "0x79BEEC", Slot = "19")]
	public override bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x79BFB8", Offset = "0x79BFB8", VA = "0x79BFB8", Slot = "24")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x79C5F8", Offset = "0x79C5F8", VA = "0x79C5F8", Slot = "25")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x79CB70", Offset = "0x79CB70", VA = "0x79CB70")]
	private void TriggerPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x79CB7C", Offset = "0x79CB7C", VA = "0x79CB7C")]
	private void ButtonOnePressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x79CB88", Offset = "0x79CB88", VA = "0x79CB88")]
	private void ButtonTwoPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x79CB94", Offset = "0x79CB94", VA = "0x79CB94")]
	private void ButtonThreePressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x79CBA0", Offset = "0x79CBA0", VA = "0x79CBA0")]
	private void ButtonFourPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x79CBAC", Offset = "0x79CBAC", VA = "0x79CBAC")]
	private void ButtonFivePressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x79CBB8", Offset = "0x79CBB8", VA = "0x79CBB8")]
	private void ButtonSixPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x79CBC4", Offset = "0x79CBC4", VA = "0x79CBC4")]
	private void ButtonSevenPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x79CBD0", Offset = "0x79CBD0", VA = "0x79CBD0")]
	private void ButtonEightPressed(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x79CBDC", Offset = "0x79CBDC", VA = "0x79CBDC")]
	private void TriggerReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x79CBE4", Offset = "0x79CBE4", VA = "0x79CBE4")]
	private void ButtonOneReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x79CBEC", Offset = "0x79CBEC", VA = "0x79CBEC")]
	private void ButtonTwoReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x79CBF4", Offset = "0x79CBF4", VA = "0x79CBF4")]
	private void ButtonThreeReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x79CBFC", Offset = "0x79CBFC", VA = "0x79CBFC")]
	private void ButtonFourReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x79CC04", Offset = "0x79CC04", VA = "0x79CC04")]
	private void ButtonFiveReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x79CC0C", Offset = "0x79CC0C", VA = "0x79CC0C")]
	private void ButtonSixReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x79CC14", Offset = "0x79CC14", VA = "0x79CC14")]
	private void ButtonSevenReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x79CC1C", Offset = "0x79CC1C", VA = "0x79CC1C")]
	private void ButtonEightReleased(object sender, ControllerInteractionEventArgs e)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x79CC24", Offset = "0x79CC24", VA = "0x79CC24", Slot = "42")]
	protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e, ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x79CCA8", Offset = "0x79CCA8", VA = "0x79CCA8", Slot = "43")]
	protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e, ButtonEventManager.ButtonAlias buttonAlias)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x79CD2C", Offset = "0x79CD2C", VA = "0x79CD2C")]
	public ToolSelectionPointer()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ToolSubMenu : MonoBehaviour
{
	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x796BAC", Offset = "0x796BAC", VA = "0x796BAC")]
	public void ToggleSubMenu(bool show)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x79CD34", Offset = "0x79CD34", VA = "0x79CD34")]
	public ToolSubMenu()
	{
	}
}
[Token(Token = "0x20000BA")]
public class VacuumTool : Tool
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vacuum myVacuumL;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vacuum myVacuumR;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VacuumArea myVacuumAreaL;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VacuumArea myVacuumAreaR;

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xC08948", Offset = "0xC08948", VA = "0xC08948")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xC089D8", Offset = "0xC089D8", VA = "0xC089D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xC08A9C", Offset = "0xC08A9C", VA = "0xC08A9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xC08B60", Offset = "0xC08B60", VA = "0xC08B60", Slot = "4")]
	public override void ButtonPressedL()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xC08BC8", Offset = "0xC08BC8", VA = "0xC08BC8", Slot = "5")]
	public override void ButtonPressedR()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xC08C30", Offset = "0xC08C30", VA = "0xC08C30", Slot = "6")]
	public override void ButtonReleasedL()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xC08C90", Offset = "0xC08C90", VA = "0xC08C90", Slot = "7")]
	public override void ButtonReleasedR()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xC08CF0", Offset = "0xC08CF0", VA = "0xC08CF0")]
	public VacuumArea GetVacuumAreaL()
	{
		return null;
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xC08CF8", Offset = "0xC08CF8", VA = "0xC08CF8")]
	public VacuumArea GetVacuumAreaR()
	{
		return null;
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xC08D00", Offset = "0xC08D00", VA = "0xC08D00")]
	public VacuumTool()
	{
	}
}
[Token(Token = "0x20000BB")]
public class ToolTipGetter : MonoBehaviour
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRTK_ObjectTooltip triggerToolTip;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRTK_ObjectTooltip touchPadToolTip;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRTK_ObjectTooltip buttonOneToolTip;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRTK_ObjectTooltip buttonTwoToolTip;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRTK_ObjectTooltip startMenuToolTip;

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x79CD3C", Offset = "0x79CD3C", VA = "0x79CD3C")]
	public ToolTipGetter()
	{
	}
}
[Token(Token = "0x20000BC")]
public class Vacuum : MonoBehaviour
{
	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool leftHand;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VacuumArea vacuumArea;

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xC07A60", Offset = "0xC07A60", VA = "0xC07A60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xC07AD0", Offset = "0xC07AD0", VA = "0xC07AD0")]
	public void ButtonPressed()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xC07B0C", Offset = "0xC07B0C", VA = "0xC07B0C")]
	public void ButtonReleased()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xC07B38", Offset = "0xC07B38", VA = "0xC07B38")]
	public void ChangeScale(float newScale)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xC07E48", Offset = "0xC07E48", VA = "0xC07E48")]
	public Vacuum()
	{
	}
}
[Token(Token = "0x20000BD")]
public class VacuumArea : MonoBehaviour, ICollisionBody, IQuadTreeBody
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FreeDrawBatcher freeDrawBatcher;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ICollisionShape _shape;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> batchNumbers;

	[Token(Token = "0x40005EA")]
	private const int batchSize = 1023;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider vacuumCollider;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool modifyBatch;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool vacuuming;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x53C05C", Offset = "0x53C05C")]
	private int <RefId>k__BackingField;

	[Token(Token = "0x17000071")]
	public int RefId
	{
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xC08450", Offset = "0xC08450", VA = "0xC08450", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FEAC", Offset = "0x54FEAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xC08458", Offset = "0xC08458", VA = "0xC08458", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FEBC", Offset = "0x54FEBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public bool Sleeping
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xC08460", Offset = "0xC08460", VA = "0xC08460", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000073")]
	public ICollisionShape CollisionShape
	{
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xC08468", Offset = "0xC08468", VA = "0xC08468", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public Vector2 Position
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xC08848", Offset = "0xC08848", VA = "0xC08848", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000075")]
	public bool QuadTreeIgnore
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xC088D0", Offset = "0xC088D0", VA = "0xC088D0", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xC07E58", Offset = "0xC07E58", VA = "0xC07E58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xC08004", Offset = "0xC08004", VA = "0xC08004")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xC07D3C", Offset = "0xC07D3C", VA = "0xC07D3C")]
	public void ScaleChanged()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xC07B00", Offset = "0xC07B00", VA = "0xC07B00")]
	public void SetVacuuming(bool vacuuming)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xC08118", Offset = "0xC08118", VA = "0xC08118")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xC08278", Offset = "0xC08278", VA = "0xC08278")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xC08274", Offset = "0xC08274", VA = "0xC08274")]
	private void PlaySuckEffect(Vector3 position)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xC08470", Offset = "0xC08470", VA = "0xC08470", Slot = "8")]
	public void OnCollision(CollisionResult result, ICollisionBody other)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xC088D8", Offset = "0xC088D8", VA = "0xC088D8")]
	public VacuumArea()
	{
	}
}
[Token(Token = "0x20000BE")]
public class GamePad : MonoBehaviour
{
	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x771290", Offset = "0x771290", VA = "0x771290")]
	public GamePad()
	{
	}
}
[Token(Token = "0x20000BF")]
public class LookCamera : MonoBehaviour
{
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedNormal;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedFast;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseSensitivityX;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensitivityY;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotY;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x85CD58", Offset = "0x85CD58", VA = "0x85CD58")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x85CE20", Offset = "0x85CE20", VA = "0x85CE20")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x85D000", Offset = "0x85D000", VA = "0x85D000")]
	public LookCamera()
	{
	}
}
[Token(Token = "0x20000C0")]
public class SkyboxChanger : MonoBehaviour
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] Skyboxes;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dropdown _dropdown;

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x7C759C", Offset = "0x7C759C", VA = "0x7C759C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x7C75F4", Offset = "0x7C75F4", VA = "0x7C75F4")]
	public void ChangeSkybox()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x7C7664", Offset = "0x7C7664", VA = "0x7C7664")]
	public SkyboxChanger()
	{
	}
}
[Token(Token = "0x20000C1")]
public class SFXManager : MonoBehaviour
{
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5396C0", Offset = "0x5396C0")]
	private sealed class <destroyAfter>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject toDestroy;

		[Token(Token = "0x17000218")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002551")]
			[Address(RVA = "0x7C49B4", Offset = "0x7C49B4", VA = "0x7C49B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000219")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002553")]
			[Address(RVA = "0x7C4A24", Offset = "0x7C4A24", VA = "0x7C4A24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x7C48C4", Offset = "0x7C48C4", VA = "0x7C48C4")]
		[DebuggerHidden]
		public <destroyAfter>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x7C48F8", Offset = "0x7C48F8", VA = "0x7C48F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x7C48FC", Offset = "0x7C48FC", VA = "0x7C48FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x7C49BC", Offset = "0x7C49BC", VA = "0x7C49BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SFXManager _instance;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject audioSourceGameObject;

	[Token(Token = "0x17000076")]
	public static SFXManager Instance
	{
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x7C44B8", Offset = "0x7C44B8", VA = "0x7C44B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x7C4508", Offset = "0x7C4508", VA = "0x7C4508")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x7C4620", Offset = "0x7C4620", VA = "0x7C4620")]
	public AudioSource playClipAtLocation(AudioClip audioSFX, Vector3 position, float volume)
	{
		return null;
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x7C482C", Offset = "0x7C482C", VA = "0x7C482C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x54FECC", Offset = "0x54FECC")]
	public IEnumerator<float> destroyAfter(float time, GameObject toDestroy)
	{
		return null;
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x7C48F0", Offset = "0x7C48F0", VA = "0x7C48F0")]
	public SFXManager()
	{
	}
}
[Token(Token = "0x20000C2")]
public class TexScroll_JR : MonoBehaviour
{
	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeedY;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollSpeedX;

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x796988", Offset = "0x796988", VA = "0x796988")]
	private void Update()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x796A5C", Offset = "0x796A5C", VA = "0x796A5C")]
	public TexScroll_JR()
	{
	}
}
[Token(Token = "0x20000C3")]
public class MoveBlock : MonoBehaviour
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveYAmount;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitTime;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotateSpeed;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startY;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool goingUp;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float stoppedUntilTime;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float moveUpAmount;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x860E20", Offset = "0x860E20", VA = "0x860E20", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x860EF4", Offset = "0x860EF4", VA = "0x860EF4", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x8610CC", Offset = "0x8610CC", VA = "0x8610CC")]
	public MoveBlock()
	{
	}
}
[Token(Token = "0x20000C4")]
public class VRPostReprojection : MonoBehaviour
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject busySpinner;

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x7A4038", Offset = "0x7A4038", VA = "0x7A4038")]
	public VRPostReprojection()
	{
	}
}
[Token(Token = "0x20000C5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5365AC", Offset = "0x5365AC")]
[ExecuteInEditMode]
public class InvertCamera : MonoBehaviour
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camera;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 invertScale;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x7749FC", Offset = "0x7749FC", VA = "0x7749FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x774A54", Offset = "0x774A54", VA = "0x774A54")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x774A58", Offset = "0x774A58", VA = "0x774A58")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x774BB0", Offset = "0x774BB0", VA = "0x774BB0")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x774BBC", Offset = "0x774BBC", VA = "0x774BBC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x774BC8", Offset = "0x774BC8", VA = "0x774BC8")]
	public InvertCamera()
	{
	}
}
namespace Demonixis.Effects
{
	[Token(Token = "0x20000C6")]
	[ExecuteInEditMode]
	public class LinearToGamma : MonoBehaviour
	{
		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material m_Material;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_Supported;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader m_Shader;

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x76A35C", Offset = "0x76A35C", VA = "0x76A35C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x76A368", Offset = "0x76A368", VA = "0x76A368")]
		private void OnRenderImage(RenderTexture sourceTexture, RenderTexture destTexture)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x76A4F0", Offset = "0x76A4F0", VA = "0x76A4F0")]
		public LinearToGamma()
		{
		}
	}
}
namespace VRTK
{
	[Token(Token = "0x20000C7")]
	public delegate void PointerDirectionIndicatorEventHandler(object sender);
	[Token(Token = "0x20000C8")]
	public class VRTK_PointerDirectionIndicator : MonoBehaviour
	{
		[Token(Token = "0x2000431")]
		public enum VisibilityState
		{
			[Token(Token = "0x4001779")]
			OnWhenPointerActive,
			[Token(Token = "0x400177A")]
			AlwaysOnWithPointerCursor
		}

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53C08C", Offset = "0x53C08C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C08C", Offset = "0x53C08C")]
		public Vector2 touchpadDeadzone;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C0EC", Offset = "0x53C0EC")]
		public Vector2 coordinateAxis;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53C124", Offset = "0x53C124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C124", Offset = "0x53C124")]
		public bool includeHeadsetOffset;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C184", Offset = "0x53C184")]
		public bool displayOnInvalidLocation;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C1BC", Offset = "0x53C1BC")]
		public bool usePointerColor;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C1F4", Offset = "0x53C1F4")]
		public VisibilityState indicatorVisibility;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool isActive;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform headset;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject validLocation;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject invalidLocation;

		[Token(Token = "0x14000036")]
		public event PointerDirectionIndicatorEventHandler PointerDirectionIndicatorPositionSet
		{
			[Token(Token = "0x60007FF")]
			[Address(RVA = "0x78D068", Offset = "0x78D068", VA = "0x78D068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FF30", Offset = "0x54FF30")]
			add
			{
			}
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x78D154", Offset = "0x78D154", VA = "0x78D154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FF40", Offset = "0x54FF40")]
			remove
			{
			}
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x78D240", Offset = "0x78D240", VA = "0x78D240", Slot = "4")]
		public virtual void OnPointerDirectionIndicatorPositionSet()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x78D25C", Offset = "0x78D25C", VA = "0x78D25C", Slot = "5")]
		public virtual void Initialize(VRTK_ControllerEvents events)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x78D2E4", Offset = "0x78D2E4", VA = "0x78D2E4", Slot = "6")]
		public virtual void SetPosition(bool active, Vector3 position)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x78D394", Offset = "0x78D394", VA = "0x78D394", Slot = "7")]
		public virtual Quaternion GetRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x78D484", Offset = "0x78D484", VA = "0x78D484", Slot = "8")]
		public virtual void SetMaterialColor(Color color, bool validity)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x78D650", Offset = "0x78D650", VA = "0x78D650", Slot = "9")]
		public virtual VRTK_ControllerEvents GetControllerEvents()
		{
			return null;
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x78D658", Offset = "0x78D658", VA = "0x78D658", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x78D754", Offset = "0x78D754", VA = "0x78D754", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x78D758", Offset = "0x78D758", VA = "0x78D758", Slot = "12")]
		protected virtual bool InsideDeadzone(Vector2 currentAxis)
		{
			return default(bool);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x78D854", Offset = "0x78D854", VA = "0x78D854")]
		public VRTK_PointerDirectionIndicator()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class VRTK_ConsoleViewer : MonoBehaviour
	{
		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C24C", Offset = "0x53C24C")]
		public int fontSize;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C284", Offset = "0x53C284")]
		public Color infoMessage;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C2BC", Offset = "0x53C2BC")]
		public Color assertMessage;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C2F4", Offset = "0x53C2F4")]
		public Color warningMessage;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C32C", Offset = "0x53C32C")]
		public Color errorMessage;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C364", Offset = "0x53C364")]
		public Color exceptionMessage;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<LogType, Color> logTypeColors;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ScrollRect scrollWindow;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RectTransform consoleRect;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Text consoleOutput;

		[Token(Token = "0x400061F")]
		private const string NEWLINE = "\n";

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int lineBuffer;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int currentBuffer;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string lastMessage;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool collapseLog;

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x8AB674", Offset = "0x8AB674", VA = "0x8AB674")]
		public void SetCollapse(bool state)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x8AB680", Offset = "0x8AB680", VA = "0x8AB680")]
		public void ClearLog()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x8AB704", Offset = "0x8AB704", VA = "0x8AB704", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x8AB9B0", Offset = "0x8AB9B0", VA = "0x8AB9B0", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x8ABA24", Offset = "0x8ABA24", VA = "0x8ABA24", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x8ABAF4", Offset = "0x8ABAF4", VA = "0x8ABAF4")]
		private string GetMessage(string message, LogType type)
		{
			return null;
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x8ABD2C", Offset = "0x8ABD2C", VA = "0x8ABD2C")]
		private void HandleLog(string message, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x8ABFC8", Offset = "0x8ABFC8", VA = "0x8ABFC8")]
		public VRTK_ConsoleViewer()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public struct ControllerRigidbodyActivatorEventArgs
	{
		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_InteractTouch touchingObject;
	}
	[Token(Token = "0x20000CB")]
	public delegate void ControllerRigidbodyActivatorEventHandler(object sender, ControllerRigidbodyActivatorEventArgs e);
	[Token(Token = "0x20000CC")]
	public class VRTK_ControllerRigidbodyActivator : MonoBehaviour
	{
		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C39C", Offset = "0x53C39C")]
		public bool isEnabled;

		[Token(Token = "0x14000037")]
		public event ControllerRigidbodyActivatorEventHandler ControllerRigidbodyOn
		{
			[Token(Token = "0x6000817")]
			[Address(RVA = "0x951798", Offset = "0x951798", VA = "0x951798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FF50", Offset = "0x54FF50")]
			add
			{
			}
			[Token(Token = "0x6000818")]
			[Address(RVA = "0x951884", Offset = "0x951884", VA = "0x951884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FF60", Offset = "0x54FF60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event ControllerRigidbodyActivatorEventHandler ControllerRigidbodyOff
		{
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x951970", Offset = "0x951970", VA = "0x951970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FF70", Offset = "0x54FF70")]
			add
			{
			}
			[Token(Token = "0x600081A")]
			[Address(RVA = "0x951A5C", Offset = "0x951A5C", VA = "0x951A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FF80", Offset = "0x54FF80")]
			remove
			{
			}
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x951B48", Offset = "0x951B48", VA = "0x951B48", Slot = "4")]
		public virtual void OnControllerRigidbodyOn(ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x951B6C", Offset = "0x951B6C", VA = "0x951B6C", Slot = "5")]
		public virtual void OnControllerRigidbodyOff(ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x951B90", Offset = "0x951B90", VA = "0x951B90", Slot = "6")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x951BA0", Offset = "0x951BA0", VA = "0x951BA0", Slot = "7")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x951BB0", Offset = "0x951BB0", VA = "0x951BB0", Slot = "8")]
		protected virtual void ToggleRigidbody(Collider collider, bool state)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x951CB8", Offset = "0x951CB8", VA = "0x951CB8", Slot = "9")]
		protected virtual void EmitEvent(bool state, VRTK_InteractTouch touch)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x951CD8", Offset = "0x951CD8", VA = "0x951CD8")]
		public VRTK_ControllerRigidbodyActivator()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public struct ControllerTooltipsEventArgs
	{
		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerTooltips.TooltipButtons element;
	}
	[Token(Token = "0x20000CE")]
	public delegate void ControllerTooltipsEventHandler(object sender, ControllerTooltipsEventArgs e);
	[Token(Token = "0x20000CF")]
	public class VRTK_ControllerTooltips : MonoBehaviour
	{
		[Token(Token = "0x2000432")]
		public enum TooltipButtons
		{
			[Token(Token = "0x400177C")]
			None,
			[Token(Token = "0x400177D")]
			TriggerTooltip,
			[Token(Token = "0x400177E")]
			TouchpadTooltip,
			[Token(Token = "0x400177F")]
			ButtonOneTooltip,
			[Token(Token = "0x4001780")]
			ButtonTwoTooltip,
			[Token(Token = "0x4001781")]
			StartMenuTooltip
		}

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53C3F4", Offset = "0x53C3F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C3F4", Offset = "0x53C3F4")]
		public string triggerText;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C454", Offset = "0x53C454")]
		public string gripText;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C48C", Offset = "0x53C48C")]
		public string touchpadText;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C4C4", Offset = "0x53C4C4")]
		public string buttonOneText;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C4FC", Offset = "0x53C4FC")]
		public string buttonTwoText;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C534", Offset = "0x53C534")]
		public string startMenuText;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53C56C", Offset = "0x53C56C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C56C", Offset = "0x53C56C")]
		public Color tipBackgroundColor;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C5CC", Offset = "0x53C5CC")]
		public Color tipTextColor;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C604", Offset = "0x53C604")]
		public Color tipLineColor;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53C63C", Offset = "0x53C63C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C63C", Offset = "0x53C63C")]
		public Transform trigger;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C69C", Offset = "0x53C69C")]
		public Transform grip;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C6D4", Offset = "0x53C6D4")]
		public Transform touchpad;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C70C", Offset = "0x53C70C")]
		public Transform buttonOne;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C744", Offset = "0x53C744")]
		public Transform buttonTwo;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C77C", Offset = "0x53C77C")]
		public Transform startMenu;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53C7B4", Offset = "0x53C7B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C7B4", Offset = "0x53C7B4")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C814", Offset = "0x53C814")]
		public VRTK_HeadsetControllerAware headsetControllerAware;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C84C", Offset = "0x53C84C")]
		public bool hideWhenNotInView;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C884", Offset = "0x53C884")]
		public int retryInitMaxTries;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C8BC", Offset = "0x53C8BC")]
		public float retryInitCounter;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected TooltipButtons[] availableButtons;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected VRTK_ObjectTooltip[] buttonTooltips;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool[] tooltipStates;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected int retryInitCurrentTries;

		[Token(Token = "0x14000039")]
		public event ControllerTooltipsEventHandler ControllerTooltipOn
		{
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x951CE8", Offset = "0x951CE8", VA = "0x951CE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FF90", Offset = "0x54FF90")]
			add
			{
			}
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x951DD4", Offset = "0x951DD4", VA = "0x951DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FFA0", Offset = "0x54FFA0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event ControllerTooltipsEventHandler ControllerTooltipOff
		{
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x951EC0", Offset = "0x951EC0", VA = "0x951EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FFB0", Offset = "0x54FFB0")]
			add
			{
			}
			[Token(Token = "0x6000829")]
			[Address(RVA = "0x951FAC", Offset = "0x951FAC", VA = "0x951FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FFC0", Offset = "0x54FFC0")]
			remove
			{
			}
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x952098", Offset = "0x952098", VA = "0x952098", Slot = "4")]
		public virtual void OnControllerTooltipOn(ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x9520B8", Offset = "0x9520B8", VA = "0x9520B8", Slot = "5")]
		public virtual void OnControllerTooltipOff(ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x9520D8", Offset = "0x9520D8", VA = "0x9520D8", Slot = "6")]
		public virtual void ResetTooltip()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x9520E8", Offset = "0x9520E8", VA = "0x9520E8", Slot = "7")]
		public virtual void UpdateText(TooltipButtons element, string newText)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x95213C", Offset = "0x95213C", VA = "0x95213C", Slot = "8")]
		public virtual void ToggleTips(bool state, TooltipButtons element = TooltipButtons.None)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x952354", Offset = "0x952354", VA = "0x952354", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x9523E8", Offset = "0x9523E8", VA = "0x9523E8", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x9524B4", Offset = "0x9524B4", VA = "0x9524B4", Slot = "11")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x95289C", Offset = "0x95289C", VA = "0x95289C", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x95291C", Offset = "0x95291C", VA = "0x95291C", Slot = "13")]
		protected virtual void EmitEvent(bool state, TooltipButtons element)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x95293C", Offset = "0x95293C", VA = "0x95293C", Slot = "14")]
		protected virtual void InitButtonsArray()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x952BA4", Offset = "0x952BA4", VA = "0x952BA4", Slot = "15")]
		protected virtual void InitListeners()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x953008", Offset = "0x953008", VA = "0x953008", Slot = "16")]
		protected virtual void DoControllerEnabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x953140", Offset = "0x953140", VA = "0x953140", Slot = "17")]
		protected virtual void DoControllerVisible(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x953218", Offset = "0x953218", VA = "0x953218", Slot = "18")]
		protected virtual void DoControllerInvisible(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x953320", Offset = "0x953320", VA = "0x953320", Slot = "19")]
		protected virtual void DoGlanceEnterController(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x953428", Offset = "0x953428", VA = "0x953428", Slot = "20")]
		protected virtual void DoGlanceExitController(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x953530", Offset = "0x953530", VA = "0x953530", Slot = "21")]
		protected virtual void InitialiseTips()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x953954", Offset = "0x953954", VA = "0x953954", Slot = "22")]
		protected virtual Transform GetTransform(Transform setTransform, SDK_BaseController.ControllerElements findElement)
		{
			return null;
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x953B8C", Offset = "0x953B8C", VA = "0x953B8C")]
		public VRTK_ControllerTooltips()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public delegate void DestinationPointEventHandler(object sender);
	[Token(Token = "0x20000D1")]
	public class VRTK_DestinationPoint : VRTK_DestinationMarker
	{
		[Token(Token = "0x2000433")]
		public enum RotationTypes
		{
			[Token(Token = "0x4001783")]
			NoRotation,
			[Token(Token = "0x4001784")]
			RotateWithNoHeadsetOffset,
			[Token(Token = "0x4001785")]
			RotateWithHeadsetOffset
		}

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5396D0", Offset = "0x5396D0")]
		private sealed class <ManageDestinationMarkersAtEndOfFrame>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DestinationPoint <>4__this;

			[Token(Token = "0x1700021A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002557")]
				[Address(RVA = "0x95B470", Offset = "0x95B470", VA = "0x95B470", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002559")]
				[Address(RVA = "0x95B4E0", Offset = "0x95B4E0", VA = "0x95B4E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002554")]
			[Address(RVA = "0x959B1C", Offset = "0x959B1C", VA = "0x959B1C")]
			[DebuggerHidden]
			public <ManageDestinationMarkersAtEndOfFrame>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002555")]
			[Address(RVA = "0x95B398", Offset = "0x95B398", VA = "0x95B398", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002556")]
			[Address(RVA = "0x95B39C", Offset = "0x95B39C", VA = "0x95B39C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002558")]
			[Address(RVA = "0x95B478", Offset = "0x95B478", VA = "0x95B478", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5396E0", Offset = "0x5396E0")]
		private sealed class <DoDestinationMarkerSetAtEndOfFrame>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400178A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400178B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DestinationPoint <>4__this;

			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DestinationMarkerEventArgs e;

			[Token(Token = "0x1700021C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600255D")]
				[Address(RVA = "0x95B320", Offset = "0x95B320", VA = "0x95B320", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600255F")]
				[Address(RVA = "0x95B390", Offset = "0x95B390", VA = "0x95B390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600255A")]
			[Address(RVA = "0x95A82C", Offset = "0x95A82C", VA = "0x95A82C")]
			[DebuggerHidden]
			public <DoDestinationMarkerSetAtEndOfFrame>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600255B")]
			[Address(RVA = "0x95B0E0", Offset = "0x95B0E0", VA = "0x95B0E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600255C")]
			[Address(RVA = "0x95B0E4", Offset = "0x95B0E4", VA = "0x95B0E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600255E")]
			[Address(RVA = "0x95B328", Offset = "0x95B328", VA = "0x95B328", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53C914", Offset = "0x53C914")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C914", Offset = "0x53C914")]
		public GameObject defaultCursorObject;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C974", Offset = "0x53C974")]
		public GameObject hoverCursorObject;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C9AC", Offset = "0x53C9AC")]
		public GameObject lockedCursorObject;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53C9E4", Offset = "0x53C9E4")]
		public Transform destinationLocation;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CA1C", Offset = "0x53CA1C")]
		private bool snapToPoint;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CA54", Offset = "0x53CA54")]
		private bool hidePointerCursorOnHover;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CA8C", Offset = "0x53CA8C")]
		public bool hideDirectionIndicatorOnHover;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CAC4", Offset = "0x53CAC4")]
		public RotationTypes snapToRotation;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool setPlayareaParentToThis;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_DestinationPoint currentDestinationPoint;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Collider pointCollider;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool createdCollider;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Rigidbody pointRigidbody;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool createdRigidbody;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Coroutine initaliseListeners;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool isActive;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected VRTK_BasePointerRenderer.VisibilityStates storedCursorState;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool storedDirectionIndicatorState;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Coroutine setDestination;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected bool currentTeleportState;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Transform playArea;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected Transform headset;

		[Token(Token = "0x1400003B")]
		public event DestinationPointEventHandler DestinationPointEnabled
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x958A3C", Offset = "0x958A3C", VA = "0x958A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FFD0", Offset = "0x54FFD0")]
			add
			{
			}
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x958B28", Offset = "0x958B28", VA = "0x958B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FFE0", Offset = "0x54FFE0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event DestinationPointEventHandler DestinationPointDisabled
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x958C14", Offset = "0x958C14", VA = "0x958C14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54FFF0", Offset = "0x54FFF0")]
			add
			{
			}
			[Token(Token = "0x6000845")]
			[Address(RVA = "0x958D00", Offset = "0x958D00", VA = "0x958D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550000", Offset = "0x550000")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event DestinationPointEventHandler DestinationPointLocked
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0x958DEC", Offset = "0x958DEC", VA = "0x958DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550010", Offset = "0x550010")]
			add
			{
			}
			[Token(Token = "0x6000847")]
			[Address(RVA = "0x958ED8", Offset = "0x958ED8", VA = "0x958ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550020", Offset = "0x550020")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event DestinationPointEventHandler DestinationPointUnlocked
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x958FC4", Offset = "0x958FC4", VA = "0x958FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550030", Offset = "0x550030")]
			add
			{
			}
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x9590B0", Offset = "0x9590B0", VA = "0x9590B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550040", Offset = "0x550040")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event DestinationPointEventHandler DestinationPointReset
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x95919C", Offset = "0x95919C", VA = "0x95919C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550050", Offset = "0x550050")]
			add
			{
			}
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x959288", Offset = "0x959288", VA = "0x959288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550060", Offset = "0x550060")]
			remove
			{
			}
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x959374", Offset = "0x959374", VA = "0x959374", Slot = "15")]
		public virtual void OnDestinationPointEnabled()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x959390", Offset = "0x959390", VA = "0x959390", Slot = "16")]
		public virtual void OnDestinationPointDisabled()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x9593AC", Offset = "0x9593AC", VA = "0x9593AC", Slot = "17")]
		public virtual void OnDestinationPointLocked()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x9593C8", Offset = "0x9593C8", VA = "0x9593C8", Slot = "18")]
		public virtual void OnDestinationPointUnlocked()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x9593E4", Offset = "0x9593E4", VA = "0x9593E4", Slot = "19")]
		public virtual void OnDestinationPointReset()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x959400", Offset = "0x959400", VA = "0x959400", Slot = "20")]
		public virtual void ResetDestinationPoint()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x959410", Offset = "0x959410", VA = "0x959410", Slot = "21")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x959490", Offset = "0x959490", VA = "0x959490", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x95965C", Offset = "0x95965C", VA = "0x95965C", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x959744", Offset = "0x959744", VA = "0x959744", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x9597C4", Offset = "0x9597C4", VA = "0x9597C4", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x95981C", Offset = "0x95981C", VA = "0x95981C", Slot = "24")]
		protected virtual void CreateColliderIfRequired()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x959974", Offset = "0x959974", VA = "0x959974", Slot = "25")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x959AA8", Offset = "0x959AA8", VA = "0x959AA8", Slot = "26")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x550070", Offset = "0x550070")]
		protected virtual IEnumerator ManageDestinationMarkersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x959B48", Offset = "0x959B48", VA = "0x959B48", Slot = "27")]
		protected virtual void ManageDestinationMarkers(bool state)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x959E00", Offset = "0x959E00", VA = "0x959E00", Slot = "28")]
		protected virtual void ManageDestinationMarkerListeners(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x95A074", Offset = "0x95A074", VA = "0x95A074", Slot = "29")]
		protected virtual void DoDestinationMarkerEnter(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x95A2B8", Offset = "0x95A2B8", VA = "0x95A2B8", Slot = "30")]
		protected virtual void DoDestinationMarkerExit(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x95A4F8", Offset = "0x95A4F8", VA = "0x95A4F8", Slot = "31")]
		protected virtual void DoDestinationMarkerSet(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x95A758", Offset = "0x95A758", VA = "0x95A758", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5500D4", Offset = "0x5500D4")]
		protected virtual IEnumerator DoDestinationMarkerSetAtEndOfFrame(DestinationMarkerEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x95A858", Offset = "0x95A858", VA = "0x95A858", Slot = "33")]
		protected virtual void ToggleCursor(object sender, bool state)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x95AA70", Offset = "0x95AA70", VA = "0x95AA70", Slot = "34")]
		protected virtual void TogglePointerCursor(VRTK_BasePointerRenderer pointerRenderer, bool state)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x95AAE8", Offset = "0x95AAE8", VA = "0x95AAE8", Slot = "35")]
		protected virtual void ToggleDirectionIndicator(VRTK_BasePointerRenderer pointerRenderer, bool state)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x95ABCC", Offset = "0x95ABCC", VA = "0x95ABCC", Slot = "36")]
		protected virtual void EnablePoint()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x95AC48", Offset = "0x95AC48", VA = "0x95AC48", Slot = "37")]
		protected virtual void DisablePoint()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x95ACE8", Offset = "0x95ACE8", VA = "0x95ACE8", Slot = "38")]
		protected virtual void ResetPoint()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x95AE8C", Offset = "0x95AE8C", VA = "0x95AE8C", Slot = "39")]
		protected virtual void ToggleObject(GameObject givenObject, bool state)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x95AF34", Offset = "0x95AF34", VA = "0x95AF34", Slot = "40")]
		protected virtual Quaternion? GetRotation()
		{
			return null;
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x95B0CC", Offset = "0x95B0CC", VA = "0x95B0CC")]
		public VRTK_DestinationPoint()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class VRTK_FramesPerSecondViewer : MonoBehaviour
	{
		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CB4C", Offset = "0x53CB4C")]
		public bool displayFPS;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CB84", Offset = "0x53CB84")]
		public int targetFPS;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CBBC", Offset = "0x53CBBC")]
		public int fontSize;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CBF4", Offset = "0x53CBF4")]
		public Vector3 position;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CC2C", Offset = "0x53CC2C")]
		public Color goodColor;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CC64", Offset = "0x53CC64")]
		public Color warnColor;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CC9C", Offset = "0x53CC9C")]
		public Color badColor;

		[Token(Token = "0x4000665")]
		protected const float updateInterval = 0.5f;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int framesCount;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float framesTime;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Canvas canvas;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Text text;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VRTK_SDKManager sdkManager;

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x961424", Offset = "0x961424", VA = "0x961424", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x961524", Offset = "0x961524", VA = "0x961524", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x961620", Offset = "0x961620", VA = "0x961620", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x961828", Offset = "0x961828", VA = "0x961828", Slot = "7")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x961834", Offset = "0x961834", VA = "0x961834", Slot = "8")]
		protected virtual void InitCanvas()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x9619D4", Offset = "0x9619D4", VA = "0x9619D4", Slot = "9")]
		protected virtual void SetCanvasCamera()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x961AC0", Offset = "0x961AC0", VA = "0x961AC0")]
		public VRTK_FramesPerSecondViewer()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class VRTK_FramesPerSecondViewerTMP : MonoBehaviour
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CCD4", Offset = "0x53CCD4")]
		public bool displayFPS;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CD0C", Offset = "0x53CD0C")]
		public int targetFPS;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CD44", Offset = "0x53CD44")]
		public int fontSize;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CD7C", Offset = "0x53CD7C")]
		public Vector3 position;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CDB4", Offset = "0x53CDB4")]
		public Color goodColor;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CDEC", Offset = "0x53CDEC")]
		public Color warnColor;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CE24", Offset = "0x53CE24")]
		public Color badColor;

		[Token(Token = "0x4000672")]
		protected const float updateInterval = 0.5f;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int framesCount;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float framesTime;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Canvas canvas;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Text text;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VRTK_SDKManager sdkManager;

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x961B7C", Offset = "0x961B7C", VA = "0x961B7C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x961C7C", Offset = "0x961C7C", VA = "0x961C7C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x961D78", Offset = "0x961D78", VA = "0x961D78", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x961F80", Offset = "0x961F80", VA = "0x961F80", Slot = "7")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x961F8C", Offset = "0x961F8C", VA = "0x961F8C", Slot = "8")]
		protected virtual void InitCanvas()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x96212C", Offset = "0x96212C", VA = "0x96212C", Slot = "9")]
		protected virtual void SetCanvasCamera()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x962218", Offset = "0x962218", VA = "0x962218")]
		public VRTK_FramesPerSecondViewerTMP()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class VRTK_IndependentRadialMenuController : VRTK_RadialMenuController
	{
		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5396F0", Offset = "0x5396F0")]
		private sealed class <DelayedSetColliderEnabled>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_IndependentRadialMenuController <>4__this;

			[Token(Token = "0x4001791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool enabled;

			[Token(Token = "0x4001792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InteractableObjectEventArgs e;

			[Token(Token = "0x1700021E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002563")]
				[Address(RVA = "0xCC58D4", Offset = "0xCC58D4", VA = "0xCC58D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002565")]
				[Address(RVA = "0xCC5944", Offset = "0xCC5944", VA = "0xCC5944", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002560")]
			[Address(RVA = "0xCC57BC", Offset = "0xCC57BC", VA = "0xCC57BC")]
			[DebuggerHidden]
			public <DelayedSetColliderEnabled>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002561")]
			[Address(RVA = "0xCC57E8", Offset = "0xCC57E8", VA = "0xCC57E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002562")]
			[Address(RVA = "0xCC57EC", Offset = "0xCC57EC", VA = "0xCC57EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002564")]
			[Address(RVA = "0xCC58DC", Offset = "0xCC58DC", VA = "0xCC58DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CE5C", Offset = "0x53CE5C")]
		public VRTK_InteractableObject eventsManager;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CE94", Offset = "0x53CE94")]
		public bool addMenuCollider;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CECC", Offset = "0x53CECC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53CECC", Offset = "0x53CECC")]
		public float colliderRadiusMultiplier;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CF20", Offset = "0x53CF20")]
		public bool hideAfterExecution;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CF58", Offset = "0x53CF58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53CF58", Offset = "0x53CF58")]
		public float offsetMultiplier;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CFAC", Offset = "0x53CFAC")]
		public GameObject rotateTowards;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<GameObject> interactingObjects;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<GameObject> collidingObjects;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected SphereCollider menuCollider;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Coroutine disableCoroutine;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3 desiredColliderCenter;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool isClicked;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		protected bool waitingToDisableCollider;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected int counter;

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x9669D0", Offset = "0x9669D0", VA = "0x9669D0", Slot = "20")]
		public virtual void UpdateEventsManager()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x966CF8", Offset = "0x966CF8", VA = "0x966CF8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x9674BC", Offset = "0x9674BC", VA = "0x9674BC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x967554", Offset = "0x967554", VA = "0x967554", Slot = "21")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x967560", Offset = "0x967560", VA = "0x967560", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x967748", Offset = "0x967748", VA = "0x967748", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x967924", Offset = "0x967924", VA = "0x967924", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x9679A4", Offset = "0x9679A4", VA = "0x9679A4", Slot = "23")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x967E54", Offset = "0x967E54", VA = "0x967E54", Slot = "24")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x967EB4", Offset = "0x967EB4", VA = "0x967EB4", Slot = "13")]
		protected override void AttemptHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x967F98", Offset = "0x967F98", VA = "0x967F98", Slot = "25")]
		protected virtual void ObjectClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x968018", Offset = "0x968018", VA = "0x968018", Slot = "26")]
		protected virtual void ObjectUnClicked(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x968110", Offset = "0x968110", VA = "0x968110", Slot = "27")]
		protected virtual void ObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x968250", Offset = "0x968250", VA = "0x968250", Slot = "28")]
		protected virtual void ObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x96846C", Offset = "0x96846C", VA = "0x96846C", Slot = "29")]
		protected virtual float CalculateAngle(GameObject interactingObject)
		{
			return default(float);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x968728", Offset = "0x968728", VA = "0x968728", Slot = "30")]
		protected virtual float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x96887C", Offset = "0x96887C", VA = "0x96887C", Slot = "31")]
		protected virtual void ImmediatelyHideMenu(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x9688E0", Offset = "0x9688E0", VA = "0x9688E0", Slot = "32")]
		protected virtual void SetColliderState(bool state, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x968C14", Offset = "0x968C14", VA = "0x968C14", Slot = "33")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x550138", Offset = "0x550138")]
		protected virtual IEnumerator DelayedSetColliderEnabled(bool enabled, float delay, InteractableObjectEventArgs e)
		{
			return null;
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x968CEC", Offset = "0x968CEC", VA = "0x968CEC")]
		public VRTK_IndependentRadialMenuController()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public struct ObjectTooltipEventArgs
	{
		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string newText;
	}
	[Token(Token = "0x20000D6")]
	public delegate void ObjectTooltipEventHandler(object sender, ObjectTooltipEventArgs e);
	[Token(Token = "0x20000D7")]
	public class VRTK_ObjectTooltip : MonoBehaviour
	{
		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53CFE4", Offset = "0x53CFE4")]
		public string displayText;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D01C", Offset = "0x53D01C")]
		public int fontSize;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D054", Offset = "0x53D054")]
		public Vector2 containerSize;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D08C", Offset = "0x53D08C")]
		public Transform drawLineFrom;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D0C4", Offset = "0x53D0C4")]
		public Transform drawLineTo;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D0FC", Offset = "0x53D0FC")]
		public float lineWidth;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D134", Offset = "0x53D134")]
		public Color fontColor;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D16C", Offset = "0x53D16C")]
		public Color containerColor;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D1A4", Offset = "0x53D1A4")]
		public Color lineColor;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D1DC", Offset = "0x53D1DC")]
		public bool alwaysFaceHeadset;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected LineRenderer line;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Transform headset;

		[Token(Token = "0x14000040")]
		public event ObjectTooltipEventHandler ObjectTooltipReset
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0x77E80C", Offset = "0x77E80C", VA = "0x77E80C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55019C", Offset = "0x55019C")]
			add
			{
			}
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x77E8F8", Offset = "0x77E8F8", VA = "0x77E8F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5501AC", Offset = "0x5501AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event ObjectTooltipEventHandler ObjectTooltipTextUpdated
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x77E9E4", Offset = "0x77E9E4", VA = "0x77E9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5501BC", Offset = "0x5501BC")]
			add
			{
			}
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x77EAD0", Offset = "0x77EAD0", VA = "0x77EAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5501CC", Offset = "0x5501CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x77EBBC", Offset = "0x77EBBC", VA = "0x77EBBC", Slot = "4")]
		public virtual void OnObjectTooltipReset(ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x77EBE0", Offset = "0x77EBE0", VA = "0x77EBE0", Slot = "5")]
		public virtual void OnObjectTooltipTextUpdated(ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x77EC04", Offset = "0x77EC04", VA = "0x77EC04", Slot = "6")]
		public virtual void ResetTooltip()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x77ED74", Offset = "0x77ED74", VA = "0x77ED74", Slot = "7")]
		public virtual void UpdateText(string newText)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x77EDC0", Offset = "0x77EDC0", VA = "0x77EDC0", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x77EE40", Offset = "0x77EE40", VA = "0x77EE40", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x77EEBC", Offset = "0x77EEBC", VA = "0x77EEBC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x77EF3C", Offset = "0x77EF3C", VA = "0x77EF3C", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x77EFA4", Offset = "0x77EFA4", VA = "0x77EFA4", Slot = "12")]
		protected virtual ObjectTooltipEventArgs SetEventPayload(string newText = "")
		{
			return default(ObjectTooltipEventArgs);
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x77EFAC", Offset = "0x77EFAC", VA = "0x77EFAC", Slot = "13")]
		protected virtual void SetContainer()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x77F138", Offset = "0x77F138", VA = "0x77F138", Slot = "14")]
		protected virtual void SetText(string name)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x77F2E8", Offset = "0x77F2E8", VA = "0x77F2E8", Slot = "15")]
		protected virtual void SetLine()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x77F554", Offset = "0x77F554", VA = "0x77F554", Slot = "16")]
		protected virtual void DrawLine()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x77F6A0", Offset = "0x77F6A0", VA = "0x77F6A0")]
		public VRTK_ObjectTooltip()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class VRTK_PanelMenuController : MonoBehaviour
	{
		[Token(Token = "0x2000437")]
		public enum TouchpadPressPosition
		{
			[Token(Token = "0x4001794")]
			None,
			[Token(Token = "0x4001795")]
			Top,
			[Token(Token = "0x4001796")]
			Bottom,
			[Token(Token = "0x4001797")]
			Left,
			[Token(Token = "0x4001798")]
			Right
		}

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539700", Offset = "0x539700")]
		private sealed class <TweenMenuScale>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400179A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400179B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x400179C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_PanelMenuController <>4__this;

			[Token(Token = "0x400179D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <direction>5__3;

			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x17000220")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002569")]
				[Address(RVA = "0x782658", Offset = "0x782658", VA = "0x782658", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000221")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600256B")]
				[Address(RVA = "0x7826C8", Offset = "0x7826C8", VA = "0x7826C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002566")]
			[Address(RVA = "0x781584", Offset = "0x781584", VA = "0x781584")]
			[DebuggerHidden]
			public <TweenMenuScale>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0x78219C", Offset = "0x78219C", VA = "0x78219C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002568")]
			[Address(RVA = "0x7821A0", Offset = "0x7821A0", VA = "0x7821A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600256A")]
			[Address(RVA = "0x782660", Offset = "0x782660", VA = "0x782660", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D234", Offset = "0x53D234")]
		public GameObject rotateTowards;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D26C", Offset = "0x53D26C")]
		public float zoomScaleMultiplier;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D2A4", Offset = "0x53D2A4")]
		public VRTK_PanelMenuItemController topPanelMenuItemController;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D2DC", Offset = "0x53D2DC")]
		public VRTK_PanelMenuItemController bottomPanelMenuItemController;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D314", Offset = "0x53D314")]
		public VRTK_PanelMenuItemController leftPanelMenuItemController;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D34C", Offset = "0x53D34C")]
		public VRTK_PanelMenuItemController rightPanelMenuItemController;

		[Token(Token = "0x400069C")]
		protected const float CanvasScaleSize = 0.001f;

		[Token(Token = "0x400069D")]
		protected const float AngleTolerance = 30f;

		[Token(Token = "0x400069E")]
		protected const float SwipeMinDist = 0.2f;

		[Token(Token = "0x400069F")]
		protected const float SwipeMinVelocity = 4f;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_PanelMenuItemController currentPanelMenuItemController;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject interactableObject;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject canvasObject;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly Vector2 xAxis;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly Vector2 yAxis;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector2 touchStartPosition;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Vector2 touchEndPosition;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float touchStartTime;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float currentAngle;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool isTrackingSwipe;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool isPendingSwipeCheck;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		protected bool isGrabbed;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		protected bool isShown;

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x7800F0", Offset = "0x7800F0", VA = "0x7800F0", Slot = "4")]
		public virtual void ToggleMenu()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x780110", Offset = "0x780110", VA = "0x780110", Slot = "5")]
		public virtual void ShowMenu()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x7801C0", Offset = "0x7801C0", VA = "0x7801C0", Slot = "6")]
		public virtual void HideMenu(bool force)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x780274", Offset = "0x780274", VA = "0x780274", Slot = "7")]
		public virtual void HideMenuImmediate()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x7803E4", Offset = "0x7803E4", VA = "0x7803E4", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x780474", Offset = "0x780474", VA = "0x780474", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x780980", Offset = "0x780980", VA = "0x780980", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x780A00", Offset = "0x780A00", VA = "0x780A00", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x780E54", Offset = "0x780E54", VA = "0x780E54", Slot = "12")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x781044", Offset = "0x781044", VA = "0x781044", Slot = "13")]
		protected virtual void BindControllerEvents()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x7811E0", Offset = "0x7811E0", VA = "0x7811E0", Slot = "14")]
		protected virtual void UnbindControllerEvents()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x78137C", Offset = "0x78137C", VA = "0x78137C", Slot = "15")]
		protected virtual void HandlePanelMenuItemControllerVisibility(VRTK_PanelMenuItemController targetPanelItemController)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x7814E8", Offset = "0x7814E8", VA = "0x7814E8", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5501DC", Offset = "0x5501DC")]
		protected virtual IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x7815B0", Offset = "0x7815B0", VA = "0x7815B0", Slot = "17")]
		protected virtual void DoInteractableObjectIsGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x781670", Offset = "0x781670", VA = "0x781670", Slot = "18")]
		protected virtual void DoInteractableObjectIsUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x78171C", Offset = "0x78171C", VA = "0x78171C", Slot = "19")]
		protected virtual void DoTouchpadPress(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x7818BC", Offset = "0x7818BC", VA = "0x7818BC", Slot = "20")]
		protected virtual void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x781908", Offset = "0x781908", VA = "0x781908", Slot = "21")]
		protected virtual void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x781914", Offset = "0x781914", VA = "0x781914", Slot = "22")]
		protected virtual void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x7819A4", Offset = "0x7819A4", VA = "0x7819A4", Slot = "23")]
		protected virtual void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x7819C0", Offset = "0x7819C0", VA = "0x7819C0", Slot = "24")]
		protected virtual void ChangeAngle(float angle, [Optional] object sender)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x7819C8", Offset = "0x7819C8", VA = "0x7819C8", Slot = "25")]
		protected virtual void CalculateSwipeAction()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x781C20", Offset = "0x781C20", VA = "0x781C20", Slot = "26")]
		protected virtual TouchpadPressPosition CalculateTouchpadPressPosition()
		{
			return default(TouchpadPressPosition);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x781CF4", Offset = "0x781CF4", VA = "0x781CF4", Slot = "27")]
		protected virtual void OnSwipeLeft()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x781D9C", Offset = "0x781D9C", VA = "0x781D9C", Slot = "28")]
		protected virtual void OnSwipeRight()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x781E48", Offset = "0x781E48", VA = "0x781E48", Slot = "29")]
		protected virtual void OnSwipeTop()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x781EF4", Offset = "0x781EF4", VA = "0x781EF4", Slot = "30")]
		protected virtual void OnSwipeBottom()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x781FA0", Offset = "0x781FA0", VA = "0x781FA0", Slot = "31")]
		protected virtual void OnTriggerPressed()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x78204C", Offset = "0x78204C", VA = "0x78204C", Slot = "32")]
		protected virtual float CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(float);
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x782054", Offset = "0x782054", VA = "0x782054", Slot = "33")]
		protected virtual float NormAngle(float currentDegree, float maxAngle = 360f)
		{
			return default(float);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x782064", Offset = "0x782064", VA = "0x782064", Slot = "34")]
		protected virtual bool CheckAnglePosition(float currentDegree, float tolerance, float targetDegree)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x782118", Offset = "0x782118", VA = "0x782118")]
		public VRTK_PanelMenuController()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public struct PanelMenuItemControllerEventArgs
	{
		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactableObject;
	}
	[Token(Token = "0x20000DA")]
	public delegate void PanelMenuItemControllerEventHandler(object sender, PanelMenuItemControllerEventArgs e);
	[Token(Token = "0x20000DB")]
	public class VRTK_PanelMenuItemController : MonoBehaviour
	{
		[Token(Token = "0x14000042")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemShowing
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0x7826D0", Offset = "0x7826D0", VA = "0x7826D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550240", Offset = "0x550240")]
			add
			{
			}
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x7827BC", Offset = "0x7827BC", VA = "0x7827BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550250", Offset = "0x550250")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemHiding
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0x7828A8", Offset = "0x7828A8", VA = "0x7828A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550260", Offset = "0x550260")]
			add
			{
			}
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x782994", Offset = "0x782994", VA = "0x782994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550270", Offset = "0x550270")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeLeft
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0x782A80", Offset = "0x782A80", VA = "0x782A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550280", Offset = "0x550280")]
			add
			{
			}
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0x782B6C", Offset = "0x782B6C", VA = "0x782B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550290", Offset = "0x550290")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeRight
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0x782C58", Offset = "0x782C58", VA = "0x782C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5502A0", Offset = "0x5502A0")]
			add
			{
			}
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0x782D44", Offset = "0x782D44", VA = "0x782D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5502B0", Offset = "0x5502B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeTop
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x782E30", Offset = "0x782E30", VA = "0x782E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5502C0", Offset = "0x5502C0")]
			add
			{
			}
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0x782F1C", Offset = "0x782F1C", VA = "0x782F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5502D0", Offset = "0x5502D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemSwipeBottom
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0x783008", Offset = "0x783008", VA = "0x783008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5502E0", Offset = "0x5502E0")]
			add
			{
			}
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0x7830F4", Offset = "0x7830F4", VA = "0x7830F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5502F0", Offset = "0x5502F0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event PanelMenuItemControllerEventHandler PanelMenuItemTriggerPressed
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0x7831E0", Offset = "0x7831E0", VA = "0x7831E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550300", Offset = "0x550300")]
			add
			{
			}
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0x7832CC", Offset = "0x7832CC", VA = "0x7832CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550310", Offset = "0x550310")]
			remove
			{
			}
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x7833B8", Offset = "0x7833B8", VA = "0x7833B8", Slot = "4")]
		public virtual void OnPanelMenuItemShowing(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x7833DC", Offset = "0x7833DC", VA = "0x7833DC", Slot = "5")]
		public virtual void OnPanelMenuItemHiding(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x783400", Offset = "0x783400", VA = "0x783400", Slot = "6")]
		public virtual void OnPanelMenuItemSwipeLeft(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x783424", Offset = "0x783424", VA = "0x783424", Slot = "7")]
		public virtual void OnPanelMenuItemSwipeRight(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x783448", Offset = "0x783448", VA = "0x783448", Slot = "8")]
		public virtual void OnPanelMenuItemSwipeTop(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x78346C", Offset = "0x78346C", VA = "0x78346C", Slot = "9")]
		public virtual void OnPanelMenuItemSwipeBottom(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x783490", Offset = "0x783490", VA = "0x783490", Slot = "10")]
		public virtual PanelMenuItemControllerEventArgs SetPanelMenuItemEvent(GameObject interactableObject)
		{
			return default(PanelMenuItemControllerEventArgs);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x783498", Offset = "0x783498", VA = "0x783498", Slot = "11")]
		public virtual void Show(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x783508", Offset = "0x783508", VA = "0x783508", Slot = "12")]
		public virtual void Hide(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x783578", Offset = "0x783578", VA = "0x783578", Slot = "13")]
		public virtual void SwipeLeft(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x7835B0", Offset = "0x7835B0", VA = "0x7835B0", Slot = "14")]
		public virtual void SwipeRight(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x7835E8", Offset = "0x7835E8", VA = "0x7835E8", Slot = "15")]
		public virtual void SwipeTop(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x783620", Offset = "0x783620", VA = "0x783620", Slot = "16")]
		public virtual void SwipeBottom(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x783658", Offset = "0x783658", VA = "0x783658", Slot = "17")]
		public virtual void TriggerPressed(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x783694", Offset = "0x783694", VA = "0x783694", Slot = "18")]
		protected virtual void OnPanelMenuItemTriggerPressed(PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x7836B8", Offset = "0x7836B8", VA = "0x7836B8")]
		public VRTK_PanelMenuItemController()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public delegate void HapticPulseEventHandler(float strength);
	[Token(Token = "0x20000DD")]
	[ExecuteInEditMode]
	public class VRTK_RadialMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000439")]
		public class RadialMenuButton
		{
			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Sprite ButtonIcon;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent OnClick;

			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent OnHold;

			[Token(Token = "0x40017A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent OnHoverEnter;

			[Token(Token = "0x40017A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEvent OnHoverExit;

			[Token(Token = "0x600256C")]
			[Address(RVA = "0x791068", Offset = "0x791068", VA = "0x791068")]
			public RadialMenuButton()
			{
			}
		}

		[Token(Token = "0x200043A")]
		public enum ButtonEvent
		{
			[Token(Token = "0x40017A6")]
			hoverOn,
			[Token(Token = "0x40017A7")]
			hoverOff,
			[Token(Token = "0x40017A8")]
			click,
			[Token(Token = "0x40017A9")]
			unclick
		}

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539710", Offset = "0x539710")]
		private sealed class <TweenMenuScale>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool show;

			[Token(Token = "0x40017AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_RadialMenu <>4__this;

			[Token(Token = "0x40017AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetScale>5__2;

			[Token(Token = "0x40017AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <Dir>5__3;

			[Token(Token = "0x40017B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x17000222")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002570")]
				[Address(RVA = "0x790FF0", Offset = "0x790FF0", VA = "0x790FF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002572")]
				[Address(RVA = "0x791060", Offset = "0x791060", VA = "0x791060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600256D")]
			[Address(RVA = "0x790A9C", Offset = "0x790A9C", VA = "0x790A9C")]
			[DebuggerHidden]
			public <TweenMenuScale>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600256E")]
			[Address(RVA = "0x790C74", Offset = "0x790C74", VA = "0x790C74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600256F")]
			[Address(RVA = "0x790C78", Offset = "0x790C78", VA = "0x790C78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002571")]
			[Address(RVA = "0x790FF8", Offset = "0x790FF8", VA = "0x790FF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D3F4", Offset = "0x53D3F4")]
		public List<RadialMenuButton> buttons;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D42C", Offset = "0x53D42C")]
		public GameObject buttonPrefab;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D464", Offset = "0x53D464")]
		public bool generateOnAwake;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D49C", Offset = "0x53D49C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53D49C", Offset = "0x53D49C")]
		public float buttonThickness;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D4F0", Offset = "0x53D4F0")]
		public Color buttonColor;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D528", Offset = "0x53D528")]
		public float offsetDistance;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D560", Offset = "0x53D560")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53D560", Offset = "0x53D560")]
		public float offsetRotation;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D5B8", Offset = "0x53D5B8")]
		public bool rotateIcons;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D5F0", Offset = "0x53D5F0")]
		public float iconMargin;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D628", Offset = "0x53D628")]
		public bool isShown;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D660", Offset = "0x53D660")]
		public bool hideOnRelease;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D698", Offset = "0x53D698")]
		public bool executeOnUnclick;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D6D0", Offset = "0x53D6D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53D6D0", Offset = "0x53D6D0")]
		public float baseHapticStrength;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D734", Offset = "0x53D734")]
		public List<GameObject> menuButtons;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int currentHover;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int currentPress;

		[Token(Token = "0x14000049")]
		public event HapticPulseEventHandler FireHapticPulse
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0x78F1C0", Offset = "0x78F1C0", VA = "0x78F1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550320", Offset = "0x550320")]
			add
			{
			}
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0x78F2AC", Offset = "0x78F2AC", VA = "0x78F2AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550330", Offset = "0x550330")]
			remove
			{
			}
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x78F398", Offset = "0x78F398", VA = "0x78F398", Slot = "4")]
		public virtual void HoverButton(float angle)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x78F3AC", Offset = "0x78F3AC", VA = "0x78F3AC", Slot = "5")]
		public virtual void ClickButton(float angle)
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x78F3C0", Offset = "0x78F3C0", VA = "0x78F3C0", Slot = "6")]
		public virtual void UnClickButton(float angle)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x78F3D4", Offset = "0x78F3D4", VA = "0x78F3D4", Slot = "7")]
		public virtual void ToggleMenu()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x78F3F4", Offset = "0x78F3F4", VA = "0x78F3F4", Slot = "8")]
		public virtual void StopTouching()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x78F56C", Offset = "0x78F56C", VA = "0x78F56C", Slot = "9")]
		public virtual void ShowMenu()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x78F60C", Offset = "0x78F60C", VA = "0x78F60C", Slot = "10")]
		public virtual RadialMenuButton GetButton(int id)
		{
			return null;
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x78F6B4", Offset = "0x78F6B4", VA = "0x78F6B4", Slot = "11")]
		public virtual void HideMenu(bool force)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x78F760", Offset = "0x78F760", VA = "0x78F760")]
		public void RegenerateButtons()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x790210", Offset = "0x790210", VA = "0x790210")]
		public void AddButton(RadialMenuButton newButton)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x790288", Offset = "0x790288", VA = "0x790288", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x790378", Offset = "0x790378", VA = "0x790378", Slot = "13")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x79041C", Offset = "0x79041C", VA = "0x79041C", Slot = "14")]
		protected virtual void InteractButton(float angle, ButtonEvent evt)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x790A00", Offset = "0x790A00", VA = "0x790A00", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x550340", Offset = "0x550340")]
		protected virtual IEnumerator TweenMenuScale(bool show)
		{
			return null;
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x790AC8", Offset = "0x790AC8", VA = "0x790AC8", Slot = "16")]
		protected virtual void AttempHapticPulse(float strength)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x790AE4", Offset = "0x790AE4", VA = "0x790AE4", Slot = "17")]
		protected virtual void RemoveAllButtons()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x790C20", Offset = "0x790C20", VA = "0x790C20")]
		public VRTK_RadialMenu()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x536640", Offset = "0x536640")]
	public class VRTK_RadialMenuController : MonoBehaviour
	{
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D76C", Offset = "0x53D76C")]
		public VRTK_ControllerEvents events;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_RadialMenu menu;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float currentAngle;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected bool touchpadTouched;

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x791120", Offset = "0x791120", VA = "0x791120", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x791184", Offset = "0x791184", VA = "0x791184", Slot = "5")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x791214", Offset = "0x791214", VA = "0x791214", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x7915C4", Offset = "0x7915C4", VA = "0x7915C4", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x7917A4", Offset = "0x7917A4", VA = "0x7917A4", Slot = "8")]
		protected virtual void DoClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x7917E8", Offset = "0x7917E8", VA = "0x7917E8", Slot = "9")]
		protected virtual void DoUnClickButton([Optional] object sender)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x79182C", Offset = "0x79182C", VA = "0x79182C", Slot = "10")]
		protected virtual void DoShowMenu(float initialAngle, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x791888", Offset = "0x791888", VA = "0x791888", Slot = "11")]
		protected virtual void DoHideMenu(bool force, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x7918F0", Offset = "0x7918F0", VA = "0x7918F0", Slot = "12")]
		protected virtual void DoChangeAngle(float angle, [Optional] object sender)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x791938", Offset = "0x791938", VA = "0x791938", Slot = "13")]
		protected virtual void AttemptHapticPulse(float strength)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x791A20", Offset = "0x791A20", VA = "0x791A20", Slot = "14")]
		protected virtual void DoTouchpadClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x791A30", Offset = "0x791A30", VA = "0x791A30", Slot = "15")]
		protected virtual void DoTouchpadUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x791A40", Offset = "0x791A40", VA = "0x791A40", Slot = "16")]
		protected virtual void DoTouchpadTouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x791AAC", Offset = "0x791AAC", VA = "0x791AAC", Slot = "17")]
		protected virtual void DoTouchpadUntouched(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x791AC4", Offset = "0x791AC4", VA = "0x791AC4", Slot = "18")]
		protected virtual void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x791B34", Offset = "0x791B34", VA = "0x791B34", Slot = "19")]
		protected virtual float CalculateAngle(ControllerInteractionEventArgs e)
		{
			return default(float);
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x791B48", Offset = "0x791B48", VA = "0x791B48")]
		public VRTK_RadialMenuController()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public struct SnapDropZoneEventArgs
	{
		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject snappedObject;
	}
	[Token(Token = "0x20000E0")]
	public delegate void SnapDropZoneEventHandler(object sender, SnapDropZoneEventArgs e);
	[Token(Token = "0x20000E1")]
	public class VRTK_SnapDropZone : MonoBehaviour
	{
		[Token(Token = "0x200043C")]
		public enum SnapTypes
		{
			[Token(Token = "0x40017B2")]
			UseKinematic,
			[Token(Token = "0x40017B3")]
			UseJoint,
			[Token(Token = "0x40017B4")]
			UseParenting
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539720", Offset = "0x539720")]
		private sealed class <UpdateTransformDimensions>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject ioCheck;

			[Token(Token = "0x40017B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject endSettings;

			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 endScale;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Transform <ioTransform>5__3;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector3 <startPosition>5__4;

			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Quaternion <startRotation>5__5;

			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Vector3 <startScale>5__6;

			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Vector3 <targetPosition>5__7;

			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion <targetRotation>5__8;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002576")]
				[Address(RVA = "0x82A484", Offset = "0x82A484", VA = "0x82A484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002578")]
				[Address(RVA = "0x82A4F4", Offset = "0x82A4F4", VA = "0x82A4F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002573")]
			[Address(RVA = "0x827B50", Offset = "0x827B50", VA = "0x827B50")]
			[DebuggerHidden]
			public <UpdateTransformDimensions>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6002574")]
			[Address(RVA = "0x829F64", Offset = "0x829F64", VA = "0x829F64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0x829F68", Offset = "0x829F68", VA = "0x829F68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002577")]
			[Address(RVA = "0x82A48C", Offset = "0x82A48C", VA = "0x82A48C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539730", Offset = "0x539730")]
		private sealed class <AttemptForceSnapAtEndOfFrame>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_SnapDropZone <>4__this;

			[Token(Token = "0x40017C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject objectToSnap;

			[Token(Token = "0x17000226")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600257C")]
				[Address(RVA = "0x829EEC", Offset = "0x829EEC", VA = "0x829EEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000227")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600257E")]
				[Address(RVA = "0x829F5C", Offset = "0x829F5C", VA = "0x829F5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002579")]
			[Address(RVA = "0x82879C", Offset = "0x82879C", VA = "0x82879C")]
			[DebuggerHidden]
			public <AttemptForceSnapAtEndOfFrame>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x600257A")]
			[Address(RVA = "0x829E28", Offset = "0x829E28", VA = "0x829E28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600257B")]
			[Address(RVA = "0x829E2C", Offset = "0x829E2C", VA = "0x829E2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600257D")]
			[Address(RVA = "0x829EF4", Offset = "0x829EF4", VA = "0x829EF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D7A4", Offset = "0x53D7A4")]
		public GameObject highlightObjectPrefab;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D7DC", Offset = "0x53D7DC")]
		public SnapTypes snapType;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D814", Offset = "0x53D814")]
		public float snapDuration;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D84C", Offset = "0x53D84C")]
		public bool applyScalingOnSnap;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D884", Offset = "0x53D884")]
		public bool cloneNewOnUnsnap;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D8BC", Offset = "0x53D8BC")]
		public Color highlightColor;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D8F4", Offset = "0x53D8F4")]
		public bool highlightAlwaysActive;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D92C", Offset = "0x53D92C")]
		public VRTK_PolicyList validObjectListPolicy;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D964", Offset = "0x53D964")]
		public bool displayDropZoneInEditor;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53D99C", Offset = "0x53D99C")]
		public GameObject defaultSnappedObject;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip hookSound;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject previousPrefab;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GameObject highlightContainer;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected GameObject highlightObject;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject highlightEditorObject;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<GameObject> currentValidSnapObjects;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected GameObject currentSnappedObject;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VRTK_InteractableObject currentSnappedIO;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected GameObject objectToClone;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool[] clonedObjectColliderStates;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool willSnap;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		protected bool isSnapped;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		protected bool wasSnapped;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		protected bool isHighlighted;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Coroutine transitionInPlace;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected bool originalJointCollisionState;

		[Token(Token = "0x40006EB")]
		protected const string HIGHLIGHT_CONTAINER_NAME = "HighlightContainer";

		[Token(Token = "0x40006EC")]
		protected const string HIGHLIGHT_OBJECT_NAME = "HighlightObject";

		[Token(Token = "0x40006ED")]
		protected const string HIGHLIGHT_EDITOR_OBJECT_NAME = "EditorHighlightObject";

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int isHooked;

		[Token(Token = "0x1400004A")]
		public event SnapDropZoneEventHandler ObjectEnteredSnapDropZone
		{
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x824FB0", Offset = "0x824FB0", VA = "0x824FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5503A4", Offset = "0x5503A4")]
			add
			{
			}
			[Token(Token = "0x6000910")]
			[Address(RVA = "0x82509C", Offset = "0x82509C", VA = "0x82509C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5503B4", Offset = "0x5503B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event SnapDropZoneEventHandler ObjectExitedSnapDropZone
		{
			[Token(Token = "0x6000911")]
			[Address(RVA = "0x825188", Offset = "0x825188", VA = "0x825188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5503C4", Offset = "0x5503C4")]
			add
			{
			}
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x825274", Offset = "0x825274", VA = "0x825274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5503D4", Offset = "0x5503D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event SnapDropZoneEventHandler ObjectSnappedToDropZone
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x825360", Offset = "0x825360", VA = "0x825360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5503E4", Offset = "0x5503E4")]
			add
			{
			}
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x82544C", Offset = "0x82544C", VA = "0x82544C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5503F4", Offset = "0x5503F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event SnapDropZoneEventHandler ObjectUnsnappedFromDropZone
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x825538", Offset = "0x825538", VA = "0x825538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550404", Offset = "0x550404")]
			add
			{
			}
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x825624", Offset = "0x825624", VA = "0x825624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550414", Offset = "0x550414")]
			remove
			{
			}
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x825710", Offset = "0x825710", VA = "0x825710", Slot = "4")]
		public virtual void OnObjectEnteredSnapDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x825734", Offset = "0x825734", VA = "0x825734", Slot = "5")]
		public virtual void OnObjectExitedSnapDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x825758", Offset = "0x825758", VA = "0x825758", Slot = "6")]
		public virtual void OnObjectSnappedToDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x82577C", Offset = "0x82577C", VA = "0x82577C", Slot = "7")]
		public virtual void OnObjectUnsnappedFromDropZone(SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x8257D0", Offset = "0x8257D0", VA = "0x8257D0", Slot = "8")]
		public virtual SnapDropZoneEventArgs SetSnapDropZoneEvent(GameObject interactableObject)
		{
			return default(SnapDropZoneEventArgs);
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x8257D8", Offset = "0x8257D8", VA = "0x8257D8", Slot = "9")]
		public virtual void InitaliseHighlightObject(bool removeOldObject = false)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x8258B8", Offset = "0x8258B8", VA = "0x8258B8", Slot = "10")]
		public virtual void ForceSnap(GameObject objectToSnap)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x825A5C", Offset = "0x825A5C", VA = "0x825A5C", Slot = "11")]
		public virtual void ForceUnsnap()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x825B6C", Offset = "0x825B6C", VA = "0x825B6C", Slot = "12")]
		public virtual bool ValidSnappableObjectIsHovering()
		{
			return default(bool);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x825BD8", Offset = "0x825BD8", VA = "0x825BD8", Slot = "13")]
		public virtual bool IsObjectHovering(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x825C48", Offset = "0x825C48", VA = "0x825C48", Slot = "14")]
		public virtual List<GameObject> GetHoveringObjects()
		{
			return null;
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x825C50", Offset = "0x825C50", VA = "0x825C50", Slot = "15")]
		public virtual GameObject GetCurrentSnappedObject()
		{
			return null;
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x825C58", Offset = "0x825C58", VA = "0x825C58", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x825D28", Offset = "0x825D28", VA = "0x825D28", Slot = "17")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x825DEC", Offset = "0x825DEC", VA = "0x825DEC", Slot = "18")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x825E8C", Offset = "0x825E8C", VA = "0x825E8C", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x825FEC", Offset = "0x825FEC", VA = "0x825FEC", Slot = "20")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x82600C", Offset = "0x82600C", VA = "0x82600C", Slot = "21")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x8260F4", Offset = "0x8260F4", VA = "0x8260F4", Slot = "22")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x826260", Offset = "0x826260", VA = "0x826260", Slot = "23")]
		protected virtual VRTK_InteractableObject ValidSnapObject(GameObject checkObject, bool grabState, bool checkGrabState = true)
		{
			return null;
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x826378", Offset = "0x826378", VA = "0x826378", Slot = "24")]
		protected virtual string ObjectPath(string name)
		{
			return null;
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x8263CC", Offset = "0x8263CC", VA = "0x8263CC", Slot = "25")]
		protected virtual void CheckSnappedItemExists()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x82647C", Offset = "0x82647C", VA = "0x82647C", Slot = "26")]
		protected virtual void CheckPrefabUpdate()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x826550", Offset = "0x826550", VA = "0x826550", Slot = "27")]
		protected virtual void SetObjectHighlight()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x8265A0", Offset = "0x8265A0", VA = "0x8265A0", Slot = "28")]
		protected virtual void CreateHighlightersInEditor()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x8265DC", Offset = "0x8265DC", VA = "0x8265DC", Slot = "29")]
		protected virtual void CheckCurrentValidSnapObjectStillValid()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x826884", Offset = "0x826884", VA = "0x826884", Slot = "30")]
		protected virtual void ForceSetObjects()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x826B30", Offset = "0x826B30", VA = "0x826B30", Slot = "31")]
		protected virtual void GenerateContainer()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x826E04", Offset = "0x826E04", VA = "0x826E04", Slot = "32")]
		protected virtual void SetContainer()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x826ECC", Offset = "0x826ECC", VA = "0x826ECC", Slot = "33")]
		protected virtual void GenerateObjects()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x826FB0", Offset = "0x826FB0", VA = "0x826FB0", Slot = "34")]
		protected virtual void SnapObject(Collider collider)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x8271CC", Offset = "0x8271CC", VA = "0x8271CC", Slot = "35")]
		protected virtual void CreatePermanentClone()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x827414", Offset = "0x827414", VA = "0x827414", Slot = "36")]
		protected virtual void ResetPermanentCloneColliders(GameObject objectToReset)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x827590", Offset = "0x827590", VA = "0x827590", Slot = "37")]
		protected virtual void ResnapPermanentClone()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x827668", Offset = "0x827668", VA = "0x827668", Slot = "38")]
		protected virtual void UnsnapObject()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x8278FC", Offset = "0x8278FC", VA = "0x8278FC", Slot = "39")]
		protected virtual Vector3 GetNewLocalScale(VRTK_InteractableObject ioCheck)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x827A5C", Offset = "0x827A5C", VA = "0x827A5C", Slot = "40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x550424", Offset = "0x550424")]
		protected virtual IEnumerator UpdateTransformDimensions(VRTK_InteractableObject ioCheck, GameObject endSettings, Vector3 endScale, float duration)
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x827B7C", Offset = "0x827B7C", VA = "0x827B7C", Slot = "41")]
		protected virtual void SetDropSnapType(VRTK_InteractableObject ioCheck)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x828024", Offset = "0x828024", VA = "0x828024", Slot = "42")]
		protected virtual void SetSnapDropZoneJoint(Rigidbody snapTo)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x828450", Offset = "0x828450", VA = "0x828450", Slot = "43")]
		protected virtual void ResetSnapDropZoneJoint()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x82850C", Offset = "0x82850C", VA = "0x82850C", Slot = "44")]
		protected virtual void AddCurrentValidSnapObject(GameObject givenObject)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x8285B8", Offset = "0x8285B8", VA = "0x8285B8", Slot = "45")]
		protected virtual void RemoveCurrentValidSnapObject(GameObject givenObject)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x828664", Offset = "0x828664", VA = "0x828664", Slot = "46")]
		protected virtual void AttemptForceSnap(GameObject objectToSnap)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x828704", Offset = "0x828704", VA = "0x828704", Slot = "47")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x550488", Offset = "0x550488")]
		protected virtual IEnumerator AttemptForceSnapAtEndOfFrame(GameObject objectToSnap)
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x8287C8", Offset = "0x8287C8", VA = "0x8287C8", Slot = "48")]
		protected virtual void ToggleHighlight(Collider collider, bool state)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x828A1C", Offset = "0x828A1C", VA = "0x828A1C", Slot = "49")]
		protected virtual void CopyObject(GameObject objectBlueprint, ref GameObject clonedObject, string givenName)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x828CE4", Offset = "0x828CE4", VA = "0x828CE4", Slot = "50")]
		protected virtual void GenerateHighlightObject()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x828FE8", Offset = "0x828FE8", VA = "0x828FE8", Slot = "51")]
		protected virtual void DeleteHighlightObject()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x829078", Offset = "0x829078", VA = "0x829078", Slot = "52")]
		protected virtual void GenerateEditorHighlightObject()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x8292FC", Offset = "0x8292FC", VA = "0x8292FC", Slot = "53")]
		protected virtual void CleanHighlightObject(GameObject objectToClean)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x8296FC", Offset = "0x8296FC", VA = "0x8296FC", Slot = "54")]
		protected virtual void InitialiseHighlighter()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x8299B4", Offset = "0x8299B4", VA = "0x8299B4", Slot = "55")]
		protected virtual void ChooseDestroyType(Transform deleteTransform)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x829A70", Offset = "0x829A70", VA = "0x829A70", Slot = "56")]
		protected virtual void ChooseDestroyType(GameObject deleteObject)
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x829B10", Offset = "0x829B10", VA = "0x829B10", Slot = "57")]
		protected virtual void ChooseDestroyType(Component deleteComponent)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x829BB0", Offset = "0x829BB0", VA = "0x829BB0", Slot = "58")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x829D34", Offset = "0x829D34", VA = "0x829D34")]
		public VRTK_SnapDropZone()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class RadialButtonIcon : MonoBehaviour
	{
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xB86234", Offset = "0xB86234", VA = "0xB86234")]
		public RadialButtonIcon()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	[ExecuteInEditMode]
	public class UICircle : Graphic
	{
		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53DA14", Offset = "0x53DA14")]
		public int fillPercent;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool fill;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int thickness;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53DA30", Offset = "0x53DA30")]
		public int segments;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected Texture setTexture;

		[Token(Token = "0x17000077")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x7206AC", Offset = "0x7206AC", VA = "0x7206AC", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public Texture texture
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x720758", Offset = "0x720758", VA = "0x720758")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x720760", Offset = "0x720760", VA = "0x720760")]
			set
			{
			}
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x72081C", Offset = "0x72081C", VA = "0x72081C", Slot = "43")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5504EC", Offset = "0x5504EC")]
		protected override void OnPopulateMesh(Mesh toFill)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x720DD4", Offset = "0x720DD4", VA = "0x720DD4", Slot = "50")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x720EB0", Offset = "0x720EB0", VA = "0x720EB0", Slot = "51")]
		protected virtual UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x721130", Offset = "0x721130", VA = "0x721130")]
		public UICircle()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class VRTK_ContentHandler : MonoBehaviour
	{
		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DA5C", Offset = "0x53DA5C")]
		public VRTK_Control control;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DA94", Offset = "0x53DA94")]
		public Transform inside;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DACC", Offset = "0x53DACC")]
		public Transform outside;

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x8AC04C", Offset = "0x8AC04C", VA = "0x8AC04C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x8AC238", Offset = "0x8AC238", VA = "0x8AC238", Slot = "5")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x8AC3A0", Offset = "0x8AC3A0", VA = "0x8AC3A0")]
		public VRTK_ContentHandler()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public delegate void Button3DEventHandler(object sender, Control3DEventArgs e);
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5366B4", Offset = "0x5366B4")]
	public class VRTK_Button : VRTK_Control
	{
		[Serializable]
		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x539740", Offset = "0x539740")]
		public class ButtonEvents
		{
			[Token(Token = "0x40017C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEvent OnPush;

			[Token(Token = "0x600257F")]
			[Address(RVA = "0x8A8D58", Offset = "0x8A8D58", VA = "0x8A8D58")]
			public ButtonEvents()
			{
			}
		}

		[Token(Token = "0x2000440")]
		public enum ButtonDirection
		{
			[Token(Token = "0x40017C9")]
			autodetect,
			[Token(Token = "0x40017CA")]
			x,
			[Token(Token = "0x40017CB")]
			y,
			[Token(Token = "0x40017CC")]
			z,
			[Token(Token = "0x40017CD")]
			negX,
			[Token(Token = "0x40017CE")]
			negY,
			[Token(Token = "0x40017CF")]
			negZ
		}

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DB04", Offset = "0x53DB04")]
		public GameObject connectedTo;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DB3C", Offset = "0x53DB3C")]
		public ButtonDirection direction;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DB74", Offset = "0x53DB74")]
		public float activationDistance;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DBAC", Offset = "0x53DBAC")]
		public float buttonStrength;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DBE4", Offset = "0x53DBE4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53DBE4", Offset = "0x53DBE4")]
		public ButtonEvents events;

		[Token(Token = "0x40006FE")]
		protected const float MAX_AUTODETECT_ACTIVATION_LENGTH = 4f;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected ButtonDirection finalDirection;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Vector3 restingPosition;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3 activationDir;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Rigidbody buttonRigidbody;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected ConfigurableJoint buttonJoint;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ConstantForce buttonForce;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected int forceCount;

		[Token(Token = "0x1400004E")]
		public event Button3DEventHandler Pushed
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x8A6260", Offset = "0x8A6260", VA = "0x8A6260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550524", Offset = "0x550524")]
			add
			{
			}
			[Token(Token = "0x6000960")]
			[Address(RVA = "0x8A634C", Offset = "0x8A634C", VA = "0x8A634C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550534", Offset = "0x550534")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event Button3DEventHandler Released
		{
			[Token(Token = "0x6000961")]
			[Address(RVA = "0x8A6438", Offset = "0x8A6438", VA = "0x8A6438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550544", Offset = "0x550544")]
			add
			{
			}
			[Token(Token = "0x6000962")]
			[Address(RVA = "0x8A6524", Offset = "0x8A6524", VA = "0x8A6524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550554", Offset = "0x550554")]
			remove
			{
			}
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x8A6610", Offset = "0x8A6610", VA = "0x8A6610", Slot = "19")]
		public virtual void OnPushed(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x8A662C", Offset = "0x8A662C", VA = "0x8A662C", Slot = "20")]
		public virtual void OnReleased(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x8A6648", Offset = "0x8A6648", VA = "0x8A6648", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x8A696C", Offset = "0x8A696C", VA = "0x8A696C", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x8A6C68", Offset = "0x8A6C68", VA = "0x8A6C68", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x8A75CC", Offset = "0x8A75CC", VA = "0x8A75CC", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x8A75D8", Offset = "0x8A75D8", VA = "0x8A75D8", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x8A76B8", Offset = "0x8A76B8", VA = "0x8A76B8", Slot = "21")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x8A77B4", Offset = "0x8A77B4", VA = "0x8A77B4", Slot = "22")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x8A77C4", Offset = "0x8A77C4", VA = "0x8A77C4", Slot = "23")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x8A77D4", Offset = "0x8A77D4", VA = "0x8A77D4", Slot = "24")]
		protected virtual ButtonDirection DetectDirection()
		{
			return default(ButtonDirection);
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x8A8488", Offset = "0x8A8488", VA = "0x8A8488", Slot = "25")]
		protected virtual Vector3 CalculateActivationDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x8A8B4C", Offset = "0x8A8B4C", VA = "0x8A8B4C", Slot = "26")]
		protected virtual bool ReachedActivationDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x8A8C28", Offset = "0x8A8C28", VA = "0x8A8C28", Slot = "27")]
		protected virtual Vector3 GetForceVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x8A8CCC", Offset = "0x8A8CCC", VA = "0x8A8CCC")]
		public VRTK_Button()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5366EC", Offset = "0x5366EC")]
	public class VRTK_Chest : VRTK_Control
	{
		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DC64", Offset = "0x53DC64")]
		public Direction direction;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DC9C", Offset = "0x53DC9C")]
		public GameObject lid;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DCD4", Offset = "0x53DCD4")]
		public GameObject body;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DD0C", Offset = "0x53DD0C")]
		public GameObject handle;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DD44", Offset = "0x53DD44")]
		public GameObject content;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DD7C", Offset = "0x53DD7C")]
		public bool hideContent;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DDB4", Offset = "0x53DDB4")]
		public float maxAngle;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float minAngle;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float stepSize;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody bodyRigidbody;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody handleRigidbody;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected FixedJoint handleJoint;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Rigidbody lidRigidbody;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected HingeJoint lidJoint;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool lidJointCreated;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected Direction finalDirection;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected float subDirection;

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x8A95E4", Offset = "0x8A95E4", VA = "0x8A95E4", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x8A9994", Offset = "0x8A9994", VA = "0x8A9994", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x8A99FC", Offset = "0x8A99FC", VA = "0x8A99FC", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x8A9FB8", Offset = "0x8A9FB8", VA = "0x8A9FB8", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x8AA074", Offset = "0x8AA074", VA = "0x8AA074", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x8AA0A4", Offset = "0x8AA0A4", VA = "0x8AA0A4", Slot = "19")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x8AA54C", Offset = "0x8AA54C", VA = "0x8AA54C", Slot = "20")]
		protected virtual void InitBody()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x8AA638", Offset = "0x8AA638", VA = "0x8AA638", Slot = "21")]
		protected virtual void InitLid()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x8AA80C", Offset = "0x8AA80C", VA = "0x8AA80C", Slot = "22")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x8AAA18", Offset = "0x8AAA18", VA = "0x8AAA18", Slot = "23")]
		protected virtual void CreateInteractableObject(GameObject targetGameObject)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x8AAB74", Offset = "0x8AAB74", VA = "0x8AAB74", Slot = "24")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x8AAD44", Offset = "0x8AAD44", VA = "0x8AAD44")]
		public VRTK_Chest()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public struct Control3DEventArgs
	{
		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float value;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float normalizedValue;
	}
	[Token(Token = "0x20000E9")]
	public delegate void Control3DEventHandler(object sender, Control3DEventArgs e);
	[Token(Token = "0x20000EA")]
	[ExecuteInEditMode]
	public abstract class VRTK_Control : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x539778", Offset = "0x539778")]
		public class ValueChangedEvent : UnityEvent<float, float>
		{
			[Token(Token = "0x6002580")]
			[Address(RVA = "0x8ACEC0", Offset = "0x8ACEC0", VA = "0x8ACEC0")]
			public ValueChangedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5397B0", Offset = "0x5397B0")]
		public class DefaultControlEvents
		{
			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ValueChangedEvent OnValueChanged;

			[Token(Token = "0x6002581")]
			[Address(RVA = "0x8ACEB8", Offset = "0x8ACEB8", VA = "0x8ACEB8")]
			public DefaultControlEvents()
			{
			}
		}

		[Token(Token = "0x2000443")]
		public struct ControlValueRange
		{
			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float controlMin;

			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float controlMax;
		}

		[Token(Token = "0x2000444")]
		public enum Direction
		{
			[Token(Token = "0x40017D4")]
			autodetect,
			[Token(Token = "0x40017D5")]
			x,
			[Token(Token = "0x40017D6")]
			y,
			[Token(Token = "0x40017D7")]
			z
		}

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DDEC", Offset = "0x53DDEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53DDEC", Offset = "0x53DDEC")]
		public DefaultControlEvents defaultEvents;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DE4C", Offset = "0x53DE4C")]
		public bool interactWithoutGrab;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Bounds bounds;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool setupSuccessful;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ControllerRigidbodyActivator autoTriggerVolume;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected float value;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Color COLOR_OK;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static Color COLOR_ERROR;

		[Token(Token = "0x4000722")]
		protected const float MIN_OPENING_DISTANCE = 20f;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected ControlValueRange valueRange;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject controlContent;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool hideControlContent;

		[Token(Token = "0x14000050")]
		public event Control3DEventHandler ValueChanged
		{
			[Token(Token = "0x6000982")]
			[Address(RVA = "0x8AC3A8", Offset = "0x8AC3A8", VA = "0x8AC3A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550564", Offset = "0x550564")]
			add
			{
			}
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x8AC494", Offset = "0x8AC494", VA = "0x8AC494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550574", Offset = "0x550574")]
			remove
			{
			}
		}

		[Token(Token = "0x6000984")]
		protected abstract void InitRequiredComponents();

		[Token(Token = "0x6000985")]
		protected abstract bool DetectSetup();

		[Token(Token = "0x6000986")]
		protected abstract ControlValueRange RegisterValueRange();

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x8AC580", Offset = "0x8AC580", VA = "0x8AC580", Slot = "7")]
		public virtual void OnValueChanged(Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x8AC59C", Offset = "0x8AC59C", VA = "0x8AC59C", Slot = "8")]
		public virtual float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x8AC5A4", Offset = "0x8AC5A4", VA = "0x8AC5A4", Slot = "9")]
		public virtual float GetNormalizedValue()
		{
			return default(float);
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x8AC6AC", Offset = "0x8AC6AC", VA = "0x8AC6AC", Slot = "10")]
		public virtual void SetContent(GameObject content, bool hideContent)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x8AC6BC", Offset = "0x8AC6BC", VA = "0x8AC6BC", Slot = "11")]
		public virtual GameObject GetContent()
		{
			return null;
		}

		[Token(Token = "0x600098C")]
		protected abstract void HandleUpdate();

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x8AC6C4", Offset = "0x8AC6C4", VA = "0x8AC6C4", Slot = "13")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x8AC76C", Offset = "0x8AC76C", VA = "0x8AC76C", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x8AC8A8", Offset = "0x8AC8A8", VA = "0x8AC8A8", Slot = "15")]
		protected virtual Control3DEventArgs SetControlEvent()
		{
			return default(Control3DEventArgs);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x8A6788", Offset = "0x8A6788", VA = "0x8A6788", Slot = "16")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x8AC8F4", Offset = "0x8AC8F4", VA = "0x8AC8F4", Slot = "17")]
		protected virtual void CreateTriggerVolume()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x8ACB70", Offset = "0x8ACB70", VA = "0x8ACB70")]
		protected Vector3 GetThirdDirection(Vector3 axis1, Vector3 axis2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x8ACCBC", Offset = "0x8ACCBC", VA = "0x8ACCBC", Slot = "18")]
		protected virtual void HandleInteractables()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x8A8D48", Offset = "0x8A8D48", VA = "0x8A8D48")]
		protected VRTK_Control()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536734", Offset = "0x536734")]
	public class VRTK_Door : VRTK_Control
	{
		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DE94", Offset = "0x53DE94")]
		public Direction direction;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DECC", Offset = "0x53DECC")]
		public GameObject door;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DF04", Offset = "0x53DF04")]
		public GameObject handles;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DF3C", Offset = "0x53DF3C")]
		public GameObject frame;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DF74", Offset = "0x53DF74")]
		public GameObject content;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DFAC", Offset = "0x53DFAC")]
		public bool hideContent;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53DFE4", Offset = "0x53DFE4")]
		public float maxAngle;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E01C", Offset = "0x53E01C")]
		public bool openInward;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E054", Offset = "0x53E054")]
		public bool openOutward;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E08C", Offset = "0x53E08C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53E08C", Offset = "0x53E08C")]
		public float minSnapClose;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E0E0", Offset = "0x53E0E0")]
		public float releasedFriction;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E118", Offset = "0x53E118")]
		public float grabbedFriction;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E150", Offset = "0x53E150")]
		public bool handleInteractableOnly;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected float stepSize;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody doorRigidbody;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected HingeJoint doorHinge;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ConstantForce doorSnapForce;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Rigidbody frameRigidbody;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Direction finalDirection;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float subDirection;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Vector3 secondaryDirection;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected bool doorHingeCreated;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		protected bool doorSnapForceCreated;

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x95C360", Offset = "0x95C360", VA = "0x95C360", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x95CD10", Offset = "0x95CD10", VA = "0x95CD10", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x95CD78", Offset = "0x95CD78", VA = "0x95CD78", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x95D9C8", Offset = "0x95D9C8", VA = "0x95D9C8", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x95DA84", Offset = "0x95DA84", VA = "0x95DA84", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x95DB6C", Offset = "0x95DB6C", VA = "0x95DB6C", Slot = "19")]
		protected virtual float GetDirectionFromJoint()
		{
			return default(float);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x95DBE4", Offset = "0x95DBE4", VA = "0x95DBE4", Slot = "20")]
		protected virtual Vector3 Direction2Axis(Direction givenDirection)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x95DCC0", Offset = "0x95DCC0", VA = "0x95DCC0", Slot = "21")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x95E07C", Offset = "0x95E07C", VA = "0x95E07C", Slot = "22")]
		protected virtual void InitFrame()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x95E1D4", Offset = "0x95E1D4", VA = "0x95E1D4", Slot = "23")]
		protected virtual void InitDoor()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x95E4A8", Offset = "0x95E4A8", VA = "0x95E4A8", Slot = "24")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x95E71C", Offset = "0x95E71C", VA = "0x95E71C", Slot = "25")]
		protected virtual void CreateInteractableObject(GameObject target)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x95E8E0", Offset = "0x95E8E0", VA = "0x95E8E0", Slot = "26")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x95E920", Offset = "0x95E920", VA = "0x95E920", Slot = "27")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x95E960", Offset = "0x95E960", VA = "0x95E960", Slot = "28")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x95EA74", Offset = "0x95EA74", VA = "0x95EA74", Slot = "29")]
		protected virtual GameObject GetDoor()
		{
			return null;
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x95EB00", Offset = "0x95EB00", VA = "0x95EB00")]
		public VRTK_Door()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53676C", Offset = "0x53676C")]
	public class VRTK_Drawer : VRTK_Control
	{
		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E188", Offset = "0x53E188")]
		public GameObject connectedTo;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E1C0", Offset = "0x53E1C0")]
		public Direction direction;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E1F8", Offset = "0x53E1F8")]
		public GameObject body;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E230", Offset = "0x53E230")]
		public GameObject handle;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E268", Offset = "0x53E268")]
		public GameObject content;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E2A0", Offset = "0x53E2A0")]
		public bool hideContent;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E2D8", Offset = "0x53E2D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53E2D8", Offset = "0x53E2D8")]
		public float minSnapClose;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E32C", Offset = "0x53E32C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53E32C", Offset = "0x53E32C")]
		public float maxExtend;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody drawerRigidbody;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Rigidbody handleRigidbody;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected FixedJoint handleFixedJoint;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ConfigurableJoint drawerJoint;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected VRTK_InteractableObject drawerInteractableObject;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected ConstantForce drawerSnapForce;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Direction finalDirection;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float subDirection;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float pullDistance;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected Vector3 initialPosition;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected bool drawerJointCreated;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		protected bool drawerSnapForceCreated;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x95EB9C", Offset = "0x95EB9C", VA = "0x95EB9C", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x95EE84", Offset = "0x95EE84", VA = "0x95EE84", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x95EF04", Offset = "0x95EF04", VA = "0x95EF04", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x95F72C", Offset = "0x95F72C", VA = "0x95F72C", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x95F73C", Offset = "0x95F73C", VA = "0x95F73C", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x95F848", Offset = "0x95F848", VA = "0x95F848", Slot = "19")]
		protected virtual void InitBody()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x95FCB8", Offset = "0x95FCB8", VA = "0x95FCB8", Slot = "20")]
		protected virtual void InitHandle()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x95FEC0", Offset = "0x95FEC0", VA = "0x95FEC0", Slot = "21")]
		protected virtual Direction DetectDirection()
		{
			return default(Direction);
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x960674", Offset = "0x960674", VA = "0x960674", Slot = "22")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x960814", Offset = "0x960814", VA = "0x960814", Slot = "23")]
		protected virtual GameObject GetBody()
		{
			return null;
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x9608A0", Offset = "0x9608A0", VA = "0x9608A0", Slot = "24")]
		protected virtual GameObject GetHandle()
		{
			return null;
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x96092C", Offset = "0x96092C", VA = "0x96092C")]
		public VRTK_Drawer()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5367A4", Offset = "0x5367A4")]
	public class VRTK_Knob : VRTK_Control
	{
		[Token(Token = "0x2000445")]
		public enum KnobDirection
		{
			[Token(Token = "0x40017D9")]
			x,
			[Token(Token = "0x40017DA")]
			y,
			[Token(Token = "0x40017DB")]
			z
		}

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E380", Offset = "0x53E380")]
		public GameObject connectedTo;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E3B8", Offset = "0x53E3B8")]
		public KnobDirection direction;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E3F0", Offset = "0x53E3F0")]
		public float min;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E428", Offset = "0x53E428")]
		public float max;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E460", Offset = "0x53E460")]
		public float stepSize;

		[Token(Token = "0x4000756")]
		protected const float MAX_AUTODETECT_KNOB_WIDTH = 3f;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected KnobDirection finalDirection;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected KnobDirection subDirection;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool subDirectionFound;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Vector3 initialLocalRotation;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected ConfigurableJoint knobJoint;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool knobJointCreated;

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xCDC0F0", Offset = "0xCDC0F0", VA = "0xCDC0F0", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xCDC194", Offset = "0xCDC194", VA = "0xCDC194", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xCDC3D8", Offset = "0xCDC3D8", VA = "0xCDC3D8", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xCDC3E0", Offset = "0xCDC3E0", VA = "0xCDC3E0", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xCDC410", Offset = "0xCDC410", VA = "0xCDC410", Slot = "19")]
		protected virtual void InitKnob()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xCDC7D4", Offset = "0xCDC7D4", VA = "0xCDC7D4", Slot = "20")]
		protected virtual KnobDirection DetectDirection()
		{
			return default(KnobDirection);
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xCDD24C", Offset = "0xCDD24C", VA = "0xCDD24C", Slot = "21")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xCDD894", Offset = "0xCDD894", VA = "0xCDD894")]
		public VRTK_Knob()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5367DC", Offset = "0x5367DC")]
	public class VRTK_Lever : VRTK_Control
	{
		[Token(Token = "0x2000446")]
		public enum LeverDirection
		{
			[Token(Token = "0x40017DD")]
			x,
			[Token(Token = "0x40017DE")]
			y,
			[Token(Token = "0x40017DF")]
			z
		}

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E498", Offset = "0x53E498")]
		public GameObject connectedTo;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E4D0", Offset = "0x53E4D0")]
		public LeverDirection direction;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E508", Offset = "0x53E508")]
		public float minAngle;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E540", Offset = "0x53E540")]
		public float maxAngle;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E578", Offset = "0x53E578")]
		public float stepSize;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E5B0", Offset = "0x53E5B0")]
		public float releasedFriction;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E5E8", Offset = "0x53E5E8")]
		public float grabbedFriction;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected HingeJoint leverHingeJoint;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool leverHingeJointCreated;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rigidbody leverRigidbody;

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xCDD908", Offset = "0xCDD908", VA = "0xCDD908", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xCDD9E4", Offset = "0xCDD9E4", VA = "0xCDD9E4", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xCDDF60", Offset = "0xCDDF60", VA = "0xCDDF60", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xCDDF68", Offset = "0xCDDF68", VA = "0xCDDF68", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xCDDFA8", Offset = "0xCDDFA8", VA = "0xCDDFA8", Slot = "19")]
		protected virtual void InitRigidbody()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xCDE0EC", Offset = "0xCDE0EC", VA = "0xCDE0EC", Slot = "20")]
		protected virtual void InitInteractableObject()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xCDE2C0", Offset = "0xCDE2C0", VA = "0xCDE2C0", Slot = "21")]
		protected virtual void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xCDE300", Offset = "0xCDE300", VA = "0xCDE300", Slot = "22")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xCDE340", Offset = "0xCDE340", VA = "0xCDE340", Slot = "23")]
		protected virtual void InitHingeJoint()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xCDE4E4", Offset = "0xCDE4E4", VA = "0xCDE4E4", Slot = "24")]
		protected virtual float CalculateValue()
		{
			return default(float);
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xCDE5F8", Offset = "0xCDE5F8", VA = "0xCDE5F8", Slot = "25")]
		protected virtual void SnapToValue(float value)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xCDE7F4", Offset = "0xCDE7F4", VA = "0xCDE7F4")]
		public VRTK_Lever()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536814", Offset = "0x536814")]
	public class VRTK_Slider : VRTK_Control
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E620", Offset = "0x53E620")]
		public GameObject connectedTo;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E658", Offset = "0x53E658")]
		public Direction direction;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E690", Offset = "0x53E690")]
		public Collider minimumLimit;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E6C8", Offset = "0x53E6C8")]
		public Collider maximumLimit;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E700", Offset = "0x53E700")]
		public float minimumValue;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E738", Offset = "0x53E738")]
		public float maximumValue;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E770", Offset = "0x53E770")]
		public float stepSize;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E7A8", Offset = "0x53E7A8")]
		public bool snapToStep;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E7E0", Offset = "0x53E7E0")]
		public float releasedFriction;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected Direction finalDirection;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Rigidbody sliderRigidbody;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected ConfigurableJoint sliderJoint;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool sliderJointCreated;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected Vector3 minimumLimitDiff;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Vector3 maximumLimitDiff;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected Vector3 snapPosition;

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x823044", Offset = "0x823044", VA = "0x823044", Slot = "16")]
		protected override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x8231A8", Offset = "0x8231A8", VA = "0x8231A8", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x823208", Offset = "0x823208", VA = "0x823208", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x8241FC", Offset = "0x8241FC", VA = "0x8241FC", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x824204", Offset = "0x824204", VA = "0x824204", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x824254", Offset = "0x824254", VA = "0x824254", Slot = "19")]
		protected virtual Vector3 CalculateDiff(Vector3 initialPosition, Vector3 givenDirection, float scaleValue, float diffMultiplier, bool addition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x824480", Offset = "0x824480", VA = "0x824480", Slot = "20")]
		protected virtual void InitRigidbody()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x8246E0", Offset = "0x8246E0", VA = "0x8246E0", Slot = "21")]
		protected virtual void InitInteractableObject()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x824838", Offset = "0x824838", VA = "0x824838", Slot = "22")]
		protected virtual void InitJoint()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x824A18", Offset = "0x824A18", VA = "0x824A18", Slot = "23")]
		protected virtual void CalculateValue()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x824CFC", Offset = "0x824CFC", VA = "0x824CFC", Slot = "24")]
		protected virtual void ToggleSpring(bool state)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x824E1C", Offset = "0x824E1C", VA = "0x824E1C", Slot = "25")]
		protected virtual void SnapToValue()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x824F30", Offset = "0x824F30", VA = "0x824F30")]
		public VRTK_Slider()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53684C", Offset = "0x53684C")]
	public class VRTK_SpringLever : VRTK_Lever
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E818", Offset = "0x53E818")]
		public float springStrength;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E850", Offset = "0x53E850")]
		public float springDamper;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E888", Offset = "0x53E888")]
		public bool snapToNearestLimit;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E8C0", Offset = "0x53E8C0")]
		public bool alwaysActive;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		protected bool wasTowardZero;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		protected bool isGrabbed;

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x82B0AC", Offset = "0x82B0AC", VA = "0x82B0AC", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x82B1A0", Offset = "0x82B1A0", VA = "0x82B1A0", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x82B1D4", Offset = "0x82B1D4", VA = "0x82B1D4", Slot = "21")]
		protected override void InteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x82B200", Offset = "0x82B200", VA = "0x82B200", Slot = "22")]
		protected override void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x82B228", Offset = "0x82B228", VA = "0x82B228", Slot = "26")]
		protected virtual float GetSpringTarget(bool towardZero)
		{
			return default(float);
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x82B240", Offset = "0x82B240", VA = "0x82B240", Slot = "27")]
		protected virtual void ApplySpringForce()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x82B398", Offset = "0x82B398", VA = "0x82B398")]
		public VRTK_SpringLever()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536884", Offset = "0x536884")]
	public class VRTK_Wheel : VRTK_Control
	{
		[Token(Token = "0x2000447")]
		public enum GrabTypes
		{
			[Token(Token = "0x40017E1")]
			TrackObject,
			[Token(Token = "0x40017E2")]
			RotatorTrack
		}

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E8F8", Offset = "0x53E8F8")]
		public GameObject connectedTo;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E930", Offset = "0x53E930")]
		public GrabTypes grabType;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E968", Offset = "0x53E968")]
		public float detatchDistance;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E9A0", Offset = "0x53E9A0")]
		public float minimumValue;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53E9D8", Offset = "0x53E9D8")]
		public float maximumValue;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EA10", Offset = "0x53EA10")]
		public float stepSize;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EA48", Offset = "0x53EA48")]
		public bool snapToStep;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EA80", Offset = "0x53EA80")]
		public float grabbedFriction;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EAB8", Offset = "0x53EAB8")]
		public float releasedFriction;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x53EAF0", Offset = "0x53EAF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EAF0", Offset = "0x53EAF0")]
		public float maxAngle;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EB48", Offset = "0x53EB48")]
		public bool lockAtLimits;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float angularVelocityLimit;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float springStrengthValue;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected float springDamperValue;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Quaternion initialLocalRotation;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Rigidbody wheelRigidbody;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected HingeJoint wheelHinge;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool wheelHingeCreated;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool initialValueCalculated;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float springAngle;

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xC06200", Offset = "0xC06200", VA = "0xC06200", Slot = "4")]
		protected override void InitRequiredComponents()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xC06254", Offset = "0xC06254", VA = "0xC06254", Slot = "5")]
		protected override bool DetectSetup()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xC063C4", Offset = "0xC063C4", VA = "0xC063C4", Slot = "6")]
		protected override ControlValueRange RegisterValueRange()
		{
			return default(ControlValueRange);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xC063CC", Offset = "0xC063CC", VA = "0xC063CC", Slot = "12")]
		protected override void HandleUpdate()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xC0645C", Offset = "0xC0645C", VA = "0xC0645C", Slot = "19")]
		protected virtual void InitWheel()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xC064AC", Offset = "0xC064AC", VA = "0xC064AC", Slot = "20")]
		protected virtual void SetupRigidbody()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xC066DC", Offset = "0xC066DC", VA = "0xC066DC", Slot = "21")]
		protected virtual void SetupHinge()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xC067B4", Offset = "0xC067B4", VA = "0xC067B4", Slot = "22")]
		protected virtual void SetupHingeRestrictions()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xC06B20", Offset = "0xC06B20", VA = "0xC06B20", Slot = "23")]
		protected virtual void ConfigureHingeSpring()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xC06BD0", Offset = "0xC06BD0", VA = "0xC06BD0", Slot = "24")]
		protected virtual void SetupInteractableObject()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xC06E10", Offset = "0xC06E10", VA = "0xC06E10", Slot = "25")]
		protected virtual void WheelInteractableObjectGrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xC06E74", Offset = "0xC06E74", VA = "0xC06E74", Slot = "26")]
		protected virtual void WheelInteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xC06F04", Offset = "0xC06F04", VA = "0xC06F04", Slot = "27")]
		protected virtual void CalculateValue()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xC07120", Offset = "0xC07120", VA = "0xC07120")]
		public VRTK_Wheel()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public struct ControllerInteractionEventArgs
	{
		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53EB80", Offset = "0x53EB80")]
		public uint controllerIndex;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float buttonPressure;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 touchpadAxis;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float touchpadAngle;
	}
	[Token(Token = "0x20000F3")]
	public delegate void ControllerInteractionEventHandler(object sender, ControllerInteractionEventArgs e);
	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5368BC", Offset = "0x5368BC")]
	public class VRTK_ControllerEvents : MonoBehaviour
	{
		[Token(Token = "0x2000448")]
		public enum ButtonAlias
		{
			[Token(Token = "0x40017E4")]
			Undefined,
			[Token(Token = "0x40017E5")]
			TriggerHairline,
			[Token(Token = "0x40017E6")]
			TriggerTouch,
			[Token(Token = "0x40017E7")]
			TriggerPress,
			[Token(Token = "0x40017E8")]
			TriggerClick,
			[Token(Token = "0x40017E9")]
			GripHairline,
			[Token(Token = "0x40017EA")]
			GripTouch,
			[Token(Token = "0x40017EB")]
			GripPress,
			[Token(Token = "0x40017EC")]
			GripClick,
			[Token(Token = "0x40017ED")]
			TouchpadTouch,
			[Token(Token = "0x40017EE")]
			TouchpadPress,
			[Token(Token = "0x40017EF")]
			ButtonOneTouch,
			[Token(Token = "0x40017F0")]
			ButtonOnePress,
			[Token(Token = "0x40017F1")]
			ButtonTwoTouch,
			[Token(Token = "0x40017F2")]
			ButtonTwoPress,
			[Token(Token = "0x40017F3")]
			ButtonThreeTouch,
			[Token(Token = "0x40017F4")]
			ButtonThreePress,
			[Token(Token = "0x40017F5")]
			ButtonFourTouch,
			[Token(Token = "0x40017F6")]
			ButtonFourPress,
			[Token(Token = "0x40017F7")]
			ButtonFivePress,
			[Token(Token = "0x40017F8")]
			ButtonSixPress,
			[Token(Token = "0x40017F9")]
			ButtonSevenPress,
			[Token(Token = "0x40017FA")]
			ButtonEightPress,
			[Token(Token = "0x40017FB")]
			StartMenuPress
		}

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EBB8", Offset = "0x53EBB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EBB8", Offset = "0x53EBB8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53EBB8", Offset = "0x53EBB8")]
		public ButtonAlias pointerToggleButton;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EC3C", Offset = "0x53EC3C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53EC3C", Offset = "0x53EC3C")]
		public ButtonAlias pointerSetButton;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EC9C", Offset = "0x53EC9C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53EC9C", Offset = "0x53EC9C")]
		public ButtonAlias grabToggleButton;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53ECFC", Offset = "0x53ECFC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53ECFC", Offset = "0x53ECFC")]
		public ButtonAlias useToggleButton;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53ED5C", Offset = "0x53ED5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53ED5C", Offset = "0x53ED5C")]
		public ButtonAlias uiClickButton;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EDBC", Offset = "0x53EDBC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53EDBC", Offset = "0x53EDBC")]
		public ButtonAlias menuToggleButton;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53EE1C", Offset = "0x53EE1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EE1C", Offset = "0x53EE1C")]
		public int axisFidelity;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EE7C", Offset = "0x53EE7C")]
		public float triggerClickThreshold;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EEB4", Offset = "0x53EEB4")]
		public float triggerForceZeroThreshold;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EEEC", Offset = "0x53EEEC")]
		public bool triggerAxisZeroOnUntouch;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EF24", Offset = "0x53EF24")]
		public float gripClickThreshold;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EF5C", Offset = "0x53EF5C")]
		public float gripForceZeroThreshold;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53EF94", Offset = "0x53EF94")]
		public bool gripAxisZeroOnUntouch;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[HideInInspector]
		public bool triggerPressed;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[HideInInspector]
		public bool triggerTouched;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[HideInInspector]
		public bool triggerHairlinePressed;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public bool triggerClicked;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[HideInInspector]
		public bool triggerAxisChanged;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[HideInInspector]
		public bool gripPressed;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		[HideInInspector]
		public bool gripTouched;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool gripHairlinePressed;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool gripClicked;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[HideInInspector]
		public bool gripAxisChanged;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		public bool touchpadPressed;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool touchpadTouched;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[HideInInspector]
		public bool touchpadAxisChanged;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[HideInInspector]
		public bool buttonOnePressed;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		[HideInInspector]
		public bool buttonOneTouched;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool buttonTwoPressed;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[HideInInspector]
		public bool buttonTwoTouched;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[HideInInspector]
		public bool buttonThreePressed;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[HideInInspector]
		public bool buttonThreeTouched;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool buttonFourPressed;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[HideInInspector]
		public bool buttonFourTouched;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[HideInInspector]
		public bool buttonFivePressed;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[HideInInspector]
		public bool buttonSixPressed;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public bool buttonSevenPressed;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[HideInInspector]
		public bool buttonEightPressed;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[HideInInspector]
		public bool startMenuPressed;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53F16C", Offset = "0x53F16C")]
		public bool pointerPressed;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53F1B8", Offset = "0x53F1B8")]
		public bool grabPressed;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53F204", Offset = "0x53F204")]
		public bool usePressed;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53F250", Offset = "0x53F250")]
		public bool uiClickPressed;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x53F29C", Offset = "0x53F29C")]
		public bool menuPressed;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool controllerVisible;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool canUseTrigger;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[HideInInspector]
		public bool canUseGrip;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		[HideInInspector]
		public bool canUseTouchpad;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public bool canUseButtonOne;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[HideInInspector]
		public bool canUseButtonTwo;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[HideInInspector]
		public bool canUseButtonThree;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		[HideInInspector]
		public bool canUseButtonFour;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool canUseStartMenu;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		protected Vector2 touchpadAxis;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		protected Vector2 triggerAxis;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		protected Vector2 gripAxis;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		protected float hairTriggerDelta;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		protected float hairGripDelta;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private VRTK_ControllerReference _cachedControllerReference;

		[Token(Token = "0x14000051")]
		public event ControllerInteractionEventHandler TriggerPressed
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x8ACF18", Offset = "0x8ACF18", VA = "0x8ACF18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550584", Offset = "0x550584")]
			add
			{
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x8AD004", Offset = "0x8AD004", VA = "0x8AD004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550594", Offset = "0x550594")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event ControllerInteractionEventHandler TriggerReleased
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x8AD0F0", Offset = "0x8AD0F0", VA = "0x8AD0F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5505A4", Offset = "0x5505A4")]
			add
			{
			}
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x8AD1DC", Offset = "0x8AD1DC", VA = "0x8AD1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5505B4", Offset = "0x5505B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event ControllerInteractionEventHandler TriggerTouchStart
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x8AD2C8", Offset = "0x8AD2C8", VA = "0x8AD2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5505C4", Offset = "0x5505C4")]
			add
			{
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x8AD3B4", Offset = "0x8AD3B4", VA = "0x8AD3B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5505D4", Offset = "0x5505D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event ControllerInteractionEventHandler TriggerTouchEnd
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x8AD4A0", Offset = "0x8AD4A0", VA = "0x8AD4A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5505E4", Offset = "0x5505E4")]
			add
			{
			}
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x8AD58C", Offset = "0x8AD58C", VA = "0x8AD58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5505F4", Offset = "0x5505F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event ControllerInteractionEventHandler TriggerHairlineStart
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x8AD678", Offset = "0x8AD678", VA = "0x8AD678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550604", Offset = "0x550604")]
			add
			{
			}
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x8AD764", Offset = "0x8AD764", VA = "0x8AD764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550614", Offset = "0x550614")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event ControllerInteractionEventHandler TriggerHairlineEnd
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x8AD850", Offset = "0x8AD850", VA = "0x8AD850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550624", Offset = "0x550624")]
			add
			{
			}
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x8AD93C", Offset = "0x8AD93C", VA = "0x8AD93C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550634", Offset = "0x550634")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event ControllerInteractionEventHandler TriggerClicked
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x8ADA28", Offset = "0x8ADA28", VA = "0x8ADA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550644", Offset = "0x550644")]
			add
			{
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x8ADB14", Offset = "0x8ADB14", VA = "0x8ADB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550654", Offset = "0x550654")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event ControllerInteractionEventHandler TriggerUnclicked
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x8ADC00", Offset = "0x8ADC00", VA = "0x8ADC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550664", Offset = "0x550664")]
			add
			{
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x8ADCEC", Offset = "0x8ADCEC", VA = "0x8ADCEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550674", Offset = "0x550674")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event ControllerInteractionEventHandler TriggerAxisChanged
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x8ADDD8", Offset = "0x8ADDD8", VA = "0x8ADDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550684", Offset = "0x550684")]
			add
			{
			}
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x8ADEC4", Offset = "0x8ADEC4", VA = "0x8ADEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550694", Offset = "0x550694")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event ControllerInteractionEventHandler GripPressed
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x8ADFB0", Offset = "0x8ADFB0", VA = "0x8ADFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5506A4", Offset = "0x5506A4")]
			add
			{
			}
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x8AE09C", Offset = "0x8AE09C", VA = "0x8AE09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5506B4", Offset = "0x5506B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event ControllerInteractionEventHandler GripReleased
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x8AE188", Offset = "0x8AE188", VA = "0x8AE188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5506C4", Offset = "0x5506C4")]
			add
			{
			}
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x8AE274", Offset = "0x8AE274", VA = "0x8AE274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5506D4", Offset = "0x5506D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event ControllerInteractionEventHandler GripTouchStart
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x8AE360", Offset = "0x8AE360", VA = "0x8AE360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5506E4", Offset = "0x5506E4")]
			add
			{
			}
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x8AE44C", Offset = "0x8AE44C", VA = "0x8AE44C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5506F4", Offset = "0x5506F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event ControllerInteractionEventHandler GripTouchEnd
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x8AE538", Offset = "0x8AE538", VA = "0x8AE538")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550704", Offset = "0x550704")]
			add
			{
			}
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x8AE624", Offset = "0x8AE624", VA = "0x8AE624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550714", Offset = "0x550714")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event ControllerInteractionEventHandler GripHairlineStart
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x8AE710", Offset = "0x8AE710", VA = "0x8AE710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550724", Offset = "0x550724")]
			add
			{
			}
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x8AE7FC", Offset = "0x8AE7FC", VA = "0x8AE7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550734", Offset = "0x550734")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event ControllerInteractionEventHandler GripHairlineEnd
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0x8AE8E8", Offset = "0x8AE8E8", VA = "0x8AE8E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550744", Offset = "0x550744")]
			add
			{
			}
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0x8AE9D4", Offset = "0x8AE9D4", VA = "0x8AE9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550754", Offset = "0x550754")]
			remove
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event ControllerInteractionEventHandler GripClicked
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x8AEAC0", Offset = "0x8AEAC0", VA = "0x8AEAC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550764", Offset = "0x550764")]
			add
			{
			}
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0x8AEBAC", Offset = "0x8AEBAC", VA = "0x8AEBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550774", Offset = "0x550774")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public event ControllerInteractionEventHandler GripUnclicked
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x8AEC98", Offset = "0x8AEC98", VA = "0x8AEC98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550784", Offset = "0x550784")]
			add
			{
			}
			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0x8AED84", Offset = "0x8AED84", VA = "0x8AED84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550794", Offset = "0x550794")]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event ControllerInteractionEventHandler GripAxisChanged
		{
			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0x8AEE70", Offset = "0x8AEE70", VA = "0x8AEE70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5507A4", Offset = "0x5507A4")]
			add
			{
			}
			[Token(Token = "0x6000A10")]
			[Address(RVA = "0x8AEF60", Offset = "0x8AEF60", VA = "0x8AEF60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5507B4", Offset = "0x5507B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public event ControllerInteractionEventHandler TouchpadPressed
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x8AF050", Offset = "0x8AF050", VA = "0x8AF050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5507C4", Offset = "0x5507C4")]
			add
			{
			}
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x8AF140", Offset = "0x8AF140", VA = "0x8AF140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5507D4", Offset = "0x5507D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event ControllerInteractionEventHandler TouchpadReleased
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x8AF230", Offset = "0x8AF230", VA = "0x8AF230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5507E4", Offset = "0x5507E4")]
			add
			{
			}
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x8AF320", Offset = "0x8AF320", VA = "0x8AF320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5507F4", Offset = "0x5507F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event ControllerInteractionEventHandler TouchpadTouchStart
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x8AF410", Offset = "0x8AF410", VA = "0x8AF410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550804", Offset = "0x550804")]
			add
			{
			}
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0x8AF500", Offset = "0x8AF500", VA = "0x8AF500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550814", Offset = "0x550814")]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event ControllerInteractionEventHandler TouchpadTouchEnd
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0x8AF5F0", Offset = "0x8AF5F0", VA = "0x8AF5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550824", Offset = "0x550824")]
			add
			{
			}
			[Token(Token = "0x6000A18")]
			[Address(RVA = "0x8AF6E0", Offset = "0x8AF6E0", VA = "0x8AF6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550834", Offset = "0x550834")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event ControllerInteractionEventHandler TouchpadAxisChanged
		{
			[Token(Token = "0x6000A19")]
			[Address(RVA = "0x8AF7D0", Offset = "0x8AF7D0", VA = "0x8AF7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550844", Offset = "0x550844")]
			add
			{
			}
			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0x8AF8C0", Offset = "0x8AF8C0", VA = "0x8AF8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550854", Offset = "0x550854")]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event ControllerInteractionEventHandler ButtonOneTouchStart
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x8AF9B0", Offset = "0x8AF9B0", VA = "0x8AF9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550864", Offset = "0x550864")]
			add
			{
			}
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x8AFAA0", Offset = "0x8AFAA0", VA = "0x8AFAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550874", Offset = "0x550874")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event ControllerInteractionEventHandler ButtonOneTouchEnd
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x8AFB90", Offset = "0x8AFB90", VA = "0x8AFB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550884", Offset = "0x550884")]
			add
			{
			}
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x8AFC80", Offset = "0x8AFC80", VA = "0x8AFC80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550894", Offset = "0x550894")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event ControllerInteractionEventHandler ButtonOnePressed
		{
			[Token(Token = "0x6000A1F")]
			[Address(RVA = "0x8AFD70", Offset = "0x8AFD70", VA = "0x8AFD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5508A4", Offset = "0x5508A4")]
			add
			{
			}
			[Token(Token = "0x6000A20")]
			[Address(RVA = "0x8AFE60", Offset = "0x8AFE60", VA = "0x8AFE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5508B4", Offset = "0x5508B4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event ControllerInteractionEventHandler ButtonOneReleased
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x8AFF50", Offset = "0x8AFF50", VA = "0x8AFF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5508C4", Offset = "0x5508C4")]
			add
			{
			}
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x8B0040", Offset = "0x8B0040", VA = "0x8B0040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5508D4", Offset = "0x5508D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event ControllerInteractionEventHandler ButtonTwoTouchStart
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x8B0130", Offset = "0x8B0130", VA = "0x8B0130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5508E4", Offset = "0x5508E4")]
			add
			{
			}
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x8B0220", Offset = "0x8B0220", VA = "0x8B0220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5508F4", Offset = "0x5508F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event ControllerInteractionEventHandler ButtonTwoTouchEnd
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x8B0310", Offset = "0x8B0310", VA = "0x8B0310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550904", Offset = "0x550904")]
			add
			{
			}
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0x8B0400", Offset = "0x8B0400", VA = "0x8B0400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550914", Offset = "0x550914")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public event ControllerInteractionEventHandler ButtonTwoPressed
		{
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0x8B04F0", Offset = "0x8B04F0", VA = "0x8B04F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550924", Offset = "0x550924")]
			add
			{
			}
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x8B05E0", Offset = "0x8B05E0", VA = "0x8B05E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550934", Offset = "0x550934")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event ControllerInteractionEventHandler ButtonTwoReleased
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x8B06D0", Offset = "0x8B06D0", VA = "0x8B06D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550944", Offset = "0x550944")]
			add
			{
			}
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x8B07C0", Offset = "0x8B07C0", VA = "0x8B07C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550954", Offset = "0x550954")]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event ControllerInteractionEventHandler ButtonThreeTouchStart
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x8B08B0", Offset = "0x8B08B0", VA = "0x8B08B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550964", Offset = "0x550964")]
			add
			{
			}
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x8B09A0", Offset = "0x8B09A0", VA = "0x8B09A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550974", Offset = "0x550974")]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event ControllerInteractionEventHandler ButtonThreeTouchEnd
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x8B0A90", Offset = "0x8B0A90", VA = "0x8B0A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550984", Offset = "0x550984")]
			add
			{
			}
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0x8B0B80", Offset = "0x8B0B80", VA = "0x8B0B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550994", Offset = "0x550994")]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event ControllerInteractionEventHandler ButtonThreePressed
		{
			[Token(Token = "0x6000A2F")]
			[Address(RVA = "0x8B0C70", Offset = "0x8B0C70", VA = "0x8B0C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5509A4", Offset = "0x5509A4")]
			add
			{
			}
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x8B0D60", Offset = "0x8B0D60", VA = "0x8B0D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5509B4", Offset = "0x5509B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event ControllerInteractionEventHandler ButtonThreeReleased
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x8B0E50", Offset = "0x8B0E50", VA = "0x8B0E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5509C4", Offset = "0x5509C4")]
			add
			{
			}
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x8B0F40", Offset = "0x8B0F40", VA = "0x8B0F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5509D4", Offset = "0x5509D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public event ControllerInteractionEventHandler ButtonFourTouchStart
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x8B1030", Offset = "0x8B1030", VA = "0x8B1030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5509E4", Offset = "0x5509E4")]
			add
			{
			}
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x8B1120", Offset = "0x8B1120", VA = "0x8B1120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5509F4", Offset = "0x5509F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public event ControllerInteractionEventHandler ButtonFourTouchEnd
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x8B1210", Offset = "0x8B1210", VA = "0x8B1210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A04", Offset = "0x550A04")]
			add
			{
			}
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x8B1300", Offset = "0x8B1300", VA = "0x8B1300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A14", Offset = "0x550A14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public event ControllerInteractionEventHandler ButtonFourPressed
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x8B13F0", Offset = "0x8B13F0", VA = "0x8B13F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A24", Offset = "0x550A24")]
			add
			{
			}
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x8B14E0", Offset = "0x8B14E0", VA = "0x8B14E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A34", Offset = "0x550A34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public event ControllerInteractionEventHandler ButtonFourReleased
		{
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x8B15D0", Offset = "0x8B15D0", VA = "0x8B15D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A44", Offset = "0x550A44")]
			add
			{
			}
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x8B16C0", Offset = "0x8B16C0", VA = "0x8B16C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A54", Offset = "0x550A54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event ControllerInteractionEventHandler ButtonFivePressed
		{
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x8B17B0", Offset = "0x8B17B0", VA = "0x8B17B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A64", Offset = "0x550A64")]
			add
			{
			}
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x8B18A0", Offset = "0x8B18A0", VA = "0x8B18A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A74", Offset = "0x550A74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public event ControllerInteractionEventHandler ButtonFiveReleased
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x8B1990", Offset = "0x8B1990", VA = "0x8B1990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A84", Offset = "0x550A84")]
			add
			{
			}
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x8B1A80", Offset = "0x8B1A80", VA = "0x8B1A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A94", Offset = "0x550A94")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event ControllerInteractionEventHandler ButtonSixPressed
		{
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0x8B1B70", Offset = "0x8B1B70", VA = "0x8B1B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550AA4", Offset = "0x550AA4")]
			add
			{
			}
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x8B1C60", Offset = "0x8B1C60", VA = "0x8B1C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550AB4", Offset = "0x550AB4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event ControllerInteractionEventHandler ButtonSixReleased
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x8B1D50", Offset = "0x8B1D50", VA = "0x8B1D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550AC4", Offset = "0x550AC4")]
			add
			{
			}
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x8B1E40", Offset = "0x8B1E40", VA = "0x8B1E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550AD4", Offset = "0x550AD4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007C")]
		public event ControllerInteractionEventHandler ButtonSevenPressed
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0x8B1F30", Offset = "0x8B1F30", VA = "0x8B1F30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550AE4", Offset = "0x550AE4")]
			add
			{
			}
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0x8B2020", Offset = "0x8B2020", VA = "0x8B2020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550AF4", Offset = "0x550AF4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public event ControllerInteractionEventHandler ButtonSevenReleased
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0x8B2110", Offset = "0x8B2110", VA = "0x8B2110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B04", Offset = "0x550B04")]
			add
			{
			}
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x8B2200", Offset = "0x8B2200", VA = "0x8B2200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B14", Offset = "0x550B14")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public event ControllerInteractionEventHandler ButtonEightPressed
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x8B22F0", Offset = "0x8B22F0", VA = "0x8B22F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B24", Offset = "0x550B24")]
			add
			{
			}
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x8B23E0", Offset = "0x8B23E0", VA = "0x8B23E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B34", Offset = "0x550B34")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public event ControllerInteractionEventHandler ButtonEightReleased
		{
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x8B24D0", Offset = "0x8B24D0", VA = "0x8B24D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B44", Offset = "0x550B44")]
			add
			{
			}
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0x8B25C0", Offset = "0x8B25C0", VA = "0x8B25C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B54", Offset = "0x550B54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event ControllerInteractionEventHandler StartMenuPressed
		{
			[Token(Token = "0x6000A4B")]
			[Address(RVA = "0x8B26B0", Offset = "0x8B26B0", VA = "0x8B26B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B64", Offset = "0x550B64")]
			add
			{
			}
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0x8B27A0", Offset = "0x8B27A0", VA = "0x8B27A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B74", Offset = "0x550B74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event ControllerInteractionEventHandler StartMenuReleased
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x8B2890", Offset = "0x8B2890", VA = "0x8B2890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B84", Offset = "0x550B84")]
			add
			{
			}
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x8B2980", Offset = "0x8B2980", VA = "0x8B2980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550B94", Offset = "0x550B94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556E30", Offset = "0x556E30")]
		public event ControllerInteractionEventHandler AliasPointerOn
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x8B2A70", Offset = "0x8B2A70", VA = "0x8B2A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550BA4", Offset = "0x550BA4")]
			add
			{
			}
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x8B2B60", Offset = "0x8B2B60", VA = "0x8B2B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550BB4", Offset = "0x550BB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556E68", Offset = "0x556E68")]
		public event ControllerInteractionEventHandler AliasPointerOff
		{
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0x8B2C50", Offset = "0x8B2C50", VA = "0x8B2C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550BC4", Offset = "0x550BC4")]
			add
			{
			}
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0x8B2D40", Offset = "0x8B2D40", VA = "0x8B2D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550BD4", Offset = "0x550BD4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556EA0", Offset = "0x556EA0")]
		public event ControllerInteractionEventHandler AliasPointerSet
		{
			[Token(Token = "0x6000A53")]
			[Address(RVA = "0x8B2E30", Offset = "0x8B2E30", VA = "0x8B2E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550BE4", Offset = "0x550BE4")]
			add
			{
			}
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0x8B2F20", Offset = "0x8B2F20", VA = "0x8B2F20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550BF4", Offset = "0x550BF4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000085")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556ED8", Offset = "0x556ED8")]
		public event ControllerInteractionEventHandler AliasGrabOn
		{
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0x8B3010", Offset = "0x8B3010", VA = "0x8B3010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C04", Offset = "0x550C04")]
			add
			{
			}
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0x8B3100", Offset = "0x8B3100", VA = "0x8B3100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C14", Offset = "0x550C14")]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556F10", Offset = "0x556F10")]
		public event ControllerInteractionEventHandler AliasGrabOff
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0x8B31F0", Offset = "0x8B31F0", VA = "0x8B31F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C24", Offset = "0x550C24")]
			add
			{
			}
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0x8B32E0", Offset = "0x8B32E0", VA = "0x8B32E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C34", Offset = "0x550C34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556F48", Offset = "0x556F48")]
		public event ControllerInteractionEventHandler AliasUseOn
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x8B33D0", Offset = "0x8B33D0", VA = "0x8B33D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C44", Offset = "0x550C44")]
			add
			{
			}
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x8B34C0", Offset = "0x8B34C0", VA = "0x8B34C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C54", Offset = "0x550C54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556F80", Offset = "0x556F80")]
		public event ControllerInteractionEventHandler AliasUseOff
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x8B35B0", Offset = "0x8B35B0", VA = "0x8B35B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C64", Offset = "0x550C64")]
			add
			{
			}
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x8B36A0", Offset = "0x8B36A0", VA = "0x8B36A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C74", Offset = "0x550C74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556FB8", Offset = "0x556FB8")]
		public event ControllerInteractionEventHandler AliasMenuOn
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x8B3790", Offset = "0x8B3790", VA = "0x8B3790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C84", Offset = "0x550C84")]
			add
			{
			}
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x8B3880", Offset = "0x8B3880", VA = "0x8B3880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550C94", Offset = "0x550C94")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556FF0", Offset = "0x556FF0")]
		public event ControllerInteractionEventHandler AliasMenuOff
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0x8B3970", Offset = "0x8B3970", VA = "0x8B3970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550CA4", Offset = "0x550CA4")]
			add
			{
			}
			[Token(Token = "0x6000A60")]
			[Address(RVA = "0x8B3A60", Offset = "0x8B3A60", VA = "0x8B3A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550CB4", Offset = "0x550CB4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x557028", Offset = "0x557028")]
		public event ControllerInteractionEventHandler AliasUIClickOn
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x8B3B50", Offset = "0x8B3B50", VA = "0x8B3B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550CC4", Offset = "0x550CC4")]
			add
			{
			}
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x8B3C40", Offset = "0x8B3C40", VA = "0x8B3C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550CD4", Offset = "0x550CD4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x557060", Offset = "0x557060")]
		public event ControllerInteractionEventHandler AliasUIClickOff
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x8B3D30", Offset = "0x8B3D30", VA = "0x8B3D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550CE4", Offset = "0x550CE4")]
			add
			{
			}
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x8B3E20", Offset = "0x8B3E20", VA = "0x8B3E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550CF4", Offset = "0x550CF4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event ControllerInteractionEventHandler ControllerEnabled
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x8B3F10", Offset = "0x8B3F10", VA = "0x8B3F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D04", Offset = "0x550D04")]
			add
			{
			}
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0x8B4000", Offset = "0x8B4000", VA = "0x8B4000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D14", Offset = "0x550D14")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public event ControllerInteractionEventHandler ControllerDisabled
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x8B40F0", Offset = "0x8B40F0", VA = "0x8B40F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D24", Offset = "0x550D24")]
			add
			{
			}
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x8B41E0", Offset = "0x8B41E0", VA = "0x8B41E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D34", Offset = "0x550D34")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public event ControllerInteractionEventHandler ControllerIndexChanged
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x8B42D0", Offset = "0x8B42D0", VA = "0x8B42D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D44", Offset = "0x550D44")]
			add
			{
			}
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x8B43C0", Offset = "0x8B43C0", VA = "0x8B43C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D54", Offset = "0x550D54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public event ControllerInteractionEventHandler ControllerVisible
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0x8B44B0", Offset = "0x8B44B0", VA = "0x8B44B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D64", Offset = "0x550D64")]
			add
			{
			}
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0x8B45A0", Offset = "0x8B45A0", VA = "0x8B45A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D74", Offset = "0x550D74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public event ControllerInteractionEventHandler ControllerHidden
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0x8B4690", Offset = "0x8B4690", VA = "0x8B4690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D84", Offset = "0x550D84")]
			add
			{
			}
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0x8B4780", Offset = "0x8B4780", VA = "0x8B4780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550D94", Offset = "0x550D94")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x8B4870", Offset = "0x8B4870", VA = "0x8B4870", Slot = "4")]
		public virtual void OnTriggerPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x8B48BC", Offset = "0x8B48BC", VA = "0x8B48BC", Slot = "5")]
		public virtual void OnTriggerReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x8B4908", Offset = "0x8B4908", VA = "0x8B4908", Slot = "6")]
		public virtual void OnTriggerTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x8B4954", Offset = "0x8B4954", VA = "0x8B4954", Slot = "7")]
		public virtual void OnTriggerTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x8B49A0", Offset = "0x8B49A0", VA = "0x8B49A0", Slot = "8")]
		public virtual void OnTriggerHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x8B49EC", Offset = "0x8B49EC", VA = "0x8B49EC", Slot = "9")]
		public virtual void OnTriggerHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x8B4A38", Offset = "0x8B4A38", VA = "0x8B4A38", Slot = "10")]
		public virtual void OnTriggerClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x8B4A84", Offset = "0x8B4A84", VA = "0x8B4A84", Slot = "11")]
		public virtual void OnTriggerUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x8B4AD0", Offset = "0x8B4AD0", VA = "0x8B4AD0", Slot = "12")]
		public virtual void OnTriggerAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x8B4B1C", Offset = "0x8B4B1C", VA = "0x8B4B1C", Slot = "13")]
		public virtual void OnGripPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x8B4B68", Offset = "0x8B4B68", VA = "0x8B4B68", Slot = "14")]
		public virtual void OnGripReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x8B4BB4", Offset = "0x8B4BB4", VA = "0x8B4BB4", Slot = "15")]
		public virtual void OnGripTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x8B4C00", Offset = "0x8B4C00", VA = "0x8B4C00", Slot = "16")]
		public virtual void OnGripTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x8B4C4C", Offset = "0x8B4C4C", VA = "0x8B4C4C", Slot = "17")]
		public virtual void OnGripHairlineStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x8B4C98", Offset = "0x8B4C98", VA = "0x8B4C98", Slot = "18")]
		public virtual void OnGripHairlineEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x8B4CE4", Offset = "0x8B4CE4", VA = "0x8B4CE4", Slot = "19")]
		public virtual void OnGripClicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x8B4D30", Offset = "0x8B4D30", VA = "0x8B4D30", Slot = "20")]
		public virtual void OnGripUnclicked(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x8B4D7C", Offset = "0x8B4D7C", VA = "0x8B4D7C", Slot = "21")]
		public virtual void OnGripAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x8B4DC8", Offset = "0x8B4DC8", VA = "0x8B4DC8", Slot = "22")]
		public virtual void OnTouchpadPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x8B4E14", Offset = "0x8B4E14", VA = "0x8B4E14", Slot = "23")]
		public virtual void OnTouchpadReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x8B4E60", Offset = "0x8B4E60", VA = "0x8B4E60", Slot = "24")]
		public virtual void OnTouchpadTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x8B4EAC", Offset = "0x8B4EAC", VA = "0x8B4EAC", Slot = "25")]
		public virtual void OnTouchpadTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x8B4EF8", Offset = "0x8B4EF8", VA = "0x8B4EF8", Slot = "26")]
		public virtual void OnTouchpadAxisChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x8B4F44", Offset = "0x8B4F44", VA = "0x8B4F44", Slot = "27")]
		public virtual void OnButtonOneTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x8B4F90", Offset = "0x8B4F90", VA = "0x8B4F90", Slot = "28")]
		public virtual void OnButtonOneTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x8B4FDC", Offset = "0x8B4FDC", VA = "0x8B4FDC", Slot = "29")]
		public virtual void OnButtonOnePressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x8B5028", Offset = "0x8B5028", VA = "0x8B5028", Slot = "30")]
		public virtual void OnButtonOneReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x8B5074", Offset = "0x8B5074", VA = "0x8B5074", Slot = "31")]
		public virtual void OnButtonTwoTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x8B50C0", Offset = "0x8B50C0", VA = "0x8B50C0", Slot = "32")]
		public virtual void OnButtonTwoTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x8B510C", Offset = "0x8B510C", VA = "0x8B510C", Slot = "33")]
		public virtual void OnButtonTwoPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x8B5158", Offset = "0x8B5158", VA = "0x8B5158", Slot = "34")]
		public virtual void OnButtonTwoReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x8B51A4", Offset = "0x8B51A4", VA = "0x8B51A4", Slot = "35")]
		public virtual void OnButtonThreeTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x8B51F0", Offset = "0x8B51F0", VA = "0x8B51F0", Slot = "36")]
		public virtual void OnButtonThreeTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x8B523C", Offset = "0x8B523C", VA = "0x8B523C", Slot = "37")]
		public virtual void OnButtonThreePressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x8B5288", Offset = "0x8B5288", VA = "0x8B5288", Slot = "38")]
		public virtual void OnButtonThreeReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x8B52D4", Offset = "0x8B52D4", VA = "0x8B52D4", Slot = "39")]
		public virtual void OnButtonFourTouchStart(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x8B5320", Offset = "0x8B5320", VA = "0x8B5320", Slot = "40")]
		public virtual void OnButtonFourTouchEnd(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x8B536C", Offset = "0x8B536C", VA = "0x8B536C", Slot = "41")]
		public virtual void OnButtonFourPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x8B53B8", Offset = "0x8B53B8", VA = "0x8B53B8", Slot = "42")]
		public virtual void OnButtonFourReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x8B5404", Offset = "0x8B5404", VA = "0x8B5404", Slot = "43")]
		public virtual void OnButtonFivePressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x8B5448", Offset = "0x8B5448", VA = "0x8B5448", Slot = "44")]
		public virtual void OnButtonFiveReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x8B548C", Offset = "0x8B548C", VA = "0x8B548C", Slot = "45")]
		public virtual void OnButtonSixPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x8B54D0", Offset = "0x8B54D0", VA = "0x8B54D0", Slot = "46")]
		public virtual void OnButtonSixReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x8B5514", Offset = "0x8B5514", VA = "0x8B5514", Slot = "47")]
		public virtual void OnButtonSevenPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x8B5558", Offset = "0x8B5558", VA = "0x8B5558", Slot = "48")]
		public virtual void OnButtonSevenReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8B559C", Offset = "0x8B559C", VA = "0x8B559C", Slot = "49")]
		public virtual void OnButtonEightPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x8B55E0", Offset = "0x8B55E0", VA = "0x8B55E0", Slot = "50")]
		public virtual void OnButtonEightReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x8B5624", Offset = "0x8B5624", VA = "0x8B5624", Slot = "51")]
		public virtual void OnStartMenuPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x8B5670", Offset = "0x8B5670", VA = "0x8B5670", Slot = "52")]
		public virtual void OnStartMenuReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x8B56BC", Offset = "0x8B56BC", VA = "0x8B56BC", Slot = "53")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550DA4", Offset = "0x550DA4")]
		public virtual void OnAliasPointerOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x8B5700", Offset = "0x8B5700", VA = "0x8B5700", Slot = "54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550DDC", Offset = "0x550DDC")]
		public virtual void OnAliasPointerOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x8B5744", Offset = "0x8B5744", VA = "0x8B5744", Slot = "55")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550E14", Offset = "0x550E14")]
		public virtual void OnAliasPointerSet(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x8B5788", Offset = "0x8B5788", VA = "0x8B5788", Slot = "56")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550E4C", Offset = "0x550E4C")]
		public virtual void OnAliasGrabOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x8B57CC", Offset = "0x8B57CC", VA = "0x8B57CC", Slot = "57")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550E84", Offset = "0x550E84")]
		public virtual void OnAliasGrabOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x8B5810", Offset = "0x8B5810", VA = "0x8B5810", Slot = "58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550EBC", Offset = "0x550EBC")]
		public virtual void OnAliasUseOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x8B5854", Offset = "0x8B5854", VA = "0x8B5854", Slot = "59")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550EF4", Offset = "0x550EF4")]
		public virtual void OnAliasUseOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x8B5898", Offset = "0x8B5898", VA = "0x8B5898", Slot = "60")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550F2C", Offset = "0x550F2C")]
		public virtual void OnAliasUIClickOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x8B58DC", Offset = "0x8B58DC", VA = "0x8B58DC", Slot = "61")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550F64", Offset = "0x550F64")]
		public virtual void OnAliasUIClickOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x8B5920", Offset = "0x8B5920", VA = "0x8B5920", Slot = "62")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550F9C", Offset = "0x550F9C")]
		public virtual void OnAliasMenuOn(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x8B5964", Offset = "0x8B5964", VA = "0x8B5964", Slot = "63")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x550FD4", Offset = "0x550FD4")]
		public virtual void OnAliasMenuOff(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x8B59A8", Offset = "0x8B59A8", VA = "0x8B59A8", Slot = "64")]
		public virtual void OnControllerEnabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x8B59EC", Offset = "0x8B59EC", VA = "0x8B59EC", Slot = "65")]
		public virtual void OnControllerDisabled(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x8B5A30", Offset = "0x8B5A30", VA = "0x8B5A30", Slot = "66")]
		public virtual void OnControllerIndexChanged(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x8B5A74", Offset = "0x8B5A74", VA = "0x8B5A74", Slot = "67")]
		public virtual void OnControllerVisible(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x8B5AC0", Offset = "0x8B5AC0", VA = "0x8B5AC0", Slot = "68")]
		public virtual void OnControllerHidden(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x8B5B08", Offset = "0x8B5B08", VA = "0x8B5B08", Slot = "69")]
		public virtual ControllerInteractionEventArgs SetControllerEvent()
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x8B5B40", Offset = "0x8B5B40", VA = "0x8B5B40", Slot = "70")]
		public virtual ControllerInteractionEventArgs SetControllerEvent(ref bool buttonBool, bool value = false, float buttonPressure = 0f)
		{
			return default(ControllerInteractionEventArgs);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x8B5C64", Offset = "0x8B5C64", VA = "0x8B5C64", Slot = "71")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x55100C", Offset = "0x55100C")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x8B5CE0", Offset = "0x8B5CE0", VA = "0x8B5CE0", Slot = "72")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x551044", Offset = "0x551044")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x8B5D5C", Offset = "0x8B5D5C", VA = "0x8B5D5C", Slot = "73")]
		public virtual Vector2 GetTouchpadAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x8B5D68", Offset = "0x8B5D68", VA = "0x8B5D68", Slot = "74")]
		public virtual float GetTouchpadAxisAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x8B5D80", Offset = "0x8B5D80", VA = "0x8B5D80", Slot = "75")]
		public virtual float GetTriggerAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x8B5D88", Offset = "0x8B5D88", VA = "0x8B5D88", Slot = "76")]
		public virtual float GetGripAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x8B5D90", Offset = "0x8B5D90", VA = "0x8B5D90", Slot = "77")]
		public virtual float GetHairTriggerDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x8B5D98", Offset = "0x8B5D98", VA = "0x8B5D98", Slot = "78")]
		public virtual float GetHairGripDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x8B5DA0", Offset = "0x8B5DA0", VA = "0x8B5DA0", Slot = "79")]
		public virtual bool AnyButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x8B5DF0", Offset = "0x8B5DF0", VA = "0x8B5DF0", Slot = "80")]
		public virtual bool IsButtonPressed(ButtonAlias button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x8B5ED8", Offset = "0x8B5ED8", VA = "0x8B5ED8", Slot = "81")]
		public virtual void SubscribeToButtonAliasEvent(ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x8B5F04", Offset = "0x8B5F04", VA = "0x8B5F04", Slot = "82")]
		public virtual void UnsubscribeToButtonAliasEvent(ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x8B5F2C", Offset = "0x8B5F2C", VA = "0x8B5F2C", Slot = "83")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x8B5FAC", Offset = "0x8B5FAC", VA = "0x8B5FAC", Slot = "84")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x8B6194", Offset = "0x8B6194", VA = "0x8B6194", Slot = "85")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x8B635C", Offset = "0x8B635C", VA = "0x8B635C", Slot = "86")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x8B63DC", Offset = "0x8B63DC", VA = "0x8B63DC", Slot = "87")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x8B862C", Offset = "0x8B862C", VA = "0x8B862C", Slot = "88")]
		protected virtual void ButtonAliasEventSubscription(bool subscribe, ButtonAlias givenButton, bool startEvent, ControllerInteractionEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x8B8A3C", Offset = "0x8B8A3C", VA = "0x8B8A3C", Slot = "89")]
		protected virtual void TrackedControllerEnabled(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x8B8A9C", Offset = "0x8B8A9C", VA = "0x8B8A9C", Slot = "90")]
		protected virtual void TrackedControllerDisabled(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x8B8B10", Offset = "0x8B8B10", VA = "0x8B8B10", Slot = "91")]
		protected virtual void TrackedControllerIndexChanged(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x8B8B70", Offset = "0x8B8B70", VA = "0x8B8B70", Slot = "92")]
		protected virtual float CalculateTouchpadAxisAngle(Vector2 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x8B8C14", Offset = "0x8B8C14", VA = "0x8B8C14")]
		public void ForcePressButtonFive()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x8B8CB4", Offset = "0x8B8CB4", VA = "0x8B8CB4")]
		public void ForceReleaseButtonFive()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x8B8D48", Offset = "0x8B8D48", VA = "0x8B8D48")]
		public void ForcePressButtonSix()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x8B8DE8", Offset = "0x8B8DE8", VA = "0x8B8DE8")]
		public void ForceReleaseButtonSix()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x8B8E7C", Offset = "0x8B8E7C", VA = "0x8B8E7C")]
		public void ForcePressButtonSeven()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x8B8F1C", Offset = "0x8B8F1C", VA = "0x8B8F1C")]
		public void ForceReleaseButtonSeven()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x8B8FB0", Offset = "0x8B8FB0", VA = "0x8B8FB0")]
		public void ForcePressButtonEight()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x8B9050", Offset = "0x8B9050", VA = "0x8B9050")]
		public void ForceReleaseButtonEight()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x8B90E4", Offset = "0x8B90E4", VA = "0x8B90E4", Slot = "93")]
		protected virtual void EmitAlias(ButtonAlias type, bool touchDown, float buttonPressure, ref bool buttonBool)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x8B94E8", Offset = "0x8B94E8", VA = "0x8B94E8", Slot = "94")]
		protected virtual void DisableEvents()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x8BA1EC", Offset = "0x8BA1EC", VA = "0x8BA1EC")]
		public VRTK_ControllerEvents()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class VRTK_ControllerHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5397E8", Offset = "0x5397E8")]
		private sealed class <SimpleHapticPulseRoutine>d__12 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40017FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float pulseInterval;

			[Token(Token = "0x40017FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControllerReference controllerReference;

			[Token(Token = "0x4001800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float hapticPulseStrength;

			[Token(Token = "0x4001801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4001802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private OVRInput.Controller <hand>5__2;

			[Token(Token = "0x17000228")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002585")]
				[Address(RVA = "0x94D714", Offset = "0x94D714", VA = "0x94D714", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000229")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002587")]
				[Address(RVA = "0x94D784", Offset = "0x94D784", VA = "0x94D784", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002582")]
			[Address(RVA = "0x94D080", Offset = "0x94D080", VA = "0x94D080")]
			[DebuggerHidden]
			public <SimpleHapticPulseRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002583")]
			[Address(RVA = "0x94D52C", Offset = "0x94D52C", VA = "0x94D52C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002584")]
			[Address(RVA = "0x94D530", Offset = "0x94D530", VA = "0x94D530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002586")]
			[Address(RVA = "0x94D71C", Offset = "0x94D71C", VA = "0x94D71C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5397F8", Offset = "0x5397F8")]
		private sealed class <AudioClipHapticsRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip clip;

			[Token(Token = "0x4001806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_ControllerReference controllerReference;

			[Token(Token = "0x4001807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private SDK_ControllerHapticModifiers <hapticModifiers>5__2;

			[Token(Token = "0x4001808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <hapticScalar>5__3;

			[Token(Token = "0x4001809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float[] <audioData>5__4;

			[Token(Token = "0x400180A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <sampleOffset>5__5;

			[Token(Token = "0x400180B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <startTime>5__6;

			[Token(Token = "0x400180C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <length>5__7;

			[Token(Token = "0x400180D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <endTime>5__8;

			[Token(Token = "0x400180E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <sampleRate>5__9;

			[Token(Token = "0x1700022A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600258B")]
				[Address(RVA = "0x94D4B4", Offset = "0x94D4B4", VA = "0x94D4B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600258D")]
				[Address(RVA = "0x94D524", Offset = "0x94D524", VA = "0x94D524", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002588")]
			[Address(RVA = "0x94D144", Offset = "0x94D144", VA = "0x94D144")]
			[DebuggerHidden]
			public <AudioClipHapticsRoutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002589")]
			[Address(RVA = "0x94D1E0", Offset = "0x94D1E0", VA = "0x94D1E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0x94D1E4", Offset = "0x94D1E4", VA = "0x94D1E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600258C")]
			[Address(RVA = "0x94D4BC", Offset = "0x94D4BC", VA = "0x94D4BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static VRTK_ControllerHaptics instance;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<VRTK_ControllerReference, CoroutineHandle> hapticLoopCoroutines;

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x94C6C0", Offset = "0x94C6C0", VA = "0x94C6C0")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x94C8EC", Offset = "0x94C8EC", VA = "0x94C8EC")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x94C9E8", Offset = "0x94C9E8", VA = "0x94C9E8")]
		public static void TriggerHapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x94CABC", Offset = "0x94CABC", VA = "0x94CABC")]
		public static void CancelHapticPulse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x94CB88", Offset = "0x94CB88", VA = "0x94CB88", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x94C7A0", Offset = "0x94C7A0", VA = "0x94C7A0")]
		protected static void SetupInstance()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x94CBF4", Offset = "0x94CBF4", VA = "0x94CBF4", Slot = "5")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x94CCC4", Offset = "0x94CCC4", VA = "0x94CCC4", Slot = "6")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float pulseInterval)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x94CE8C", Offset = "0x94CE8C", VA = "0x94CE8C", Slot = "7")]
		protected virtual void InternalTriggerHapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x94CE90", Offset = "0x94CE90", VA = "0x94CE90", Slot = "8")]
		protected virtual void InternalCancelHapticPulse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x94CFB8", Offset = "0x94CFB8", VA = "0x94CFB8", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55107C", Offset = "0x55107C")]
		protected virtual IEnumerator<float> SimpleHapticPulseRoutine(VRTK_ControllerReference controllerReference, float duration, float hapticPulseStrength, float pulseInterval)
		{
			return null;
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x94D0AC", Offset = "0x94D0AC", VA = "0x94D0AC", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5510E0", Offset = "0x5510E0")]
		protected virtual IEnumerator AudioClipHapticsRoutine(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x94D170", Offset = "0x94D170", VA = "0x94D170")]
		public VRTK_ControllerHaptics()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5368F4", Offset = "0x5368F4")]
	public class VRTK_ControllerHighlighter : MonoBehaviour
	{
		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53F788", Offset = "0x53F788")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F788", Offset = "0x53F788")]
		public float transitionDuration;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53F7E8", Offset = "0x53F7E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F7E8", Offset = "0x53F7E8")]
		public Color highlightController;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53F848", Offset = "0x53F848")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F848", Offset = "0x53F848")]
		public Color highlightBody;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F8A8", Offset = "0x53F8A8")]
		public Color highlightTrigger;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F8E0", Offset = "0x53F8E0")]
		public Color highlightGrip;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F918", Offset = "0x53F918")]
		public Color highlightTouchpad;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F950", Offset = "0x53F950")]
		public Color highlightTouchpadTwo;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F988", Offset = "0x53F988")]
		public Color highlightButtonOne;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F9C0", Offset = "0x53F9C0")]
		public Color highlightButtonTwo;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53F9F8", Offset = "0x53F9F8")]
		public Color highlightSystemMenu;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FA30", Offset = "0x53FA30")]
		public Color highlightStartMenu;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FA68", Offset = "0x53FA68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FA68", Offset = "0x53FA68")]
		public VRTK_ControllerModelElementPaths modelElementPaths;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FAC8", Offset = "0x53FAC8")]
		public VRTK_ControllerElementHighlighters elementHighlighterOverrides;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FB00", Offset = "0x53FB00")]
		public GameObject controllerAlias;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FB38", Offset = "0x53FB38")]
		public GameObject modelContainer;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FB70", Offset = "0x53FB70")]
		public VRTK_BaseHighlighter controllerHighlighter;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected bool controllerHighlighted;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Dictionary<string, Transform> cachedElements;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Dictionary<string, object> highlighterOptions;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected VRTK_BaseHighlighter baseHighlighter;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool autoHighlighter;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		protected bool trackedControllerReady;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected Color lastHighlightController;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected Color lastHighlightBody;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected Color lastHighlightTrigger;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected Color lastHighlightGrip;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		protected Color lastHighlightTouchpad;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		protected Color lastHighlightTouchpadTwo;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		protected Color lastHighlightButtonOne;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		protected Color lastHighlightButtonTwo;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		protected Color lastHighlightSystemMenu;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		protected Color lastHighlightStartMenu;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected SDK_BaseController.ControllerElements[] bodyElements;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected SDK_BaseController.ControllerElements[] triggerElements;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected SDK_BaseController.ControllerElements[] gripElements;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected SDK_BaseController.ControllerElements[] touchpadElements;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected SDK_BaseController.ControllerElements[] buttonOneElements;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected SDK_BaseController.ControllerElements[] buttonTwoElements;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected SDK_BaseController.ControllerElements[] systemMenuElements;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected SDK_BaseController.ControllerElements[] startMenuElements;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected GameObject scriptControllerAlias;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected GameObject actualController;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected GameObject actualModelContainer;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected VRTK_TrackedController trackedController;

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x94D7E8", Offset = "0x94D7E8", VA = "0x94D7E8", Slot = "4")]
		public virtual void ConfigureControllerPaths()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x94DA94", Offset = "0x94DA94", VA = "0x94DA94", Slot = "5")]
		public virtual void PopulateHighlighters()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x94E0D4", Offset = "0x94E0D4", VA = "0x94E0D4", Slot = "6")]
		public virtual void HighlightController(Color color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x94E28C", Offset = "0x94E28C", VA = "0x94E28C", Slot = "7")]
		public virtual void UnhighlightController()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x94E384", Offset = "0x94E384", VA = "0x94E384", Slot = "8")]
		public virtual void HighlightElement(SDK_BaseController.ControllerElements elementType, Color color, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x94E504", Offset = "0x94E504", VA = "0x94E504", Slot = "9")]
		public virtual void UnhighlightElement(SDK_BaseController.ControllerElements elementType)
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x94E6C4", Offset = "0x94E6C4", VA = "0x94E6C4", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x94E744", Offset = "0x94E744", VA = "0x94E744", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x94EC0C", Offset = "0x94EC0C", VA = "0x94EC0C", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x94ED38", Offset = "0x94ED38", VA = "0x94ED38", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x94EDB8", Offset = "0x94EDB8", VA = "0x94EDB8", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x94EF00", Offset = "0x94EF00", VA = "0x94EF00", Slot = "15")]
		protected virtual void DoControllerModelAvailable(object sender, VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x94EF18", Offset = "0x94EF18", VA = "0x94EF18", Slot = "16")]
		protected virtual void ControllerAvailable()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x94F0B8", Offset = "0x94F0B8", VA = "0x94F0B8", Slot = "17")]
		protected virtual void ResetLastHighlights()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x94F1C4", Offset = "0x94F1C4", VA = "0x94F1C4", Slot = "18")]
		protected virtual void SetColourParameter(SDK_BaseController.ControllerElements element, Color color)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x94F38C", Offset = "0x94F38C", VA = "0x94F38C", Slot = "19")]
		protected virtual Color GetColourParameter(SDK_BaseController.ControllerElements element)
		{
			return default(Color);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x94F414", Offset = "0x94F414", VA = "0x94F414", Slot = "20")]
		protected virtual void ToggleControllerState()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x94F4EC", Offset = "0x94F4EC", VA = "0x94F4EC", Slot = "21")]
		protected virtual void ToggleHighlightState(Color currentColor, ref Color lastColorState, SDK_BaseController.ControllerElements[] elements)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x94F650", Offset = "0x94F650", VA = "0x94F650", Slot = "22")]
		protected virtual void AddHighlighterToElement(Transform element, VRTK_BaseHighlighter parentHighlighter, VRTK_BaseHighlighter overrideHighlighter)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x94F918", Offset = "0x94F918", VA = "0x94F918", Slot = "23")]
		protected virtual string GetElementPath(string currentPath, SDK_BaseController.ControllerElements elementType)
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x94FA30", Offset = "0x94FA30", VA = "0x94FA30", Slot = "24")]
		protected virtual string GetPathForControllerElement(SDK_BaseController.ControllerElements controllerElement)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x94FB7C", Offset = "0x94FB7C", VA = "0x94FB7C", Slot = "25")]
		protected virtual Transform GetElementTransform(string path)
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x94FDB8", Offset = "0x94FDB8", VA = "0x94FDB8", Slot = "26")]
		protected virtual void ToggleHighlightAlias(bool state, string transformPath, Color? highlight, float duration = 0f)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x94FF30", Offset = "0x94FF30", VA = "0x94FF30", Slot = "27")]
		protected virtual VRTK_BaseHighlighter GetValidHighlighter()
		{
			return null;
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x94FFC0", Offset = "0x94FFC0", VA = "0x94FFC0")]
		public VRTK_ControllerHighlighter()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public abstract class VRTK_InteractableListener : MonoBehaviour
	{
		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539808", Offset = "0x539808")]
		private sealed class <SetupListenersAtEndOfFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableListener <>4__this;

			[Token(Token = "0x1700022C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002591")]
				[Address(RVA = "0xCD5624", Offset = "0xCD5624", VA = "0xCD5624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002593")]
				[Address(RVA = "0xCD5694", Offset = "0xCD5694", VA = "0xCD5694", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600258E")]
			[Address(RVA = "0xCD5540", Offset = "0xCD5540", VA = "0xCD5540")]
			[DebuggerHidden]
			public <SetupListenersAtEndOfFrame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0xCD556C", Offset = "0xCD556C", VA = "0xCD556C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002590")]
			[Address(RVA = "0xCD5570", Offset = "0xCD5570", VA = "0xCD5570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002592")]
			[Address(RVA = "0xCD562C", Offset = "0xCD562C", VA = "0xCD562C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Coroutine setupInteractableListenersRoutine;

		[Token(Token = "0x6000AF9")]
		protected abstract bool SetupListeners(bool throwError);

		[Token(Token = "0x6000AFA")]
		protected abstract void TearDownListeners();

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xCD5438", Offset = "0xCD5438", VA = "0xCD5438", Slot = "6")]
		protected virtual void EnableListeners()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xCD548C", Offset = "0xCD548C", VA = "0xCD548C", Slot = "7")]
		protected virtual void DisableListeners()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xCD54CC", Offset = "0xCD54CC", VA = "0xCD54CC", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551144", Offset = "0x551144")]
		protected virtual IEnumerator SetupListenersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xCCFD2C", Offset = "0xCCFD2C", VA = "0xCCFD2C")]
		protected VRTK_InteractableListener()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public struct InteractableObjectEventArgs
	{
		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;
	}
	[Token(Token = "0x20000F9")]
	public delegate void InteractableObjectEventHandler(object sender, InteractableObjectEventArgs e);
	[Token(Token = "0x20000FA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53692C", Offset = "0x53692C")]
	public class VRTK_InteractableObject : MonoBehaviour
	{
		[Token(Token = "0x200044C")]
		public enum InteractionType
		{
			[Token(Token = "0x4001813")]
			None,
			[Token(Token = "0x4001814")]
			NearTouch,
			[Token(Token = "0x4001815")]
			NearUntouch,
			[Token(Token = "0x4001816")]
			Touch,
			[Token(Token = "0x4001817")]
			Untouch,
			[Token(Token = "0x4001818")]
			Grab,
			[Token(Token = "0x4001819")]
			Ungrab,
			[Token(Token = "0x400181A")]
			Use,
			[Token(Token = "0x400181B")]
			Unuse
		}

		[Token(Token = "0x200044D")]
		public enum AllowedController
		{
			[Token(Token = "0x400181D")]
			Both,
			[Token(Token = "0x400181E")]
			LeftOnly,
			[Token(Token = "0x400181F")]
			RightOnly
		}

		[Token(Token = "0x200044E")]
		public enum ValidDropTypes
		{
			[Token(Token = "0x4001821")]
			NoDrop,
			[Token(Token = "0x4001822")]
			DropAnywhere,
			[Token(Token = "0x4001823")]
			DropValidSnapDropZone
		}

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539818", Offset = "0x539818")]
		private sealed class <RegisterTeleportersAtEndOfFrame>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x1700022E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002597")]
				[Address(RVA = "0xCDC078", Offset = "0xCDC078", VA = "0xCDC078", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002599")]
				[Address(RVA = "0xCDC0E8", Offset = "0xCDC0E8", VA = "0xCDC0E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0xCDB174", Offset = "0xCDB174", VA = "0xCDB174")]
			[DebuggerHidden]
			public <RegisterTeleportersAtEndOfFrame>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x6002595")]
			[Address(RVA = "0xCDBE88", Offset = "0xCDBE88", VA = "0xCDBE88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002596")]
			[Address(RVA = "0xCDBE8C", Offset = "0xCDBE8C", VA = "0xCDBE8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002598")]
			[Address(RVA = "0xCDC080", Offset = "0xCDC080", VA = "0xCDC080", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539828", Offset = "0x539828")]
		private sealed class <ForceStopInteractingAtEndOfFrame>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_InteractableObject <>4__this;

			[Token(Token = "0x17000230")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600259D")]
				[Address(RVA = "0xCDBE10", Offset = "0xCDBE10", VA = "0xCDBE10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000231")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600259F")]
				[Address(RVA = "0xCDBE80", Offset = "0xCDBE80", VA = "0xCDBE80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600259A")]
			[Address(RVA = "0xCDB318", Offset = "0xCDB318", VA = "0xCDB318")]
			[DebuggerHidden]
			public <ForceStopInteractingAtEndOfFrame>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x600259B")]
			[Address(RVA = "0xCDBD58", Offset = "0xCDBD58", VA = "0xCDBD58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600259C")]
			[Address(RVA = "0xCDBD5C", Offset = "0xCDBD5C", VA = "0xCDBD5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600259E")]
			[Address(RVA = "0xCDBE18", Offset = "0xCDBE18", VA = "0xCDBE18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FBA8", Offset = "0x53FBA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FBA8", Offset = "0x53FBA8")]
		public bool disableWhenIdle;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FC08", Offset = "0x53FC08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FC08", Offset = "0x53FC08")]
		public AllowedController allowedNearTouchControllers;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FC68", Offset = "0x53FC68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FC68", Offset = "0x53FC68")]
		public AllowedController allowedTouchControllers;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FCC8", Offset = "0x53FCC8")]
		public Collider[] ignoredColliders;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FD00", Offset = "0x53FD00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FD00", Offset = "0x53FD00")]
		public bool isGrabbable;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FD60", Offset = "0x53FD60")]
		public bool holdButtonToGrab;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FD98", Offset = "0x53FD98")]
		public bool stayGrabbedOnTeleport;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FDD0", Offset = "0x53FDD0")]
		public ValidDropTypes validDrop;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FE08", Offset = "0x53FE08")]
		public VRTK_ControllerEvents.ButtonAlias grabOverrideButton;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FE40", Offset = "0x53FE40")]
		public AllowedController allowedGrabControllers;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FE78", Offset = "0x53FE78")]
		public VRTK_BaseGrabAttach grabAttachMechanicScript;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FEB0", Offset = "0x53FEB0")]
		public VRTK_BaseGrabAction secondaryGrabActionScript;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x53FEE8", Offset = "0x53FEE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FEE8", Offset = "0x53FEE8")]
		public bool isUsable;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FF48", Offset = "0x53FF48")]
		public bool holdButtonToUse;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FF80", Offset = "0x53FF80")]
		public bool useOnlyIfGrabbed;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FFB8", Offset = "0x53FFB8")]
		public bool pointerActivatesUseAction;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x53FFF0", Offset = "0x53FFF0")]
		public VRTK_ControllerEvents.ButtonAlias useOverrideButton;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540028", Offset = "0x540028")]
		public AllowedController allowedUseControllers;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540060", Offset = "0x540060")]
		public VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color touchHighlightColor;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody interactableRigidbody;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected HashSet<GameObject> currentIgnoredColliders;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected HashSet<GameObject> hoveredSnapObjects;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected HashSet<GameObject> nearTouchingObjects;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected HashSet<GameObject> touchingObjects;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<GameObject> grabbingObjects;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_InteractUse usingObject;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Transform trackPoint;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool customTrackPoint;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Transform primaryControllerAttachPoint;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Transform secondaryControllerAttachPoint;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Transform previousParent;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool previousKinematicState;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool previousIsGrabbable;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		protected bool forcedDropped;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		protected bool forceDisabled;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected bool hoveredOverSnapDropZone;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		protected bool snappedInSnapDropZone;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected VRTK_SnapDropZone storedSnapDropZone;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Vector3 previousLocalScale;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected bool startDisabled;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public int usingState;

		[Token(Token = "0x17000079")]
		public bool isKinematic
		{
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0xCD70D4", Offset = "0xCD70D4", VA = "0xCD70D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0xCC9F48", Offset = "0xCC9F48", VA = "0xCC9F48")]
			set
			{
			}
		}

		[Token(Token = "0x14000092")]
		public event InteractableObjectEventHandler InteractableObjectEnabled
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xCD569C", Offset = "0xCD569C", VA = "0xCD569C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5511A8", Offset = "0x5511A8")]
			add
			{
			}
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xCD5788", Offset = "0xCD5788", VA = "0xCD5788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5511B8", Offset = "0x5511B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000093")]
		public event InteractableObjectEventHandler InteractableObjectDisabled
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xCD5874", Offset = "0xCD5874", VA = "0xCD5874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5511C8", Offset = "0x5511C8")]
			add
			{
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xCD5964", Offset = "0xCD5964", VA = "0xCD5964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5511D8", Offset = "0x5511D8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public event InteractableObjectEventHandler InteractableObjectNearTouched
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xCD5A54", Offset = "0xCD5A54", VA = "0xCD5A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5511E8", Offset = "0x5511E8")]
			add
			{
			}
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0xCD5B44", Offset = "0xCD5B44", VA = "0xCD5B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5511F8", Offset = "0x5511F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public event InteractableObjectEventHandler InteractableObjectNearUntouched
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0xCD5C34", Offset = "0xCD5C34", VA = "0xCD5C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551208", Offset = "0x551208")]
			add
			{
			}
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0xCD5D24", Offset = "0xCD5D24", VA = "0xCD5D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551218", Offset = "0x551218")]
			remove
			{
			}
		}

		[Token(Token = "0x14000096")]
		public event InteractableObjectEventHandler InteractableObjectTouched
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xCD5E14", Offset = "0xCD5E14", VA = "0xCD5E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551228", Offset = "0x551228")]
			add
			{
			}
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0xCD5F04", Offset = "0xCD5F04", VA = "0xCD5F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551238", Offset = "0x551238")]
			remove
			{
			}
		}

		[Token(Token = "0x14000097")]
		public event InteractableObjectEventHandler InteractableObjectUntouched
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xCD5FF4", Offset = "0xCD5FF4", VA = "0xCD5FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551248", Offset = "0x551248")]
			add
			{
			}
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0xCD60E4", Offset = "0xCD60E4", VA = "0xCD60E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551258", Offset = "0x551258")]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public event InteractableObjectEventHandler InteractableObjectGrabbed
		{
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0xCD61D4", Offset = "0xCD61D4", VA = "0xCD61D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551268", Offset = "0x551268")]
			add
			{
			}
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0xCD62C4", Offset = "0xCD62C4", VA = "0xCD62C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551278", Offset = "0x551278")]
			remove
			{
			}
		}

		[Token(Token = "0x14000099")]
		public event InteractableObjectEventHandler InteractableObjectUngrabbed
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0xCD63B4", Offset = "0xCD63B4", VA = "0xCD63B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551288", Offset = "0x551288")]
			add
			{
			}
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xCD64A4", Offset = "0xCD64A4", VA = "0xCD64A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551298", Offset = "0x551298")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009A")]
		public event InteractableObjectEventHandler InteractableObjectUsed
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xCD6594", Offset = "0xCD6594", VA = "0xCD6594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5512A8", Offset = "0x5512A8")]
			add
			{
			}
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0xCD6684", Offset = "0xCD6684", VA = "0xCD6684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5512B8", Offset = "0x5512B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public event InteractableObjectEventHandler InteractableObjectUnused
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0xCD6774", Offset = "0xCD6774", VA = "0xCD6774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5512C8", Offset = "0x5512C8")]
			add
			{
			}
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xCD6864", Offset = "0xCD6864", VA = "0xCD6864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5512D8", Offset = "0x5512D8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009C")]
		public event InteractableObjectEventHandler InteractableObjectEnteredSnapDropZone
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xCD6954", Offset = "0xCD6954", VA = "0xCD6954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5512E8", Offset = "0x5512E8")]
			add
			{
			}
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xCD6A44", Offset = "0xCD6A44", VA = "0xCD6A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5512F8", Offset = "0x5512F8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public event InteractableObjectEventHandler InteractableObjectExitedSnapDropZone
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xCD6B34", Offset = "0xCD6B34", VA = "0xCD6B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551308", Offset = "0x551308")]
			add
			{
			}
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0xCD6C24", Offset = "0xCD6C24", VA = "0xCD6C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551318", Offset = "0x551318")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009E")]
		public event InteractableObjectEventHandler InteractableObjectSnappedToDropZone
		{
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0xCD6D14", Offset = "0xCD6D14", VA = "0xCD6D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551328", Offset = "0x551328")]
			add
			{
			}
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xCD6E04", Offset = "0xCD6E04", VA = "0xCD6E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551338", Offset = "0x551338")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009F")]
		public event InteractableObjectEventHandler InteractableObjectUnsnappedFromDropZone
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0xCD6EF4", Offset = "0xCD6EF4", VA = "0xCD6EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551348", Offset = "0x551348")]
			add
			{
			}
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0xCD6FE4", Offset = "0xCD6FE4", VA = "0xCD6FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551358", Offset = "0x551358")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xCD7174", Offset = "0xCD7174", VA = "0xCD7174", Slot = "4")]
		public virtual void OnInteractableObjectEnabled(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xCD7198", Offset = "0xCD7198", VA = "0xCD7198", Slot = "5")]
		public virtual void OnInteractableObjectDisabled(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xCD71BC", Offset = "0xCD71BC", VA = "0xCD71BC", Slot = "6")]
		public virtual void OnInteractableObjectNearTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xCD71E0", Offset = "0xCD71E0", VA = "0xCD71E0", Slot = "7")]
		public virtual void OnInteractableObjectNearUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xCD7204", Offset = "0xCD7204", VA = "0xCD7204", Slot = "8")]
		public virtual void OnInteractableObjectTouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xCD7228", Offset = "0xCD7228", VA = "0xCD7228", Slot = "9")]
		public virtual void OnInteractableObjectUntouched(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xCD724C", Offset = "0xCD724C", VA = "0xCD724C", Slot = "10")]
		public virtual void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xCD7270", Offset = "0xCD7270", VA = "0xCD7270", Slot = "11")]
		public virtual void OnInteractableObjectUngrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xCD7294", Offset = "0xCD7294", VA = "0xCD7294", Slot = "12")]
		public virtual void OnInteractableObjectUsed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xCD72B8", Offset = "0xCD72B8", VA = "0xCD72B8", Slot = "13")]
		public virtual void OnInteractableObjectUnused(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xCD72DC", Offset = "0xCD72DC", VA = "0xCD72DC", Slot = "14")]
		public virtual void OnInteractableObjectEnteredSnapDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xCD7300", Offset = "0xCD7300", VA = "0xCD7300", Slot = "15")]
		public virtual void OnInteractableObjectExitedSnapDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xCD7324", Offset = "0xCD7324", VA = "0xCD7324", Slot = "16")]
		public virtual void OnInteractableObjectSnappedToDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xCD7348", Offset = "0xCD7348", VA = "0xCD7348", Slot = "17")]
		public virtual void OnInteractableObjectUnsnappedFromDropZone(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xCD736C", Offset = "0xCD736C", VA = "0xCD736C")]
		public InteractableObjectEventArgs SetInteractableObjectEvent(GameObject interactingObject)
		{
			return default(InteractableObjectEventArgs);
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xCD7374", Offset = "0xCD7374", VA = "0xCD7374", Slot = "18")]
		public virtual bool IsNearTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xCD7400", Offset = "0xCD7400", VA = "0xCD7400", Slot = "19")]
		public virtual bool IsTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xCD746C", Offset = "0xCD746C", VA = "0xCD746C", Slot = "20")]
		public virtual bool IsGrabbed([Optional] GameObject grabbedBy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xCD7570", Offset = "0xCD7570", VA = "0xCD7570", Slot = "21")]
		public virtual bool IsUsing([Optional] GameObject usedBy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xCD76A0", Offset = "0xCD76A0", VA = "0xCD76A0", Slot = "22")]
		public virtual void StartNearTouching([Optional] VRTK_InteractNearTouch currentNearTouchingObject)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xCD77D0", Offset = "0xCD77D0", VA = "0xCD77D0", Slot = "23")]
		public virtual void StopNearTouching([Optional] VRTK_InteractNearTouch previousNearTouchingObject)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xCD78E8", Offset = "0xCD78E8", VA = "0xCD78E8", Slot = "24")]
		public virtual void StartTouching([Optional] VRTK_InteractTouch currentTouchingObject)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xCD7A30", Offset = "0xCD7A30", VA = "0xCD7A30", Slot = "25")]
		public virtual void StopTouching([Optional] VRTK_InteractTouch previousTouchingObject)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xCD7B60", Offset = "0xCD7B60", VA = "0xCD7B60", Slot = "26")]
		public virtual void Grabbed([Optional] VRTK_InteractGrab currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xCD7C84", Offset = "0xCD7C84", VA = "0xCD7C84", Slot = "27")]
		public virtual void Ungrabbed([Optional] VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xCD7DF8", Offset = "0xCD7DF8", VA = "0xCD7DF8", Slot = "28")]
		public virtual void StartUsing([Optional] VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xCD7F14", Offset = "0xCD7F14", VA = "0xCD7F14", Slot = "29")]
		public virtual void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xCD7FE8", Offset = "0xCD7FE8", VA = "0xCD7FE8", Slot = "30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x551368", Offset = "0x551368")]
		public virtual void ToggleHighlight(bool toggle, [Optional] Color? highlightColor)
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xCD80EC", Offset = "0xCD80EC", VA = "0xCD80EC", Slot = "31")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5513A0", Offset = "0x5513A0")]
		public virtual void Highlight(Color highlightColor)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xCD81D8", Offset = "0xCD81D8", VA = "0xCD81D8", Slot = "32")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5513D8", Offset = "0x5513D8")]
		public virtual void Unhighlight()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xCD828C", Offset = "0xCD828C", VA = "0xCD828C", Slot = "33")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x551410", Offset = "0x551410")]
		public virtual void ResetHighlighter()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xCD8340", Offset = "0xCD8340", VA = "0xCD8340", Slot = "34")]
		public virtual void PauseCollisions(float delay)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xCD8444", Offset = "0xCD8444", VA = "0xCD8444", Slot = "35")]
		public virtual void ZeroVelocity()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xCD8574", Offset = "0xCD8574", VA = "0xCD8574", Slot = "36")]
		public virtual void SaveCurrentState()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xCD867C", Offset = "0xCD867C", VA = "0xCD867C", Slot = "37")]
		public virtual void GetPreviousState(out Transform previousParent, out bool previousKinematic, out bool previousGrabbable)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xCD8698", Offset = "0xCD8698", VA = "0xCD8698", Slot = "38")]
		public virtual void OverridePreviousState(Transform previousParent, bool previousKinematic, bool previousGrabbable)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xCD86B0", Offset = "0xCD86B0", VA = "0xCD86B0", Slot = "39")]
		public virtual List<GameObject> GetNearTouchingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xCD8720", Offset = "0xCD8720", VA = "0xCD8720", Slot = "40")]
		public virtual List<GameObject> GetTouchingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xCD8790", Offset = "0xCD8790", VA = "0xCD8790", Slot = "41")]
		public virtual GameObject GetGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xCD881C", Offset = "0xCD881C", VA = "0xCD881C", Slot = "42")]
		public virtual GameObject GetSecondaryGrabbingObject()
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xCD88B8", Offset = "0xCD88B8", VA = "0xCD88B8", Slot = "43")]
		public virtual GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xCD88E8", Offset = "0xCD88E8", VA = "0xCD88E8", Slot = "44")]
		public virtual VRTK_InteractUse GetUsingScript()
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xCD88F0", Offset = "0xCD88F0", VA = "0xCD88F0", Slot = "45")]
		public virtual bool IsValidInteractableController(GameObject actualController, AllowedController controllerCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xCD8A14", Offset = "0xCD8A14", VA = "0xCD8A14", Slot = "46")]
		public virtual void ForceStopInteracting()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xCD8AC4", Offset = "0xCD8AC4", VA = "0xCD8AC4", Slot = "47")]
		public virtual void ForceStopSecondaryGrabInteraction()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xCD8B9C", Offset = "0xCD8B9C", VA = "0xCD8B9C", Slot = "48")]
		public virtual void RegisterTeleporters()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xCD8BD4", Offset = "0xCD8BD4", VA = "0xCD8BD4", Slot = "49")]
		public virtual void UnregisterTeleporters()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xCD8D6C", Offset = "0xCD8D6C", VA = "0xCD8D6C", Slot = "50")]
		public virtual void StoreLocalScale()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xCD8DB0", Offset = "0xCD8DB0", VA = "0xCD8DB0", Slot = "51")]
		public virtual void ToggleSnapDropZone(VRTK_SnapDropZone snapDropZone, bool state)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xCD8ECC", Offset = "0xCD8ECC", VA = "0xCD8ECC", Slot = "52")]
		public virtual bool IsInSnapDropZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xCD8ED4", Offset = "0xCD8ED4", VA = "0xCD8ED4", Slot = "53")]
		public virtual void SetSnapDropZoneHover(VRTK_SnapDropZone snapDropZone, bool state)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xCD9020", Offset = "0xCD9020", VA = "0xCD9020", Slot = "54")]
		public virtual VRTK_SnapDropZone GetStoredSnapDropZone()
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xCD9028", Offset = "0xCD9028", VA = "0xCD9028", Slot = "55")]
		public virtual bool IsHoveredOverSnapDropZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xCD9030", Offset = "0xCD9030", VA = "0xCD9030", Slot = "56")]
		public virtual bool IsDroppable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xCD9064", Offset = "0xCD9064", VA = "0xCD9064", Slot = "57")]
		public virtual bool IsSwappable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xCD9108", Offset = "0xCD9108", VA = "0xCD9108", Slot = "58")]
		public virtual bool PerformSecondaryAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xCD9248", Offset = "0xCD9248", VA = "0xCD9248", Slot = "59")]
		public virtual void ResetIgnoredColliders()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xCD9508", Offset = "0xCD9508", VA = "0xCD9508", Slot = "60")]
		public virtual void SubscribeToInteractionEvent(InteractionType givenType, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xCD9524", Offset = "0xCD9524", VA = "0xCD9524", Slot = "61")]
		public virtual void UnsubscribeFromInteractionEvent(InteractionType givenType, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xCD9540", Offset = "0xCD9540", VA = "0xCD9540", Slot = "62")]
		public virtual Transform GetPrimaryAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xCD9548", Offset = "0xCD9548", VA = "0xCD9548", Slot = "63")]
		public virtual Transform GetSecondaryAttachPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xCD9550", Offset = "0xCD9550", VA = "0xCD9550", Slot = "64")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xCD978C", Offset = "0xCD978C", VA = "0xCD978C", Slot = "65")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xCD97F0", Offset = "0xCD97F0", VA = "0xCD97F0", Slot = "66")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xCD9850", Offset = "0xCD9850", VA = "0xCD9850", Slot = "67")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xCD9980", Offset = "0xCD9980", VA = "0xCD9980", Slot = "68")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xCD9AD4", Offset = "0xCD9AD4", VA = "0xCD9AD4", Slot = "69")]
		protected virtual bool IsIdle()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xCD9B60", Offset = "0xCD9B60", VA = "0xCD9B60", Slot = "70")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xCD9BBC", Offset = "0xCD9BBC", VA = "0xCD9BBC", Slot = "71")]
		protected virtual void LoadPreviousState()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xCD9CDC", Offset = "0xCD9CDC", VA = "0xCD9CDC", Slot = "72")]
		protected virtual void IgnoreColliders(GameObject touchingObject)
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xCD9E8C", Offset = "0xCD9E8C", VA = "0xCD9E8C", Slot = "73")]
		protected virtual void ToggleEnableState(bool state)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xCD9EA4", Offset = "0xCD9EA4", VA = "0xCD9EA4", Slot = "74")]
		protected virtual void AttemptSetGrabMechanic()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xCD9FA8", Offset = "0xCD9FA8", VA = "0xCD9FA8", Slot = "75")]
		protected virtual void AttemptSetSecondaryGrabAction()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xCDA040", Offset = "0xCDA040", VA = "0xCDA040", Slot = "76")]
		protected virtual void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xCDA118", Offset = "0xCDA118", VA = "0xCDA118", Slot = "77")]
		protected virtual void PrimaryControllerGrab(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xCDA208", Offset = "0xCDA208", VA = "0xCDA208", Slot = "78")]
		protected virtual void SecondaryControllerGrab(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xCDA3D4", Offset = "0xCDA3D4", VA = "0xCDA3D4", Slot = "79")]
		protected virtual void PrimaryControllerUngrab(GameObject previousGrabbingObject, GameObject previousSecondaryGrabbingObject)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xCDA55C", Offset = "0xCDA55C", VA = "0xCDA55C", Slot = "80")]
		protected virtual void SecondaryControllerUngrab(GameObject previousGrabbingObject)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xCDA668", Offset = "0xCDA668", VA = "0xCDA668", Slot = "81")]
		protected virtual void UnpauseCollisions()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xCDA72C", Offset = "0xCDA72C", VA = "0xCDA72C", Slot = "82")]
		protected virtual void SetTrackPoint(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xCDA87C", Offset = "0xCDA87C", VA = "0xCDA87C", Slot = "83")]
		protected virtual Transform CreateAttachPoint(string namePrefix, string nameSuffix, Transform origin)
		{
			return null;
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xCDABB8", Offset = "0xCDABB8", VA = "0xCDABB8", Slot = "84")]
		protected virtual void AddTrackPoint(GameObject currentGrabbingObject)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xCDAD50", Offset = "0xCDAD50", VA = "0xCDAD50", Slot = "85")]
		protected virtual void RemoveTrackPoint()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xCDAEB4", Offset = "0xCDAEB4", VA = "0xCDAEB4", Slot = "86")]
		protected virtual void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xCDAF08", Offset = "0xCDAF08", VA = "0xCDAF08", Slot = "87")]
		protected virtual void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xCDB100", Offset = "0xCDB100", VA = "0xCDB100", Slot = "88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551448", Offset = "0x551448")]
		protected virtual IEnumerator RegisterTeleportersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xCDB1A0", Offset = "0xCDB1A0", VA = "0xCDB1A0", Slot = "89")]
		protected virtual void ResetUseState(GameObject checkObject)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xCDB2A4", Offset = "0xCDB2A4", VA = "0xCDB2A4", Slot = "90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5514AC", Offset = "0x5514AC")]
		protected virtual IEnumerator ForceStopInteractingAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xCDB344", Offset = "0xCDB344", VA = "0xCDB344", Slot = "91")]
		protected virtual void ForceStopAllInteractions()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xCDB3AC", Offset = "0xCDB3AC", VA = "0xCDB3AC", Slot = "92")]
		protected virtual void StopTouchingInteractions()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xCDB55C", Offset = "0xCDB55C", VA = "0xCDB55C", Slot = "93")]
		protected virtual void StopGrabbingInteractions()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xCDB6E8", Offset = "0xCDB6E8", VA = "0xCDB6E8", Slot = "94")]
		protected virtual void StopUsingInteractions()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xCDB848", Offset = "0xCDB848", VA = "0xCDB848", Slot = "95")]
		protected virtual void ResetDropSnapType()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xCDBA28", Offset = "0xCDBA28", VA = "0xCDBA28", Slot = "96")]
		protected virtual void ResetUsingObject()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xCDBAC8", Offset = "0xCDBAC8", VA = "0xCDBAC8", Slot = "97")]
		protected virtual void ManageInteractionEvent(InteractionType givenType, bool state, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xCDBB78", Offset = "0xCDBB78", VA = "0xCDBB78", Slot = "98")]
		protected virtual void ManageNearTouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xCDBB8C", Offset = "0xCDBB8C", VA = "0xCDBB8C", Slot = "99")]
		protected virtual void ManageTouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xCDBBA0", Offset = "0xCDBBA0", VA = "0xCDBBA0", Slot = "100")]
		protected virtual void ManageGrabSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xCDBBB4", Offset = "0xCDBBB4", VA = "0xCDBBB4", Slot = "101")]
		protected virtual void ManageUseSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xCDBBC8", Offset = "0xCDBBC8", VA = "0xCDBBC8", Slot = "102")]
		protected virtual void ManageNearUntouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xCDBBDC", Offset = "0xCDBBDC", VA = "0xCDBBDC", Slot = "103")]
		protected virtual void ManageUntouchSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xCDBBF0", Offset = "0xCDBBF0", VA = "0xCDBBF0", Slot = "104")]
		protected virtual void ManageUngrabSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xCDBC04", Offset = "0xCDBC04", VA = "0xCDBC04", Slot = "105")]
		protected virtual void ManageUnuseSubscriptions(bool register, InteractableObjectEventHandler methodCallback)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xCDBC18", Offset = "0xCDBC18", VA = "0xCDBC18")]
		public VRTK_InteractableObject()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public struct InteractControllerAppearanceEventArgs
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject interactingObject;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject ignoredObject;
	}
	[Token(Token = "0x20000FC")]
	public delegate void InteractControllerAppearanceEventHandler(object sender, InteractControllerAppearanceEventArgs e);
	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536964", Offset = "0x536964")]
	public class VRTK_InteractControllerAppearance : MonoBehaviour
	{
		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539838", Offset = "0x539838")]
		private sealed class <HideController>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400182A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400182B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400182C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delayTime;

			[Token(Token = "0x400182D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject interactingObject;

			[Token(Token = "0x400182E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject ignoredObject;

			[Token(Token = "0x400182F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRTK_InteractControllerAppearance <>4__this;

			[Token(Token = "0x17000232")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025A3")]
				[Address(RVA = "0xCC72C8", Offset = "0xCC72C8", VA = "0xCC72C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000233")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025A5")]
				[Address(RVA = "0xCC7338", Offset = "0xCC7338", VA = "0xCC7338", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025A0")]
			[Address(RVA = "0xCC716C", Offset = "0xCC716C", VA = "0xCC716C")]
			[DebuggerHidden]
			public <HideController>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x60025A1")]
			[Address(RVA = "0xCC71B4", Offset = "0xCC71B4", VA = "0xCC71B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025A2")]
			[Address(RVA = "0xCC71B8", Offset = "0xCC71B8", VA = "0xCC71B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025A4")]
			[Address(RVA = "0xCC72D0", Offset = "0xCC72D0", VA = "0xCC72D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540188", Offset = "0x540188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540188", Offset = "0x540188")]
		public bool hideControllerOnTouch;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5401E8", Offset = "0x5401E8")]
		public float hideDelayOnTouch;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540220", Offset = "0x540220")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540220", Offset = "0x540220")]
		public bool hideControllerOnGrab;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540280", Offset = "0x540280")]
		public float hideDelayOnGrab;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5402B8", Offset = "0x5402B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5402B8", Offset = "0x5402B8")]
		public bool hideControllerOnUse;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540318", Offset = "0x540318")]
		public float hideDelayOnUse;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool touchControllerShow;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool grabControllerShow;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Coroutine hideControllerRoutine;

		[Token(Token = "0x140000A0")]
		public event InteractControllerAppearanceEventHandler ControllerHidden
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xCC594C", Offset = "0xCC594C", VA = "0xCC594C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551510", Offset = "0x551510")]
			add
			{
			}
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xCC5A38", Offset = "0xCC5A38", VA = "0xCC5A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551520", Offset = "0x551520")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public event InteractControllerAppearanceEventHandler ControllerVisible
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xCC5B24", Offset = "0xCC5B24", VA = "0xCC5B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551530", Offset = "0x551530")]
			add
			{
			}
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0xCC5C10", Offset = "0xCC5C10", VA = "0xCC5C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551540", Offset = "0x551540")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A2")]
		public event InteractControllerAppearanceEventHandler HiddenOnTouch
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xCC5CFC", Offset = "0xCC5CFC", VA = "0xCC5CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551550", Offset = "0x551550")]
			add
			{
			}
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0xCC5DE8", Offset = "0xCC5DE8", VA = "0xCC5DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551560", Offset = "0x551560")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A3")]
		public event InteractControllerAppearanceEventHandler VisibleOnTouch
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xCC5ED4", Offset = "0xCC5ED4", VA = "0xCC5ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551570", Offset = "0x551570")]
			add
			{
			}
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0xCC5FC0", Offset = "0xCC5FC0", VA = "0xCC5FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551580", Offset = "0x551580")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public event InteractControllerAppearanceEventHandler HiddenOnGrab
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0xCC60AC", Offset = "0xCC60AC", VA = "0xCC60AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551590", Offset = "0x551590")]
			add
			{
			}
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0xCC6198", Offset = "0xCC6198", VA = "0xCC6198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5515A0", Offset = "0x5515A0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A5")]
		public event InteractControllerAppearanceEventHandler VisibleOnGrab
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xCC6284", Offset = "0xCC6284", VA = "0xCC6284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5515B0", Offset = "0x5515B0")]
			add
			{
			}
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0xCC6370", Offset = "0xCC6370", VA = "0xCC6370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5515C0", Offset = "0x5515C0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A6")]
		public event InteractControllerAppearanceEventHandler HiddenOnUse
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xCC645C", Offset = "0xCC645C", VA = "0xCC645C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5515D0", Offset = "0x5515D0")]
			add
			{
			}
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xCC6548", Offset = "0xCC6548", VA = "0xCC6548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5515E0", Offset = "0x5515E0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A7")]
		public event InteractControllerAppearanceEventHandler VisibleOnUse
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xCC6634", Offset = "0xCC6634", VA = "0xCC6634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5515F0", Offset = "0x5515F0")]
			add
			{
			}
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xCC6720", Offset = "0xCC6720", VA = "0xCC6720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551600", Offset = "0x551600")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xCC680C", Offset = "0xCC680C", VA = "0xCC680C", Slot = "4")]
		public virtual void OnControllerHidden(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xCC6838", Offset = "0xCC6838", VA = "0xCC6838", Slot = "5")]
		public virtual void OnControllerVisible(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xCC6864", Offset = "0xCC6864", VA = "0xCC6864", Slot = "6")]
		public virtual void OnHiddenOnTouch(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xCC6890", Offset = "0xCC6890", VA = "0xCC6890", Slot = "7")]
		public virtual void OnVisibleOnTouch(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xCC68BC", Offset = "0xCC68BC", VA = "0xCC68BC", Slot = "8")]
		public virtual void OnHiddenOnGrab(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xCC68E8", Offset = "0xCC68E8", VA = "0xCC68E8", Slot = "9")]
		public virtual void OnVisibleOnGrab(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xCC6914", Offset = "0xCC6914", VA = "0xCC6914", Slot = "10")]
		public virtual void OnHiddenOnUse(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xCC6940", Offset = "0xCC6940", VA = "0xCC6940", Slot = "11")]
		public virtual void OnVisibleOnUse(InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xCC696C", Offset = "0xCC696C", VA = "0xCC696C", Slot = "12")]
		public virtual void ToggleControllerOnTouch(bool showController, GameObject touchingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xCC6A20", Offset = "0xCC6A20", VA = "0xCC6A20", Slot = "13")]
		public virtual void ToggleControllerOnGrab(bool showController, GameObject grabbingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xCC6BB8", Offset = "0xCC6BB8", VA = "0xCC6BB8", Slot = "14")]
		public virtual void ToggleControllerOnUse(bool showController, GameObject usingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xCC6DA4", Offset = "0xCC6DA4", VA = "0xCC6DA4", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xCC6F88", Offset = "0xCC6F88", VA = "0xCC6F88", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xCC6F9C", Offset = "0xCC6F9C", VA = "0xCC6F9C", Slot = "17")]
		protected virtual void ToggleController(bool showController, GameObject interactingObject, GameObject ignoredObject, float delayTime)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xCC7014", Offset = "0xCC7014", VA = "0xCC7014", Slot = "18")]
		protected virtual void ShowController(GameObject interactingObject, GameObject ignoredObject)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xCC70A0", Offset = "0xCC70A0", VA = "0xCC70A0", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551610", Offset = "0x551610")]
		protected virtual IEnumerator HideController(GameObject interactingObject, GameObject ignoredObject, float delayTime)
		{
			return null;
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xCC7198", Offset = "0xCC7198", VA = "0xCC7198", Slot = "20")]
		protected virtual InteractControllerAppearanceEventArgs SetEventPayload(GameObject interactingObject, GameObject ignroedObject)
		{
			return default(InteractControllerAppearanceEventArgs);
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xCC71A4", Offset = "0xCC71A4", VA = "0xCC71A4")]
		public VRTK_InteractControllerAppearance()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53699C", Offset = "0x53699C")]
	public class VRTK_InteractGrab : MonoBehaviour
	{
		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539848", Offset = "0x539848")]
		private sealed class <SetCurrentControllerAttachPoint>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_InteractGrab <>4__this;

			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string searchPath;

			[Token(Token = "0x4001835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int attempts;

			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WaitForSeconds <delayInstruction>5__2;

			[Token(Token = "0x4001837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Transform <defaultAttachPoint>5__3;

			[Token(Token = "0x17000234")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025A9")]
				[Address(RVA = "0xCCB504", Offset = "0xCCB504", VA = "0xCCB504", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000235")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025AB")]
				[Address(RVA = "0xCCB574", Offset = "0xCCB574", VA = "0xCCB574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025A6")]
			[Address(RVA = "0xCC9740", Offset = "0xCC9740", VA = "0xCC9740")]
			[DebuggerHidden]
			public <SetCurrentControllerAttachPoint>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x60025A7")]
			[Address(RVA = "0xCCB1F4", Offset = "0xCCB1F4", VA = "0xCCB1F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025A8")]
			[Address(RVA = "0xCCB1F8", Offset = "0xCCB1F8", VA = "0xCCB1F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025AA")]
			[Address(RVA = "0xCCB50C", Offset = "0xCCB50C", VA = "0xCCB50C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5403D0", Offset = "0x5403D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5403D0", Offset = "0x5403D0")]
		public VRTK_ControllerEvents.ButtonAlias grabButton;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540430", Offset = "0x540430")]
		public float grabPrecognition;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540468", Offset = "0x540468")]
		public float throwMultiplier;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5404A0", Offset = "0x5404A0")]
		public bool createRigidBodyWhenNotTouching;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5404D8", Offset = "0x5404D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5404D8", Offset = "0x5404D8")]
		public Rigidbody controllerAttachPoint;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540538", Offset = "0x540538")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540570", Offset = "0x540570")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedGrabButton;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias savedGrabButton;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool grabPressed;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject grabbedObject;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool influencingGrabbedObject;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected int grabEnabledState;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float grabPrecognitionTimer;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject undroppableGrabbedObject;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Rigidbody originalControllerAttachPoint;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Coroutine attemptSetCurrentControllerAttachPoint;

		[Token(Token = "0x1700007A")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xCC7E50", Offset = "0xCC7E50", VA = "0xCC7E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000A8")]
		public event ControllerInteractionEventHandler GrabButtonPressed
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xCC7340", Offset = "0xCC7340", VA = "0xCC7340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551674", Offset = "0x551674")]
			add
			{
			}
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xCC742C", Offset = "0xCC742C", VA = "0xCC742C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551684", Offset = "0x551684")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A9")]
		public event ControllerInteractionEventHandler GrabButtonReleased
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xCC7518", Offset = "0xCC7518", VA = "0xCC7518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551694", Offset = "0x551694")]
			add
			{
			}
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xCC7604", Offset = "0xCC7604", VA = "0xCC7604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5516A4", Offset = "0x5516A4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AA")]
		public event ObjectInteractEventHandler ControllerStartGrabInteractableObject
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xCC76F0", Offset = "0xCC76F0", VA = "0xCC76F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5516B4", Offset = "0x5516B4")]
			add
			{
			}
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xCC77DC", Offset = "0xCC77DC", VA = "0xCC77DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5516C4", Offset = "0x5516C4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public event ObjectInteractEventHandler ControllerGrabInteractableObject
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xCC78C8", Offset = "0xCC78C8", VA = "0xCC78C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5516D4", Offset = "0x5516D4")]
			add
			{
			}
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0xCC79B4", Offset = "0xCC79B4", VA = "0xCC79B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5516E4", Offset = "0x5516E4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AC")]
		public event ObjectInteractEventHandler ControllerStartUngrabInteractableObject
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xCC7AA0", Offset = "0xCC7AA0", VA = "0xCC7AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5516F4", Offset = "0x5516F4")]
			add
			{
			}
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xCC7B8C", Offset = "0xCC7B8C", VA = "0xCC7B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551704", Offset = "0x551704")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AD")]
		public event ObjectInteractEventHandler ControllerUngrabInteractableObject
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xCC7C78", Offset = "0xCC7C78", VA = "0xCC7C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551714", Offset = "0x551714")]
			add
			{
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xCC7D64", Offset = "0xCC7D64", VA = "0xCC7D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551724", Offset = "0x551724")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xCC7F14", Offset = "0xCC7F14", VA = "0xCC7F14", Slot = "4")]
		public virtual void OnControllerStartGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xCC7F58", Offset = "0xCC7F58", VA = "0xCC7F58", Slot = "5")]
		public virtual void OnControllerGrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xCC7F9C", Offset = "0xCC7F9C", VA = "0xCC7F9C", Slot = "6")]
		public virtual void OnControllerStartUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xCC7FE0", Offset = "0xCC7FE0", VA = "0xCC7FE0", Slot = "7")]
		public virtual void OnControllerUngrabInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xCC8024", Offset = "0xCC8024", VA = "0xCC8024", Slot = "8")]
		public virtual void OnGrabButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xCC8068", Offset = "0xCC8068", VA = "0xCC8068", Slot = "9")]
		public virtual void OnGrabButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xCC80AC", Offset = "0xCC80AC", VA = "0xCC80AC", Slot = "10")]
		public virtual bool IsGrabButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xCC80B4", Offset = "0xCC80B4", VA = "0xCC80B4", Slot = "11")]
		public virtual void ForceRelease(bool applyGrabbingObjectVelocity = false)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xCC80C8", Offset = "0xCC80C8", VA = "0xCC80C8", Slot = "12")]
		public virtual void AttemptGrab()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xCC815C", Offset = "0xCC815C", VA = "0xCC815C", Slot = "13")]
		public virtual GameObject GetGrabbedObject()
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xCC8164", Offset = "0xCC8164", VA = "0xCC8164", Slot = "14")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xCC846C", Offset = "0xCC846C", VA = "0xCC846C", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xCC8588", Offset = "0xCC8588", VA = "0xCC8588", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xCC86B8", Offset = "0xCC86B8", VA = "0xCC86B8", Slot = "17")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xCC8738", Offset = "0xCC8738", VA = "0xCC8738", Slot = "18")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xCC87A0", Offset = "0xCC87A0", VA = "0xCC87A0", Slot = "19")]
		protected virtual void ControllerIndexChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xCC87B0", Offset = "0xCC87B0", VA = "0xCC87B0", Slot = "20")]
		protected virtual void ManageInteractTouchListener(bool state)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xCC8D34", Offset = "0xCC8D34", VA = "0xCC8D34", Slot = "21")]
		protected virtual void ControllerTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xCC8E34", Offset = "0xCC8E34", VA = "0xCC8E34", Slot = "22")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xCC8FC0", Offset = "0xCC8FC0", VA = "0xCC8FC0", Slot = "23")]
		protected virtual void ManageGrabListener(bool state)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xCC9218", Offset = "0xCC9218", VA = "0xCC9218", Slot = "24")]
		protected virtual void RegrabUndroppableObject()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xCC93B0", Offset = "0xCC93B0", VA = "0xCC93B0", Slot = "25")]
		protected virtual void SetUndroppableObject()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xCC94DC", Offset = "0xCC94DC", VA = "0xCC94DC", Slot = "26")]
		protected virtual void SetControllerAttachPoint()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xCC9674", Offset = "0xCC9674", VA = "0xCC9674", Slot = "27")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551734", Offset = "0x551734")]
		protected virtual IEnumerator SetCurrentControllerAttachPoint(string searchPath, int attempts, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xCC976C", Offset = "0xCC976C", VA = "0xCC976C", Slot = "28")]
		protected virtual bool IsObjectGrabbable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xCC98B8", Offset = "0xCC98B8", VA = "0xCC98B8", Slot = "29")]
		protected virtual bool IsObjectHoldOnGrab(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xCC99A0", Offset = "0xCC99A0", VA = "0xCC99A0", Slot = "30")]
		protected virtual void ChooseGrabSequence(VRTK_InteractableObject grabbedObjectScript)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xCC9A24", Offset = "0xCC9A24", VA = "0xCC9A24", Slot = "31")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xCC9B94", Offset = "0xCC9B94", VA = "0xCC9B94", Slot = "32")]
		protected virtual void InitGrabbedObject()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xCC9D90", Offset = "0xCC9D90", VA = "0xCC9D90", Slot = "33")]
		protected virtual void InitPrimaryGrab(VRTK_InteractableObject currentGrabbedObject)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xCC9FF8", Offset = "0xCC9FF8", VA = "0xCC9FF8", Slot = "34")]
		protected virtual void InitSecondaryGrab(VRTK_InteractableObject currentGrabbedObject)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xCCA0A4", Offset = "0xCCA0A4", VA = "0xCCA0A4", Slot = "35")]
		protected virtual void CheckInfluencingObjectOnRelease()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xCCA164", Offset = "0xCCA164", VA = "0xCCA164", Slot = "36")]
		protected virtual void InitUngrabbedObject(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xCCA424", Offset = "0xCCA424", VA = "0xCCA424", Slot = "37")]
		protected virtual GameObject GetGrabbableObject()
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xCCA528", Offset = "0xCCA528", VA = "0xCCA528", Slot = "38")]
		protected virtual void IncrementGrabState()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xCCA5E8", Offset = "0xCCA5E8", VA = "0xCCA5E8", Slot = "39")]
		protected virtual GameObject GetUndroppableObject()
		{
			return null;
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xCCA700", Offset = "0xCCA700", VA = "0xCCA700", Slot = "40")]
		protected virtual void AttemptHaptics(bool initialGrabAttempt)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xCCA818", Offset = "0xCCA818", VA = "0xCCA818", Slot = "41")]
		protected virtual void AttemptGrabObject()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xCCA8DC", Offset = "0xCCA8DC", VA = "0xCCA8DC", Slot = "42")]
		protected virtual void PerformGrabAttempt(GameObject objectToGrab)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xCCA958", Offset = "0xCCA958", VA = "0xCCA958", Slot = "43")]
		protected virtual bool ScriptValidGrab(VRTK_InteractableObject objectToGrabScript)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xCCAA4C", Offset = "0xCCAA4C", VA = "0xCCAA4C", Slot = "44")]
		protected virtual bool IsValidGrabAttempt(GameObject objectToGrab)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xCCAC28", Offset = "0xCCAC28", VA = "0xCCAC28", Slot = "45")]
		protected virtual bool CanRelease()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xCCAD30", Offset = "0xCCAD30", VA = "0xCCAD30", Slot = "46")]
		protected virtual void AttemptReleaseObject()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xCCADA8", Offset = "0xCCADA8", VA = "0xCCADA8", Slot = "47")]
		protected virtual void DoGrabObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xCCAE48", Offset = "0xCCAE48", VA = "0xCCAE48", Slot = "48")]
		protected virtual void DoReleaseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xCCAEE4", Offset = "0xCCAEE4", VA = "0xCCAEE4", Slot = "49")]
		protected virtual void CheckControllerAttachPointSet()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xCCAF78", Offset = "0xCCAF78", VA = "0xCCAF78", Slot = "50")]
		protected virtual void CreateNonTouchingRigidbody()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xCCB0CC", Offset = "0xCCB0CC", VA = "0xCCB0CC", Slot = "51")]
		protected virtual void CheckPrecognitionGrab()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xCCB1DC", Offset = "0xCCB1DC", VA = "0xCCB1DC")]
		public VRTK_InteractGrab()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public struct InteractHapticsEventArgs
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x2000100")]
	public delegate void InteractHapticsEventHandler(object sender, InteractHapticsEventArgs e);
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5369D4", Offset = "0x5369D4")]
	public class VRTK_InteractHaptics : MonoBehaviour
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540608", Offset = "0x540608")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540608", Offset = "0x540608")]
		public AudioClip clipOnTouch;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540668", Offset = "0x540668")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x540668", Offset = "0x540668")]
		public float strengthOnTouch;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5406BC", Offset = "0x5406BC")]
		public float durationOnTouch;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5406F4", Offset = "0x5406F4")]
		public float intervalOnTouch;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54072C", Offset = "0x54072C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54072C", Offset = "0x54072C")]
		public AudioClip clipOnGrab;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54078C", Offset = "0x54078C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54078C", Offset = "0x54078C")]
		public float strengthOnGrab;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5407E0", Offset = "0x5407E0")]
		public float durationOnGrab;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540818", Offset = "0x540818")]
		public float intervalOnGrab;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540850", Offset = "0x540850")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540850", Offset = "0x540850")]
		public AudioClip clipOnUse;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5408B0", Offset = "0x5408B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5408B0", Offset = "0x5408B0")]
		public float strengthOnUse;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540904", Offset = "0x540904")]
		public float durationOnUse;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54093C", Offset = "0x54093C")]
		public float intervalOnUse;

		[Token(Token = "0x40008B5")]
		protected const float minInterval = 0.05f;

		[Token(Token = "0x140000AE")]
		public event InteractHapticsEventHandler InteractHapticsTouched
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xCCB57C", Offset = "0xCCB57C", VA = "0xCCB57C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551798", Offset = "0x551798")]
			add
			{
			}
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xCCB668", Offset = "0xCCB668", VA = "0xCCB668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5517A8", Offset = "0x5517A8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AF")]
		public event InteractHapticsEventHandler InteractHapticsGrabbed
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xCCB754", Offset = "0xCCB754", VA = "0xCCB754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5517B8", Offset = "0x5517B8")]
			add
			{
			}
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xCCB840", Offset = "0xCCB840", VA = "0xCCB840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5517C8", Offset = "0x5517C8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B0")]
		public event InteractHapticsEventHandler InteractHapticsUsed
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xCCB92C", Offset = "0xCCB92C", VA = "0xCCB92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5517D8", Offset = "0x5517D8")]
			add
			{
			}
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0xCCBA18", Offset = "0xCCBA18", VA = "0xCCBA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5517E8", Offset = "0x5517E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xCCBB04", Offset = "0xCCBB04", VA = "0xCCBB04", Slot = "4")]
		public virtual void OnInteractHapticsTouched(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xCCBB28", Offset = "0xCCBB28", VA = "0xCCBB28", Slot = "5")]
		public virtual void OnInteractHapticsGrabbed(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xCCBB4C", Offset = "0xCCBB4C", VA = "0xCCBB4C", Slot = "6")]
		public virtual void OnInteractHapticsUsed(InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xCCBB70", Offset = "0xCCBB70", VA = "0xCCBB70", Slot = "7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5517F8", Offset = "0x5517F8")]
		public virtual void HapticsOnTouch(uint controllerIndex)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xCCBBF8", Offset = "0xCCBBF8", VA = "0xCCBBF8", Slot = "8")]
		public virtual void HapticsOnTouch(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xCCBCEC", Offset = "0xCCBCEC", VA = "0xCCBCEC", Slot = "9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x551830", Offset = "0x551830")]
		public virtual void HapticsOnGrab(uint controllerIndex)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xCCBD74", Offset = "0xCCBD74", VA = "0xCCBD74", Slot = "10")]
		public virtual void HapticsOnGrab(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xCCBE68", Offset = "0xCCBE68", VA = "0xCCBE68", Slot = "11")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x551868", Offset = "0x551868")]
		public virtual void HapticsOnUse(uint controllerIndex)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xCCBEF0", Offset = "0xCCBEF0", VA = "0xCCBEF0", Slot = "12")]
		public virtual void HapticsOnUse(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xCCBFE4", Offset = "0xCCBFE4", VA = "0xCCBFE4", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xCCC1C8", Offset = "0xCCC1C8", VA = "0xCCC1C8", Slot = "14")]
		protected virtual void TriggerHapticPulse(VRTK_ControllerReference controllerReference, float strength, float duration, float interval)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xCCC1E0", Offset = "0xCCC1E0", VA = "0xCCC1E0", Slot = "15")]
		protected virtual InteractHapticsEventArgs SetEventPayload(VRTK_ControllerReference givenControllerReference)
		{
			return default(InteractHapticsEventArgs);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xCCC1E8", Offset = "0xCCC1E8", VA = "0xCCC1E8")]
		public VRTK_InteractHaptics()
		{
		}
	}
	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536A0C", Offset = "0x536A0C")]
	public class VRTK_InteractNearTouch : MonoBehaviour
	{
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5409A4", Offset = "0x5409A4")]
		public float colliderRadius;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5409DC", Offset = "0x5409DC")]
		public GameObject customColliderContainer;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540A14", Offset = "0x540A14")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GameObject neartouchColliderContainer;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<GameObject> nearTouchedObjects;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_InteractNearTouchCollider interactNearTouchColliderScript;

		[Token(Token = "0x140000B1")]
		public event ObjectInteractEventHandler ControllerNearTouchInteractableObject
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xCCC204", Offset = "0xCCC204", VA = "0xCCC204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5518A0", Offset = "0x5518A0")]
			add
			{
			}
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xCCC2F0", Offset = "0xCCC2F0", VA = "0xCCC2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5518B0", Offset = "0x5518B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B2")]
		public event ObjectInteractEventHandler ControllerNearUntouchInteractableObject
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xCCC3DC", Offset = "0xCCC3DC", VA = "0xCCC3DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5518C0", Offset = "0x5518C0")]
			add
			{
			}
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xCCC4C8", Offset = "0xCCC4C8", VA = "0xCCC4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5518D0", Offset = "0x5518D0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xCCC5B4", Offset = "0xCCC5B4", VA = "0xCCC5B4", Slot = "4")]
		public virtual void OnControllerNearTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xCCC654", Offset = "0xCCC654", VA = "0xCCC654", Slot = "5")]
		public virtual void OnControllerNearUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xCCC704", Offset = "0xCCC704", VA = "0xCCC704", Slot = "6")]
		public virtual List<GameObject> GetNearTouchedObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xCCC70C", Offset = "0xCCC70C", VA = "0xCCC70C", Slot = "7")]
		public virtual void ForceNearTouch(GameObject obj)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xCCC810", Offset = "0xCCC810", VA = "0xCCC810", Slot = "8")]
		public virtual void ForceStopNearTouching([Optional] GameObject obj)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xCCCA1C", Offset = "0xCCCA1C", VA = "0xCCCA1C", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xCCCC98", Offset = "0xCCCC98", VA = "0xCCCC98", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xCCCE9C", Offset = "0xCCCE9C", VA = "0xCCCE9C", Slot = "11")]
		protected virtual void ControllerStartTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xCCCEAC", Offset = "0xCCCEAC", VA = "0xCCCEAC", Slot = "12")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xCCCF64", Offset = "0xCCCF64", VA = "0xCCCF64", Slot = "13")]
		protected virtual void CreateNearTouchCollider()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xCCD740", Offset = "0xCCD740", VA = "0xCCD740")]
		public VRTK_InteractNearTouch()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class VRTK_InteractNearTouchCollider : MonoBehaviour
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_InteractNearTouch interactNearTouch;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<GameObject> nearTouchedObjects;

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xCCD7BC", Offset = "0xCCD7BC", VA = "0xCCD7BC", Slot = "4")]
		public virtual void SetInteractNearTouch(VRTK_InteractNearTouch givenInteractNearTouch)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xCCD7C4", Offset = "0xCCD7C4", VA = "0xCCD7C4", Slot = "5")]
		public virtual List<GameObject> GetNearTouchedObjects()
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xCCD7CC", Offset = "0xCCD7CC", VA = "0xCCD7CC", Slot = "6")]
		public virtual void StartNearTouch(Collider collider)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xCCD984", Offset = "0xCCD984", VA = "0xCCD984", Slot = "7")]
		public virtual void EndNearTouch(Collider collider)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xCCDB3C", Offset = "0xCCDB3C", VA = "0xCCDB3C", Slot = "8")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xCCDBD0", Offset = "0xCCDBD0", VA = "0xCCDBD0", Slot = "9")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xCCDC70", Offset = "0xCCDC70", VA = "0xCCDC70", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xCCDCD0", Offset = "0xCCDCD0", VA = "0xCCDCD0", Slot = "11")]
		protected virtual bool validObject(VRTK_InteractableObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xCCDDD0", Offset = "0xCCDDD0", VA = "0xCCDDD0")]
		public VRTK_InteractNearTouchCollider()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public struct InteractObjectHighlighterEventArgs
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_InteractableObject.InteractionType interactionType;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color highlightColor;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject affectingObject;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_InteractableObject objectToMonitor;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject affectedObject;
	}
	[Token(Token = "0x2000105")]
	public delegate void InteractObjectHighlighterEventHandler(object sender, InteractObjectHighlighterEventArgs e);
	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536A44", Offset = "0x536A44")]
	public class VRTK_InteractObjectHighlighter : VRTK_InteractableListener
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540A6C", Offset = "0x540A6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540A6C", Offset = "0x540A6C")]
		public Color nearTouchHighlight;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540ACC", Offset = "0x540ACC")]
		public Color touchHighlight;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540B04", Offset = "0x540B04")]
		public Color grabHighlight;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540B3C", Offset = "0x540B3C")]
		public Color useHighlight;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540B74", Offset = "0x540B74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540B74", Offset = "0x540B74")]
		public VRTK_InteractableObject objectToMonitor;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540BD4", Offset = "0x540BD4")]
		public GameObject objectToHighlight;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540C0C", Offset = "0x540C0C")]
		public VRTK_BaseHighlighter objectHighlighter;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540C44", Offset = "0x540C44")]
		public VRTK_InteractableObject objectToAffect;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Color currentColour;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected VRTK_BaseHighlighter baseHighlighter;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool createBaseHighlighter;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected GameObject currentAffectingObject;

		[Token(Token = "0x140000B3")]
		public event InteractObjectHighlighterEventHandler InteractObjectHighlighterHighlighted
		{
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0xCCDE40", Offset = "0xCCDE40", VA = "0xCCDE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5518E0", Offset = "0x5518E0")]
			add
			{
			}
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xCCDF2C", Offset = "0xCCDF2C", VA = "0xCCDF2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5518F0", Offset = "0x5518F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B4")]
		public event InteractObjectHighlighterEventHandler InteractObjectHighlighterUnhighlighted
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xCCE018", Offset = "0xCCE018", VA = "0xCCE018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551900", Offset = "0x551900")]
			add
			{
			}
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xCCE104", Offset = "0xCCE104", VA = "0xCCE104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551910", Offset = "0x551910")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xCCE1F0", Offset = "0xCCE1F0", VA = "0xCCE1F0", Slot = "9")]
		public virtual void OnInteractObjectHighlighterHighlighted(InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xCCE23C", Offset = "0xCCE23C", VA = "0xCCE23C", Slot = "10")]
		public virtual void OnInteractObjectHighlighterUnhighlighted(InteractObjectHighlighterEventArgs e)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xCCE288", Offset = "0xCCE288", VA = "0xCCE288", Slot = "11")]
		public virtual void ResetHighlighter()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xCCE328", Offset = "0xCCE328", VA = "0xCCE328", Slot = "12")]
		public virtual void Highlight(Color highlightColor)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xCCE4BC", Offset = "0xCCE4BC", VA = "0xCCE4BC", Slot = "13")]
		public virtual void Unhighlight()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xCCE580", Offset = "0xCCE580", VA = "0xCCE580", Slot = "14")]
		public virtual Color GetCurrentHighlightColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xCCE58C", Offset = "0xCCE58C", VA = "0xCCE58C", Slot = "15")]
		public virtual GameObject GetAffectingObject()
		{
			return null;
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xCCE594", Offset = "0xCCE594", VA = "0xCCE594", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xCCE75C", Offset = "0xCCE75C", VA = "0xCCE75C", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xCCE7E0", Offset = "0xCCE7E0", VA = "0xCCE7E0", Slot = "4")]
		protected override bool SetupListeners(bool throwError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xCCEC7C", Offset = "0xCCEC7C", VA = "0xCCEC7C", Slot = "5")]
		protected override void TearDownListeners()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xCCEF70", Offset = "0xCCEF70", VA = "0xCCEF70", Slot = "18")]
		protected virtual InteractObjectHighlighterEventArgs SetEventArgs(VRTK_InteractableObject.InteractionType interactionType, GameObject affectingObject)
		{
			return default(InteractObjectHighlighterEventArgs);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xCCEF9C", Offset = "0xCCEF9C", VA = "0xCCEF9C", Slot = "19")]
		protected virtual void NearTouchHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xCCF030", Offset = "0xCCF030", VA = "0xCCF030", Slot = "20")]
		protected virtual void NearTouchUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xCCF180", Offset = "0xCCF180", VA = "0xCCF180", Slot = "21")]
		protected virtual void TouchHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xCCF214", Offset = "0xCCF214", VA = "0xCCF214", Slot = "22")]
		protected virtual void TouchUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xCCF3CC", Offset = "0xCCF3CC", VA = "0xCCF3CC", Slot = "23")]
		protected virtual void GrabHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xCCF528", Offset = "0xCCF528", VA = "0xCCF528", Slot = "24")]
		protected virtual void GrabUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xCCF730", Offset = "0xCCF730", VA = "0xCCF730", Slot = "25")]
		protected virtual void UseHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xCCF7C4", Offset = "0xCCF7C4", VA = "0xCCF7C4", Slot = "26")]
		protected virtual void UseUnHighlightObject(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xCCFA40", Offset = "0xCCFA40", VA = "0xCCFA40", Slot = "27")]
		protected virtual void InitialiseHighlighter(Color highlightColor)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xCCFC28", Offset = "0xCCFC28", VA = "0xCCFC28", Slot = "28")]
		protected virtual VRTK_BaseHighlighter GetValidHighlighter()
		{
			return null;
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xCCFCB8", Offset = "0xCCFCB8", VA = "0xCCFCB8")]
		public VRTK_InteractObjectHighlighter()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public struct ObjectInteractEventArgs
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x540C9C", Offset = "0x540C9C")]
		public uint controllerIndex;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject target;
	}
	[Token(Token = "0x2000108")]
	public delegate void ObjectInteractEventHandler(object sender, ObjectInteractEventArgs e);
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536A7C", Offset = "0x536A7C")]
	public class VRTK_InteractTouch : MonoBehaviour
	{
		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540CD4", Offset = "0x540CD4")]
		public GameObject customColliderContainer;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject touchedObject;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected List<Collider> touchedObjectColliders;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Collider> touchedObjectActiveColliders;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject controllerCollisionDetector;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool triggerRumble;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool destroyColliderOnDisable;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool triggerIsColliding;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool triggerWasColliding;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool rigidBodyForcedActive;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody touchRigidBody;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected UnityEngine.Object defaultColliderPrefab;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRTK_InteractGrab _interactGrab;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _frameTouchedCount;

		[Token(Token = "0x1700007B")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0xCD02BC", Offset = "0xCD02BC", VA = "0xCD02BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000B5")]
		public event ObjectInteractEventHandler ControllerStartTouchInteractableObject
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xCCCBAC", Offset = "0xCCCBAC", VA = "0xCCCBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551920", Offset = "0x551920")]
			add
			{
			}
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xCCCDB0", Offset = "0xCCCDB0", VA = "0xCCCDB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551930", Offset = "0x551930")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B6")]
		public event ObjectInteractEventHandler ControllerTouchInteractableObject
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xCC8B5C", Offset = "0xCC8B5C", VA = "0xCC8B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551940", Offset = "0x551940")]
			add
			{
			}
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0xCC8984", Offset = "0xCC8984", VA = "0xCC8984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551950", Offset = "0x551950")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B7")]
		public event ObjectInteractEventHandler ControllerStartUntouchInteractableObject
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0xCCFD34", Offset = "0xCCFD34", VA = "0xCCFD34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551960", Offset = "0x551960")]
			add
			{
			}
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0xCCFE20", Offset = "0xCCFE20", VA = "0xCCFE20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551970", Offset = "0x551970")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B8")]
		public event ObjectInteractEventHandler ControllerUntouchInteractableObject
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0xCC8C48", Offset = "0xCC8C48", VA = "0xCC8C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551980", Offset = "0x551980")]
			add
			{
			}
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0xCC8A70", Offset = "0xCC8A70", VA = "0xCC8A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551990", Offset = "0x551990")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B9")]
		public event ObjectInteractEventHandler ControllerRigidbodyActivated
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xCCFF0C", Offset = "0xCCFF0C", VA = "0xCCFF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5519A0", Offset = "0x5519A0")]
			add
			{
			}
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0xCCFFF8", Offset = "0xCCFFF8", VA = "0xCCFFF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5519B0", Offset = "0x5519B0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BA")]
		public event ObjectInteractEventHandler ControllerRigidbodyDeactivated
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xCD00E4", Offset = "0xCD00E4", VA = "0xCD00E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5519C0", Offset = "0x5519C0")]
			add
			{
			}
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0xCD01D0", Offset = "0xCD01D0", VA = "0xCD01D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5519D0", Offset = "0x5519D0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xCD0338", Offset = "0xCD0338", VA = "0xCD0338", Slot = "4")]
		public virtual void OnControllerStartTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xCD037C", Offset = "0xCD037C", VA = "0xCD037C", Slot = "5")]
		public virtual void OnControllerTouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xCD03C0", Offset = "0xCD03C0", VA = "0xCD03C0", Slot = "6")]
		public virtual void OnControllerStartUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xCD0404", Offset = "0xCD0404", VA = "0xCD0404", Slot = "7")]
		public virtual void OnControllerUntouchInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xCD0448", Offset = "0xCD0448", VA = "0xCD0448", Slot = "8")]
		public virtual void OnControllerRigidbodyActivated(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xCD048C", Offset = "0xCD048C", VA = "0xCD048C", Slot = "9")]
		public virtual void OnControllerRigidbodyDeactivated(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xCD04D0", Offset = "0xCD04D0", VA = "0xCD04D0", Slot = "10")]
		public virtual ObjectInteractEventArgs SetControllerInteractEvent(GameObject target)
		{
			return default(ObjectInteractEventArgs);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xCD0570", Offset = "0xCD0570", VA = "0xCD0570", Slot = "11")]
		public virtual void ForceTouch(GameObject obj)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xCD0668", Offset = "0xCD0668", VA = "0xCD0668", Slot = "12")]
		public virtual GameObject GetTouchedObject()
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xCD0670", Offset = "0xCD0670", VA = "0xCD0670", Slot = "13")]
		public virtual bool IsObjectInteractable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xCD077C", Offset = "0xCD077C", VA = "0xCD077C", Slot = "14")]
		public virtual void ToggleControllerRigidBody(bool state, bool forceToggle = false)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xCD0920", Offset = "0xCD0920", VA = "0xCD0920", Slot = "15")]
		public virtual bool IsRigidBodyActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xCD095C", Offset = "0xCD095C", VA = "0xCD095C", Slot = "16")]
		public virtual bool IsRigidBodyForcedActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xCD09A0", Offset = "0xCD09A0", VA = "0xCD09A0", Slot = "17")]
		public virtual void ForceStopTouching()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xCD0A38", Offset = "0xCD0A38", VA = "0xCD0A38", Slot = "18")]
		public virtual Collider[] ControllerColliders()
		{
			return null;
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xCD0B34", Offset = "0xCD0B34", VA = "0xCD0B34", Slot = "19")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xCD0BB4", Offset = "0xCD0BB4", VA = "0xCD0BB4", Slot = "20")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xCD0CB8", Offset = "0xCD0CB8", VA = "0xCD0CB8", Slot = "21")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xCD0CF4", Offset = "0xCD0CF4", VA = "0xCD0CF4", Slot = "22")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xCD0D74", Offset = "0xCD0D74", VA = "0xCD0D74", Slot = "23")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xCD0F74", Offset = "0xCD0F74", VA = "0xCD0F74", Slot = "24")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xCD1020", Offset = "0xCD1020", VA = "0xCD1020", Slot = "25")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xCD14F8", Offset = "0xCD14F8", VA = "0xCD14F8", Slot = "26")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xCD1558", Offset = "0xCD1558", VA = "0xCD1558", Slot = "27")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xCD15B8", Offset = "0xCD15B8", VA = "0xCD15B8", Slot = "28")]
		protected virtual GameObject GetColliderInteractableObject(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xCD1678", Offset = "0xCD1678", VA = "0xCD1678", Slot = "29")]
		protected virtual void AddActiveCollider(Collider collider)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xCD1780", Offset = "0xCD1780", VA = "0xCD1780", Slot = "30")]
		protected virtual void StoreTouchedObjectColliders(Collider collider)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xCD18D0", Offset = "0xCD18D0", VA = "0xCD18D0", Slot = "31")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xCD1A48", Offset = "0xCD1A48", VA = "0xCD1A48", Slot = "32")]
		protected virtual void CheckRumbleController(VRTK_InteractableObject touchedObjectScript)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xCD1B48", Offset = "0xCD1B48", VA = "0xCD1B48", Slot = "33")]
		protected virtual void CheckStopTouching()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xCD1CA8", Offset = "0xCD1CA8", VA = "0xCD1CA8", Slot = "34")]
		protected virtual GameObject TriggerStart(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xCD1CEC", Offset = "0xCD1CEC", VA = "0xCD1CEC", Slot = "35")]
		protected virtual bool IsSnapDropZone(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xCD1D7C", Offset = "0xCD1D7C", VA = "0xCD1D7C", Slot = "36")]
		protected virtual void ResetTriggerRumble()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xCD1D84", Offset = "0xCD1D84", VA = "0xCD1D84", Slot = "37")]
		protected virtual void StopTouching(GameObject untouched)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xCD1FB0", Offset = "0xCD1FB0", VA = "0xCD1FB0", Slot = "38")]
		protected virtual void CleanupEndTouch()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xCD2038", Offset = "0xCD2038", VA = "0xCD2038", Slot = "39")]
		protected virtual void DestroyTouchCollider()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xCD20B8", Offset = "0xCD20B8", VA = "0xCD20B8", Slot = "40")]
		protected virtual bool CustomRigidBodyIsChild()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xCD220C", Offset = "0xCD220C", VA = "0xCD220C", Slot = "41")]
		protected virtual void CreateTouchCollider()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xCD2854", Offset = "0xCD2854", VA = "0xCD2854", Slot = "42")]
		protected virtual void CreateTouchRigidBody()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xCD2990", Offset = "0xCD2990", VA = "0xCD2990", Slot = "43")]
		protected virtual void EmitControllerRigidbodyEvent(bool state)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xCD2A50", Offset = "0xCD2A50", VA = "0xCD2A50")]
		public VRTK_InteractTouch()
		{
		}
	}
	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536AB4", Offset = "0x536AB4")]
	public class VRTK_InteractUse : MonoBehaviour
	{
		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540D6C", Offset = "0x540D6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540D6C", Offset = "0x540D6C")]
		public VRTK_ControllerEvents.ButtonAlias useButton;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540DCC", Offset = "0x540DCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540DCC", Offset = "0x540DCC")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540E2C", Offset = "0x540E2C")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540E64", Offset = "0x540E64")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedUseButton;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected VRTK_ControllerEvents.ButtonAlias savedUseButton;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool usePressed;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected GameObject usingObject;

		[Token(Token = "0x1700007C")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0xCD35F0", Offset = "0xCD35F0", VA = "0xCD35F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000BB")]
		public event ControllerInteractionEventHandler UseButtonPressed
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0xCD2AE0", Offset = "0xCD2AE0", VA = "0xCD2AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5519E0", Offset = "0x5519E0")]
			add
			{
			}
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xCD2BCC", Offset = "0xCD2BCC", VA = "0xCD2BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5519F0", Offset = "0x5519F0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BC")]
		public event ControllerInteractionEventHandler UseButtonReleased
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0xCD2CB8", Offset = "0xCD2CB8", VA = "0xCD2CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A00", Offset = "0x551A00")]
			add
			{
			}
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xCD2DA4", Offset = "0xCD2DA4", VA = "0xCD2DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A10", Offset = "0x551A10")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BD")]
		public event ObjectInteractEventHandler ControllerStartUseInteractableObject
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0xCD2E90", Offset = "0xCD2E90", VA = "0xCD2E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A20", Offset = "0x551A20")]
			add
			{
			}
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0xCD2F7C", Offset = "0xCD2F7C", VA = "0xCD2F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A30", Offset = "0x551A30")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BE")]
		public event ObjectInteractEventHandler ControllerUseInteractableObject
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0xCD3068", Offset = "0xCD3068", VA = "0xCD3068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A40", Offset = "0x551A40")]
			add
			{
			}
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xCD3154", Offset = "0xCD3154", VA = "0xCD3154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A50", Offset = "0x551A50")]
			remove
			{
			}
		}

		[Token(Token = "0x140000BF")]
		public event ObjectInteractEventHandler ControllerStartUnuseInteractableObject
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xCD3240", Offset = "0xCD3240", VA = "0xCD3240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A60", Offset = "0x551A60")]
			add
			{
			}
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xCD332C", Offset = "0xCD332C", VA = "0xCD332C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A70", Offset = "0x551A70")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C0")]
		public event ObjectInteractEventHandler ControllerUnuseInteractableObject
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0xCD3418", Offset = "0xCD3418", VA = "0xCD3418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A80", Offset = "0x551A80")]
			add
			{
			}
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0xCD3504", Offset = "0xCD3504", VA = "0xCD3504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A90", Offset = "0x551A90")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xCD36B4", Offset = "0xCD36B4", VA = "0xCD36B4", Slot = "4")]
		public virtual void OnControllerStartUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xCD36F8", Offset = "0xCD36F8", VA = "0xCD36F8", Slot = "5")]
		public virtual void OnControllerUseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xCD373C", Offset = "0xCD373C", VA = "0xCD373C", Slot = "6")]
		public virtual void OnControllerStartUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xCD3780", Offset = "0xCD3780", VA = "0xCD3780", Slot = "7")]
		public virtual void OnControllerUnuseInteractableObject(ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xCD37C4", Offset = "0xCD37C4", VA = "0xCD37C4", Slot = "8")]
		public virtual void OnUseButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xCD3808", Offset = "0xCD3808", VA = "0xCD3808", Slot = "9")]
		public virtual void OnUseButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xCD384C", Offset = "0xCD384C", VA = "0xCD384C", Slot = "10")]
		public virtual bool IsUseButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xCD3854", Offset = "0xCD3854", VA = "0xCD3854", Slot = "11")]
		public virtual GameObject GetUsingObject()
		{
			return null;
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xCD385C", Offset = "0xCD385C", VA = "0xCD385C", Slot = "12")]
		public virtual void ForceStopUsing()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xCD38F0", Offset = "0xCD38F0", VA = "0xCD38F0", Slot = "13")]
		public virtual void ForceResetUsing()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xCD3988", Offset = "0xCD3988", VA = "0xCD3988", Slot = "14")]
		public virtual void AttemptUse()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xCD3998", Offset = "0xCD3998", VA = "0xCD3998", Slot = "15")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xCD3CD8", Offset = "0xCD3CD8", VA = "0xCD3CD8", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xCD3D2C", Offset = "0xCD3D2C", VA = "0xCD3D2C", Slot = "17")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xCD3D40", Offset = "0xCD3D40", VA = "0xCD3D40", Slot = "18")]
		protected virtual void ManageInteractTouchListener(bool state)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xCD3F14", Offset = "0xCD3F14", VA = "0xCD3F14", Slot = "19")]
		protected virtual void ControllerTouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xCD4024", Offset = "0xCD4024", VA = "0xCD4024", Slot = "20")]
		protected virtual void ControllerUntouchInteractableObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xCD4138", Offset = "0xCD4138", VA = "0xCD4138", Slot = "21")]
		protected virtual void ManageUseListener(bool state)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xCD4390", Offset = "0xCD4390", VA = "0xCD4390", Slot = "22")]
		protected virtual bool IsObjectUsable(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xCD4510", Offset = "0xCD4510", VA = "0xCD4510", Slot = "23")]
		protected virtual bool IsObjectHoldOnUse(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xCD45F8", Offset = "0xCD45F8", VA = "0xCD45F8", Slot = "24")]
		protected virtual int GetObjectUsingState(GameObject obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xCD46D8", Offset = "0xCD46D8", VA = "0xCD46D8", Slot = "25")]
		protected virtual void SetObjectUsingState(GameObject obj, int value)
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xCD47BC", Offset = "0xCD47BC", VA = "0xCD47BC", Slot = "26")]
		protected virtual void AttemptHaptics()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xCD48CC", Offset = "0xCD48CC", VA = "0xCD48CC", Slot = "27")]
		protected virtual void ToggleControllerVisibility(bool visible)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xCD4A04", Offset = "0xCD4A04", VA = "0xCD4A04", Slot = "28")]
		protected virtual void UseInteractedObject(GameObject touchedObject)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xCD4CFC", Offset = "0xCD4CFC", VA = "0xCD4CFC", Slot = "29")]
		protected virtual void UnuseInteractedObject(bool completeStop)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xCD4F28", Offset = "0xCD4F28", VA = "0xCD4F28", Slot = "30")]
		protected virtual GameObject GetFromGrab()
		{
			return null;
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xCD4FCC", Offset = "0xCD4FCC", VA = "0xCD4FCC", Slot = "31")]
		protected virtual void StopUsing()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xCD5014", Offset = "0xCD5014", VA = "0xCD5014", Slot = "32")]
		protected virtual void AttemptUseObject()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xCD52B0", Offset = "0xCD52B0", VA = "0xCD52B0", Slot = "33")]
		protected virtual void DoStartUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xCD5350", Offset = "0xCD5350", VA = "0xCD5350", Slot = "34")]
		protected virtual void DoStopUseObject(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xCD5428", Offset = "0xCD5428", VA = "0xCD5428")]
		public VRTK_InteractUse()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class VRTK_ObjectAppearance : MonoBehaviour
	{
		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539858", Offset = "0x539858")]
		private sealed class <TransitionRendererOpacity>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400183A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initialAlpha;

			[Token(Token = "0x400183B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float targetAlpha;

			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionDuration;

			[Token(Token = "0x400183D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_ObjectAppearance <>4__this;

			[Token(Token = "0x400183E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject model;

			[Token(Token = "0x400183F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000236")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025AF")]
				[Address(RVA = "0x77C438", Offset = "0x77C438", VA = "0x77C438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000237")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025B1")]
				[Address(RVA = "0x77C4A8", Offset = "0x77C4A8", VA = "0x77C4A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025AC")]
			[Address(RVA = "0x77C168", Offset = "0x77C168", VA = "0x77C168")]
			[DebuggerHidden]
			public <TransitionRendererOpacity>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60025AD")]
			[Address(RVA = "0x77C2E4", Offset = "0x77C2E4", VA = "0x77C2E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025AE")]
			[Address(RVA = "0x77C2E8", Offset = "0x77C2E8", VA = "0x77C2E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x77C440", Offset = "0x77C440", VA = "0x77C440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static VRTK_ObjectAppearance instance;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<GameObject, Coroutine> setOpacityCoroutines;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x77A890", Offset = "0x77A890", VA = "0x77A890")]
		public static void SetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x77AAC4", Offset = "0x77AAC4", VA = "0x77AAC4")]
		public static void SetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x77AB98", Offset = "0x77AB98", VA = "0x77AB98")]
		public static void SetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x77AC6C", Offset = "0x77AC6C", VA = "0x77AC6C")]
		public static void ToggleRenderer(bool state, GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x77AC88", Offset = "0x77AC88", VA = "0x77AC88")]
		public static void HighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x77AD8C", Offset = "0x77AD8C", VA = "0x77AD8C")]
		public static void UnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x77AE58", Offset = "0x77AE58", VA = "0x77AE58", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x77A978", Offset = "0x77A978", VA = "0x77A978")]
		protected static void SetupInstance()
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x77AFA8", Offset = "0x77AFA8", VA = "0x77AFA8", Slot = "5")]
		protected virtual void InternalSetOpacity(GameObject model, float alpha, float transitionDuration = 0f)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x77B140", Offset = "0x77B140", VA = "0x77B140", Slot = "6")]
		protected virtual void InternalSetRendererVisible(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x77B34C", Offset = "0x77B34C", VA = "0x77B34C", Slot = "7")]
		protected virtual void InternalSetRendererHidden(GameObject model, [Optional] GameObject ignoredModel)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x77B558", Offset = "0x77B558", VA = "0x77B558", Slot = "8")]
		protected virtual void InternalHighlightObject(GameObject model, Color? highlightColor, float fadeDuration = 0f)
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x77B6E0", Offset = "0x77B6E0", VA = "0x77B6E0", Slot = "9")]
		protected virtual void InternalUnhighlightObject(GameObject model)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x77B7F4", Offset = "0x77B7F4", VA = "0x77B7F4", Slot = "10")]
		protected virtual void EmitControllerEvents(GameObject model, bool state)
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x77BA44", Offset = "0x77BA44", VA = "0x77BA44", Slot = "11")]
		protected virtual void ChangeRendererOpacity(GameObject model, float alpha)
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x77BFA8", Offset = "0x77BFA8", VA = "0x77BFA8", Slot = "12")]
		protected virtual float GetInitialAlpha(GameObject model)
		{
			return default(float);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x77C084", Offset = "0x77C084", VA = "0x77C084", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551AA0", Offset = "0x551AA0")]
		protected virtual IEnumerator TransitionRendererOpacity(GameObject model, float initialAlpha, float targetAlpha, float transitionDuration)
		{
			return null;
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x77C194", Offset = "0x77C194", VA = "0x77C194", Slot = "14")]
		protected virtual void CancelSetOpacityCoroutine(GameObject model)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x77C274", Offset = "0x77C274", VA = "0x77C274")]
		public VRTK_ObjectAppearance()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public delegate void ObjectAutoGrabEventHandler(object sender);
	[Token(Token = "0x200010D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536AEC", Offset = "0x536AEC")]
	public class VRTK_ObjectAutoGrab : MonoBehaviour
	{
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539868", Offset = "0x539868")]
		private sealed class <AutoGrab>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ObjectAutoGrab <>4__this;

			[Token(Token = "0x17000238")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025B5")]
				[Address(RVA = "0x77D070", Offset = "0x77D070", VA = "0x77D070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000239")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025B7")]
				[Address(RVA = "0x77D0E0", Offset = "0x77D0E0", VA = "0x77D0E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025B2")]
			[Address(RVA = "0x77C768", Offset = "0x77C768", VA = "0x77C768")]
			[DebuggerHidden]
			public <AutoGrab>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60025B3")]
			[Address(RVA = "0x77C79C", Offset = "0x77C79C", VA = "0x77C79C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025B4")]
			[Address(RVA = "0x77C7A0", Offset = "0x77C7A0", VA = "0x77C7A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025B6")]
			[Address(RVA = "0x77D078", Offset = "0x77D078", VA = "0x77D078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540EFC", Offset = "0x540EFC")]
		public VRTK_InteractableObject objectToGrab;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540F34", Offset = "0x540F34")]
		public bool objectIsPrefab;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540F6C", Offset = "0x540F6C")]
		public bool cloneGrabbedObject;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540FA4", Offset = "0x540FA4")]
		public bool alwaysCloneOnEnable;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x540FDC", Offset = "0x540FDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x540FDC", Offset = "0x540FDC")]
		public VRTK_InteractTouch interactTouch;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54103C", Offset = "0x54103C")]
		public VRTK_InteractGrab interactGrab;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_InteractableObject previousClonedObject;

		[Token(Token = "0x140000C1")]
		public event ObjectAutoGrabEventHandler ObjectAutoGrabCompleted
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x77C4B0", Offset = "0x77C4B0", VA = "0x77C4B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551B04", Offset = "0x551B04")]
			add
			{
			}
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x77C59C", Offset = "0x77C59C", VA = "0x77C59C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551B14", Offset = "0x551B14")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x77C688", Offset = "0x77C688", VA = "0x77C688", Slot = "4")]
		public virtual void OnObjectAutoGrabCompleted()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x77C6A4", Offset = "0x77C6A4", VA = "0x77C6A4", Slot = "5")]
		public virtual void ClearPreviousClone()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x77C6AC", Offset = "0x77C6AC", VA = "0x77C6AC", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x77C6F4", Offset = "0x77C6F4", VA = "0x77C6F4", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551B24", Offset = "0x551B24")]
		protected virtual IEnumerator AutoGrab()
		{
			return null;
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x77C794", Offset = "0x77C794", VA = "0x77C794")]
		public VRTK_ObjectAutoGrab()
		{
		}
	}
	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536B24", Offset = "0x536B24")]
	public class VRTK_ObjectTouchAutoInteract : MonoBehaviour
	{
		[Token(Token = "0x2000455")]
		public enum AutoInteractions
		{
			[Token(Token = "0x4001844")]
			Never,
			[Token(Token = "0x4001845")]
			NoButtonHeld,
			[Token(Token = "0x4001846")]
			ButtonHeld
		}

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541084", Offset = "0x541084")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541084", Offset = "0x541084")]
		public AutoInteractions grabOnTouchWhen;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5410E4", Offset = "0x5410E4")]
		public float regrabDelay;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54111C", Offset = "0x54111C")]
		public bool continuousGrabCheck;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541154", Offset = "0x541154")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541154", Offset = "0x541154")]
		public AutoInteractions useOnTouchWhen;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5411B4", Offset = "0x5411B4")]
		public float reuseDelay;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5411EC", Offset = "0x5411EC")]
		public bool continuousUseCheck;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541224", Offset = "0x541224")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541224", Offset = "0x541224")]
		public VRTK_InteractableObject interactableObject;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float regrabTimer;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float reuseTimer;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected List<GameObject> touchers;

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x77F734", Offset = "0x77F734", VA = "0x77F734", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x77F944", Offset = "0x77F944", VA = "0x77F944", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x77FAD8", Offset = "0x77FAD8", VA = "0x77FAD8", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x77FC28", Offset = "0x77FC28", VA = "0x77FC28", Slot = "7")]
		protected virtual void InteractableObjectTouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x77FC80", Offset = "0x77FC80", VA = "0x77FC80", Slot = "8")]
		protected virtual void InteractableObjectUntouched(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x77FC94", Offset = "0x77FC94", VA = "0x77FC94", Slot = "9")]
		protected virtual void InteractableObjectUngrabbed(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x77FCCC", Offset = "0x77FCCC", VA = "0x77FCCC", Slot = "10")]
		protected virtual void InteractableObjectUnused(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x77FD04", Offset = "0x77FD04", VA = "0x77FD04", Slot = "11")]
		protected virtual void ManageTouchers(GameObject interactingObject, bool add)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x77FE14", Offset = "0x77FE14", VA = "0x77FE14", Slot = "12")]
		protected virtual void CheckGrab(GameObject interactingObject)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x77FF40", Offset = "0x77FF40", VA = "0x77FF40", Slot = "13")]
		protected virtual void CheckUse(GameObject interactingObject)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x7800D8", Offset = "0x7800D8", VA = "0x7800D8")]
		public VRTK_ObjectTouchAutoInteract()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public struct CollisionTrackerEventArgs
	{
		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isTrigger;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Collider collider;
	}
	[Token(Token = "0x2000110")]
	public delegate void CollisionTrackerEventHandler(object sender, CollisionTrackerEventArgs e);
	[Token(Token = "0x2000111")]
	public class VRTK_CollisionTracker : MonoBehaviour
	{
		[Token(Token = "0x140000C2")]
		public event CollisionTrackerEventHandler CollisionEnter
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x8A0AF8", Offset = "0x8A0AF8", VA = "0x8A0AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551B88", Offset = "0x551B88")]
			add
			{
			}
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0x8A0EA8", Offset = "0x8A0EA8", VA = "0x8A0EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551B98", Offset = "0x551B98")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C3")]
		public event CollisionTrackerEventHandler CollisionStay
		{
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x8AADCC", Offset = "0x8AADCC", VA = "0x8AADCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551BA8", Offset = "0x551BA8")]
			add
			{
			}
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x8AAEB8", Offset = "0x8AAEB8", VA = "0x8AAEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551BB8", Offset = "0x551BB8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C4")]
		public event CollisionTrackerEventHandler CollisionExit
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x8A0BE4", Offset = "0x8A0BE4", VA = "0x8A0BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551BC8", Offset = "0x551BC8")]
			add
			{
			}
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x8A0F94", Offset = "0x8A0F94", VA = "0x8A0F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551BD8", Offset = "0x551BD8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C5")]
		public event CollisionTrackerEventHandler TriggerEnter
		{
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x8A0CD0", Offset = "0x8A0CD0", VA = "0x8A0CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551BE8", Offset = "0x551BE8")]
			add
			{
			}
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x8A1080", Offset = "0x8A1080", VA = "0x8A1080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551BF8", Offset = "0x551BF8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C6")]
		public event CollisionTrackerEventHandler TriggerStay
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x8AAFA4", Offset = "0x8AAFA4", VA = "0x8AAFA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551C08", Offset = "0x551C08")]
			add
			{
			}
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x8AB090", Offset = "0x8AB090", VA = "0x8AB090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551C18", Offset = "0x551C18")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C7")]
		public event CollisionTrackerEventHandler TriggerExit
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x8A0DBC", Offset = "0x8A0DBC", VA = "0x8A0DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551C28", Offset = "0x551C28")]
			add
			{
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x8A116C", Offset = "0x8A116C", VA = "0x8A116C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551C38", Offset = "0x551C38")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x8AB17C", Offset = "0x8AB17C", VA = "0x8AB17C")]
		protected void OnCollisionEnterEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x8AB1C0", Offset = "0x8AB1C0", VA = "0x8AB1C0")]
		protected void OnCollisionStayEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x8AB204", Offset = "0x8AB204", VA = "0x8AB204")]
		protected void OnCollisionExitEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x8AB248", Offset = "0x8AB248", VA = "0x8AB248")]
		protected void OnTriggerEnterEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x8AB28C", Offset = "0x8AB28C", VA = "0x8AB28C")]
		protected void OnTriggerStayEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x8AB2D0", Offset = "0x8AB2D0", VA = "0x8AB2D0")]
		protected void OnTriggerExitEvent(CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x8AB314", Offset = "0x8AB314", VA = "0x8AB314", Slot = "4")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x8AB3AC", Offset = "0x8AB3AC", VA = "0x8AB3AC", Slot = "5")]
		protected virtual void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x8AB444", Offset = "0x8AB444", VA = "0x8AB444", Slot = "6")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x8AB4DC", Offset = "0x8AB4DC", VA = "0x8AB4DC", Slot = "7")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x8AB558", Offset = "0x8AB558", VA = "0x8AB558", Slot = "8")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x8AB5D4", Offset = "0x8AB5D4", VA = "0x8AB5D4", Slot = "9")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x8AB650", Offset = "0x8AB650", VA = "0x8AB650", Slot = "10")]
		protected virtual CollisionTrackerEventArgs SetCollisionTrackerEvent(bool isTrigger, Collision givenCollision, Collider givenCollider)
		{
			return default(CollisionTrackerEventArgs);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x8AB66C", Offset = "0x8AB66C", VA = "0x8AB66C")]
		public VRTK_CollisionTracker()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class VRTK_ControllerReference : IEquatable<VRTK_ControllerReference>
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<uint, VRTK_ControllerReference> controllerReferences;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected uint storedControllerIndex;

		[Token(Token = "0x1700007D")]
		public uint index
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x950B64", Offset = "0x950B64", VA = "0x950B64")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700007E")]
		public GameObject scriptAlias
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0x950D7C", Offset = "0x950D7C", VA = "0x950D7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		public GameObject actual
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x950DEC", Offset = "0x950DEC", VA = "0x950DEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		public GameObject model
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0x950E5C", Offset = "0x950E5C", VA = "0x950E5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		public SDK_BaseController.ControllerHand hand
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0x94D698", Offset = "0x94D698", VA = "0x94D698")]
			get
			{
				return default(SDK_BaseController.ControllerHand);
			}
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x9503B0", Offset = "0x9503B0", VA = "0x9503B0")]
		public static VRTK_ControllerReference GetControllerReference(uint controllerIndex)
		{
			return null;
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x9505B4", Offset = "0x9505B4", VA = "0x9505B4")]
		public static VRTK_ControllerReference GetControllerReference(GameObject controllerObject)
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x950908", Offset = "0x950908", VA = "0x950908")]
		public static VRTK_ControllerReference GetControllerReference(SDK_BaseController.ControllerHand controllerHand)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x950ACC", Offset = "0x950ACC", VA = "0x950ACC")]
		public static bool IsValid(VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x950AF0", Offset = "0x950AF0", VA = "0x950AF0")]
		public static uint GetRealIndex(VRTK_ControllerReference controllerReference)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x9504C8", Offset = "0x9504C8", VA = "0x9504C8")]
		public VRTK_ControllerReference(uint controllerIndex)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x950A50", Offset = "0x950A50", VA = "0x950A50")]
		public VRTK_ControllerReference(GameObject controllerObject)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x950CB0", Offset = "0x950CB0", VA = "0x950CB0")]
		public VRTK_ControllerReference(SDK_BaseController.ControllerHand controllerHand)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x950AE0", Offset = "0x950AE0", VA = "0x950AE0")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x950EDC", Offset = "0x950EDC", VA = "0x950EDC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x95137C", Offset = "0x95137C", VA = "0x95137C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x951384", Offset = "0x951384", VA = "0x951384", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x951438", Offset = "0x951438", VA = "0x951438", Slot = "4")]
		public bool Equals(VRTK_ControllerReference other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x95147C", Offset = "0x95147C", VA = "0x95147C", Slot = "5")]
		protected virtual GameObject GetValidObjectFromIndex()
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x951570", Offset = "0x951570", VA = "0x951570", Slot = "6")]
		protected virtual void AddToCache()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x950754", Offset = "0x950754", VA = "0x950754")]
		private static GameObject GetValidObjectFromHand(SDK_BaseController.ControllerHand controllerHand)
		{
			return null;
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x950B6C", Offset = "0x950B6C", VA = "0x950B6C")]
		private static SDK_BaseController.ControllerHand GetControllerHand(GameObject controllerObject)
		{
			return default(SDK_BaseController.ControllerHand);
		}
	}
	[Token(Token = "0x2000113")]
	public static class Bezier
	{
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x7A4040", Offset = "0x7A4040", VA = "0x7A4040")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x7A41CC", Offset = "0x7A41CC", VA = "0x7A41CC")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x7A4328", Offset = "0x7A4328", VA = "0x7A4328")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x7A4520", Offset = "0x7A4520", VA = "0x7A4520")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000114")]
	public class VRTK_CurveGenerator : MonoBehaviour
	{
		[Token(Token = "0x2000456")]
		public enum BezierControlPointMode
		{
			[Token(Token = "0x4001848")]
			Free,
			[Token(Token = "0x4001849")]
			Aligned,
			[Token(Token = "0x400184A")]
			Mirrored
		}

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Vector3[] points;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected GameObject[] items;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected BezierControlPointMode[] modes;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool loop;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected int frequency;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool customTracer;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool rescalePointerTracer;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject tracerLineRenderer;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected LineRenderer customLineRenderer;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool lineRendererAndItem;

		[Token(Token = "0x17000082")]
		protected virtual bool Loop
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x954834", Offset = "0x954834", VA = "0x954834", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x95483C", Offset = "0x95483C", VA = "0x95483C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000083")]
		protected virtual int ControlPointCount
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x954938", Offset = "0x954938", VA = "0x954938", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000084")]
		protected virtual int CurveCount
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x95538C", Offset = "0x95538C", VA = "0x95538C", Slot = "16")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x953BF8", Offset = "0x953BF8", VA = "0x953BF8", Slot = "4")]
		public virtual void Create(int setFrequency, float radius, GameObject tracer, bool rescaleTracer = false)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x954358", Offset = "0x954358", VA = "0x954358", Slot = "5")]
		public virtual void SetPoints(Vector3[] controlPoints, Material material, Color color)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x9543C8", Offset = "0x9543C8", VA = "0x9543C8", Slot = "6")]
		public virtual Vector3[] GetPoints(Vector3[] controlPoints)
		{
			return null;
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x95451C", Offset = "0x95451C", VA = "0x95451C", Slot = "7")]
		public virtual void TogglePoints(bool state)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x9545F4", Offset = "0x9545F4", VA = "0x9545F4", Slot = "8")]
		protected virtual void PointsInit(Vector3[] controlPoints)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x95465C", Offset = "0x95465C", VA = "0x95465C", Slot = "9")]
		protected virtual GameObject CreateSphere()
		{
			return null;
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x954964", Offset = "0x954964", VA = "0x954964", Slot = "13")]
		protected virtual Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x9549C0", Offset = "0x9549C0", VA = "0x9549C0", Slot = "14")]
		protected virtual void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x954FC0", Offset = "0x954FC0", VA = "0x954FC0", Slot = "15")]
		protected virtual void EnforceMode(int index)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x9553D4", Offset = "0x9553D4", VA = "0x9553D4", Slot = "17")]
		protected virtual Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x95565C", Offset = "0x95565C", VA = "0x95565C", Slot = "18")]
		protected virtual void SetObjects(Material material, Color color)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x955708", Offset = "0x955708", VA = "0x955708", Slot = "19")]
		protected virtual void SetPointData(Material material, Color color, float stepSize)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x9558F4", Offset = "0x9558F4", VA = "0x9558F4", Slot = "20")]
		protected virtual void SetItemPosition(int currentIndex, Vector3 setPosition, Material material, Color color, float stepSize)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x955CD0", Offset = "0x955CD0", VA = "0x955CD0", Slot = "21")]
		protected virtual void SetItemMaterial(GameObject item, Material material, Color color)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x955E44", Offset = "0x955E44", VA = "0x955E44", Slot = "22")]
		protected virtual void SetMaterial(Material material, Color color)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x955FF8", Offset = "0x955FF8", VA = "0x955FF8")]
		public VRTK_CurveGenerator()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public static class VRTK_Defines
	{
		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version CurrentVersion;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Version[] PreviousVersions;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5412E4", Offset = "0x5412E4")]
		private static string <CurrentExactVersionScriptingDefineSymbol>k__BackingField;

		[Token(Token = "0x4000924")]
		public const string VersionScriptingDefineSymbolPrefix = "VRTK_VERSION_";

		[Token(Token = "0x4000925")]
		public const string VersionScriptingDefineSymbolSuffix = "_OR_NEWER";

		[Token(Token = "0x17000085")]
		public static string CurrentExactVersionScriptingDefineSymbol
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x957A54", Offset = "0x957A54", VA = "0x957A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551C48", Offset = "0x551C48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x957ABC", Offset = "0x957ABC", VA = "0x957ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551C58", Offset = "0x551C58")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x957B28", Offset = "0x957B28", VA = "0x957B28")]
		static VRTK_Defines()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x957CBC", Offset = "0x957CBC", VA = "0x957CBC")]
		private static string ExactVersionSymbol(Version version)
		{
			return null;
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x957D6C", Offset = "0x957D6C", VA = "0x957D6C")]
		private static string AtLeastVersionSymbol(Version version)
		{
			return null;
		}
	}
	[Token(Token = "0x2000116")]
	public class VRTK_EventSystem : EventSystem
	{
		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539878", Offset = "0x539878")]
		private sealed class <SetEventSystemOfBaseInputModulesAfterFrameDelay>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400184D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EventSystem eventSystem;

			[Token(Token = "0x1700023A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025BB")]
				[Address(RVA = "0x9613AC", Offset = "0x9613AC", VA = "0x9613AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025BD")]
				[Address(RVA = "0x96141C", Offset = "0x96141C", VA = "0x96141C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025B8")]
			[Address(RVA = "0x961064", Offset = "0x961064", VA = "0x961064")]
			[DebuggerHidden]
			public <SetEventSystemOfBaseInputModulesAfterFrameDelay>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60025B9")]
			[Address(RVA = "0x961310", Offset = "0x961310", VA = "0x961310", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025BA")]
			[Address(RVA = "0x961314", Offset = "0x961314", VA = "0x961314", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x9613B4", Offset = "0x9613B4", VA = "0x9613B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected EventSystem previousEventSystem;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_VRInputModule vrInputModule;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly FieldInfo[] EVENT_SYSTEM_FIELD_INFOS;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly PropertyInfo[] EVENT_SYSTEM_PROPERTY_INFOS;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly FieldInfo BASE_INPUT_MODULE_EVENT_SYSTEM_FIELD_INFO;

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x9609AC", Offset = "0x9609AC", VA = "0x9609AC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x960D68", Offset = "0x960D68", VA = "0x960D68", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x960F84", Offset = "0x960F84", VA = "0x960F84", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x961060", Offset = "0x961060", VA = "0x961060", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x960B10", Offset = "0x960B10", VA = "0x960B10")]
		private static void CopyValuesFrom(EventSystem fromEventSystem, EventSystem toEventSystem)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x960CF4", Offset = "0x960CF4", VA = "0x960CF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551C68", Offset = "0x551C68")]
		private static IEnumerator SetEventSystemOfBaseInputModulesAfterFrameDelay(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x960E58", Offset = "0x960E58", VA = "0x960E58")]
		private static void SetEventSystemOfBaseInputModules(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x961090", Offset = "0x961090", VA = "0x961090")]
		public VRTK_EventSystem()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class VRTK_Logger : MonoBehaviour
	{
		[Token(Token = "0x2000458")]
		public enum LogLevels
		{
			[Token(Token = "0x400184F")]
			Trace,
			[Token(Token = "0x4001850")]
			Debug,
			[Token(Token = "0x4001851")]
			Info,
			[Token(Token = "0x4001852")]
			Warn,
			[Token(Token = "0x4001853")]
			Error,
			[Token(Token = "0x4001854")]
			Fatal,
			[Token(Token = "0x4001855")]
			None
		}

		[Token(Token = "0x2000459")]
		public enum CommonMessageKeys
		{
			[Token(Token = "0x4001857")]
			NOT_DEFINED,
			[Token(Token = "0x4001858")]
			REQUIRED_COMPONENT_MISSING_FROM_SCENE,
			[Token(Token = "0x4001859")]
			REQUIRED_COMPONENT_MISSING_FROM_GAMEOBJECT,
			[Token(Token = "0x400185A")]
			REQUIRED_COMPONENT_MISSING_FROM_PARAMETER,
			[Token(Token = "0x400185B")]
			REQUIRED_COMPONENT_MISSING_NOT_INJECTED,
			[Token(Token = "0x400185C")]
			COULD_NOT_FIND_OBJECT_FOR_ACTION,
			[Token(Token = "0x400185D")]
			SDK_OBJECT_NOT_FOUND,
			[Token(Token = "0x400185E")]
			SDK_NOT_FOUND,
			[Token(Token = "0x400185F")]
			SDK_MANAGER_ERRORS,
			[Token(Token = "0x4001860")]
			SCRIPTING_DEFINE_SYMBOLS_ADDED,
			[Token(Token = "0x4001861")]
			SCRIPTING_DEFINE_SYMBOLS_REMOVED
		}

		[Serializable]
		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539888", Offset = "0x539888")]
		private sealed class <>c
		{
			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Match, int> <>9__7_0;

			[Token(Token = "0x60025BF")]
			[Address(RVA = "0x7781D4", Offset = "0x7781D4", VA = "0x7781D4")]
			public <>c()
			{
			}

			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x7781DC", Offset = "0x7781DC", VA = "0x7781DC")]
			internal int <CreateIfNotExists>b__7_0(Match m)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_Logger instance;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<CommonMessageKeys, string> commonMessages;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<CommonMessageKeys, int> commonMessageParts;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LogLevels minLevel;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool throwExceptions;

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x7771CC", Offset = "0x7771CC", VA = "0x7771CC")]
		public static void CreateIfNotExists()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x77770C", Offset = "0x77770C", VA = "0x77770C")]
		public static string GetCommonMessage(CommonMessageKeys messageKey, params object[] parameters)
		{
			return null;
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x7778DC", Offset = "0x7778DC", VA = "0x7778DC")]
		public static void Trace(string message)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x777B10", Offset = "0x777B10", VA = "0x777B10")]
		public static void Debug(string message)
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x777B78", Offset = "0x777B78", VA = "0x777B78")]
		public static void Info(string message)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x777BE0", Offset = "0x777BE0", VA = "0x777BE0")]
		public static void Warn(string message)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x777C48", Offset = "0x777C48", VA = "0x777C48")]
		public static void Error(string message)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x777CB0", Offset = "0x777CB0", VA = "0x777CB0")]
		public static void Fatal(string message)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x777D18", Offset = "0x777D18", VA = "0x777D18")]
		public static void Fatal(Exception exception)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x777944", Offset = "0x777944", VA = "0x777944")]
		public static void Log(LogLevels level, string message)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x777DA4", Offset = "0x777DA4", VA = "0x777DA4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x777E4C", Offset = "0x777E4C", VA = "0x777E4C")]
		public VRTK_Logger()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public static class VRTK_ObjectCache
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<VRTK_BasicTeleport> registeredTeleporters;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<VRTK_DestinationMarker> registeredDestinationMarkers;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static VRTK_HeadsetCollision registeredHeadsetCollider;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static VRTK_HeadsetControllerAware registeredHeadsetControllerAwareness;
	}
	[Token(Token = "0x2000119")]
	public sealed class VRTK_PlayerObject : MonoBehaviour
	{
		[Token(Token = "0x200045B")]
		public enum ObjectTypes
		{
			[Token(Token = "0x4001865")]
			Null,
			[Token(Token = "0x4001866")]
			CameraRig,
			[Token(Token = "0x4001867")]
			Headset,
			[Token(Token = "0x4001868")]
			Controller,
			[Token(Token = "0x4001869")]
			Pointer,
			[Token(Token = "0x400186A")]
			Highlighter,
			[Token(Token = "0x400186B")]
			Collider
		}

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectTypes objectType;

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x784B28", Offset = "0x784B28", VA = "0x784B28")]
		public static void SetPlayerObject(GameObject obj, ObjectTypes objType)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x783A04", Offset = "0x783A04", VA = "0x783A04")]
		public static bool IsPlayerObject(GameObject obj, ObjectTypes ofType = ObjectTypes.Null)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x78921C", Offset = "0x78921C", VA = "0x78921C")]
		public VRTK_PlayerObject()
		{
		}
	}
	[Token(Token = "0x200011A")]
	[ExecuteInEditMode]
	public class VRTK_RoomExtender_PlayAreaGizmo : MonoBehaviour
	{
		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float wireframeHeight;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool drawWireframeWhenSelectedOnly;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playArea;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_RoomExtender roomExtender;

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x792AF8", Offset = "0x792AF8", VA = "0x792AF8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x792B78", Offset = "0x792B78", VA = "0x792B78", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x792DB0", Offset = "0x792DB0", VA = "0x792DB0", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x792E30", Offset = "0x792E30", VA = "0x792E30", Slot = "7")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x792E48", Offset = "0x792E48", VA = "0x792E48", Slot = "8")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x792E60", Offset = "0x792E60", VA = "0x792E60", Slot = "9")]
		protected virtual void DrawWireframe()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x7936E0", Offset = "0x7936E0", VA = "0x7936E0")]
		public VRTK_RoomExtender_PlayAreaGizmo()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class VRTK_ScreenFade : MonoBehaviour
	{
		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRTK_ScreenFade instance;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material fadeMaterial;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Color currentColor;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Color targetColor;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Color deltaColor;

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x81FECC", Offset = "0x81FECC", VA = "0x81FECC")]
		public static void Start(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x81FFC8", Offset = "0x81FFC8", VA = "0x81FFC8", Slot = "4")]
		public virtual void StartFade(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x820030", Offset = "0x820030", VA = "0x820030", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x8200CC", Offset = "0x8200CC", VA = "0x8200CC", Slot = "6")]
		protected virtual void OnPostRender()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x82039C", Offset = "0x82039C", VA = "0x82039C")]
		public VRTK_ScreenFade()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public struct VRTKTrackedControllerEventArgs
	{
		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint currentIndex;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint previousIndex;
	}
	[Token(Token = "0x200011D")]
	public delegate void VRTKTrackedControllerEventHandler(object sender, VRTKTrackedControllerEventArgs e);
	[Token(Token = "0x200011E")]
	public class VRTK_TrackedController : MonoBehaviour
	{
		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539898", Offset = "0x539898")]
		private sealed class <EmitControllerEnabledAtEndOfFrame>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400186C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400186D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400186E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TrackedController <>4__this;

			[Token(Token = "0x1700023C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025C4")]
				[Address(RVA = "0xBFA228", Offset = "0xBFA228", VA = "0xBFA228", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025C6")]
				[Address(RVA = "0xBFA298", Offset = "0xBFA298", VA = "0xBFA298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025C1")]
			[Address(RVA = "0xBF9EEC", Offset = "0xBF9EEC", VA = "0xBF9EEC")]
			[DebuggerHidden]
			public <EmitControllerEnabledAtEndOfFrame>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60025C2")]
			[Address(RVA = "0xBFA14C", Offset = "0xBFA14C", VA = "0xBFA14C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025C3")]
			[Address(RVA = "0xBFA150", Offset = "0xBFA150", VA = "0xBFA150", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025C5")]
			[Address(RVA = "0xBFA230", Offset = "0xBFA230", VA = "0xBFA230", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5398A8", Offset = "0x5398A8")]
		private sealed class <EmitControllerModelReadyAtEndOfFrame>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400186F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TrackedController <>4__this;

			[Token(Token = "0x1700023E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025CA")]
				[Address(RVA = "0xBFA37C", Offset = "0xBFA37C", VA = "0xBFA37C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025CC")]
				[Address(RVA = "0xBFA3EC", Offset = "0xBFA3EC", VA = "0xBFA3EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025C7")]
			[Address(RVA = "0xBFA0C4", Offset = "0xBFA0C4", VA = "0xBFA0C4")]
			[DebuggerHidden]
			public <EmitControllerModelReadyAtEndOfFrame>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x60025C8")]
			[Address(RVA = "0xBFA2A0", Offset = "0xBFA2A0", VA = "0xBFA2A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025C9")]
			[Address(RVA = "0xBFA2A4", Offset = "0xBFA2A4", VA = "0xBFA2A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025CB")]
			[Address(RVA = "0xBFA384", Offset = "0xBFA384", VA = "0xBFA384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint index;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected GameObject aliasController;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool controllerModelWaitSubscribed;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Coroutine emitControllerEnabledRoutine;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Coroutine emitControllerModelAvailableRoutine;

		[Token(Token = "0x17000086")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xBF936C", Offset = "0xBF936C", VA = "0xBF936C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000C8")]
		public event VRTKTrackedControllerEventHandler ControllerEnabled
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xBF8C0C", Offset = "0xBF8C0C", VA = "0xBF8C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551CCC", Offset = "0x551CCC")]
			add
			{
			}
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xBF8CF8", Offset = "0xBF8CF8", VA = "0xBF8CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551CDC", Offset = "0x551CDC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000C9")]
		public event VRTKTrackedControllerEventHandler ControllerDisabled
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xBF8DE4", Offset = "0xBF8DE4", VA = "0xBF8DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551CEC", Offset = "0x551CEC")]
			add
			{
			}
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xBF8ED0", Offset = "0xBF8ED0", VA = "0xBF8ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551CFC", Offset = "0x551CFC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CA")]
		public event VRTKTrackedControllerEventHandler ControllerIndexChanged
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xBF8FBC", Offset = "0xBF8FBC", VA = "0xBF8FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551D0C", Offset = "0x551D0C")]
			add
			{
			}
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xBF90A8", Offset = "0xBF90A8", VA = "0xBF90A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551D1C", Offset = "0x551D1C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CB")]
		public event VRTKTrackedControllerEventHandler ControllerModelAvailable
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xBF9194", Offset = "0xBF9194", VA = "0xBF9194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551D2C", Offset = "0x551D2C")]
			add
			{
			}
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xBF9280", Offset = "0xBF9280", VA = "0xBF9280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551D3C", Offset = "0x551D3C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xBF93D8", Offset = "0xBF93D8", VA = "0xBF93D8", Slot = "4")]
		public virtual void OnControllerEnabled(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xBF93FC", Offset = "0xBF93FC", VA = "0xBF93FC", Slot = "5")]
		public virtual void OnControllerDisabled(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xBF9420", Offset = "0xBF9420", VA = "0xBF9420", Slot = "6")]
		public virtual void OnControllerIndexChanged(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xBF9444", Offset = "0xBF9444", VA = "0xBF9444", Slot = "7")]
		public virtual void OnControllerModelAvailable(VRTKTrackedControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xBF9468", Offset = "0xBF9468", VA = "0xBF9468", Slot = "8")]
		public virtual SDK_BaseController.ControllerType GetControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xBF9470", Offset = "0xBF9470", VA = "0xBF9470", Slot = "9")]
		protected virtual VRTKTrackedControllerEventArgs SetEventPayload(uint previousIndex = uint.MaxValue)
		{
			return default(VRTKTrackedControllerEventArgs);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xBF947C", Offset = "0xBF947C", VA = "0xBF947C", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xBF94FC", Offset = "0xBF94FC", VA = "0xBF94FC", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xBF9648", Offset = "0xBF9648", VA = "0xBF9648", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xBF96B8", Offset = "0xBF96B8", VA = "0xBF96B8", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xBF9738", Offset = "0xBF9738", VA = "0xBF9738", Slot = "14")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xBF97DC", Offset = "0xBF97DC", VA = "0xBF97DC", Slot = "15")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xBF9A00", Offset = "0xBF9A00", VA = "0xBF9A00", Slot = "16")]
		protected virtual void ManageLeftControllerListener(bool register, VRTKSDKBaseControllerEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xBF9AD0", Offset = "0xBF9AD0", VA = "0xBF9AD0", Slot = "17")]
		protected virtual void ManageRightControllerListener(bool register, VRTKSDKBaseControllerEventHandler callbackMethod)
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xBF9BA0", Offset = "0xBF9BA0", VA = "0xBF9BA0", Slot = "18")]
		protected virtual void RegisterHandControllerListener(bool register, SDK_BaseController.ControllerHand givenHand)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xBF9CA4", Offset = "0xBF9CA4", VA = "0xBF9CA4", Slot = "19")]
		protected virtual void ManageControllerModelListener(bool register, SDK_BaseController.ControllerHand givenHand)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xBF9CD8", Offset = "0xBF9CD8", VA = "0xBF9CD8", Slot = "20")]
		protected virtual void ManageControllerModelListeners(bool register)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xBF9D7C", Offset = "0xBF9D7C", VA = "0xBF9D7C", Slot = "21")]
		protected virtual void SetControllerType()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xBF9E10", Offset = "0xBF9E10", VA = "0xBF9E10", Slot = "22")]
		protected virtual void StartEmitControllerEnabledAtEndOfFrame()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xBF9E78", Offset = "0xBF9E78", VA = "0xBF9E78", Slot = "23")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551D4C", Offset = "0x551D4C")]
		protected virtual IEnumerator EmitControllerEnabledAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xBF9F18", Offset = "0xBF9F18", VA = "0xBF9F18", Slot = "24")]
		protected virtual void ControllerModelReady(object sender, VRTKSDKBaseControllerEventArgs e)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xBF9F78", Offset = "0xBF9F78", VA = "0xBF9F78", Slot = "25")]
		protected virtual void StartEmitControllerModelReadyAtEndOfFrame()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xBFA050", Offset = "0xBFA050", VA = "0xBFA050", Slot = "26")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551DB0", Offset = "0x551DB0")]
		protected virtual IEnumerator EmitControllerModelReadyAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xBFA0F0", Offset = "0xBFA0F0", VA = "0xBFA0F0", Slot = "27")]
		protected virtual void CancelCoroutines()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xBFA13C", Offset = "0xBFA13C", VA = "0xBFA13C")]
		public VRTK_TrackedController()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class VRTK_TrackedHeadset : MonoBehaviour
	{
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xBFA3F4", Offset = "0xBFA3F4", VA = "0xBFA3F4", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xBFA458", Offset = "0xBFA458", VA = "0xBFA458", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xBFA4BC", Offset = "0xBFA4BC", VA = "0xBFA4BC")]
		public VRTK_TrackedHeadset()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class VRTK_UIGraphicRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5398B8", Offset = "0x5398B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastResult> <>9__7_0;

			[Token(Token = "0x60025CE")]
			[Address(RVA = "0xBFF0A0", Offset = "0xBFF0A0", VA = "0xBFF0A0")]
			public <>c()
			{
			}

			[Token(Token = "0x60025CF")]
			[Address(RVA = "0xBFF0A8", Offset = "0xBFF0A8", VA = "0xBFF0A8")]
			internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Canvas currentCanvas;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector2 lastKnownPosition;

		[Token(Token = "0x400094D")]
		protected const float UI_CONTROL_OFFSET = 1E-05f;

		[NonSerialized]
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<RaycastResult> s_RaycastResults;

		[Token(Token = "0x17000087")]
		protected virtual Canvas canvas
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xBFEEB0", Offset = "0xBFEEB0", VA = "0xBFEEB0", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xBFDF38", Offset = "0xBFDF38", VA = "0xBFDF38", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xBFE14C", Offset = "0xBFE14C", VA = "0xBFE14C", Slot = "22")]
		protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xBFE4A4", Offset = "0xBFE4A4", VA = "0xBFE4A4", Slot = "23")]
		protected virtual float GetHitDistance(Ray ray)
		{
			return default(float);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xBFE880", Offset = "0xBFE880", VA = "0xBFE880", Slot = "24")]
		protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xBFEF60", Offset = "0xBFEF60", VA = "0xBFEF60")]
		public VRTK_UIGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class VRTK_VRInputModule : PointerInputModule
	{
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<VRTK_UIPointer> pointers;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<RaycastResult> results;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RaycastResult> raycasts;

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xC020EC", Offset = "0xC020EC", VA = "0xC020EC", Slot = "30")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xC0214C", Offset = "0xC0214C", VA = "0xC0214C", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xC02154", Offset = "0xC02154", VA = "0xC02154", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xC02338", Offset = "0xC02338", VA = "0xC02338", Slot = "31")]
		protected virtual List<RaycastResult> CheckRaycasts(VRTK_UIPointer pointer)
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xC024FC", Offset = "0xC024FC", VA = "0xC024FC", Slot = "32")]
		protected virtual bool CheckTransformTree(Transform target, Transform source)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xC025FC", Offset = "0xC025FC", VA = "0xC025FC", Slot = "33")]
		protected virtual bool NoValidCollision(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xC02754", Offset = "0xC02754", VA = "0xC02754", Slot = "34")]
		protected virtual bool IsHovering(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xC029B8", Offset = "0xC029B8", VA = "0xC029B8", Slot = "35")]
		protected virtual bool ValidElement(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xC02A74", Offset = "0xC02A74", VA = "0xC02A74", Slot = "36")]
		protected virtual void CheckPointerHoverClick(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xC02B14", Offset = "0xC02B14", VA = "0xC02B14", Slot = "37")]
		protected virtual void Hover(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xC03330", Offset = "0xC03330", VA = "0xC03330", Slot = "38")]
		protected virtual void Click(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xC033D0", Offset = "0xC033D0", VA = "0xC033D0", Slot = "39")]
		protected virtual void ClickOnUp(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xC034AC", Offset = "0xC034AC", VA = "0xC034AC", Slot = "40")]
		protected virtual void ReleaseOnUp(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xC03588", Offset = "0xC03588", VA = "0xC03588", Slot = "41")]
		protected virtual void ClickOnDown(VRTK_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC03684", Offset = "0xC03684", VA = "0xC03684", Slot = "42")]
		protected virtual bool IsEligibleClick(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xC039B8", Offset = "0xC039B8", VA = "0xC039B8", Slot = "43")]
		protected virtual bool AttemptClick(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xC03CE0", Offset = "0xC03CE0", VA = "0xC03CE0", Slot = "44")]
		protected virtual bool AttemptRelease(VRTK_UIPointer pointer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xC03F78", Offset = "0xC03F78", VA = "0xC03F78", Slot = "45")]
		protected virtual void Drag(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xC046E4", Offset = "0xC046E4", VA = "0xC046E4", Slot = "46")]
		protected virtual void Scroll(VRTK_UIPointer pointer, List<RaycastResult> results)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC04A7C", Offset = "0xC04A7C", VA = "0xC04A7C")]
		public VRTK_VRInputModule()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public abstract class VRTK_BaseObjectControlAction : MonoBehaviour
	{
		[Token(Token = "0x200045F")]
		public enum AxisListeners
		{
			[Token(Token = "0x4001875")]
			XAxisChanged,
			[Token(Token = "0x4001876")]
			YAxisChanged
		}

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541334", Offset = "0x541334")]
		public VRTK_ObjectControl objectControlScript;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54136C", Offset = "0x54136C")]
		public AxisListeners listenOnAxisChange;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Collider centerCollider;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 colliderCenter;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float colliderRadius;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected float colliderHeight;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform controlledTransform;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x6000D87")]
		protected abstract void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive);

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x7358EC", Offset = "0x7358EC", VA = "0x7358EC", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x73596C", Offset = "0x73596C", VA = "0x73596C", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x735ACC", Offset = "0x735ACC", VA = "0x735ACC", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x735C00", Offset = "0x735C00", VA = "0x735C00", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x735C80", Offset = "0x735C80", VA = "0x735C80", Slot = "9")]
		protected virtual void AxisChanged(object sender, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x735CB8", Offset = "0x735CB8", VA = "0x735CB8", Slot = "10")]
		protected virtual void RotateAroundPlayer(GameObject controlledGameObject, float angle)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x735EFC", Offset = "0x735EFC", VA = "0x735EFC", Slot = "11")]
		protected virtual void Blink(float blinkSpeed)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x7360C8", Offset = "0x7360C8", VA = "0x7360C8", Slot = "12")]
		protected virtual void ReleaseBlink(float blinkSpeed)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x736174", Offset = "0x736174", VA = "0x736174", Slot = "13")]
		protected virtual Vector3 GetObjectCenter(Transform checkObject)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x736640", Offset = "0x736640", VA = "0x736640", Slot = "14")]
		protected virtual int GetAxisDirection(float axis)
		{
			return default(int);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x736658", Offset = "0x736658", VA = "0x736658", Slot = "15")]
		protected virtual bool CanMove(VRTK_BodyPhysics givenBodyPhysics, Vector3 currentPosition, Vector3 proposedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x7367D8", Offset = "0x7367D8", VA = "0x7367D8")]
		protected VRTK_BaseObjectControlAction()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536B6C", Offset = "0x536B6C")]
	public class VRTK_RotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5413A4", Offset = "0x5413A4")]
		public float maximumRotationSpeed;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5413DC", Offset = "0x5413DC")]
		public float rotationMultiplier;

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x811028", Offset = "0x811028", VA = "0x811028", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x811084", Offset = "0x811084", VA = "0x811084", Slot = "16")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x8110E0", Offset = "0x8110E0", VA = "0x8110E0")]
		public VRTK_RotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x2000124")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536BA4", Offset = "0x536BA4")]
	public class VRTK_SlideObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541414", Offset = "0x541414")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541414", Offset = "0x541414")]
		public float maximumSpeed;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541474", Offset = "0x541474")]
		public float deceleration;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5414AC", Offset = "0x5414AC")]
		public float fallingDeceleration;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5414E4", Offset = "0x5414E4")]
		public float speedMultiplier;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54151C", Offset = "0x54151C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54151C", Offset = "0x54151C")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float currentSpeed;

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x822BAC", Offset = "0x822BAC", VA = "0x822BAC", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x822C3C", Offset = "0x822C3C", VA = "0x822C3C", Slot = "16")]
		protected virtual float CalculateSpeed(float inputValue, bool currentlyFalling, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x822C74", Offset = "0x822C74", VA = "0x822C74", Slot = "17")]
		protected virtual float Decelerate(float speed, bool currentlyFalling)
		{
			return default(float);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x822D8C", Offset = "0x822D8C", VA = "0x822D8C", Slot = "18")]
		protected virtual void Move(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x823030", Offset = "0x823030", VA = "0x823030")]
		public VRTK_SlideObjectControlAction()
		{
		}
	}
	[Token(Token = "0x2000125")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536BDC", Offset = "0x536BDC")]
	public class VRTK_SnapRotateObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54157C", Offset = "0x54157C")]
		public float anglePerSnap;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5415B4", Offset = "0x5415B4")]
		public float angleMultiplier;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5415EC", Offset = "0x5415EC")]
		public float snapDelay;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float oculusSnapDelay;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541624", Offset = "0x541624")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54165C", Offset = "0x54165C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54165C", Offset = "0x54165C")]
		public float axisThreshold;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static float snapDelayTimer;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static float pressingTimer;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _pressed;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VRTK_Pointer _pointerScript;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _processing;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _modifierReleased;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VRTK_ControllerEvents _controllerEvents;

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x82A4FC", Offset = "0x82A4FC", VA = "0x82A4FC", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x82A580", Offset = "0x82A580", VA = "0x82A580", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x82A604", Offset = "0x82A604", VA = "0x82A604")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x82A678", Offset = "0x82A678", VA = "0x82A678", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x82A870", Offset = "0x82A870", VA = "0x82A870", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x82A9C8", Offset = "0x82A9C8", VA = "0x82A9C8")]
		private void buttonOnePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x82AB68", Offset = "0x82AB68", VA = "0x82AB68")]
		private void buttonTwoPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x82AD08", Offset = "0x82AD08", VA = "0x82AD08")]
		private void PressedTouchpad(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x82AD14", Offset = "0x82AD14", VA = "0x82AD14")]
		private void ReleasedTouchpad(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x82AD1C", Offset = "0x82AD1C", VA = "0x82AD1C", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x82AF78", Offset = "0x82AF78", VA = "0x82AF78", Slot = "16")]
		protected virtual bool ValidThreshold(float axis)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x82AFB0", Offset = "0x82AFB0", VA = "0x82AFB0", Slot = "17")]
		protected virtual float Rotate(float axis, bool modifierActive)
		{
			return default(float);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x82B088", Offset = "0x82B088", VA = "0x82B088")]
		public VRTK_SnapRotateObjectControlAction()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536C14", Offset = "0x536C14")]
	public class VRTK_WarpObjectControlAction : VRTK_BaseObjectControlAction
	{
		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5416B0", Offset = "0x5416B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5416B0", Offset = "0x5416B0")]
		public float warpDistance;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541710", Offset = "0x541710")]
		public float warpMultiplier;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541748", Offset = "0x541748")]
		public float warpDelay;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541780", Offset = "0x541780")]
		public float floorHeightTolerance;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5417B8", Offset = "0x5417B8")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5417F0", Offset = "0x5417F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5417F0", Offset = "0x5417F0")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float warpDelayTimer;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Transform headset;

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xC05B04", Offset = "0xC05B04", VA = "0xC05B04", Slot = "4")]
		protected override void Process(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, float deadzone, bool currentlyFalling, bool modifierActive)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xC05BC0", Offset = "0xC05BC0", VA = "0xC05BC0", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xC05C38", Offset = "0xC05C38", VA = "0xC05C38", Slot = "16")]
		protected virtual void Warp(GameObject controlledGameObject, Transform directionDevice, Vector3 axisDirection, float axis, bool modifierActive)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xC061E0", Offset = "0xC061E0", VA = "0xC061E0")]
		public VRTK_WarpObjectControlAction()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public delegate void TeleportEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x2000128")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536C4C", Offset = "0x536C4C")]
	public class VRTK_BasicTeleport : MonoBehaviour
	{
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5398C8", Offset = "0x5398C8")]
		private sealed class <InitListenersAtEndOfFrame>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BasicTeleport <>4__this;

			[Token(Token = "0x17000240")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025D3")]
				[Address(RVA = "0x89B3E4", Offset = "0x89B3E4", VA = "0x89B3E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025D5")]
				[Address(RVA = "0x89B454", Offset = "0x89B454", VA = "0x89B454", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025D0")]
			[Address(RVA = "0x89AFD4", Offset = "0x89AFD4", VA = "0x89AFD4")]
			[DebuggerHidden]
			public <InitListenersAtEndOfFrame>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60025D1")]
			[Address(RVA = "0x89B30C", Offset = "0x89B30C", VA = "0x89B30C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025D2")]
			[Address(RVA = "0x89B310", Offset = "0x89B310", VA = "0x89B310", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025D4")]
			[Address(RVA = "0x89B3EC", Offset = "0x89B3EC", VA = "0x89B3EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541850", Offset = "0x541850")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541850", Offset = "0x541850")]
		public Color blinkToColor;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5418B0", Offset = "0x5418B0")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5418E8", Offset = "0x5418E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5418E8", Offset = "0x5418E8")]
		public float distanceBlinkDelay;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541940", Offset = "0x541940")]
		public bool headsetPositionCompensation;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541978", Offset = "0x541978")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5419B0", Offset = "0x5419B0")]
		public VRTK_NavMeshData navMeshData;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5419E8", Offset = "0x5419E8")]
		public float navMeshLimitDistance;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform headset;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform playArea;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool adjustYForTerrain;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool enableTeleport;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected float blinkPause;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float fadeInTime;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float maxBlinkTransitionSpeed;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float maxBlinkDistance;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Coroutine initaliseListeners;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool useGivenForcedPosition;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected Vector3 givenForcedPosition;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Quaternion? givenForcedRotation;

		[Token(Token = "0x140000CC")]
		public event TeleportEventHandler Teleporting
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x898F6C", Offset = "0x898F6C", VA = "0x898F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551E14", Offset = "0x551E14")]
			add
			{
			}
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x899058", Offset = "0x899058", VA = "0x899058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551E24", Offset = "0x551E24")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CD")]
		public event TeleportEventHandler Teleported
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x899144", Offset = "0x899144", VA = "0x899144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551E34", Offset = "0x551E34")]
			add
			{
			}
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x899230", Offset = "0x899230", VA = "0x899230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551E44", Offset = "0x551E44")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x89931C", Offset = "0x89931C", VA = "0x89931C", Slot = "4")]
		public virtual void InitDestinationSetListener(GameObject markerMaker, bool register)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x8994F8", Offset = "0x8994F8", VA = "0x8994F8", Slot = "5")]
		public virtual void ToggleTeleportEnabled(bool state)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x899504", Offset = "0x899504", VA = "0x899504", Slot = "6")]
		public virtual bool ValidLocation(Transform target, Vector3 destinationPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x8996E0", Offset = "0x8996E0", VA = "0x8996E0", Slot = "7")]
		public virtual void Teleport(DestinationMarkerEventArgs teleportArgs)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x899744", Offset = "0x899744", VA = "0x899744", Slot = "8")]
		public virtual void Teleport(Transform target, Vector3 destinationPosition, [Optional] Quaternion? destinationRotation, bool forceDestinationPosition = false)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x8997E4", Offset = "0x8997E4", VA = "0x8997E4", Slot = "9")]
		public virtual void ForceTeleport(Vector3 destinationPosition, [Optional] Quaternion? destinationRotation)
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x899A64", Offset = "0x899A64", VA = "0x899A64", Slot = "10")]
		public virtual void SetActualTeleportDestination(Vector3 actualPosition, Quaternion? actualRotation)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x899A88", Offset = "0x899A88", VA = "0x899A88", Slot = "11")]
		public virtual void ResetActualTeleportDestination()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x899A90", Offset = "0x899A90", VA = "0x899A90", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x899B10", Offset = "0x899B10", VA = "0x899B10", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x899C1C", Offset = "0x899C1C", VA = "0x899C1C", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x899CD4", Offset = "0x899CD4", VA = "0x899CD4", Slot = "15")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x899D54", Offset = "0x899D54", VA = "0x899D54", Slot = "16")]
		protected virtual void Blink(float transitionSpeed)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x899E14", Offset = "0x899E14", VA = "0x899E14", Slot = "17")]
		protected virtual DestinationMarkerEventArgs BuildTeleportArgs(Transform target, Vector3 destinationPosition, [Optional] Quaternion? destinationRotation, bool forceDestinationPosition = false)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x899FCC", Offset = "0x899FCC", VA = "0x899FCC", Slot = "18")]
		protected virtual bool ValidRigObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x89A2A8", Offset = "0x89A2A8", VA = "0x89A2A8", Slot = "19")]
		protected virtual void DoTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x89A5B0", Offset = "0x89A5B0", VA = "0x89A5B0", Slot = "20")]
		protected virtual void StartTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x89A628", Offset = "0x89A628", VA = "0x89A628", Slot = "21")]
		protected virtual void ProcessOrientation(object sender, DestinationMarkerEventArgs e, Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x89A62C", Offset = "0x89A62C", VA = "0x89A62C", Slot = "22")]
		protected virtual void EndTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x89A6A4", Offset = "0x89A6A4", VA = "0x89A6A4", Slot = "23")]
		protected virtual Vector3 SetNewPosition(Vector3 position, Transform target, bool forceDestinationPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x89A7D8", Offset = "0x89A7D8", VA = "0x89A7D8", Slot = "24")]
		protected virtual Quaternion SetNewRotation(Quaternion? rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x89A908", Offset = "0x89A908", VA = "0x89A908", Slot = "25")]
		protected virtual Vector3 GetNewPosition(Vector3 tipPosition, Transform target, bool returnOriginalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x89A9A4", Offset = "0x89A9A4", VA = "0x89A9A4", Slot = "26")]
		protected virtual Vector3 GetCompensatedPosition(Vector3 givenPosition, Vector3 defaultPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x89AAD8", Offset = "0x89AAD8", VA = "0x89AAD8", Slot = "27")]
		protected virtual Vector3 CheckTerrainCollision(Vector3 position, Transform target, bool useHeadsetForPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x89ACA0", Offset = "0x89ACA0", VA = "0x89ACA0", Slot = "28")]
		protected virtual void OnTeleporting(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x89ACF4", Offset = "0x89ACF4", VA = "0x89ACF4", Slot = "29")]
		protected virtual void OnTeleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x89AD48", Offset = "0x89AD48", VA = "0x89AD48", Slot = "30")]
		protected virtual void CalculateBlinkDelay(float blinkSpeed, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x89AEA8", Offset = "0x89AEA8", VA = "0x89AEA8", Slot = "31")]
		protected virtual void ReleaseBlink()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x89AF60", Offset = "0x89AF60", VA = "0x89AF60", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551E54", Offset = "0x551E54")]
		protected virtual IEnumerator InitListenersAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x89B000", Offset = "0x89B000", VA = "0x89B000", Slot = "33")]
		protected virtual void InitDestinationMarkerListeners(bool state)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x89B260", Offset = "0x89B260", VA = "0x89B260")]
		public VRTK_BasicTeleport()
		{
		}
	}
	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536C84", Offset = "0x536C84")]
	public class VRTK_ButtonControl : VRTK_ObjectControl
	{
		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541A40", Offset = "0x541A40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541A40", Offset = "0x541A40")]
		public VRTK_ControllerEvents.ButtonAlias forwardButton;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541AA0", Offset = "0x541AA0")]
		public VRTK_ControllerEvents.ButtonAlias backwardButton;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541AD8", Offset = "0x541AD8")]
		public VRTK_ControllerEvents.ButtonAlias leftButton;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541B10", Offset = "0x541B10")]
		public VRTK_ControllerEvents.ButtonAlias rightButton;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool forwardPressed;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool backwardPressed;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		protected bool leftPressed;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		protected bool rightPressed;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedForwardButton;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedBackwardButton;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedLeftButton;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedRightButton;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector2 axisDeadzone;

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x8A8D60", Offset = "0x8A8D60", VA = "0x8A8D60", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x8A8DE0", Offset = "0x8A8DE0", VA = "0x8A8DE0", Slot = "6")]
		protected override void ControlFixedUpdate()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x8A8F74", Offset = "0x8A8F74", VA = "0x8A8F74", Slot = "7")]
		protected override VRTK_ObjectControl GetOtherControl()
		{
			return null;
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x8A90A0", Offset = "0x8A90A0", VA = "0x8A90A0", Slot = "9")]
		protected override void SetListeners(bool state)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x8A9340", Offset = "0x8A9340", VA = "0x8A9340", Slot = "8")]
		protected override bool IsInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x8A9370", Offset = "0x8A9370", VA = "0x8A9370", Slot = "22")]
		protected virtual void SetDirectionListener(bool state, VRTK_ControllerEvents.ButtonAlias directionButton, ref VRTK_ControllerEvents.ButtonAlias subscribedDirectionButton, ControllerInteractionEventHandler pressCallback, ControllerInteractionEventHandler releaseCallback)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x8A9518", Offset = "0x8A9518", VA = "0x8A9518", Slot = "23")]
		protected virtual void ForwardButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x8A9524", Offset = "0x8A9524", VA = "0x8A9524", Slot = "24")]
		protected virtual void ForwardButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x8A952C", Offset = "0x8A952C", VA = "0x8A952C", Slot = "25")]
		protected virtual void BackwardButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x8A9538", Offset = "0x8A9538", VA = "0x8A9538", Slot = "26")]
		protected virtual void BackwardButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x8A9540", Offset = "0x8A9540", VA = "0x8A9540", Slot = "27")]
		protected virtual void LeftButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x8A954C", Offset = "0x8A954C", VA = "0x8A954C", Slot = "28")]
		protected virtual void LeftButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x8A9554", Offset = "0x8A9554", VA = "0x8A9554", Slot = "29")]
		protected virtual void RightButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x8A9560", Offset = "0x8A9560", VA = "0x8A9560", Slot = "30")]
		protected virtual void RightButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x8A9568", Offset = "0x8A9568", VA = "0x8A9568")]
		public VRTK_ButtonControl()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public struct DashTeleportEventArgs
	{
		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit[] hits;
	}
	[Token(Token = "0x200012B")]
	public delegate void DashTeleportEventHandler(object sender, DashTeleportEventArgs e);
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536CBC", Offset = "0x536CBC")]
	public class VRTK_DashTeleport : VRTK_HeightAdjustTeleport
	{
		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5398D8", Offset = "0x5398D8")]
		private sealed class <lerpToPosition>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400187A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400187B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400187C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_DashTeleport <>4__this;

			[Token(Token = "0x400187D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 targetPosition;

			[Token(Token = "0x400187E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DestinationMarkerEventArgs e;

			[Token(Token = "0x400187F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Vector3 startPosition;

			[Token(Token = "0x4001880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public Quaternion startRotation;

			[Token(Token = "0x4001881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public Quaternion targetRotation;

			[Token(Token = "0x4001882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public object sender;

			[Token(Token = "0x4001883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private bool <gameObjectInTheWay>5__2;

			[Token(Token = "0x4001884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private RaycastHit[] <allHits>5__3;

			[Token(Token = "0x4001885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x4001886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private float <currentLerpedTime>5__5;

			[Token(Token = "0x4001887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private WaitForEndOfFrame <delayInstruction>5__6;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025D9")]
				[Address(RVA = "0x9579DC", Offset = "0x9579DC", VA = "0x9579DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025DB")]
				[Address(RVA = "0x957A4C", Offset = "0x957A4C", VA = "0x957A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025D6")]
			[Address(RVA = "0x95716C", Offset = "0x95716C", VA = "0x95716C")]
			[DebuggerHidden]
			public <lerpToPosition>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60025D7")]
			[Address(RVA = "0x957230", Offset = "0x957230", VA = "0x957230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x957234", Offset = "0x957234", VA = "0x957234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x9579E4", Offset = "0x9579E4", VA = "0x9579E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541B48", Offset = "0x541B48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541B48", Offset = "0x541B48")]
		public float normalLerpTime;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541BA8", Offset = "0x541BA8")]
		public float minSpeedMps;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541BE0", Offset = "0x541BE0")]
		public float capsuleTopOffset;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541C18", Offset = "0x541C18")]
		public float capsuleBottomOffset;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541C50", Offset = "0x541C50")]
		public float capsuleRadius;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float minDistanceForNormalLerp;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float lerpTime;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Coroutine attemptLerpRoutine;

		[Token(Token = "0x140000CE")]
		public event DashTeleportEventHandler WillDashThruObjects
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x9565D4", Offset = "0x9565D4", VA = "0x9565D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551EB8", Offset = "0x551EB8")]
			add
			{
			}
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x9566C0", Offset = "0x9566C0", VA = "0x9566C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551EC8", Offset = "0x551EC8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000CF")]
		public event DashTeleportEventHandler DashedThruObjects
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x9567AC", Offset = "0x9567AC", VA = "0x9567AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551ED8", Offset = "0x551ED8")]
			add
			{
			}
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x956898", Offset = "0x956898", VA = "0x956898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551EE8", Offset = "0x551EE8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x956984", Offset = "0x956984", VA = "0x956984", Slot = "37")]
		public virtual void OnWillDashThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x9569A8", Offset = "0x9569A8", VA = "0x9569A8", Slot = "38")]
		public virtual void OnDashedThruObjects(DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x9569CC", Offset = "0x9569CC", VA = "0x9569CC", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x956A54", Offset = "0x956A54", VA = "0x956A54", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x956A98", Offset = "0x956A98", VA = "0x956A98", Slot = "23")]
		protected override Vector3 SetNewPosition(Vector3 position, Transform target, bool forceDestinationPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x956AAC", Offset = "0x956AAC", VA = "0x956AAC", Slot = "24")]
		protected override Quaternion SetNewRotation(Quaternion? rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x956B94", Offset = "0x956B94", VA = "0x956B94", Slot = "20")]
		protected override void StartTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x956BE4", Offset = "0x956BE4", VA = "0x956BE4", Slot = "21")]
		protected override void ProcessOrientation(object sender, DestinationMarkerEventArgs e, Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x956D6C", Offset = "0x956D6C", VA = "0x956D6C", Slot = "39")]
		protected virtual Vector3 CalculateOffsetPosition(Vector3 targetPosition, Quaternion targetRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x956FBC", Offset = "0x956FBC", VA = "0x956FBC", Slot = "22")]
		protected override void EndTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x956FC0", Offset = "0x956FC0", VA = "0x956FC0", Slot = "40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x551EF8", Offset = "0x551EF8")]
		protected virtual IEnumerator lerpToPosition(object sender, DestinationMarkerEventArgs e, Vector3 startPosition, Vector3 targetPosition, Quaternion startRotation, Quaternion targetRotation)
		{
			return null;
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x957198", Offset = "0x957198", VA = "0x957198", Slot = "41")]
		protected virtual DashTeleportEventArgs SetDashTeleportEvent(RaycastHit[] hits)
		{
			return default(DashTeleportEventArgs);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x9571A0", Offset = "0x9571A0", VA = "0x9571A0")]
		public VRTK_DashTeleport()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x9571E0", Offset = "0x9571E0", VA = "0x9571E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551F5C", Offset = "0x551F5C")]
		[DebuggerHidden]
		private void <>n__0(object sender, DestinationMarkerEventArgs e)
		{
		}
	}
	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536CF4", Offset = "0x536CF4")]
	public class VRTK_HeightAdjustTeleport : VRTK_BasicTeleport
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541CA8", Offset = "0x541CA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541CA8", Offset = "0x541CA8")]
		public bool snapToNearestFloor;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541D08", Offset = "0x541D08")]
		public bool applyPlayareaParentOffset;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541D40", Offset = "0x541D40")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x956A18", Offset = "0x956A18", VA = "0x956A18", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x956A90", Offset = "0x956A90", VA = "0x956A90", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x965D64", Offset = "0x965D64", VA = "0x965D64", Slot = "25")]
		protected override Vector3 GetNewPosition(Vector3 tipPosition, Transform target, bool returnOriginalPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x965DFC", Offset = "0x965DFC", VA = "0x965DFC", Slot = "34")]
		protected virtual void AdjustForParentOffset()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x9660C4", Offset = "0x9660C4", VA = "0x9660C4", Slot = "35")]
		protected virtual float GetParentOffset()
		{
			return default(float);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x9661C4", Offset = "0x9661C4", VA = "0x9661C4", Slot = "36")]
		protected virtual float GetTeleportY(Transform target, Vector3 tipPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x9571D0", Offset = "0x9571D0", VA = "0x9571D0")]
		public VRTK_HeightAdjustTeleport()
		{
		}
	}
	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536D2C", Offset = "0x536D2C")]
	public class VRTK_MoveInPlace : MonoBehaviour
	{
		[Token(Token = "0x2000462")]
		public enum ControlOptions
		{
			[Token(Token = "0x4001889")]
			HeadsetAndControllers,
			[Token(Token = "0x400188A")]
			ControllersOnly,
			[Token(Token = "0x400188B")]
			HeadsetOnly
		}

		[Token(Token = "0x2000463")]
		public enum DirectionalMethod
		{
			[Token(Token = "0x400188D")]
			Gaze,
			[Token(Token = "0x400188E")]
			ControllerRotation,
			[Token(Token = "0x400188F")]
			DumbDecoupling,
			[Token(Token = "0x4001890")]
			SmartDecoupling,
			[Token(Token = "0x4001891")]
			EngageControllerRotationOnly,
			[Token(Token = "0x4001892")]
			LeftControllerRotationOnly,
			[Token(Token = "0x4001893")]
			RightControllerRotationOnly
		}

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541D78", Offset = "0x541D78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541D78", Offset = "0x541D78")]
		public bool leftController;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541DD8", Offset = "0x541DD8")]
		public bool rightController;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541E10", Offset = "0x541E10")]
		public VRTK_ControllerEvents.ButtonAlias engageButton;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541E48", Offset = "0x541E48")]
		public ControlOptions controlOptions;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541E80", Offset = "0x541E80")]
		public DirectionalMethod directionMethod;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541EB8", Offset = "0x541EB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541EB8", Offset = "0x541EB8")]
		public float speedScale;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541F18", Offset = "0x541F18")]
		public float maxSpeed;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541F50", Offset = "0x541F50")]
		public float deceleration;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541F88", Offset = "0x541F88")]
		public float fallingDeceleration;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x541FC0", Offset = "0x541FC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x541FC0", Offset = "0x541FC0")]
		public float smartDecoupleThreshold;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542020", Offset = "0x542020")]
		public float sensitivity;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542058", Offset = "0x542058")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542058", Offset = "0x542058")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected GameObject controllerLeftHand;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject controllerRightHand;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_ControllerReference engagedController;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform headset;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftSubscribed;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool rightSubscribed;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool previousLeftControllerState;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool previousRightControllerState;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected VRTK_ControllerEvents.ButtonAlias previousEngageButton;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool currentlyFalling;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected int averagePeriod;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<Transform> trackedObjects;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Dictionary<Transform, List<float>> movementList;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<Transform, float> previousYPositions;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 initalGaze;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float currentSpeed;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 direction;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected Vector3 previousDirection;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool active;

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x77824C", Offset = "0x77824C", VA = "0x77824C", Slot = "4")]
		public virtual void SetControlOptions(ControlOptions givenControlOptions)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x778628", Offset = "0x778628", VA = "0x778628", Slot = "5")]
		public virtual Vector3 GetMovementDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x778634", Offset = "0x778634", VA = "0x778634", Slot = "6")]
		public virtual float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x77863C", Offset = "0x77863C", VA = "0x77863C", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x7786BC", Offset = "0x7786BC", VA = "0x7786BC", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x778B70", Offset = "0x778B70", VA = "0x778B70", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x778BDC", Offset = "0x778BDC", VA = "0x778BDC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x778C5C", Offset = "0x778C5C", VA = "0x778C5C", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x778CC8", Offset = "0x778CC8", VA = "0x778CC8", Slot = "12")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x778EC4", Offset = "0x778EC4", VA = "0x778EC4", Slot = "13")]
		protected virtual bool MovementActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x778EE4", Offset = "0x778EE4", VA = "0x778EE4", Slot = "14")]
		protected virtual void CheckControllerState(GameObject controller, bool controllerState, ref bool subscribedState, ref bool previousState)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x778F3C", Offset = "0x778F3C", VA = "0x778F3C", Slot = "15")]
		protected virtual float CalculateListAverage()
		{
			return default(float);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x7791D0", Offset = "0x7791D0", VA = "0x7791D0", Slot = "16")]
		protected virtual Vector3 SetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x779924", Offset = "0x779924", VA = "0x779924", Slot = "17")]
		protected virtual Vector3 CalculateControllerRotationDirection(Vector3 calculatedControllerDirection)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x7799F4", Offset = "0x7799F4", VA = "0x7799F4", Slot = "18")]
		protected virtual void SetDeltaTransformData()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x779B14", Offset = "0x779B14", VA = "0x779B14", Slot = "19")]
		protected virtual void MovePlayArea(Vector3 moveDirection, float moveSpeed)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x779D14", Offset = "0x779D14", VA = "0x779D14", Slot = "20")]
		protected virtual bool CanMove(VRTK_BodyPhysics givenBodyPhysics, Vector3 currentPosition, Vector3 proposedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x779E94", Offset = "0x779E94", VA = "0x779E94", Slot = "21")]
		protected virtual void HandleFalling()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x779FAC", Offset = "0x779FAC", VA = "0x779FAC", Slot = "22")]
		protected virtual void EngageButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x779FC0", Offset = "0x779FC0", VA = "0x779FC0", Slot = "23")]
		protected virtual void EngageButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x77A0FC", Offset = "0x77A0FC", VA = "0x77A0FC", Slot = "24")]
		protected virtual Quaternion DetermineAverageControllerRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x77A3B4", Offset = "0x77A3B4", VA = "0x77A3B4", Slot = "25")]
		protected virtual Quaternion AverageRotation(Quaternion rot1, Quaternion rot2)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x77A488", Offset = "0x77A488", VA = "0x77A488", Slot = "26")]
		protected virtual void SetControllerListeners(GameObject controller, bool controllerState, ref bool subscribedState, bool forceDisabled = false)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x77A550", Offset = "0x77A550", VA = "0x77A550", Slot = "27")]
		protected virtual void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x77A848", Offset = "0x77A848", VA = "0x77A848")]
		public VRTK_MoveInPlace()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public struct ObjectControlEventArgs
	{
		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject controlledGameObject;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform directionDevice;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 axisDirection;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float axis;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deadzone;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool currentlyFalling;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool modifierActive;
	}
	[Token(Token = "0x2000130")]
	public delegate void ObjectControlEventHandler(object sender, ObjectControlEventArgs e);
	[Token(Token = "0x2000131")]
	public abstract class VRTK_ObjectControl : MonoBehaviour
	{
		[Token(Token = "0x2000464")]
		public enum DirectionDevices
		{
			[Token(Token = "0x4001895")]
			Headset,
			[Token(Token = "0x4001896")]
			LeftController,
			[Token(Token = "0x4001897")]
			RightController,
			[Token(Token = "0x4001898")]
			ControlledObject
		}

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5420B8", Offset = "0x5420B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5420B8", Offset = "0x5420B8")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542118", Offset = "0x542118")]
		public DirectionDevices deviceForDirection;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542150", Offset = "0x542150")]
		public bool disableOtherControlsOnActive;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542188", Offset = "0x542188")]
		public bool affectOnFalling;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5421C0", Offset = "0x5421C0")]
		public GameObject controlOverrideObject;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ObjectControl otherObjectControl;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject controlledGameObject;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject setControlOverrideObject;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform directionDevice;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected DirectionDevices previousDeviceForDirection;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected Vector2 currentAxis;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected Vector2 storedAxis;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected bool currentlyFalling;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		protected bool modifierActive;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float controlledGameObjectPreviousY;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected float controlledGameObjectPreviousYOffset;

		[Token(Token = "0x140000D0")]
		public event ObjectControlEventHandler XAxisChanged
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x77D19C", Offset = "0x77D19C", VA = "0x77D19C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551F94", Offset = "0x551F94")]
			add
			{
			}
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x77D288", Offset = "0x77D288", VA = "0x77D288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551FA4", Offset = "0x551FA4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D1")]
		public event ObjectControlEventHandler YAxisChanged
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x77D374", Offset = "0x77D374", VA = "0x77D374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551FB4", Offset = "0x551FB4")]
			add
			{
			}
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x77D460", Offset = "0x77D460", VA = "0x77D460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551FC4", Offset = "0x551FC4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x77D54C", Offset = "0x77D54C", VA = "0x77D54C", Slot = "4")]
		public virtual void OnXAxisChanged(ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x77D598", Offset = "0x77D598", VA = "0x77D598", Slot = "5")]
		public virtual void OnYAxisChanged(ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6000E24")]
		protected abstract void ControlFixedUpdate();

		[Token(Token = "0x6000E25")]
		protected abstract VRTK_ObjectControl GetOtherControl();

		[Token(Token = "0x6000E26")]
		protected abstract bool IsInAction();

		[Token(Token = "0x6000E27")]
		protected abstract void SetListeners(bool state);

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x77D5E4", Offset = "0x77D5E4", VA = "0x77D5E4", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x77D664", Offset = "0x77D664", VA = "0x77D664", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x77D9C4", Offset = "0x77D9C4", VA = "0x77D9C4", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x77D9D4", Offset = "0x77D9D4", VA = "0x77D9D4", Slot = "13")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x77DA54", Offset = "0x77DA54", VA = "0x77DA54", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x77DAF8", Offset = "0x77DAF8", VA = "0x77DAF8", Slot = "15")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x77DB44", Offset = "0x77DB44", VA = "0x77DB44", Slot = "16")]
		protected virtual ObjectControlEventArgs SetEventArguements(Vector3 axisDirection, float axis, float axisDeadzone)
		{
			return default(ObjectControlEventArgs);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x77DB6C", Offset = "0x77DB6C", VA = "0x77DB6C", Slot = "17")]
		protected virtual void SetControlledObject()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x77DC68", Offset = "0x77DC68", VA = "0x77DC68", Slot = "18")]
		protected virtual void CheckFalling()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x77DE98", Offset = "0x77DE98", VA = "0x77DE98", Slot = "19")]
		protected virtual bool ObjectHeightChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x77DF44", Offset = "0x77DF44", VA = "0x77DF44", Slot = "20")]
		protected virtual Transform GetDirectionDevice()
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x77E064", Offset = "0x77E064", VA = "0x77E064", Slot = "21")]
		protected virtual void CheckDirectionDevice()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x77E0B0", Offset = "0x77E0B0", VA = "0x77E0B0")]
		protected VRTK_ObjectControl()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public struct PlayerClimbEventArgs
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x542218", Offset = "0x542218")]
		public uint controllerIndex;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject target;
	}
	[Token(Token = "0x2000133")]
	public delegate void PlayerClimbEventHandler(object sender, PlayerClimbEventArgs e);
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x536D64", Offset = "0x536D64")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536D64", Offset = "0x536D64")]
	public class VRTK_PlayerClimb : MonoBehaviour
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542250", Offset = "0x542250")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542250", Offset = "0x542250")]
		public bool usePlayerScale;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5422B0", Offset = "0x5422B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5422B0", Offset = "0x5422B0")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542310", Offset = "0x542310")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542348", Offset = "0x542348")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542380", Offset = "0x542380")]
		public VRTK_PositionRewind positionRewind;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform playArea;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector3 startControllerScaledLocalPosition;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Vector3 startGrabPointLocalPosition;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3 startPlayAreaWorldOffset;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected GameObject grabbingController;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected GameObject climbingObject;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Quaternion climbingObjectLastRotation;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool isClimbing;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool useGrabbedObjectRotation;

		[Token(Token = "0x140000D2")]
		public event PlayerClimbEventHandler PlayerClimbStarted
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x7872CC", Offset = "0x7872CC", VA = "0x7872CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551FD4", Offset = "0x551FD4")]
			add
			{
			}
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x7873B8", Offset = "0x7873B8", VA = "0x7873B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551FE4", Offset = "0x551FE4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D3")]
		public event PlayerClimbEventHandler PlayerClimbEnded
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x7874A4", Offset = "0x7874A4", VA = "0x7874A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551FF4", Offset = "0x551FF4")]
			add
			{
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x787590", Offset = "0x787590", VA = "0x787590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552004", Offset = "0x552004")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x78767C", Offset = "0x78767C", VA = "0x78767C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x78784C", Offset = "0x78784C", VA = "0x78784C", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x7878C8", Offset = "0x7878C8", VA = "0x7878C8", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x787910", Offset = "0x787910", VA = "0x787910", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x787990", Offset = "0x787990", VA = "0x787990", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x787DB0", Offset = "0x787DB0", VA = "0x787DB0", Slot = "9")]
		protected virtual void OnPlayerClimbStarted(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x787DF4", Offset = "0x787DF4", VA = "0x787DF4", Slot = "10")]
		protected virtual void OnPlayerClimbEnded(PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x787E38", Offset = "0x787E38", VA = "0x787E38", Slot = "11")]
		protected virtual PlayerClimbEventArgs SetPlayerClimbEvent(VRTK_ControllerReference controllerReference, GameObject target)
		{
			return default(PlayerClimbEventArgs);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x787EBC", Offset = "0x787EBC", VA = "0x787EBC", Slot = "12")]
		protected virtual void InitListeners(bool state)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x787F8C", Offset = "0x787F8C", VA = "0x787F8C", Slot = "13")]
		protected virtual void InitTeleportListener(bool state)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x788088", Offset = "0x788088", VA = "0x788088", Slot = "14")]
		protected virtual void OnTeleport(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x788100", Offset = "0x788100", VA = "0x788100", Slot = "15")]
		protected virtual Vector3 GetScaledLocalPosition(Transform objTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x7882BC", Offset = "0x7882BC", VA = "0x7882BC", Slot = "16")]
		protected virtual void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x78848C", Offset = "0x78848C", VA = "0x78848C", Slot = "17")]
		protected virtual void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x7886B4", Offset = "0x7886B4", VA = "0x7886B4", Slot = "18")]
		protected virtual void Grab(GameObject currentGrabbingController, VRTK_ControllerReference controllerReference, GameObject target)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x788A18", Offset = "0x788A18", VA = "0x788A18", Slot = "19")]
		protected virtual void Ungrab(bool carryMomentum, VRTK_ControllerReference controllerReference, GameObject target)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x788D30", Offset = "0x788D30", VA = "0x788D30", Slot = "20")]
		protected virtual bool IsActiveClimbingController(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x788DAC", Offset = "0x788DAC", VA = "0x788DAC", Slot = "21")]
		protected virtual bool IsClimbableObject(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x788EA8", Offset = "0x788EA8", VA = "0x788EA8", Slot = "22")]
		protected virtual void InitControllerListeners(GameObject controller, bool state)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x789084", Offset = "0x789084", VA = "0x789084", Slot = "23")]
		protected virtual bool IsBodyColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x789168", Offset = "0x789168", VA = "0x789168", Slot = "24")]
		protected virtual bool IsHeadsetColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x78920C", Offset = "0x78920C", VA = "0x78920C")]
		public VRTK_PlayerClimb()
		{
		}
	}
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536DEC", Offset = "0x536DEC")]
	public class VRTK_RoomExtender : MonoBehaviour
	{
		[Token(Token = "0x2000465")]
		public enum MovementFunction
		{
			[Token(Token = "0x400189A")]
			Nonlinear,
			[Token(Token = "0x400189B")]
			LinearDirect
		}

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5423D8", Offset = "0x5423D8")]
		public MovementFunction movementFunction;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542410", Offset = "0x542410")]
		public bool additionalMovementEnabled;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542448", Offset = "0x542448")]
		public bool additionalMovementEnabledOnButtonPress;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542480", Offset = "0x542480")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x542480", Offset = "0x542480")]
		public float additionalMovementMultiplier;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5424D4", Offset = "0x5424D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5424D4", Offset = "0x5424D4")]
		public float headZoneRadius;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542528", Offset = "0x542528")]
		public Transform debugTransform;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Vector3 relativeMovementOfCameraRig;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform movementTransform;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform playArea;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 headCirclePosition;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 lastPosition;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 lastMovement;

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x792124", Offset = "0x792124", VA = "0x792124", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x7921A4", Offset = "0x7921A4", VA = "0x7921A4", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x792430", Offset = "0x792430", VA = "0x792430", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x7924B0", Offset = "0x7924B0", VA = "0x7924B0", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x7924DC", Offset = "0x7924DC", VA = "0x7924DC", Slot = "8")]
		protected virtual void Move(Vector3 movement)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x792734", Offset = "0x792734", VA = "0x792734", Slot = "9")]
		protected virtual void MoveHeadCircle()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x792888", Offset = "0x792888", VA = "0x792888", Slot = "10")]
		protected virtual void MoveHeadCircleNonLinearDrift()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x7929DC", Offset = "0x7929DC", VA = "0x7929DC", Slot = "11")]
		protected virtual void UpdateLastMovement()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x792AD4", Offset = "0x792AD4", VA = "0x792AD4")]
		public VRTK_RoomExtender()
		{
		}
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x536E24", Offset = "0x536E24")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536E24", Offset = "0x536E24")]
	public class VRTK_TeleportDisableOnControllerObscured : MonoBehaviour
	{
		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5398E8", Offset = "0x5398E8")]
		private sealed class <EnableAtEndOfFrame>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400189C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400189D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400189E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnControllerObscured <>4__this;

			[Token(Token = "0x17000244")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025DF")]
				[Address(RVA = "0x82D574", Offset = "0x82D574", VA = "0x82D574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000245")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025E1")]
				[Address(RVA = "0x82D5E4", Offset = "0x82D5E4", VA = "0x82D5E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025DC")]
			[Address(RVA = "0x82D2B8", Offset = "0x82D2B8", VA = "0x82D2B8")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60025DD")]
			[Address(RVA = "0x82D35C", Offset = "0x82D35C", VA = "0x82D35C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0x82D360", Offset = "0x82D360", VA = "0x82D360", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0x82D57C", Offset = "0x82D57C", VA = "0x82D57C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_BasicTeleport basicTeleport;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_HeadsetControllerAware headset;

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x82D090", Offset = "0x82D090", VA = "0x82D090", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x82D104", Offset = "0x82D104", VA = "0x82D104", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x82D244", Offset = "0x82D244", VA = "0x82D244", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x552014", Offset = "0x552014")]
		protected virtual IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x82D2E4", Offset = "0x82D2E4", VA = "0x82D2E4", Slot = "7")]
		protected virtual void DisableTeleport(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x82D31C", Offset = "0x82D31C", VA = "0x82D31C", Slot = "8")]
		protected virtual void EnableTeleport(object sender, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x82D354", Offset = "0x82D354", VA = "0x82D354")]
		public VRTK_TeleportDisableOnControllerObscured()
		{
		}
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536EAC", Offset = "0x536EAC")]
	public class VRTK_TeleportDisableOnHeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5398F8", Offset = "0x5398F8")]
		private sealed class <EnableAtEndOfFrame>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400189F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_TeleportDisableOnHeadsetCollision <>4__this;

			[Token(Token = "0x17000246")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025E5")]
				[Address(RVA = "0x82DAD0", Offset = "0x82DAD0", VA = "0x82DAD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000247")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025E7")]
				[Address(RVA = "0x82DB40", Offset = "0x82DB40", VA = "0x82DB40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0x82D814", Offset = "0x82D814", VA = "0x82D814")]
			[DebuggerHidden]
			public <EnableAtEndOfFrame>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60025E3")]
			[Address(RVA = "0x82D8B8", Offset = "0x82D8B8", VA = "0x82D8B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0x82D8BC", Offset = "0x82D8BC", VA = "0x82D8BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025E6")]
			[Address(RVA = "0x82DAD8", Offset = "0x82DAD8", VA = "0x82DAD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_BasicTeleport basicTeleport;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x82D5EC", Offset = "0x82D5EC", VA = "0x82D5EC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x82D660", Offset = "0x82D660", VA = "0x82D660", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x82D7A0", Offset = "0x82D7A0", VA = "0x82D7A0", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x552078", Offset = "0x552078")]
		protected virtual IEnumerator EnableAtEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x82D840", Offset = "0x82D840", VA = "0x82D840", Slot = "7")]
		protected virtual void DisableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x82D878", Offset = "0x82D878", VA = "0x82D878", Slot = "8")]
		protected virtual void EnableTeleport(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x82D8B0", Offset = "0x82D8B0", VA = "0x82D8B0")]
		public VRTK_TeleportDisableOnHeadsetCollision()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536EE4", Offset = "0x536EE4")]
	public class VRTK_TouchpadControl : VRTK_ObjectControl
	{
		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539908", Offset = "0x539908")]
		private sealed class <DelayedThumbstickSetting>d__7 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40018A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTK_TouchpadControl <>4__this;

			[Token(Token = "0x17000248")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60025EB")]
				[Address(RVA = "0xBF5844", Offset = "0xBF5844", VA = "0xBF5844", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000249")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025ED")]
				[Address(RVA = "0xBF58B4", Offset = "0xBF58B4", VA = "0xBF58B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025E8")]
			[Address(RVA = "0xBF55F0", Offset = "0xBF55F0", VA = "0xBF55F0")]
			[DebuggerHidden]
			public <DelayedThumbstickSetting>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60025E9")]
			[Address(RVA = "0xBF561C", Offset = "0xBF561C", VA = "0xBF561C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025EA")]
			[Address(RVA = "0xBF5620", Offset = "0xBF5620", VA = "0xBF5620", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xBF584C", Offset = "0xBF584C", VA = "0xBF584C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542570", Offset = "0x542570")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542570", Offset = "0x542570")]
		public VRTK_ControllerEvents.ButtonAlias primaryActivationButton;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5425D0", Offset = "0x5425D0")]
		public VRTK_ControllerEvents.ButtonAlias actionModifierButton;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542608", Offset = "0x542608")]
		public Vector2 axisDeadzone;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool touchpadFirstChange;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		protected bool otherTouchpadControlEnabledState;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool primaryUndefinedForThumbstick;

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x82DB48", Offset = "0x82DB48", VA = "0x82DB48", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x82DBE8", Offset = "0x82DBE8", VA = "0x82DBE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5520DC", Offset = "0x5520DC")]
		private IEnumerator<float> DelayedThumbstickSetting()
		{
			return null;
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x82DC5C", Offset = "0x82DC5C", VA = "0x82DC5C", Slot = "6")]
		protected override void ControlFixedUpdate()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x82DDD8", Offset = "0x82DDD8", VA = "0x82DDD8", Slot = "7")]
		protected override VRTK_ObjectControl GetOtherControl()
		{
			return null;
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x82DF08", Offset = "0x82DF08", VA = "0x82DF08", Slot = "9")]
		protected override void SetListeners(bool state)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x82E090", Offset = "0x82E090", VA = "0x82E090", Slot = "8")]
		protected override bool IsInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x82E0E0", Offset = "0x82E0E0", VA = "0x82E0E0", Slot = "22")]
		protected virtual bool OutsideDeadzone(float axisValue, float deadzoneThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x82E0FC", Offset = "0x82E0FC", VA = "0x82E0FC", Slot = "23")]
		protected virtual bool ValidPrimaryButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x82E1B4", Offset = "0x82E1B4", VA = "0x82E1B4", Slot = "24")]
		protected virtual void ModifierButtonActive()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x82E270", Offset = "0x82E270", VA = "0x82E270", Slot = "25")]
		protected virtual bool TouchpadTouched()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x82E318", Offset = "0x82E318", VA = "0x82E318", Slot = "26")]
		protected virtual void TouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x82E4D8", Offset = "0x82E4D8", VA = "0x82E4D8", Slot = "27")]
		protected virtual void TouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x82E5B8", Offset = "0x82E5B8", VA = "0x82E5B8")]
		public VRTK_TouchpadControl()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public struct TouchpadMovementAxisEventArgs
	{
		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_TouchpadMovement.AxisMovementType movementType;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VRTK_TouchpadMovement.AxisMovementDirection direction;
	}
	[Token(Token = "0x200013A")]
	public delegate void TouchpadMovementAxisEventHandler(VRTK_TouchpadMovement sender, TouchpadMovementAxisEventArgs e);
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x536F1C", Offset = "0x536F1C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x536F1C", Offset = "0x536F1C")]
	public class VRTK_TouchpadMovement : MonoBehaviour
	{
		[Token(Token = "0x2000469")]
		public enum VerticalAxisMovement
		{
			[Token(Token = "0x40018A6")]
			None,
			[Token(Token = "0x40018A7")]
			Slide,
			[Token(Token = "0x40018A8")]
			Warp,
			[Token(Token = "0x40018A9")]
			WarpWithBlink
		}

		[Token(Token = "0x200046A")]
		public enum HorizontalAxisMovement
		{
			[Token(Token = "0x40018AB")]
			None,
			[Token(Token = "0x40018AC")]
			Slide,
			[Token(Token = "0x40018AD")]
			Rotate,
			[Token(Token = "0x40018AE")]
			SnapRotate,
			[Token(Token = "0x40018AF")]
			SnapRotateWithBlink,
			[Token(Token = "0x40018B0")]
			Warp,
			[Token(Token = "0x40018B1")]
			WarpWithBlink
		}

		[Token(Token = "0x200046B")]
		public enum AxisMovementType
		{
			[Token(Token = "0x40018B3")]
			Warp,
			[Token(Token = "0x40018B4")]
			FlipDirection,
			[Token(Token = "0x40018B5")]
			SnapRotate
		}

		[Token(Token = "0x200046C")]
		public enum AxisMovementDirection
		{
			[Token(Token = "0x40018B7")]
			None,
			[Token(Token = "0x40018B8")]
			Left,
			[Token(Token = "0x40018B9")]
			Right,
			[Token(Token = "0x40018BA")]
			Forward,
			[Token(Token = "0x40018BB")]
			Backward
		}

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542650", Offset = "0x542650")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542650", Offset = "0x542650")]
		public bool leftController;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5426B0", Offset = "0x5426B0")]
		public bool rightController;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5426E8", Offset = "0x5426E8")]
		public VRTK_ControllerEvents.ButtonAlias moveOnButtonPress;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542720", Offset = "0x542720")]
		public VRTK_ControllerEvents.ButtonAlias movementMultiplierButton;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542758", Offset = "0x542758")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542758", Offset = "0x542758")]
		public VerticalAxisMovement verticalAxisMovement;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5427B8", Offset = "0x5427B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5427B8", Offset = "0x5427B8")]
		public float verticalDeadzone;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54280C", Offset = "0x54280C")]
		public float verticalMultiplier;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542844", Offset = "0x542844")]
		public VRTK_DeviceFinder.Devices deviceForDirection;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54287C", Offset = "0x54287C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54287C", Offset = "0x54287C")]
		public bool flipDirectionEnabled;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5428DC", Offset = "0x5428DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5428DC", Offset = "0x5428DC")]
		public float flipDeadzone;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542930", Offset = "0x542930")]
		public float flipDelay;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542968", Offset = "0x542968")]
		public bool flipBlink;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5429A0", Offset = "0x5429A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5429A0", Offset = "0x5429A0")]
		public HorizontalAxisMovement horizontalAxisMovement;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542A00", Offset = "0x542A00")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x542A00", Offset = "0x542A00")]
		public float horizontalDeadzone;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542A54", Offset = "0x542A54")]
		public float horizontalMultiplier;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542A8C", Offset = "0x542A8C")]
		public float snapRotateDelay;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542AC4", Offset = "0x542AC4")]
		public float snapRotateAngle;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542AFC", Offset = "0x542AFC")]
		public float rotateMaxSpeed;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542B34", Offset = "0x542B34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542B34", Offset = "0x542B34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x542B34", Offset = "0x542B34")]
		public float blinkDurationMultiplier;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542BB0", Offset = "0x542BB0")]
		public float slideMaxSpeed;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542BE8", Offset = "0x542BE8")]
		public float slideDeceleration;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542C20", Offset = "0x542C20")]
		public float warpDelay;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542C58", Offset = "0x542C58")]
		public float warpRange;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542C90", Offset = "0x542C90")]
		public float warpMaxAltitudeChange;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject controllerLeftHand;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject controllerRightHand;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform playArea;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 touchAxis;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float movementSpeed;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float strafeSpeed;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float blinkFadeInTime;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lastWarp;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastFlip;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastSnapRotate;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool multiplyMovement;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CapsuleCollider bodyCollider;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform headset;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool leftSubscribed;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool rightSubscribed;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ControllerInteractionEventHandler touchpadAxisChanged;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ControllerInteractionEventHandler touchpadUntouched;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool wasFalling;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool previousLeftControllerState;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		private bool previousRightControllerState;

		[Token(Token = "0x140000D4")]
		public event TouchpadMovementAxisEventHandler AxisMovement
		{
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0xBF5918", Offset = "0xBF5918", VA = "0xBF5918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552140", Offset = "0x552140")]
			add
			{
			}
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xBF5A04", Offset = "0xBF5A04", VA = "0xBF5A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552150", Offset = "0x552150")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xBF5AF0", Offset = "0xBF5AF0", VA = "0xBF5AF0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xBF5B70", Offset = "0xBF5B70", VA = "0xBF5B70", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xBF61B8", Offset = "0xBF61B8", VA = "0xBF61B8", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xBF6204", Offset = "0xBF6204", VA = "0xBF6204", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xBF6284", Offset = "0xBF6284", VA = "0xBF6284", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xBF637C", Offset = "0xBF637C", VA = "0xBF637C", Slot = "9")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xBF7208", Offset = "0xBF7208", VA = "0xBF7208", Slot = "10")]
		protected virtual void HandleFalling()
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xBF7370", Offset = "0xBF7370", VA = "0xBF7370", Slot = "11")]
		protected virtual void CheckControllerState(GameObject controller, bool controllerState, ref bool subscribedState, ref bool previousState)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xBF73AC", Offset = "0xBF73AC", VA = "0xBF73AC")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xBF7608", Offset = "0xBF7608", VA = "0xBF7608")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xBF7678", Offset = "0xBF7678", VA = "0xBF7678")]
		private void OnAxisMovement(AxisMovementType givenMovementType, AxisMovementDirection givenDirection)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xBF6608", Offset = "0xBF6608", VA = "0xBF6608")]
		private void CalculateSpeed(bool horizontal, ref float speed, float inputValue)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xBF76A0", Offset = "0xBF76A0", VA = "0xBF76A0")]
		private void Decelerate(ref float speed)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xBF6F14", Offset = "0xBF6F14", VA = "0xBF6F14")]
		private void Move()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xBF6840", Offset = "0xBF6840", VA = "0xBF6840")]
		private void Warp(bool blink = false, bool horizontal = false)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xBF77AC", Offset = "0xBF77AC", VA = "0xBF77AC")]
		private void RotateAroundPlayer(float angle)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xBF664C", Offset = "0xBF664C", VA = "0xBF664C")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xBF66AC", Offset = "0xBF66AC", VA = "0xBF66AC")]
		private void SnapRotate(bool blink = false, bool flipDirection = false)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xBF79AC", Offset = "0xBF79AC", VA = "0xBF79AC")]
		private void ReleaseBlink()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xBF6100", Offset = "0xBF6100", VA = "0xBF6100")]
		private void SetControllerListeners(GameObject controller, bool controllerState, ref bool subscribedState, bool forceDisabled = false)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xBF7A5C", Offset = "0xBF7A5C", VA = "0xBF7A5C")]
		private void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xBF7C34", Offset = "0xBF7C34", VA = "0xBF7C34")]
		public VRTK_TouchpadMovement()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x536FA4", Offset = "0x536FA4")]
	public class VRTK_TouchpadWalking : MonoBehaviour
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542CC8", Offset = "0x542CC8")]
		public bool leftController;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542D00", Offset = "0x542D00")]
		public bool rightController;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542D38", Offset = "0x542D38")]
		public float maxWalkSpeed;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542D70", Offset = "0x542D70")]
		public float deceleration;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542DA8", Offset = "0x542DA8")]
		public VRTK_ControllerEvents.ButtonAlias moveOnButtonPress;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542DE0", Offset = "0x542DE0")]
		public VRTK_DeviceFinder.Devices deviceForDirection;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542E18", Offset = "0x542E18")]
		public VRTK_ControllerEvents.ButtonAlias speedMultiplierButton;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542E50", Offset = "0x542E50")]
		public float speedMultiplier;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject controllerLeftHand;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject controllerRightHand;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform playArea;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 touchAxis;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float movementSpeed;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float strafeSpeed;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool leftSubscribed;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rightSubscribed;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ControllerInteractionEventHandler touchpadAxisChanged;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ControllerInteractionEventHandler touchpadUntouched;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool multiplySpeed;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool wasFalling;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool previousLeftControllerState;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool previousRightControllerState;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xBF7CA8", Offset = "0xBF7CA8", VA = "0xBF7CA8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xBF7D28", Offset = "0xBF7D28", VA = "0xBF7D28", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xBF8064", Offset = "0xBF8064", VA = "0xBF8064", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xBF80B0", Offset = "0xBF80B0", VA = "0xBF80B0", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xBF8130", Offset = "0xBF8130", VA = "0xBF8130", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xBF8228", Offset = "0xBF8228", VA = "0xBF8228", Slot = "9")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xBF8598", Offset = "0xBF8598", VA = "0xBF8598", Slot = "10")]
		protected virtual void HandleFalling()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xBF8700", Offset = "0xBF8700", VA = "0xBF8700", Slot = "11")]
		protected virtual void CheckControllerState(GameObject controller, bool controllerState, ref bool subscribedState, ref bool previousState)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xBF873C", Offset = "0xBF873C", VA = "0xBF873C")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xBF8884", Offset = "0xBF8884", VA = "0xBF8884")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xBF8274", Offset = "0xBF8274", VA = "0xBF8274")]
		private void CalculateSpeed(ref float speed, float inputValue)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xBF88F4", Offset = "0xBF88F4", VA = "0xBF88F4")]
		private void Decelerate(ref float speed)
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xBF82A4", Offset = "0xBF82A4", VA = "0xBF82A4")]
		private void Move()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xBF7FAC", Offset = "0xBF7FAC", VA = "0xBF7FAC")]
		private void SetControllerListeners(GameObject controller, bool controllerState, ref bool subscribedState, bool forceDisabled = false)
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xBF8A0C", Offset = "0xBF8A0C", VA = "0xBF8A0C")]
		private void ToggleControllerListeners(GameObject controller, bool toggle, ref bool subscribed)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xBF8BE4", Offset = "0xBF8BE4", VA = "0xBF8BE4")]
		public VRTK_TouchpadWalking()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public abstract class VRTK_BasePointerRenderer : MonoBehaviour
	{
		[Token(Token = "0x200046D")]
		public enum VisibilityStates
		{
			[Token(Token = "0x40018BD")]
			OnWhenActive,
			[Token(Token = "0x40018BE")]
			AlwaysOn,
			[Token(Token = "0x40018BF")]
			AlwaysOff
		}

		[Serializable]
		[Token(Token = "0x200046E")]
		public sealed class PointerOriginSmoothingSettings
		{
			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E0B8", Offset = "0x54E0B8")]
			public bool smoothsPosition;

			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E0F0", Offset = "0x54E0F0")]
			public float maxAllowedPerFrameDistanceDifference;

			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E128", Offset = "0x54E128")]
			public bool smoothsRotation;

			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E160", Offset = "0x54E160")]
			public float maxAllowedPerFrameAngleDifference;

			[Token(Token = "0x60025EE")]
			[Address(RVA = "0x898F50", Offset = "0x898F50", VA = "0x898F50")]
			public PointerOriginSmoothingSettings()
			{
			}
		}

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542E88", Offset = "0x542E88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542E88", Offset = "0x542E88")]
		public VRTK_PlayAreaCursor playareaCursor;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542EE8", Offset = "0x542EE8")]
		public VRTK_PointerDirectionIndicator directionIndicator;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542F20", Offset = "0x542F20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542F20", Offset = "0x542F20")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542F80", Offset = "0x542F80")]
		public PointerOriginSmoothingSettings pointerOriginSmoothingSettings;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x542FB8", Offset = "0x542FB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x542FB8", Offset = "0x542FB8")]
		public Color validCollisionColor;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543018", Offset = "0x543018")]
		public Color invalidCollisionColor;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543050", Offset = "0x543050")]
		public VisibilityStates tracerVisibility;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543088", Offset = "0x543088")]
		public VisibilityStates cursorVisibility;

		[Token(Token = "0x4000A5D")]
		protected const float BEAM_ADJUST_OFFSET = 0.0001f;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_Pointer controllingPointer;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected RaycastHit destinationHit;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Material defaultMaterial;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Color previousColor;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Color currentColor;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected VRTK_PolicyList invalidListPolicy;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected VRTK_NavMeshData navMeshData;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected GameObject objectInteractor;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected GameObject objectInteractorAttachPoint;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected GameObject pointerOriginTransformFollowGameObject;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected VRTK_TransformFollow pointerOriginTransformFollow;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected VRTK_InteractGrab controllerGrabScript;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected Rigidbody savedAttachPoint;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected bool attachedToInteractorAttachPoint;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected float savedBeamLength;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected HashSet<GameObject> makeRendererVisible;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected bool tracerVisible;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		protected bool cursorVisible;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		protected LayerMask defaultIgnoreLayer;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected SDK_BaseController.ControllerHand cachedAttachedHand;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform cachedPointerAttachPoint;

		[Token(Token = "0x6000EA1")]
		public abstract GameObject[] GetPointerObjects();

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x736850", Offset = "0x736850", VA = "0x736850", Slot = "5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x552160", Offset = "0x552160")]
		public virtual void InitalizePointer(VRTK_Pointer givenPointer, VRTK_PolicyList givenInvalidListPolicy, float givenNavMeshCheckDistance, bool givenHeadsetPositionCompensation)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x736910", Offset = "0x736910", VA = "0x736910", Slot = "6")]
		public virtual void InitalizePointer(VRTK_Pointer givenPointer, VRTK_PolicyList givenInvalidListPolicy, VRTK_NavMeshData givenNavMeshData, bool givenHeadsetPositionCompensation)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x736A98", Offset = "0x736A98", VA = "0x736A98", Slot = "7")]
		public virtual void ResetPointerObjects()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x736AFC", Offset = "0x736AFC", VA = "0x736AFC", Slot = "8")]
		public virtual void Toggle(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x736C44", Offset = "0x736C44", VA = "0x736C44", Slot = "9")]
		public virtual void ToggleInteraction(bool state)
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x736C58", Offset = "0x736C58", VA = "0x736C58", Slot = "10")]
		public virtual void UpdateRenderer()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x736D90", Offset = "0x736D90", VA = "0x736D90", Slot = "11")]
		public virtual RaycastHit GetDestinationHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x736DAC", Offset = "0x736DAC", VA = "0x736DAC", Slot = "12")]
		public virtual bool ValidPlayArea()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x736E78", Offset = "0x736E78", VA = "0x736E78", Slot = "13")]
		public virtual bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x736EC8", Offset = "0x736EC8", VA = "0x736EC8", Slot = "14")]
		public virtual bool IsTracerVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x736EEC", Offset = "0x736EEC", VA = "0x736EEC", Slot = "15")]
		public virtual bool IsCursorVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x736F10", Offset = "0x736F10", VA = "0x736F10", Slot = "16")]
		public virtual bool IsValidCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x736F28", Offset = "0x736F28", VA = "0x736F28", Slot = "17")]
		public virtual GameObject GetObjectInteractor()
		{
			return null;
		}

		[Token(Token = "0x6000EAF")]
		protected abstract void CreatePointerObjects();

		[Token(Token = "0x6000EB0")]
		protected abstract void DestroyPointerObjects();

		[Token(Token = "0x6000EB1")]
		protected abstract void ToggleRenderer(bool pointerState, bool actualState);

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x736F30", Offset = "0x736F30", VA = "0x736F30", Slot = "21")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x736F34", Offset = "0x736F34", VA = "0x736F34", Slot = "22")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x73701C", Offset = "0x73701C", VA = "0x73701C", Slot = "23")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x7370EC", Offset = "0x7370EC", VA = "0x7370EC", Slot = "24")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x73716C", Offset = "0x73716C", VA = "0x73716C", Slot = "25")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x737250", Offset = "0x737250", VA = "0x737250", Slot = "26")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x73739C", Offset = "0x73739C", VA = "0x73739C", Slot = "27")]
		protected virtual void ToggleObjectInteraction(bool state)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x737640", Offset = "0x737640", VA = "0x737640", Slot = "28")]
		protected virtual void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x7376C4", Offset = "0x7376C4", VA = "0x7376C4", Slot = "29")]
		protected virtual VRTK_ControllerReference GetControllerReference([Optional] GameObject reference)
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x73780C", Offset = "0x73780C", VA = "0x73780C", Slot = "30")]
		protected virtual Transform GetPointerOriginTransform()
		{
			return null;
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x737AAC", Offset = "0x737AAC", VA = "0x737AAC", Slot = "31")]
		protected virtual void UpdatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x737D48", Offset = "0x737D48", VA = "0x737D48")]
		protected Transform GetOrigin(bool smoothed = true)
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x737E4C", Offset = "0x737E4C", VA = "0x737E4C", Slot = "32")]
		protected virtual void PointerEnter(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x737EBC", Offset = "0x737EBC", VA = "0x737EBC", Slot = "33")]
		protected virtual void PointerExit(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x737F2C", Offset = "0x737F2C", VA = "0x737F2C", Slot = "34")]
		protected virtual bool ValidDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x7380F8", Offset = "0x7380F8", VA = "0x7380F8", Slot = "35")]
		protected virtual void ToggleElement(GameObject givenObject, bool pointerState, bool actualState, VisibilityStates givenVisibility, ref bool currentVisible)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x738268", Offset = "0x738268", VA = "0x738268", Slot = "36")]
		protected virtual void AddVisibleRenderer(GameObject givenObject)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x7382D8", Offset = "0x7382D8", VA = "0x7382D8", Slot = "37")]
		protected virtual void MakeRenderersVisible()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x73844C", Offset = "0x73844C", VA = "0x73844C", Slot = "38")]
		protected virtual void ToggleRendererVisibility(GameObject givenObject, bool state)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x738558", Offset = "0x738558", VA = "0x738558", Slot = "39")]
		protected virtual void SetupMaterialRenderer(GameObject givenObject)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x73867C", Offset = "0x73867C", VA = "0x73867C", Slot = "40")]
		protected virtual void ChangeColor(Color givenColor)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x738898", Offset = "0x738898", VA = "0x738898", Slot = "41")]
		protected virtual void EmitStateEvent()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x738964", Offset = "0x738964", VA = "0x738964", Slot = "42")]
		protected virtual void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x738AE0", Offset = "0x738AE0", VA = "0x738AE0", Slot = "43")]
		protected virtual void ChangeMaterialColor(GameObject givenObject, Color givenColor)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x738DD8", Offset = "0x738DD8", VA = "0x738DD8", Slot = "44")]
		protected virtual void CreateObjectInteractor()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x7395E4", Offset = "0x7395E4", VA = "0x7395E4", Slot = "45")]
		protected virtual void ScaleObjectInteractor(Vector3 scaleAmount)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x7396B8", Offset = "0x7396B8", VA = "0x7396B8", Slot = "46")]
		protected virtual void CreatePointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x73989C", Offset = "0x73989C", VA = "0x73989C", Slot = "47")]
		protected virtual void DestroyPointerOriginTransformFollow()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x739948", Offset = "0x739948", VA = "0x739948", Slot = "48")]
		protected virtual float OverrideBeamLength(float currentLength)
		{
			return default(float);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x739B24", Offset = "0x739B24", VA = "0x739B24", Slot = "49")]
		protected virtual void UpdateDependencies(Vector3 location)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x739BF4", Offset = "0x739BF4", VA = "0x739BF4", Slot = "50")]
		protected virtual void SetupDirectionIndicator()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x739D28", Offset = "0x739D28", VA = "0x739D28", Slot = "51")]
		protected virtual void UpdateDirectionIndicator()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x739E60", Offset = "0x739E60", VA = "0x739E60", Slot = "52")]
		protected virtual bool ShowDirectionIndicator()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x739EEC", Offset = "0x739EEC", VA = "0x739EEC")]
		protected VRTK_BasePointerRenderer()
		{
		}
	}
	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x536FDC", Offset = "0x536FDC")]
	public class VRTK_BezierPointerRenderer : VRTK_BasePointerRenderer
	{
		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5430C0", Offset = "0x5430C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5430C0", Offset = "0x5430C0")]
		public Vector2 maximumLength;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543120", Offset = "0x543120")]
		public int tracerDensity;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543158", Offset = "0x543158")]
		public float cursorRadius;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543190", Offset = "0x543190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543190", Offset = "0x543190")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x543190", Offset = "0x543190")]
		public float heightLimitAngle;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54320C", Offset = "0x54320C")]
		public float curveOffset;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543244", Offset = "0x543244")]
		public bool rescaleTracer;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54327C", Offset = "0x54327C")]
		public bool cursorMatchTargetRotation;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5432B4", Offset = "0x5432B4")]
		public int collisionCheckFrequency;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5432EC", Offset = "0x5432EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5432EC", Offset = "0x5432EC")]
		public GameObject customTracer;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54334C", Offset = "0x54334C")]
		public GameObject customCursor;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543384", Offset = "0x543384")]
		public GameObject validLocationObject;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5433BC", Offset = "0x5433BC")]
		public GameObject invalidLocationObject;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected VRTK_CurveGenerator actualTracer;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected GameObject actualContainer;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected GameObject actualCursor;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected GameObject actualValidLocationObject;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		protected GameObject actualInvalidLocationObject;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		protected Vector3 fixedForwardBeamForward;

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x89B45C", Offset = "0x89B45C", VA = "0x89B45C", Slot = "10")]
		public override void UpdateRenderer()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x89B59C", Offset = "0x89B59C", VA = "0x89B59C", Slot = "4")]
		public override GameObject[] GetPointerObjects()
		{
			return null;
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x89B6A4", Offset = "0x89B6A4", VA = "0x89B6A4", Slot = "20")]
		protected override void ToggleRenderer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x89B7F4", Offset = "0x89B7F4", VA = "0x89B7F4", Slot = "18")]
		protected override void CreatePointerObjects()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x89BA68", Offset = "0x89BA68", VA = "0x89BA68", Slot = "19")]
		protected override void DestroyPointerObjects()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x89BBCC", Offset = "0x89BBCC", VA = "0x89BBCC", Slot = "28")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x89BE04", Offset = "0x89BE04", VA = "0x89BE04", Slot = "42")]
		protected override void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x89BE6C", Offset = "0x89BE6C", VA = "0x89BE6C", Slot = "53")]
		protected virtual void CreateTracer()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x89BF70", Offset = "0x89BF70", VA = "0x89BF70", Slot = "54")]
		protected virtual GameObject CreateCursorObject()
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x89C138", Offset = "0x89C138", VA = "0x89C138", Slot = "55")]
		protected virtual void CreateCursorLocations()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x89C600", Offset = "0x89C600", VA = "0x89C600", Slot = "56")]
		protected virtual void CreateCursor()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x89C864", Offset = "0x89C864", VA = "0x89C864", Slot = "57")]
		protected virtual Vector3 ProjectForwardBeam()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x89CBE4", Offset = "0x89CBE4", VA = "0x89CBE4", Slot = "58")]
		protected virtual Vector3 ProjectDownBeam(Vector3 jointPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x89CF10", Offset = "0x89CF10", VA = "0x89CF10", Slot = "59")]
		protected virtual void AdjustForEarlyCollisions(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x89D51C", Offset = "0x89D51C", VA = "0x89D51C", Slot = "60")]
		protected virtual void DisplayCurvedBeam(Vector3 jointPosition, Vector3 downPosition)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x89D868", Offset = "0x89D868", VA = "0x89D868", Slot = "61")]
		protected virtual void TogglePointerCursor(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x89D894", Offset = "0x89D894", VA = "0x89D894", Slot = "62")]
		protected virtual void TogglePointerTracer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x89D974", Offset = "0x89D974", VA = "0x89D974", Slot = "63")]
		protected virtual void SetPointerCursor()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x89DDF0", Offset = "0x89DDF0", VA = "0x89DDF0")]
		public VRTK_BezierPointerRenderer()
		{
		}
	}
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x537014", Offset = "0x537014")]
	public class VRTK_StraightPointerRenderer : VRTK_BasePointerRenderer
	{
		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5433F4", Offset = "0x5433F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5433F4", Offset = "0x5433F4")]
		public float maximumLength;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543454", Offset = "0x543454")]
		public float scaleFactor;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54348C", Offset = "0x54348C")]
		public float cursorScaleMultiplier;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5434C4", Offset = "0x5434C4")]
		public bool cursorMatchTargetRotation;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5434FC", Offset = "0x5434FC")]
		public bool cursorDistanceRescale;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543534", Offset = "0x543534")]
		public Vector3 maximumCursorScale;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54356C", Offset = "0x54356C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54356C", Offset = "0x54356C")]
		public GameObject customTracer;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5435CC", Offset = "0x5435CC")]
		public GameObject customCursor;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected GameObject actualContainer;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected GameObject actualTracer;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected GameObject actualCursor;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected Vector3 cursorOriginalScale;

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x82B3B4", Offset = "0x82B3B4", VA = "0x82B3B4", Slot = "10")]
		public override void UpdateRenderer()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x82B4AC", Offset = "0x82B4AC", VA = "0x82B4AC", Slot = "4")]
		public override GameObject[] GetPointerObjects()
		{
			return null;
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x82B600", Offset = "0x82B600", VA = "0x82B600", Slot = "20")]
		protected override void ToggleRenderer(bool pointerState, bool actualState)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x82B678", Offset = "0x82B678", VA = "0x82B678", Slot = "18")]
		protected override void CreatePointerObjects()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x82BA90", Offset = "0x82BA90", VA = "0x82BA90", Slot = "19")]
		protected override void DestroyPointerObjects()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x82BB44", Offset = "0x82BB44", VA = "0x82BB44", Slot = "42")]
		protected override void ChangeMaterial(Color givenColor)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x82BBD4", Offset = "0x82BBD4", VA = "0x82BBD4", Slot = "28")]
		protected override void UpdateObjectInteractor()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x82BE0C", Offset = "0x82BE0C", VA = "0x82BE0C", Slot = "53")]
		protected virtual void CreateTracer()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x82C15C", Offset = "0x82C15C", VA = "0x82C15C", Slot = "54")]
		protected virtual void CreateCursor()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x82C58C", Offset = "0x82C58C", VA = "0x82C58C", Slot = "55")]
		protected virtual void CheckRayMiss(bool rayHit, RaycastHit pointerCollidedWith)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x82C740", Offset = "0x82C740", VA = "0x82C740", Slot = "56")]
		protected virtual void CheckRayHit(bool rayHit, RaycastHit pointerCollidedWith)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x82C7E4", Offset = "0x82C7E4", VA = "0x82C7E4", Slot = "57")]
		protected virtual float CastRayForward()
		{
			return default(float);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x82C9B4", Offset = "0x82C9B4", VA = "0x82C9B4", Slot = "58")]
		protected virtual void SetPointerAppearance(float tracerLength)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x82CFBC", Offset = "0x82CFBC", VA = "0x82CFBC")]
		public VRTK_StraightPointerRenderer()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public struct DestinationMarkerEventArgs
	{
		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform target;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 destinationPosition;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion? destinationRotation;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool forceDestinationPosition;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool enableTeleport;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x2000141")]
	public delegate void DestinationMarkerEventHandler(object sender, DestinationMarkerEventArgs e);
	[Token(Token = "0x2000142")]
	public abstract class VRTK_DestinationMarker : MonoBehaviour
	{
		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543604", Offset = "0x543604")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543604", Offset = "0x543604")]
		public bool enableTeleport;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543674", Offset = "0x543674")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5436EC", Offset = "0x5436EC")]
		protected float navMeshCheckDistance;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_NavMeshData navmeshData;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool forceHoverOnRepeatedEnter;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Collider existingCollider;

		[Token(Token = "0x140000D5")]
		public event DestinationMarkerEventHandler DestinationMarkerEnter
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x957DF8", Offset = "0x957DF8", VA = "0x957DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552198", Offset = "0x552198")]
			add
			{
			}
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x957EE4", Offset = "0x957EE4", VA = "0x957EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5521A8", Offset = "0x5521A8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D6")]
		public event DestinationMarkerEventHandler DestinationMarkerExit
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x957FD0", Offset = "0x957FD0", VA = "0x957FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5521B8", Offset = "0x5521B8")]
			add
			{
			}
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x9580BC", Offset = "0x9580BC", VA = "0x9580BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5521C8", Offset = "0x5521C8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D7")]
		public event DestinationMarkerEventHandler DestinationMarkerHover
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x9581A8", Offset = "0x9581A8", VA = "0x9581A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5521D8", Offset = "0x5521D8")]
			add
			{
			}
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x958294", Offset = "0x958294", VA = "0x958294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5521E8", Offset = "0x5521E8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000D8")]
		public event DestinationMarkerEventHandler DestinationMarkerSet
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x958380", Offset = "0x958380", VA = "0x958380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5521F8", Offset = "0x5521F8")]
			add
			{
			}
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x95846C", Offset = "0x95846C", VA = "0x95846C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552208", Offset = "0x552208")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x958558", Offset = "0x958558", VA = "0x958558", Slot = "4")]
		public virtual void OnDestinationMarkerEnter(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x9586F4", Offset = "0x9586F4", VA = "0x9586F4", Slot = "5")]
		public virtual void OnDestinationMarkerExit(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x958744", Offset = "0x958744", VA = "0x958744", Slot = "6")]
		public virtual void OnDestinationMarkerHover(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x958790", Offset = "0x958790", VA = "0x958790", Slot = "7")]
		public virtual void OnDestinationMarkerSet(DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x9587DC", Offset = "0x9587DC", VA = "0x9587DC", Slot = "8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x552218", Offset = "0x552218")]
		public virtual void SetNavMeshCheckDistance(float distance)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x958874", Offset = "0x958874", VA = "0x958874", Slot = "9")]
		public virtual void SetNavMeshData(VRTK_NavMeshData givenData)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x95887C", Offset = "0x95887C", VA = "0x95887C", Slot = "10")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x958888", Offset = "0x958888", VA = "0x958888", Slot = "11")]
		public virtual void SetForceHoverOnRepeatedEnter(bool state)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x958894", Offset = "0x958894", VA = "0x958894", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x958920", Offset = "0x958920", VA = "0x958920", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x9589AC", Offset = "0x9589AC", VA = "0x9589AC", Slot = "14")]
		protected virtual DestinationMarkerEventArgs SetDestinationMarkerEvent(float distance, Transform target, RaycastHit raycastHit, Vector3 position, VRTK_ControllerReference controllerReference, bool forceDestinationPosition = false, [Optional] Quaternion? rotation)
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x958A28", Offset = "0x958A28", VA = "0x958A28")]
		protected VRTK_DestinationMarker()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public struct PlayAreaCursorEventArgs
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;
	}
	[Token(Token = "0x2000144")]
	public delegate void PlayAreaCursorEventHandler(object sender, PlayAreaCursorEventArgs e);
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53704C", Offset = "0x53704C")]
	public class VRTK_PlayAreaCursor : MonoBehaviour
	{
		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543724", Offset = "0x543724")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543724", Offset = "0x543724")]
		public bool usePointerColor;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543784", Offset = "0x543784")]
		public Vector2 playAreaCursorDimensions;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5437BC", Offset = "0x5437BC")]
		public bool handlePlayAreaCursorCollisions;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5437F4", Offset = "0x5437F4")]
		public bool headsetOutOfBoundsIsCollision;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54382C", Offset = "0x54382C")]
		public bool displayOnInvalidLocation;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543864", Offset = "0x543864")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54389C", Offset = "0x54389C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54389C", Offset = "0x54389C")]
		public VRTK_PointerDirectionIndicator directionIndicator;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5438FC", Offset = "0x5438FC")]
		public GameObject validLocationObject;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543934", Offset = "0x543934")]
		public GameObject invalidLocationObject;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool headsetPositionCompensation;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool playAreaCursorCollided;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		protected bool headsetOutOfBounds;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform playArea;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject playAreaCursor;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected GameObject[] playAreaCursorBoundaries;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected BoxCollider playAreaCursorCollider;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform headset;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Renderer[] boundaryRenderers;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected GameObject playAreaCursorValidChild;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GameObject playAreaCursorInvalidChild;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected int btmRightInner;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected int btmLeftInner;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected int topLeftInner;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected int topRightInner;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected int btmRightOuter;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int btmLeftOuter;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int topLeftOuter;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected int topRightOuter;

		[Token(Token = "0x140000D9")]
		public event PlayAreaCursorEventHandler PlayAreaCursorStartCollision
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0x783B9C", Offset = "0x783B9C", VA = "0x783B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552250", Offset = "0x552250")]
			add
			{
			}
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x783C88", Offset = "0x783C88", VA = "0x783C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552260", Offset = "0x552260")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DA")]
		public event PlayAreaCursorEventHandler PlayAreaCursorEndCollision
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x783D74", Offset = "0x783D74", VA = "0x783D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552270", Offset = "0x552270")]
			add
			{
			}
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0x783E60", Offset = "0x783E60", VA = "0x783E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552280", Offset = "0x552280")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x783F4C", Offset = "0x783F4C", VA = "0x783F4C", Slot = "4")]
		public virtual void OnPlayAreaCursorStartCollision(PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x783F70", Offset = "0x783F70", VA = "0x783F70", Slot = "5")]
		public virtual void OnPlayAreaCursorEndCollision(PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x783F94", Offset = "0x783F94", VA = "0x783F94", Slot = "6")]
		public virtual bool HasCollided()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x783FB4", Offset = "0x783FB4", VA = "0x783FB4", Slot = "7")]
		public virtual void SetHeadsetPositionCompensation(bool state)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x783FC0", Offset = "0x783FC0", VA = "0x783FC0", Slot = "8")]
		public virtual void SetPlayAreaCursorCollision(bool state, [Optional] Collider collider)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x784034", Offset = "0x784034", VA = "0x784034", Slot = "9")]
		public virtual void SetMaterialColor(Color color, bool validity)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x7841F4", Offset = "0x7841F4", VA = "0x7841F4", Slot = "10")]
		public virtual void SetPlayAreaCursorTransform(Vector3 location)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x7846D8", Offset = "0x7846D8", VA = "0x7846D8", Slot = "11")]
		public virtual void ToggleState(bool state)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x7847A0", Offset = "0x7847A0", VA = "0x7847A0", Slot = "12")]
		public virtual bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x784840", Offset = "0x784840", VA = "0x784840", Slot = "13")]
		public virtual GameObject GetPlayAreaContainer()
		{
			return null;
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x784848", Offset = "0x784848", VA = "0x784848", Slot = "14")]
		public virtual void ToggleVisibility(bool state)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x7849F4", Offset = "0x7849F4", VA = "0x7849F4", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x784A74", Offset = "0x784A74", VA = "0x784A74", Slot = "16")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x784C04", Offset = "0x784C04", VA = "0x784C04", Slot = "17")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x784CB8", Offset = "0x784CB8", VA = "0x784CB8", Slot = "18")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x784D38", Offset = "0x784D38", VA = "0x784D38", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x784D90", Offset = "0x784D90", VA = "0x784D90", Slot = "20")]
		protected virtual PlayAreaCursorEventArgs SetEventPayload(Collider collider)
		{
			return default(PlayAreaCursorEventArgs);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x784D98", Offset = "0x784D98", VA = "0x784D98", Slot = "21")]
		protected virtual void EmitEvent(Collider collider)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x784E60", Offset = "0x784E60", VA = "0x784E60", Slot = "22")]
		protected virtual void InitPlayAreaCursor()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x785480", Offset = "0x785480", VA = "0x785480", Slot = "23")]
		protected virtual void SetCursorColor(GameObject cursorObject, Color color)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x78565C", Offset = "0x78565C", VA = "0x78565C", Slot = "24")]
		protected virtual void ToggleValidPlayAreaState(bool state)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x785770", Offset = "0x785770", VA = "0x785770", Slot = "25")]
		protected virtual string GeneratePlayAreaCursorName()
		{
			return null;
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x7858A8", Offset = "0x7858A8", VA = "0x7858A8", Slot = "26")]
		protected virtual void GeneratePlayAreaCursorFromPrefab(Vector3[] cursorDrawVertices)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x785F24", Offset = "0x785F24", VA = "0x785F24", Slot = "27")]
		protected virtual void GeneratePlayAreaCursor(Vector3[] cursorDrawVertices)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x786AE4", Offset = "0x786AE4", VA = "0x786AE4", Slot = "28")]
		protected virtual void DrawPlayAreaCursorBoundary(int index, float left, float right, float top, float bottom, float thickness, Vector3 localPosition)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x786F30", Offset = "0x786F30", VA = "0x786F30", Slot = "29")]
		protected virtual void CreateCursorCollider(GameObject cursor)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x787050", Offset = "0x787050", VA = "0x787050", Slot = "30")]
		protected virtual void UpdateCollider()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x787214", Offset = "0x787214", VA = "0x787214")]
		public VRTK_PlayAreaCursor()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class VRTK_PlayAreaCollider : MonoBehaviour
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_PlayAreaCursor parent;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x7836C0", Offset = "0x7836C0", VA = "0x7836C0", Slot = "4")]
		public virtual void SetParent(VRTK_PlayAreaCursor setParent)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x7836C8", Offset = "0x7836C8", VA = "0x7836C8", Slot = "5")]
		public virtual void SetIgnoreTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x7836D0", Offset = "0x7836D0", VA = "0x7836D0", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x783778", Offset = "0x783778", VA = "0x783778", Slot = "7")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x7838A0", Offset = "0x7838A0", VA = "0x7838A0", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x783970", Offset = "0x783970", VA = "0x783970", Slot = "9")]
		protected virtual bool ValidTarget(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x783B94", Offset = "0x783B94", VA = "0x783B94")]
		public VRTK_PlayAreaCollider()
		{
		}
	}
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x537084", Offset = "0x537084")]
	public class VRTK_Pointer : VRTK_DestinationMarker
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54398C", Offset = "0x54398C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54398C", Offset = "0x54398C")]
		public VRTK_BasePointerRenderer pointerRenderer;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5439EC", Offset = "0x5439EC")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543A24", Offset = "0x543A24")]
		public bool holdButtonToActivate;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543A5C", Offset = "0x543A5C")]
		public bool activateOnEnable;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543A94", Offset = "0x543A94")]
		public float activationDelay;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543ACC", Offset = "0x543ACC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543ACC", Offset = "0x543ACC")]
		public VRTK_ControllerEvents.ButtonAlias selectionButton;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543B2C", Offset = "0x543B2C")]
		public bool selectOnPress;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543B64", Offset = "0x543B64")]
		public float selectionDelay;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543B9C", Offset = "0x543B9C")]
		public float selectAfterHoverDuration;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543BD4", Offset = "0x543BD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543BD4", Offset = "0x543BD4")]
		public bool interactWithObjects;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543C34", Offset = "0x543C34")]
		public bool grabToPointerTip;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543C6C", Offset = "0x543C6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543C6C", Offset = "0x543C6C")]
		public GameObject attachedTo;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543CCC", Offset = "0x543CCC")]
		public VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543D04", Offset = "0x543D04")]
		public VRTK_InteractUse interactUse;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543D3C", Offset = "0x543D3C")]
		public Transform customOrigin;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543D74", Offset = "0x543D74")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedActivationButton;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected VRTK_ControllerEvents.ButtonAlias subscribedSelectionButton;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected bool currentSelectOnPress;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		protected float activateDelayTimer;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected float selectDelayTimer;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected float hoverDurationTimer;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected int currentActivationState;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected bool willDeactivate;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		protected bool wasActivated;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected VRTK_InteractableObject pointerInteractableObject;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected Collider currentCollider;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected bool canClickOnHover;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		protected bool activationButtonPressed;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		protected bool selectionButtonPressed;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		protected bool attemptControllerSetup;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected VRTK_StraightPointerRenderer autogenPointerRenderer;

		[Token(Token = "0x140000DB")]
		public event ControllerInteractionEventHandler ActivationButtonPressed
		{
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x789224", Offset = "0x789224", VA = "0x789224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552290", Offset = "0x552290")]
			add
			{
			}
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x789310", Offset = "0x789310", VA = "0x789310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5522A0", Offset = "0x5522A0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DC")]
		public event ControllerInteractionEventHandler ActivationButtonReleased
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x7893FC", Offset = "0x7893FC", VA = "0x7893FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5522B0", Offset = "0x5522B0")]
			add
			{
			}
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x7894E8", Offset = "0x7894E8", VA = "0x7894E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5522C0", Offset = "0x5522C0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DD")]
		public event ControllerInteractionEventHandler SelectionButtonPressed
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x7895D4", Offset = "0x7895D4", VA = "0x7895D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5522D0", Offset = "0x5522D0")]
			add
			{
			}
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0x7896C0", Offset = "0x7896C0", VA = "0x7896C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5522E0", Offset = "0x5522E0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DE")]
		public event ControllerInteractionEventHandler SelectionButtonReleased
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0x7897AC", Offset = "0x7897AC", VA = "0x7897AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5522F0", Offset = "0x5522F0")]
			add
			{
			}
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0x789898", Offset = "0x789898", VA = "0x789898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552300", Offset = "0x552300")]
			remove
			{
			}
		}

		[Token(Token = "0x140000DF")]
		public event DestinationMarkerEventHandler PointerStateValid
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x789984", Offset = "0x789984", VA = "0x789984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552310", Offset = "0x552310")]
			add
			{
			}
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0x789A70", Offset = "0x789A70", VA = "0x789A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552320", Offset = "0x552320")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E0")]
		public event DestinationMarkerEventHandler PointerStateInvalid
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x789B5C", Offset = "0x789B5C", VA = "0x789B5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552330", Offset = "0x552330")]
			add
			{
			}
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x789C48", Offset = "0x789C48", VA = "0x789C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552340", Offset = "0x552340")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x789D34", Offset = "0x789D34", VA = "0x789D34", Slot = "15")]
		public virtual void OnActivationButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x789D78", Offset = "0x789D78", VA = "0x789D78", Slot = "16")]
		public virtual void OnActivationButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x789DBC", Offset = "0x789DBC", VA = "0x789DBC", Slot = "17")]
		public virtual void OnSelectionButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x789E00", Offset = "0x789E00", VA = "0x789E00", Slot = "18")]
		public virtual void OnSelectionButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x789E44", Offset = "0x789E44", VA = "0x789E44", Slot = "19")]
		public virtual void OnPointerStateValid()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x789EAC", Offset = "0x789EAC", VA = "0x789EAC", Slot = "20")]
		public virtual void OnPointerStateInvalid()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x789F14", Offset = "0x789F14", VA = "0x789F14", Slot = "21")]
		public virtual bool IsActivationButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x789F1C", Offset = "0x789F1C", VA = "0x789F1C", Slot = "22")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x789F24", Offset = "0x789F24", VA = "0x789F24", Slot = "23")]
		public virtual void PointerEnter(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x78A290", Offset = "0x78A290", VA = "0x78A290", Slot = "24")]
		public virtual void PointerExit(RaycastHit givenHit)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x78A4DC", Offset = "0x78A4DC", VA = "0x78A4DC", Slot = "25")]
		public virtual bool CanActivate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x78A50C", Offset = "0x78A50C", VA = "0x78A50C", Slot = "26")]
		public virtual bool CanSelect()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x78A53C", Offset = "0x78A53C", VA = "0x78A53C", Slot = "27")]
		public virtual bool IsPointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x78A54C", Offset = "0x78A54C", VA = "0x78A54C", Slot = "28")]
		public virtual void ResetActivationTimer(bool forceZero = false)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x78A59C", Offset = "0x78A59C", VA = "0x78A59C", Slot = "29")]
		public virtual void ResetSelectionTimer(bool forceZero = false)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x78A5EC", Offset = "0x78A5EC", VA = "0x78A5EC", Slot = "30")]
		public virtual void Toggle(bool state)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x78A718", Offset = "0x78A718", VA = "0x78A718", Slot = "31")]
		public virtual bool IsStateValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x78A778", Offset = "0x78A778", VA = "0x78A778", Slot = "32")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x78A7F8", Offset = "0x78A7F8", VA = "0x78A7F8", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x78A954", Offset = "0x78A954", VA = "0x78A954", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x78AAAC", Offset = "0x78AAAC", VA = "0x78AAAC", Slot = "33")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x78AB2C", Offset = "0x78AB2C", VA = "0x78AB2C", Slot = "34")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x78AB7C", Offset = "0x78AB7C", VA = "0x78AB7C", Slot = "35")]
		protected virtual void SetDefaultValues()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x78ABC0", Offset = "0x78ABC0", VA = "0x78ABC0", Slot = "36")]
		protected virtual void AttemptControllerSetup()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x78AC50", Offset = "0x78AC50", VA = "0x78AC50", Slot = "37")]
		protected virtual void HandleEnabledPointer()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x78AD90", Offset = "0x78AD90", VA = "0x78AD90", Slot = "38")]
		protected virtual Quaternion? GetCursorRotation()
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x78AEE4", Offset = "0x78AEE4", VA = "0x78AEE4", Slot = "39")]
		protected virtual bool EnabledPointerRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x78AF84", Offset = "0x78AF84", VA = "0x78AF84", Slot = "40")]
		protected virtual bool NoPointerRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x78B028", Offset = "0x78B028", VA = "0x78B028", Slot = "41")]
		protected virtual bool CanActivateOnToggleButton(bool state)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x78B078", Offset = "0x78B078", VA = "0x78B078", Slot = "42")]
		protected virtual bool ControllerRequired()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x78B098", Offset = "0x78B098", VA = "0x78B098", Slot = "43")]
		protected virtual bool FindController()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x78B3C0", Offset = "0x78B3C0", VA = "0x78B3C0", Slot = "44")]
		protected virtual void GetInteractUse()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x78B4F0", Offset = "0x78B4F0", VA = "0x78B4F0", Slot = "45")]
		protected virtual void SetupController()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x78B5AC", Offset = "0x78B5AC", VA = "0x78B5AC", Slot = "46")]
		protected virtual void SetupRenderer()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x78B6B4", Offset = "0x78B6B4", VA = "0x78B6B4", Slot = "47")]
		protected virtual VRTK_BasePointerRenderer GeneratePointerRenderer()
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x78B808", Offset = "0x78B808", VA = "0x78B808", Slot = "48")]
		protected virtual bool ButtonMappingIsUndefined(VRTK_ControllerEvents.ButtonAlias givenButton, VRTK_ControllerEvents.ButtonAlias givenSubscribedButton)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x78B820", Offset = "0x78B820", VA = "0x78B820", Slot = "49")]
		protected virtual void CheckButtonMappingConflict()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x78B908", Offset = "0x78B908", VA = "0x78B908", Slot = "50")]
		protected virtual void CheckButtonSubscriptions()
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x78BA20", Offset = "0x78BA20", VA = "0x78BA20", Slot = "51")]
		protected virtual void SubscribeActivationButton()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x78BB7C", Offset = "0x78BB7C", VA = "0x78BB7C", Slot = "52")]
		protected virtual void UnsubscribeActivationButton()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x78BCBC", Offset = "0x78BCBC", VA = "0x78BCBC", Slot = "53")]
		protected virtual void PointerActivated()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x78BD0C", Offset = "0x78BD0C", VA = "0x78BD0C", Slot = "54")]
		protected virtual void PointerDeactivated()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x78BD74", Offset = "0x78BD74", VA = "0x78BD74", Slot = "55")]
		protected virtual void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x78BE1C", Offset = "0x78BE1C", VA = "0x78BE1C", Slot = "56")]
		protected virtual void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x78BEC0", Offset = "0x78BEC0", VA = "0x78BEC0", Slot = "57")]
		protected virtual void SubscribeSelectionButton()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x78C080", Offset = "0x78C080", VA = "0x78C080", Slot = "58")]
		protected virtual void UnsubscribeSelectionButton()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x78C220", Offset = "0x78C220", VA = "0x78C220", Slot = "59")]
		protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x78C2AC", Offset = "0x78C2AC", VA = "0x78C2AC", Slot = "60")]
		protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x78C338", Offset = "0x78C338", VA = "0x78C338", Slot = "61")]
		protected virtual void SelectionButtonAction(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x78C350", Offset = "0x78C350", VA = "0x78C350", Slot = "62")]
		protected virtual void ExecuteSelectionButtonAction()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x78C684", Offset = "0x78C684", VA = "0x78C684", Slot = "63")]
		protected virtual bool CanResetActivationState(bool givenState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x78C6B4", Offset = "0x78C6B4", VA = "0x78C6B4", Slot = "64")]
		protected virtual void ManageActivationState(bool state)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x78C70C", Offset = "0x78C70C", VA = "0x78C70C", Slot = "65")]
		protected virtual bool PointerActivatesUseAction(VRTK_InteractableObject givenInteractableObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x78C808", Offset = "0x78C808", VA = "0x78C808", Slot = "66")]
		protected virtual void StartUseAction(Transform target)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x78C9E4", Offset = "0x78C9E4", VA = "0x78C9E4", Slot = "67")]
		protected virtual void StopUseAction()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x78CB08", Offset = "0x78CB08", VA = "0x78CB08", Slot = "68")]
		protected virtual void AttemptUseOnSet(Transform target)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x78CCEC", Offset = "0x78CCEC", VA = "0x78CCEC", Slot = "69")]
		protected virtual void SetHoverSelectionTimer(Collider collider)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x78CD9C", Offset = "0x78CD9C", VA = "0x78CD9C", Slot = "70")]
		protected virtual void ResetHoverSelectionTimer(Collider collider)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x78CE30", Offset = "0x78CE30", VA = "0x78CE30", Slot = "71")]
		protected virtual void CheckHoverSelect()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x78CEA4", Offset = "0x78CEA4", VA = "0x78CEA4", Slot = "72")]
		protected virtual DestinationMarkerEventArgs GetStateEventPayload()
		{
			return default(DestinationMarkerEventArgs);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x78D04C", Offset = "0x78D04C", VA = "0x78D04C")]
		public VRTK_Pointer()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public struct BodyPhysicsEventArgs
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collider collider;
	}
	[Token(Token = "0x2000149")]
	public delegate void BodyPhysicsEventHandler(object sender, BodyPhysicsEventArgs e);
	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5370BC", Offset = "0x5370BC")]
	public class VRTK_BodyPhysics : VRTK_DestinationMarker
	{
		[Token(Token = "0x200046F")]
		public enum FallingRestrictors
		{
			[Token(Token = "0x40018C5")]
			NoRestriction,
			[Token(Token = "0x40018C6")]
			LeftController,
			[Token(Token = "0x40018C7")]
			RightController,
			[Token(Token = "0x40018C8")]
			EitherController,
			[Token(Token = "0x40018C9")]
			BothControllers
		}

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539918", Offset = "0x539918")]
		private sealed class <RestoreCollisions>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject obj;

			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_BodyPhysics <>4__this;

			[Token(Token = "0x1700024A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025F2")]
				[Address(RVA = "0x8A61E8", Offset = "0x8A61E8", VA = "0x8A61E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025F4")]
				[Address(RVA = "0x8A6258", Offset = "0x8A6258", VA = "0x8A6258", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025EF")]
			[Address(RVA = "0x8A4820", Offset = "0x8A4820", VA = "0x8A4820")]
			[DebuggerHidden]
			public <RestoreCollisions>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x60025F0")]
			[Address(RVA = "0x8A6044", Offset = "0x8A6044", VA = "0x8A6044", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025F1")]
			[Address(RVA = "0x8A6048", Offset = "0x8A6048", VA = "0x8A6048", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025F3")]
			[Address(RVA = "0x8A61F0", Offset = "0x8A61F0", VA = "0x8A61F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543E0C", Offset = "0x543E0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543E0C", Offset = "0x543E0C")]
		public bool enableBodyCollisions;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543E6C", Offset = "0x543E6C")]
		public bool ignoreGrabbedCollisions;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543EA4", Offset = "0x543EA4")]
		public GameObject[] ignoreCollisionsWith;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543EDC", Offset = "0x543EDC")]
		public float headsetYOffset;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543F14", Offset = "0x543F14")]
		public float movementThreshold;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543F4C", Offset = "0x543F4C")]
		public float playAreaMovementThreshold;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543F84", Offset = "0x543F84")]
		public int standingHistorySamples;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543FBC", Offset = "0x543FBC")]
		public float leanYThreshold;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x543FF4", Offset = "0x543FF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x543FF4", Offset = "0x543FF4")]
		public float stepUpYOffset;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544054", Offset = "0x544054")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x544054", Offset = "0x544054")]
		public float stepThicknessMultiplier;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5440B0", Offset = "0x5440B0")]
		public float stepDropThreshold;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5440E8", Offset = "0x5440E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5440E8", Offset = "0x5440E8")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544148", Offset = "0x544148")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x544148", Offset = "0x544148")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5441A8", Offset = "0x5441A8")]
		public FallingRestrictors fallRestriction;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5441E0", Offset = "0x5441E0")]
		public float gravityFallYThreshold;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544218", Offset = "0x544218")]
		public float blinkYThreshold;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544250", Offset = "0x544250")]
		public float floorHeightTolerance;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x544288", Offset = "0x544288")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544288", Offset = "0x544288")]
		public int fallCheckPrecision;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5442DC", Offset = "0x5442DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5442DC", Offset = "0x5442DC")]
		public VRTK_BasicTeleport teleporter;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54433C", Offset = "0x54433C")]
		public GameObject customBodyColliderContainer;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544374", Offset = "0x544374")]
		public GameObject customFootColliderContainer;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected Transform playArea;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected Transform headset;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		protected Rigidbody bodyRigidbody;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		protected GameObject bodyColliderContainer;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected GameObject footColliderContainer;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected CapsuleCollider bodyCollider;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected CapsuleCollider footCollider;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected VRTK_CollisionTracker collisionTracker;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected bool currentBodyCollisionsSetting;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		protected GameObject currentCollidingObject;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected GameObject currentValidFloorObject;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		protected float lastFrameFloorY;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		protected float hitFloorYDelta;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected bool initialFloorDrop;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		protected bool resetPhysicsAfterTeleport;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		protected bool storedCurrentPhysics;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
		protected bool retogglePhysicsOnCanFall;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		protected bool storedRetogglePhysics;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		protected Vector3 lastPlayAreaPosition;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		protected Vector2 currentStandingPosition;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		protected List<Vector2> standingPositionHistory;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		protected float playAreaHeightAdjustment;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		protected float bodyMass;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		protected float bodyRadius;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		protected float leanForwardLengthAddition;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected float playAreaPositionThreshold;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		protected float gravityPush;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected int decimalPrecision;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		protected bool isFalling;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C5")]
		protected bool isMoving;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C6")]
		protected bool isLeaning;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C7")]
		protected bool onGround;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected bool preventSnapToFloor;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		protected bool generateRigidbody;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		protected Vector3 playAreaVelocity;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected string footColliderContainerNameCheck;

		[Token(Token = "0x4000B32")]
		protected const string BODY_COLLIDER_CONTAINER_NAME = "BodyColliderContainer";

		[Token(Token = "0x4000B33")]
		protected const string FOOT_COLLIDER_CONTAINER_NAME = "FootColliderContainer";

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected bool enableBodyCollisionsStartingValue;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		protected float fallMinTime;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		protected List<GameObject> ignoreCollisionsOnGameObjects;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected Transform cachedGrabbedObjectTransform;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected VRTK_InteractableObject cachedGrabbedObject;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected bool drawDebugGizmo;

		[Token(Token = "0x140000E1")]
		public event BodyPhysicsEventHandler StartFalling
		{
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x89DE60", Offset = "0x89DE60", VA = "0x89DE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552350", Offset = "0x552350")]
			add
			{
			}
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x89DF4C", Offset = "0x89DF4C", VA = "0x89DF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552360", Offset = "0x552360")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E2")]
		public event BodyPhysicsEventHandler StopFalling
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x89E038", Offset = "0x89E038", VA = "0x89E038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552370", Offset = "0x552370")]
			add
			{
			}
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x89E124", Offset = "0x89E124", VA = "0x89E124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552380", Offset = "0x552380")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E3")]
		public event BodyPhysicsEventHandler StartMoving
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x89E210", Offset = "0x89E210", VA = "0x89E210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552390", Offset = "0x552390")]
			add
			{
			}
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x89E2FC", Offset = "0x89E2FC", VA = "0x89E2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5523A0", Offset = "0x5523A0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E4")]
		public event BodyPhysicsEventHandler StopMoving
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x89E3E8", Offset = "0x89E3E8", VA = "0x89E3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5523B0", Offset = "0x5523B0")]
			add
			{
			}
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x89E4D4", Offset = "0x89E4D4", VA = "0x89E4D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5523C0", Offset = "0x5523C0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E5")]
		public event BodyPhysicsEventHandler StartColliding
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x89E5C0", Offset = "0x89E5C0", VA = "0x89E5C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5523D0", Offset = "0x5523D0")]
			add
			{
			}
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x89E6AC", Offset = "0x89E6AC", VA = "0x89E6AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5523E0", Offset = "0x5523E0")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E6")]
		public event BodyPhysicsEventHandler StopColliding
		{
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x89E798", Offset = "0x89E798", VA = "0x89E798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5523F0", Offset = "0x5523F0")]
			add
			{
			}
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x89E884", Offset = "0x89E884", VA = "0x89E884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552400", Offset = "0x552400")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E7")]
		public event BodyPhysicsEventHandler StartLeaning
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x89E970", Offset = "0x89E970", VA = "0x89E970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552410", Offset = "0x552410")]
			add
			{
			}
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x89EA60", Offset = "0x89EA60", VA = "0x89EA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552420", Offset = "0x552420")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E8")]
		public event BodyPhysicsEventHandler StopLeaning
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x89EB50", Offset = "0x89EB50", VA = "0x89EB50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552430", Offset = "0x552430")]
			add
			{
			}
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x89EC40", Offset = "0x89EC40", VA = "0x89EC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552440", Offset = "0x552440")]
			remove
			{
			}
		}

		[Token(Token = "0x140000E9")]
		public event BodyPhysicsEventHandler StartTouchingGround
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x89ED30", Offset = "0x89ED30", VA = "0x89ED30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552450", Offset = "0x552450")]
			add
			{
			}
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x89EE20", Offset = "0x89EE20", VA = "0x89EE20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552460", Offset = "0x552460")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EA")]
		public event BodyPhysicsEventHandler StopTouchingGround
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x89EF10", Offset = "0x89EF10", VA = "0x89EF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552470", Offset = "0x552470")]
			add
			{
			}
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x89F000", Offset = "0x89F000", VA = "0x89F000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552480", Offset = "0x552480")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x89F0F0", Offset = "0x89F0F0", VA = "0x89F0F0", Slot = "15")]
		public virtual bool ArePhysicsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x89F194", Offset = "0x89F194", VA = "0x89F194", Slot = "16")]
		public virtual void ApplyBodyVelocity(Vector3 velocity, bool forcePhysicsOn = false, bool applyMomentum = false)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x89F318", Offset = "0x89F318", VA = "0x89F318", Slot = "17")]
		public virtual void ToggleOnGround(bool state)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x89F3AC", Offset = "0x89F3AC", VA = "0x89F3AC", Slot = "18")]
		public virtual void TogglePreventSnapToFloor(bool state)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x89F3B8", Offset = "0x89F3B8", VA = "0x89F3B8", Slot = "19")]
		public virtual void ForceSnapToFloor()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x89F3F8", Offset = "0x89F3F8", VA = "0x89F3F8", Slot = "20")]
		public virtual bool IsFalling()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x89F400", Offset = "0x89F400", VA = "0x89F400", Slot = "21")]
		public virtual bool IsMoving()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x89F408", Offset = "0x89F408", VA = "0x89F408", Slot = "22")]
		public virtual bool IsLeaning()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x89F410", Offset = "0x89F410", VA = "0x89F410", Slot = "23")]
		public virtual bool OnGround()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x89F418", Offset = "0x89F418", VA = "0x89F418", Slot = "24")]
		public virtual Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x89F4D8", Offset = "0x89F4D8", VA = "0x89F4D8", Slot = "25")]
		public virtual Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x89F598", Offset = "0x89F598", VA = "0x89F598", Slot = "26")]
		public virtual void ResetVelocities()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x89F67C", Offset = "0x89F67C", VA = "0x89F67C", Slot = "27")]
		public virtual void ResetFalling()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x89F68C", Offset = "0x89F68C", VA = "0x89F68C", Slot = "28")]
		public virtual GameObject GetBodyColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x89F694", Offset = "0x89F694", VA = "0x89F694", Slot = "29")]
		public virtual GameObject GetFootColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x89F69C", Offset = "0x89F69C", VA = "0x89F69C", Slot = "30")]
		public virtual GameObject GetCurrentCollidingObject()
		{
			return null;
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x89F6A4", Offset = "0x89F6A4", VA = "0x89F6A4", Slot = "31")]
		public virtual void ResetIgnoredCollisions()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x89F858", Offset = "0x89F858", VA = "0x89F858", Slot = "32")]
		public virtual bool SweepCollision(Vector3 direction, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x89FBC4", Offset = "0x89FBC4", VA = "0x89FBC4", Slot = "33")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x89FC44", Offset = "0x89FC44", VA = "0x89FC44", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x89FD84", Offset = "0x89FD84", VA = "0x89FD84", Slot = "13")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x89FDF8", Offset = "0x89FDF8", VA = "0x89FDF8", Slot = "34")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x89FE78", Offset = "0x89FE78", VA = "0x89FE78", Slot = "35")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x89FF94", Offset = "0x89FF94", VA = "0x89FF94", Slot = "36")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x8A00A0", Offset = "0x8A00A0", VA = "0x8A00A0", Slot = "37")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x8A015C", Offset = "0x8A015C", VA = "0x8A015C", Slot = "38")]
		protected virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x8A0218", Offset = "0x8A0218", VA = "0x8A0218", Slot = "39")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x8A02B0", Offset = "0x8A02B0", VA = "0x8A02B0", Slot = "40")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x8A0458", Offset = "0x8A0458", VA = "0x8A0458", Slot = "41")]
		protected virtual bool CheckValidCollision(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x8A0538", Offset = "0x8A0538", VA = "0x8A0538", Slot = "42")]
		protected virtual bool CheckExistingCollision(GameObject checkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x8A05F0", Offset = "0x8A05F0", VA = "0x8A05F0", Slot = "43")]
		protected virtual void SetupPlayArea()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x8A0780", Offset = "0x8A0780", VA = "0x8A0780", Slot = "44")]
		protected virtual void SetupHeadset()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x8A088C", Offset = "0x8A088C", VA = "0x8A088C", Slot = "45")]
		protected virtual void ManageCollisionListeners(bool state)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x8A1258", Offset = "0x8A1258", VA = "0x8A1258", Slot = "46")]
		protected virtual void CollisionTracker_TriggerExit(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x8A126C", Offset = "0x8A126C", VA = "0x8A126C", Slot = "47")]
		protected virtual void CollisionTracker_TriggerEnter(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x8A1280", Offset = "0x8A1280", VA = "0x8A1280", Slot = "48")]
		protected virtual void CollisionTracker_CollisionExit(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x8A1294", Offset = "0x8A1294", VA = "0x8A1294", Slot = "49")]
		protected virtual void CollisionTracker_CollisionEnter(object sender, CollisionTrackerEventArgs e)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x8A12A8", Offset = "0x8A12A8", VA = "0x8A12A8", Slot = "50")]
		protected virtual void OnStartFalling(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x8A12D4", Offset = "0x8A12D4", VA = "0x8A12D4", Slot = "51")]
		protected virtual void OnStopFalling(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x8A1300", Offset = "0x8A1300", VA = "0x8A1300", Slot = "52")]
		protected virtual void OnStartMoving(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x8A132C", Offset = "0x8A132C", VA = "0x8A132C", Slot = "53")]
		protected virtual void OnStopMoving(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x8A1358", Offset = "0x8A1358", VA = "0x8A1358", Slot = "54")]
		protected virtual void OnStartColliding(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x8A1384", Offset = "0x8A1384", VA = "0x8A1384", Slot = "55")]
		protected virtual void OnStopColliding(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x8A13B0", Offset = "0x8A13B0", VA = "0x8A13B0", Slot = "56")]
		protected virtual void OnStartLeaning(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x8A13DC", Offset = "0x8A13DC", VA = "0x8A13DC", Slot = "57")]
		protected virtual void OnStopLeaning(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x8A1408", Offset = "0x8A1408", VA = "0x8A1408", Slot = "58")]
		protected virtual void OnStartTouchingGround(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x8A1434", Offset = "0x8A1434", VA = "0x8A1434", Slot = "59")]
		protected virtual void OnStopTouchingGround(BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x8A1460", Offset = "0x8A1460", VA = "0x8A1460", Slot = "60")]
		protected virtual BodyPhysicsEventArgs SetBodyPhysicsEvent(GameObject target, Collider collider)
		{
			return default(BodyPhysicsEventArgs);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x8A146C", Offset = "0x8A146C", VA = "0x8A146C", Slot = "61")]
		protected virtual void CalculateVelocity()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x8A15D4", Offset = "0x8A15D4", VA = "0x8A15D4", Slot = "62")]
		protected virtual void TogglePhysics(bool state)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x8A172C", Offset = "0x8A172C", VA = "0x8A172C", Slot = "63")]
		protected virtual void ManageFalling()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x8A1780", Offset = "0x8A1780", VA = "0x8A1780", Slot = "64")]
		protected virtual void CheckBodyCollisionsSetting()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x8A17BC", Offset = "0x8A17BC", VA = "0x8A17BC", Slot = "65")]
		protected virtual void CheckFalling()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x8A186C", Offset = "0x8A186C", VA = "0x8A186C", Slot = "66")]
		protected virtual void SetCurrentStandingPosition()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x8A1A1C", Offset = "0x8A1A1C", VA = "0x8A1A1C", Slot = "67")]
		protected virtual void SetIsMoving(Vector2 currentHeadsetPosition)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x8A1BF4", Offset = "0x8A1BF4", VA = "0x8A1BF4", Slot = "68")]
		protected virtual void CheckLean()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x8A2138", Offset = "0x8A2138", VA = "0x8A2138", Slot = "69")]
		protected virtual void CalculateLean(Vector3 startPosition, float forwardLength, float originalRayDistance)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x8A249C", Offset = "0x8A249C", VA = "0x8A249C", Slot = "70")]
		protected virtual void UpdateStandingPosition(Vector2 currentHeadsetPosition)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x8A26D0", Offset = "0x8A26D0", VA = "0x8A26D0", Slot = "71")]
		protected virtual void CheckHeadsetMovement()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x8A28A8", Offset = "0x8A28A8", VA = "0x8A28A8", Slot = "72")]
		protected virtual void MovementChanged(bool movementState)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x8A2910", Offset = "0x8A2910", VA = "0x8A2910", Slot = "73")]
		protected virtual void EnableDropToFloor()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x8A2A38", Offset = "0x8A2A38", VA = "0x8A2A38", Slot = "74")]
		protected virtual void DisableDropToFloor()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x8A2B08", Offset = "0x8A2B08", VA = "0x8A2B08", Slot = "75")]
		protected virtual void Teleported(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x8A2B60", Offset = "0x8A2B60", VA = "0x8A2B60", Slot = "76")]
		protected virtual void EnableBodyPhysics()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x8A2C28", Offset = "0x8A2C28", VA = "0x8A2C28", Slot = "77")]
		protected virtual void DisableBodyPhysics()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x8A2CE8", Offset = "0x8A2CE8", VA = "0x8A2CE8", Slot = "78")]
		protected virtual void SetupIgnoredCollisions()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x8A2EBC", Offset = "0x8A2EBC", VA = "0x8A2EBC", Slot = "79")]
		protected virtual void ManagePhysicsCollider(Collider collider, bool state)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x8A2F08", Offset = "0x8A2F08", VA = "0x8A2F08", Slot = "80")]
		protected virtual void CheckStepUpCollision(Collision collision)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x8A3478", Offset = "0x8A3478", VA = "0x8A3478", Slot = "81")]
		protected virtual GameObject CreateColliderContainer(string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x8A3740", Offset = "0x8A3740", VA = "0x8A3740", Slot = "82")]
		protected virtual GameObject InstantiateColliderContainer(GameObject objectToClone, string name, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x8A3880", Offset = "0x8A3880", VA = "0x8A3880", Slot = "83")]
		protected virtual void GenerateRigidbody()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x8A39BC", Offset = "0x8A39BC", VA = "0x8A39BC", Slot = "84")]
		protected virtual CapsuleCollider GenerateCapsuleCollider(GameObject parent, float setRadius)
		{
			return null;
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x8A3AA4", Offset = "0x8A3AA4", VA = "0x8A3AA4", Slot = "85")]
		protected virtual void GenerateBodyCollider()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x8A3C64", Offset = "0x8A3C64", VA = "0x8A3C64", Slot = "86")]
		protected virtual void GenerateFootCollider()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x8A3E0C", Offset = "0x8A3E0C", VA = "0x8A3E0C", Slot = "87")]
		protected virtual void CreateCollider()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x8A408C", Offset = "0x8A408C", VA = "0x8A408C", Slot = "88")]
		protected virtual void DestroyCollider()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x8A41A8", Offset = "0x8A41A8", VA = "0x8A41A8", Slot = "89")]
		protected virtual void UpdateCollider()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x8A4564", Offset = "0x8A4564", VA = "0x8A4564", Slot = "90")]
		protected virtual float CalculateStepUpYOffset()
		{
			return default(float);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x8A4570", Offset = "0x8A4570", VA = "0x8A4570", Slot = "91")]
		protected virtual void InitControllerListeners(GameObject mappedController, bool state)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x8A4788", Offset = "0x8A4788", VA = "0x8A4788", Slot = "92")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x552490", Offset = "0x552490")]
		protected virtual IEnumerator RestoreCollisions(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x8A484C", Offset = "0x8A484C", VA = "0x8A484C", Slot = "93")]
		protected virtual void IgnoreCollisions(Collider[] colliders, bool state)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x8A4A1C", Offset = "0x8A4A1C", VA = "0x8A4A1C", Slot = "94")]
		protected virtual void OnGrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x8A4B04", Offset = "0x8A4B04", VA = "0x8A4B04", Slot = "95")]
		protected virtual void OnUngrabObject(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x8A4BBC", Offset = "0x8A4BBC", VA = "0x8A4BBC", Slot = "96")]
		protected virtual bool FloorIsGrabbedObject(RaycastHit collidedObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x8A4D18", Offset = "0x8A4D18", VA = "0x8A4D18", Slot = "97")]
		protected virtual bool FloorHeightChanged(float currentY)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x8A4D9C", Offset = "0x8A4D9C", VA = "0x8A4D9C", Slot = "98")]
		protected virtual bool ValidDrop(bool rayHit, RaycastHit rayCollidedWith, float floorY)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x8A4F08", Offset = "0x8A4F08", VA = "0x8A4F08", Slot = "99")]
		protected virtual float ControllerHeightCheck(GameObject controllerObj)
		{
			return default(float);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x8A50C4", Offset = "0x8A50C4", VA = "0x8A50C4", Slot = "100")]
		protected virtual bool ControllersStillOverPreviousFloor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x8A52A8", Offset = "0x8A52A8", VA = "0x8A52A8", Slot = "101")]
		protected virtual void SnapToNearestFloor()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x8A5610", Offset = "0x8A5610", VA = "0x8A5610", Slot = "102")]
		protected virtual bool PreventFall(float hitFloorY)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x8A5680", Offset = "0x8A5680", VA = "0x8A5680", Slot = "103")]
		protected virtual void HandleFall(float hitFloorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x8A5848", Offset = "0x8A5848", VA = "0x8A5848", Slot = "104")]
		protected virtual void StartFall(GameObject targetFloor)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x8A5988", Offset = "0x8A5988", VA = "0x8A5988", Slot = "105")]
		protected virtual void StopFall()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x8A5A5C", Offset = "0x8A5A5C", VA = "0x8A5A5C", Slot = "106")]
		protected virtual void GravityFall(RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x8A5B3C", Offset = "0x8A5B3C", VA = "0x8A5B3C", Slot = "107")]
		protected virtual void TeleportFall(float floorY, RaycastHit rayCollidedWith)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x8A5DAC", Offset = "0x8A5DAC", VA = "0x8A5DAC", Slot = "108")]
		protected virtual void ApplyBodyMomentum(bool applyMomentum = false)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x8A5ED0", Offset = "0x8A5ED0", VA = "0x8A5ED0")]
		public VRTK_BodyPhysics()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public struct HeadsetCollisionEventArgs
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider collider;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x200014C")]
	public delegate void HeadsetCollisionEventHandler(object sender, HeadsetCollisionEventArgs e);
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5370F4", Offset = "0x5370F4")]
	public class VRTK_HeadsetCollision : MonoBehaviour
	{
		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54444C", Offset = "0x54444C")]
		public bool ignoreTriggerColliders;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544484", Offset = "0x544484")]
		public float colliderRadius;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5444BC", Offset = "0x5444BC")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool headsetColliding;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Collider collidingWith;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform headset;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_HeadsetCollider headsetColliderScript;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject headsetColliderContainer;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool generateCollider;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool generateRigidbody;

		[Token(Token = "0x140000EB")]
		public event HeadsetCollisionEventHandler HeadsetCollisionDetect
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x9628D4", Offset = "0x9628D4", VA = "0x9628D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5524F4", Offset = "0x5524F4")]
			add
			{
			}
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x9629C0", Offset = "0x9629C0", VA = "0x9629C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552504", Offset = "0x552504")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EC")]
		public event HeadsetCollisionEventHandler HeadsetCollisionEnded
		{
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x962AAC", Offset = "0x962AAC", VA = "0x962AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552514", Offset = "0x552514")]
			add
			{
			}
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x962B98", Offset = "0x962B98", VA = "0x962B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552524", Offset = "0x552524")]
			remove
			{
			}
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x962C84", Offset = "0x962C84", VA = "0x962C84", Slot = "4")]
		public virtual void OnHeadsetCollisionDetect(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x962CB0", Offset = "0x962CB0", VA = "0x962CB0", Slot = "5")]
		public virtual void OnHeadsetCollisionEnded(HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x962CDC", Offset = "0x962CDC", VA = "0x962CDC", Slot = "6")]
		public virtual bool IsColliding()
		{
			return default(bool);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x962CE4", Offset = "0x962CE4", VA = "0x962CE4", Slot = "7")]
		public virtual GameObject GetHeadsetColliderContainer()
		{
			return null;
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x962CEC", Offset = "0x962CEC", VA = "0x962CEC", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x962D6C", Offset = "0x962D6C", VA = "0x962D6C", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x962E80", Offset = "0x962E80", VA = "0x962E80", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x962FA4", Offset = "0x962FA4", VA = "0x962FA4", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x963024", Offset = "0x963024", VA = "0x963024", Slot = "12")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x963260", Offset = "0x963260", VA = "0x963260", Slot = "13")]
		protected virtual void CreateHeadsetColliderContainer()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x96352C", Offset = "0x96352C", VA = "0x96352C", Slot = "14")]
		protected virtual void SetupHeadset()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x96387C", Offset = "0x96387C", VA = "0x96387C", Slot = "15")]
		protected virtual void TearDownHeadset()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x963A78", Offset = "0x963A78", VA = "0x963A78")]
		public VRTK_HeadsetCollision()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class VRTK_HeadsetCollider : MonoBehaviour
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_HeadsetCollision parent;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x9622D4", Offset = "0x9622D4", VA = "0x9622D4", Slot = "4")]
		public virtual void SetParent(GameObject setParent)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x962344", Offset = "0x962344", VA = "0x962344", Slot = "5")]
		public virtual void SetIgnoreTarget([Optional] VRTK_PolicyList list)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x96234C", Offset = "0x96234C", VA = "0x96234C", Slot = "6")]
		public virtual void EndCollision(Collider collider)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x96247C", Offset = "0x96247C", VA = "0x96247C", Slot = "7")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x962624", Offset = "0x962624", VA = "0x962624", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x9626F8", Offset = "0x9626F8", VA = "0x9626F8", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x96280C", Offset = "0x96280C", VA = "0x96280C", Slot = "10")]
		protected virtual HeadsetCollisionEventArgs SetHeadsetCollisionEvent(Collider collider, Transform currentTransform)
		{
			return default(HeadsetCollisionEventArgs);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x962818", Offset = "0x962818", VA = "0x962818", Slot = "11")]
		protected virtual bool ValidTarget(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x9628CC", Offset = "0x9628CC", VA = "0x9628CC")]
		public VRTK_HeadsetCollider()
		{
		}
	}
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x53712C", Offset = "0x53712C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x53712C", Offset = "0x53712C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53712C", Offset = "0x53712C")]
	public class VRTK_HeadsetCollisionFade : MonoBehaviour
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x544534", Offset = "0x544534")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544534", Offset = "0x544534")]
		public float timeTillFade;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544594", Offset = "0x544594")]
		public float blinkTransitionSpeed;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5445CC", Offset = "0x5445CC")]
		public Color fadeColor;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x544604", Offset = "0x544604")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544604", Offset = "0x544604")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544664", Offset = "0x544664")]
		public VRTK_HeadsetFade headsetFade;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x963A8C", Offset = "0x963A8C", VA = "0x963A8C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x963BF8", Offset = "0x963BF8", VA = "0x963BF8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x963CCC", Offset = "0x963CCC", VA = "0x963CCC", Slot = "6")]
		protected virtual void OnHeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x963D24", Offset = "0x963D24", VA = "0x963D24", Slot = "7")]
		protected virtual void OnHeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x963DA8", Offset = "0x963DA8", VA = "0x963DA8", Slot = "8")]
		protected virtual void StartFade()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x963E14", Offset = "0x963E14", VA = "0x963E14")]
		public VRTK_HeadsetCollisionFade()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public struct HeadsetControllerAwareEventArgs
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54469C", Offset = "0x54469C")]
		public uint controllerIndex;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x2000151")]
	public delegate void HeadsetControllerAwareEventHandler(object sender, HeadsetControllerAwareEventArgs e);
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5371DC", Offset = "0x5371DC")]
	public class VRTK_HeadsetControllerAware : MonoBehaviour
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5446D4", Offset = "0x5446D4")]
		public bool trackLeftController;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54470C", Offset = "0x54470C")]
		public bool trackRightController;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544744", Offset = "0x544744")]
		public float controllerGlanceRadius;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54477C", Offset = "0x54477C")]
		public Transform customRightControllerOrigin;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5447B4", Offset = "0x5447B4")]
		public Transform customLeftControllerOrigin;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5447EC", Offset = "0x5447EC")]
		public VRTK_CustomRaycast customRaycast;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected GameObject leftController;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject rightController;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform headset;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool leftControllerObscured;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		protected bool rightControllerObscured;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool leftControllerLastState;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		protected bool rightControllerLastState;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected bool leftControllerGlance;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		protected bool rightControllerGlance;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		protected bool leftControllerGlanceLastState;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		protected bool rightControllerGlanceLastState;

		[Token(Token = "0x140000ED")]
		public event HeadsetControllerAwareEventHandler ControllerObscured
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x963E54", Offset = "0x963E54", VA = "0x963E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552534", Offset = "0x552534")]
			add
			{
			}
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x963F40", Offset = "0x963F40", VA = "0x963F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552544", Offset = "0x552544")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EE")]
		public event HeadsetControllerAwareEventHandler ControllerUnobscured
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x96402C", Offset = "0x96402C", VA = "0x96402C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552554", Offset = "0x552554")]
			add
			{
			}
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x964118", Offset = "0x964118", VA = "0x964118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552564", Offset = "0x552564")]
			remove
			{
			}
		}

		[Token(Token = "0x140000EF")]
		public event HeadsetControllerAwareEventHandler ControllerGlanceEnter
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x952E30", Offset = "0x952E30", VA = "0x952E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552574", Offset = "0x552574")]
			add
			{
			}
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x9526C4", Offset = "0x9526C4", VA = "0x9526C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552584", Offset = "0x552584")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F0")]
		public event HeadsetControllerAwareEventHandler ControllerGlanceExit
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x952F1C", Offset = "0x952F1C", VA = "0x952F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552594", Offset = "0x552594")]
			add
			{
			}
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x9527B0", Offset = "0x9527B0", VA = "0x9527B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5525A4", Offset = "0x5525A4")]
			remove
			{
			}
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x964204", Offset = "0x964204", VA = "0x964204", Slot = "4")]
		public virtual void OnControllerObscured(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x964258", Offset = "0x964258", VA = "0x964258", Slot = "5")]
		public virtual void OnControllerUnobscured(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x9642AC", Offset = "0x9642AC", VA = "0x9642AC", Slot = "6")]
		public virtual void OnControllerGlanceEnter(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x964300", Offset = "0x964300", VA = "0x964300", Slot = "7")]
		public virtual void OnControllerGlanceExit(HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x964354", Offset = "0x964354", VA = "0x964354", Slot = "8")]
		public virtual bool LeftControllerObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x96435C", Offset = "0x96435C", VA = "0x96435C", Slot = "9")]
		public virtual bool RightControllerObscured()
		{
			return default(bool);
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x964364", Offset = "0x964364", VA = "0x964364", Slot = "10")]
		public virtual bool LeftControllerGlanced()
		{
			return default(bool);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x96436C", Offset = "0x96436C", VA = "0x96436C", Slot = "11")]
		public virtual bool RightControllerGlanced()
		{
			return default(bool);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x964374", Offset = "0x964374", VA = "0x964374", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x9643F4", Offset = "0x9643F4", VA = "0x9643F4", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x9644A0", Offset = "0x9644A0", VA = "0x9644A0", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x964510", Offset = "0x964510", VA = "0x964510", Slot = "15")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x964590", Offset = "0x964590", VA = "0x964590", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x964648", Offset = "0x964648", VA = "0x964648", Slot = "17")]
		protected virtual HeadsetControllerAwareEventArgs SetHeadsetControllerAwareEvent(RaycastHit raycastHit, VRTK_ControllerReference controllerReference)
		{
			return default(HeadsetControllerAwareEventArgs);
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x9646F8", Offset = "0x9646F8", VA = "0x9646F8", Slot = "18")]
		protected virtual void RayCastToController(GameObject controller, Transform customDestination, ref bool obscured, ref bool lastState)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x964928", Offset = "0x964928", VA = "0x964928", Slot = "19")]
		protected virtual void ObscuredStateChanged(GameObject controller, bool obscured, RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x964AD8", Offset = "0x964AD8", VA = "0x964AD8", Slot = "20")]
		protected virtual void CheckHeadsetView(GameObject controller, Transform customDestination, ref bool controllerGlance, ref bool controllerGlanceLastState)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x964DA0", Offset = "0x964DA0", VA = "0x964DA0", Slot = "21")]
		protected virtual void GlanceStateChanged(GameObject controller, bool glance)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x964F24", Offset = "0x964F24", VA = "0x964F24")]
		public VRTK_HeadsetControllerAware()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public struct HeadsetFadeEventArgs
	{
		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timeTillComplete;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform currentTransform;
	}
	[Token(Token = "0x2000154")]
	public delegate void HeadsetFadeEventHandler(object sender, HeadsetFadeEventArgs e);
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x537214", Offset = "0x537214")]
	public class VRTK_HeadsetFade : MonoBehaviour
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform headset;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool isTransitioning;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isFaded;

		[Token(Token = "0x140000F1")]
		public event HeadsetFadeEventHandler HeadsetFadeStart
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x964F40", Offset = "0x964F40", VA = "0x964F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5525B4", Offset = "0x5525B4")]
			add
			{
			}
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x96502C", Offset = "0x96502C", VA = "0x96502C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5525C4", Offset = "0x5525C4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F2")]
		public event HeadsetFadeEventHandler HeadsetFadeComplete
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x965118", Offset = "0x965118", VA = "0x965118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5525D4", Offset = "0x5525D4")]
			add
			{
			}
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x965204", Offset = "0x965204", VA = "0x965204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5525E4", Offset = "0x5525E4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F3")]
		public event HeadsetFadeEventHandler HeadsetUnfadeStart
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x9652F0", Offset = "0x9652F0", VA = "0x9652F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5525F4", Offset = "0x5525F4")]
			add
			{
			}
			[Token(Token = "0x6001046")]
			[Address(RVA = "0x9653DC", Offset = "0x9653DC", VA = "0x9653DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552604", Offset = "0x552604")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F4")]
		public event HeadsetFadeEventHandler HeadsetUnfadeComplete
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x9654C8", Offset = "0x9654C8", VA = "0x9654C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552614", Offset = "0x552614")]
			add
			{
			}
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x9655B4", Offset = "0x9655B4", VA = "0x9655B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552624", Offset = "0x552624")]
			remove
			{
			}
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x9656A0", Offset = "0x9656A0", VA = "0x9656A0", Slot = "4")]
		public virtual void OnHeadsetFadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x9656CC", Offset = "0x9656CC", VA = "0x9656CC", Slot = "5")]
		public virtual void OnHeadsetFadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x9656F8", Offset = "0x9656F8", VA = "0x9656F8", Slot = "6")]
		public virtual void OnHeadsetUnfadeStart(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x965724", Offset = "0x965724", VA = "0x965724", Slot = "7")]
		public virtual void OnHeadsetUnfadeComplete(HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x965750", Offset = "0x965750", VA = "0x965750", Slot = "8")]
		public virtual bool IsFaded()
		{
			return default(bool);
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x965758", Offset = "0x965758", VA = "0x965758", Slot = "9")]
		public virtual bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x965760", Offset = "0x965760", VA = "0x965760", Slot = "10")]
		public virtual void Fade(Color color, float duration)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x965880", Offset = "0x965880", VA = "0x965880", Slot = "11")]
		public virtual void Unfade(float duration)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x9659A8", Offset = "0x9659A8", VA = "0x9659A8", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x965A28", Offset = "0x965A28", VA = "0x965A28", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x965C28", Offset = "0x965C28", VA = "0x965C28", Slot = "14")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x965CA8", Offset = "0x965CA8", VA = "0x965CA8", Slot = "15")]
		protected virtual HeadsetFadeEventArgs SetHeadsetFadeEvent(Transform currentTransform, float duration)
		{
			return default(HeadsetFadeEventArgs);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x965CB0", Offset = "0x965CB0", VA = "0x965CB0", Slot = "16")]
		protected virtual void FadeComplete()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x965D08", Offset = "0x965D08", VA = "0x965D08", Slot = "17")]
		protected virtual void UnfadeComplete()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x965D5C", Offset = "0x965D5C", VA = "0x965D5C")]
		public VRTK_HeadsetFade()
		{
		}
	}
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53724C", Offset = "0x53724C")]
	public class VRTK_HipTracking : MonoBehaviour
	{
		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5448A4", Offset = "0x5448A4")]
		public float HeadOffset;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5448DC", Offset = "0x5448DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5448DC", Offset = "0x5448DC")]
		public Transform headOverride;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54493C", Offset = "0x54493C")]
		public Transform ReferenceUp;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform playerHead;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x966404", Offset = "0x966404", VA = "0x966404", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x966484", Offset = "0x966484", VA = "0x966484", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x96652C", Offset = "0x96652C", VA = "0x96652C", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x9665AC", Offset = "0x9665AC", VA = "0x9665AC", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x9669BC", Offset = "0x9669BC", VA = "0x9669BC")]
		public VRTK_HipTracking()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public struct PositionRewindEventArgs
	{
		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 collidedPosition;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 resetPosition;
	}
	[Token(Token = "0x2000158")]
	public delegate void PositionRewindEventHandler(object sender, PositionRewindEventArgs e);
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x537284", Offset = "0x537284")]
	public class VRTK_PositionRewind : MonoBehaviour
	{
		[Token(Token = "0x2000471")]
		public enum CollisionDetectors
		{
			[Token(Token = "0x40018CF")]
			HeadsetOnly,
			[Token(Token = "0x40018D0")]
			BodyOnly,
			[Token(Token = "0x40018D1")]
			HeadsetAndBody
		}

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x544974", Offset = "0x544974")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544974", Offset = "0x544974")]
		public CollisionDetectors collisionDetector;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5449D4", Offset = "0x5449D4")]
		public bool ignoreTriggerColliders;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544A0C", Offset = "0x544A0C")]
		public float rewindDelay;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544A44", Offset = "0x544A44")]
		public float pushbackDistance;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544A7C", Offset = "0x544A7C")]
		public float crouchThreshold;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544AB4", Offset = "0x544AB4")]
		public float crouchRewindThreshold;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544AEC", Offset = "0x544AEC")]
		public VRTK_PolicyList targetListPolicy;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x544B24", Offset = "0x544B24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544B24", Offset = "0x544B24")]
		public VRTK_BodyPhysics bodyPhysics;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544B84", Offset = "0x544B84")]
		public VRTK_HeadsetCollision headsetCollision;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform headset;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform playArea;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Vector3 lastGoodStandingPosition;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 lastGoodHeadsetPosition;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected float highestHeadsetY;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float lastPlayAreaY;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool lastGoodPositionSet;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		protected bool hasCollided;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		protected bool isColliding;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		protected bool isRewinding;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float collideTimer;

		[Token(Token = "0x140000F5")]
		public event PositionRewindEventHandler PositionRewindToSafe
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x78DDB8", Offset = "0x78DDB8", VA = "0x78DDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552634", Offset = "0x552634")]
			add
			{
			}
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x78DEA4", Offset = "0x78DEA4", VA = "0x78DEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552644", Offset = "0x552644")]
			remove
			{
			}
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x78DF90", Offset = "0x78DF90", VA = "0x78DF90", Slot = "4")]
		public virtual void OnPositionRewindToSafe(PositionRewindEventArgs e)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x78DFD4", Offset = "0x78DFD4", VA = "0x78DFD4", Slot = "5")]
		public virtual void SetLastGoodPosition()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x78E0D4", Offset = "0x78E0D4", VA = "0x78E0D4", Slot = "6")]
		public virtual void RewindPosition()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x78E38C", Offset = "0x78E38C", VA = "0x78E38C", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x78E40C", Offset = "0x78E40C", VA = "0x78E40C", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x78E684", Offset = "0x78E684", VA = "0x78E684", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x78E698", Offset = "0x78E698", VA = "0x78E698", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x78E718", Offset = "0x78E718", VA = "0x78E718", Slot = "11")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x78E788", Offset = "0x78E788", VA = "0x78E788", Slot = "12")]
		protected virtual PositionRewindEventArgs SetEventPayload(Vector3 previousPosition)
		{
			return default(PositionRewindEventArgs);
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x78E7E8", Offset = "0x78E7E8", VA = "0x78E7E8", Slot = "13")]
		protected virtual bool CrouchThresholdReached()
		{
			return default(bool);
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x78E874", Offset = "0x78E874", VA = "0x78E874", Slot = "14")]
		protected virtual void SetHighestHeadsetY()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x78E8F4", Offset = "0x78E8F4", VA = "0x78E8F4", Slot = "15")]
		protected virtual void UpdateLastGoodPosition()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x78E984", Offset = "0x78E984", VA = "0x78E984", Slot = "16")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x78EA34", Offset = "0x78EA34", VA = "0x78EA34", Slot = "17")]
		protected virtual void StartCollision(GameObject target, Collider collider)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x78EAC0", Offset = "0x78EAC0", VA = "0x78EAC0", Slot = "18")]
		protected virtual void EndCollision(Collider collider)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x78EB6C", Offset = "0x78EB6C", VA = "0x78EB6C", Slot = "19")]
		protected virtual bool BodyCollisionsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x78EC08", Offset = "0x78EC08", VA = "0x78EC08", Slot = "20")]
		protected virtual bool CanRewind()
		{
			return default(bool);
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x78ECD8", Offset = "0x78ECD8", VA = "0x78ECD8", Slot = "21")]
		protected virtual void DoPositionRewind()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x78ED28", Offset = "0x78ED28", VA = "0x78ED28", Slot = "22")]
		protected virtual bool HeadsetListen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x78ED3C", Offset = "0x78ED3C", VA = "0x78ED3C", Slot = "23")]
		protected virtual bool BodyListen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x78ED50", Offset = "0x78ED50", VA = "0x78ED50", Slot = "24")]
		protected virtual void ManageListeners(bool state)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x78F114", Offset = "0x78F114", VA = "0x78F114")]
		private void StartColliding(object sender, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x78F130", Offset = "0x78F130", VA = "0x78F130")]
		private void StopColliding(object sender, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x78F144", Offset = "0x78F144", VA = "0x78F144", Slot = "25")]
		protected virtual void HeadsetCollisionDetect(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x78F194", Offset = "0x78F194", VA = "0x78F194", Slot = "26")]
		protected virtual void HeadsetCollisionEnded(object sender, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x78F1AC", Offset = "0x78F1AC", VA = "0x78F1AC")]
		public VRTK_PositionRewind()
		{
		}
	}
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5372BC", Offset = "0x5372BC")]
	public class VRTK_UICanvas : MonoBehaviour
	{
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539928", Offset = "0x539928")]
		private sealed class <CreateDraggablePanel>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Canvas canvas;

			[Token(Token = "0x40018D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 canvasSize;

			[Token(Token = "0x1700024C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025F8")]
				[Address(RVA = "0xBFC944", Offset = "0xBFC944", VA = "0xBFC944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025FA")]
				[Address(RVA = "0xBFC9B4", Offset = "0xBFC9B4", VA = "0xBFC9B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025F5")]
			[Address(RVA = "0xBFBADC", Offset = "0xBFBADC", VA = "0xBFBADC")]
			[DebuggerHidden]
			public <CreateDraggablePanel>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xBFC3DC", Offset = "0xBFC3DC", VA = "0xBFC3DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025F7")]
			[Address(RVA = "0xBFC3E0", Offset = "0xBFC3E0", VA = "0xBFC3E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025F9")]
			[Address(RVA = "0xBFC94C", Offset = "0xBFC94C", VA = "0xBFC94C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544BCC", Offset = "0x544BCC")]
		public bool clickOnPointerCollision;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544C04", Offset = "0x544C04")]
		public float autoActivateWithinDistance;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected BoxCollider canvasBoxCollider;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Rigidbody canvasRigidBody;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Coroutine draggablePanelCreation;

		[Token(Token = "0x4000B90")]
		protected const string CANVAS_DRAGGABLE_PANEL = "VRTK_UICANVAS_DRAGGABLE_PANEL";

		[Token(Token = "0x4000B91")]
		protected const string ACTIVATOR_FRONT_TRIGGER_GAMEOBJECT = "VRTK_UICANVAS_ACTIVATOR_FRONT_TRIGGER";

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xBFB0DC", Offset = "0xBFB0DC", VA = "0xBFB0DC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xBFB0E8", Offset = "0xBFB0E8", VA = "0xBFB0E8", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xBFB0F4", Offset = "0xBFB0F4", VA = "0xBFB0F4", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xBFB100", Offset = "0xBFB100", VA = "0xBFB100", Slot = "7")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xBFB234", Offset = "0xBFB234", VA = "0xBFB234", Slot = "8")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xBFB2DC", Offset = "0xBFB2DC", VA = "0xBFB2DC", Slot = "9")]
		protected virtual void SetupCanvas()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xBFBA40", Offset = "0xBFBA40", VA = "0xBFBA40", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x552654", Offset = "0x552654")]
		protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
		{
			return null;
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xBFBB08", Offset = "0xBFBB08", VA = "0xBFBB08", Slot = "11")]
		protected virtual void CreateActivator(Canvas canvas, Vector2 canvasSize)
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xBFBFE8", Offset = "0xBFBFE8", VA = "0xBFBFE8", Slot = "12")]
		protected virtual void RemoveCanvas()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xBFC3D4", Offset = "0xBFC3D4", VA = "0xBFC3D4")]
		public VRTK_UICanvas()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class VRTK_UIPointerAutoActivator : MonoBehaviour
	{
		[Token(Token = "0x6001087")]
		[Address(RVA = "0xC01EAC", Offset = "0xC01EAC", VA = "0xC01EAC", Slot = "4")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xC01FEC", Offset = "0xC01FEC", VA = "0xC01FEC", Slot = "5")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xC020E4", Offset = "0xC020E4", VA = "0xC020E4")]
		public VRTK_UIPointerAutoActivator()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public struct UIDraggableItemEventArgs
	{
		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;
	}
	[Token(Token = "0x200015D")]
	public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5372F4", Offset = "0x5372F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5372F4", Offset = "0x5372F4")]
	public class VRTK_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544C3C", Offset = "0x544C3C")]
		public bool restrictToDropZone;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544C74", Offset = "0x544C74")]
		public bool restrictToOriginalCanvas;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544CAC", Offset = "0x544CAC")]
		public float forwardOffset;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GameObject validDropZone;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected RectTransform dragTransform;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 startPosition;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion startRotation;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject startDropZone;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform startParent;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Canvas startCanvas;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x140000F6")]
		public event UIDraggableItemEventHandler DraggableItemDropped
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0xBFC9BC", Offset = "0xBFC9BC", VA = "0xBFC9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5526B8", Offset = "0x5526B8")]
			add
			{
			}
			[Token(Token = "0x600108F")]
			[Address(RVA = "0xBFCAA8", Offset = "0xBFCAA8", VA = "0xBFCAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5526C8", Offset = "0x5526C8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F7")]
		public event UIDraggableItemEventHandler DraggableItemReset
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0xBFCB94", Offset = "0xBFCB94", VA = "0xBFCB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5526D8", Offset = "0x5526D8")]
			add
			{
			}
			[Token(Token = "0x6001091")]
			[Address(RVA = "0xBFCC80", Offset = "0xBFCC80", VA = "0xBFCC80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5526E8", Offset = "0x5526E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xBFCD6C", Offset = "0xBFCD6C", VA = "0xBFCD6C", Slot = "7")]
		public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xBFCD90", Offset = "0xBFCD90", VA = "0xBFCD90", Slot = "8")]
		public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xBFCDB4", Offset = "0xBFCDB4", VA = "0xBFCDB4", Slot = "9")]
		public virtual void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xBFD024", Offset = "0xBFD024", VA = "0xBFD024", Slot = "10")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xBFD034", Offset = "0xBFD034", VA = "0xBFD034", Slot = "11")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xBFD538", Offset = "0xBFD538", VA = "0xBFD538", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xBFD7A4", Offset = "0xBFD7A4", VA = "0xBFD7A4", Slot = "13")]
		protected virtual VRTK_UIPointer GetPointer(PointerEventData eventData)
		{
			return null;
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xBFD898", Offset = "0xBFD898", VA = "0xBFD898", Slot = "14")]
		protected virtual void SetDragPosition(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xBFDC48", Offset = "0xBFDC48", VA = "0xBFDC48", Slot = "15")]
		protected virtual void ResetElement()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xBFDD5C", Offset = "0xBFDD5C", VA = "0xBFDD5C", Slot = "16")]
		protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
		{
			return default(UIDraggableItemEventArgs);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xBFDD64", Offset = "0xBFDD64", VA = "0xBFDD64")]
		public VRTK_UIDraggableItem()
		{
		}
	}
	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53737C", Offset = "0x53737C")]
	public class VRTK_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_UIDraggableItem droppableItem;

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xBFDD78", Offset = "0xBFDD78", VA = "0xBFDD78", Slot = "6")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xBFDEA4", Offset = "0xBFDEA4", VA = "0xBFDEA4", Slot = "7")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xBFDF30", Offset = "0xBFDF30", VA = "0xBFDF30")]
		public VRTK_UIDropZone()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public struct VRTK_UIPointerEventArgs
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x544D14", Offset = "0x544D14")]
		public uint controllerIndex;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRTK_ControllerReference controllerReference;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isActive;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject currentTarget;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject previousTarget;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RaycastResult raycastResult;
	}
	[Token(Token = "0x2000161")]
	public delegate void UIPointerEventHandler(object sender, VRTK_UIPointerEventArgs e);
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5373B4", Offset = "0x5373B4")]
	public class VRTK_UIPointer : MonoBehaviour
	{
		[Token(Token = "0x2000473")]
		public enum ActivationMethods
		{
			[Token(Token = "0x40018D7")]
			HoldButton,
			[Token(Token = "0x40018D8")]
			ToggleButton,
			[Token(Token = "0x40018D9")]
			AlwaysOn
		}

		[Token(Token = "0x2000474")]
		public enum ClickMethods
		{
			[Token(Token = "0x40018DB")]
			ClickOnButtonUp,
			[Token(Token = "0x40018DC")]
			ClickOnButtonDown
		}

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x544D4C", Offset = "0x544D4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544D4C", Offset = "0x544D4C")]
		public VRTK_ControllerEvents.ButtonAlias activationButton;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544DAC", Offset = "0x544DAC")]
		public ActivationMethods activationMode;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x544DE4", Offset = "0x544DE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544DE4", Offset = "0x544DE4")]
		public VRTK_ControllerEvents.ButtonAlias selectionButton;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544E44", Offset = "0x544E44")]
		public ClickMethods clickMethod;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544E7C", Offset = "0x544E7C")]
		public bool attemptClickOnDeactivate;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544EB4", Offset = "0x544EB4")]
		public float clickAfterHoverDuration;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x544EEC", Offset = "0x544EEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544EEC", Offset = "0x544EEC")]
		public VRTK_ControllerEvents controller;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x544F4C", Offset = "0x544F4C")]
		public Transform pointerOriginTransform;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public PointerEventData pointerEventData;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public GameObject hoveringElement;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public GameObject controllerRenderModel;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float hoverDurationTimer;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool canClickOnHover;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public GameObject autoActivatingCanvas;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool collisionClick;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool pointerClicked;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		protected bool beamEnabledState;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		protected bool lastPointerPressState;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		protected bool lastPointerClickState;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected GameObject currentTarget;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected EventSystem cachedEventSystem;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected VRTK_VRInputModule cachedVRInputModule;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Transform originalPointerOriginTransform;

		[Token(Token = "0x17000088")]
		protected VRTK_ControllerReference controllerReference
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xC00328", Offset = "0xC00328", VA = "0xC00328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000F8")]
		public event ControllerInteractionEventHandler ActivationButtonPressed
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xBFF0B8", Offset = "0xBFF0B8", VA = "0xBFF0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5526F8", Offset = "0x5526F8")]
			add
			{
			}
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xBFF1A4", Offset = "0xBFF1A4", VA = "0xBFF1A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552708", Offset = "0x552708")]
			remove
			{
			}
		}

		[Token(Token = "0x140000F9")]
		public event ControllerInteractionEventHandler ActivationButtonReleased
		{
			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xBFF290", Offset = "0xBFF290", VA = "0xBFF290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552718", Offset = "0x552718")]
			add
			{
			}
			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xBFF37C", Offset = "0xBFF37C", VA = "0xBFF37C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552728", Offset = "0x552728")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FA")]
		public event ControllerInteractionEventHandler SelectionButtonPressed
		{
			[Token(Token = "0x60010A8")]
			[Address(RVA = "0xBFF468", Offset = "0xBFF468", VA = "0xBFF468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552738", Offset = "0x552738")]
			add
			{
			}
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xBFF554", Offset = "0xBFF554", VA = "0xBFF554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552748", Offset = "0x552748")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FB")]
		public event ControllerInteractionEventHandler SelectionButtonReleased
		{
			[Token(Token = "0x60010AA")]
			[Address(RVA = "0xBFF640", Offset = "0xBFF640", VA = "0xBFF640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552758", Offset = "0x552758")]
			add
			{
			}
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xBFF72C", Offset = "0xBFF72C", VA = "0xBFF72C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552768", Offset = "0x552768")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FC")]
		public event UIPointerEventHandler UIPointerElementEnter
		{
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xBFF818", Offset = "0xBFF818", VA = "0xBFF818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552778", Offset = "0x552778")]
			add
			{
			}
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xBFF904", Offset = "0xBFF904", VA = "0xBFF904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552788", Offset = "0x552788")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FD")]
		public event UIPointerEventHandler UIPointerElementExit
		{
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xBFF9F0", Offset = "0xBFF9F0", VA = "0xBFF9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552798", Offset = "0x552798")]
			add
			{
			}
			[Token(Token = "0x60010AF")]
			[Address(RVA = "0xBFFADC", Offset = "0xBFFADC", VA = "0xBFFADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5527A8", Offset = "0x5527A8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FE")]
		public event UIPointerEventHandler UIPointerElementClick
		{
			[Token(Token = "0x60010B0")]
			[Address(RVA = "0xBFFBC8", Offset = "0xBFFBC8", VA = "0xBFFBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5527B8", Offset = "0x5527B8")]
			add
			{
			}
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xBFFCB4", Offset = "0xBFFCB4", VA = "0xBFFCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5527C8", Offset = "0x5527C8")]
			remove
			{
			}
		}

		[Token(Token = "0x140000FF")]
		public event UIPointerEventHandler UIPointerElementRelease
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xBFFDA0", Offset = "0xBFFDA0", VA = "0xBFFDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5527D8", Offset = "0x5527D8")]
			add
			{
			}
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xBFFE8C", Offset = "0xBFFE8C", VA = "0xBFFE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5527E8", Offset = "0x5527E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000100")]
		public event UIPointerEventHandler UIPointerElementDragStart
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xBFFF78", Offset = "0xBFFF78", VA = "0xBFFF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5527F8", Offset = "0x5527F8")]
			add
			{
			}
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xC00064", Offset = "0xC00064", VA = "0xC00064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552808", Offset = "0x552808")]
			remove
			{
			}
		}

		[Token(Token = "0x14000101")]
		public event UIPointerEventHandler UIPointerElementDragEnd
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xC00150", Offset = "0xC00150", VA = "0xC00150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552818", Offset = "0x552818")]
			add
			{
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xC0023C", Offset = "0xC0023C", VA = "0xC0023C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552828", Offset = "0x552828")]
			remove
			{
			}
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xC003EC", Offset = "0xC003EC", VA = "0xC003EC", Slot = "4")]
		public virtual void OnUIPointerElementEnter(VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xC00500", Offset = "0xC00500", VA = "0xC00500", Slot = "5")]
		public virtual void OnUIPointerElementExit(VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xC00638", Offset = "0xC00638", VA = "0xC00638", Slot = "6")]
		public virtual void OnUIPointerElementClick(VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xC00708", Offset = "0xC00708", VA = "0xC00708", Slot = "7")]
		public virtual void OnUIPointerElementRelease(VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xC007D8", Offset = "0xC007D8", VA = "0xC007D8", Slot = "8")]
		public virtual void OnUIPointerElementDragStart(VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xC00824", Offset = "0xC00824", VA = "0xC00824", Slot = "9")]
		public virtual void OnUIPointerElementDragEnd(VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xC00870", Offset = "0xC00870", VA = "0xC00870", Slot = "10")]
		public virtual void OnActivationButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC008B4", Offset = "0xC008B4", VA = "0xC008B4", Slot = "11")]
		public virtual void OnActivationButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC008F8", Offset = "0xC008F8", VA = "0xC008F8", Slot = "12")]
		public virtual void OnSelectionButtonPressed(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC0093C", Offset = "0xC0093C", VA = "0xC0093C", Slot = "13")]
		public virtual void OnSelectionButtonReleased(ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xC00980", Offset = "0xC00980", VA = "0xC00980", Slot = "14")]
		public virtual VRTK_UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
		{
			return default(VRTK_UIPointerEventArgs);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xC00A90", Offset = "0xC00A90", VA = "0xC00A90", Slot = "15")]
		public virtual VRTK_VRInputModule SetEventSystem(EventSystem eventSystem)
		{
			return null;
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC00C94", Offset = "0xC00C94", VA = "0xC00C94", Slot = "16")]
		public virtual void RemoveEventSystem()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC00E34", Offset = "0xC00E34", VA = "0xC00E34", Slot = "17")]
		public virtual bool PointerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xC00FA4", Offset = "0xC00FA4", VA = "0xC00FA4", Slot = "18")]
		public virtual bool IsActivationButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xC01054", Offset = "0xC01054", VA = "0xC01054", Slot = "19")]
		public virtual bool IsSelectionButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xC01104", Offset = "0xC01104", VA = "0xC01104", Slot = "20")]
		public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xC0118C", Offset = "0xC0118C", VA = "0xC0118C", Slot = "21")]
		public virtual Vector3 GetOriginPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xC01228", Offset = "0xC01228", VA = "0xC01228", Slot = "22")]
		public virtual Vector3 GetOriginForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xC012C4", Offset = "0xC012C4", VA = "0xC012C4", Slot = "23")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xC0134C", Offset = "0xC0134C", VA = "0xC0134C", Slot = "24")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xC01620", Offset = "0xC01620", VA = "0xC01620", Slot = "25")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xC018B0", Offset = "0xC018B0", VA = "0xC018B0", Slot = "26")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xC01930", Offset = "0xC01930", VA = "0xC01930", Slot = "27")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xC01AC0", Offset = "0xC01AC0", VA = "0xC01AC0", Slot = "28")]
		protected virtual void DoActivationButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xC01B34", Offset = "0xC01B34", VA = "0xC01B34", Slot = "29")]
		protected virtual void DoActivationButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xC01BA8", Offset = "0xC01BA8", VA = "0xC01BA8", Slot = "30")]
		protected virtual void DoSelectionButtonPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xC01C1C", Offset = "0xC01C1C", VA = "0xC01C1C", Slot = "31")]
		protected virtual void DoSelectionButtonReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xC01C90", Offset = "0xC01C90", VA = "0xC01C90", Slot = "32")]
		protected virtual void ResetHoverTimer()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xC01C9C", Offset = "0xC01C9C", VA = "0xC01C9C", Slot = "33")]
		protected virtual void ConfigureEventSystem()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xC01E94", Offset = "0xC01E94", VA = "0xC01E94")]
		public VRTK_UIPointer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public class VRTK_ControllerElementHighlighters
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545094", Offset = "0x545094")]
		public VRTK_BaseHighlighter body;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5450CC", Offset = "0x5450CC")]
		public VRTK_BaseHighlighter trigger;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545104", Offset = "0x545104")]
		public VRTK_BaseHighlighter gripLeft;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54513C", Offset = "0x54513C")]
		public VRTK_BaseHighlighter gripRight;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545174", Offset = "0x545174")]
		public VRTK_BaseHighlighter touchpad;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5451AC", Offset = "0x5451AC")]
		public VRTK_BaseHighlighter buttonOne;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5451E4", Offset = "0x5451E4")]
		public VRTK_BaseHighlighter buttonTwo;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54521C", Offset = "0x54521C")]
		public VRTK_BaseHighlighter systemMenu;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545254", Offset = "0x545254")]
		public VRTK_BaseHighlighter startMenu;

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x8ACF10", Offset = "0x8ACF10", VA = "0x8ACF10")]
		public VRTK_ControllerElementHighlighters()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public class VRTK_ControllerModelElementPaths
	{
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54528C", Offset = "0x54528C")]
		public string bodyModelPath;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5452C4", Offset = "0x5452C4")]
		public string triggerModelPath;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5452FC", Offset = "0x5452FC")]
		public string leftGripModelPath;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545334", Offset = "0x545334")]
		public string rightGripModelPath;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54536C", Offset = "0x54536C")]
		public string touchpadModelPath;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5453A4", Offset = "0x5453A4")]
		public string buttonOneModelPath;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5453DC", Offset = "0x5453DC")]
		public string buttonTwoModelPath;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545414", Offset = "0x545414")]
		public string systemMenuModelPath;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54544C", Offset = "0x54544C")]
		public string startMenuModelPath;

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x950348", Offset = "0x950348", VA = "0x950348")]
		public VRTK_ControllerModelElementPaths()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public abstract class VRTK_ObjectFollow : MonoBehaviour
	{
		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545484", Offset = "0x545484")]
		public GameObject gameObjectToFollow;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5454BC", Offset = "0x5454BC")]
		public GameObject gameObjectToChange;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5454F4", Offset = "0x5454F4")]
		public bool followsPosition;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54552C", Offset = "0x54552C")]
		public bool smoothsPosition;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545564", Offset = "0x545564")]
		public float maxAllowedPerFrameDistanceDifference;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54559C", Offset = "0x54559C")]
		private Vector3 <targetPosition>k__BackingField;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5455AC", Offset = "0x5455AC")]
		public bool followsRotation;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5455E4", Offset = "0x5455E4")]
		public bool smoothsRotation;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54561C", Offset = "0x54561C")]
		public float maxAllowedPerFrameAngleDifference;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545654", Offset = "0x545654")]
		private Quaternion <targetRotation>k__BackingField;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545664", Offset = "0x545664")]
		public bool followsScale;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54569C", Offset = "0x54569C")]
		public bool smoothsScale;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5456D4", Offset = "0x5456D4")]
		public float maxAllowedPerFrameSizeDifference;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54570C", Offset = "0x54570C")]
		private Vector3 <targetScale>k__BackingField;

		[Token(Token = "0x17000089")]
		public Vector3 targetPosition
		{
			[Token(Token = "0x60010DA")]
			[Address(RVA = "0x77E0CC", Offset = "0x77E0CC", VA = "0x77E0CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552838", Offset = "0x552838")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010DB")]
			[Address(RVA = "0x77E0D8", Offset = "0x77E0D8", VA = "0x77E0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552848", Offset = "0x552848")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public Quaternion targetRotation
		{
			[Token(Token = "0x60010DC")]
			[Address(RVA = "0x77E0E4", Offset = "0x77E0E4", VA = "0x77E0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552858", Offset = "0x552858")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x77E0F0", Offset = "0x77E0F0", VA = "0x77E0F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552868", Offset = "0x552868")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public Vector3 targetScale
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x77E0FC", Offset = "0x77E0FC", VA = "0x77E0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552878", Offset = "0x552878")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x77E108", Offset = "0x77E108", VA = "0x77E108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552888", Offset = "0x552888")]
			private set
			{
			}
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x77E114", Offset = "0x77E114", VA = "0x77E114", Slot = "4")]
		public virtual void Follow()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x77E1E4", Offset = "0x77E1E4", VA = "0x77E1E4", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x77E274", Offset = "0x77E274", VA = "0x77E274", Slot = "6")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x60010E3")]
		protected abstract Vector3 GetPositionToFollow();

		[Token(Token = "0x60010E4")]
		protected abstract void SetPositionOnGameObject(Vector3 newPosition);

		[Token(Token = "0x60010E5")]
		protected abstract Quaternion GetRotationToFollow();

		[Token(Token = "0x60010E6")]
		protected abstract void SetRotationOnGameObject(Quaternion newRotation);

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x77E324", Offset = "0x77E324", VA = "0x77E324", Slot = "11")]
		protected virtual Vector3 GetScaleToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x77E36C", Offset = "0x77E36C", VA = "0x77E36C", Slot = "12")]
		protected virtual void SetScaleOnGameObject(Vector3 newScale)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x77E3DC", Offset = "0x77E3DC", VA = "0x77E3DC", Slot = "13")]
		protected virtual void FollowPosition()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x77E524", Offset = "0x77E524", VA = "0x77E524", Slot = "14")]
		protected virtual void FollowRotation()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x77E694", Offset = "0x77E694", VA = "0x77E694", Slot = "15")]
		protected virtual void FollowScale()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x77E7DC", Offset = "0x77E7DC", VA = "0x77E7DC")]
		protected VRTK_ObjectFollow()
		{
		}
	}
	[Token(Token = "0x2000166")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5373EC", Offset = "0x5373EC")]
	public class VRTK_RigidbodyFollow : VRTK_ObjectFollow
	{
		[Token(Token = "0x2000475")]
		public enum MovementOption
		{
			[Token(Token = "0x40018DE")]
			Set,
			[Token(Token = "0x40018DF")]
			Move,
			[Token(Token = "0x40018E0")]
			Add
		}

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54571C", Offset = "0x54571C")]
		public MovementOption movementOption;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Rigidbody rigidbodyToFollow;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody rigidbodyToChange;

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x791B50", Offset = "0x791B50", VA = "0x791B50", Slot = "4")]
		public override void Follow()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x791B80", Offset = "0x791B80", VA = "0x791B80", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x791B88", Offset = "0x791B88", VA = "0x791B88", Slot = "17")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x791B94", Offset = "0x791B94", VA = "0x791B94", Slot = "7")]
		protected override Vector3 GetPositionToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x791BC4", Offset = "0x791BC4", VA = "0x791BC4", Slot = "8")]
		protected override void SetPositionOnGameObject(Vector3 newPosition)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x791D64", Offset = "0x791D64", VA = "0x791D64", Slot = "9")]
		protected override Quaternion GetRotationToFollow()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x791D94", Offset = "0x791D94", VA = "0x791D94", Slot = "10")]
		protected override void SetRotationOnGameObject(Quaternion newRotation)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x791F54", Offset = "0x791F54", VA = "0x791F54", Slot = "11")]
		protected override Vector3 GetScaleToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x791F9C", Offset = "0x791F9C", VA = "0x791F9C", Slot = "18")]
		protected virtual void CacheRigidbodies()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x7920F4", Offset = "0x7920F4", VA = "0x7920F4")]
		public VRTK_RigidbodyFollow()
		{
		}
	}
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x537424", Offset = "0x537424")]
	public class VRTK_TransformFollow : VRTK_ObjectFollow
	{
		[Token(Token = "0x2000476")]
		public enum FollowMoment
		{
			[Token(Token = "0x40018E2")]
			OnUpdate,
			[Token(Token = "0x40018E3")]
			OnLateUpdate,
			[Token(Token = "0x40018E4")]
			OnPreRender,
			[Token(Token = "0x40018E5")]
			OnPreCull
		}

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545754", Offset = "0x545754")]
		[SerializeField]
		private FollowMoment _moment;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform transformToFollow;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Transform transformToChange;

		[Token(Token = "0x1700008C")]
		public FollowMoment moment
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xBFA4C4", Offset = "0xBFA4C4", VA = "0xBFA4C4")]
			get
			{
				return default(FollowMoment);
			}
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xBFA4CC", Offset = "0xBFA4CC", VA = "0xBFA4CC")]
			set
			{
			}
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xBFA85C", Offset = "0xBFA85C", VA = "0xBFA85C", Slot = "4")]
		public override void Follow()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xBFA890", Offset = "0xBFA890", VA = "0xBFA890", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xBFAA68", Offset = "0xBFAA68", VA = "0xBFAA68", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xBFAC28", Offset = "0xBFAC28", VA = "0xBFAC28")]
		protected void Update()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xBFAC40", Offset = "0xBFAC40", VA = "0xBFAC40", Slot = "17")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xBFAC5C", Offset = "0xBFAC5C", VA = "0xBFAC5C", Slot = "18")]
		protected virtual void OnCamPreRender(Camera cam)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xBFAD60", Offset = "0xBFAD60", VA = "0xBFAD60", Slot = "19")]
		protected virtual void OnCamPreCull(Camera cam)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xBFAE64", Offset = "0xBFAE64", VA = "0xBFAE64", Slot = "7")]
		protected override Vector3 GetPositionToFollow()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xBFAE94", Offset = "0xBFAE94", VA = "0xBFAE94", Slot = "8")]
		protected override void SetPositionOnGameObject(Vector3 newPosition)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xBFAEEC", Offset = "0xBFAEEC", VA = "0xBFAEEC", Slot = "9")]
		protected override Quaternion GetRotationToFollow()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xBFAF1C", Offset = "0xBFAF1C", VA = "0xBFAF1C", Slot = "10")]
		protected override void SetRotationOnGameObject(Quaternion newRotation)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xBFAF7C", Offset = "0xBFAF7C", VA = "0xBFAF7C", Slot = "20")]
		protected virtual void CacheTransforms()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xBFB0CC", Offset = "0xBFB0CC", VA = "0xBFB0CC")]
		public VRTK_TransformFollow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000168")]
	public sealed class VRTK_SDKInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457A0", Offset = "0x5457A0")]
		private Type <type>k__BackingField;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457B0", Offset = "0x5457B0")]
		private string <originalTypeNameWhenFallbackIsUsed>k__BackingField;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5457C0", Offset = "0x5457C0")]
		private SDK_DescriptionAttribute <description>k__BackingField;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string baseTypeName;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string fallbackTypeName;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string typeName;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int descriptionIndex;

		[Token(Token = "0x1700008D")]
		public Type type
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x8110F4", Offset = "0x8110F4", VA = "0x8110F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552898", Offset = "0x552898")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x8110FC", Offset = "0x8110FC", VA = "0x8110FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5528A8", Offset = "0x5528A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public string originalTypeNameWhenFallbackIsUsed
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x811104", Offset = "0x811104", VA = "0x811104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5528B8", Offset = "0x5528B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x81110C", Offset = "0x81110C", VA = "0x81110C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5528C8", Offset = "0x5528C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public SDK_DescriptionAttribute description
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x811114", Offset = "0x811114", VA = "0x811114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5528D8", Offset = "0x5528D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x81111C", Offset = "0x81111C", VA = "0x81111C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5528E8", Offset = "0x5528E8")]
			private set
			{
			}
		}

		[Token(Token = "0x600110C")]
		public static VRTK_SDKInfo[] Create<BaseType, FallbackType, ActualType>() where BaseType : SDK_Base where FallbackType : BaseType where ActualType : BaseType
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		public static VRTK_SDKInfo[] Create<BaseType, FallbackType>(Type actualType) where BaseType : SDK_Base where FallbackType : BaseType
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x811124", Offset = "0x811124", VA = "0x811124")]
		private VRTK_SDKInfo()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x81112C", Offset = "0x81112C", VA = "0x81112C")]
		public VRTK_SDKInfo(VRTK_SDKInfo infoToCopy)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x81122C", Offset = "0x81122C", VA = "0x81122C")]
		private void SetUp(Type baseType, Type fallbackType, string actualTypeName, int descriptionIndex)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x81197C", Offset = "0x81197C", VA = "0x81197C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x811980", Offset = "0x811980", VA = "0x811980", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x811A64", Offset = "0x811A64", VA = "0x811A64", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x811BA4", Offset = "0x811BA4", VA = "0x811BA4")]
		public bool Equals(VRTK_SDKInfo other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x811BA8", Offset = "0x811BA8", VA = "0x811BA8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x811AE8", Offset = "0x811AE8", VA = "0x811AE8")]
		public static bool operator ==(VRTK_SDKInfo x, VRTK_SDKInfo y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x811BDC", Offset = "0x811BDC", VA = "0x811BDC")]
		public static bool operator !=(VRTK_SDKInfo x, VRTK_SDKInfo y)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000169")]
	public sealed class VRTK_SDKManager : MonoBehaviour
	{
		[Token(Token = "0x2000477")]
		public sealed class ScriptingDefineSymbolPredicateInfo
		{
			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly SDK_ScriptingDefineSymbolPredicateAttribute attribute;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly MethodInfo methodInfo;

			[Token(Token = "0x60025FB")]
			[Address(RVA = "0x816D98", Offset = "0x816D98", VA = "0x816D98")]
			public ScriptingDefineSymbolPredicateInfo(SDK_ScriptingDefineSymbolPredicateAttribute attribute, MethodInfo methodInfo)
			{
			}
		}

		[Token(Token = "0x2000478")]
		public struct LoadedSetupChangeEventArgs
		{
			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly VRTK_SDKSetup previousSetup;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly VRTK_SDKSetup currentSetup;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string errorMessage;

			[Token(Token = "0x60025FC")]
			[Address(RVA = "0x5B66C4", Offset = "0x5B66C4", VA = "0x5B66C4")]
			public LoadedSetupChangeEventArgs(VRTK_SDKSetup previousSetup, VRTK_SDKSetup currentSetup, string errorMessage)
			{
			}
		}

		[Token(Token = "0x2000479")]
		public delegate void LoadedSetupChangeEventHandler(VRTK_SDKManager sender, LoadedSetupChangeEventArgs e);

		[Serializable]
		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539938", Offset = "0x539938")]
		private sealed class <>c
		{
			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKSetup, bool> <>9__71_1;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VRTK_SDKSetup, bool> <>9__71_0;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<VRTK_SDKSetup, bool> <>9__71_2;

			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<VRTK_SDKSetup, bool> <>9__71_3;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<VRTK_SDKSetup, IEnumerable<string>> <>9__71_4;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<ScriptingDefineSymbolPredicateInfo> <>9__80_0;

			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ScriptingDefineSymbolPredicateInfo, bool> <>9__81_0;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<ScriptingDefineSymbolPredicateInfo, string> <>9__81_1;

			[Token(Token = "0x6002602")]
			[Address(RVA = "0x816940", Offset = "0x816940", VA = "0x816940")]
			public <>c()
			{
			}

			[Token(Token = "0x6002603")]
			[Address(RVA = "0x816948", Offset = "0x816948", VA = "0x816948")]
			internal bool <TryLoadSDKSetup>b__71_1(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6002604")]
			[Address(RVA = "0x8169B4", Offset = "0x8169B4", VA = "0x8169B4")]
			internal bool <TryLoadSDKSetup>b__71_0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6002605")]
			[Address(RVA = "0x8169E0", Offset = "0x8169E0", VA = "0x8169E0")]
			internal bool <TryLoadSDKSetup>b__71_2(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6002606")]
			[Address(RVA = "0x816A60", Offset = "0x816A60", VA = "0x816A60")]
			internal bool <TryLoadSDKSetup>b__71_3(VRTK_SDKSetup setup)
			{
				return default(bool);
			}

			[Token(Token = "0x6002607")]
			[Address(RVA = "0x816AE4", Offset = "0x816AE4", VA = "0x816AE4")]
			internal IEnumerable<string> <TryLoadSDKSetup>b__71_4(VRTK_SDKSetup setup)
			{
				return null;
			}

			[Token(Token = "0x6002608")]
			[Address(RVA = "0x816B10", Offset = "0x816B10", VA = "0x816B10")]
			internal int <PopulateAvailableScriptingDefineSymbolPredicateInfos>b__80_0(ScriptingDefineSymbolPredicateInfo x, ScriptingDefineSymbolPredicateInfo y)
			{
				return default(int);
			}

			[Token(Token = "0x6002609")]
			[Address(RVA = "0x816B7C", Offset = "0x816B7C", VA = "0x816B7C")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__81_0(ScriptingDefineSymbolPredicateInfo predicateInfo)
			{
				return default(bool);
			}

			[Token(Token = "0x600260A")]
			[Address(RVA = "0x816C70", Offset = "0x816C70", VA = "0x816C70")]
			internal string <PopulateAvailableAndInstalledSDKInfos>b__81_1(ScriptingDefineSymbolPredicateInfo predicateInfo)
			{
				return null;
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539948", Offset = "0x539948")]
		private sealed class <>c__DisplayClass78_0
		{
			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string loadedDeviceName;

			[Token(Token = "0x600260B")]
			[Address(RVA = "0x816CAC", Offset = "0x816CAC", VA = "0x816CAC")]
			public <>c__DisplayClass78_0()
			{
			}

			[Token(Token = "0x600260C")]
			[Address(RVA = "0x816CB4", Offset = "0x816CB4", VA = "0x816CB4")]
			internal bool <FinishSDKSetupLoading>b__0(VRTK_SDKSetup setup)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539958", Offset = "0x539958")]
		private sealed class <FinishSDKSetupLoading>d__78 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass78_0 <>8__1;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRTK_SDKManager <>4__this;

			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VRTK_SDKSetup[] sdkSetups;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public VRTK_SDKSetup previousLoadedSetup;

			[Token(Token = "0x1700024E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002610")]
				[Address(RVA = "0x8176CC", Offset = "0x8176CC", VA = "0x8176CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002612")]
				[Address(RVA = "0x81773C", Offset = "0x81773C", VA = "0x81773C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600260D")]
			[Address(RVA = "0x8167C0", Offset = "0x8167C0", VA = "0x8167C0")]
			[DebuggerHidden]
			public <FinishSDKSetupLoading>d__78(int <>1__state)
			{
			}

			[Token(Token = "0x600260E")]
			[Address(RVA = "0x816DD0", Offset = "0x816DD0", VA = "0x816DD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600260F")]
			[Address(RVA = "0x816DD4", Offset = "0x816DD4", VA = "0x816DD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002611")]
			[Address(RVA = "0x8176D4", Offset = "0x8176D4", VA = "0x8176D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539968", Offset = "0x539968")]
		private sealed class <>c__DisplayClass80_0
		{
			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MethodInfo methodInfo;

			[Token(Token = "0x6002613")]
			[Address(RVA = "0x8167EC", Offset = "0x8167EC", VA = "0x8167EC")]
			public <>c__DisplayClass80_0()
			{
			}

			[Token(Token = "0x6002614")]
			[Address(RVA = "0x816D24", Offset = "0x816D24", VA = "0x816D24")]
			internal ScriptingDefineSymbolPredicateInfo <PopulateAvailableScriptingDefineSymbolPredicateInfos>b__1(SDK_ScriptingDefineSymbolPredicateAttribute predicateAttribute)
			{
				return null;
			}
		}

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539978", Offset = "0x539978")]
		private sealed class <>c__DisplayClass82_0<BaseType, FallbackType> where BaseType : SDK_Base where FallbackType : BaseType
		{
			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type baseType;

			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Type fallbackType;

			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ICollection<string> symbolsOfInstalledSDKs;

			[Token(Token = "0x6002615")]
			public <>c__DisplayClass82_0()
			{
			}

			[Token(Token = "0x6002616")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__0(Type type)
			{
				return default(bool);
			}

			[Token(Token = "0x6002617")]
			internal bool <PopulateAvailableAndInstalledSDKInfos>b__2(VRTK_SDKInfo info)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539988", Offset = "0x539988")]
		private sealed class <>c__82<BaseType, FallbackType> where BaseType : SDK_Base where FallbackType : BaseType
		{
			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__82<BaseType, FallbackType> <>9;

			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Comparison<VRTK_SDKInfo> <>9__82_1;

			[Token(Token = "0x6002619")]
			public <>c__82()
			{
			}

			[Token(Token = "0x600261A")]
			internal int <PopulateAvailableAndInstalledSDKInfos>b__82_1(VRTK_SDKInfo x, VRTK_SDKInfo y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545810", Offset = "0x545810")]
		private static ReadOnlyCollection<ScriptingDefineSymbolPredicateInfo> <AvailableScriptingDefineSymbolPredicateInfos>k__BackingField;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Dictionary<Type, Type> SDKFallbackTypesByBaseType;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545820", Offset = "0x545820")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableSystemSDKInfos>k__BackingField;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545830", Offset = "0x545830")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableBoundariesSDKInfos>k__BackingField;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545840", Offset = "0x545840")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableHeadsetSDKInfos>k__BackingField;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545850", Offset = "0x545850")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <AvailableControllerSDKInfos>k__BackingField;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545860", Offset = "0x545860")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledSystemSDKInfos>k__BackingField;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545870", Offset = "0x545870")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledBoundariesSDKInfos>k__BackingField;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545880", Offset = "0x545880")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledHeadsetSDKInfos>k__BackingField;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545890", Offset = "0x545890")]
		private static ReadOnlyCollection<VRTK_SDKInfo> <InstalledControllerSDKInfos>k__BackingField;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static VRTK_SDKManager _instance;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5458A0", Offset = "0x5458A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5458A0", Offset = "0x5458A0")]
		public bool persistOnLoad;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545900", Offset = "0x545900")]
		public bool autoManageScriptDefines;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SDK_ScriptingDefineSymbolPredicateAttribute> activeScriptingDefineSymbolsWithoutSDKClasses;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545938", Offset = "0x545938")]
		public GameObject scriptAliasLeftController;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545970", Offset = "0x545970")]
		public GameObject scriptAliasRightController;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5459A8", Offset = "0x5459A8")]
		public bool autoManageVRSettings;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5459E0", Offset = "0x5459E0")]
		public bool autoLoadSetup;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545A18", Offset = "0x545A18")]
		public VRTK_SDKSetup[] setups;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A50", Offset = "0x545A50")]
		private VRTK_SDKSetup <loadedSetup>k__BackingField;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static HashSet<VRTK_SDKInfo> _previouslyUsedSetupInfos;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x545A60", Offset = "0x545A60")]
		private ReadOnlyCollection<Behaviour> <behavioursToToggleOnLoadedSetupChange>k__BackingField;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Behaviour> _behavioursToToggleOnLoadedSetupChange;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Behaviour, bool> _behavioursInitialState;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _lastCheckTime;

		[Token(Token = "0x17000090")]
		public static ReadOnlyCollection<ScriptingDefineSymbolPredicateInfo> AvailableScriptingDefineSymbolPredicateInfos
		{
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x811BF8", Offset = "0x811BF8", VA = "0x811BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5528F8", Offset = "0x5528F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001119")]
			[Address(RVA = "0x811C60", Offset = "0x811C60", VA = "0x811C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552908", Offset = "0x552908")]
			private set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableSystemSDKInfos
		{
			[Token(Token = "0x600111A")]
			[Address(RVA = "0x811CCC", Offset = "0x811CCC", VA = "0x811CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552918", Offset = "0x552918")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111B")]
			[Address(RVA = "0x811D34", Offset = "0x811D34", VA = "0x811D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552928", Offset = "0x552928")]
			private set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableBoundariesSDKInfos
		{
			[Token(Token = "0x600111C")]
			[Address(RVA = "0x811DA0", Offset = "0x811DA0", VA = "0x811DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552938", Offset = "0x552938")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x811E08", Offset = "0x811E08", VA = "0x811E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552948", Offset = "0x552948")]
			private set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableHeadsetSDKInfos
		{
			[Token(Token = "0x600111E")]
			[Address(RVA = "0x811E74", Offset = "0x811E74", VA = "0x811E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552958", Offset = "0x552958")]
			get
			{
				return null;
			}
			[Token(Token = "0x600111F")]
			[Address(RVA = "0x811EDC", Offset = "0x811EDC", VA = "0x811EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552968", Offset = "0x552968")]
			private set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public static ReadOnlyCollection<VRTK_SDKInfo> AvailableControllerSDKInfos
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0x811F48", Offset = "0x811F48", VA = "0x811F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552978", Offset = "0x552978")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x811FB0", Offset = "0x811FB0", VA = "0x811FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552988", Offset = "0x552988")]
			private set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledSystemSDKInfos
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x81201C", Offset = "0x81201C", VA = "0x81201C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552998", Offset = "0x552998")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x812084", Offset = "0x812084", VA = "0x812084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5529A8", Offset = "0x5529A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledBoundariesSDKInfos
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x8120F0", Offset = "0x8120F0", VA = "0x8120F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5529B8", Offset = "0x5529B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x812158", Offset = "0x812158", VA = "0x812158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5529C8", Offset = "0x5529C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledHeadsetSDKInfos
		{
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x8121C4", Offset = "0x8121C4", VA = "0x8121C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5529D8", Offset = "0x5529D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x81222C", Offset = "0x81222C", VA = "0x81222C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5529E8", Offset = "0x5529E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public static ReadOnlyCollection<VRTK_SDKInfo> InstalledControllerSDKInfos
		{
			[Token(Token = "0x6001128")]
			[Address(RVA = "0x812298", Offset = "0x812298", VA = "0x812298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5529F8", Offset = "0x5529F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001129")]
			[Address(RVA = "0x812300", Offset = "0x812300", VA = "0x812300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552A08", Offset = "0x552A08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public static VRTK_SDKManager instance
		{
			[Token(Token = "0x600112A")]
			[Address(RVA = "0x81236C", Offset = "0x81236C", VA = "0x81236C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		public VRTK_SDKSetup loadedSetup
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0x812674", Offset = "0x812674", VA = "0x812674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552A18", Offset = "0x552A18")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112C")]
			[Address(RVA = "0x81267C", Offset = "0x81267C", VA = "0x81267C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552A28", Offset = "0x552A28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public ReadOnlyCollection<Behaviour> behavioursToToggleOnLoadedSetupChange
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0x812684", Offset = "0x812684", VA = "0x812684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552A38", Offset = "0x552A38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x81268C", Offset = "0x81268C", VA = "0x81268C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552A48", Offset = "0x552A48")]
			private set
			{
			}
		}

		[Token(Token = "0x14000102")]
		public event LoadedSetupChangeEventHandler LoadedSetupChanged
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x812694", Offset = "0x812694", VA = "0x812694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552A58", Offset = "0x552A58")]
			add
			{
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x812780", Offset = "0x812780", VA = "0x812780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552A68", Offset = "0x552A68")]
			remove
			{
			}
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x81286C", Offset = "0x81286C", VA = "0x81286C")]
		public void AddBehaviourToToggleOnLoadedSetupChange(Behaviour behaviour)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x8129D0", Offset = "0x8129D0", VA = "0x8129D0")]
		public void RemoveBehaviourToToggleOnLoadedSetupChange(Behaviour behaviour)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x812A40", Offset = "0x812A40", VA = "0x812A40")]
		private void Update()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x812B04", Offset = "0x812B04", VA = "0x812B04")]
		public void TryLoadSDKSetupFromList(bool tryUseLastLoadedSetup = true)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x8137BC", Offset = "0x8137BC", VA = "0x8137BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x812C80", Offset = "0x812C80", VA = "0x812C80")]
		public void TryLoadSDKSetup(int startIndex, bool tryToReinitialize, params VRTK_SDKSetup[] sdkSetups)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x814A70", Offset = "0x814A70", VA = "0x814A70")]
		public void UnloadSDKSetup(bool disableVR = false)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x814EAC", Offset = "0x814EAC", VA = "0x814EAC")]
		static VRTK_SDKManager()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x815B3C", Offset = "0x815B3C", VA = "0x815B3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x815BC8", Offset = "0x815BC8", VA = "0x815BC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x812494", Offset = "0x812494", VA = "0x812494")]
		private void CreateInstance()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x814E4C", Offset = "0x814E4C", VA = "0x814E4C")]
		private void OnLoadedSetupChanged(LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x8149C4", Offset = "0x8149C4", VA = "0x8149C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x552A78", Offset = "0x552A78")]
		private IEnumerator FinishSDKSetupLoading(VRTK_SDKSetup[] sdkSetups, VRTK_SDKSetup previousLoadedSetup)
		{
			return null;
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x81420C", Offset = "0x81420C", VA = "0x81420C")]
		private void ToggleBehaviours(bool state)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x8150D8", Offset = "0x8150D8", VA = "0x8150D8")]
		private static void PopulateAvailableScriptingDefineSymbolPredicateInfos()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x815720", Offset = "0x815720", VA = "0x815720")]
		private static void PopulateAvailableAndInstalledSDKInfos()
		{
		}

		[Token(Token = "0x6001141")]
		private static void PopulateAvailableAndInstalledSDKInfos<BaseType, FallbackType>(List<VRTK_SDKInfo> availableSDKInfos, List<VRTK_SDKInfo> installedSDKInfos, ICollection<string> symbolsOfInstalledSDKs) where BaseType : SDK_Base where FallbackType : BaseType
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x8167F4", Offset = "0x8167F4", VA = "0x8167F4")]
		public VRTK_SDKManager()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public sealed class VRTK_SDKSetup : MonoBehaviour
	{
		[Token(Token = "0x2000480")]
		public delegate void LoadEventHandler(VRTK_SDKManager sender, VRTK_SDKSetup setup);

		[Serializable]
		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539998", Offset = "0x539998")]
		private sealed class <>c
		{
			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VRTK_SDKInfo, string> <>9__35_0;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<GameObject, GameObject> <>9__54_0;

			[Token(Token = "0x6002620")]
			[Address(RVA = "0x819B40", Offset = "0x819B40", VA = "0x819B40")]
			public <>c()
			{
			}

			[Token(Token = "0x6002621")]
			[Address(RVA = "0x819B48", Offset = "0x819B48", VA = "0x819B48")]
			internal string <get_usedVRDeviceNames>b__35_0(VRTK_SDKInfo info)
			{
				return null;
			}

			[Token(Token = "0x6002622")]
			[Address(RVA = "0x819B84", Offset = "0x819B84", VA = "0x819B84")]
			internal void <SetupControllers>b__54_0(GameObject scriptAliasGameObject, GameObject actualGameObject)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5399A8", Offset = "0x5399A8")]
		private sealed class <>c__52<BaseType> where BaseType : SDK_Base
		{
			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__52<BaseType> <>9;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<VRTK_SDKInfo, Type> <>9__52_0;

			[Token(Token = "0x6002624")]
			public <>c__52()
			{
			}

			[Token(Token = "0x6002625")]
			internal Type <GetSDKErrorDescription>b__52_0(VRTK_SDKInfo installedInfo)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545A80", Offset = "0x545A80")]
		public bool autoPopulateObjectReferences;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545AB8", Offset = "0x545AB8")]
		public GameObject actualBoundaries;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545AF0", Offset = "0x545AF0")]
		public GameObject actualHeadset;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545B28", Offset = "0x545B28")]
		public GameObject actualLeftController;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545B60", Offset = "0x545B60")]
		public GameObject actualRightController;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545B98", Offset = "0x545B98")]
		public GameObject modelAliasLeftController;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545BD0", Offset = "0x545BD0")]
		public GameObject modelAliasRightController;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRTK_SDKInfo cachedSystemSDKInfo;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private VRTK_SDKInfo cachedBoundariesSDKInfo;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private VRTK_SDKInfo cachedHeadsetSDKInfo;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private VRTK_SDKInfo cachedControllerSDKInfo;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SDK_BaseSystem cachedSystemSDK;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SDK_BaseBoundaries cachedBoundariesSDK;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDK_BaseHeadset cachedHeadsetSDK;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SDK_BaseController cachedControllerSDK;

		[Token(Token = "0x1700009C")]
		public VRTK_SDKInfo systemSDKInfo
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x814E8C", Offset = "0x814E8C", VA = "0x814E8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x81804C", Offset = "0x81804C", VA = "0x81804C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public VRTK_SDKInfo boundariesSDKInfo
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x814E94", Offset = "0x814E94", VA = "0x814E94")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x8183A0", Offset = "0x8183A0", VA = "0x8183A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public VRTK_SDKInfo headsetSDKInfo
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x814E9C", Offset = "0x814E9C", VA = "0x814E9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x8184A4", Offset = "0x8184A4", VA = "0x8184A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public VRTK_SDKInfo controllerSDKInfo
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x814EA4", Offset = "0x814EA4", VA = "0x814EA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114E")]
			[Address(RVA = "0x8185A8", Offset = "0x8185A8", VA = "0x8185A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public SDK_BaseSystem systemSDK
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x8186AC", Offset = "0x8186AC", VA = "0x8186AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		public SDK_BaseBoundaries boundariesSDK
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x818824", Offset = "0x818824", VA = "0x818824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		public SDK_BaseHeadset headsetSDK
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x81899C", Offset = "0x81899C", VA = "0x81899C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		public SDK_BaseController controllerSDK
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x818B14", Offset = "0x818B14", VA = "0x818B14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		public string[] usedVRDeviceNames
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x81476C", Offset = "0x81476C", VA = "0x81476C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		public bool isValid
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x816980", Offset = "0x816980", VA = "0x816980")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000103")]
		public event LoadEventHandler Loaded
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x817C9C", Offset = "0x817C9C", VA = "0x817C9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552ADC", Offset = "0x552ADC")]
			add
			{
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x817D88", Offset = "0x817D88", VA = "0x817D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552AEC", Offset = "0x552AEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000104")]
		public event LoadEventHandler Unloaded
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x817E74", Offset = "0x817E74", VA = "0x817E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552AFC", Offset = "0x552AFC")]
			add
			{
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x817F60", Offset = "0x817F60", VA = "0x817F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552B0C", Offset = "0x552B0C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x818150", Offset = "0x818150", VA = "0x818150")]
		public void PopulateObjectReferences(bool force)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x813BF4", Offset = "0x813BF4", VA = "0x813BF4")]
		public string[] GetSimplifiedErrorDescriptions()
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x81739C", Offset = "0x81739C", VA = "0x81739C")]
		public void OnLoaded(VRTK_SDKManager sender)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x814494", Offset = "0x814494", VA = "0x814494")]
		public void OnUnloaded(VRTK_SDKManager sender)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x819820", Offset = "0x819820", VA = "0x819820")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600115A")]
		private static void HandleSDKGetter<BaseType>(string prettyName, VRTK_SDKInfo info, IEnumerable<VRTK_SDKInfo> installedInfos) where BaseType : SDK_Base
		{
		}

		[Token(Token = "0x600115B")]
		private static string GetSDKErrorDescription<BaseType>(string prettyName, VRTK_SDKInfo info, IEnumerable<VRTK_SDKInfo> installedInfos) where BaseType : SDK_Base
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x818C8C", Offset = "0x818C8C", VA = "0x818C8C")]
		private void SetupHeadset()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x818D90", Offset = "0x818D90", VA = "0x818D90")]
		private void SetupControllers()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x8198AC", Offset = "0x8198AC", VA = "0x8198AC")]
		public VRTK_SDKSetup()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x8199EC", Offset = "0x8199EC", VA = "0x8199EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552B1C", Offset = "0x552B1C")]
		private void <OnLoaded>b__48_0(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x819A28", Offset = "0x819A28", VA = "0x819A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552B2C", Offset = "0x552B2C")]
		private void <OnLoaded>b__48_1(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x819A64", Offset = "0x819A64", VA = "0x819A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552B3C", Offset = "0x552B3C")]
		private void <OnUnloaded>b__49_0(SDK_Base sdkBase)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x819AA0", Offset = "0x819AA0", VA = "0x819AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552B4C", Offset = "0x552B4C")]
		private void <OnUnloaded>b__49_1(SDK_Base sdkBase)
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class VRTK_SDKSetupSwitcher : MonoBehaviour
	{
		[Token(Token = "0x2000483")]
		protected enum ViewingState
		{
			[Token(Token = "0x4001907")]
			Status,
			[Token(Token = "0x4001908")]
			Selection
		}

		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5399B8", Offset = "0x5399B8")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VRTK_SDKSetupSwitcher <>4__this;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTK_SDKSetup[] setups;

			[Token(Token = "0x6002626")]
			[Address(RVA = "0x81AD58", Offset = "0x81AD58", VA = "0x81AD58")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002627")]
			[Address(RVA = "0x81AE9C", Offset = "0x81AE9C", VA = "0x81AE9C")]
			internal void <AddSelectionButtons>b__0()
			{
			}
		}

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5399C8", Offset = "0x5399C8")]
		private sealed class <>c__DisplayClass19_1
		{
			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int indexCopy;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass19_0 CS$<>8__locals1;

			[Token(Token = "0x6002628")]
			[Address(RVA = "0x81AD60", Offset = "0x81AD60", VA = "0x81AD60")]
			public <>c__DisplayClass19_1()
			{
			}

			[Token(Token = "0x6002629")]
			[Address(RVA = "0x81AEDC", Offset = "0x81AEDC", VA = "0x81AEDC")]
			internal void <AddSelectionButtons>b__1()
			{
			}
		}

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x545C68", Offset = "0x545C68")]
		[SerializeField]
		private Camera fallbackCamera;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EventSystem eventSystem;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x545CC4", Offset = "0x545CC4")]
		[SerializeField]
		private Text currentText;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform statusPanel;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RectTransform selectionPanel;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button switchButton;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button cancelButton;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button chooseButton;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRTK_SDKManager sdkManager;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<GameObject> chooseButtonGameObjects;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x819E24", Offset = "0x819E24", VA = "0x819E24", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x819EE4", Offset = "0x819EE4", VA = "0x819EE4", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x81A07C", Offset = "0x81A07C", VA = "0x81A07C", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x81A1EC", Offset = "0x81A1EC", VA = "0x81A1EC", Slot = "7")]
		protected virtual void OnLoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x81A1FC", Offset = "0x81A1FC", VA = "0x81A1FC", Slot = "8")]
		protected virtual void OnSwitchButtonClick()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x81A20C", Offset = "0x81A20C", VA = "0x81A20C", Slot = "9")]
		protected virtual void OnCancelButtonClick()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x81A21C", Offset = "0x81A21C", VA = "0x81A21C", Slot = "10")]
		protected virtual void Show(ViewingState viewingState)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x81A594", Offset = "0x81A594", VA = "0x81A594", Slot = "11")]
		protected virtual void UpdateCurrentText()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x81A670", Offset = "0x81A670", VA = "0x81A670", Slot = "12")]
		protected virtual void AddSelectionButtons()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x81AD68", Offset = "0x81AD68", VA = "0x81AD68", Slot = "13")]
		protected virtual void RemoveCreatedChooseButtons()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x81AE2C", Offset = "0x81AE2C", VA = "0x81AE2C")]
		public VRTK_SDKSetupSwitcher()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53745C", Offset = "0x53745C")]
	public sealed class VRTK_AdaptiveQuality : MonoBehaviour
	{
		[Token(Token = "0x2000486")]
		private sealed class AdaptiveSetting<T>
		{
			[Token(Token = "0x400190D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E198", Offset = "0x54E198")]
			private T <previousValue>k__BackingField;

			[Token(Token = "0x400190E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E1A8", Offset = "0x54E1A8")]
			private int <lastChangeFrameCount>k__BackingField;

			[Token(Token = "0x400190F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int increaseFrameCost;

			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int decreaseFrameCost;

			[Token(Token = "0x4001911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T _currentValue;

			[Token(Token = "0x17000250")]
			public T currentValue
			{
				[Token(Token = "0x600262A")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x600262B")]
				set
				{
				}
			}

			[Token(Token = "0x17000251")]
			public T previousValue
			{
				[Token(Token = "0x600262C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x556420", Offset = "0x556420")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x600262D")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x556430", Offset = "0x556430")]
				private set
				{
				}
			}

			[Token(Token = "0x17000252")]
			public int lastChangeFrameCount
			{
				[Token(Token = "0x600262E")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x556440", Offset = "0x556440")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600262F")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x556450", Offset = "0x556450")]
				private set
				{
				}
			}

			[Token(Token = "0x6002630")]
			public AdaptiveSetting(T currentValue, int increaseFrameCost, int decreaseFrameCost)
			{
			}
		}

		[Token(Token = "0x2000487")]
		private static class CommandLineArguments
		{
			[Token(Token = "0x4001912")]
			public const string Disable = "-noaq";

			[Token(Token = "0x4001913")]
			public const string MinimumRenderScale = "-aqminscale";

			[Token(Token = "0x4001914")]
			public const string MaximumRenderScale = "-aqmaxscale";

			[Token(Token = "0x4001915")]
			public const string MaximumRenderTargetDimension = "-aqmaxres";

			[Token(Token = "0x4001916")]
			public const string RenderScaleFillRateStepSizeInPercent = "-aqfillratestep";

			[Token(Token = "0x4001917")]
			public const string OverrideRenderScaleLevel = "-aqoverride";

			[Token(Token = "0x4001918")]
			public const string DrawDebugVisualization = "-vrdebug";

			[Token(Token = "0x4001919")]
			public const string MSAALevel = "-msaa";
		}

		[Token(Token = "0x2000488")]
		private static class KeyboardShortcuts
		{
			[Token(Token = "0x400191A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly KeyCode[] Modifiers;

			[Token(Token = "0x400191B")]
			public const KeyCode ToggleDrawDebugVisualization = KeyCode.F1;

			[Token(Token = "0x400191C")]
			public const KeyCode ToggleOverrideRenderScale = KeyCode.F2;

			[Token(Token = "0x400191D")]
			public const KeyCode DecreaseOverrideRenderScaleLevel = KeyCode.F3;

			[Token(Token = "0x400191E")]
			public const KeyCode IncreaseOverrideRenderScaleLevel = KeyCode.F4;
		}

		[Token(Token = "0x2000489")]
		private static class ShaderPropertyIDs
		{
			[Token(Token = "0x400191F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int RenderScaleLevelsCount;

			[Token(Token = "0x4001920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int DefaultRenderViewportScaleLevel;

			[Token(Token = "0x4001921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int CurrentRenderViewportScaleLevel;

			[Token(Token = "0x4001922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly int CurrentRenderScaleLevel;

			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly int LastFrameIsInBudget;
		}

		[Token(Token = "0x200048A")]
		private sealed class Timing
		{
			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly float[] buffer;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int bufferIndex;

			[Token(Token = "0x6002633")]
			[Address(RVA = "0x73470C", Offset = "0x73470C", VA = "0x73470C")]
			public void SaveCurrentFrameTiming()
			{
			}

			[Token(Token = "0x6002634")]
			[Address(RVA = "0x7355F8", Offset = "0x7355F8", VA = "0x7355F8")]
			public float GetFrameTiming(int framesAgo)
			{
				return default(float);
			}

			[Token(Token = "0x6002635")]
			[Address(RVA = "0x7353BC", Offset = "0x7353BC", VA = "0x7353BC")]
			public bool WasFrameTimingBad(int framesAgo, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6002636")]
			[Address(RVA = "0x73556C", Offset = "0x73556C", VA = "0x73556C")]
			public bool WasFrameTimingGood(int framesAgo, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6002637")]
			[Address(RVA = "0x735448", Offset = "0x735448", VA = "0x735448")]
			public bool WillFrameTimingBeBad(float extrapolationThresholdInMilliseconds, float thresholdInMilliseconds, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6002638")]
			[Address(RVA = "0x7358A8", Offset = "0x7358A8", VA = "0x7358A8")]
			private static bool AreFramesAvailable(int framesAgo, int lastChangeFrameCount, int changeFrameCost)
			{
				return default(bool);
			}

			[Token(Token = "0x6002639")]
			[Address(RVA = "0x732960", Offset = "0x732960", VA = "0x732960")]
			public Timing()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5399D8", Offset = "0x5399D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<float> <>9__49_0;

			[Token(Token = "0x600263B")]
			[Address(RVA = "0x7356F8", Offset = "0x7356F8", VA = "0x7356F8")]
			public <>c()
			{
			}

			[Token(Token = "0x600263C")]
			[Address(RVA = "0x735700", Offset = "0x735700", VA = "0x735700")]
			internal bool <UpdateRenderScaleLevels>b__49_0(float renderScale)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545D60", Offset = "0x545D60")]
		public bool drawDebugVisualization;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545D98", Offset = "0x545D98")]
		public bool allowKeyboardShortcuts;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545DD0", Offset = "0x545DD0")]
		public bool allowCommandLineArguments;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545E08", Offset = "0x545E08")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x545E08", Offset = "0x545E08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x545E08", Offset = "0x545E08")]
		public int msaaLevel;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545E80", Offset = "0x545E80")]
		public bool scaleRenderViewport;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545EB8", Offset = "0x545EB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x545EB8", Offset = "0x545EB8")]
		public float minimumRenderScale;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545F10", Offset = "0x545F10")]
		public float maximumRenderScale;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545F48", Offset = "0x545F48")]
		public int maximumRenderTargetDimension;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545F80", Offset = "0x545F80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x545F80", Offset = "0x545F80")]
		public int renderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x545FD8", Offset = "0x545FD8")]
		public bool scaleRenderTargetResolution;

		[NonSerialized]
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546010", Offset = "0x546010")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x546010", Offset = "0x546010")]
		public bool overrideRenderViewportScale;

		[NonSerialized]
		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546070", Offset = "0x546070")]
		public int overrideRenderViewportScaleLevel;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly ReadOnlyCollection<float> renderScales;

		[Token(Token = "0x4000C37")]
		private const float DefaultFrameDurationInMilliseconds = 13.888889f;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly AdaptiveSetting<int> renderViewportScaleSetting;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly AdaptiveSetting<int> renderScaleSetting;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<float> allRenderScales;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int defaultRenderViewportScaleLevel;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float previousMinimumRenderScale;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float previousMaximumRenderScale;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float previousRenderScaleFillRateStepSizeInPercent;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Timing timing;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int lastRenderViewportScaleLevelBelowRenderScaleLevelFrameCount;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool interleavedReprojectionEnabled;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool hmdDisplayIsOnDesktop;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float singleFrameDurationInMilliseconds;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject debugVisualizationQuad;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material debugVisualizationQuadMaterial;

		[Token(Token = "0x170000A6")]
		public static float CurrentRenderScale
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0x7326B0", Offset = "0x7326B0", VA = "0x7326B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A7")]
		public Vector2 defaultRenderTargetResolution
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x7326E0", Offset = "0x7326E0", VA = "0x7326E0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000A8")]
		public Vector2 currentRenderTargetResolution
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0x7327E0", Offset = "0x7327E0", VA = "0x7327E0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x732810", Offset = "0x732810", VA = "0x732810")]
		public VRTK_AdaptiveQuality()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x73274C", Offset = "0x73274C", VA = "0x73274C")]
		public static Vector2 RenderTargetResolutionForRenderScale(float renderScale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x7329C0", Offset = "0x7329C0", VA = "0x7329C0")]
		public float BiggestAllowedMaximumRenderScale()
		{
			return default(float);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x732AC0", Offset = "0x732AC0", VA = "0x732AC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x732F48", Offset = "0x732F48", VA = "0x732F48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x732FC8", Offset = "0x732FC8", VA = "0x732FC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x7335AC", Offset = "0x7335AC", VA = "0x7335AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x7337B4", Offset = "0x7337B4", VA = "0x7337B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x73349C", Offset = "0x73349C", VA = "0x73349C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x733834", Offset = "0x733834", VA = "0x733834")]
		private void Update()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x7347A8", Offset = "0x7347A8", VA = "0x7347A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x7351EC", Offset = "0x7351EC", VA = "0x7351EC")]
		private void OnCameraPreCull(Camera camera)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x733188", Offset = "0x733188", VA = "0x733188")]
		private void HandleCommandLineArguments()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x733880", Offset = "0x733880", VA = "0x733880")]
		private void HandleKeyPresses()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x7352D0", Offset = "0x7352D0", VA = "0x7352D0")]
		private void UpdateMSAALevel()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x7339CC", Offset = "0x7339CC", VA = "0x7339CC")]
		private void UpdateRenderScaleLevels()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x7347AC", Offset = "0x7347AC", VA = "0x7347AC")]
		private void UpdateRenderScale()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x7336C0", Offset = "0x7336C0", VA = "0x7336C0")]
		private static void SetRenderScale(float renderScale, float renderViewportScale)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x735314", Offset = "0x735314", VA = "0x735314")]
		private int ClampRenderScaleLevel(int renderScaleLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x733D88", Offset = "0x733D88", VA = "0x733D88")]
		private void CreateOrDestroyDebugVisualization()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x7344B4", Offset = "0x7344B4", VA = "0x7344B4")]
		private void UpdateDebugVisualization()
		{
		}
	}
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x537494", Offset = "0x537494")]
	public class VRTK_CustomRaycast : MonoBehaviour
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5460A8", Offset = "0x5460A8")]
		public LayerMask layersToIgnore;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5460E0", Offset = "0x5460E0")]
		public QueryTriggerInteraction triggerInteraction;

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x956000", Offset = "0x956000", VA = "0x956000")]
		public static bool Raycast(VRTK_CustomRaycast customCast, Ray ray, out RaycastHit hitData, LayerMask ignoreLayers, float length = float.PositiveInfinity, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x956134", Offset = "0x956134", VA = "0x956134")]
		public static bool Linecast(VRTK_CustomRaycast customCast, Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x95627C", Offset = "0x95627C", VA = "0x95627C")]
		public static bool CapsuleCast(VRTK_CustomRaycast customCast, Vector3 point1, Vector3 point2, float radius, Vector3 direction, float maxDistance, out RaycastHit hitData, LayerMask ignoreLayers, QueryTriggerInteraction affectTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x956400", Offset = "0x956400", VA = "0x956400", Slot = "4")]
		public virtual bool CustomRaycast(Ray ray, out RaycastHit hitData, float length = float.PositiveInfinity)
		{
			return default(bool);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x956470", Offset = "0x956470", VA = "0x956470", Slot = "5")]
		public virtual bool CustomLinecast(Vector3 startPosition, Vector3 endPosition, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x9564F4", Offset = "0x9564F4", VA = "0x9564F4", Slot = "6")]
		public virtual bool CustomCapsuleCast(Vector3 point1, Vector3 point2, float radius, Vector3 direction, float maxDistance, out RaycastHit hitData)
		{
			return default(bool);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x9565A0", Offset = "0x9565A0", VA = "0x9565A0")]
		public VRTK_CustomRaycast()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public static class VRTK_DeviceFinder
	{
		[Token(Token = "0x200048C")]
		public enum Devices
		{
			[Token(Token = "0x4001929")]
			Headset,
			[Token(Token = "0x400192A")]
			LeftController,
			[Token(Token = "0x400192B")]
			RightController
		}

		[Token(Token = "0x200048D")]
		public enum Headsets
		{
			[Token(Token = "0x400192D")]
			Unknown,
			[Token(Token = "0x400192E")]
			OculusRift,
			[Token(Token = "0x400192F")]
			OculusRiftCV1,
			[Token(Token = "0x4001930")]
			Vive,
			[Token(Token = "0x4001931")]
			ViveMV,
			[Token(Token = "0x4001932")]
			ViveDVT
		}

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string cachedHeadsetType;

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x95B4E8", Offset = "0x95B4E8", VA = "0x95B4E8")]
		public static SDK_BaseController.ControllerType GetCurrentControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x95B548", Offset = "0x95B548", VA = "0x95B548")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x95B5B0", Offset = "0x95B5B0", VA = "0x95B5B0")]
		public static GameObject GetControllerByIndex(uint index, bool getActual)
		{
			return null;
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x95B628", Offset = "0x95B628", VA = "0x95B628")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x552B5C", Offset = "0x552B5C")]
		public static Transform GetControllerOrigin(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x95B6BC", Offset = "0x95B6BC", VA = "0x95B6BC")]
		public static Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x95B724", Offset = "0x95B724", VA = "0x95B724")]
		public static Transform DeviceTransform(Devices device)
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x95B81C", Offset = "0x95B81C", VA = "0x95B81C")]
		public static SDK_BaseController.ControllerHand GetControllerHandType(string hand)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x94E02C", Offset = "0x94E02C", VA = "0x94E02C")]
		public static SDK_BaseController.ControllerHand GetControllerHand(GameObject controller)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x959D30", Offset = "0x959D30", VA = "0x959D30")]
		public static GameObject GetControllerLeftHand(bool getActual = false)
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x959D98", Offset = "0x959D98", VA = "0x959D98")]
		public static GameObject GetControllerRightHand(bool getActual = false)
		{
			return null;
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x95B8BC", Offset = "0x95B8BC", VA = "0x95B8BC")]
		public static bool IsControllerOfHand(GameObject checkController, SDK_BaseController.ControllerHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x95B984", Offset = "0x95B984", VA = "0x95B984")]
		public static bool IsControllerLeftHand(GameObject checkController)
		{
			return default(bool);
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x95B9EC", Offset = "0x95B9EC", VA = "0x95B9EC")]
		public static bool IsControllerRightHand(GameObject checkController)
		{
			return default(bool);
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x94EAB4", Offset = "0x94EAB4", VA = "0x94EAB4")]
		public static GameObject GetActualController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x95BA54", Offset = "0x95BA54", VA = "0x95BA54")]
		public static GameObject GetScriptAliasController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x94F050", Offset = "0x94F050", VA = "0x94F050")]
		public static GameObject GetModelAliasController(GameObject givenController)
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x95BBAC", Offset = "0x95BBAC", VA = "0x95BBAC")]
		public static SDK_BaseController.ControllerHand GetModelAliasControllerHand(GameObject givenObject)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x95BCC4", Offset = "0x95BCC4", VA = "0x95BCC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x552B94", Offset = "0x552B94")]
		public static Vector3 GetControllerVelocity(GameObject givenController)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x95BD58", Offset = "0x95BD58", VA = "0x95BD58")]
		public static Vector3 GetControllerVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x95BDC0", Offset = "0x95BDC0", VA = "0x95BDC0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x552BCC", Offset = "0x552BCC")]
		public static Vector3 GetControllerAngularVelocity(GameObject givenController)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x95BE54", Offset = "0x95BE54", VA = "0x95BE54")]
		public static Vector3 GetControllerAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x95BEBC", Offset = "0x95BEBC", VA = "0x95BEBC")]
		public static Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x95BF1C", Offset = "0x95BF1C", VA = "0x95BF1C")]
		public static Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x9595FC", Offset = "0x9595FC", VA = "0x9595FC")]
		public static Transform HeadsetTransform()
		{
			return null;
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x95BF7C", Offset = "0x95BF7C", VA = "0x95BF7C")]
		public static Transform HeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x95BFDC", Offset = "0x95BFDC", VA = "0x95BFDC")]
		public static void ResetHeadsetTypeCache()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x95C050", Offset = "0x95C050", VA = "0x95C050")]
		public static Headsets GetHeadsetType(bool summary = false)
		{
			return default(Headsets);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x95959C", Offset = "0x95959C", VA = "0x95959C")]
		public static Transform PlayAreaTransform()
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5374CC", Offset = "0x5374CC")]
	public class VRTK_NavMeshData : MonoBehaviour
	{
		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546118", Offset = "0x546118")]
		public float distanceLimit;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546150", Offset = "0x546150")]
		public int validAreas;

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x77A87C", Offset = "0x77A87C", VA = "0x77A87C")]
		public VRTK_NavMeshData()
		{
		}
	}
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x537504", Offset = "0x537504")]
	public class VRTK_PolicyList : MonoBehaviour
	{
		[Token(Token = "0x200048E")]
		public enum OperationTypes
		{
			[Token(Token = "0x4001934")]
			Ignore,
			[Token(Token = "0x4001935")]
			Include
		}

		[Token(Token = "0x200048F")]
		public enum CheckTypes
		{
			[Token(Token = "0x4001937")]
			Tag = 1,
			[Token(Token = "0x4001938")]
			Script = 2,
			[Token(Token = "0x4001939")]
			Layer = 4
		}

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546188", Offset = "0x546188")]
		public OperationTypes operation;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5461C0", Offset = "0x5461C0")]
		public CheckTypes checkType;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5461F8", Offset = "0x5461F8")]
		public List<string> identifiers;

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x78D8D8", Offset = "0x78D8D8", VA = "0x78D8D8", Slot = "4")]
		public virtual bool Find(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x783AE4", Offset = "0x783AE4", VA = "0x783AE4")]
		public static bool Check(GameObject obj, VRTK_PolicyList list)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x78D8F0", Offset = "0x78D8F0", VA = "0x78D8F0", Slot = "5")]
		protected virtual bool ScriptCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x78DA10", Offset = "0x78DA10", VA = "0x78DA10", Slot = "6")]
		protected virtual bool TagCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x78DAAC", Offset = "0x78DAAC", VA = "0x78DAAC", Slot = "7")]
		protected virtual bool LayerCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x78DB50", Offset = "0x78DB50", VA = "0x78DB50", Slot = "8")]
		protected virtual bool TypeCheck(GameObject obj, bool returnState)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x78DD14", Offset = "0x78DD14", VA = "0x78DD14")]
		public VRTK_PolicyList()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class VRTK_SDKObjectAlias : MonoBehaviour
	{
		[Token(Token = "0x2000490")]
		public enum SDKObject
		{
			[Token(Token = "0x400193B")]
			Boundary,
			[Token(Token = "0x400193C")]
			Headset
		}

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546230", Offset = "0x546230")]
		public SDKObject sdkObject;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_SDKManager sdkManager;

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x8177FC", Offset = "0x8177FC", VA = "0x8177FC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x8178F4", Offset = "0x8178F4", VA = "0x8178F4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x8179EC", Offset = "0x8179EC", VA = "0x8179EC", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x817A7C", Offset = "0x817A7C", VA = "0x817A7C", Slot = "7")]
		protected virtual void ChildToSDKObject()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x817C94", Offset = "0x817C94", VA = "0x817C94")]
		public VRTK_SDKObjectAlias()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	public class VRTK_SDKTransformModifiers
	{
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x546268", Offset = "0x546268")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546268", Offset = "0x546268")]
		public VRTK_SDKSetup loadedSDKSetup;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5462C8", Offset = "0x5462C8")]
		public SDK_BaseController.ControllerType controllerType;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x546300", Offset = "0x546300")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546300", Offset = "0x546300")]
		public Vector3 position;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546360", Offset = "0x546360")]
		public Vector3 rotation;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546398", Offset = "0x546398")]
		public Vector3 scale;

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x81AF58", Offset = "0x81AF58", VA = "0x81AF58")]
		public VRTK_SDKTransformModifiers()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class VRTK_SDKTransformModify : MonoBehaviour
	{
		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5399E8", Offset = "0x5399E8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SDK_BaseController.ControllerType currentController;

			[Token(Token = "0x600263D")]
			[Address(RVA = "0x81B65C", Offset = "0x81B65C", VA = "0x81B65C")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600263E")]
			[Address(RVA = "0x81B82C", Offset = "0x81B82C", VA = "0x81B82C")]
			internal bool <GetSelectedModifier>b__1(VRTK_SDKTransformModifiers item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5399F8", Offset = "0x5399F8")]
		private sealed class <UpdateTransform>d__12 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTK_SDKTransformModify <>4__this;

			[Token(Token = "0x17000253")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002642")]
				[Address(RVA = "0x81BA48", Offset = "0x81BA48", VA = "0x81BA48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002644")]
				[Address(RVA = "0x81BAB8", Offset = "0x81BAB8", VA = "0x81BAB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600263F")]
			[Address(RVA = "0x81B6D8", Offset = "0x81B6D8", VA = "0x81B6D8")]
			[DebuggerHidden]
			public <UpdateTransform>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0x81B868", Offset = "0x81B868", VA = "0x81B868", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0x81B86C", Offset = "0x81B86C", VA = "0x81B86C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002643")]
			[Address(RVA = "0x81BA50", Offset = "0x81BA50", VA = "0x81BA50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5463D0", Offset = "0x5463D0")]
		public Transform target;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546408", Offset = "0x546408")]
		public List<VRTK_SDKTransformModifiers> sdkOverrides;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRTK_SDKTransformModifiers questOverride;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool init;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_SDKManager sdkManager;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 originalPos;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 originalRot;

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x81AFF0", Offset = "0x81AFF0", VA = "0x81AFF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x81B0D8", Offset = "0x81B0D8", VA = "0x81B0D8", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x81B29C", Offset = "0x81B29C", VA = "0x81B29C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x81B394", Offset = "0x81B394", VA = "0x81B394", Slot = "6")]
		protected virtual void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x81B414", Offset = "0x81B414", VA = "0x81B414", Slot = "7")]
		protected virtual VRTK_SDKTransformModifiers GetSelectedModifier()
		{
			return null;
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x81B664", Offset = "0x81B664", VA = "0x81B664", Slot = "8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x552C04", Offset = "0x552C04")]
		protected virtual IEnumerator<float> UpdateTransform()
		{
			return null;
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x81B704", Offset = "0x81B704", VA = "0x81B704")]
		public VRTK_SDKTransformModify()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x81B790", Offset = "0x81B790", VA = "0x81B790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552C68", Offset = "0x552C68")]
		private bool <GetSelectedModifier>b__11_0(VRTK_SDKTransformModifiers item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000174")]
	public static class VRTK_SharedMethods
	{
		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A08", Offset = "0x539A08")]
		private sealed class <>c__DisplayClass11_0<T> where T : Component
		{
			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string gameObjectName;

			[Token(Token = "0x6002645")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002646")]
			internal GameObject <FindEvenInactiveGameObject>b__0(T component)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A18", Offset = "0x539A18")]
		private sealed class <>c__11<T> where T : Component
		{
			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__11<T> <>9;

			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<GameObject, bool> <>9__11_1;

			[Token(Token = "0x6002648")]
			public <>c__11()
			{
			}

			[Token(Token = "0x6002649")]
			internal bool <FindEvenInactiveGameObject>b__11_1(GameObject gameObject)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x820474", Offset = "0x820474", VA = "0x820474")]
		public static Bounds GetBounds(Transform transform, [Optional] Transform excludeRotation, [Optional] Transform excludeTransform)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x820A30", Offset = "0x820A30", VA = "0x820A30")]
		public static bool IsLowest(float value, float[] others)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x820AB8", Offset = "0x820AB8", VA = "0x820AB8")]
		public static Transform AddCameraFade()
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x820B50", Offset = "0x820B50", VA = "0x820B50")]
		public static void CreateColliders(GameObject obj)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x820CC0", Offset = "0x820CC0", VA = "0x820CC0")]
		public static Collider[] ColliderExclude(Collider[] setA, Collider[] setB)
		{
			return null;
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x820D30", Offset = "0x820D30", VA = "0x820D30")]
		public static Collider[] GetCollidersInGameObjects(GameObject[] gameObjects, bool searchChildren, bool includeInactive)
		{
			return null;
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x820ECC", Offset = "0x820ECC", VA = "0x820ECC")]
		public static Component CloneComponent(Component source, GameObject destination, bool copyProperties = false)
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x821100", Offset = "0x821100", VA = "0x821100")]
		public static Color ColorDarken(Color color, float percent)
		{
			return default(Color);
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x821230", Offset = "0x821230", VA = "0x821230")]
		public static float RoundFloat(float givenFloat, int decimalPlaces, bool rawFidelity = false)
		{
			return default(float);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x821360", Offset = "0x821360", VA = "0x821360")]
		public static bool IsEditTime()
		{
			return default(bool);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x821368", Offset = "0x821368", VA = "0x821368")]
		public static float Mod(float a, float b)
		{
			return default(float);
		}

		[Token(Token = "0x60011CB")]
		public static GameObject FindEvenInactiveGameObject<T>([Optional] string gameObjectName, bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011CC")]
		public static T[] FindEvenInactiveComponents<T>(bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011CD")]
		public static T FindEvenInactiveComponent<T>(bool searchAllScenes = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x8213E4", Offset = "0x8213E4", VA = "0x8213E4")]
		public static string GenerateVRTKObjectName(bool autoGen, params object[] replacements)
		{
			return null;
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x821630", Offset = "0x821630", VA = "0x821630")]
		public static float GetGPUTimeLastFrame()
		{
			return default(float);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x821668", Offset = "0x821668", VA = "0x821668")]
		public static bool Vector2ShallowCompare(Vector2 vectorA, Vector2 vectorB, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x8217D0", Offset = "0x8217D0", VA = "0x8217D0")]
		public static bool Vector3ShallowCompare(Vector3 vectorA, Vector3 vectorB, float threshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x821190", Offset = "0x821190", VA = "0x821190")]
		public static float NumberPercent(float value, float percent)
		{
			return default(float);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x821890", Offset = "0x821890", VA = "0x821890")]
		public static void SetGlobalScale(this Transform transform, Vector3 globalScale)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x821A14", Offset = "0x821A14", VA = "0x821A14")]
		public static Vector3 VectorHeading(Vector3 originPosition, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x821ABC", Offset = "0x821ABC", VA = "0x821ABC")]
		public static Vector3 VectorDirection(Vector3 originPosition, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x821BB4", Offset = "0x821BB4", VA = "0x821BB4")]
		public static float DividerToMultiplier(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x821BC8", Offset = "0x821BC8", VA = "0x821BC8")]
		public static float NormalizeValue(float value, float minValue, float maxValue, float threshold = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x821C8C", Offset = "0x821C8C", VA = "0x821C8C")]
		public static Vector3 AxisDirection(int axisIndex, [Optional] Transform givenTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D9")]
		public static bool AddListValue<TValue>(List<TValue> list, TValue value, bool preventDuplicates = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		public static TValue GetDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, [Optional] TValue defaultValue, bool setMissingKey = false)
		{
			return (TValue)null;
		}

		[Token(Token = "0x60011DB")]
		public static TValue GetDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, out bool keyExists, [Optional] TValue defaultValue, bool setMissingKey = false)
		{
			return (TValue)null;
		}

		[Token(Token = "0x60011DC")]
		public static bool AddDictionaryValue<TKey, TValue>(Dictionary<TKey, TValue> dictionary, TKey key, TValue value, bool overwriteExisting = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x821F2C", Offset = "0x821F2C", VA = "0x821F2C")]
		public static Type GetTypeUnknownAssembly(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x8220AC", Offset = "0x8220AC", VA = "0x8220AC")]
		public static float GetEyeTextureResolutionScale()
		{
			return default(float);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x8220B4", Offset = "0x8220B4", VA = "0x8220B4")]
		public static void SetEyeTextureResolutionScale(float value)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x8220BC", Offset = "0x8220BC", VA = "0x8220BC")]
		public static bool IsTypeSubclassOf(Type givenType, Type givenBaseType)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x8220F8", Offset = "0x8220F8", VA = "0x8220F8")]
		public static object[] GetTypeCustomAttributes(Type givenType, Type attributeType, bool inherit)
		{
			return null;
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x822140", Offset = "0x822140", VA = "0x822140")]
		public static Type GetBaseType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x822174", Offset = "0x822174", VA = "0x822174")]
		public static bool IsTypeAssignableFrom(Type givenType, Type sourceType)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x8221B0", Offset = "0x8221B0", VA = "0x8221B0")]
		public static Type GetNestedType(Type givenType, string name)
		{
			return null;
		}

		[Token(Token = "0x60011E5")]
		public static string GetPropertyFirstName<T>()
		{
			return null;
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x8221E4", Offset = "0x8221E4", VA = "0x8221E4")]
		public static string[] GetCommandLineArguements()
		{
			return null;
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x8221EC", Offset = "0x8221EC", VA = "0x8221EC")]
		public static Type[] GetTypesOfType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x822240", Offset = "0x822240", VA = "0x822240")]
		public static Type[] GetExportedTypesOfType(Type givenType)
		{
			return null;
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x822294", Offset = "0x822294", VA = "0x822294")]
		public static bool IsTypeAbstract(Type givenType)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EA")]
		private static IEnumerable<T> FindEvenInactiveComponentsInValidScenes<T>(bool searchAllScenes, bool stopOnMatch = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		private static IEnumerable<T> FindEvenInactiveComponentsInScene<T>(Scene scene, bool stopOnMatch = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x53754C", Offset = "0x53754C")]
	public class VRTK_Simulator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000495")]
		public class Keys
		{
			[Token(Token = "0x4001944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode forward;

			[Token(Token = "0x4001945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode backward;

			[Token(Token = "0x4001946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode strafeLeft;

			[Token(Token = "0x4001947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode strafeRight;

			[Token(Token = "0x4001948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode left;

			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode right;

			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyCode up;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode down;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KeyCode reset;

			[Token(Token = "0x600264A")]
			[Address(RVA = "0x822B88", Offset = "0x822B88", VA = "0x822B88")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546440", Offset = "0x546440")]
		public Keys keys;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546478", Offset = "0x546478")]
		public bool onlyInEditor;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5464B0", Offset = "0x5464B0")]
		public float stepSize;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5464E8", Offset = "0x5464E8")]
		public Transform camStart;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform headset;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform playArea;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x8222C0", Offset = "0x8222C0", VA = "0x8222C0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x822338", Offset = "0x822338", VA = "0x822338", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x8226D8", Offset = "0x8226D8", VA = "0x8226D8", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x822750", Offset = "0x822750", VA = "0x822750", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x822B34", Offset = "0x822B34", VA = "0x822B34", Slot = "8")]
		protected virtual Vector3 overwriteY(Vector3 vector, float value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x822B6C", Offset = "0x822B6C", VA = "0x822B6C")]
		public VRTK_Simulator()
		{
		}
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x537584", Offset = "0x537584")]
	public class VRTK_VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A28", Offset = "0x539A28")]
		private sealed class <EstimateVelocity>d__15 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VRTK_VelocityEstimator <>4__this;

			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool global;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000255")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600264E")]
				[Address(RVA = "0xC05A30", Offset = "0xC05A30", VA = "0xC05A30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000256")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002650")]
				[Address(RVA = "0xC05AA0", Offset = "0xC05AA0", VA = "0xC05AA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600264B")]
			[Address(RVA = "0xC053A0", Offset = "0xC053A0", VA = "0xC053A0")]
			[DebuggerHidden]
			public <EstimateVelocity>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600264C")]
			[Address(RVA = "0xC053E8", Offset = "0xC053E8", VA = "0xC053E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600264D")]
			[Address(RVA = "0xC053EC", Offset = "0xC053EC", VA = "0xC053EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600264F")]
			[Address(RVA = "0xC05A38", Offset = "0xC05A38", VA = "0xC05A38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546520", Offset = "0x546520")]
		public bool autoStartSampling;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546558", Offset = "0x546558")]
		public int velocityAverageFrames;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546590", Offset = "0x546590")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Vector3[] velocitySamples;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3[] angularVelocitySamples;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int currentSampleCount;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected CoroutineHandle calculateSamplesRoutine;

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xC04B3C", Offset = "0xC04B3C", VA = "0xC04B3C", Slot = "4")]
		public virtual void StartEstimation()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xC04BD8", Offset = "0xC04BD8", VA = "0xC04BD8", Slot = "5")]
		public virtual void EndEstimation()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xC04C44", Offset = "0xC04C44", VA = "0xC04C44", Slot = "6")]
		public virtual Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xC04E24", Offset = "0xC04E24", VA = "0xC04E24", Slot = "7")]
		public virtual Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xC05004", Offset = "0xC05004", VA = "0xC05004", Slot = "8")]
		public virtual Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xC05248", Offset = "0xC05248", VA = "0xC05248", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xC05290", Offset = "0xC05290", VA = "0xC05290", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xC0529C", Offset = "0xC0529C", VA = "0xC0529C", Slot = "11")]
		protected virtual void InitArrays()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xC05304", Offset = "0xC05304", VA = "0xC05304", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x552C88", Offset = "0x552C88")]
		protected virtual IEnumerator<float> EstimateVelocity(bool global)
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xC053CC", Offset = "0xC053CC", VA = "0xC053CC")]
		public VRTK_VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public abstract class SDK_Base : ScriptableObject
	{
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xB8623C", Offset = "0xB8623C", VA = "0xB8623C", Slot = "4")]
		public virtual void OnBeforeSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xB86240", Offset = "0xB86240", VA = "0xB86240", Slot = "5")]
		public virtual void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xB86244", Offset = "0xB86244", VA = "0xB86244", Slot = "6")]
		public virtual void OnBeforeSetupUnload(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xB86248", Offset = "0xB86248", VA = "0xB86248", Slot = "7")]
		public virtual void OnAfterSetupUnload(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xB8624C", Offset = "0xB8624C", VA = "0xB8624C")]
		protected SDK_Base()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public abstract class SDK_BaseBoundaries : SDK_Base
	{
		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform cachedPlayArea;

		[Token(Token = "0x6001201")]
		public abstract void InitBoundaries();

		[Token(Token = "0x6001202")]
		public abstract Transform GetPlayArea();

		[Token(Token = "0x6001203")]
		public abstract Vector3[] GetPlayAreaVertices();

		[Token(Token = "0x6001204")]
		public abstract float GetPlayAreaBorderThickness();

		[Token(Token = "0x6001205")]
		public abstract bool IsPlayAreaSizeCalibrated();

		[Token(Token = "0x6001206")]
		public abstract bool GetDrawAtRuntime();

		[Token(Token = "0x6001207")]
		public abstract void SetDrawAtRuntime(bool value);

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xB86254", Offset = "0xB86254", VA = "0xB86254")]
		protected Transform GetSDKManagerPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xB86408", Offset = "0xB86408", VA = "0xB86408")]
		protected SDK_BaseBoundaries()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public struct VRTKSDKBaseControllerEventArgs
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTK_ControllerReference controllerReference;
	}
	[Token(Token = "0x200017A")]
	public delegate void VRTKSDKBaseControllerEventHandler(object sender, VRTKSDKBaseControllerEventArgs e);
	[Token(Token = "0x200017B")]
	public abstract class SDK_BaseController : SDK_Base
	{
		[Token(Token = "0x2000497")]
		public enum ButtonTypes
		{
			[Token(Token = "0x4001954")]
			ButtonOne,
			[Token(Token = "0x4001955")]
			ButtonTwo,
			[Token(Token = "0x4001956")]
			ButtonThree,
			[Token(Token = "0x4001957")]
			ButtonFour,
			[Token(Token = "0x4001958")]
			ButtonFive,
			[Token(Token = "0x4001959")]
			ButtonSix,
			[Token(Token = "0x400195A")]
			ButtonSeven,
			[Token(Token = "0x400195B")]
			ButtonEight,
			[Token(Token = "0x400195C")]
			Grip,
			[Token(Token = "0x400195D")]
			GripHairline,
			[Token(Token = "0x400195E")]
			StartMenu,
			[Token(Token = "0x400195F")]
			Trigger,
			[Token(Token = "0x4001960")]
			TriggerHairline,
			[Token(Token = "0x4001961")]
			Touchpad,
			[Token(Token = "0x4001962")]
			TouchpadTwo
		}

		[Token(Token = "0x2000498")]
		public enum ButtonPressTypes
		{
			[Token(Token = "0x4001964")]
			Press,
			[Token(Token = "0x4001965")]
			PressDown,
			[Token(Token = "0x4001966")]
			PressUp,
			[Token(Token = "0x4001967")]
			Touch,
			[Token(Token = "0x4001968")]
			TouchDown,
			[Token(Token = "0x4001969")]
			TouchUp
		}

		[Token(Token = "0x2000499")]
		public enum ControllerElements
		{
			[Token(Token = "0x400196B")]
			AttachPoint,
			[Token(Token = "0x400196C")]
			Trigger,
			[Token(Token = "0x400196D")]
			GripLeft,
			[Token(Token = "0x400196E")]
			GripRight,
			[Token(Token = "0x400196F")]
			Touchpad,
			[Token(Token = "0x4001970")]
			ButtonOne,
			[Token(Token = "0x4001971")]
			ButtonTwo,
			[Token(Token = "0x4001972")]
			ButtonThree,
			[Token(Token = "0x4001973")]
			ButtonFour,
			[Token(Token = "0x4001974")]
			ButtonFive,
			[Token(Token = "0x4001975")]
			ButtonSix,
			[Token(Token = "0x4001976")]
			ButtonSeven,
			[Token(Token = "0x4001977")]
			ButtonEight,
			[Token(Token = "0x4001978")]
			SystemMenu,
			[Token(Token = "0x4001979")]
			Body,
			[Token(Token = "0x400197A")]
			StartMenu
		}

		[Token(Token = "0x200049A")]
		public enum ControllerHand
		{
			[Token(Token = "0x400197C")]
			None,
			[Token(Token = "0x400197D")]
			Left,
			[Token(Token = "0x400197E")]
			Right
		}

		[Token(Token = "0x200049B")]
		public enum ControllerType
		{
			[Token(Token = "0x4001980")]
			Undefined,
			[Token(Token = "0x4001981")]
			Custom,
			[Token(Token = "0x4001982")]
			Simulator_Hand,
			[Token(Token = "0x4001983")]
			SteamVR_ViveWand,
			[Token(Token = "0x4001984")]
			SteamVR_OculusTouch,
			[Token(Token = "0x4001985")]
			Oculus_OculusTouch,
			[Token(Token = "0x4001986")]
			Daydream_Controller,
			[Token(Token = "0x4001987")]
			Ximmerse_Flip,
			[Token(Token = "0x4001988")]
			SteamVR_ValveKnuckles,
			[Token(Token = "0x4001989")]
			Oculus_OculusGamepad,
			[Token(Token = "0x400198A")]
			Oculus_OculusRemote,
			[Token(Token = "0x400198B")]
			Oculus_GearVRHMD,
			[Token(Token = "0x400198C")]
			Oculus_GearVRController,
			[Token(Token = "0x400198D")]
			WindowsMR_MotionController,
			[Token(Token = "0x400198E")]
			SteamVR_WindowsMRController,
			[Token(Token = "0x400198F")]
			PicoNeo_PicoNeoTouch
		}

		[Token(Token = "0x14000105")]
		public event VRTKSDKBaseControllerEventHandler LeftControllerReady
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0xB86410", Offset = "0xB86410", VA = "0xB86410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552CEC", Offset = "0x552CEC")]
			add
			{
			}
			[Token(Token = "0x600120F")]
			[Address(RVA = "0xB864FC", Offset = "0xB864FC", VA = "0xB864FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552CFC", Offset = "0x552CFC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000106")]
		public event VRTKSDKBaseControllerEventHandler RightControllerReady
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xB865E8", Offset = "0xB865E8", VA = "0xB865E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552D0C", Offset = "0x552D0C")]
			add
			{
			}
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xB866D4", Offset = "0xB866D4", VA = "0xB866D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552D1C", Offset = "0x552D1C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000107")]
		public event VRTKSDKBaseControllerEventHandler LeftControllerModelReady
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0xB867C0", Offset = "0xB867C0", VA = "0xB867C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552D2C", Offset = "0x552D2C")]
			add
			{
			}
			[Token(Token = "0x6001213")]
			[Address(RVA = "0xB868AC", Offset = "0xB868AC", VA = "0xB868AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552D3C", Offset = "0x552D3C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000108")]
		public event VRTKSDKBaseControllerEventHandler RightControllerModelReady
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xB86998", Offset = "0xB86998", VA = "0xB86998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552D4C", Offset = "0x552D4C")]
			add
			{
			}
			[Token(Token = "0x6001215")]
			[Address(RVA = "0xB86A84", Offset = "0xB86A84", VA = "0xB86A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552D5C", Offset = "0x552D5C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001216")]
		public abstract void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options);

		[Token(Token = "0x6001217")]
		public abstract void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options);

		[Token(Token = "0x6001218")]
		public abstract ControllerType GetCurrentControllerType();

		[Token(Token = "0x6001219")]
		public abstract string GetControllerDefaultColliderPath(ControllerHand hand);

		[Token(Token = "0x600121A")]
		public abstract string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false);

		[Token(Token = "0x600121B")]
		public abstract uint GetControllerIndex(GameObject controller);

		[Token(Token = "0x600121C")]
		public abstract GameObject GetControllerByIndex(uint index, bool actual = false);

		[Token(Token = "0x600121D")]
		public abstract Transform GetControllerOrigin(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x600121E")]
		public abstract Transform GenerateControllerPointerOrigin(GameObject parent);

		[Token(Token = "0x600121F")]
		public abstract GameObject GetControllerLeftHand(bool actual = false);

		[Token(Token = "0x6001220")]
		public abstract GameObject GetControllerRightHand(bool actual = false);

		[Token(Token = "0x6001221")]
		public abstract bool IsControllerLeftHand(GameObject controller);

		[Token(Token = "0x6001222")]
		public abstract bool IsControllerRightHand(GameObject controller);

		[Token(Token = "0x6001223")]
		public abstract bool IsControllerLeftHand(GameObject controller, bool actual);

		[Token(Token = "0x6001224")]
		public abstract bool IsControllerRightHand(GameObject controller, bool actual);

		[Token(Token = "0x6001225")]
		public abstract GameObject GetControllerModel(GameObject controller);

		[Token(Token = "0x6001226")]
		public abstract GameObject GetControllerModel(ControllerHand hand);

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xB86B70", Offset = "0xB86B70", VA = "0xB86B70", Slot = "25")]
		public virtual ControllerHand GetControllerModelHand(GameObject controllerModel)
		{
			return default(ControllerHand);
		}

		[Token(Token = "0x6001228")]
		public abstract GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001229")]
		public abstract void SetControllerRenderModelWheel(GameObject renderModel, bool state);

		[Token(Token = "0x600122A")]
		public abstract void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f);

		[Token(Token = "0x600122B")]
		public abstract bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip);

		[Token(Token = "0x600122C")]
		public abstract SDK_ControllerHapticModifiers GetHapticModifiers();

		[Token(Token = "0x600122D")]
		public abstract Vector3 GetVelocity(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x600122E")]
		public abstract Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference);

		[Token(Token = "0x600122F")]
		public abstract bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity);

		[Token(Token = "0x6001230")]
		public abstract Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001231")]
		public abstract float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001232")]
		public abstract bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference);

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xB86D24", Offset = "0xB86D24", VA = "0xB86D24", Slot = "37")]
		protected virtual GameObject GetSDKManagerControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xB86E64", Offset = "0xB86E64", VA = "0xB86E64", Slot = "38")]
		protected virtual GameObject GetSDKManagerControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xB86FA0", Offset = "0xB86FA0", VA = "0xB86FA0", Slot = "39")]
		protected virtual bool CheckActualOrScriptAliasControllerIsLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xB87000", Offset = "0xB87000", VA = "0xB87000", Slot = "40")]
		protected virtual bool CheckActualOrScriptAliasControllerIsRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xB87060", Offset = "0xB87060", VA = "0xB87060", Slot = "41")]
		protected virtual bool CheckControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xB871F4", Offset = "0xB871F4", VA = "0xB871F4", Slot = "42")]
		protected virtual bool CheckControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xB87388", Offset = "0xB87388", VA = "0xB87388", Slot = "43")]
		protected virtual GameObject GetControllerModelFromController(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xB87414", Offset = "0xB87414", VA = "0xB87414", Slot = "44")]
		protected virtual GameObject GetSDKManagerControllerModelForHand(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xB8752C", Offset = "0xB8752C", VA = "0xB8752C", Slot = "45")]
		protected virtual GameObject GetActualController(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xB87678", Offset = "0xB87678", VA = "0xB87678")]
		protected SDK_BaseController()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class SDK_ControllerHapticModifiers
	{
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float durationModifier;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float intervalModifier;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ushort maxHapticVibration;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int hapticsBufferSize;

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xB87844", Offset = "0xB87844", VA = "0xB87844")]
		public SDK_ControllerHapticModifiers()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public abstract class SDK_BaseHeadset : SDK_Base
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Transform cachedHeadset;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Transform cachedHeadsetCamera;

		[Token(Token = "0x600123E")]
		public abstract void ProcessUpdate(Dictionary<string, object> options);

		[Token(Token = "0x600123F")]
		public abstract void ProcessFixedUpdate(Dictionary<string, object> options);

		[Token(Token = "0x6001240")]
		public abstract Transform GetHeadset();

		[Token(Token = "0x6001241")]
		public abstract Transform GetHeadsetCamera();

		[Token(Token = "0x6001242")]
		public abstract Vector3 GetHeadsetVelocity();

		[Token(Token = "0x6001243")]
		public abstract Vector3 GetHeadsetAngularVelocity();

		[Token(Token = "0x6001244")]
		public abstract void HeadsetFade(Color color, float duration, bool fadeOverlay = false);

		[Token(Token = "0x6001245")]
		public abstract bool HasHeadsetFade(Transform obj);

		[Token(Token = "0x6001246")]
		public abstract void AddHeadsetFade(Transform camera);

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xB87680", Offset = "0xB87680", VA = "0xB87680")]
		protected Transform GetSDKManagerHeadset()
		{
			return null;
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xB87834", Offset = "0xB87834", VA = "0xB87834")]
		protected SDK_BaseHeadset()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public abstract class SDK_BaseSystem : SDK_Base
	{
		[Token(Token = "0x6001249")]
		public abstract bool IsDisplayOnDesktop();

		[Token(Token = "0x600124A")]
		public abstract bool ShouldAppRenderWithLowResources();

		[Token(Token = "0x600124B")]
		public abstract void ForceInterleavedReprojectionOn(bool force);

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xB8783C", Offset = "0xB8783C", VA = "0xB8783C")]
		protected SDK_BaseSystem()
		{
		}
	}
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x5375BC", Offset = "0x5375BC")]
	public sealed class SDK_DescriptionAttribute : Attribute
	{
		[Serializable]
		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A38", Offset = "0x539A38")]
		private sealed class <>c
		{
			[Token(Token = "0x4001990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SDK_DescriptionAttribute, int> <>9__8_0;

			[Token(Token = "0x6002652")]
			[Address(RVA = "0xB888D0", Offset = "0xB888D0", VA = "0xB888D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002653")]
			[Address(RVA = "0xB888D8", Offset = "0xB888D8", VA = "0xB888D8")]
			internal int <GetDescriptions>b__8_0(SDK_DescriptionAttribute attribute)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string prettyName;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string symbol;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string vrDeviceName;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int index;

		[Token(Token = "0x170000A9")]
		public bool describesFallbackSDK
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xB881B4", Offset = "0xB881B4", VA = "0xB881B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xB88208", Offset = "0xB88208", VA = "0xB88208")]
		public SDK_DescriptionAttribute(string prettyName, string symbol, string vrDeviceName, string buildTargetGroupName, int index = 0)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xB8838C", Offset = "0xB8838C", VA = "0xB8838C")]
		public SDK_DescriptionAttribute(Type typeToCopyExistingDescriptionFrom, int index = 0)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xB886F4", Offset = "0xB886F4", VA = "0xB886F4")]
		public static SDK_DescriptionAttribute[] GetDescriptions(Type type)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x537608", Offset = "0x537608")]
	public sealed class SDK_ScriptingDefineSymbolPredicateAttribute : Attribute, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000C7B")]
		public const string RemovableSymbolPrefix = "VRTK_DEFINE_";

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string symbol;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string buildTargetGroupName;

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xB9D2A4", Offset = "0xB9D2A4", VA = "0xB9D2A4")]
		private SDK_ScriptingDefineSymbolPredicateAttribute()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xB9D2AC", Offset = "0xB9D2AC", VA = "0xB9D2AC")]
		public SDK_ScriptingDefineSymbolPredicateAttribute(string symbol, string buildTargetGroupName)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xB9D4B4", Offset = "0xB9D4B4", VA = "0xB9D4B4")]
		public SDK_ScriptingDefineSymbolPredicateAttribute(SDK_ScriptingDefineSymbolPredicateAttribute attributeToCopy)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xB9D520", Offset = "0xB9D520", VA = "0xB9D520", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xB9D524", Offset = "0xB9D524", VA = "0xB9D524", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xB9D480", Offset = "0xB9D480", VA = "0xB9D480")]
		private void SetBuildTarget(string groupName)
		{
		}
	}
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537654", Offset = "0x537654")]
	public class SDK_DaydreamBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6001257")]
		[Address(RVA = "0xB880F0", Offset = "0xB880F0", VA = "0xB880F0")]
		public SDK_DaydreamBoundaries()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x5376BC", Offset = "0x5376BC")]
	public class SDK_DaydreamController : SDK_FallbackController
	{
		[Token(Token = "0x6001258")]
		[Address(RVA = "0xB88100", Offset = "0xB88100", VA = "0xB88100")]
		public SDK_DaydreamController()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public static class SDK_DaydreamDefines
	{
		[Token(Token = "0x4000C7E")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_DAYDREAM";

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xB88110", Offset = "0xB88110", VA = "0xB88110")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552D6C", Offset = "0x552D6C")]
		private static bool IsDaydreamAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537724", Offset = "0x537724")]
	public class SDK_DaydreamHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x600125A")]
		[Address(RVA = "0xB88194", Offset = "0xB88194", VA = "0xB88194")]
		public SDK_DaydreamHeadset()
		{
		}
	}
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x53778C", Offset = "0x53778C")]
	public class SDK_DaydreamSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x600125B")]
		[Address(RVA = "0xB881A4", Offset = "0xB881A4", VA = "0xB881A4")]
		public SDK_DaydreamSystem()
		{
		}
	}
	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x53780C", Offset = "0x53780C")]
	public class SDK_FallbackBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x600125C")]
		[Address(RVA = "0xB88904", Offset = "0xB88904", VA = "0xB88904", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xB88908", Offset = "0xB88908", VA = "0xB88908", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xB88910", Offset = "0xB88910", VA = "0xB88910", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xB88918", Offset = "0xB88918", VA = "0xB88918", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xB88920", Offset = "0xB88920", VA = "0xB88920", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xB88928", Offset = "0xB88928", VA = "0xB88928", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xB88930", Offset = "0xB88930", VA = "0xB88930", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xB880F8", Offset = "0xB880F8", VA = "0xB880F8")]
		public SDK_FallbackBoundaries()
		{
		}
	}
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537874", Offset = "0x537874")]
	public class SDK_FallbackController : SDK_BaseController
	{
		[Token(Token = "0x6001264")]
		[Address(RVA = "0xB88934", Offset = "0xB88934", VA = "0xB88934", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xB88938", Offset = "0xB88938", VA = "0xB88938", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xB8893C", Offset = "0xB8893C", VA = "0xB8893C", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xB88944", Offset = "0xB88944", VA = "0xB88944", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xB8898C", Offset = "0xB8898C", VA = "0xB8898C", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xB889D4", Offset = "0xB889D4", VA = "0xB889D4", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xB889DC", Offset = "0xB889DC", VA = "0xB889DC", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xB889E4", Offset = "0xB889E4", VA = "0xB889E4", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xB889EC", Offset = "0xB889EC", VA = "0xB889EC", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xB889F4", Offset = "0xB889F4", VA = "0xB889F4", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xB889FC", Offset = "0xB889FC", VA = "0xB889FC", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xB88A04", Offset = "0xB88A04", VA = "0xB88A04", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xB88A0C", Offset = "0xB88A0C", VA = "0xB88A0C", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xB88A14", Offset = "0xB88A14", VA = "0xB88A14", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xB88A1C", Offset = "0xB88A1C", VA = "0xB88A1C", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xB88A24", Offset = "0xB88A24", VA = "0xB88A24", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xB88A2C", Offset = "0xB88A2C", VA = "0xB88A2C", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xB88A34", Offset = "0xB88A34", VA = "0xB88A34", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xB88A3C", Offset = "0xB88A3C", VA = "0xB88A3C", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xB88A40", Offset = "0xB88A40", VA = "0xB88A40", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xB88A44", Offset = "0xB88A44", VA = "0xB88A44", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xB88A4C", Offset = "0xB88A4C", VA = "0xB88A4C", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xB88AC0", Offset = "0xB88AC0", VA = "0xB88AC0", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xB88B20", Offset = "0xB88B20", VA = "0xB88B20", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xB88B80", Offset = "0xB88B80", VA = "0xB88B80", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xB88B98", Offset = "0xB88B98", VA = "0xB88B98", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xB88BF8", Offset = "0xB88BF8", VA = "0xB88BF8", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xB88C00", Offset = "0xB88C00", VA = "0xB88C00", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xB88108", Offset = "0xB88108", VA = "0xB88108")]
		public SDK_FallbackController()
		{
		}
	}
	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x5378DC", Offset = "0x5378DC")]
	public class SDK_FallbackHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x6001281")]
		[Address(RVA = "0xB88C08", Offset = "0xB88C08", VA = "0xB88C08", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xB88C0C", Offset = "0xB88C0C", VA = "0xB88C0C", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xB88C10", Offset = "0xB88C10", VA = "0xB88C10", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xB88C18", Offset = "0xB88C18", VA = "0xB88C18", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xB88C20", Offset = "0xB88C20", VA = "0xB88C20", Slot = "12")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xB88C80", Offset = "0xB88C80", VA = "0xB88C80", Slot = "13")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xB88CE0", Offset = "0xB88CE0", VA = "0xB88CE0", Slot = "14")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xB88CE4", Offset = "0xB88CE4", VA = "0xB88CE4", Slot = "15")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xB88CEC", Offset = "0xB88CEC", VA = "0xB88CEC", Slot = "16")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xB8819C", Offset = "0xB8819C", VA = "0xB8819C")]
		public SDK_FallbackHeadset()
		{
		}
	}
	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537944", Offset = "0x537944")]
	public class SDK_FallbackSystem : SDK_BaseSystem
	{
		[Token(Token = "0x600128B")]
		[Address(RVA = "0xB88CF0", Offset = "0xB88CF0", VA = "0xB88CF0", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xB88CF8", Offset = "0xB88CF8", VA = "0xB88CF8", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xB88D00", Offset = "0xB88D00", VA = "0xB88D00", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xB881AC", Offset = "0xB881AC", VA = "0xB881AC")]
		public SDK_FallbackSystem()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x53798C", Offset = "0x53798C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x53798C", Offset = "0x53798C")]
	public class SDK_OculusBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x600128F")]
		[Address(RVA = "0xB8C914", Offset = "0xB8C914", VA = "0xB8C914", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xB8C918", Offset = "0xB8C918", VA = "0xB8C918", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xB8CA0C", Offset = "0xB8CA0C", VA = "0xB8CA0C", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xB8CD6C", Offset = "0xB8CD6C", VA = "0xB8CD6C", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xB8CD78", Offset = "0xB8CD78", VA = "0xB8CD78", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xB8CD80", Offset = "0xB8CD80", VA = "0xB8CD80", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xB8CD88", Offset = "0xB8CD88", VA = "0xB8CD88", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xB8CD8C", Offset = "0xB8CD8C", VA = "0xB8CD8C")]
		public SDK_OculusBoundaries()
		{
		}
	}
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537A20", Offset = "0x537A20")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537A20", Offset = "0x537A20")]
	public class SDK_OculusController : SDK_BaseController
	{
		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A48", Offset = "0x539A48")]
		private sealed class <SmallHapticPulse>d__41 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float strength;

			[Token(Token = "0x4001995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public OVRInput.Controller hand;

			[Token(Token = "0x17000257")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002657")]
				[Address(RVA = "0xB90150", Offset = "0xB90150", VA = "0xB90150", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000258")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002659")]
				[Address(RVA = "0xB901C0", Offset = "0xB901C0", VA = "0xB901C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002654")]
			[Address(RVA = "0xB8DED8", Offset = "0xB8DED8", VA = "0xB8DED8")]
			[DebuggerHidden]
			public <SmallHapticPulse>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002655")]
			[Address(RVA = "0xB9002C", Offset = "0xB9002C", VA = "0xB9002C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0xB90030", Offset = "0xB90030", VA = "0xB90030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002658")]
			[Address(RVA = "0xB90158", Offset = "0xB90158", VA = "0xB90158", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected SDK_OculusBoundaries cachedBoundariesSDK;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected OVRInput.RawAxis2D[] thumbsticks;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected OVRInput.RawAxis2D[] touchpads;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected OVRInput.RawAxis1D[] triggers;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected OVRInput.RawAxis1D[] grips;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected OVRInput.RawNearTouch[] triggerSense;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected OVRInput.RawNearTouch[] touchpadSense;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected VRTK_VelocityEstimator cachedLeftVelocityEstimator;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected VRTK_VelocityEstimator cachedRightVelocityEstimator;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool[] previousHairTriggerState;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool[] currentHairTriggerState;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected bool[] previousHairGripState;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected bool[] currentHairGripState;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected float[] hairTriggerLimit;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected float[] hairGripLimit;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected OVRHapticsClip hapticsProceduralClipLeft;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected OVRHapticsClip hapticsProceduralClipRight;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CoroutineHandle smallHapticPulse;

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xB8CD94", Offset = "0xB8CD94", VA = "0xB8CD94", Slot = "5")]
		public override void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xB8CE4C", Offset = "0xB8CE4C", VA = "0xB8CE4C", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xB8CE5C", Offset = "0xB8CE5C", VA = "0xB8CE5C", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xB8CE60", Offset = "0xB8CE60", VA = "0xB8CE60", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xB8CE68", Offset = "0xB8CE68", VA = "0xB8CE68", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xB8CF60", Offset = "0xB8CF60", VA = "0xB8CF60", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xB8D51C", Offset = "0xB8D51C", VA = "0xB8D51C", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xB8D5D4", Offset = "0xB8D5D4", VA = "0xB8D5D4", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xB8D7CC", Offset = "0xB8D7CC", VA = "0xB8D7CC", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xB8D82C", Offset = "0xB8D82C", VA = "0xB8D82C", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xB8D834", Offset = "0xB8D834", VA = "0xB8D834", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xB8D908", Offset = "0xB8D908", VA = "0xB8D908", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xB8D9DC", Offset = "0xB8D9DC", VA = "0xB8D9DC", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xB8D9EC", Offset = "0xB8D9EC", VA = "0xB8D9EC", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xB8D9FC", Offset = "0xB8D9FC", VA = "0xB8D9FC", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xB8DA10", Offset = "0xB8DA10", VA = "0xB8DA10", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xB8DA24", Offset = "0xB8DA24", VA = "0xB8DA24", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xB8DA34", Offset = "0xB8DA34", VA = "0xB8DA34", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xB8DCC8", Offset = "0xB8DCC8", VA = "0xB8DCC8", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xB8DCD0", Offset = "0xB8DCD0", VA = "0xB8DCD0", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xB8DCD4", Offset = "0xB8DCD4", VA = "0xB8DCD4", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xB8DE40", Offset = "0xB8DE40", VA = "0xB8DE40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x552DB8", Offset = "0x552DB8")]
		private IEnumerator<float> SmallHapticPulse(float strength, OVRInput.Controller hand)
		{
			return null;
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xB8DF04", Offset = "0xB8DF04", VA = "0xB8DF04", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xB8E0A8", Offset = "0xB8E0A8", VA = "0xB8E0A8", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xB8E154", Offset = "0xB8E154", VA = "0xB8E154", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xB8E374", Offset = "0xB8E374", VA = "0xB8E374", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xB8E4FC", Offset = "0xB8E4FC", VA = "0xB8E4FC", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xB8E508", Offset = "0xB8E508", VA = "0xB8E508", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xB8E720", Offset = "0xB8E720", VA = "0xB8E720", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xB8E7A0", Offset = "0xB8E7A0", VA = "0xB8E7A0", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xB8EB2C", Offset = "0xB8EB2C", VA = "0xB8EB2C", Slot = "46")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xB8EBC8", Offset = "0xB8EBC8", VA = "0xB8EBC8", Slot = "47")]
		protected virtual void RegisterAvatarEvents()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xB8EC18", Offset = "0xB8EC18", VA = "0xB8EC18", Slot = "48")]
		protected virtual void BothControllersReady()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xB8EC1C", Offset = "0xB8EC1C", VA = "0xB8EC1C", Slot = "49")]
		protected virtual void ProcessControllerUpdate(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xB8EF68", Offset = "0xB8EF68", VA = "0xB8EF68", Slot = "50")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xB8F3F0", Offset = "0xB8F3F0", VA = "0xB8F3F0", Slot = "51")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xB8F474", Offset = "0xB8F474", VA = "0xB8F474", Slot = "52")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, OVRInput.Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xB8F63C", Offset = "0xB8F63C", VA = "0xB8F63C", Slot = "53")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, OVRInput.Touch button)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xB8F808", Offset = "0xB8F808", VA = "0xB8F808", Slot = "54")]
		protected virtual OVRInput.Controller GetControllerMask(uint index)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xB8F91C", Offset = "0xB8F91C", VA = "0xB8F91C", Slot = "55")]
		protected virtual OVRInput.RawAxis2D GetTouchpadAxisMask(uint index)
		{
			return default(OVRInput.RawAxis2D);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xB8F9A0", Offset = "0xB8F9A0", VA = "0xB8F9A0", Slot = "56")]
		protected virtual OVRInput.Touch GetTouchpadTouchMask()
		{
			return default(OVRInput.Touch);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xB8F9E0", Offset = "0xB8F9E0", VA = "0xB8F9E0", Slot = "57")]
		protected virtual OVRInput.Button GetTouchpadButtonMask()
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xB8FA20", Offset = "0xB8FA20", VA = "0xB8FA20", Slot = "58")]
		protected virtual void UpdateHairValues(uint index, float axisValue, float hairDelta, ref bool previousState, ref bool currentState, ref float hairLimit)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xB8FB40", Offset = "0xB8FB40", VA = "0xB8FB40", Slot = "59")]
		protected virtual SDK_OculusBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xB8FCCC", Offset = "0xB8FCCC", VA = "0xB8FCCC", Slot = "60")]
		protected virtual bool HasAvatar(bool controllersAreVisible = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xB8FCF0", Offset = "0xB8FCF0", VA = "0xB8FCF0", Slot = "61")]
		protected virtual GameObject GetAvatar()
		{
			return null;
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xB8FD14", Offset = "0xB8FD14", VA = "0xB8FD14")]
		public SDK_OculusController()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public static class SDK_OculusDefines
	{
		[Token(Token = "0x4000C93")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_OCULUS";

		[Token(Token = "0x4000C94")]
		public const string AvatarScriptingDefineSymbol = "VRTK_DEFINE_SDK_OCULUS_AVATAR";

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xB90224", Offset = "0xB90224", VA = "0xB90224")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552E1C", Offset = "0x552E1C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552E1C", Offset = "0x552E1C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552E1C", Offset = "0x552E1C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552E1C", Offset = "0x552E1C")]
		private static bool IsUtilitiesVersion1120OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xB90468", Offset = "0xB90468", VA = "0xB90468")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552F24", Offset = "0x552F24")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552F24", Offset = "0x552F24")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552F24", Offset = "0x552F24")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x552F24", Offset = "0x552F24")]
		private static bool IsUtilitiesVersion1110OrOlder()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xB90544", Offset = "0xB90544", VA = "0xB90544")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x55302C", Offset = "0x55302C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x55302C", Offset = "0x55302C")]
		private static bool IsAvatarAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xB90300", Offset = "0xB90300", VA = "0xB90300")]
		private static Version GetOculusWrapperVersion()
		{
			return null;
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537AB4", Offset = "0x537AB4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537AB4", Offset = "0x537AB4")]
	public class SDK_OculusHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xB905E8", Offset = "0xB905E8", VA = "0xB905E8", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xB905EC", Offset = "0xB905EC", VA = "0xB905EC", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xB905F0", Offset = "0xB905F0", VA = "0xB905F0", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xB906B8", Offset = "0xB906B8", VA = "0xB906B8", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xB90758", Offset = "0xB90758", VA = "0xB90758", Slot = "12")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xB90824", Offset = "0xB90824", VA = "0xB90824", Slot = "13")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xB9086C", Offset = "0xB9086C", VA = "0xB9086C", Slot = "14")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xB90874", Offset = "0xB90874", VA = "0xB90874", Slot = "15")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xB90904", Offset = "0xB90904", VA = "0xB90904", Slot = "16")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xB90A04", Offset = "0xB90A04", VA = "0xB90A04", Slot = "17")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xB90B78", Offset = "0xB90B78", VA = "0xB90B78")]
		public SDK_OculusHeadset()
		{
		}
	}
	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537B48", Offset = "0x537B48")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537B48", Offset = "0x537B48")]
	public class SDK_OculusSystem : SDK_BaseSystem
	{
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xB90B80", Offset = "0xB90B80", VA = "0xB90B80", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xB90B88", Offset = "0xB90B88", VA = "0xB90B88", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xB90B90", Offset = "0xB90B90", VA = "0xB90B90", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xB90B94", Offset = "0xB90B94", VA = "0xB90B94")]
		public SDK_OculusSystem()
		{
		}
	}
	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537C40", Offset = "0x537C40")]
	public class SDK_PicoNeoBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xB90B9C", Offset = "0xB90B9C", VA = "0xB90B9C", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xB90C58", Offset = "0xB90C58", VA = "0xB90C58", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xB90D40", Offset = "0xB90D40", VA = "0xB90D40", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xB91028", Offset = "0xB91028", VA = "0xB91028", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xB91034", Offset = "0xB91034", VA = "0xB91034", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xB9103C", Offset = "0xB9103C", VA = "0xB9103C", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xB91044", Offset = "0xB91044", VA = "0xB91044", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xB91048", Offset = "0xB91048", VA = "0xB91048")]
		public SDK_PicoNeoBoundaries()
		{
		}
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537CA8", Offset = "0x537CA8")]
	public class SDK_PicoNeoController : SDK_BaseController
	{
		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected SDK_PicoNeoBoundaries cachedBoundariesSDK;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_VelocityEstimator cachedLeftVelocityEstimator;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_VelocityEstimator cachedRightVelocityEstimator;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool[] previousHairTriggerState;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool[] currentHairTriggerState;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool[] previousHairGripState;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool[] currentHairGripState;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float[] hairTriggerLimit;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float[] hairGripLimit;

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xB91050", Offset = "0xB91050", VA = "0xB91050", Slot = "5")]
		public override void OnAfterSetupLoad(VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xB91054", Offset = "0xB91054", VA = "0xB91054", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xB91064", Offset = "0xB91064", VA = "0xB91064", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xB91068", Offset = "0xB91068", VA = "0xB91068", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xB91070", Offset = "0xB91070", VA = "0xB91070", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xB910B8", Offset = "0xB910B8", VA = "0xB910B8", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xB91158", Offset = "0xB91158", VA = "0xB91158", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xB91210", Offset = "0xB91210", VA = "0xB91210", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xB91408", Offset = "0xB91408", VA = "0xB91408", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xB91468", Offset = "0xB91468", VA = "0xB91468", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xB91470", Offset = "0xB91470", VA = "0xB91470", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xB91544", Offset = "0xB91544", VA = "0xB91544", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xB91618", Offset = "0xB91618", VA = "0xB91618", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xB91628", Offset = "0xB91628", VA = "0xB91628", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xB91638", Offset = "0xB91638", VA = "0xB91638", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xB9164C", Offset = "0xB9164C", VA = "0xB9164C", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xB91660", Offset = "0xB91660", VA = "0xB91660", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xB91670", Offset = "0xB91670", VA = "0xB91670", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xB917E0", Offset = "0xB917E0", VA = "0xB917E0", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xB9185C", Offset = "0xB9185C", VA = "0xB9185C", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xB91860", Offset = "0xB91860", VA = "0xB91860", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xB918B0", Offset = "0xB918B0", VA = "0xB918B0", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xB918B8", Offset = "0xB918B8", VA = "0xB918B8", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xB9192C", Offset = "0xB9192C", VA = "0xB9192C", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xB91AB4", Offset = "0xB91AB4", VA = "0xB91AB4", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xB91C3C", Offset = "0xB91C3C", VA = "0xB91C3C", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xB91C48", Offset = "0xB91C48", VA = "0xB91C48", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xB91E8C", Offset = "0xB91E8C", VA = "0xB91E8C", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xB91F0C", Offset = "0xB91F0C", VA = "0xB91F0C", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xB9229C", Offset = "0xB9229C", VA = "0xB9229C", Slot = "46")]
		protected virtual void ProcessControllerUpdate(VRTK_ControllerReference controllerReference)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xB925E8", Offset = "0xB925E8", VA = "0xB925E8", Slot = "47")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xB92A70", Offset = "0xB92A70", VA = "0xB92A70", Slot = "48")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xB92AF4", Offset = "0xB92AF4", VA = "0xB92AF4", Slot = "49")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, Pvr_KeyCode button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xB92C40", Offset = "0xB92C40", VA = "0xB92C40", Slot = "50")]
		protected virtual void UpdateHairValues(uint index, float axisValue, float hairDelta, ref bool previousState, ref bool currentState, ref float hairLimit)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xB92D60", Offset = "0xB92D60", VA = "0xB92D60", Slot = "51")]
		protected virtual SDK_PicoNeoBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xB92EEC", Offset = "0xB92EEC", VA = "0xB92EEC")]
		public SDK_PicoNeoController()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public static class SDK_PicoNeoDefines
	{
		[Token(Token = "0x4000CA1")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_PICONEO";

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xB92FA4", Offset = "0xB92FA4", VA = "0xB92FA4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5530BC", Offset = "0x5530BC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5530BC", Offset = "0x5530BC")]
		public static bool IsAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537D10", Offset = "0x537D10")]
	public class SDK_PicoNeoHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_VelocityEstimator cachedHeadsetVelocityEstimator;

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xB92FAC", Offset = "0xB92FAC", VA = "0xB92FAC", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xB92FB0", Offset = "0xB92FB0", VA = "0xB92FB0", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xB92FB4", Offset = "0xB92FB4", VA = "0xB92FB4", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xB9307C", Offset = "0xB9307C", VA = "0xB9307C", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xB9311C", Offset = "0xB9311C", VA = "0xB9311C", Slot = "12")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xB93164", Offset = "0xB93164", VA = "0xB93164", Slot = "13")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xB931AC", Offset = "0xB931AC", VA = "0xB931AC", Slot = "14")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xB931B4", Offset = "0xB931B4", VA = "0xB931B4", Slot = "15")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xB93244", Offset = "0xB93244", VA = "0xB93244", Slot = "16")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xB93344", Offset = "0xB93344", VA = "0xB93344", Slot = "17")]
		protected virtual void SetHeadsetCaches()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xB934B8", Offset = "0xB934B8", VA = "0xB934B8")]
		public SDK_PicoNeoHeadset()
		{
		}
	}
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537D78", Offset = "0x537D78")]
	public class SDK_PicoNeoSystem : SDK_BaseSystem
	{
		[Token(Token = "0x6001311")]
		[Address(RVA = "0xB934C0", Offset = "0xB934C0", VA = "0xB934C0", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xB934C8", Offset = "0xB934C8", VA = "0xB934C8", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xB934D0", Offset = "0xB934D0", VA = "0xB934D0", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xB934D4", Offset = "0xB934D4", VA = "0xB934D4")]
		public SDK_PicoNeoSystem()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class SDK_PlayStationFrustum : MonoBehaviour
	{
		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A58", Offset = "0x539A58")]
		private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationFrustum <>4__this;

			[Token(Token = "0x17000259")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600265D")]
				[Address(RVA = "0xB944FC", Offset = "0xB944FC", VA = "0xB944FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600265F")]
				[Address(RVA = "0xB9456C", Offset = "0xB9456C", VA = "0xB9456C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600265A")]
			[Address(RVA = "0xB93C9C", Offset = "0xB93C9C", VA = "0xB93C9C")]
			[DebuggerHidden]
			public <Start>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600265B")]
			[Address(RVA = "0xB943E4", Offset = "0xB943E4", VA = "0xB943E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600265C")]
			[Address(RVA = "0xB943E8", Offset = "0xB943E8", VA = "0xB943E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600265E")]
			[Address(RVA = "0xB94504", Offset = "0xB94504", VA = "0xB94504", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color cachedShowColor;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color cachedHideColor;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 camAcceleration;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float fadeSpeed;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform frustumTransform;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 hmdPositionRaw;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion hmdRotationUnity;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion hmdRotationRaw;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float safeDistance;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color showColor;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color hideColor;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x546618", Offset = "0x546618")]
		private bool <ShowFrustum>k__BackingField;

		[Token(Token = "0x170000AA")]
		public Vector3[] Bounds
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0xB935AC", Offset = "0xB935AC", VA = "0xB935AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public bool ShowFrustum
		{
			[Token(Token = "0x6001319")]
			[Address(RVA = "0xB93BE8", Offset = "0xB93BE8", VA = "0xB93BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55314C", Offset = "0x55314C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600131A")]
			[Address(RVA = "0xB93BF0", Offset = "0xB93BF0", VA = "0xB93BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55315C", Offset = "0x55315C")]
			set
			{
			}
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xB934DC", Offset = "0xB934DC", VA = "0xB934DC")]
		public void UpdateFrustumTracking()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xB934E0", Offset = "0xB934E0", VA = "0xB934E0")]
		public void Register()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xB935A8", Offset = "0xB935A8", VA = "0xB935A8")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xB93BFC", Offset = "0xB93BFC", VA = "0xB93BFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xB93C28", Offset = "0xB93C28", VA = "0xB93C28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55316C", Offset = "0x55316C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xB93CC8", Offset = "0xB93CC8", VA = "0xB93CC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xB935B0", Offset = "0xB935B0", VA = "0xB935B0")]
		private Vector3[] BoundsCalculation()
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xB93CCC", Offset = "0xB93CCC", VA = "0xB93CCC")]
		private Bounds CalculateBoundingBox(GameObject gameObjectWithMesh)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xB9417C", Offset = "0xB9417C", VA = "0xB9417C")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xB9432C", Offset = "0xB9432C", VA = "0xB9432C")]
		public void TurnOnFrustum()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xB94358", Offset = "0xB94358", VA = "0xB94358")]
		public void ToggleFrustum(bool on)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xB9438C", Offset = "0xB9438C", VA = "0xB9438C")]
		public void TurnOffFrustum()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xB943C8", Offset = "0xB943C8", VA = "0xB943C8")]
		public SDK_PlayStationFrustum()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class SDK_PlayStationMoveController : MonoBehaviour
	{
		[Token(Token = "0x200049F")]
		public class TrackedDevice
		{
			[Token(Token = "0x4001999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 AngularVelocity;

			[Token(Token = "0x400199A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform DeviceTransform;

			[Token(Token = "0x400199B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int Handle;

			[Token(Token = "0x400199C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Renderer Light;

			[Token(Token = "0x400199D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion Orientation;

			[Token(Token = "0x400199E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool PoorTracking;

			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 Position;

			[Token(Token = "0x40019A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool Primary;

			[Token(Token = "0x40019A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 Velocity;

			[Token(Token = "0x6002660")]
			[Address(RVA = "0xB946F4", Offset = "0xB946F4", VA = "0xB946F4")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		public enum Controller
		{
			[Token(Token = "0x40019A3")]
			Primary,
			[Token(Token = "0x40019A4")]
			Secondary
		}

		[Serializable]
		[Token(Token = "0x20004A1")]
		public enum PlayStationKeys
		{
			[Token(Token = "0x40019A6")]
			Trigger = 334,
			[Token(Token = "0x40019A7")]
			Middle = 335,
			[Token(Token = "0x40019A8")]
			Start = 337,
			[Token(Token = "0x40019A9")]
			Triangle = 333,
			[Token(Token = "0x40019AA")]
			Circle = 331,
			[Token(Token = "0x40019AB")]
			Cross = 330,
			[Token(Token = "0x40019AC")]
			Square = 332,
			[Token(Token = "0x40019AD")]
			None = -1
		}

		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A68", Offset = "0x539A68")]
		private sealed class <EstimateVelocity>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationMoveController <>4__this;

			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x1700025B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002664")]
				[Address(RVA = "0xB96990", Offset = "0xB96990", VA = "0xB96990", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002666")]
				[Address(RVA = "0xB96A00", Offset = "0xB96A00", VA = "0xB96A00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002661")]
			[Address(RVA = "0xB95258", Offset = "0xB95258", VA = "0xB95258")]
			[DebuggerHidden]
			public <EstimateVelocity>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002662")]
			[Address(RVA = "0xB9611C", Offset = "0xB9611C", VA = "0xB9611C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002663")]
			[Address(RVA = "0xB96120", Offset = "0xB96120", VA = "0xB96120", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002665")]
			[Address(RVA = "0xB96998", Offset = "0xB96998", VA = "0xB96998", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TrackedDevice device;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool ActiveController;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Controller ControllerType;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool IsTracked;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<PlayStationKeys, int> keyMappings;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastPos;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 lastRot;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Vector3> posList;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> rotList;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546648", Offset = "0x546648")]
		public bool autoStartSampling;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546680", Offset = "0x546680")]
		public int velocityAverageFrames;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5466B8", Offset = "0x5466B8")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Vector3[] velocitySamples;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3[] angularVelocitySamples;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int currentSampleCount;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Coroutine calculateSamplesRoutine;

		[Token(Token = "0x170000AC")]
		public TrackedDevice Device
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0xB94574", Offset = "0xB94574", VA = "0xB94574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xB945A4", Offset = "0xB945A4", VA = "0xB945A4")]
		public TrackedDevice CreateDevice()
		{
			return null;
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xB947C4", Offset = "0xB947C4", VA = "0xB947C4")]
		public void OnUnregisterMoveController()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xB94828", Offset = "0xB94828", VA = "0xB94828")]
		public Vector2 Trigger()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xB94888", Offset = "0xB94888", VA = "0xB94888")]
		public Vector3 GetDeviceVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xB948B8", Offset = "0xB948B8", VA = "0xB948B8")]
		public Vector3 GetDeviceAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xB948E8", Offset = "0xB948E8", VA = "0xB948E8")]
		public bool IsPoorTrackingQuality()
		{
			return default(bool);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xB949B0", Offset = "0xB949B0", VA = "0xB949B0")]
		private void UpdateMoveTransforms()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xB94A10", Offset = "0xB94A10", VA = "0xB94A10", Slot = "4")]
		public virtual void StartEstimation()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xB94A9C", Offset = "0xB94A9C", VA = "0xB94A9C", Slot = "5")]
		public virtual void EndEstimation()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xB94AB0", Offset = "0xB94AB0", VA = "0xB94AB0", Slot = "6")]
		public virtual Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xB94CFC", Offset = "0xB94CFC", VA = "0xB94CFC", Slot = "7")]
		public virtual Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xB94EDC", Offset = "0xB94EDC", VA = "0xB94EDC", Slot = "8")]
		public virtual Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xB95120", Offset = "0xB95120", VA = "0xB95120", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xB95170", Offset = "0xB95170", VA = "0xB95170", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xB9517C", Offset = "0xB9517C", VA = "0xB9517C", Slot = "11")]
		protected virtual void InitArrays()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xB951E4", Offset = "0xB951E4", VA = "0xB951E4", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5531D0", Offset = "0x5531D0")]
		protected virtual IEnumerator EstimateVelocity()
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xB95284", Offset = "0xB95284", VA = "0xB95284")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xB95460", Offset = "0xB95460", VA = "0xB95460")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xB956FC", Offset = "0xB956FC", VA = "0xB956FC")]
		public void SetKeyMappings(Dictionary<PlayStationKeys, KeyCode> mapping)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xB958F8", Offset = "0xB958F8", VA = "0xB958F8")]
		public void SetKey(PlayStationKeys key, KeyCode inputKey)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xB95970", Offset = "0xB95970", VA = "0xB95970")]
		public KeyCode GetControllerKey(PlayStationKeys key)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xB959F4", Offset = "0xB959F4", VA = "0xB959F4")]
		public int GetStickId()
		{
			return default(int);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xB95A88", Offset = "0xB95A88", VA = "0xB95A88")]
		private void Awake()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xB95BB0", Offset = "0xB95BB0", VA = "0xB95BB0")]
		private void Update()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xB95F2C", Offset = "0xB95F2C", VA = "0xB95F2C")]
		public SDK_PlayStationMoveController()
		{
		}
	}
	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537DE8", Offset = "0x537DE8")]
	public class SDK_PlayStationVRController : SDK_BaseController
	{
		[Token(Token = "0x20004A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A78", Offset = "0x539A78")]
		private sealed class <Vibrate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int strength;

			[Token(Token = "0x40019B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float time;

			[Token(Token = "0x40019B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SDK_PlayStationVRController <>4__this;

			[Token(Token = "0x1700025D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600266A")]
				[Address(RVA = "0xB98E2C", Offset = "0xB98E2C", VA = "0xB98E2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600266C")]
				[Address(RVA = "0xB98E9C", Offset = "0xB98E9C", VA = "0xB98E9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002667")]
			[Address(RVA = "0xB96D48", Offset = "0xB96D48", VA = "0xB96D48")]
			[DebuggerHidden]
			public <Vibrate>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0xB98D1C", Offset = "0xB98D1C", VA = "0xB98D1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002669")]
			[Address(RVA = "0xB98D20", Offset = "0xB98D20", VA = "0xB98D20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0xB98E34", Offset = "0xB98E34", VA = "0xB98E34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A88", Offset = "0x539A88")]
		private sealed class <>c
		{
			[Token(Token = "0x40019B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SDK_PlayStationMoveController> <>9__30_0;

			[Token(Token = "0x40019BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<SDK_PlayStationMoveController> <>9__30_1;

			[Token(Token = "0x40019BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<SDK_PlayStationMoveController> <>9__36_0;

			[Token(Token = "0x40019BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<SDK_PlayStationMoveController> <>9__36_1;

			[Token(Token = "0x40019BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<SDK_PlayStationMoveController> <>9__45_0;

			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Predicate<SDK_PlayStationMoveController> <>9__45_1;

			[Token(Token = "0x600266E")]
			[Address(RVA = "0xB98BDC", Offset = "0xB98BDC", VA = "0xB98BDC")]
			public <>c()
			{
			}

			[Token(Token = "0x600266F")]
			[Address(RVA = "0xB98BE4", Offset = "0xB98BE4", VA = "0xB98BE4")]
			internal bool <GetActualController>b__30_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0xB98C18", Offset = "0xB98C18", VA = "0xB98C18")]
			internal bool <GetActualController>b__30_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002671")]
			[Address(RVA = "0xB98C4C", Offset = "0xB98C4C", VA = "0xB98C4C")]
			internal bool <GetControllerModel>b__36_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002672")]
			[Address(RVA = "0xB98C80", Offset = "0xB98C80", VA = "0xB98C80")]
			internal bool <GetControllerModel>b__36_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002673")]
			[Address(RVA = "0xB98CB4", Offset = "0xB98CB4", VA = "0xB98CB4")]
			internal bool <OnEnable>b__45_0(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0xB98CE8", Offset = "0xB98CE8", VA = "0xB98CE8")]
			internal bool <OnEnable>b__45_1(SDK_PlayStationMoveController e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine vibrateCoroutine;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int maxVibration;

		[Token(Token = "0x4000CC2")]
		private const string HandName = "Hand";

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SDK_PlayStationMoveController leftController;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SDK_PlayStationMoveController rightController;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SDK_PlayStationVRKeyMappings keyMappings;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_TrackedController cachedLeftController;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_TrackedController cachedRightController;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool stick;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5466F0", Offset = "0x5466F0")]
		public bool Sticky;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546728", Offset = "0x546728")]
		public SDK_PlayStationMoveController.PlayStationKeys TouchPadSimulationActivator;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546760", Offset = "0x546760")]
		public SDK_PlayStationMoveController.PlayStationKeys TouchPadSimulationKey;

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xB96A10", Offset = "0xB96A10", VA = "0xB96A10")]
		public void SetvibrationStrength(int value)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xB96A94", Offset = "0xB96A94", VA = "0xB96A94", Slot = "46")]
		public virtual void PlayStationHapticPulseOnIndex(uint index, float strength = 0.3f)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xB96B80", Offset = "0xB96B80", VA = "0xB96B80", Slot = "47")]
		public virtual void TriggerHapticPulse(int index, int strength = 119)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xB96C90", Offset = "0xB96C90", VA = "0xB96C90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553234", Offset = "0x553234")]
		private IEnumerator Vibrate(int index, int strength = 119, float time = 0.1f)
		{
			return null;
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xB96D74", Offset = "0xB96D74", VA = "0xB96D74", Slot = "48")]
		public virtual void SetKeyMappings(Dictionary<SDK_PlayStationMoveController.PlayStationKeys, KeyCode> givenKeyMappings)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xB96DD0", Offset = "0xB96DD0", VA = "0xB96DD0", Slot = "49")]
		public virtual void SetKeyMappings(Dictionary<SDK_PlayStationMoveController.PlayStationKeys, KeyCode> givenKeyMappings, SDK_PlayStationMoveController controller)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xB96E04", Offset = "0xB96E04", VA = "0xB96E04", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xB96E08", Offset = "0xB96E08", VA = "0xB96E08", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xB96E0C", Offset = "0xB96E0C", VA = "0xB96E0C", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xB96E54", Offset = "0xB96E54", VA = "0xB96E54", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xB96EF4", Offset = "0xB96EF4", VA = "0xB96EF4", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xB96FAC", Offset = "0xB96FAC", VA = "0xB96FAC", Slot = "50")]
		protected virtual VRTK_TrackedController GetTrackedObject(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xB97030", Offset = "0xB97030", VA = "0xB97030", Slot = "51")]
		protected virtual void SetTrackedControllerCaches(bool forceRefresh = false)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xB9730C", Offset = "0xB9730C", VA = "0xB9730C", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xB97504", Offset = "0xB97504", VA = "0xB97504", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xB97564", Offset = "0xB97564", VA = "0xB97564", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xB9756C", Offset = "0xB9756C", VA = "0xB9756C", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xB978C0", Offset = "0xB978C0", VA = "0xB978C0", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xB97624", Offset = "0xB97624", VA = "0xB97624")]
		private static GameObject GetActualController(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xB97B14", Offset = "0xB97B14", VA = "0xB97B14", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xB97B24", Offset = "0xB97B24", VA = "0xB97B24", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xB97B34", Offset = "0xB97B34", VA = "0xB97B34", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xB97B48", Offset = "0xB97B48", VA = "0xB97B48", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xB97B5C", Offset = "0xB97B5C", VA = "0xB97B5C", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xB97B6C", Offset = "0xB97B6C", VA = "0xB97B6C", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xB97EC8", Offset = "0xB97EC8", VA = "0xB97EC8", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xB97ECC", Offset = "0xB97ECC", VA = "0xB97ECC", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xB97F40", Offset = "0xB97F40", VA = "0xB97F40")]
		protected bool IsTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xB97FB4", Offset = "0xB97FB4", VA = "0xB97FB4")]
		protected bool IsHairTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xB98028", Offset = "0xB98028", VA = "0xB98028")]
		protected bool IsButtonPressIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xB98060", Offset = "0xB98060", VA = "0xB98060")]
		protected bool IsButtonHairTouchIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xB9809C", Offset = "0xB9809C", VA = "0xB9809C")]
		private bool TouchPadSimulator(uint index, ButtonPressTypes type)
		{
			return default(bool);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xB98128", Offset = "0xB98128", VA = "0xB98128")]
		private bool IsButtonPressed(uint index, ButtonPressTypes type, SDK_PlayStationMoveController.PlayStationKeys playStationKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xB982F0", Offset = "0xB982F0", VA = "0xB982F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xB98550", Offset = "0xB98550", VA = "0xB98550", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xB985CC", Offset = "0xB985CC", VA = "0xB985CC", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xB985D0", Offset = "0xB985D0", VA = "0xB985D0", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xB985D8", Offset = "0xB985D8", VA = "0xB985D8", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xB986FC", Offset = "0xB986FC", VA = "0xB986FC", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xB987CC", Offset = "0xB987CC", VA = "0xB987CC", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xB987D4", Offset = "0xB987D4", VA = "0xB987D4", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xB9888C", Offset = "0xB9888C", VA = "0xB9888C", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xB98894", Offset = "0xB98894", VA = "0xB98894", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xB98B54", Offset = "0xB98B54", VA = "0xB98B54", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xB98B5C", Offset = "0xB98B5C", VA = "0xB98B5C")]
		public SDK_PlayStationVRController()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class SDK_PlayStationVRInput : MonoBehaviour
	{
		[Token(Token = "0x20004A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539A98", Offset = "0x539A98")]
		private sealed class <DeviceTracking>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationVRInput <>4__this;

			[Token(Token = "0x1700025F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002678")]
				[Address(RVA = "0xB9D0B8", Offset = "0xB9D0B8", VA = "0xB9D0B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000260")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600267A")]
				[Address(RVA = "0xB9D128", Offset = "0xB9D128", VA = "0xB9D128", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002675")]
			[Address(RVA = "0xB99074", Offset = "0xB99074", VA = "0xB99074")]
			[DebuggerHidden]
			public <DeviceTracking>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0xB9CEEC", Offset = "0xB9CEEC", VA = "0xB9CEEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0xB9CEF0", Offset = "0xB9CEF0", VA = "0xB9CEF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0xB9D0C0", Offset = "0xB9D0C0", VA = "0xB9D0C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539AA8", Offset = "0x539AA8")]
		private sealed class <RegisterMoveControllers>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SDK_PlayStationVRInput <>4__this;

			[Token(Token = "0x17000261")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600267E")]
				[Address(RVA = "0xB9D20C", Offset = "0xB9D20C", VA = "0xB9D20C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000262")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002680")]
				[Address(RVA = "0xB9D27C", Offset = "0xB9D27C", VA = "0xB9D27C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600267B")]
			[Address(RVA = "0xB9940C", Offset = "0xB9940C", VA = "0xB9940C")]
			[DebuggerHidden]
			public <RegisterMoveControllers>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600267C")]
			[Address(RVA = "0xB9D130", Offset = "0xB9D130", VA = "0xB9D130", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0xB9D134", Offset = "0xB9D134", VA = "0xB9D134", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600267F")]
			[Address(RVA = "0xB9D214", Offset = "0xB9D214", VA = "0xB9D214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539AB8", Offset = "0x539AB8")]
		private sealed class <>c
		{
			[Token(Token = "0x40019C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyCode, string> <>9__77_0;

			[Token(Token = "0x6002682")]
			[Address(RVA = "0xB9CE28", Offset = "0xB9CE28", VA = "0xB9CE28")]
			public <>c()
			{
			}

			[Token(Token = "0x6002683")]
			[Address(RVA = "0xB9CE30", Offset = "0xB9CE30", VA = "0xB9CE30")]
			internal string <UpdateHints>b__77_0(KeyCode k)
			{
				return null;
			}
		}

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool loaded;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform headsetRoot;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SDK_PlayStationFrustum frustum;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x546798", Offset = "0x546798")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546798", Offset = "0x546798")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x546798", Offset = "0x546798")]
		public int MaxVibration;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 startHeadTrackingLocation;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool trackingStarted;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x546814", Offset = "0x546814")]
		public float PlayerHeight;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform rightHand;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform leftHand;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform myCamera;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform trackedDevices;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SDK_PlayStationMoveController rightController;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SDK_PlayStationMoveController leftController;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameObject cachedCameraRig;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject hintCanvas;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54682C", Offset = "0x54682C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54682C", Offset = "0x54682C")]
		public bool showControlHints;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54688C", Offset = "0x54688C")]
		public bool hideHandsAtSwitch;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5468C4", Offset = "0x5468C4")]
		public bool resetHandsAtSwitch;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5468FC", Offset = "0x5468FC")]
		public bool lockMouseToView;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x546934", Offset = "0x546934")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546934", Offset = "0x546934")]
		public float handMoveMultiplier;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546994", Offset = "0x546994")]
		public float handRotationMultiplier;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5469CC", Offset = "0x5469CC")]
		public float playerMoveMultiplier;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546A04", Offset = "0x546A04")]
		public float playerRotationMultiplier;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x546A3C", Offset = "0x546A3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546A3C", Offset = "0x546A3C")]
		public KeyCode mouseMovementKey;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546A9C", Offset = "0x546A9C")]
		public KeyCode toggleControlHints;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546AD4", Offset = "0x546AD4")]
		public KeyCode changeHands;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546B0C", Offset = "0x546B0C")]
		public KeyCode handsOnOff;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546B44", Offset = "0x546B44")]
		public KeyCode rotationPosition;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546B7C", Offset = "0x546B7C")]
		public KeyCode changeAxis;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x546BB4", Offset = "0x546BB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546BB4", Offset = "0x546BB4")]
		public KeyCode moveForward;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546C14", Offset = "0x546C14")]
		public KeyCode moveLeft;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546C4C", Offset = "0x546C4C")]
		public KeyCode moveBackward;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546C84", Offset = "0x546C84")]
		public KeyCode moveRight;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x546CBC", Offset = "0x546CBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546CBC", Offset = "0x546CBC")]
		public KeyCode triggerAlias;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546D1C", Offset = "0x546D1C")]
		public KeyCode gripAlias;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546D54", Offset = "0x546D54")]
		public KeyCode touchpadAlias;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546D8C", Offset = "0x546D8C")]
		public KeyCode buttonOneAlias;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546DC4", Offset = "0x546DC4")]
		public KeyCode buttonTwoAlias;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546DFC", Offset = "0x546DFC")]
		public KeyCode startMenuAlias;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546E34", Offset = "0x546E34")]
		public KeyCode touchModifier;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546E6C", Offset = "0x546E6C")]
		public KeyCode hairTouchModifier;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546EA4", Offset = "0x546EA4")]
		public KeyCode RadiusLimitKey;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546EDC", Offset = "0x546EDC")]
		public KeyCode IncreaseMultipliersKey;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546F14", Offset = "0x546F14")]
		public KeyCode DecreaseMultipliersKey;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool isHand;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Text hintText;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private SDK_PlayStationMoveController currentHand;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 oldPos;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private float controllerRadiusLimit;

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xB98EB4", Offset = "0xB98EB4", VA = "0xB98EB4")]
		private void InitDeviceTracking()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xB99000", Offset = "0xB99000", VA = "0xB99000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553298", Offset = "0x553298")]
		private IEnumerator DeviceTracking()
		{
			return null;
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xB990A0", Offset = "0xB990A0", VA = "0xB990A0")]
		private bool ControllersConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xB990A8", Offset = "0xB990A8", VA = "0xB990A8")]
		private void UpdateInputTracking()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xB99310", Offset = "0xB99310", VA = "0xB99310")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xB9932C", Offset = "0xB9932C", VA = "0xB9932C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xB99330", Offset = "0xB99330", VA = "0xB99330")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xB99338", Offset = "0xB99338", VA = "0xB99338")]
		private void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xB9936C", Offset = "0xB9936C", VA = "0xB9936C")]
		private void RegisterDevices()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xB99398", Offset = "0xB99398", VA = "0xB99398")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5532FC", Offset = "0x5532FC")]
		private IEnumerator RegisterMoveControllers()
		{
			return null;
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xB99324", Offset = "0xB99324", VA = "0xB99324")]
		private void UnregisterDevices()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xB99438", Offset = "0xB99438", VA = "0xB99438")]
		private void UnregisterMoveControllers()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xB991C8", Offset = "0xB991C8", VA = "0xB991C8")]
		private void Recenter()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xB97978", Offset = "0xB97978", VA = "0xB97978")]
		public static GameObject FindInScene()
		{
			return null;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xB9943C", Offset = "0xB9943C", VA = "0xB9943C")]
		public void ToggleHeight(bool reset)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xB99660", Offset = "0xB99660", VA = "0xB99660")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xB9979C", Offset = "0xB9979C", VA = "0xB9979C")]
		private void Start()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xB99AF4", Offset = "0xB99AF4", VA = "0xB99AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xB99AF8", Offset = "0xB99AF8", VA = "0xB99AF8")]
		private void SetUpEditorSimulator()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xB99E74", Offset = "0xB99E74", VA = "0xB99E74")]
		private void UpdateSimulator()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xB9A6C0", Offset = "0xB9A6C0", VA = "0xB9A6C0")]
		private void UpdateHands()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xB9A018", Offset = "0xB9A018", VA = "0xB9A018")]
		private void RadiusLimiter()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xB9A2D0", Offset = "0xB9A2D0", VA = "0xB9A2D0")]
		private void MultiplierInputMonitor()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xB9CD18", Offset = "0xB9CD18", VA = "0xB9CD18")]
		private void AdjustMultipliers(float value)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xB9AA84", Offset = "0xB9AA84", VA = "0xB9AA84")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xB9AD74", Offset = "0xB9AD74", VA = "0xB9AD74")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xB9A408", Offset = "0xB9A408", VA = "0xB9A408")]
		private void SetHand()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xB9A35C", Offset = "0xB9A35C", VA = "0xB9A35C")]
		private void SetMove()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xB9B0E0", Offset = "0xB9B0E0", VA = "0xB9B0E0")]
		private void UpdateHints()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xB9CD0C", Offset = "0xB9CD0C", VA = "0xB9CD0C")]
		private bool IsAcceptingMouseInput()
		{
			return default(bool);
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xB9CBBC", Offset = "0xB9CBBC", VA = "0xB9CBBC")]
		private Vector3 GetMouseDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xB9CD3C", Offset = "0xB9CD3C", VA = "0xB9CD3C")]
		public SDK_PlayStationVRInput()
		{
		}
	}
	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537E50", Offset = "0x537E50")]
	public class SDK_PlayStationVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x600138C")]
		[Address(RVA = "0xB96A08", Offset = "0xB96A08", VA = "0xB96A08")]
		public SDK_PlayStationVRBoundaries()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public static class SDK_PlayStationVRDefines
	{
		[Token(Token = "0x4000CFD")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_PlayStation";

		[Token(Token = "0x4000CFE")]
		public const string BuildTargetGroupName = "PS4";

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xB98EA4", Offset = "0xB98EA4", VA = "0xB98EA4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x553360", Offset = "0x553360")]
		public static bool IsAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537EB8", Offset = "0x537EB8")]
	public class SDK_PlayStationVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x600138E")]
		[Address(RVA = "0xB98EAC", Offset = "0xB98EAC", VA = "0xB98EAC")]
		public SDK_PlayStationVRHeadset()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class SDK_PlayStationVRKeyMappings : MonoBehaviour
	{
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SDK_PlayStationMoveController.PlayStationKeys trigger;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDK_PlayStationMoveController.PlayStationKeys triggerHairline;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SDK_PlayStationMoveController.PlayStationKeys grip;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SDK_PlayStationMoveController.PlayStationKeys gripHairline;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDK_PlayStationMoveController.PlayStationKeys touchpad;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SDK_PlayStationMoveController.PlayStationKeys buttonOne;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SDK_PlayStationMoveController.PlayStationKeys buttonTwo;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public SDK_PlayStationMoveController.PlayStationKeys buttonThree;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDK_PlayStationMoveController.PlayStationKeys buttonFour;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public SDK_PlayStationMoveController.PlayStationKeys startMenu;

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xB9D284", Offset = "0xB9D284", VA = "0xB9D284")]
		public SDK_PlayStationVRKeyMappings()
		{
		}
	}
	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537F20", Offset = "0x537F20")]
	public class SDK_PlayStationVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6001390")]
		[Address(RVA = "0xB9D29C", Offset = "0xB9D29C", VA = "0xB9D29C")]
		public SDK_PlayStationVRSystem()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class SDK_ControllerSim : MonoBehaviour
	{
		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 lastPos;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion lastRot;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> posList;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> rotList;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float magnitude;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 axis;

		[Token(Token = "0x170000AD")]
		public bool Selected
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0xB87864", Offset = "0xB87864", VA = "0xB87864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001392")]
			[Address(RVA = "0xB8786C", Offset = "0xB8786C", VA = "0xB8786C")]
			set
			{
			}
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xB87878", Offset = "0xB87878", VA = "0xB87878")]
		public Vector3 GetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xB87A84", Offset = "0xB87A84", VA = "0xB87A84")]
		public Vector3 GetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xB87C90", Offset = "0xB87C90", VA = "0xB87C90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xB87D70", Offset = "0xB87D70", VA = "0xB87D70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xB880E8", Offset = "0xB880E8", VA = "0xB880E8")]
		public SDK_ControllerSim()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class SDK_InputSimulator : MonoBehaviour
	{
		[Token(Token = "0x20004A8")]
		public enum MouseInputMode
		{
			[Token(Token = "0x40019C8")]
			Always,
			[Token(Token = "0x40019C9")]
			RequiresButtonPress
		}

		[Serializable]
		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539AC8", Offset = "0x539AC8")]
		private sealed class <>c
		{
			[Token(Token = "0x40019CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyCode, string> <>9__60_0;

			[Token(Token = "0x6002685")]
			[Address(RVA = "0xB8C850", Offset = "0xB8C850", VA = "0xB8C850")]
			public <>c()
			{
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0xB8C858", Offset = "0xB8C858", VA = "0xB8C858")]
			internal string <UpdateHints>b__60_0(KeyCode k)
			{
				return null;
			}
		}

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546F5C", Offset = "0x546F5C")]
		public bool showControlHints;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546F94", Offset = "0x546F94")]
		public bool hideHandsAtSwitch;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x546FCC", Offset = "0x546FCC")]
		public bool resetHandsAtSwitch;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547004", Offset = "0x547004")]
		public MouseInputMode mouseMovementInput;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54703C", Offset = "0x54703C")]
		public bool lockMouseToView;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x547074", Offset = "0x547074")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547074", Offset = "0x547074")]
		public float handMoveMultiplier;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5470D4", Offset = "0x5470D4")]
		public float handRotationMultiplier;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54710C", Offset = "0x54710C")]
		public float playerMoveMultiplier;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547144", Offset = "0x547144")]
		public float playerRotationMultiplier;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54717C", Offset = "0x54717C")]
		public float playerSprintMultiplier;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5471B4", Offset = "0x5471B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5471B4", Offset = "0x5471B4")]
		public KeyCode mouseMovementKey;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547214", Offset = "0x547214")]
		public KeyCode toggleControlHints;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54724C", Offset = "0x54724C")]
		public KeyCode changeHands;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547284", Offset = "0x547284")]
		public KeyCode handsOnOff;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5472BC", Offset = "0x5472BC")]
		public KeyCode rotationPosition;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5472F4", Offset = "0x5472F4")]
		public KeyCode changeAxis;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54732C", Offset = "0x54732C")]
		public KeyCode distancePickupLeft;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547364", Offset = "0x547364")]
		public KeyCode distancePickupRight;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54739C", Offset = "0x54739C")]
		public KeyCode distancePickupModifier;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5473D4", Offset = "0x5473D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5473D4", Offset = "0x5473D4")]
		public KeyCode moveForward;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547434", Offset = "0x547434")]
		public KeyCode moveLeft;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54746C", Offset = "0x54746C")]
		public KeyCode moveBackward;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5474A4", Offset = "0x5474A4")]
		public KeyCode moveRight;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5474DC", Offset = "0x5474DC")]
		public KeyCode sprint;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x547514", Offset = "0x547514")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547514", Offset = "0x547514")]
		public KeyCode triggerAlias;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547574", Offset = "0x547574")]
		public KeyCode gripAlias;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5475AC", Offset = "0x5475AC")]
		public KeyCode touchpadAlias;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5475E4", Offset = "0x5475E4")]
		public KeyCode buttonOneAlias;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54761C", Offset = "0x54761C")]
		public KeyCode buttonTwoAlias;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547654", Offset = "0x547654")]
		public KeyCode buttonThreeAlias;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54768C", Offset = "0x54768C")]
		public KeyCode buttonFourAlias;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5476C4", Offset = "0x5476C4")]
		public KeyCode startMenuAlias;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5476FC", Offset = "0x5476FC")]
		public KeyCode touchModifier;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547734", Offset = "0x547734")]
		public KeyCode hairTouchModifier;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isHand;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject hintCanvas;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Text hintText;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform rightHand;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform leftHand;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform currentHand;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 oldPos;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform neck;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private SDK_ControllerSim rightController;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SDK_ControllerSim leftController;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject cachedCameraRig;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool destroyed;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float sprintMultiplier;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject crossHairPanel;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xB88D04", Offset = "0xB88D04", VA = "0xB88D04")]
		public static GameObject FindInScene()
		{
			return null;
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xB88FC0", Offset = "0xB88FC0", VA = "0xB88FC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xB89040", Offset = "0xB89040", VA = "0xB89040")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xB897AC", Offset = "0xB897AC", VA = "0xB897AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xB89860", Offset = "0xB89860", VA = "0xB89860")]
		private void Update()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xB8A530", Offset = "0xB8A530", VA = "0xB8A530")]
		private void TryPickup(bool rightHand)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xB89E6C", Offset = "0xB89E6C", VA = "0xB89E6C")]
		private void UpdateHands()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xB8A238", Offset = "0xB8A238", VA = "0xB8A238")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xB8A7C0", Offset = "0xB8A7C0", VA = "0xB8A7C0")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xB89BBC", Offset = "0xB89BBC", VA = "0xB89BBC")]
		private void SetHand()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xB89B10", Offset = "0xB89B10", VA = "0xB89B10")]
		private void SetMove()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xB8AACC", Offset = "0xB8AACC", VA = "0xB8AACC")]
		private void UpdateHints()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xB8C750", Offset = "0xB8C750", VA = "0xB8C750")]
		private bool IsAcceptingMouseInput()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xB8C600", Offset = "0xB8C600", VA = "0xB8C600")]
		private Vector3 GetMouseDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xB8C76C", Offset = "0xB8C76C", VA = "0xB8C76C")]
		public SDK_InputSimulator()
		{
		}
	}
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x537FA0", Offset = "0x537FA0")]
	public class SDK_SimBoundaries : SDK_BaseBoundaries
	{
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform area;

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xB9D558", Offset = "0xB9D558", VA = "0xB9D558", Slot = "8")]
		public override void InitBoundaries()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xB9D55C", Offset = "0xB9D55C", VA = "0xB9D55C", Slot = "9")]
		public override Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xB9D650", Offset = "0xB9D650", VA = "0xB9D650", Slot = "10")]
		public override Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xB9D938", Offset = "0xB9D938", VA = "0xB9D938", Slot = "11")]
		public override float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xB9D944", Offset = "0xB9D944", VA = "0xB9D944", Slot = "12")]
		public override bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xB9D94C", Offset = "0xB9D94C", VA = "0xB9D94C", Slot = "13")]
		public override bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xB9D954", Offset = "0xB9D954", VA = "0xB9D954", Slot = "14")]
		public override void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xB9D958", Offset = "0xB9D958", VA = "0xB9D958")]
		public SDK_SimBoundaries()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538008", Offset = "0x538008")]
	public class SDK_SimController : SDK_BaseController
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected SDK_ControllerSim rightController;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected SDK_ControllerSim leftController;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Dictionary<string, KeyCode> keyMappings;

		[Token(Token = "0x4000D44")]
		protected const string RIGHT_HAND_CONTROLLER_NAME = "RightHand";

		[Token(Token = "0x4000D45")]
		protected const string LEFT_HAND_CONTROLLER_NAME = "LeftHand";

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xB9D960", Offset = "0xB9D960", VA = "0xB9D960", Slot = "46")]
		public virtual void SetKeyMappings(Dictionary<string, KeyCode> givenKeyMappings)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xB9D968", Offset = "0xB9D968", VA = "0xB9D968", Slot = "8")]
		public override void ProcessUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xB9D96C", Offset = "0xB9D96C", VA = "0xB9D96C", Slot = "9")]
		public override void ProcessFixedUpdate(VRTK_ControllerReference controllerReference, Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xB9D970", Offset = "0xB9D970", VA = "0xB9D970", Slot = "10")]
		public override ControllerType GetCurrentControllerType()
		{
			return default(ControllerType);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xB9D978", Offset = "0xB9D978", VA = "0xB9D978", Slot = "11")]
		public override string GetControllerDefaultColliderPath(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xB9D9C0", Offset = "0xB9D9C0", VA = "0xB9D9C0", Slot = "12")]
		public override string GetControllerElementPath(ControllerElements element, ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xB9DA60", Offset = "0xB9DA60", VA = "0xB9DA60", Slot = "13")]
		public override uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xB9DAC0", Offset = "0xB9DAC0", VA = "0xB9DAC0", Slot = "14")]
		public override GameObject GetControllerByIndex(uint index, bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xB9DCA0", Offset = "0xB9DCA0", VA = "0xB9DCA0", Slot = "15")]
		public override Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xB9DD5C", Offset = "0xB9DD5C", VA = "0xB9DD5C", Slot = "16")]
		public override Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xB9DD64", Offset = "0xB9DD64", VA = "0xB9DD64", Slot = "17")]
		public override GameObject GetControllerLeftHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xB9DE30", Offset = "0xB9DE30", VA = "0xB9DE30", Slot = "18")]
		public override GameObject GetControllerRightHand(bool actual = false)
		{
			return null;
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xB9DEFC", Offset = "0xB9DEFC", VA = "0xB9DEFC", Slot = "19")]
		public override bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xB9DF0C", Offset = "0xB9DF0C", VA = "0xB9DF0C", Slot = "20")]
		public override bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xB9DF1C", Offset = "0xB9DF1C", VA = "0xB9DF1C", Slot = "21")]
		public override bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xB9DF30", Offset = "0xB9DF30", VA = "0xB9DF30", Slot = "22")]
		public override bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xB9DF44", Offset = "0xB9DF44", VA = "0xB9DF44", Slot = "23")]
		public override GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xB9DF54", Offset = "0xB9DF54", VA = "0xB9DF54", Slot = "24")]
		public override GameObject GetControllerModel(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xB9E0B4", Offset = "0xB9E0B4", VA = "0xB9E0B4", Slot = "26")]
		public override GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xB9E174", Offset = "0xB9E174", VA = "0xB9E174", Slot = "27")]
		public override void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xB9E178", Offset = "0xB9E178", VA = "0xB9E178", Slot = "28")]
		public override void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xB9E17C", Offset = "0xB9E17C", VA = "0xB9E17C", Slot = "29")]
		public override bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xB9E184", Offset = "0xB9E184", VA = "0xB9E184", Slot = "30")]
		public override SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xB9E1F8", Offset = "0xB9E1F8", VA = "0xB9E1F8", Slot = "31")]
		public override Vector3 GetVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xB9E358", Offset = "0xB9E358", VA = "0xB9E358", Slot = "32")]
		public override Vector3 GetAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xB9E4B8", Offset = "0xB9E4B8", VA = "0xB9E4B8", Slot = "33")]
		public override bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xB9E4D0", Offset = "0xB9E4D0", VA = "0xB9E4D0", Slot = "34")]
		public override Vector2 GetButtonAxis(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xB9E530", Offset = "0xB9E530", VA = "0xB9E530", Slot = "35")]
		public override float GetButtonHairlineDelta(ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xB9E538", Offset = "0xB9E538", VA = "0xB9E538", Slot = "36")]
		public override bool GetControllerButtonState(ButtonTypes buttonType, ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xB9E618", Offset = "0xB9E618", VA = "0xB9E618", Slot = "47")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xB9E628", Offset = "0xB9E628", VA = "0xB9E628", Slot = "48")]
		protected virtual void SetupPlayer()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xB9E860", Offset = "0xB9E860", VA = "0xB9E860", Slot = "49")]
		protected virtual bool IsTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xB9E8D4", Offset = "0xB9E8D4", VA = "0xB9E8D4", Slot = "50")]
		protected virtual bool IsHairTouchModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xB9E948", Offset = "0xB9E948", VA = "0xB9E948", Slot = "51")]
		protected virtual bool IsButtonPressIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xB9E998", Offset = "0xB9E998", VA = "0xB9E998", Slot = "52")]
		protected virtual bool IsButtonHairTouchIgnored()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xB9E9EC", Offset = "0xB9E9EC", VA = "0xB9E9EC", Slot = "53")]
		protected virtual bool GetControllerButtonState(uint index, string keyMapping, ButtonPressTypes pressType)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xB9EB88", Offset = "0xB9EB88", VA = "0xB9EB88", Slot = "54")]
		protected virtual bool IsButtonPressed(uint index, ButtonPressTypes type, KeyCode button)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xB9EC60", Offset = "0xB9EC60", VA = "0xB9EC60", Slot = "55")]
		protected virtual GameObject GetActualController(ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xB9EDA0", Offset = "0xB9EDA0", VA = "0xB9EDA0")]
		public SDK_SimController()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538070", Offset = "0x538070")]
	public class SDK_SimHeadset : SDK_BaseHeadset
	{
		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform camera;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPos;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion lastRot;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Vector3> posList;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Vector3> rotList;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float magnitude;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 axis;

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xB9F04C", Offset = "0xB9F04C", VA = "0xB9F04C", Slot = "8")]
		public override void ProcessUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xB9F3DC", Offset = "0xB9F3DC", VA = "0xB9F3DC", Slot = "9")]
		public override void ProcessFixedUpdate(Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xB9F3E0", Offset = "0xB9F3E0", VA = "0xB9F3E0", Slot = "10")]
		public override Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xB9F4F8", Offset = "0xB9F4F8", VA = "0xB9F4F8", Slot = "11")]
		public override Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xB9F504", Offset = "0xB9F504", VA = "0xB9F504", Slot = "12")]
		public override Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xB9F710", Offset = "0xB9F710", VA = "0xB9F710", Slot = "13")]
		public override Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xB9F91C", Offset = "0xB9F91C", VA = "0xB9F91C", Slot = "14")]
		public override void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xB9F924", Offset = "0xB9F924", VA = "0xB9F924", Slot = "15")]
		public override bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xB9F9B8", Offset = "0xB9F9B8", VA = "0xB9F9B8", Slot = "16")]
		public override void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xB9FAC0", Offset = "0xB9FAC0", VA = "0xB9FAC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xB9FBE8", Offset = "0xB9FBE8", VA = "0xB9FBE8")]
		public SDK_SimHeadset()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x5380D8", Offset = "0x5380D8")]
	public class SDK_SimSystem : SDK_BaseSystem
	{
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xB9FC78", Offset = "0xB9FC78", VA = "0xB9FC78", Slot = "8")]
		public override bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xB9FC80", Offset = "0xB9FC80", VA = "0xB9FC80", Slot = "9")]
		public override bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xB9FC88", Offset = "0xB9FC88", VA = "0xB9FC88", Slot = "10")]
		public override void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xB9FC8C", Offset = "0xB9FC8C", VA = "0xB9FC8C")]
		public SDK_SimSystem()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538130", Offset = "0x538130")]
	public class SDK_SteamVRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xB9FC94", Offset = "0xB9FC94", VA = "0xB9FC94")]
		public SDK_SteamVRBoundaries()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538198", Offset = "0x538198")]
	public class SDK_SteamVRController : SDK_FallbackController
	{
		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xB9FC9C", Offset = "0xB9FC9C", VA = "0xB9FC9C")]
		public SDK_SteamVRController()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public static class SDK_SteamVRDefines
	{
		[Token(Token = "0x4000D4D")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_STEAMVR";

		[Token(Token = "0x4000D4E")]
		private const string BuildTargetGroupName = "Standalone";

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xB9FCA4", Offset = "0xB9FCA4", VA = "0xB9FCA4")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5533AC", Offset = "0x5533AC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5533AC", Offset = "0x5533AC")]
		private static bool IsPluginVersion122OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xB9FD70", Offset = "0xB9FD70", VA = "0xB9FD70")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x55343C", Offset = "0x55343C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x55343C", Offset = "0x55343C")]
		private static bool IsPluginVersion121OrNewer()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xB9FEE8", Offset = "0xB9FEE8", VA = "0xB9FEE8")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5534CC", Offset = "0x5534CC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5534CC", Offset = "0x5534CC")]
		private static bool IsPluginVersion120()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xBA005C", Offset = "0xBA005C", VA = "0xBA005C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x55355C", Offset = "0x55355C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x55355C", Offset = "0x55355C")]
		private static bool IsPluginVersion111OrOlder()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538200", Offset = "0x538200")]
	public class SDK_SteamVRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xBA0180", Offset = "0xBA0180", VA = "0xBA0180")]
		public SDK_SteamVRHeadset()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538268", Offset = "0x538268")]
	public class SDK_SteamVRSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xBA0188", Offset = "0xBA0188", VA = "0xBA0188")]
		public SDK_SteamVRSystem()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5382E8", Offset = "0x5382E8")]
	public class WindowsMR_Camera : MonoBehaviour
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54776C", Offset = "0x54776C")]
		private bool forceRoomScaleTracking;

		[Token(Token = "0x4000D50")]
		private const string DEVICE_NAME = "WindowsMR";

		[Token(Token = "0x170000AE")]
		public bool ForceRoomScaleTracking
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xC071C0", Offset = "0xC071C0", VA = "0xC071C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0xC071C8", Offset = "0xC071C8", VA = "0xC071C8")]
			set
			{
			}
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xC071D4", Offset = "0xC071D4", VA = "0xC071D4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xC07218", Offset = "0xC07218", VA = "0xC07218", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xC07530", Offset = "0xC07530", VA = "0xC07530", Slot = "6")]
		protected virtual bool CheckForMixedRealitySupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xC07664", Offset = "0xC07664", VA = "0xC07664", Slot = "7")]
		protected virtual void SetupMRCamera()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xC07794", Offset = "0xC07794", VA = "0xC07794")]
		public WindowsMR_Camera()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class WindowsMR_ControllerManager : MonoBehaviour
	{
		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xC077A4", Offset = "0xC077A4", VA = "0xC077A4")]
		public WindowsMR_ControllerManager()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class WindowsMR_TrackedObject : MonoBehaviour
	{
		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xC077AC", Offset = "0xC077AC", VA = "0xC077AC")]
		public WindowsMR_TrackedObject()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x53834C", Offset = "0x53834C")]
	public class SDK_WindowsMRBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xBA0198", Offset = "0xBA0198", VA = "0xBA0198")]
		public SDK_WindowsMRBoundaries()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x5383B4", Offset = "0x5383B4")]
	public class SDK_WindowsMRController : SDK_FallbackController
	{
		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xBA01A0", Offset = "0xBA01A0", VA = "0xBA01A0")]
		public SDK_WindowsMRController()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public static class SDK_WindowsMRDefines
	{
		[Token(Token = "0x4000D51")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_WINDOWSMR";

		[Token(Token = "0x4000D52")]
		private const string BuildTargetGroupName = "WSA";

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xBA01A8", Offset = "0xBA01A8", VA = "0xBA01A8")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5535EC", Offset = "0x5535EC")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5535EC", Offset = "0x5535EC")]
		private static bool HasControllerVisualization()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xBA022C", Offset = "0xBA022C", VA = "0xBA022C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x55367C", Offset = "0x55367C")]
		private static bool IsXRSettingsEnabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x53841C", Offset = "0x53841C")]
	public class SDK_WindowsMRHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xBA0234", Offset = "0xBA0234", VA = "0xBA0234")]
		public SDK_WindowsMRHeadset()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538484", Offset = "0x538484")]
	public class SDK_WindowsMR : SDK_FallbackSystem
	{
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xBA0190", Offset = "0xBA0190", VA = "0xBA0190")]
		public SDK_WindowsMR()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public static class VRTK_SDK_Bridge
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDK_BaseSystem systemSDK;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static SDK_BaseHeadset headsetSDK;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SDK_BaseController controllerSDK;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SDK_BaseBoundaries boundariesSDK;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static SDK_BaseController _cachedControllerSDK;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static VRTK_SDKManager _cachedSDKManagerInstance;

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x81BB1C", Offset = "0x81BB1C", VA = "0x81BB1C")]
		public static void ControllerProcessUpdate(VRTK_ControllerReference controllerReference, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x81C08C", Offset = "0x81C08C", VA = "0x81C08C")]
		public static void ControllerProcessFixedUpdate(VRTK_ControllerReference controllerReference, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x81C11C", Offset = "0x81C11C", VA = "0x81C11C")]
		public static SDK_BaseController.ControllerType GetCurrentControllerType()
		{
			return default(SDK_BaseController.ControllerType);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x81C194", Offset = "0x81C194", VA = "0x81C194")]
		public static string GetControllerDefaultColliderPath(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x81C214", Offset = "0x81C214", VA = "0x81C214")]
		public static string GetControllerElementPath(SDK_BaseController.ControllerElements element, SDK_BaseController.ControllerHand hand, bool fullPath = false)
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x81C2AC", Offset = "0x81C2AC", VA = "0x81C2AC")]
		public static uint GetControllerIndex(GameObject controller)
		{
			return default(uint);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x81C32C", Offset = "0x81C32C", VA = "0x81C32C")]
		public static GameObject GetControllerByIndex(uint index, bool actual)
		{
			return null;
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x81C3C0", Offset = "0x81C3C0", VA = "0x81C3C0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5536C8", Offset = "0x5536C8")]
		public static Transform GetControllerOrigin(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x81C458", Offset = "0x81C458", VA = "0x81C458")]
		public static Transform GetControllerOrigin(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x81C4DC", Offset = "0x81C4DC", VA = "0x81C4DC")]
		public static Transform GenerateControllerPointerOrigin(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x81C560", Offset = "0x81C560", VA = "0x81C560")]
		public static GameObject GetControllerLeftHand(bool actual)
		{
			return null;
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x81C5E4", Offset = "0x81C5E4", VA = "0x81C5E4")]
		public static GameObject GetControllerRightHand(bool actual)
		{
			return null;
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x81C668", Offset = "0x81C668", VA = "0x81C668")]
		public static GameObject GetControllerByHand(SDK_BaseController.ControllerHand hand, bool actual)
		{
			return null;
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x81C730", Offset = "0x81C730", VA = "0x81C730")]
		public static bool IsControllerLeftHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x81C7B4", Offset = "0x81C7B4", VA = "0x81C7B4")]
		public static bool IsControllerRightHand(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x81C838", Offset = "0x81C838", VA = "0x81C838")]
		public static bool IsControllerLeftHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x81C8CC", Offset = "0x81C8CC", VA = "0x81C8CC")]
		public static bool IsControllerRightHand(GameObject controller, bool actual)
		{
			return default(bool);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x81C960", Offset = "0x81C960", VA = "0x81C960")]
		public static GameObject GetControllerModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x81C9E4", Offset = "0x81C9E4", VA = "0x81C9E4")]
		public static SDK_BaseController.ControllerHand GetControllerModelHand(GameObject controllerModel)
		{
			return default(SDK_BaseController.ControllerHand);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x81CA68", Offset = "0x81CA68", VA = "0x81CA68")]
		public static GameObject GetControllerModel(SDK_BaseController.ControllerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x81CAEC", Offset = "0x81CAEC", VA = "0x81CAEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553700", Offset = "0x553700")]
		public static GameObject GetControllerRenderModel(GameObject controller)
		{
			return null;
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x81CB84", Offset = "0x81CB84", VA = "0x81CB84")]
		public static GameObject GetControllerRenderModel(VRTK_ControllerReference controllerReference)
		{
			return null;
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x81CC08", Offset = "0x81CC08", VA = "0x81CC08")]
		public static void SetControllerRenderModelWheel(GameObject renderModel, bool state)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x81CC9C", Offset = "0x81CC9C", VA = "0x81CC9C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553738", Offset = "0x553738")]
		public static void HapticPulseOnIndex(uint index, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x81CD44", Offset = "0x81CD44", VA = "0x81CD44")]
		public static void HapticPulse(VRTK_ControllerReference controllerReference, float strength = 0.5f)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x81CDD8", Offset = "0x81CDD8", VA = "0x81CDD8")]
		public static bool HapticPulse(VRTK_ControllerReference controllerReference, AudioClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x81CE6C", Offset = "0x81CE6C", VA = "0x81CE6C")]
		public static SDK_ControllerHapticModifiers GetHapticModifiers()
		{
			return null;
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x81CEE8", Offset = "0x81CEE8", VA = "0x81CEE8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553770", Offset = "0x553770")]
		public static Vector3 GetVelocityOnIndex(uint index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x81CF80", Offset = "0x81CF80", VA = "0x81CF80")]
		public static Vector3 GetControllerVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x81D004", Offset = "0x81D004", VA = "0x81D004")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5537A8", Offset = "0x5537A8")]
		public static Vector3 GetAngularVelocityOnIndex(uint index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x81D09C", Offset = "0x81D09C", VA = "0x81D09C")]
		public static Vector3 GetControllerAngularVelocity(VRTK_ControllerReference controllerReference)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x81D120", Offset = "0x81D120", VA = "0x81D120")]
		public static bool IsTouchpadStatic(bool isTouched, Vector2 currentAxisValues, Vector2 previousAxisValues, int compareFidelity)
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x81D1E4", Offset = "0x81D1E4", VA = "0x81D1E4")]
		public static Vector2 GetControllerAxis(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x81D278", Offset = "0x81D278", VA = "0x81D278")]
		public static float GetControllerHairlineDelta(SDK_BaseController.ButtonTypes buttonType, VRTK_ControllerReference controllerReference)
		{
			return default(float);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x81D30C", Offset = "0x81D30C", VA = "0x81D30C")]
		public static bool GetControllerButtonState(SDK_BaseController.ButtonTypes buttonType, SDK_BaseController.ButtonPressTypes pressType, VRTK_ControllerReference controllerReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x81D3A8", Offset = "0x81D3A8", VA = "0x81D3A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5537E0", Offset = "0x5537E0")]
		public static Vector2 GetTouchpadAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x81D444", Offset = "0x81D444", VA = "0x81D444")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553818", Offset = "0x553818")]
		public static Vector2 GetTriggerAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x81D4E0", Offset = "0x81D4E0", VA = "0x81D4E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553850", Offset = "0x553850")]
		public static Vector2 GetGripAxisOnIndex(uint index)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x81D57C", Offset = "0x81D57C", VA = "0x81D57C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553888", Offset = "0x553888")]
		public static float GetTriggerHairlineDeltaOnIndex(uint index)
		{
			return default(float);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x81D618", Offset = "0x81D618", VA = "0x81D618")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5538C0", Offset = "0x5538C0")]
		public static float GetGripHairlineDeltaOnIndex(uint index)
		{
			return default(float);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x81D6B4", Offset = "0x81D6B4", VA = "0x81D6B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5538F8", Offset = "0x5538F8")]
		public static bool IsTriggerPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x81D754", Offset = "0x81D754", VA = "0x81D754")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553930", Offset = "0x553930")]
		public static bool IsTriggerPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x81D7F4", Offset = "0x81D7F4", VA = "0x81D7F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553968", Offset = "0x553968")]
		public static bool IsTriggerPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x81D894", Offset = "0x81D894", VA = "0x81D894")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5539A0", Offset = "0x5539A0")]
		public static bool IsTriggerTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x81D934", Offset = "0x81D934", VA = "0x81D934")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5539D8", Offset = "0x5539D8")]
		public static bool IsTriggerTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x81D9D4", Offset = "0x81D9D4", VA = "0x81D9D4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553A10", Offset = "0x553A10")]
		public static bool IsTriggerTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x81DA74", Offset = "0x81DA74", VA = "0x81DA74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553A48", Offset = "0x553A48")]
		public static bool IsHairTriggerDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x81DB14", Offset = "0x81DB14", VA = "0x81DB14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553A80", Offset = "0x553A80")]
		public static bool IsHairTriggerUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x81DBB4", Offset = "0x81DBB4", VA = "0x81DBB4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553AB8", Offset = "0x553AB8")]
		public static bool IsGripPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x81DC54", Offset = "0x81DC54", VA = "0x81DC54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553AF0", Offset = "0x553AF0")]
		public static bool IsGripPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x81DCF4", Offset = "0x81DCF4", VA = "0x81DCF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553B28", Offset = "0x553B28")]
		public static bool IsGripPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x81DD94", Offset = "0x81DD94", VA = "0x81DD94")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553B60", Offset = "0x553B60")]
		public static bool IsGripTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x81DE34", Offset = "0x81DE34", VA = "0x81DE34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553B98", Offset = "0x553B98")]
		public static bool IsGripTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x81DED4", Offset = "0x81DED4", VA = "0x81DED4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553BD0", Offset = "0x553BD0")]
		public static bool IsGripTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x81DF74", Offset = "0x81DF74", VA = "0x81DF74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553C08", Offset = "0x553C08")]
		public static bool IsHairGripDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x81E014", Offset = "0x81E014", VA = "0x81E014")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553C40", Offset = "0x553C40")]
		public static bool IsHairGripUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x81E0B4", Offset = "0x81E0B4", VA = "0x81E0B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553C78", Offset = "0x553C78")]
		public static bool IsTouchpadPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x81E154", Offset = "0x81E154", VA = "0x81E154")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553CB0", Offset = "0x553CB0")]
		public static bool IsTouchpadPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x81E1F4", Offset = "0x81E1F4", VA = "0x81E1F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553CE8", Offset = "0x553CE8")]
		public static bool IsTouchpadPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x81E294", Offset = "0x81E294", VA = "0x81E294")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553D20", Offset = "0x553D20")]
		public static bool IsTouchpadTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x81E334", Offset = "0x81E334", VA = "0x81E334")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553D58", Offset = "0x553D58")]
		public static bool IsTouchpadTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x81E3D4", Offset = "0x81E3D4", VA = "0x81E3D4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553D90", Offset = "0x553D90")]
		public static bool IsTouchpadTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x81E474", Offset = "0x81E474", VA = "0x81E474")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553DC8", Offset = "0x553DC8")]
		public static bool IsButtonOnePressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x81E514", Offset = "0x81E514", VA = "0x81E514")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553E00", Offset = "0x553E00")]
		public static bool IsButtonOnePressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x81E5B4", Offset = "0x81E5B4", VA = "0x81E5B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553E38", Offset = "0x553E38")]
		public static bool IsButtonOnePressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x81E654", Offset = "0x81E654", VA = "0x81E654")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553E70", Offset = "0x553E70")]
		public static bool IsButtonOneTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x81E6F4", Offset = "0x81E6F4", VA = "0x81E6F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553EA8", Offset = "0x553EA8")]
		public static bool IsButtonOneTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x81E794", Offset = "0x81E794", VA = "0x81E794")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553EE0", Offset = "0x553EE0")]
		public static bool IsButtonOneTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x81E834", Offset = "0x81E834", VA = "0x81E834")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553F18", Offset = "0x553F18")]
		public static bool IsButtonTwoPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x81E8D4", Offset = "0x81E8D4", VA = "0x81E8D4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553F50", Offset = "0x553F50")]
		public static bool IsButtonTwoPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x81E974", Offset = "0x81E974", VA = "0x81E974")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553F88", Offset = "0x553F88")]
		public static bool IsButtonTwoPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x81EA14", Offset = "0x81EA14", VA = "0x81EA14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553FC0", Offset = "0x553FC0")]
		public static bool IsButtonTwoTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x81EAB4", Offset = "0x81EAB4", VA = "0x81EAB4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x553FF8", Offset = "0x553FF8")]
		public static bool IsButtonTwoTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x81EB54", Offset = "0x81EB54", VA = "0x81EB54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x554030", Offset = "0x554030")]
		public static bool IsButtonTwoTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x81EBF4", Offset = "0x81EBF4", VA = "0x81EBF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x554068", Offset = "0x554068")]
		public static bool IsStartMenuPressedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x81EC94", Offset = "0x81EC94", VA = "0x81EC94")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5540A0", Offset = "0x5540A0")]
		public static bool IsStartMenuPressedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x81ED34", Offset = "0x81ED34", VA = "0x81ED34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5540D8", Offset = "0x5540D8")]
		public static bool IsStartMenuPressedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x81EDD4", Offset = "0x81EDD4", VA = "0x81EDD4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x554110", Offset = "0x554110")]
		public static bool IsStartMenuTouchedOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x81EE74", Offset = "0x81EE74", VA = "0x81EE74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x554148", Offset = "0x554148")]
		public static bool IsStartMenuTouchedDownOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x81EF14", Offset = "0x81EF14", VA = "0x81EF14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x554180", Offset = "0x554180")]
		public static bool IsStartMenuTouchedUpOnIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x81EFB4", Offset = "0x81EFB4", VA = "0x81EFB4")]
		public static void HeadsetProcessUpdate([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x81F240", Offset = "0x81F240", VA = "0x81F240")]
		public static void HeadsetProcessFixedUpdate([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x81F2C0", Offset = "0x81F2C0", VA = "0x81F2C0")]
		public static Transform GetHeadset()
		{
			return null;
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x81F338", Offset = "0x81F338", VA = "0x81F338")]
		public static Transform GetHeadsetCamera()
		{
			return null;
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x81F3B0", Offset = "0x81F3B0", VA = "0x81F3B0")]
		public static Vector3 GetHeadsetVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x81F428", Offset = "0x81F428", VA = "0x81F428")]
		public static Vector3 GetHeadsetAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x81F4A0", Offset = "0x81F4A0", VA = "0x81F4A0")]
		public static void HeadsetFade(Color color, float duration, bool fadeOverlay = false)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x81F564", Offset = "0x81F564", VA = "0x81F564")]
		public static bool HasHeadsetFade(Transform obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x81F5E8", Offset = "0x81F5E8", VA = "0x81F5E8")]
		public static void AddHeadsetFade(Transform camera)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x81F66C", Offset = "0x81F66C", VA = "0x81F66C")]
		public static Transform GetPlayArea()
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x81F8F0", Offset = "0x81F8F0", VA = "0x81F8F0")]
		public static Vector3[] GetPlayAreaVertices()
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x81F968", Offset = "0x81F968", VA = "0x81F968")]
		public static float GetPlayAreaBorderThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x81F9E0", Offset = "0x81F9E0", VA = "0x81F9E0")]
		public static bool IsPlayAreaSizeCalibrated()
		{
			return default(bool);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x81FA58", Offset = "0x81FA58", VA = "0x81FA58")]
		public static bool GetDrawAtRuntime()
		{
			return default(bool);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x81FAD0", Offset = "0x81FAD0", VA = "0x81FAD0")]
		public static void SetDrawAtRuntime(bool value)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x81FB54", Offset = "0x81FB54", VA = "0x81FB54")]
		public static bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x81FDD0", Offset = "0x81FDD0", VA = "0x81FDD0")]
		public static bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x81FE48", Offset = "0x81FE48", VA = "0x81FE48")]
		public static void ForceInterleavedReprojectionOn(bool force)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x81FBCC", Offset = "0x81FBCC", VA = "0x81FBCC")]
		public static SDK_BaseSystem GetSystemSDK()
		{
			return null;
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x81F034", Offset = "0x81F034", VA = "0x81F034")]
		public static SDK_BaseHeadset GetHeadsetSDK()
		{
			return null;
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x81BBAC", Offset = "0x81BBAC", VA = "0x81BBAC")]
		public static SDK_BaseController GetControllerSDK()
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x81F6E4", Offset = "0x81F6E4", VA = "0x81F6E4")]
		public static SDK_BaseBoundaries GetBoundariesSDK()
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x815C64", Offset = "0x815C64", VA = "0x815C64")]
		public static void InvalidateCaches()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538504", Offset = "0x538504")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538504", Offset = "0x538504")]
	public class SDK_XimmerseBoundaries : SDK_FallbackBoundaries
	{
		[Token(Token = "0x6001465")]
		[Address(RVA = "0xBA023C", Offset = "0xBA023C", VA = "0xBA023C")]
		public SDK_XimmerseBoundaries()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538598", Offset = "0x538598")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x538598", Offset = "0x538598")]
	public class SDK_XimmerseController : SDK_FallbackController
	{
		[Token(Token = "0x6001466")]
		[Address(RVA = "0xBA0244", Offset = "0xBA0244", VA = "0xBA0244")]
		public SDK_XimmerseController()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public static class SDK_XimmerseDefines
	{
		[Token(Token = "0x4000D59")]
		public const string ScriptingDefineSymbol = "VRTK_DEFINE_SDK_XIMMERSE";

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xBA024C", Offset = "0xBA024C", VA = "0xBA024C")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5541B8", Offset = "0x5541B8")]
		[AttributeAttribute(Name = "SDK_ScriptingDefineSymbolPredicateAttribute", RVA = "0x5541B8", Offset = "0x5541B8")]
		private static bool IsXimmerseAvailable()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x53862C", Offset = "0x53862C")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x53862C", Offset = "0x53862C")]
	public class SDK_XimmerseHeadset : SDK_FallbackHeadset
	{
		[Token(Token = "0x6001468")]
		[Address(RVA = "0xBA02D0", Offset = "0xBA02D0", VA = "0xBA02D0")]
		public SDK_XimmerseHeadset()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x5386C0", Offset = "0x5386C0")]
	[AttributeAttribute(Name = "SDK_DescriptionAttribute", RVA = "0x5386C0", Offset = "0x5386C0")]
	public class SDK_XimmerseSystem : SDK_FallbackSystem
	{
		[Token(Token = "0x6001469")]
		[Address(RVA = "0xBA02D8", Offset = "0xBA02D8", VA = "0xBA02D8")]
		public SDK_XimmerseSystem()
		{
		}
	}
}
namespace VRTK.WindowsMixedReality.Utilities
{
	[Token(Token = "0x20001B6")]
	public static class InteractionSourceExtensions
	{
		[Token(Token = "0x4000D5A")]
		private const ushort ContinuousBuzzWaveform = 4100;
	}
	[Token(Token = "0x20001B7")]
	public static class WindowsApiChecker
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5477B8", Offset = "0x5477B8")]
		private static bool <UniversalApiContractV5_IsAvailable>k__BackingField;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5477C8", Offset = "0x5477C8")]
		private static bool <UniversalApiContractV4_IsAvailable>k__BackingField;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5477D8", Offset = "0x5477D8")]
		private static bool <UniversalApiContractV3_IsAvailable>k__BackingField;

		[Token(Token = "0x170000AF")]
		public static bool UniversalApiContractV5_IsAvailable
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0xC07928", Offset = "0xC07928", VA = "0xC07928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554248", Offset = "0x554248")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600146C")]
			[Address(RVA = "0xC077D8", Offset = "0xC077D8", VA = "0xC077D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554258", Offset = "0x554258")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public static bool UniversalApiContractV4_IsAvailable
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0xC07990", Offset = "0xC07990", VA = "0xC07990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554268", Offset = "0x554268")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600146E")]
			[Address(RVA = "0xC07848", Offset = "0xC07848", VA = "0xC07848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554278", Offset = "0x554278")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public static bool UniversalApiContractV3_IsAvailable
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0xC079F8", Offset = "0xC079F8", VA = "0xC079F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554288", Offset = "0x554288")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xC078B8", Offset = "0xC078B8", VA = "0xC078B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554298", Offset = "0x554298")]
			private set
			{
			}
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xC077B4", Offset = "0xC077B4", VA = "0xC077B4")]
		static WindowsApiChecker()
		{
		}
	}
}
namespace VRTK.UnityEventHelper
{
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5387B0", Offset = "0x5387B0")]
	public sealed class VRTK_BasicTeleport_UnityEvents : VRTK_UnityEvents<VRTK_BasicTeleport>
	{
		[Serializable]
		[Token(Token = "0x20004AA")]
		public sealed class TeleportEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0x722864", Offset = "0x722864", VA = "0x722864")]
			public TeleportEvent()
			{
			}
		}

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportEvent OnTeleporting;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TeleportEvent OnTeleported;

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x7224DC", Offset = "0x7224DC", VA = "0x7224DC", Slot = "4")]
		protected override void AddListeners(VRTK_BasicTeleport component)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x7225AC", Offset = "0x7225AC", VA = "0x7225AC", Slot = "5")]
		protected override void RemoveListeners(VRTK_BasicTeleport component)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x72267C", Offset = "0x72267C", VA = "0x72267C")]
		private void Teleporting(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x72272C", Offset = "0x72272C", VA = "0x72272C")]
		private void Teleported(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x7227DC", Offset = "0x7227DC", VA = "0x7227DC")]
		public VRTK_BasicTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5387E8", Offset = "0x5387E8")]
	public sealed class VRTK_BodyPhysics_UnityEvents : VRTK_UnityEvents<VRTK_BodyPhysics>
	{
		[Serializable]
		[Token(Token = "0x20004AB")]
		public sealed class BodyPhysicsEvent : UnityEvent<object, BodyPhysicsEventArgs>
		{
			[Token(Token = "0x6002688")]
			[Address(RVA = "0x7234CC", Offset = "0x7234CC", VA = "0x7234CC")]
			public BodyPhysicsEvent()
			{
			}
		}

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BodyPhysicsEvent OnStartFalling;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BodyPhysicsEvent OnStopFalling;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BodyPhysicsEvent OnStartMoving;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BodyPhysicsEvent OnStopMoving;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BodyPhysicsEvent OnStartColliding;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BodyPhysicsEvent OnStopColliding;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BodyPhysicsEvent OnStartLeaning;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BodyPhysicsEvent OnStopLeaning;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BodyPhysicsEvent OnStartTouchingGround;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BodyPhysicsEvent OnStopTouchingGround;

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x7228B4", Offset = "0x7228B4", VA = "0x7228B4", Slot = "4")]
		protected override void AddListeners(VRTK_BodyPhysics component)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x722B84", Offset = "0x722B84", VA = "0x722B84", Slot = "5")]
		protected override void RemoveListeners(VRTK_BodyPhysics component)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x722E54", Offset = "0x722E54", VA = "0x722E54")]
		private void StartFalling(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x722EDC", Offset = "0x722EDC", VA = "0x722EDC")]
		private void StopFalling(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x722F64", Offset = "0x722F64", VA = "0x722F64")]
		private void StartMoving(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x722FEC", Offset = "0x722FEC", VA = "0x722FEC")]
		private void StopMoving(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x723074", Offset = "0x723074", VA = "0x723074")]
		private void StartColliding(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x7230FC", Offset = "0x7230FC", VA = "0x7230FC")]
		private void StopColliding(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x723184", Offset = "0x723184", VA = "0x723184")]
		private void StartLeaning(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x72320C", Offset = "0x72320C", VA = "0x72320C")]
		private void StopLeaning(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x723294", Offset = "0x723294", VA = "0x723294")]
		private void StartTouchingGround(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x72331C", Offset = "0x72331C", VA = "0x72331C")]
		private void StopTouchingGround(object o, BodyPhysicsEventArgs e)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x7233A4", Offset = "0x7233A4", VA = "0x7233A4")]
		public VRTK_BodyPhysics_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538820", Offset = "0x538820")]
	public sealed class VRTK_Button_UnityEvents : VRTK_UnityEvents<VRTK_Button>
	{
		[Serializable]
		[Token(Token = "0x20004AC")]
		public sealed class Button3DEvent : UnityEvent<object, Control3DEventArgs>
		{
			[Token(Token = "0x6002689")]
			[Address(RVA = "0x723854", Offset = "0x723854", VA = "0x723854")]
			public Button3DEvent()
			{
			}
		}

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button3DEvent OnPushed;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button3DEvent OnReleased;

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x72351C", Offset = "0x72351C", VA = "0x72351C", Slot = "4")]
		protected override void AddListeners(VRTK_Button component)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x7235EC", Offset = "0x7235EC", VA = "0x7235EC", Slot = "5")]
		protected override void RemoveListeners(VRTK_Button component)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x7236BC", Offset = "0x7236BC", VA = "0x7236BC")]
		private void Pushed(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x723744", Offset = "0x723744", VA = "0x723744")]
		public void Released(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x7237CC", Offset = "0x7237CC", VA = "0x7237CC")]
		public VRTK_Button_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538858", Offset = "0x538858")]
	public sealed class VRTK_Control_UnityEvents : VRTK_UnityEvents<VRTK_Control>
	{
		[Serializable]
		[Token(Token = "0x20004AD")]
		public sealed class Control3DEvent : UnityEvent<object, Control3DEventArgs>
		{
			[Token(Token = "0x600268A")]
			[Address(RVA = "0x723AB8", Offset = "0x723AB8", VA = "0x723AB8")]
			public Control3DEvent()
			{
			}
		}

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Control3DEvent OnValueChanged;

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x7238A4", Offset = "0x7238A4", VA = "0x7238A4", Slot = "4")]
		protected override void AddListeners(VRTK_Control component)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x723934", Offset = "0x723934", VA = "0x723934", Slot = "5")]
		protected override void RemoveListeners(VRTK_Control component)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x7239C4", Offset = "0x7239C4", VA = "0x7239C4")]
		private void ValueChanged(object o, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x723A4C", Offset = "0x723A4C", VA = "0x723A4C")]
		public VRTK_Control_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538890", Offset = "0x538890")]
	public sealed class VRTK_ControllerEvents_UnityEvents : VRTK_UnityEvents<VRTK_ControllerEvents>
	{
		[Serializable]
		[Token(Token = "0x20004AE")]
		public sealed class ControllerInteractionEvent : UnityEvent<object, ControllerInteractionEventArgs>
		{
			[Token(Token = "0x600268B")]
			[Address(RVA = "0x727FB8", Offset = "0x727FB8", VA = "0x727FB8")]
			public ControllerInteractionEvent()
			{
			}
		}

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerInteractionEvent OnTriggerPressed;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerInteractionEvent OnTriggerReleased;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ControllerInteractionEvent OnTriggerTouchStart;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ControllerInteractionEvent OnTriggerTouchEnd;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ControllerInteractionEvent OnTriggerHairlineStart;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ControllerInteractionEvent OnTriggerHairlineEnd;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ControllerInteractionEvent OnTriggerClicked;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerInteractionEvent OnTriggerUnclicked;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ControllerInteractionEvent OnTriggerAxisChanged;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ControllerInteractionEvent OnGripPressed;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ControllerInteractionEvent OnGripReleased;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ControllerInteractionEvent OnGripTouchStart;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ControllerInteractionEvent OnGripTouchEnd;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ControllerInteractionEvent OnGripHairlineStart;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ControllerInteractionEvent OnGripHairlineEnd;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ControllerInteractionEvent OnGripClicked;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ControllerInteractionEvent OnGripUnclicked;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerInteractionEvent OnGripAxisChanged;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ControllerInteractionEvent OnTouchpadPressed;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ControllerInteractionEvent OnTouchpadReleased;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ControllerInteractionEvent OnTouchpadTouchStart;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ControllerInteractionEvent OnTouchpadTouchEnd;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public ControllerInteractionEvent OnTouchpadAxisChanged;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ControllerInteractionEvent OnButtonOnePressed;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public ControllerInteractionEvent OnButtonOneReleased;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public ControllerInteractionEvent OnButtonOneTouchStart;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public ControllerInteractionEvent OnButtonOneTouchEnd;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public ControllerInteractionEvent OnButtonTwoPressed;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public ControllerInteractionEvent OnButtonTwoReleased;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public ControllerInteractionEvent OnButtonTwoTouchStart;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ControllerInteractionEvent OnButtonTwoTouchEnd;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ControllerInteractionEvent OnButtonThreePressed;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public ControllerInteractionEvent OnButtonThreeReleased;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public ControllerInteractionEvent OnButtonThreeTouchStart;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ControllerInteractionEvent OnButtonThreeTouchEnd;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public ControllerInteractionEvent OnButtonFourPressed;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ControllerInteractionEvent OnButtonFourReleased;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ControllerInteractionEvent OnButtonFourTouchStart;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public ControllerInteractionEvent OnButtonFourTouchEnd;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public ControllerInteractionEvent OnStartMenuPressed;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public ControllerInteractionEvent OnStartMenuReleased;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public ControllerInteractionEvent OnAliasPointerOn;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ControllerInteractionEvent OnAliasPointerOff;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public ControllerInteractionEvent OnAliasPointerSet;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public ControllerInteractionEvent OnAliasGrabOn;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public ControllerInteractionEvent OnAliasGrabOff;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public ControllerInteractionEvent OnAliasUseOn;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ControllerInteractionEvent OnAliasUseOff;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ControllerInteractionEvent OnAliasUIClickOn;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public ControllerInteractionEvent OnAliasUIClickOff;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public ControllerInteractionEvent OnAliasMenuOn;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public ControllerInteractionEvent OnAliasMenuOff;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public ControllerInteractionEvent OnControllerEnabled;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public ControllerInteractionEvent OnControllerDisabled;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public ControllerInteractionEvent OnControllerIndexChanged;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public ControllerInteractionEvent OnControllerVisible;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public ControllerInteractionEvent OnControllerHidden;

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x723B08", Offset = "0x723B08", VA = "0x723B08", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerEvents component)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x724998", Offset = "0x724998", VA = "0x724998", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerEvents component)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x725828", Offset = "0x725828", VA = "0x725828")]
		private void TriggerPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x7258C4", Offset = "0x7258C4", VA = "0x7258C4")]
		private void TriggerReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x725960", Offset = "0x725960", VA = "0x725960")]
		private void TriggerTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x7259FC", Offset = "0x7259FC", VA = "0x7259FC")]
		private void TriggerTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x725A98", Offset = "0x725A98", VA = "0x725A98")]
		private void TriggerHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x725B34", Offset = "0x725B34", VA = "0x725B34")]
		private void TriggerHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x725BD0", Offset = "0x725BD0", VA = "0x725BD0")]
		private void TriggerClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x725C6C", Offset = "0x725C6C", VA = "0x725C6C")]
		private void TriggerUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x725D08", Offset = "0x725D08", VA = "0x725D08")]
		private void TriggerAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x725DA4", Offset = "0x725DA4", VA = "0x725DA4")]
		private void GripPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x725E40", Offset = "0x725E40", VA = "0x725E40")]
		private void GripReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x725EDC", Offset = "0x725EDC", VA = "0x725EDC")]
		private void GripTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x725F78", Offset = "0x725F78", VA = "0x725F78")]
		private void GripTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x726014", Offset = "0x726014", VA = "0x726014")]
		private void GripHairlineStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x7260B0", Offset = "0x7260B0", VA = "0x7260B0")]
		private void GripHairlineEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x72614C", Offset = "0x72614C", VA = "0x72614C")]
		private void GripClicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x7261E8", Offset = "0x7261E8", VA = "0x7261E8")]
		private void GripUnclicked(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x726284", Offset = "0x726284", VA = "0x726284")]
		private void GripAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x726320", Offset = "0x726320", VA = "0x726320")]
		private void TouchpadPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x7263BC", Offset = "0x7263BC", VA = "0x7263BC")]
		private void TouchpadReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x726458", Offset = "0x726458", VA = "0x726458")]
		private void TouchpadTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x7264F4", Offset = "0x7264F4", VA = "0x7264F4")]
		private void TouchpadTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x726590", Offset = "0x726590", VA = "0x726590")]
		private void TouchpadAxisChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x72662C", Offset = "0x72662C", VA = "0x72662C")]
		private void ButtonOnePressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x7266C8", Offset = "0x7266C8", VA = "0x7266C8")]
		private void ButtonOneReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x726764", Offset = "0x726764", VA = "0x726764")]
		private void ButtonOneTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x726800", Offset = "0x726800", VA = "0x726800")]
		private void ButtonOneTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x72689C", Offset = "0x72689C", VA = "0x72689C")]
		private void ButtonTwoPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x726938", Offset = "0x726938", VA = "0x726938")]
		private void ButtonTwoReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x7269D4", Offset = "0x7269D4", VA = "0x7269D4")]
		private void ButtonTwoTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x726A70", Offset = "0x726A70", VA = "0x726A70")]
		private void ButtonTwoTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x726B0C", Offset = "0x726B0C", VA = "0x726B0C")]
		private void ButtonThreePressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x726BA8", Offset = "0x726BA8", VA = "0x726BA8")]
		private void ButtonThreeReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x726C44", Offset = "0x726C44", VA = "0x726C44")]
		private void ButtonThreeTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x726CE0", Offset = "0x726CE0", VA = "0x726CE0")]
		private void ButtonThreeTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x726D7C", Offset = "0x726D7C", VA = "0x726D7C")]
		private void ButtonFourPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x726E18", Offset = "0x726E18", VA = "0x726E18")]
		private void ButtonFourReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x726EB4", Offset = "0x726EB4", VA = "0x726EB4")]
		private void ButtonFourTouchStart(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x726F50", Offset = "0x726F50", VA = "0x726F50")]
		private void ButtonFourTouchEnd(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x726FEC", Offset = "0x726FEC", VA = "0x726FEC")]
		private void StartMenuPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x727088", Offset = "0x727088", VA = "0x727088")]
		private void StartMenuReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x727124", Offset = "0x727124", VA = "0x727124")]
		private void AliasPointerOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x7271C0", Offset = "0x7271C0", VA = "0x7271C0")]
		private void AliasPointerOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x72725C", Offset = "0x72725C", VA = "0x72725C")]
		private void AliasPointerSet(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x7272F8", Offset = "0x7272F8", VA = "0x7272F8")]
		private void AliasGrabOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x727394", Offset = "0x727394", VA = "0x727394")]
		private void AliasGrabOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x727430", Offset = "0x727430", VA = "0x727430")]
		private void AliasUseOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x7274CC", Offset = "0x7274CC", VA = "0x7274CC")]
		private void AliasUseOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x727568", Offset = "0x727568", VA = "0x727568")]
		private void AliasUIClickOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x727604", Offset = "0x727604", VA = "0x727604")]
		private void AliasUIClickOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x7276A0", Offset = "0x7276A0", VA = "0x7276A0")]
		private void AliasMenuOn(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x72773C", Offset = "0x72773C", VA = "0x72773C")]
		private void AliasMenuOff(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x7277D8", Offset = "0x7277D8", VA = "0x7277D8")]
		private void ControllerEnabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x727874", Offset = "0x727874", VA = "0x727874")]
		private void ControllerDisabled(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x727910", Offset = "0x727910", VA = "0x727910")]
		private void ControllerIndexChanged(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x7279AC", Offset = "0x7279AC", VA = "0x7279AC")]
		private void ControllerVisible(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x727A48", Offset = "0x727A48", VA = "0x727A48")]
		private void ControllerHidden(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x727AE4", Offset = "0x727AE4", VA = "0x727AE4")]
		public VRTK_ControllerEvents_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5388C8", Offset = "0x5388C8")]
	public sealed class VRTK_ControllerRigidbodyActivator_UnityEvents : VRTK_UnityEvents<VRTK_ControllerRigidbodyActivator>
	{
		[Serializable]
		[Token(Token = "0x20004AF")]
		public sealed class ControllerRigidbodyActivatorEvent : UnityEvent<object, ControllerRigidbodyActivatorEventArgs>
		{
			[Token(Token = "0x600268C")]
			[Address(RVA = "0x728320", Offset = "0x728320", VA = "0x728320")]
			public ControllerRigidbodyActivatorEvent()
			{
			}
		}

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerRigidbodyActivatorEvent OnControllerRigidbodyOn;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerRigidbodyActivatorEvent OnControllerRigidbodyOff;

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x728008", Offset = "0x728008", VA = "0x728008", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerRigidbodyActivator component)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x7280D8", Offset = "0x7280D8", VA = "0x7280D8", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerRigidbodyActivator component)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x7281A8", Offset = "0x7281A8", VA = "0x7281A8")]
		private void ControllerRigidbodyOn(object o, ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x728220", Offset = "0x728220", VA = "0x728220")]
		private void ControllerRigidbodyOff(object o, ControllerRigidbodyActivatorEventArgs e)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x728298", Offset = "0x728298", VA = "0x728298")]
		public VRTK_ControllerRigidbodyActivator_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538900", Offset = "0x538900")]
	public sealed class VRTK_ControllerTooltips_UnityEvents : VRTK_UnityEvents<VRTK_ControllerTooltips>
	{
		[Serializable]
		[Token(Token = "0x20004B0")]
		public sealed class ControllerTooltipsEvent : UnityEvent<object, ControllerTooltipsEventArgs>
		{
			[Token(Token = "0x600268D")]
			[Address(RVA = "0x728688", Offset = "0x728688", VA = "0x728688")]
			public ControllerTooltipsEvent()
			{
			}
		}

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerTooltipsEvent OnControllerTooltipOn;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerTooltipsEvent OnControllerTooltipOff;

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x728370", Offset = "0x728370", VA = "0x728370", Slot = "4")]
		protected override void AddListeners(VRTK_ControllerTooltips component)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x728440", Offset = "0x728440", VA = "0x728440", Slot = "5")]
		protected override void RemoveListeners(VRTK_ControllerTooltips component)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x728510", Offset = "0x728510", VA = "0x728510")]
		private void ControllerTooltipOn(object o, ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x728588", Offset = "0x728588", VA = "0x728588")]
		private void ControllerTooltipOff(object o, ControllerTooltipsEventArgs e)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x728600", Offset = "0x728600", VA = "0x728600")]
		public VRTK_ControllerTooltips_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538938", Offset = "0x538938")]
	public sealed class VRTK_DashTeleport_UnityEvents : VRTK_UnityEvents<VRTK_DashTeleport>
	{
		[Serializable]
		[Token(Token = "0x20004B1")]
		public sealed class DashTeleportEvent : UnityEvent<object, DashTeleportEventArgs>
		{
			[Token(Token = "0x600268E")]
			[Address(RVA = "0x7289F0", Offset = "0x7289F0", VA = "0x7289F0")]
			public DashTeleportEvent()
			{
			}
		}

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DashTeleportEvent OnWillDashThruObjects;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DashTeleportEvent OnDashedThruObjects;

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x7286D8", Offset = "0x7286D8", VA = "0x7286D8", Slot = "4")]
		protected override void AddListeners(VRTK_DashTeleport component)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x7287A8", Offset = "0x7287A8", VA = "0x7287A8", Slot = "5")]
		protected override void RemoveListeners(VRTK_DashTeleport component)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x728878", Offset = "0x728878", VA = "0x728878")]
		private void WillDashThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x7288F0", Offset = "0x7288F0", VA = "0x7288F0")]
		private void DashedThruObjects(object o, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x728968", Offset = "0x728968", VA = "0x728968")]
		public VRTK_DashTeleport_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538970", Offset = "0x538970")]
	public sealed class VRTK_DestinationMarker_UnityEvents : VRTK_UnityEvents<VRTK_DestinationMarker>
	{
		[Serializable]
		[Token(Token = "0x20004B2")]
		public sealed class DestinationMarkerEvent : UnityEvent<object, DestinationMarkerEventArgs>
		{
			[Token(Token = "0x600268F")]
			[Address(RVA = "0x729050", Offset = "0x729050", VA = "0x729050")]
			public DestinationMarkerEvent()
			{
			}
		}

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestinationMarkerEvent OnDestinationMarkerEnter;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DestinationMarkerEvent OnDestinationMarkerExit;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestinationMarkerEvent OnDestinationMarkerHover;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestinationMarkerEvent OnDestinationMarkerSet;

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x728A40", Offset = "0x728A40", VA = "0x728A40", Slot = "4")]
		protected override void AddListeners(VRTK_DestinationMarker component)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x728B90", Offset = "0x728B90", VA = "0x728B90", Slot = "5")]
		protected override void RemoveListeners(VRTK_DestinationMarker component)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x728CE0", Offset = "0x728CE0", VA = "0x728CE0")]
		private void DestinationMarkerEnter(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x728D90", Offset = "0x728D90", VA = "0x728D90")]
		private void DestinationMarkerExit(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x728E40", Offset = "0x728E40", VA = "0x728E40")]
		private void DestinationMarkerHover(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x728EF0", Offset = "0x728EF0", VA = "0x728EF0")]
		private void DestinationMarkerSet(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x728FA0", Offset = "0x728FA0", VA = "0x728FA0")]
		public VRTK_DestinationMarker_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5389A8", Offset = "0x5389A8")]
	public sealed class VRTK_DestinationPoint_UnityEvents : VRTK_UnityEvents<VRTK_DestinationPoint>
	{
		[Serializable]
		[Token(Token = "0x20004B3")]
		public sealed class DestinationPointEvent : UnityEvent<object>
		{
			[Token(Token = "0x6002690")]
			[Address(RVA = "0x7296B4", Offset = "0x7296B4", VA = "0x7296B4")]
			public DestinationPointEvent()
			{
			}
		}

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DestinationPointEvent OnDestinationPointEnabled;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DestinationPointEvent OnDestinationPointDisabled;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DestinationPointEvent OnDestinationPointLocked;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DestinationPointEvent OnDestinationPointUnlocked;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DestinationPointEvent OnDestinationPointReset;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x7290A0", Offset = "0x7290A0", VA = "0x7290A0", Slot = "4")]
		protected override void AddListeners(VRTK_DestinationPoint component)
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x729230", Offset = "0x729230", VA = "0x729230", Slot = "5")]
		protected override void RemoveListeners(VRTK_DestinationPoint component)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x7293C0", Offset = "0x7293C0", VA = "0x7293C0")]
		private void DestinationPointEnabled(object o)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x729430", Offset = "0x729430", VA = "0x729430")]
		private void DestinationPointDisabled(object o)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x7294A0", Offset = "0x7294A0", VA = "0x7294A0")]
		private void DestinationPointLocked(object o)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x729510", Offset = "0x729510", VA = "0x729510")]
		private void DestinationPointUnlocked(object o)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x729580", Offset = "0x729580", VA = "0x729580")]
		private void DestinationPointReset(object o)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x7295F0", Offset = "0x7295F0", VA = "0x7295F0")]
		public VRTK_DestinationPoint_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5389E0", Offset = "0x5389E0")]
	public sealed class VRTK_HeadsetCollision_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetCollision>
	{
		[Serializable]
		[Token(Token = "0x20004B4")]
		public sealed class HeadsetCollisionEvent : UnityEvent<object, HeadsetCollisionEventArgs>
		{
			[Token(Token = "0x6002691")]
			[Address(RVA = "0x729A3C", Offset = "0x729A3C", VA = "0x729A3C")]
			public HeadsetCollisionEvent()
			{
			}
		}

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetCollisionEvent OnHeadsetCollisionDetect;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetCollisionEvent OnHeadsetCollisionEnded;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x729704", Offset = "0x729704", VA = "0x729704", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetCollision component)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x7297D4", Offset = "0x7297D4", VA = "0x7297D4", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetCollision component)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x7298A4", Offset = "0x7298A4", VA = "0x7298A4")]
		private void HeadsetCollisionDetect(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x72992C", Offset = "0x72992C", VA = "0x72992C")]
		private void HeadsetCollisionEnded(object o, HeadsetCollisionEventArgs e)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x7299B4", Offset = "0x7299B4", VA = "0x7299B4")]
		public VRTK_HeadsetCollision_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538A18", Offset = "0x538A18")]
	public sealed class VRTK_HeadsetControllerAware_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetControllerAware>
	{
		[Serializable]
		[Token(Token = "0x20004B5")]
		public sealed class HeadsetControllerAwareEvent : UnityEvent<object, HeadsetControllerAwareEventArgs>
		{
			[Token(Token = "0x6002692")]
			[Address(RVA = "0x72A0CC", Offset = "0x72A0CC", VA = "0x72A0CC")]
			public HeadsetControllerAwareEvent()
			{
			}
		}

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetControllerAwareEvent OnControllerObscured;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetControllerAwareEvent OnControllerUnobscured;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HeadsetControllerAwareEvent OnControllerGlanceEnter;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HeadsetControllerAwareEvent OnControllerGlanceExit;

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x729A8C", Offset = "0x729A8C", VA = "0x729A8C", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetControllerAware component)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x729BDC", Offset = "0x729BDC", VA = "0x729BDC", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetControllerAware component)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x729D2C", Offset = "0x729D2C", VA = "0x729D2C")]
		private void ControllerObscured(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x729DE8", Offset = "0x729DE8", VA = "0x729DE8")]
		private void ControllerUnobscured(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x729EA4", Offset = "0x729EA4", VA = "0x729EA4")]
		private void ControllerGlanceEnter(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x729F60", Offset = "0x729F60", VA = "0x729F60")]
		private void ControllerGlanceExit(object o, HeadsetControllerAwareEventArgs e)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x72A01C", Offset = "0x72A01C", VA = "0x72A01C")]
		public VRTK_HeadsetControllerAware_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538A50", Offset = "0x538A50")]
	public sealed class VRTK_HeadsetFade_UnityEvents : VRTK_UnityEvents<VRTK_HeadsetFade>
	{
		[Serializable]
		[Token(Token = "0x20004B6")]
		public sealed class HeadsetFadeEvent : UnityEvent<object, HeadsetFadeEventArgs>
		{
			[Token(Token = "0x6002693")]
			[Address(RVA = "0x72A68C", Offset = "0x72A68C", VA = "0x72A68C")]
			public HeadsetFadeEvent()
			{
			}
		}

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadsetFadeEvent OnHeadsetFadeStart;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HeadsetFadeEvent OnHeadsetFadeComplete;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HeadsetFadeEvent OnHeadsetUnfadeStart;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public HeadsetFadeEvent OnHeadsetUnfadeComplete;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x72A11C", Offset = "0x72A11C", VA = "0x72A11C", Slot = "4")]
		protected override void AddListeners(VRTK_HeadsetFade component)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x72A26C", Offset = "0x72A26C", VA = "0x72A26C", Slot = "5")]
		protected override void RemoveListeners(VRTK_HeadsetFade component)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x72A3BC", Offset = "0x72A3BC", VA = "0x72A3BC")]
		private void HeadsetFadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x72A444", Offset = "0x72A444", VA = "0x72A444")]
		private void HeadsetFadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x72A4CC", Offset = "0x72A4CC", VA = "0x72A4CC")]
		private void HeadsetUnfadeStart(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x72A554", Offset = "0x72A554", VA = "0x72A554")]
		private void HeadsetUnfadeComplete(object o, HeadsetFadeEventArgs e)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x72A5DC", Offset = "0x72A5DC", VA = "0x72A5DC")]
		public VRTK_HeadsetFade_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538A88", Offset = "0x538A88")]
	public sealed class VRTK_InteractableObject_UnityEvents : VRTK_UnityEvents<VRTK_InteractableObject>
	{
		[Serializable]
		[Token(Token = "0x20004B7")]
		public sealed class InteractableObjectEvent : UnityEvent<object, InteractableObjectEventArgs>
		{
			[Token(Token = "0x6002694")]
			[Address(RVA = "0x72DAE8", Offset = "0x72DAE8", VA = "0x72DAE8")]
			public InteractableObjectEvent()
			{
			}
		}

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableObjectEvent OnTouch;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractableObjectEvent OnUntouch;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractableObjectEvent OnGrab;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractableObjectEvent OnUngrab;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractableObjectEvent OnUse;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableObjectEvent OnUnuse;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractableObjectEvent OnEnterSnapDropZone;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InteractableObjectEvent OnExitSnapDropZone;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractableObjectEvent OnSnapToDropZone;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractableObjectEvent OnUnsnapFromDropZone;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x72CF70", Offset = "0x72CF70", VA = "0x72CF70", Slot = "4")]
		protected override void AddListeners(VRTK_InteractableObject component)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x72D240", Offset = "0x72D240", VA = "0x72D240", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractableObject component)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x72D510", Offset = "0x72D510", VA = "0x72D510")]
		private void Touch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x72D588", Offset = "0x72D588", VA = "0x72D588")]
		private void UnTouch(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x72D600", Offset = "0x72D600", VA = "0x72D600")]
		private void Grab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x72D678", Offset = "0x72D678", VA = "0x72D678")]
		private void UnGrab(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x72D6F0", Offset = "0x72D6F0", VA = "0x72D6F0")]
		private void Use(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x72D768", Offset = "0x72D768", VA = "0x72D768")]
		private void Unuse(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x72D7E0", Offset = "0x72D7E0", VA = "0x72D7E0")]
		private void EnterSnapDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x72D858", Offset = "0x72D858", VA = "0x72D858")]
		private void ExitSnapDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x72D8D0", Offset = "0x72D8D0", VA = "0x72D8D0")]
		private void SnapToDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x72D948", Offset = "0x72D948", VA = "0x72D948")]
		private void UnsnapFromDropZone(object o, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x72D9C0", Offset = "0x72D9C0", VA = "0x72D9C0")]
		public VRTK_InteractableObject_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538AC0", Offset = "0x538AC0")]
	public sealed class VRTK_InteractControllerAppearance_UnityEvents : VRTK_UnityEvents<VRTK_InteractControllerAppearance>
	{
		[Serializable]
		[Token(Token = "0x20004B8")]
		public sealed class InteractControllerAppearanceEvent : UnityEvent<object, InteractControllerAppearanceEventArgs>
		{
			[Token(Token = "0x6002695")]
			[Address(RVA = "0x72B0BC", Offset = "0x72B0BC", VA = "0x72B0BC")]
			public InteractControllerAppearanceEvent()
			{
			}
		}

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractControllerAppearanceEvent OnControllerHidden;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractControllerAppearanceEvent OnControllerVisible;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractControllerAppearanceEvent OnHiddenOnTouch;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractControllerAppearanceEvent OnVisibleOnTouch;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractControllerAppearanceEvent OnHiddenOnGrab;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractControllerAppearanceEvent OnVisibleOnGrab;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractControllerAppearanceEvent OnHiddenOnUse;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InteractControllerAppearanceEvent OnVisibleOnUse;

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x72A6DC", Offset = "0x72A6DC", VA = "0x72A6DC", Slot = "4")]
		protected override void AddListeners(VRTK_InteractControllerAppearance component)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x72A92C", Offset = "0x72A92C", VA = "0x72A92C", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractControllerAppearance component)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x72AB7C", Offset = "0x72AB7C", VA = "0x72AB7C")]
		private void ControllerHidden(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x72AC04", Offset = "0x72AC04", VA = "0x72AC04")]
		private void ControllerVisible(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x72AC8C", Offset = "0x72AC8C", VA = "0x72AC8C")]
		private void HiddenOnTouch(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x72AD14", Offset = "0x72AD14", VA = "0x72AD14")]
		private void VisibleOnTouch(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x72AD9C", Offset = "0x72AD9C", VA = "0x72AD9C")]
		private void HiddenOnGrab(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x72AE24", Offset = "0x72AE24", VA = "0x72AE24")]
		private void VisibleOnGrab(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x72AEAC", Offset = "0x72AEAC", VA = "0x72AEAC")]
		private void HiddenOnUse(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x72AF34", Offset = "0x72AF34", VA = "0x72AF34")]
		private void VisibleOnUse(object o, InteractControllerAppearanceEventArgs e)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x72AFBC", Offset = "0x72AFBC", VA = "0x72AFBC")]
		public VRTK_InteractControllerAppearance_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538AF8", Offset = "0x538AF8")]
	public sealed class VRTK_InteractGrab_UnityEvents : VRTK_UnityEvents<VRTK_InteractGrab>
	{
		[Serializable]
		[Token(Token = "0x20004B9")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6002696")]
			[Address(RVA = "0x72B964", Offset = "0x72B964", VA = "0x72B964")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartGrabInteractableObject;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerGrabInteractableObject;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUngrabInteractableObject;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUngrabInteractableObject;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnGrabButtonPressed;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnGrabButtonReleased;

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x72B10C", Offset = "0x72B10C", VA = "0x72B10C", Slot = "4")]
		protected override void AddListeners(VRTK_InteractGrab component)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x72B2E4", Offset = "0x72B2E4", VA = "0x72B2E4", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractGrab component)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x72B4BC", Offset = "0x72B4BC", VA = "0x72B4BC")]
		private void ControllerStartGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x72B560", Offset = "0x72B560", VA = "0x72B560")]
		private void ControllerGrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x72B604", Offset = "0x72B604", VA = "0x72B604")]
		private void ControllerStartUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x72B6A8", Offset = "0x72B6A8", VA = "0x72B6A8")]
		private void ControllerUngrabInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x72B74C", Offset = "0x72B74C", VA = "0x72B74C")]
		private void GrabButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x72B7E8", Offset = "0x72B7E8", VA = "0x72B7E8")]
		private void GrabButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x72B884", Offset = "0x72B884", VA = "0x72B884")]
		public VRTK_InteractGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538B30", Offset = "0x538B30")]
	public sealed class VRTK_InteractHaptics_UnityEvents : VRTK_UnityEvents<VRTK_InteractHaptics>
	{
		[Serializable]
		[Token(Token = "0x20004BA")]
		public sealed class InteractHapticsEvent : UnityEvent<object, InteractHapticsEventArgs>
		{
			[Token(Token = "0x6002697")]
			[Address(RVA = "0x72BDD8", Offset = "0x72BDD8", VA = "0x72BDD8")]
			public InteractHapticsEvent()
			{
			}
		}

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractHapticsEvent OnInteractHapticsTouched;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractHapticsEvent OnInteractHapticsGrabbed;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractHapticsEvent OnInteractHapticsUsed;

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x72B9B4", Offset = "0x72B9B4", VA = "0x72B9B4", Slot = "4")]
		protected override void AddListeners(VRTK_InteractHaptics component)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x72BAC4", Offset = "0x72BAC4", VA = "0x72BAC4", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractHaptics component)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x72BBD4", Offset = "0x72BBD4", VA = "0x72BBD4")]
		private void InteractHapticsTouched(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x72BC4C", Offset = "0x72BC4C", VA = "0x72BC4C")]
		private void InteractHapticsGrabbed(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x72BCC4", Offset = "0x72BCC4", VA = "0x72BCC4")]
		private void InteractHapticsUsed(object o, InteractHapticsEventArgs e)
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x72BD3C", Offset = "0x72BD3C", VA = "0x72BD3C")]
		public VRTK_InteractHaptics_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538B68", Offset = "0x538B68")]
	public sealed class VRTK_InteractTouch_UnityEvents : VRTK_UnityEvents<VRTK_InteractTouch>
	{
		[Serializable]
		[Token(Token = "0x20004BB")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6002698")]
			[Address(RVA = "0x72C678", Offset = "0x72C678", VA = "0x72C678")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartTouchInteractableObject;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerTouchInteractableObject;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUntouchInteractableObject;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUntouchInteractableObject;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ObjectInteractEvent OnControllerRigidbodyActivated;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ObjectInteractEvent OnControllerRigidbodyDeactivated;

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x72BE28", Offset = "0x72BE28", VA = "0x72BE28", Slot = "4")]
		protected override void AddListeners(VRTK_InteractTouch component)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x72BFF8", Offset = "0x72BFF8", VA = "0x72BFF8", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractTouch component)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x72C1C8", Offset = "0x72C1C8", VA = "0x72C1C8")]
		private void ControllerStartTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x72C26C", Offset = "0x72C26C", VA = "0x72C26C")]
		private void ControllerTouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x72C310", Offset = "0x72C310", VA = "0x72C310")]
		private void ControllerStartUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x72C3B4", Offset = "0x72C3B4", VA = "0x72C3B4")]
		private void ControllerUntouchInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x72C458", Offset = "0x72C458", VA = "0x72C458")]
		private void ControllerRigidbodyActivated(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x72C4FC", Offset = "0x72C4FC", VA = "0x72C4FC")]
		private void ControllerRigidbodyDeactivated(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x72C5A0", Offset = "0x72C5A0", VA = "0x72C5A0")]
		public VRTK_InteractTouch_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538BA0", Offset = "0x538BA0")]
	public sealed class VRTK_InteractUse_UnityEvents : VRTK_UnityEvents<VRTK_InteractUse>
	{
		[Serializable]
		[Token(Token = "0x20004BC")]
		public sealed class ObjectInteractEvent : UnityEvent<object, ObjectInteractEventArgs>
		{
			[Token(Token = "0x6002699")]
			[Address(RVA = "0x72CF20", Offset = "0x72CF20", VA = "0x72CF20")]
			public ObjectInteractEvent()
			{
			}
		}

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectInteractEvent OnControllerStartUseInteractableObject;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectInteractEvent OnControllerUseInteractableObject;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObjectInteractEvent OnControllerStartUnuseInteractableObject;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectInteractEvent OnControllerUnuseInteractableObject;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnUseButtonPressed;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnUseButtonReleased;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x72C6C8", Offset = "0x72C6C8", VA = "0x72C6C8", Slot = "4")]
		protected override void AddListeners(VRTK_InteractUse component)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x72C8A0", Offset = "0x72C8A0", VA = "0x72C8A0", Slot = "5")]
		protected override void RemoveListeners(VRTK_InteractUse component)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x72CA78", Offset = "0x72CA78", VA = "0x72CA78")]
		private void ControllerStartUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x72CB1C", Offset = "0x72CB1C", VA = "0x72CB1C")]
		private void ControllerUseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x72CBC0", Offset = "0x72CBC0", VA = "0x72CBC0")]
		private void ControllerStartUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x72CC64", Offset = "0x72CC64", VA = "0x72CC64")]
		private void ControllerUnuseInteractableObject(object o, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x72CD08", Offset = "0x72CD08", VA = "0x72CD08")]
		private void UseButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x72CDA4", Offset = "0x72CDA4", VA = "0x72CDA4")]
		private void UseButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x72CE40", Offset = "0x72CE40", VA = "0x72CE40")]
		public VRTK_InteractUse_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538BD8", Offset = "0x538BD8")]
	public sealed class VRTK_ObjectAutoGrab_UnityEvents : VRTK_UnityEvents<VRTK_ObjectAutoGrab>
	{
		[Serializable]
		[Token(Token = "0x20004BD")]
		public sealed class ObjectAutoGrabEvent : UnityEvent<object>
		{
			[Token(Token = "0x600269A")]
			[Address(RVA = "0x72DD34", Offset = "0x72DD34", VA = "0x72DD34")]
			public ObjectAutoGrabEvent()
			{
			}
		}

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectAutoGrabEvent OnObjectAutoGrabCompleted;

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x72DB38", Offset = "0x72DB38", VA = "0x72DB38", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectAutoGrab component)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x72DBC8", Offset = "0x72DBC8", VA = "0x72DBC8", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectAutoGrab component)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x72DC58", Offset = "0x72DC58", VA = "0x72DC58")]
		private void ObjectAutoGrabCompleted(object o)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x72DCC8", Offset = "0x72DCC8", VA = "0x72DCC8")]
		public VRTK_ObjectAutoGrab_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538C10", Offset = "0x538C10")]
	public sealed class VRTK_ObjectControl_UnityEvents : VRTK_UnityEvents<VRTK_ObjectControl>
	{
		[Serializable]
		[Token(Token = "0x20004BE")]
		public sealed class ObjectControlEvent : UnityEvent<object, ObjectControlEventArgs>
		{
			[Token(Token = "0x600269B")]
			[Address(RVA = "0x72E104", Offset = "0x72E104", VA = "0x72E104")]
			public ObjectControlEvent()
			{
			}
		}

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectControlEvent OnXAxisChanged;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectControlEvent OnYAxisChanged;

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x72DD84", Offset = "0x72DD84", VA = "0x72DD84", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectControl component)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x72DE54", Offset = "0x72DE54", VA = "0x72DE54", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectControl component)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x72DF24", Offset = "0x72DF24", VA = "0x72DF24")]
		private void XAxisChanged(object o, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x72DFD0", Offset = "0x72DFD0", VA = "0x72DFD0")]
		private void YAxisChanged(object o, ObjectControlEventArgs e)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x72E07C", Offset = "0x72E07C", VA = "0x72E07C")]
		public VRTK_ObjectControl_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538C48", Offset = "0x538C48")]
	public sealed class VRTK_ObjectTooltip_UnityEvents : VRTK_UnityEvents<VRTK_ObjectTooltip>
	{
		[Serializable]
		[Token(Token = "0x20004BF")]
		public sealed class ObjectTooltipEvent : UnityEvent<object, ObjectTooltipEventArgs>
		{
			[Token(Token = "0x600269C")]
			[Address(RVA = "0x72E46C", Offset = "0x72E46C", VA = "0x72E46C")]
			public ObjectTooltipEvent()
			{
			}
		}

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTooltipEvent OnObjectTooltipReset;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObjectTooltipEvent OnObjectTooltipTextUpdated;

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x72E154", Offset = "0x72E154", VA = "0x72E154", Slot = "4")]
		protected override void AddListeners(VRTK_ObjectTooltip component)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x72E224", Offset = "0x72E224", VA = "0x72E224", Slot = "5")]
		protected override void RemoveListeners(VRTK_ObjectTooltip component)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x72E2F4", Offset = "0x72E2F4", VA = "0x72E2F4")]
		private void ObjectTooltipReset(object o, ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x72E36C", Offset = "0x72E36C", VA = "0x72E36C")]
		private void ObjectTooltipTextUpdated(object o, ObjectTooltipEventArgs e)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x72E3E4", Offset = "0x72E3E4", VA = "0x72E3E4")]
		public VRTK_ObjectTooltip_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538C80", Offset = "0x538C80")]
	public sealed class VRTK_PlayAreaCursor_UnityEvents : VRTK_UnityEvents<VRTK_PlayAreaCursor>
	{
		[Serializable]
		[Token(Token = "0x20004C0")]
		public sealed class PlayAreaCursorEvent : UnityEvent<object, PlayAreaCursorEventArgs>
		{
			[Token(Token = "0x600269D")]
			[Address(RVA = "0x72E7D4", Offset = "0x72E7D4", VA = "0x72E7D4")]
			public PlayAreaCursorEvent()
			{
			}
		}

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayAreaCursorEvent OnPlayAreaCursorStartCollision;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayAreaCursorEvent OnPlayAreaCursorEndCollision;

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x72E4BC", Offset = "0x72E4BC", VA = "0x72E4BC", Slot = "4")]
		protected override void AddListeners(VRTK_PlayAreaCursor component)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x72E58C", Offset = "0x72E58C", VA = "0x72E58C", Slot = "5")]
		protected override void RemoveListeners(VRTK_PlayAreaCursor component)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x72E65C", Offset = "0x72E65C", VA = "0x72E65C")]
		private void PlayAreaCursorStartCollision(object o, PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x72E6D4", Offset = "0x72E6D4", VA = "0x72E6D4")]
		private void PlayAreaCursorEndCollision(object o, PlayAreaCursorEventArgs e)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x72E74C", Offset = "0x72E74C", VA = "0x72E74C")]
		public VRTK_PlayAreaCursor_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538CB8", Offset = "0x538CB8")]
	public sealed class VRTK_PlayerClimb_UnityEvents : VRTK_UnityEvents<VRTK_PlayerClimb>
	{
		[Serializable]
		[Token(Token = "0x20004C1")]
		public sealed class PlayerClimbEvent : UnityEvent<object, PlayerClimbEventArgs>
		{
			[Token(Token = "0x600269E")]
			[Address(RVA = "0x72EB94", Offset = "0x72EB94", VA = "0x72EB94")]
			public PlayerClimbEvent()
			{
			}
		}

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerClimbEvent OnPlayerClimbStarted;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerClimbEvent OnPlayerClimbEnded;

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x72E824", Offset = "0x72E824", VA = "0x72E824", Slot = "4")]
		protected override void AddListeners(VRTK_PlayerClimb component)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x72E8F4", Offset = "0x72E8F4", VA = "0x72E8F4", Slot = "5")]
		protected override void RemoveListeners(VRTK_PlayerClimb component)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x72E9C4", Offset = "0x72E9C4", VA = "0x72E9C4")]
		private void PlayerClimbStarted(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x72EA68", Offset = "0x72EA68", VA = "0x72EA68")]
		private void PlayerClimbEnded(object o, PlayerClimbEventArgs e)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x72EB0C", Offset = "0x72EB0C", VA = "0x72EB0C")]
		public VRTK_PlayerClimb_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538CF0", Offset = "0x538CF0")]
	public sealed class VRTK_Pointer_UnityEvents : VRTK_UnityEvents<VRTK_Pointer>
	{
		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonPressed;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonReleased;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonPressed;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonReleased;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public VRTK_DestinationMarker_UnityEvents.DestinationMarkerEvent OnPointerStateValid;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VRTK_DestinationMarker_UnityEvents.DestinationMarkerEvent OnPointerStateInvalid;

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x72EE30", Offset = "0x72EE30", VA = "0x72EE30", Slot = "4")]
		protected override void AddListeners(VRTK_Pointer component)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x72F05C", Offset = "0x72F05C", VA = "0x72F05C", Slot = "5")]
		protected override void RemoveListeners(VRTK_Pointer component)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x72F288", Offset = "0x72F288", VA = "0x72F288")]
		private void ActivationButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x72F324", Offset = "0x72F324", VA = "0x72F324")]
		private void ActivationButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x72F3C0", Offset = "0x72F3C0", VA = "0x72F3C0")]
		private void SelectionButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x72F45C", Offset = "0x72F45C", VA = "0x72F45C")]
		private void SelectionButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x72F4F8", Offset = "0x72F4F8", VA = "0x72F4F8")]
		private void PointerStateValid(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x72F5A8", Offset = "0x72F5A8", VA = "0x72F5A8")]
		private void PointerStateInvalid(object o, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x72F658", Offset = "0x72F658", VA = "0x72F658")]
		public VRTK_Pointer_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538D28", Offset = "0x538D28")]
	public sealed class VRTK_PointerDirectionIndicator_UnityEvents : VRTK_UnityEvents<VRTK_PointerDirectionIndicator>
	{
		[Serializable]
		[Token(Token = "0x20004C2")]
		public sealed class PointerDirectionIndicatorEvent : UnityEvent<object>
		{
			[Token(Token = "0x600269F")]
			[Address(RVA = "0x72EDE0", Offset = "0x72EDE0", VA = "0x72EDE0")]
			public PointerDirectionIndicatorEvent()
			{
			}
		}

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PointerDirectionIndicatorEvent OnPointerDirectionIndicatorPositionSet;

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x72EBE4", Offset = "0x72EBE4", VA = "0x72EBE4", Slot = "4")]
		protected override void AddListeners(VRTK_PointerDirectionIndicator component)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x72EC74", Offset = "0x72EC74", VA = "0x72EC74", Slot = "5")]
		protected override void RemoveListeners(VRTK_PointerDirectionIndicator component)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x72ED04", Offset = "0x72ED04", VA = "0x72ED04")]
		private void PointerDirectionIndicatorPositionSet(object o)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x72ED74", Offset = "0x72ED74", VA = "0x72ED74")]
		public VRTK_PointerDirectionIndicator_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538D60", Offset = "0x538D60")]
	public sealed class VRTK_PositionRewind_UnityEvents : VRTK_UnityEvents<VRTK_PositionRewind>
	{
		[Serializable]
		[Token(Token = "0x20004C3")]
		public sealed class PositionRewindEvent : UnityEvent<object, PositionRewindEventArgs>
		{
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0x72F968", Offset = "0x72F968", VA = "0x72F968")]
			public PositionRewindEvent()
			{
			}
		}

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionRewindEvent OnPositionRewindToSafe;

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x72F738", Offset = "0x72F738", VA = "0x72F738", Slot = "4")]
		protected override void AddListeners(VRTK_PositionRewind component)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x72F7C8", Offset = "0x72F7C8", VA = "0x72F7C8", Slot = "5")]
		protected override void RemoveListeners(VRTK_PositionRewind component)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x72F858", Offset = "0x72F858", VA = "0x72F858")]
		private void PositionRewindToSafe(object o, PositionRewindEventArgs e)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x72F8FC", Offset = "0x72F8FC", VA = "0x72F8FC")]
		public VRTK_PositionRewind_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public sealed class VRTK_SDKManager_UnityEvents : VRTK_UnityEvents<VRTK_SDKManager>
	{
		[Serializable]
		[Token(Token = "0x20004C4")]
		public sealed class LoadedSetupChangeEvent : UnityEvent<VRTK_SDKManager, VRTK_SDKManager.LoadedSetupChangeEventArgs>
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x72FBE8", Offset = "0x72FBE8", VA = "0x72FBE8")]
			public LoadedSetupChangeEvent()
			{
			}
		}

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadedSetupChangeEvent OnLoadedSetupChanged;

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x72F9B8", Offset = "0x72F9B8", VA = "0x72F9B8", Slot = "4")]
		protected override void AddListeners(VRTK_SDKManager component)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x72FA48", Offset = "0x72FA48", VA = "0x72FA48", Slot = "5")]
		protected override void RemoveListeners(VRTK_SDKManager component)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x72FAD8", Offset = "0x72FAD8", VA = "0x72FAD8")]
		private void LoadedSetupChanged(VRTK_SDKManager sender, VRTK_SDKManager.LoadedSetupChangeEventArgs e)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x72FB7C", Offset = "0x72FB7C", VA = "0x72FB7C")]
		public VRTK_SDKManager_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public sealed class VRTK_SDKSetup_UnityEvents : VRTK_UnityEvents<VRTK_SDKSetup>
	{
		[Serializable]
		[Token(Token = "0x20004C5")]
		public sealed class LoadEvent : UnityEvent<VRTK_SDKManager, VRTK_SDKSetup>
		{
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x72FF50", Offset = "0x72FF50", VA = "0x72FF50")]
			public LoadEvent()
			{
			}
		}

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadEvent OnLoaded;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadEvent OnUnloaded;

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x72FC38", Offset = "0x72FC38", VA = "0x72FC38", Slot = "4")]
		protected override void AddListeners(VRTK_SDKSetup component)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x72FD08", Offset = "0x72FD08", VA = "0x72FD08", Slot = "5")]
		protected override void RemoveListeners(VRTK_SDKSetup component)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x72FDD8", Offset = "0x72FDD8", VA = "0x72FDD8")]
		private void Loaded(VRTK_SDKManager sender, VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x72FE50", Offset = "0x72FE50", VA = "0x72FE50")]
		private void Unloaded(VRTK_SDKManager sender, VRTK_SDKSetup setup)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x72FEC8", Offset = "0x72FEC8", VA = "0x72FEC8")]
		public VRTK_SDKSetup_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538D98", Offset = "0x538D98")]
	public sealed class VRTK_SnapDropZone_UnityEvents : VRTK_UnityEvents<VRTK_SnapDropZone>
	{
		[Serializable]
		[Token(Token = "0x20004C6")]
		public sealed class SnapDropZoneEvent : UnityEvent<object, SnapDropZoneEventArgs>
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x7304D0", Offset = "0x7304D0", VA = "0x7304D0")]
			public SnapDropZoneEvent()
			{
			}
		}

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnapDropZoneEvent OnObjectEnteredSnapDropZone;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SnapDropZoneEvent OnObjectExitedSnapDropZone;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SnapDropZoneEvent OnObjectSnappedToDropZone;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SnapDropZoneEvent OnObjectUnsnappedFromDropZone;

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x72FFA0", Offset = "0x72FFA0", VA = "0x72FFA0", Slot = "4")]
		protected override void AddListeners(VRTK_SnapDropZone component)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x7300F0", Offset = "0x7300F0", VA = "0x7300F0", Slot = "5")]
		protected override void RemoveListeners(VRTK_SnapDropZone component)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x730240", Offset = "0x730240", VA = "0x730240")]
		private void ObjectEnteredSnapDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x7302B8", Offset = "0x7302B8", VA = "0x7302B8")]
		private void ObjectExitedSnapDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x730330", Offset = "0x730330", VA = "0x730330")]
		private void ObjectSnappedToDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x7303A8", Offset = "0x7303A8", VA = "0x7303A8")]
		private void ObjectUnsnappedFromDropZone(object o, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x730420", Offset = "0x730420", VA = "0x730420")]
		public VRTK_SnapDropZone_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538DD0", Offset = "0x538DD0")]
	public sealed class VRTK_UIDraggableItem_UnityEvents : VRTK_UnityEvents<VRTK_UIDraggableItem>
	{
		[Serializable]
		[Token(Token = "0x20004C7")]
		public sealed class UIDraggableItemEvent : UnityEvent<object, UIDraggableItemEventArgs>
		{
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x730838", Offset = "0x730838", VA = "0x730838")]
			public UIDraggableItemEvent()
			{
			}
		}

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIDraggableItemEvent OnDraggableItemDropped;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIDraggableItemEvent OnDraggableItemReset;

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x730520", Offset = "0x730520", VA = "0x730520", Slot = "4")]
		protected override void AddListeners(VRTK_UIDraggableItem component)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x7305F0", Offset = "0x7305F0", VA = "0x7305F0", Slot = "5")]
		protected override void RemoveListeners(VRTK_UIDraggableItem component)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x7306C0", Offset = "0x7306C0", VA = "0x7306C0")]
		private void DraggableItemDropped(object o, UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x730738", Offset = "0x730738", VA = "0x730738")]
		private void DraggableItemReset(object o, UIDraggableItemEventArgs e)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x7307B0", Offset = "0x7307B0", VA = "0x7307B0")]
		public VRTK_UIDraggableItem_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538E08", Offset = "0x538E08")]
	public sealed class VRTK_UIPointer_UnityEvents : VRTK_UnityEvents<VRTK_UIPointer>
	{
		[Serializable]
		[Token(Token = "0x20004C8")]
		public sealed class UIPointerEvent : UnityEvent<object, VRTK_UIPointerEventArgs>
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x7315F8", Offset = "0x7315F8", VA = "0x7315F8")]
			public UIPointerEvent()
			{
			}
		}

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UIPointerEvent OnUIPointerElementEnter;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIPointerEvent OnUIPointerElementExit;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIPointerEvent OnUIPointerElementClick;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIPointerEvent OnUIPointerElementRelease;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIPointerEvent OnUIPointerElementDragStart;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIPointerEvent OnUIPointerElementDragEnd;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonPressed;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnActivationButtonReleased;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonPressed;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VRTK_ControllerEvents_UnityEvents.ControllerInteractionEvent OnSelectionButtonReleased;

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x730888", Offset = "0x730888", VA = "0x730888", Slot = "4")]
		protected override void AddListeners(VRTK_UIPointer component)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x730B60", Offset = "0x730B60", VA = "0x730B60", Slot = "5")]
		protected override void RemoveListeners(VRTK_UIPointer component)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x730E38", Offset = "0x730E38", VA = "0x730E38")]
		private void UIPointerElementEnter(object o, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x730EE8", Offset = "0x730EE8", VA = "0x730EE8")]
		private void UIPointerElementExit(object o, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x730F98", Offset = "0x730F98", VA = "0x730F98")]
		private void UIPointerElementClick(object o, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x731048", Offset = "0x731048", VA = "0x731048")]
		private void UIPointerElementRelease(object o, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x7310F8", Offset = "0x7310F8", VA = "0x7310F8")]
		private void UIPointerElementDragStart(object o, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x7311A8", Offset = "0x7311A8", VA = "0x7311A8")]
		private void UIPointerElementDragEnd(object o, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x731258", Offset = "0x731258", VA = "0x731258")]
		private void ActivationButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x7312F4", Offset = "0x7312F4", VA = "0x7312F4")]
		private void ActivationButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x731390", Offset = "0x731390", VA = "0x731390")]
		private void SelectionButtonPressed(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x73142C", Offset = "0x73142C", VA = "0x73142C")]
		private void SelectionButtonReleased(object o, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x7314C8", Offset = "0x7314C8", VA = "0x7314C8")]
		public VRTK_UIPointer_UnityEvents()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public abstract class VRTK_UnityEvents<T> : MonoBehaviour where T : Component
	{
		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T component;

		[Token(Token = "0x600157D")]
		protected abstract void AddListeners(T component);

		[Token(Token = "0x600157E")]
		protected abstract void RemoveListeners(T component);

		[Token(Token = "0x600157F")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001580")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001581")]
		protected VRTK_UnityEvents()
		{
		}
	}
}
namespace VRTK.SecondaryControllerGrabActions
{
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538E40", Offset = "0x538E40")]
	public class VRTK_AxisScaleGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5477F8", Offset = "0x5477F8")]
		public float ungrabDistance;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547830", Offset = "0x547830")]
		public bool lockXAxis;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547868", Offset = "0x547868")]
		public bool lockYAxis;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5478A0", Offset = "0x5478A0")]
		public bool lockZAxis;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5478D8", Offset = "0x5478D8")]
		public bool uniformScaling;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3 initialScale;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected float initalLength;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected float initialScaleFactor;

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xBA02E0", Offset = "0xBA02E0", VA = "0xBA02E0", Slot = "4")]
		public override void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xBA04E0", Offset = "0xBA04E0", VA = "0xBA04E0", Slot = "8")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xBA0514", Offset = "0xBA0514", VA = "0xBA0514", Slot = "9")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xBA056C", Offset = "0xBA056C", VA = "0xBA056C", Slot = "12")]
		protected virtual void ApplyScale(Vector3 newScale)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xBA067C", Offset = "0xBA067C", VA = "0xBA067C", Slot = "13")]
		protected virtual void NonUniformScale()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xBA09CC", Offset = "0xBA09CC", VA = "0xBA09CC", Slot = "14")]
		protected virtual void UniformScale()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xBA0B44", Offset = "0xBA0B44", VA = "0xBA0B44", Slot = "15")]
		protected virtual float CalculateAxisScale(float centerPosition, float initialPosition, float currentPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xBA0B58", Offset = "0xBA0B58", VA = "0xBA0B58")]
		public VRTK_AxisScaleGrabAction()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public abstract class VRTK_BaseGrabAction : MonoBehaviour
	{
		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_InteractableObject grabbedObject;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_InteractGrab primaryGrabbingObject;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_InteractGrab secondaryGrabbingObject;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform primaryInitialGrabPoint;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform secondaryInitialGrabPoint;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool initialised;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		protected bool isActionable;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		protected bool isSwappable;

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x71DB40", Offset = "0x71DB40", VA = "0x71DB40", Slot = "4")]
		public virtual void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x71DB58", Offset = "0x71DB58", VA = "0x71DB58", Slot = "5")]
		public virtual void ResetAction()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x71DB70", Offset = "0x71DB70", VA = "0x71DB70", Slot = "6")]
		public virtual bool IsActionable()
		{
			return default(bool);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x71DB78", Offset = "0x71DB78", VA = "0x71DB78", Slot = "7")]
		public virtual bool IsSwappable()
		{
			return default(bool);
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x71DB80", Offset = "0x71DB80", VA = "0x71DB80", Slot = "8")]
		public virtual void ProcessUpdate()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x71DB84", Offset = "0x71DB84", VA = "0x71DB84", Slot = "9")]
		public virtual void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x71DB88", Offset = "0x71DB88", VA = "0x71DB88", Slot = "10")]
		public virtual void OnDropAction()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x71DB8C", Offset = "0x71DB8C", VA = "0x71DB8C", Slot = "11")]
		protected virtual void CheckForceStopDistance(float ungrabDistance)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x71DCE4", Offset = "0x71DCE4", VA = "0x71DCE4")]
		protected VRTK_BaseGrabAction()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538E78", Offset = "0x538E78")]
	public class VRTK_ControlDirectionGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x20004C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539AD8", Offset = "0x539AD8")]
		private sealed class <RealignOnRelease>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_ControlDirectionGrabAction <>4__this;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000263")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026A9")]
				[Address(RVA = "0x71EAB4", Offset = "0x71EAB4", VA = "0x71EAB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000264")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026AB")]
				[Address(RVA = "0x71EB24", Offset = "0x71EB24", VA = "0x71EB24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x71DFAC", Offset = "0x71DFAC", VA = "0x71DFAC")]
			[DebuggerHidden]
			public <RealignOnRelease>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x71E80C", Offset = "0x71E80C", VA = "0x71E80C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026A8")]
			[Address(RVA = "0x71E810", Offset = "0x71E810", VA = "0x71E810", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0x71EABC", Offset = "0x71EABC", VA = "0x71EABC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547910", Offset = "0x547910")]
		public float ungrabDistance;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547948", Offset = "0x547948")]
		public float releaseSnapSpeed;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547980", Offset = "0x547980")]
		public bool lockZRotation;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Quaternion initialRotation;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion releaseRotation;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Coroutine snappingOnRelease;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x71DCF4", Offset = "0x71DCF4", VA = "0x71DCF4", Slot = "4")]
		public override void Initialise(VRTK_InteractableObject currentGrabbdObject, VRTK_InteractGrab currentPrimaryGrabbingObject, VRTK_InteractGrab currentSecondaryGrabbingObject, Transform primaryGrabPoint, Transform secondaryGrabPoint)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x71DDAC", Offset = "0x71DDAC", VA = "0x71DDAC", Slot = "5")]
		public override void ResetAction()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x71DECC", Offset = "0x71DECC", VA = "0x71DECC", Slot = "10")]
		public override void OnDropAction()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x71DED8", Offset = "0x71DED8", VA = "0x71DED8", Slot = "8")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x71DEE8", Offset = "0x71DEE8", VA = "0x71DEE8", Slot = "9")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x71DF04", Offset = "0x71DF04", VA = "0x71DF04", Slot = "12")]
		protected virtual void StopRealignOnRelease()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x71DF38", Offset = "0x71DF38", VA = "0x71DF38", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5542A8", Offset = "0x5542A8")]
		protected virtual IEnumerator RealignOnRelease()
		{
			return null;
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x71DFD8", Offset = "0x71DFD8", VA = "0x71DFD8", Slot = "14")]
		protected virtual void AimObject()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x71E34C", Offset = "0x71E34C", VA = "0x71E34C", Slot = "15")]
		protected virtual void ZLockedAim()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x71E7E8", Offset = "0x71E7E8", VA = "0x71E7E8")]
		public VRTK_ControlDirectionGrabAction()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538EB0", Offset = "0x538EB0")]
	public class VRTK_SwapControllerGrabAction : VRTK_BaseGrabAction
	{
		[Token(Token = "0x600159D")]
		[Address(RVA = "0x71EB2C", Offset = "0x71EB2C", VA = "0x71EB2C", Slot = "12")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x71EB38", Offset = "0x71EB38", VA = "0x71EB38")]
		public VRTK_SwapControllerGrabAction()
		{
		}
	}
}
namespace VRTK.Highlighters
{
	[Token(Token = "0x20001DD")]
	public abstract class VRTK_BaseHighlighter : MonoBehaviour
	{
		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5479B8", Offset = "0x5479B8")]
		public bool active;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5479F0", Offset = "0x5479F0")]
		public bool unhighlightOnDisable;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool usesClonedObject;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected GameObject objectToAffect;

		[Token(Token = "0x600159F")]
		public abstract void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options);

		[Token(Token = "0x60015A0")]
		public abstract void ResetHighlighter();

		[Token(Token = "0x60015A1")]
		public abstract void Highlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x60015A2")]
		public abstract void Unhighlight([Optional] Color? color, float duration = 0f);

		[Token(Token = "0x60015A3")]
		public virtual T GetOption<T>(Dictionary<string, object> options, string key)
		{
			return (T)null;
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x981410", Offset = "0x981410", VA = "0x981410", Slot = "9")]
		public virtual bool UsesClonedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x981418", Offset = "0x981418", VA = "0x981418")]
		public static VRTK_BaseHighlighter GetActiveHighlighter(GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x9814E8", Offset = "0x9814E8", VA = "0x9814E8", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x981528", Offset = "0x981528", VA = "0x981528")]
		protected VRTK_BaseHighlighter()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538EE8", Offset = "0x538EE8")]
	public class VRTK_MaterialColorSwapHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539AE8", Offset = "0x539AE8")]
		private sealed class <CycleColor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material material;

			[Token(Token = "0x40019D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x40019D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endColor;

			[Token(Token = "0x40019D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x40019D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public VRTK_MaterialColorSwapHighlighter <>4__this;

			[Token(Token = "0x40019D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000265")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026AF")]
				[Address(RVA = "0x982688", Offset = "0x982688", VA = "0x982688", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B1")]
				[Address(RVA = "0x9826F8", Offset = "0x9826F8", VA = "0x9826F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0x982350", Offset = "0x982350", VA = "0x982350")]
			[DebuggerHidden]
			public <CycleColor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x982444", Offset = "0x982444", VA = "0x982444", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0x982448", Offset = "0x982448", VA = "0x982448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x982690", Offset = "0x982690", VA = "0x982690", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547A28", Offset = "0x547A28")]
		public float emissionDarken;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547A60", Offset = "0x547A60")]
		public Material customMaterial;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Dictionary<string, Material[]> originalSharedRendererMaterials;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Dictionary<string, Material[]> originalRendererMaterials;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Dictionary<string, Coroutine> faderRoutines;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool resetMainTexture;

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x981538", Offset = "0x981538", VA = "0x981538", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x9816A4", Offset = "0x9816A4", VA = "0x9816A4", Slot = "5")]
		public override void ResetHighlighter()
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x9816B0", Offset = "0x9816B0", VA = "0x9816B0", Slot = "6")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x981758", Offset = "0x981758", VA = "0x981758", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x981A60", Offset = "0x981A60", VA = "0x981A60", Slot = "11")]
		protected virtual void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x981C6C", Offset = "0x981C6C", VA = "0x981C6C", Slot = "12")]
		protected virtual void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x982238", Offset = "0x982238", VA = "0x982238", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55430C", Offset = "0x55430C")]
		protected virtual IEnumerator CycleColor(Material material, Color startColor, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x98237C", Offset = "0x98237C", VA = "0x98237C")]
		public VRTK_MaterialColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538F20", Offset = "0x538F20")]
	public class VRTK_MaterialPropertyBlockColorSwapHighlighter : VRTK_MaterialColorSwapHighlighter
	{
		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539AF8", Offset = "0x539AF8")]
		private sealed class <CycleColor>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaterialPropertyBlock highlightMaterialPropertyBlock;

			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color endColor;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Renderer renderer;

			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026B5")]
				[Address(RVA = "0x983444", Offset = "0x983444", VA = "0x983444", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B7")]
				[Address(RVA = "0x9834B4", Offset = "0x9834B4", VA = "0x9834B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x983140", Offset = "0x983140", VA = "0x983140")]
			[DebuggerHidden]
			public <CycleColor>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x9831F8", Offset = "0x9831F8", VA = "0x9831F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x9831FC", Offset = "0x9831FC", VA = "0x9831FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x98344C", Offset = "0x98344C", VA = "0x98344C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Dictionary<string, MaterialPropertyBlock> originalMaterialPropertyBlocks;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Dictionary<string, MaterialPropertyBlock> highlightMaterialPropertyBlocks;

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x982700", Offset = "0x982700", VA = "0x982700", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x9827FC", Offset = "0x9827FC", VA = "0x9827FC", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x982AA8", Offset = "0x982AA8", VA = "0x982AA8", Slot = "11")]
		protected override void StoreOriginalMaterials()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x982CA8", Offset = "0x982CA8", VA = "0x982CA8", Slot = "12")]
		protected override void ChangeToHighlightColor(Color color, float duration = 0f)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x983054", Offset = "0x983054", VA = "0x983054", Slot = "14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554370", Offset = "0x554370")]
		protected virtual IEnumerator CycleColor(Renderer renderer, MaterialPropertyBlock highlightMaterialPropertyBlock, Color endColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x98316C", Offset = "0x98316C", VA = "0x98316C")]
		public VRTK_MaterialPropertyBlockColorSwapHighlighter()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538F58", Offset = "0x538F58")]
	public class VRTK_OutlineObjectCopyHighlighter : VRTK_BaseHighlighter
	{
		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547A98", Offset = "0x547A98")]
		public float thickness;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547AD0", Offset = "0x547AD0")]
		public GameObject[] customOutlineModels;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547B08", Offset = "0x547B08")]
		public string[] customOutlineModelPaths;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547B40", Offset = "0x547B40")]
		public bool enableSubmeshHighlight;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Material stencilOutline;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Renderer[] highlightModels;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected string[] copyComponents;

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x9834BC", Offset = "0x9834BC", VA = "0x9834BC", Slot = "4")]
		public override void Initialise([Optional] Color? color, [Optional] GameObject affectObject, [Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x98369C", Offset = "0x98369C", VA = "0x98369C", Slot = "5")]
		public override void ResetHighlighter()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x9836FC", Offset = "0x9836FC", VA = "0x9836FC", Slot = "6")]
		public override void Highlight(Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x98397C", Offset = "0x98397C", VA = "0x98397C", Slot = "7")]
		public override void Unhighlight([Optional] Color? color, float duration = 0f)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x983B00", Offset = "0x983B00", VA = "0x983B00", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x983B80", Offset = "0x983B80", VA = "0x983B80", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x983CF0", Offset = "0x983CF0", VA = "0x983CF0", Slot = "13")]
		protected virtual void ResetHighlighterWithCustomModels()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x983E50", Offset = "0x983E50", VA = "0x983E50", Slot = "14")]
		protected virtual void ResetHighlighterWithCustomModelPaths()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x983FA8", Offset = "0x983FA8", VA = "0x983FA8", Slot = "15")]
		protected virtual void ResetHighlightersWithCurrentGameObject()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x98408C", Offset = "0x98408C", VA = "0x98408C", Slot = "16")]
		protected virtual void SetOptions([Optional] Dictionary<string, object> options)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x9841CC", Offset = "0x9841CC", VA = "0x9841CC", Slot = "17")]
		protected virtual void DeleteExistingHighlightModels()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x98432C", Offset = "0x98432C", VA = "0x98432C", Slot = "18")]
		protected virtual Renderer CreateHighlightModel(GameObject givenOutlineModel, string givenOutlineModelPath)
		{
			return null;
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x984ED8", Offset = "0x984ED8", VA = "0x984ED8")]
		public VRTK_OutlineObjectCopyHighlighter()
		{
		}
	}
}
namespace VRTK.GrabAttachMechanics
{
	[Token(Token = "0x20001E1")]
	public abstract class VRTK_BaseGrabAttach : MonoBehaviour
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x547B78", Offset = "0x547B78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547B78", Offset = "0x547B78")]
		public bool precisionGrab;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547BE8", Offset = "0x547BE8")]
		public Transform rightSnapHandle;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547C20", Offset = "0x547C20")]
		public Transform leftSnapHandle;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform handSnapHandle;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547C58", Offset = "0x547C58")]
		public bool throwVelocityWithAttachDistance;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547C90", Offset = "0x547C90")]
		public float throwMultiplier;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547CC8", Offset = "0x547CC8")]
		public float onGrabCollisionDelay;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool tracked;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		protected bool climbable;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		protected bool kinematic;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected GameObject grabbedObject;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Rigidbody grabbedObjectRigidBody;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_InteractableObject grabbedObjectScript;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Transform trackPoint;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Transform grabbedSnapHandle;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Transform initialAttachPoint;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Rigidbody controllerAttachPoint;

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x97C0C8", Offset = "0x97C0C8", VA = "0x97C0C8", Slot = "4")]
		public virtual bool IsTracked()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x97C0D0", Offset = "0x97C0D0", VA = "0x97C0D0", Slot = "5")]
		public virtual bool IsClimbable()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x97C0D8", Offset = "0x97C0D8", VA = "0x97C0D8", Slot = "6")]
		public virtual bool IsKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x97C0E0", Offset = "0x97C0E0", VA = "0x97C0E0", Slot = "7")]
		public virtual bool ValidGrab(Rigidbody checkAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x97C0E8", Offset = "0x97C0E8", VA = "0x97C0E8", Slot = "8")]
		public virtual void SetTrackPoint(Transform givenTrackPoint)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x97C0F0", Offset = "0x97C0F0", VA = "0x97C0F0", Slot = "9")]
		public virtual void SetInitialAttachPoint(Transform givenInitialAttachPoint)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x97C0F8", Offset = "0x97C0F8", VA = "0x97C0F8", Slot = "10")]
		public virtual bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x97C23C", Offset = "0x97C23C", VA = "0x97C23C", Slot = "11")]
		public virtual void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x97C254", Offset = "0x97C254", VA = "0x97C254", Slot = "12")]
		public virtual Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x97C260", Offset = "0x97C260", VA = "0x97C260", Slot = "13")]
		public virtual void ProcessUpdate()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x97C264", Offset = "0x97C264", VA = "0x97C264", Slot = "14")]
		public virtual void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x60015CE")]
		protected abstract void Initialise();

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x97C268", Offset = "0x97C268", VA = "0x97C268", Slot = "16")]
		protected virtual Rigidbody ReleaseFromController(bool applyGrabbingObjectVelocity)
		{
			return null;
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x97C270", Offset = "0x97C270", VA = "0x97C270", Slot = "17")]
		protected virtual void ForceReleaseGrab()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x97C3C4", Offset = "0x97C3C4", VA = "0x97C3C4", Slot = "18")]
		protected virtual void ReleaseObject(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x97C48C", Offset = "0x97C48C", VA = "0x97C48C", Slot = "19")]
		protected virtual void FlipSnapHandles()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x97C4D0", Offset = "0x97C4D0", VA = "0x97C4D0", Slot = "20")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x97C4E0", Offset = "0x97C4E0", VA = "0x97C4E0", Slot = "21")]
		protected virtual void ThrowReleasedObject(Rigidbody objectRigidbody)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x97CB48", Offset = "0x97CB48", VA = "0x97CB48", Slot = "22")]
		protected virtual Transform GetSnapHandle(GameObject grabbingObject)
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x97CCE4", Offset = "0x97CCE4", VA = "0x97CCE4", Slot = "23")]
		protected virtual void FlipSnapHandle(Transform snapHandle)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x97CE10", Offset = "0x97CE10", VA = "0x97CE10")]
		protected VRTK_BaseGrabAttach()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public abstract class VRTK_BaseJointGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x547D00", Offset = "0x547D00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547D00", Offset = "0x547D00")]
		public bool destroyImmediatelyOnThrow;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Joint givenJoint;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Joint controllerAttachJoint;

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x97CE20", Offset = "0x97CE20", VA = "0x97CE20", Slot = "7")]
		public override bool ValidGrab(Rigidbody checkAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x97CF00", Offset = "0x97CF00", VA = "0x97CF00", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x97CF4C", Offset = "0x97CF4C", VA = "0x97CF4C", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x97CF90", Offset = "0x97CF90", VA = "0x97CF90", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x97CFA0", Offset = "0x97CFA0", VA = "0x97CFA0", Slot = "16")]
		protected override Rigidbody ReleaseFromController(bool applyGrabbingObjectVelocity)
		{
			return null;
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x97D070", Offset = "0x97D070", VA = "0x97D070", Slot = "24")]
		protected virtual void OnJointBreak(float force)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x97D080", Offset = "0x97D080", VA = "0x97D080", Slot = "25")]
		protected virtual void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x97D20C", Offset = "0x97D20C", VA = "0x97D20C", Slot = "26")]
		protected virtual void DestroyJoint(bool withDestroyImmediate, bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x97D2D8", Offset = "0x97D2D8", VA = "0x97D2D8", Slot = "27")]
		protected virtual void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x97D634", Offset = "0x97D634", VA = "0x97D634", Slot = "28")]
		protected virtual void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x97D688", Offset = "0x97D688", VA = "0x97D688")]
		protected VRTK_BaseJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538F90", Offset = "0x538F90")]
	public class VRTK_ChildOfControllerGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x97D6A0", Offset = "0x97D6A0", VA = "0x97D6A0", Slot = "10")]
		public override bool StartGrab(GameObject grabbingObject, GameObject givenGrabbedObject, Rigidbody givenControllerAttachPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x97D710", Offset = "0x97D710", VA = "0x97D710", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x97D754", Offset = "0x97D754", VA = "0x97D754", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x97D764", Offset = "0x97D764", VA = "0x97D764", Slot = "24")]
		protected virtual void SetSnappedObjectPosition(GameObject obj)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x97DAC0", Offset = "0x97DAC0", VA = "0x97DAC0", Slot = "25")]
		protected virtual void SnapObjectToGrabToController(GameObject obj)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x97DB5C", Offset = "0x97DB5C", VA = "0x97DB5C")]
		public VRTK_ChildOfControllerGrabAttach()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x538FC8", Offset = "0x538FC8")]
	public class VRTK_ClimbableGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547D70", Offset = "0x547D70")]
		public bool useObjectRotation;

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x97DB6C", Offset = "0x97DB6C", VA = "0x97DB6C", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x97DB80", Offset = "0x97DB80", VA = "0x97DB80")]
		public VRTK_ClimbableGrabAttach()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x539000", Offset = "0x539000")]
	public class VRTK_CustomJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547DA8", Offset = "0x547DA8")]
		public Joint customJoint;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected GameObject jointHolder;

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x97DB90", Offset = "0x97DB90", VA = "0x97DB90", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x97DBAC", Offset = "0x97DBAC", VA = "0x97DBAC", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x97DEF8", Offset = "0x97DEF8", VA = "0x97DEF8", Slot = "26")]
		protected override void DestroyJoint(bool withDestroyImmediate, bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x97DF04", Offset = "0x97DF04", VA = "0x97DF04", Slot = "29")]
		protected virtual void CopyCustomJoint()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x97E154", Offset = "0x97E154", VA = "0x97E154")]
		public VRTK_CustomJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x539038", Offset = "0x539038")]
	public class VRTK_FixedJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547DE0", Offset = "0x547DE0")]
		public float breakForce;

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x97E16C", Offset = "0x97E16C", VA = "0x97E16C", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x97E248", Offset = "0x97E248", VA = "0x97E248")]
		public VRTK_FixedJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x539070", Offset = "0x539070")]
	public class VRTK_RotatorTrackGrabAttach : VRTK_TrackObjectGrabAttach
	{
		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x97E26C", Offset = "0x97E26C", VA = "0x97E26C", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x97E2D8", Offset = "0x97E2D8", VA = "0x97E2D8", Slot = "14")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x97E428", Offset = "0x97E428", VA = "0x97E428", Slot = "24")]
		protected override void SetTrackPointOrientation(ref Transform trackPoint, Transform currentGrabbedObject, Transform controllerPoint)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x97E4FC", Offset = "0x97E4FC", VA = "0x97E4FC")]
		public VRTK_RotatorTrackGrabAttach()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5390A8", Offset = "0x5390A8")]
	public class VRTK_SpringJointGrabAttach : VRTK_BaseJointGrabAttach
	{
		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547E18", Offset = "0x547E18")]
		public float breakForce;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547E50", Offset = "0x547E50")]
		public float strength;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547E88", Offset = "0x547E88")]
		public float damper;

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x97E544", Offset = "0x97E544", VA = "0x97E544", Slot = "25")]
		protected override void CreateJoint(GameObject obj)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x97E67C", Offset = "0x97E67C", VA = "0x97E67C")]
		public VRTK_SpringJointGrabAttach()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5390E0", Offset = "0x5390E0")]
	public class VRTK_TrackObjectGrabAttach : VRTK_BaseGrabAttach
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x547EC0", Offset = "0x547EC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547EC0", Offset = "0x547EC0")]
		public float detachDistance;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547F30", Offset = "0x547F30")]
		public float velocityLimit;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547F68", Offset = "0x547F68")]
		public float angularVelocityLimit;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected bool isReleasable;

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x97E288", Offset = "0x97E288", VA = "0x97E288", Slot = "11")]
		public override void StopGrab(bool applyGrabbingObjectVelocity)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x97E6AC", Offset = "0x97E6AC", VA = "0x97E6AC", Slot = "12")]
		public override Transform CreateTrackPoint(Transform controllerPoint, GameObject currentGrabbedObject, GameObject currentGrabbingObject, ref bool customTrackPoint)
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x97E984", Offset = "0x97E984", VA = "0x97E984", Slot = "13")]
		public override void ProcessUpdate()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x97EAFC", Offset = "0x97EAFC", VA = "0x97EAFC", Slot = "14")]
		public override void ProcessFixedUpdate()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x97EFD8", Offset = "0x97EFD8", VA = "0x97EFD8", Slot = "15")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x97EFF4", Offset = "0x97EFF4", VA = "0x97EFF4", Slot = "24")]
		protected virtual void SetTrackPointOrientation(ref Transform trackPoint, Transform currentGrabbedObject, Transform controllerPoint)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x97E520", Offset = "0x97E520", VA = "0x97E520")]
		public VRTK_TrackObjectGrabAttach()
		{
		}
	}
}
namespace VRTK.Examples
{
	[Token(Token = "0x20001EA")]
	public class AutoRotation : MonoBehaviour
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547FA0", Offset = "0x547FA0")]
		public float degPerSec;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x547FD8", Offset = "0x547FD8")]
		public Vector3 rotAxis;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Space space;

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x7ABDD4", Offset = "0x7ABDD4", VA = "0x7ABDD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x7ABDE0", Offset = "0x7ABDE0", VA = "0x7ABDE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x7ABE60", Offset = "0x7ABE60", VA = "0x7ABE60")]
		public AutoRotation()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class Breakable_Cube : MonoBehaviour
	{
		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float breakForce;

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x7ABEE8", Offset = "0x7ABEE8", VA = "0x7ABEE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x7ABF54", Offset = "0x7ABF54", VA = "0x7ABF54")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x7ABF8C", Offset = "0x7ABF8C", VA = "0x7ABF8C")]
		private float GetCollisionForce(Collision collision)
		{
			return default(float);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x7AC14C", Offset = "0x7AC14C", VA = "0x7AC14C")]
		private void ExplodeCube(float force)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x7AC2C0", Offset = "0x7AC2C0", VA = "0x7AC2C0")]
		private void ExplodeFace(Transform face, float force)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x7AC474", Offset = "0x7AC474", VA = "0x7AC474")]
		public Breakable_Cube()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class ButtonReactor : MonoBehaviour
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform dispenseLocation;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_Button_UnityEvents buttonEvents;

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x7AC484", Offset = "0x7AC484", VA = "0x7AC484")]
		private void Start()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x7AC5C0", Offset = "0x7AC5C0", VA = "0x7AC5C0")]
		private void handlePush(object sender, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x7AC70C", Offset = "0x7AC70C", VA = "0x7AC70C")]
		public ButtonReactor()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class Controller_Hand : MonoBehaviour
	{
		[Token(Token = "0x20004CC")]
		public enum Hands
		{
			[Token(Token = "0x40019E0")]
			Right,
			[Token(Token = "0x40019E1")]
			Left
		}

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hands hand;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform pointerFinger;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform gripFingers;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float maxRotation;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float originalPointerRotation;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float originalGripRotation;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float targetPointerRotation;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetGripRotation;

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x7AC914", Offset = "0x7AC914", VA = "0x7AC914")]
		private void Start()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x7ACC78", Offset = "0x7ACC78", VA = "0x7ACC78")]
		private void InversePosition(Transform givenTransform)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x7ACE04", Offset = "0x7ACE04", VA = "0x7ACE04")]
		private void DoGrabOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x7ACE10", Offset = "0x7ACE10", VA = "0x7ACE10")]
		private void DoGrabOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x7ACE1C", Offset = "0x7ACE1C", VA = "0x7ACE1C")]
		private void DoUseOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x7ACE28", Offset = "0x7ACE28", VA = "0x7ACE28")]
		private void DoUseOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x7ACE34", Offset = "0x7ACE34", VA = "0x7ACE34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x7ACEE0", Offset = "0x7ACEE0", VA = "0x7ACEE0")]
		public Controller_Hand()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class Controller_Menu : MonoBehaviour
	{
		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject menuObject;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject clonedMenuObject;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool menuInit;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool menuActive;

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x7ACEF0", Offset = "0x7ACEF0", VA = "0x7ACEF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x7ACFFC", Offset = "0x7ACFFC", VA = "0x7ACFFC")]
		private void InitMenu()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x7AD148", Offset = "0x7AD148", VA = "0x7AD148")]
		private void DoMenuOn(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x7AD200", Offset = "0x7AD200", VA = "0x7AD200")]
		private void DoMenuOff(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x7AD29C", Offset = "0x7AD29C", VA = "0x7AD29C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x7AD438", Offset = "0x7AD438", VA = "0x7AD438")]
		public Controller_Menu()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class ControlReactor : MonoBehaviour
	{
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh go;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_Control_UnityEvents controlEvents;

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x7AC714", Offset = "0x7AC714", VA = "0x7AC714")]
		private void Start()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x7AC850", Offset = "0x7AC850", VA = "0x7AC850")]
		private void HandleChange(object sender, Control3DEventArgs e)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x7AC90C", Offset = "0x7AC90C", VA = "0x7AC90C")]
		public ControlReactor()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class ExampleSceneSimulatorCameraRigMover : MonoBehaviour
	{
		[Token(Token = "0x600161C")]
		[Address(RVA = "0x7AD440", Offset = "0x7AD440", VA = "0x7AD440", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x7AD588", Offset = "0x7AD588", VA = "0x7AD588")]
		public ExampleSceneSimulatorCameraRigMover()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class ExcludeTeleport : MonoBehaviour
	{
		[Token(Token = "0x600161E")]
		[Address(RVA = "0x7AD590", Offset = "0x7AD590", VA = "0x7AD590")]
		public ExcludeTeleport()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class FireExtinguisher_Base : VRTK_InteractableObject
	{
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Animation leverAnimation;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public FireExtinguisher_Sprayer sprayer;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x7AD598", Offset = "0x7AD598", VA = "0x7AD598", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x7AD618", Offset = "0x7AD618", VA = "0x7AD618", Slot = "29")]
		public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x7AD644", Offset = "0x7AD644", VA = "0x7AD644", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x7AD780", Offset = "0x7AD780", VA = "0x7AD780")]
		private void Spray(float power)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x7AD7C4", Offset = "0x7AD7C4", VA = "0x7AD7C4")]
		private void SetHandleFrame(float frame)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x7AD99C", Offset = "0x7AD99C", VA = "0x7AD99C")]
		public FireExtinguisher_Base()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class FireExtinguisher_Sprayer : VRTK_InteractableObject
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public FireExtinguisher_Base baseCan;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float breakDistance;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public float maxSprayPower;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GameObject waterSpray;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private ParticleSystem particles;

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x7AD8B4", Offset = "0x7AD8B4", VA = "0x7AD8B4")]
		public void Spray(float power)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x7AD9A4", Offset = "0x7AD9A4", VA = "0x7AD9A4", Slot = "64")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x7ADA74", Offset = "0x7ADA74", VA = "0x7ADA74", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x7ADBBC", Offset = "0x7ADBBC", VA = "0x7ADBBC")]
		public FireExtinguisher_Sprayer()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class Gun : VRTK_InteractableObject
	{
		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private GameObject bullet;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float bulletSpeed;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float bulletLife;

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x7ADBD4", Offset = "0x7ADBD4", VA = "0x7ADBD4", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x7ADE44", Offset = "0x7ADE44", VA = "0x7ADE44")]
		protected void Start()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x7ADBFC", Offset = "0x7ADBFC", VA = "0x7ADBFC")]
		private void FireBullet()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x7ADEE8", Offset = "0x7ADEE8", VA = "0x7ADEE8")]
		public Gun()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class HandLift : VRTK_InteractableObject
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x548010", Offset = "0x548010")]
		public float speed;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform handleTop;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform ropeTop;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Transform ropeBottom;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject rope;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GameObject handle;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool isMoving;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private bool isMovingUp;

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x7ADEFC", Offset = "0x7ADEFC", VA = "0x7ADEFC", Slot = "10")]
		public override void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x7ADF28", Offset = "0x7ADF28", VA = "0x7ADF28", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x7AE31C", Offset = "0x7AE31C", VA = "0x7AE31C")]
		public HandLift()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class Lamp : VRTK_InteractableObject
	{
		[Token(Token = "0x6001630")]
		[Address(RVA = "0x7AE338", Offset = "0x7AE338", VA = "0x7AE338", Slot = "26")]
		public override void Grabbed(VRTK_InteractGrab grabbingObject)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x7AE460", Offset = "0x7AE460", VA = "0x7AE460", Slot = "27")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x7AE364", Offset = "0x7AE364", VA = "0x7AE364")]
		private void ToggleKinematics(bool state)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x7AE48C", Offset = "0x7AE48C", VA = "0x7AE48C")]
		public Lamp()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class LightSaber : VRTK_InteractableObject
	{
		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private bool beamActive;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector2 beamLimits;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float currentBeamSize;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float beamExtendSpeed;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GameObject blade;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Color activeColor;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Color targetColor;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Color[] bladePhaseColors;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x7AE494", Offset = "0x7AE494", VA = "0x7AE494", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x7AE620", Offset = "0x7AE620", VA = "0x7AE620", Slot = "29")]
		public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x7AE650", Offset = "0x7AE650", VA = "0x7AE650")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x7AE780", Offset = "0x7AE780", VA = "0x7AE780", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x7AE6E8", Offset = "0x7AE6E8", VA = "0x7AE6E8")]
		private void SetBeamSize()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x7AE87C", Offset = "0x7AE87C", VA = "0x7AE87C")]
		private void PulseBeam()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x7AEA6C", Offset = "0x7AEA6C", VA = "0x7AEA6C")]
		public LightSaber()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class Menu_Color_Changer : VRTK_InteractableObject
	{
		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public Color newMenuColor;

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x7AEABC", Offset = "0x7AEABC", VA = "0x7AEABC", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x7AEDA4", Offset = "0x7AEDA4", VA = "0x7AEDA4", Slot = "65")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x7AECBC", Offset = "0x7AECBC", VA = "0x7AECBC")]
		private void ResetMenuItems()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x7AEE78", Offset = "0x7AEE78", VA = "0x7AEE78")]
		public Menu_Color_Changer()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class Menu_Container_Object_Colors : VRTK_InteractableObject
	{
		[Token(Token = "0x600163F")]
		[Address(RVA = "0x7AEBB8", Offset = "0x7AEBB8", VA = "0x7AEBB8")]
		public void SetSelectedColor(Color color)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x7AEF8C", Offset = "0x7AEF8C", VA = "0x7AEF8C")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x7AEFC8", Offset = "0x7AEFC8", VA = "0x7AEFC8")]
		public Menu_Container_Object_Colors()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class Menu_Object_Spawner : VRTK_InteractableObject
	{
		[Token(Token = "0x20004CD")]
		public enum PrimitiveTypes
		{
			[Token(Token = "0x40019E3")]
			Cube,
			[Token(Token = "0x40019E4")]
			Sphere
		}

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public PrimitiveTypes shape;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Color selectedColor;

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x7AEEB4", Offset = "0x7AEEB4", VA = "0x7AEEB4")]
		public void SetSelectedColor(Color color)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x7AEFD0", Offset = "0x7AEFD0", VA = "0x7AEFD0", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x7AF03C", Offset = "0x7AF03C", VA = "0x7AF03C")]
		private void CreateShape(PrimitiveType shape, Color color)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x7AF21C", Offset = "0x7AF21C", VA = "0x7AF21C")]
		private void ResetMenuItems()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x7AF304", Offset = "0x7AF304", VA = "0x7AF304")]
		public Menu_Object_Spawner()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class ModelVillage_TeleportLocation : VRTK_DestinationMarker
	{
		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform destination;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool lastUsePressedState;

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x7AF30C", Offset = "0x7AF30C", VA = "0x7AF30C")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x7AF61C", Offset = "0x7AF61C", VA = "0x7AF61C")]
		public ModelVillage_TeleportLocation()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class Openable_Door : VRTK_InteractableObject
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public bool flipped;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		public bool rotated;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float sideFlip;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float side;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float smooth;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float doorOpenAngle;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool open;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 defaultRotation;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 openRotation;

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x7AF624", Offset = "0x7AF624", VA = "0x7AF624", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x7AF7AC", Offset = "0x7AF7AC", VA = "0x7AF7AC")]
		protected void Start()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x7AF828", Offset = "0x7AF828", VA = "0x7AF828", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x7AF740", Offset = "0x7AF740", VA = "0x7AF740")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x7AF698", Offset = "0x7AF698", VA = "0x7AF698")]
		private void SetDoorRotation(Vector3 interacterPosition)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x7AF9CC", Offset = "0x7AF9CC", VA = "0x7AF9CC")]
		public Openable_Door()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class RC_Car : MonoBehaviour
	{
		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAcceleration;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float jumpPower;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float acceleration;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float movementSpeed;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotationSpeed;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isJumping;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 touchAxis;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float triggerAxis;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rb;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x7B116C", Offset = "0x7B116C", VA = "0x7B116C")]
		public void SetTouchAxis(Vector2 data)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x7B1174", Offset = "0x7B1174", VA = "0x7B1174")]
		public void SetTriggerAxis(float data)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x7B117C", Offset = "0x7B117C", VA = "0x7B117C")]
		public void ResetCar()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x7B1214", Offset = "0x7B1214", VA = "0x7B1214")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x7B12C4", Offset = "0x7B12C4", VA = "0x7B12C4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x7B1308", Offset = "0x7B1308", VA = "0x7B1308")]
		private void CalculateSpeed()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x7B16F8", Offset = "0x7B16F8", VA = "0x7B16F8")]
		private void Decelerate()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x7B13BC", Offset = "0x7B13BC", VA = "0x7B13BC")]
		private void Move()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x7B150C", Offset = "0x7B150C", VA = "0x7B150C")]
		private void Turn()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x7B1620", Offset = "0x7B1620", VA = "0x7B1620")]
		private void Jump()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x7B17E4", Offset = "0x7B17E4", VA = "0x7B17E4")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x7B17EC", Offset = "0x7B17EC", VA = "0x7B17EC")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x7B17F8", Offset = "0x7B17F8", VA = "0x7B17F8")]
		public RC_Car()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class RC_Car_Controller : MonoBehaviour
	{
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject rcCar;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RC_Car rcCarScript;

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x7B1820", Offset = "0x7B1820", VA = "0x7B1820")]
		private void Start()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x7B1A48", Offset = "0x7B1A48", VA = "0x7B1A48")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x7B1A80", Offset = "0x7B1A80", VA = "0x7B1A80")]
		private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x7B1AB0", Offset = "0x7B1AB0", VA = "0x7B1AB0")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x7B1B3C", Offset = "0x7B1B3C", VA = "0x7B1B3C")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x7B1B68", Offset = "0x7B1B68", VA = "0x7B1B68")]
		private void DoCarReset(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x7B1B94", Offset = "0x7B1B94", VA = "0x7B1B94")]
		public RC_Car_Controller()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class RealGun : VRTK_InteractableObject
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float bulletSpeed;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float bulletLife;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject bullet;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GameObject trigger;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private RealGun_Slide slide;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private RealGun_SafetySwitch safetySwitch;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Rigidbody slideRigidbody;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Collider slideCollider;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Rigidbody safetySwitchRigidbody;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Collider safetySwitchCollider;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private VRTK_ControllerEvents controllerEvents;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float minTriggerRotation;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float maxTriggerRotation;

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x969D20", Offset = "0x969D20", VA = "0x969D20")]
		private void ToggleCollision(Rigidbody objRB, Collider objCol, bool state)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x969D84", Offset = "0x969D84", VA = "0x969D84")]
		private void ToggleSlide(bool state)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x969E14", Offset = "0x969E14", VA = "0x969E14")]
		private void ToggleSafetySwitch(bool state)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x969E6C", Offset = "0x969E6C", VA = "0x969E6C", Slot = "26")]
		public override void Grabbed(VRTK_InteractGrab currentGrabbingObject)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x96A014", Offset = "0x96A014", VA = "0x96A014", Slot = "27")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x96A084", Offset = "0x96A084", VA = "0x96A084", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x96A438", Offset = "0x96A438", VA = "0x96A438", Slot = "64")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x96A670", Offset = "0x96A670", VA = "0x96A670", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x96A1F4", Offset = "0x96A1F4", VA = "0x96A1F4")]
		private void FireBullet()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x96A7F0", Offset = "0x96A7F0", VA = "0x96A7F0")]
		public RealGun()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class RealGun_SafetySwitch : VRTK_InteractableObject
	{
		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public bool safetyOff;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float offAngle;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Vector3 fixedPosition;

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x96A814", Offset = "0x96A814", VA = "0x96A814", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse currentUsingObject)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x96A850", Offset = "0x96A850", VA = "0x96A850")]
		protected void Start()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x96A898", Offset = "0x96A898", VA = "0x96A898", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x96A844", Offset = "0x96A844", VA = "0x96A844")]
		private void SetSafety(bool safety)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x96A988", Offset = "0x96A988", VA = "0x96A988")]
		public RealGun_SafetySwitch()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class RealGun_Slide : VRTK_InteractableObject
	{
		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float restPosition;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float fireTimer;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float fireDistance;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float boltSpeed;

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x96A1E8", Offset = "0x96A1E8", VA = "0x96A1E8")]
		public void Fire()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x96A9A0", Offset = "0x96A9A0", VA = "0x96A9A0", Slot = "64")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x96A9EC", Offset = "0x96A9EC", VA = "0x96A9EC", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x96AD00", Offset = "0x96AD00", VA = "0x96AD00")]
		public RealGun_Slide()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class Remote_Beam : MonoBehaviour
	{
		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 touchAxis;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rotationSpeed;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentYaw;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentPitch;

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x96AD20", Offset = "0x96AD20", VA = "0x96AD20")]
		public void SetTouchAxis(Vector2 data)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x96AD28", Offset = "0x96AD28", VA = "0x96AD28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x96AEE4", Offset = "0x96AEE4", VA = "0x96AEE4")]
		public Remote_Beam()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class Remote_Beam_Controller : MonoBehaviour
	{
		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject remoteBeam;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Remote_Beam remoteBeamScript;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x96AEF4", Offset = "0x96AEF4", VA = "0x96AEF4")]
		private void Start()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x96B020", Offset = "0x96B020", VA = "0x96B020")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x96B058", Offset = "0x96B058", VA = "0x96B058")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x96B0E4", Offset = "0x96B0E4", VA = "0x96B0E4")]
		public Remote_Beam_Controller()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class RendererOffOnDash : MonoBehaviour
	{
		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool wasSwitchedOff;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<VRTK_DashTeleport> dashTeleporters;

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x96B0EC", Offset = "0x96B0EC", VA = "0x96B0EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x96B41C", Offset = "0x96B41C", VA = "0x96B41C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x96B5D4", Offset = "0x96B5D4", VA = "0x96B5D4")]
		private void RendererOff(object sender, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x96B7D4", Offset = "0x96B7D4", VA = "0x96B7D4")]
		private void RendererOn(object sender, DashTeleportEventArgs e)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x96B73C", Offset = "0x96B73C", VA = "0x96B73C")]
		private void SwitchRenderer(GameObject go, bool enable)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x96B830", Offset = "0x96B830", VA = "0x96B830")]
		public RendererOffOnDash()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class SnapDropZoneGroup_Switcher : MonoBehaviour
	{
		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject cubeZone;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject sphereZone;

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x96B8A0", Offset = "0x96B8A0", VA = "0x96B8A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x96BC94", Offset = "0x96BC94", VA = "0x96BC94")]
		private void DoCubeZoneSnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x96BCC8", Offset = "0x96BCC8", VA = "0x96BCC8")]
		private void DoCubeZoneUnsnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x96BCFC", Offset = "0x96BCFC", VA = "0x96BCFC")]
		private void DoSphereZoneSnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x96BD30", Offset = "0x96BD30", VA = "0x96BD30")]
		private void DoSphereZoneUnsnapped(object sender, SnapDropZoneEventArgs e)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x96BD64", Offset = "0x96BD64", VA = "0x96BD64")]
		public SnapDropZoneGroup_Switcher()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class Sphere_Spawner : MonoBehaviour
	{
		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject spawnMe;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 position;

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x96BD6C", Offset = "0x96BD6C", VA = "0x96BD6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x96C06C", Offset = "0x96C06C", VA = "0x96C06C")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x96C0C4", Offset = "0x96C0C4", VA = "0x96C0C4")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x96C134", Offset = "0x96C134", VA = "0x96C134")]
		private void CreateSphere()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x96C224", Offset = "0x96C224", VA = "0x96C224")]
		public Sphere_Spawner()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class Sword : VRTK_InteractableObject
	{
		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float impactMagnifier;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float collisionForce;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float maxCollisionForce;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private VRTK_ControllerReference controllerReference;

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x96C22C", Offset = "0x96C22C", VA = "0x96C22C")]
		public float CollisionForce()
		{
			return default(float);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x96C234", Offset = "0x96C234", VA = "0x96C234", Slot = "26")]
		public override void Grabbed(VRTK_InteractGrab grabbingObject)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x96C2F0", Offset = "0x96C2F0", VA = "0x96C2F0", Slot = "27")]
		public override void Ungrabbed(VRTK_InteractGrab previousGrabbingObject)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x96C318", Offset = "0x96C318", VA = "0x96C318", Slot = "65")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x96C35C", Offset = "0x96C35C", VA = "0x96C35C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x96C4B0", Offset = "0x96C4B0", VA = "0x96C4B0")]
		public Sword()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class UI_Interactions : MonoBehaviour
	{
		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B08", Offset = "0x539B08")]
		private sealed class <CreateCanvasOnNextFrame>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000269")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026BB")]
				[Address(RVA = "0x973634", Offset = "0x973634", VA = "0x973634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026BD")]
				[Address(RVA = "0x9736A4", Offset = "0x9736A4", VA = "0x9736A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026B8")]
			[Address(RVA = "0x972B6C", Offset = "0x972B6C", VA = "0x972B6C")]
			[DebuggerHidden]
			public <CreateCanvasOnNextFrame>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60026B9")]
			[Address(RVA = "0x972BA0", Offset = "0x972BA0", VA = "0x972BA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026BA")]
			[Address(RVA = "0x972BA4", Offset = "0x972BA4", VA = "0x972BA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026BC")]
			[Address(RVA = "0x97363C", Offset = "0x97363C", VA = "0x97363C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EC3")]
		private const int EXISTING_CANVAS_COUNT = 4;

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x97270C", Offset = "0x97270C", VA = "0x97270C")]
		public void Button_Red()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x972778", Offset = "0x972778", VA = "0x972778")]
		public void Button_Pink()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x9727E4", Offset = "0x9727E4", VA = "0x9727E4")]
		public void Toggle(bool state)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x972884", Offset = "0x972884", VA = "0x972884")]
		public void Dropdown(int value)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x972934", Offset = "0x972934", VA = "0x972934")]
		public void SetDropText(BaseEventData data)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x972AE0", Offset = "0x972AE0", VA = "0x972AE0")]
		public void CreateCanvas()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x972B0C", Offset = "0x972B0C", VA = "0x972B0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5543D4", Offset = "0x5543D4")]
		private IEnumerator CreateCanvasOnNextFrame()
		{
			return null;
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x972B98", Offset = "0x972B98", VA = "0x972B98")]
		public UI_Interactions()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class UI_Keyboard : MonoBehaviour
	{
		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField input;

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x9736AC", Offset = "0x9736AC", VA = "0x9736AC")]
		public void ClickKey(string character)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x97370C", Offset = "0x97370C", VA = "0x97370C")]
		public void Backspace()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x973810", Offset = "0x973810", VA = "0x973810")]
		public void Enter()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x9738EC", Offset = "0x9738EC", VA = "0x9738EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x973944", Offset = "0x973944", VA = "0x973944")]
		public UI_Keyboard()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class UseRotate : VRTK_InteractableObject
	{
		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x548058", Offset = "0x548058")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548058", Offset = "0x548058")]
		private float idleSpinSpeed;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5480C8", Offset = "0x5480C8")]
		private float activeSpinSpeed;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548114", Offset = "0x548114")]
		[SerializeField]
		private Transform rotatingObject;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Vector3 rotationAxis;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float spinSpeed;

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x97394C", Offset = "0x97394C", VA = "0x97394C", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x973978", Offset = "0x973978", VA = "0x973978", Slot = "29")]
		public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x9739A8", Offset = "0x9739A8", VA = "0x9739A8")]
		protected void Start()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x973A38", Offset = "0x973A38", VA = "0x973A38", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x973AB8", Offset = "0x973AB8", VA = "0x973AB8")]
		public UseRotate()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class Whirlygig : VRTK_InteractableObject
	{
		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float spinSpeed;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Transform rotator;

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x97BC10", Offset = "0x97BC10", VA = "0x97BC10", Slot = "28")]
		public override void StartUsing(VRTK_InteractUse usingObject)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x97BC3C", Offset = "0x97BC3C", VA = "0x97BC3C", Slot = "29")]
		public override void StopUsing([Optional] VRTK_InteractUse previousUsingObject, bool resetUsingObjectState = true)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x97BC68", Offset = "0x97BC68", VA = "0x97BC68")]
		protected void Start()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x97BCDC", Offset = "0x97BCDC", VA = "0x97BCDC", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x97BD7C", Offset = "0x97BD7C", VA = "0x97BD7C")]
		public Whirlygig()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class VRTK_ControllerAppearance_Example : MonoBehaviour
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool highlightBodyOnlyOnCollision;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool pulseTriggerHighlightColor;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_ControllerTooltips tooltips;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRTK_ControllerHighlighter highligher;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VRTK_ControllerEvents events;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color highlightColor;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color pulseColor;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color currentPulseColor;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float highlightTimer;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pulseTimer;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float dimOpacity;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float defaultOpacity;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool highlighted;

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x973FCC", Offset = "0x973FCC", VA = "0x973FCC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x974568", Offset = "0x974568", VA = "0x974568")]
		private void PulseTrigger()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x97464C", Offset = "0x97464C", VA = "0x97464C")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x9747A8", Offset = "0x9747A8", VA = "0x9747A8")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x9748E4", Offset = "0x9748E4", VA = "0x9748E4")]
		private void DoButtonOnePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x974A04", Offset = "0x974A04", VA = "0x974A04")]
		private void DoButtonOneReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x974B20", Offset = "0x974B20", VA = "0x974B20")]
		private void DoButtonTwoPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x974C40", Offset = "0x974C40", VA = "0x974C40")]
		private void DoButtonTwoReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x974D5C", Offset = "0x974D5C", VA = "0x974D5C")]
		private void DoStartMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x974E7C", Offset = "0x974E7C", VA = "0x974E7C")]
		private void DoStartMenuReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x974F98", Offset = "0x974F98", VA = "0x974F98")]
		private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x9750D4", Offset = "0x9750D4", VA = "0x9750D4")]
		private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x9751EC", Offset = "0x9751EC", VA = "0x9751EC")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x97530C", Offset = "0x97530C", VA = "0x97530C")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x975428", Offset = "0x975428", VA = "0x975428")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x97542C", Offset = "0x97542C", VA = "0x97542C")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x975514", Offset = "0x975514", VA = "0x975514")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x9755A4", Offset = "0x9755A4", VA = "0x9755A4")]
		public VRTK_ControllerAppearance_Example()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class VRTK_ControllerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x9755F4", Offset = "0x9755F4", VA = "0x9755F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x976614", Offset = "0x976614", VA = "0x976614")]
		private void DebugLogger(uint index, string button, string action, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x976B44", Offset = "0x976B44", VA = "0x976B44")]
		private void DoTriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x976BF0", Offset = "0x976BF0", VA = "0x976BF0")]
		private void DoTriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x976C9C", Offset = "0x976C9C", VA = "0x976C9C")]
		private void DoTriggerTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x976D48", Offset = "0x976D48", VA = "0x976D48")]
		private void DoTriggerTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x976DF4", Offset = "0x976DF4", VA = "0x976DF4")]
		private void DoTriggerHairlineStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x976EA0", Offset = "0x976EA0", VA = "0x976EA0")]
		private void DoTriggerHairlineEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x976F4C", Offset = "0x976F4C", VA = "0x976F4C")]
		private void DoTriggerClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x976FF8", Offset = "0x976FF8", VA = "0x976FF8")]
		private void DoTriggerUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x9770A4", Offset = "0x9770A4", VA = "0x9770A4")]
		private void DoTriggerAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x977150", Offset = "0x977150", VA = "0x977150")]
		private void DoGripPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x9771FC", Offset = "0x9771FC", VA = "0x9771FC")]
		private void DoGripReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x9772A8", Offset = "0x9772A8", VA = "0x9772A8")]
		private void DoGripTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x977354", Offset = "0x977354", VA = "0x977354")]
		private void DoGripTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x977400", Offset = "0x977400", VA = "0x977400")]
		private void DoGripHairlineStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x9774AC", Offset = "0x9774AC", VA = "0x9774AC")]
		private void DoGripHairlineEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x977558", Offset = "0x977558", VA = "0x977558")]
		private void DoGripClicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x977604", Offset = "0x977604", VA = "0x977604")]
		private void DoGripUnclicked(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x9776B0", Offset = "0x9776B0", VA = "0x9776B0")]
		private void DoGripAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x97775C", Offset = "0x97775C", VA = "0x97775C")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x977808", Offset = "0x977808", VA = "0x977808")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x9778B4", Offset = "0x9778B4", VA = "0x9778B4")]
		private void DoTouchpadTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x977960", Offset = "0x977960", VA = "0x977960")]
		private void DoTouchpadTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x977A0C", Offset = "0x977A0C", VA = "0x977A0C")]
		private void DoTouchpadAxisChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x977AB8", Offset = "0x977AB8", VA = "0x977AB8")]
		private void DoButtonOnePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x977B64", Offset = "0x977B64", VA = "0x977B64")]
		private void DoButtonOneReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x977C10", Offset = "0x977C10", VA = "0x977C10")]
		private void DoButtonOneTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x977CBC", Offset = "0x977CBC", VA = "0x977CBC")]
		private void DoButtonOneTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x977D68", Offset = "0x977D68", VA = "0x977D68")]
		private void DoButtonTwoPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x977E14", Offset = "0x977E14", VA = "0x977E14")]
		private void DoButtonTwoReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x977EC0", Offset = "0x977EC0", VA = "0x977EC0")]
		private void DoButtonTwoTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x977F6C", Offset = "0x977F6C", VA = "0x977F6C")]
		private void DoButtonTwoTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x978018", Offset = "0x978018", VA = "0x978018")]
		private void DoButtonThreePressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x9780C4", Offset = "0x9780C4", VA = "0x9780C4")]
		private void DoButtonThreeReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x978170", Offset = "0x978170", VA = "0x978170")]
		private void DoButtonThreeTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x97821C", Offset = "0x97821C", VA = "0x97821C")]
		private void DoButtonThreeTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x9782C8", Offset = "0x9782C8", VA = "0x9782C8")]
		private void DoButtonFourPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x978374", Offset = "0x978374", VA = "0x978374")]
		private void DoButtonFourReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x978420", Offset = "0x978420", VA = "0x978420")]
		private void DoButtonFourTouchStart(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x9784CC", Offset = "0x9784CC", VA = "0x9784CC")]
		private void DoButtonFourTouchEnd(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x978578", Offset = "0x978578", VA = "0x978578")]
		private void DoStartMenuPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x978624", Offset = "0x978624", VA = "0x978624")]
		private void DoStartMenuReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x9786D0", Offset = "0x9786D0", VA = "0x9786D0")]
		private void DoControllerEnabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x97877C", Offset = "0x97877C", VA = "0x97877C")]
		private void DoControllerDisabled(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x978828", Offset = "0x978828", VA = "0x978828")]
		private void DoControllerIndexChanged(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x9788D4", Offset = "0x9788D4", VA = "0x9788D4")]
		public VRTK_ControllerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class VRTK_ControllerInteract_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x9788DC", Offset = "0x9788DC", VA = "0x9788DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x978C88", Offset = "0x978C88", VA = "0x978C88")]
		private void DebugLogger(uint index, string action, GameObject target)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x978F48", Offset = "0x978F48", VA = "0x978F48")]
		private void DoInteractTouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x97900C", Offset = "0x97900C", VA = "0x97900C")]
		private void DoInteractUntouch(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x9790D0", Offset = "0x9790D0", VA = "0x9790D0")]
		private void DoInteractGrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x979194", Offset = "0x979194", VA = "0x979194")]
		private void DoInteractUngrab(object sender, ObjectInteractEventArgs e)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x979258", Offset = "0x979258", VA = "0x979258")]
		public VRTK_ControllerInteract_ListenerExample()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class VRTK_ControllerPointerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showHoverState;

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x979260", Offset = "0x979260", VA = "0x979260")]
		private void Start()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x9795BC", Offset = "0x9795BC", VA = "0x9795BC")]
		private void DebugLogger(uint index, string action, Transform target, RaycastHit raycastHit, float distance, Vector3 tipPosition)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x979B6C", Offset = "0x979B6C", VA = "0x979B6C")]
		private void DoPointerIn(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x979C40", Offset = "0x979C40", VA = "0x979C40")]
		private void DoPointerOut(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x979D14", Offset = "0x979D14", VA = "0x979D14")]
		private void DoPointerHover(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x979DE8", Offset = "0x979DE8", VA = "0x979DE8")]
		private void DoPointerDestinationSet(object sender, DestinationMarkerEventArgs e)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x979EBC", Offset = "0x979EBC", VA = "0x979EBC")]
		public VRTK_ControllerPointerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class VRTK_ControllerUIPointerEvents_ListenerExample : MonoBehaviour
	{
		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool togglePointerOnHit;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x979EC4", Offset = "0x979EC4", VA = "0x979EC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x97A294", Offset = "0x97A294", VA = "0x97A294")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementEnter(object sender, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x97A6EC", Offset = "0x97A6EC", VA = "0x97A6EC")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementExit(object sender, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x97AA78", Offset = "0x97AA78", VA = "0x97AA78")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementClick(object sender, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x97AE40", Offset = "0x97AE40", VA = "0x97AE40")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementDragStart(object sender, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x97B208", Offset = "0x97B208", VA = "0x97B208")]
		private void VRTK_ControllerUIPointerEvents_ListenerExample_UIPointerElementDragEnd(object sender, VRTK_UIPointerEventArgs e)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x97B5D0", Offset = "0x97B5D0", VA = "0x97B5D0")]
		public VRTK_ControllerUIPointerEvents_ListenerExample()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class VRTK_RoomExtender_ControllerExample : MonoBehaviour
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_RoomExtender roomExtender;

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x97B5D8", Offset = "0x97B5D8", VA = "0x97B5D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x97BA20", Offset = "0x97BA20", VA = "0x97BA20")]
		private void DoTouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x97BB38", Offset = "0x97BB38", VA = "0x97BB38")]
		private void DoTouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x97BBA4", Offset = "0x97BBA4", VA = "0x97BBA4")]
		private void DoSwitchMovementFunction(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x97BADC", Offset = "0x97BADC", VA = "0x97BADC")]
		private void EnableAdditionalMovement()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x97BB0C", Offset = "0x97BB0C", VA = "0x97BB0C")]
		private void DisableAdditionalMovement()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x97BC08", Offset = "0x97BC08", VA = "0x97BC08")]
		public VRTK_RoomExtender_ControllerExample()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class Zipline : VRTK_InteractableObject
	{
		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x548170", Offset = "0x548170")]
		public float downStartSpeed;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public float acceleration;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public float upSpeed;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Transform handleEndPosition;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Transform handleStartPosition;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject handle;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool isMoving;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		private bool isMovingDown;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float currentSpeed;

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x97BD84", Offset = "0x97BD84", VA = "0x97BD84", Slot = "10")]
		public override void OnInteractableObjectGrabbed(InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x97BDB0", Offset = "0x97BDB0", VA = "0x97BDB0", Slot = "64")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x97BDDC", Offset = "0x97BDDC", VA = "0x97BDDC", Slot = "68")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x97C09C", Offset = "0x97C09C", VA = "0x97C09C")]
		public Zipline()
		{
		}
	}
}
namespace VRTK.Examples.Tests
{
	[Token(Token = "0x2000213")]
	public abstract class VRTK_BaseTest : MonoBehaviour
	{
		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B18", Offset = "0x539B18")]
		private sealed class <RunTests>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRTK_BaseTest <>4__this;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026C1")]
				[Address(RVA = "0x96CDE4", Offset = "0x96CDE4", VA = "0x96CDE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026C3")]
				[Address(RVA = "0x96CE54", Offset = "0x96CE54", VA = "0x96CE54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026BE")]
			[Address(RVA = "0x96CCFC", Offset = "0x96CCFC", VA = "0x96CCFC")]
			[DebuggerHidden]
			public <RunTests>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60026BF")]
			[Address(RVA = "0x96CD30", Offset = "0x96CD30", VA = "0x96CD30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0x96CD34", Offset = "0x96CD34", VA = "0x96CD34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0x96CDEC", Offset = "0x96CDEC", VA = "0x96CDEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string currentTest;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected string currentSetup;

		[Token(Token = "0x600170C")]
		protected abstract void Test();

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x96C4C8", Offset = "0x96C4C8", VA = "0x96C4C8", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x96C4FC", Offset = "0x96C4FC", VA = "0x96C4FC", Slot = "6")]
		protected virtual void BeginTest(string name, int level = 1)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x96C760", Offset = "0x96C760", VA = "0x96C760", Slot = "7")]
		protected virtual void SetUp(string message)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x96C804", Offset = "0x96C804", VA = "0x96C804", Slot = "8")]
		protected virtual void TearDown()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x96C870", Offset = "0x96C870", VA = "0x96C870", Slot = "9")]
		protected virtual void Assert(string description, bool assertion, string failure, string success = "")
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x96CC88", Offset = "0x96CC88", VA = "0x96CC88", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554438", Offset = "0x554438")]
		protected virtual IEnumerator RunTests()
		{
			return null;
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x96CD28", Offset = "0x96CD28", VA = "0x96CD28")]
		protected VRTK_BaseTest()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class VRTK_ControllerReference_Setup : VRTK_BaseTest
	{
		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint overrideActualIndex;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject overrideActualController;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject overrideAliasController;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject overrideModelController;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SDK_BaseController.ControllerHand actualControllerHand;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ControllerReference testReference;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected uint actualIndex;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject actualController;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected GameObject aliasController;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected GameObject modelController;

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x96CE5C", Offset = "0x96CE5C", VA = "0x96CE5C", Slot = "7")]
		protected override void SetUp(string message)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x96D050", Offset = "0x96D050", VA = "0x96D050", Slot = "8")]
		protected override void TearDown()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x96D084", Offset = "0x96D084", VA = "0x96D084", Slot = "4")]
		protected override void Test()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x96D178", Offset = "0x96D178", VA = "0x96D178", Slot = "11")]
		protected virtual List<SDK_BaseController.ControllerHand> GetOtherHands(SDK_BaseController.ControllerHand ignore)
		{
			return null;
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x96D260", Offset = "0x96D260", VA = "0x96D260", Slot = "12")]
		protected virtual void TestNullState()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x96D308", Offset = "0x96D308", VA = "0x96D308", Slot = "13")]
		protected virtual void TestStaticIndex()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x96E2F8", Offset = "0x96E2F8", VA = "0x96E2F8", Slot = "14")]
		protected virtual void TestStaticActual()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x96F2E8", Offset = "0x96F2E8", VA = "0x96F2E8", Slot = "15")]
		protected virtual void TestStaticAlias()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x9702D8", Offset = "0x9702D8", VA = "0x9702D8", Slot = "16")]
		protected virtual void TestStaticModel()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x9712C8", Offset = "0x9712C8", VA = "0x9712C8", Slot = "17")]
		protected virtual void TestStaticHand()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x9722B8", Offset = "0x9722B8", VA = "0x9722B8", Slot = "18")]
		protected virtual void TestStaticIsValid()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x972478", Offset = "0x972478", VA = "0x972478", Slot = "19")]
		protected virtual void TestStaticGetRealIndex()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x9726F4", Offset = "0x9726F4", VA = "0x9726F4")]
		public VRTK_ControllerReference_Setup()
		{
		}
	}
}
namespace VRTK.Examples.Utilities
{
	[Token(Token = "0x2000215")]
	public class SceneChanger : MonoBehaviour
	{
		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool canPress;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_ControllerReference controllerReference;

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x973B3C", Offset = "0x973B3C", VA = "0x973B3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x973BA0", Offset = "0x973BA0", VA = "0x973BA0")]
		private bool IsForwardPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x973CD4", Offset = "0x973CD4", VA = "0x973CD4")]
		private bool IsBackPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x973E08", Offset = "0x973E08", VA = "0x973E08")]
		private void ResetPress()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x973E14", Offset = "0x973E14", VA = "0x973E14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x973FC4", Offset = "0x973FC4", VA = "0x973FC4")]
		public SceneChanger()
		{
		}
	}
}
namespace VRTK.Examples.PanelMenu
{
	[Token(Token = "0x2000216")]
	public class PanelMenuDemoFlyingSaucer : MonoBehaviour
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color[] colors;

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x7AF9E0", Offset = "0x7AF9E0", VA = "0x7AF9E0")]
		public void UpdateGridLayoutValue(int selectedIndex)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x7AFB24", Offset = "0x7AFB24", VA = "0x7AFB24")]
		public PanelMenuDemoFlyingSaucer()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class PanelMenuDemoSphere : MonoBehaviour
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color[] colors;

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x7AFD80", Offset = "0x7AFD80", VA = "0x7AFD80")]
		public void UpdateSliderValue(float value)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x7AFE9C", Offset = "0x7AFE9C", VA = "0x7AFE9C")]
		public PanelMenuDemoSphere()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class PanelMenuUIGrid : MonoBehaviour
	{
		[Token(Token = "0x20004D0")]
		public enum Direction
		{
			[Token(Token = "0x40019EB")]
			None,
			[Token(Token = "0x40019EC")]
			Up,
			[Token(Token = "0x40019ED")]
			Down,
			[Token(Token = "0x40019EE")]
			Left,
			[Token(Token = "0x40019EF")]
			Right
		}

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color colorDefault;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Color colorSelected;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float colorAlpha;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GridLayoutGroup gridLayoutGroup;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int selectedIndex;

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x7B0170", Offset = "0x7B0170", VA = "0x7B0170")]
		private void Start()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x7B0A00", Offset = "0x7B0A00", VA = "0x7B0A00")]
		public bool MoveSelectGridLayoutItem(Direction direction, GameObject interactableObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x7B0A44", Offset = "0x7B0A44", VA = "0x7B0A44")]
		private int FindNextItemBasedOnMoveDirection(Direction direction)
		{
			return default(int);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x7B052C", Offset = "0x7B052C", VA = "0x7B052C")]
		private void SetGridLayoutItemSelectedState(int index)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x7B0BE4", Offset = "0x7B0BE4", VA = "0x7B0BE4")]
		private void OnPanelMenuItemSwipeTop(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x7B0BEC", Offset = "0x7B0BEC", VA = "0x7B0BEC")]
		private void OnPanelMenuItemSwipeBottom(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x7B0BF4", Offset = "0x7B0BF4", VA = "0x7B0BF4")]
		private void OnPanelMenuItemSwipeLeft(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x7B0BFC", Offset = "0x7B0BFC", VA = "0x7B0BFC")]
		private void OnPanelMenuItemSwipeRight(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x7B0C04", Offset = "0x7B0C04", VA = "0x7B0C04")]
		private void OnPanelMenuItemTriggerPressed(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x7B0C0C", Offset = "0x7B0C0C", VA = "0x7B0C0C")]
		private void SendMessageToInteractableObject(GameObject interactableObject)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x7B0CA0", Offset = "0x7B0CA0", VA = "0x7B0CA0")]
		public PanelMenuUIGrid()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class PanelMenuUISlider : MonoBehaviour
	{
		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider slider;

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x7B0CEC", Offset = "0x7B0CEC", VA = "0x7B0CEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x7B0FA0", Offset = "0x7B0FA0", VA = "0x7B0FA0")]
		private void OnPanelMenuItemSwipeLeft(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x7B10DC", Offset = "0x7B10DC", VA = "0x7B10DC")]
		private void OnPanelMenuItemSwipeRight(object sender, PanelMenuItemControllerEventArgs e)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x7B1028", Offset = "0x7B1028", VA = "0x7B1028")]
		private void SendMessageToInteractableObject(GameObject interactableObject)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x7B1164", Offset = "0x7B1164", VA = "0x7B1164")]
		public PanelMenuUISlider()
		{
		}
	}
}
namespace VRTK.Examples.Archery
{
	[Token(Token = "0x200021A")]
	public class Arrow : MonoBehaviour
	{
		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxArrowLife;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool inFlight;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool collided;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject arrowHolder;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 originalPosition;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion originalRotation;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 originalScale;

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x7A97B8", Offset = "0x7A97B8", VA = "0x7A97B8")]
		public void SetArrowHolder(GameObject holder)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x7A97F0", Offset = "0x7A97F0", VA = "0x7A97F0")]
		public void OnNock()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x7A97F8", Offset = "0x7A97F8", VA = "0x7A97F8")]
		public void Fired()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x7A9894", Offset = "0x7A9894", VA = "0x7A9894")]
		public void ResetArrow()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x7A9C14", Offset = "0x7A9C14", VA = "0x7A9C14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x7A9C70", Offset = "0x7A9C70", VA = "0x7A9C70")]
		private void SetOrigns()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x7A9D0C", Offset = "0x7A9D0C", VA = "0x7A9D0C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x7A9E64", Offset = "0x7A9E64", VA = "0x7A9E64")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x7A98C0", Offset = "0x7A98C0", VA = "0x7A98C0")]
		private void RecreateNotch()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x7A9A48", Offset = "0x7A9A48", VA = "0x7A9A48")]
		private void ResetTransform()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x7A9800", Offset = "0x7A9800", VA = "0x7A9800")]
		private void DestroyArrow(float time)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x7A9EA8", Offset = "0x7A9EA8", VA = "0x7A9EA8")]
		public Arrow()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class ArrowNotch : MonoBehaviour
	{
		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject arrow;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRTK_InteractableObject obj;

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x7A9EB8", Offset = "0x7A9EB8", VA = "0x7A9EB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x7A9F5C", Offset = "0x7A9F5C", VA = "0x7A9F5C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x7AA1C8", Offset = "0x7AA1C8", VA = "0x7AA1C8")]
		private void CopyNotchToArrow()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x7AA394", Offset = "0x7AA394", VA = "0x7AA394")]
		public ArrowNotch()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class ArrowSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject arrowPrefab;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnDelay;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float spawnDelayTimer;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BowAim bow;

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x7AA39C", Offset = "0x7AA39C", VA = "0x7AA39C")]
		private void Start()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x7AA3A4", Offset = "0x7AA3A4", VA = "0x7AA3A4")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x7AA5C8", Offset = "0x7AA5C8", VA = "0x7AA5C8")]
		private bool CanGrab(VRTK_InteractGrab grabbingController)
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x7AA6A4", Offset = "0x7AA6A4", VA = "0x7AA6A4")]
		private bool NoArrowNotched(GameObject controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x7AA910", Offset = "0x7AA910", VA = "0x7AA910")]
		public ArrowSpawner()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class BowAim : MonoBehaviour
	{
		[Token(Token = "0x20004D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B28", Offset = "0x539B28")]
		private sealed class <GetBaseRotation>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BowAim <>4__this;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026C7")]
				[Address(RVA = "0x7ABB14", Offset = "0x7ABB14", VA = "0x7ABB14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026C9")]
				[Address(RVA = "0x7ABB84", Offset = "0x7ABB84", VA = "0x7ABB84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0x7AABEC", Offset = "0x7AABEC", VA = "0x7AABEC")]
			[DebuggerHidden]
			public <GetBaseRotation>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x7ABA10", Offset = "0x7ABA10", VA = "0x7ABA10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x7ABA14", Offset = "0x7ABA14", VA = "0x7ABA14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026C8")]
			[Address(RVA = "0x7ABB1C", Offset = "0x7ABB1C", VA = "0x7ABB1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float powerMultiplier;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pullMultiplier;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pullOffset;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxPullDistance;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float bowVibration;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float stringVibration;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BowAnimation bowAnimation;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject currentArrow;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BowHandle handle;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VRTK_InteractableObject interact;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRTK_InteractGrab holdControl;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRTK_InteractGrab stringControl;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion releaseRotation;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion baseRotation;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool fired;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fireOffset;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float currentPull;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float previousPull;

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x7AA920", Offset = "0x7AA920", VA = "0x7AA920")]
		public VRTK_InteractGrab GetPullHand()
		{
			return null;
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x7AA18C", Offset = "0x7AA18C", VA = "0x7AA18C")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x7AA8A0", Offset = "0x7AA8A0", VA = "0x7AA8A0")]
		public bool HasArrow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x7AA38C", Offset = "0x7AA38C", VA = "0x7AA38C")]
		public void SetArrow(GameObject arrow)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x7AA928", Offset = "0x7AA928", VA = "0x7AA928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x7AAA00", Offset = "0x7AAA00", VA = "0x7AAA00")]
		private void DoObjectGrab(object sender, InteractableObjectEventArgs e)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x7AAB78", Offset = "0x7AAB78", VA = "0x7AAB78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55449C", Offset = "0x55449C")]
		private IEnumerator GetBaseRotation()
		{
			return null;
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x7AAC18", Offset = "0x7AAC18", VA = "0x7AAC18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x7AB520", Offset = "0x7AB520", VA = "0x7AB520")]
		private void Release()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x7AB948", Offset = "0x7AB948", VA = "0x7AB948")]
		private void ReleaseArrow()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x7AAF4C", Offset = "0x7AAF4C", VA = "0x7AAF4C")]
		private void AimArrow()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x7AB090", Offset = "0x7AB090", VA = "0x7AB090")]
		private void AimBow()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x7AB2A4", Offset = "0x7AB2A4", VA = "0x7AB2A4")]
		private void PullString()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x7AB9E8", Offset = "0x7AB9E8", VA = "0x7AB9E8")]
		public BowAim()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class BowAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animation animationTimeline;

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x7AB858", Offset = "0x7AB858", VA = "0x7AB858")]
		public void SetFrame(float frame)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x7ABB8C", Offset = "0x7ABB8C", VA = "0x7ABB8C")]
		public BowAnimation()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class BowHandle : MonoBehaviour
	{
		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform arrowNockingPoint;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BowAim aim;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform nockSide;

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x7ABB94", Offset = "0x7ABB94", VA = "0x7ABB94")]
		public BowHandle()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class Follow : MonoBehaviour
	{
		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool followPosition;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool followRotation;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x7ABB9C", Offset = "0x7ABB9C", VA = "0x7ABB9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x7ABDCC", Offset = "0x7ABDCC", VA = "0x7ABDCC")]
		public Follow()
		{
		}
	}
}
namespace Tutorial
{
	[Token(Token = "0x2000221")]
	public class Stage : MonoBehaviour
	{
		[Token(Token = "0x20004D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B38", Offset = "0x539B38")]
		private sealed class <_PulseMaterial>d__21 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stage <>4__this;

			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material materialToPulse;

			[Token(Token = "0x40019F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x40019F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <pulseColorActive>5__3;

			[Token(Token = "0x1700026F")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60026CD")]
				[Address(RVA = "0x79D8A8", Offset = "0x79D8A8", VA = "0x79D8A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026CF")]
				[Address(RVA = "0x79D918", Offset = "0x79D918", VA = "0x79D918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026CA")]
			[Address(RVA = "0x79D640", Offset = "0x79D640", VA = "0x79D640")]
			[DebuggerHidden]
			public <_PulseMaterial>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60026CB")]
			[Address(RVA = "0x79D718", Offset = "0x79D718", VA = "0x79D718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026CC")]
			[Address(RVA = "0x79D71C", Offset = "0x79D71C", VA = "0x79D71C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0x79D8B0", Offset = "0x79D8B0", VA = "0x79D8B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected VRTK_ControllerTooltips toolTipsL;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected VRTK_ControllerTooltips toolTipsR;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected VRTK_ObjectTooltip triggerToolTipL;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected VRTK_ObjectTooltip touchpadToolTipL;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected VRTK_ObjectTooltip startMenuToopTipL;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected VRTK_ObjectTooltip buttonOneToolTipL;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected VRTK_ObjectTooltip buttonTwoToolTipL;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected VRTK_ObjectTooltip triggerToolTipR;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRTK_ObjectTooltip touchpadToolTipR;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRTK_ObjectTooltip startMenuToopTipR;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected VRTK_ObjectTooltip buttonOneToolTipR;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRTK_ObjectTooltip buttonTwoToolTipR;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected VRTK_ControllerEvents controllerEventsL;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected VRTK_ControllerEvents controllerEventsR;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected TutorialManager tutorialManager;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public bool running;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[HideInInspector]
		public bool stageFinished;

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x79D27C", Offset = "0x79D27C", VA = "0x79D27C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x79D324", Offset = "0x79D324", VA = "0x79D324", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x79D4EC", Offset = "0x79D4EC", VA = "0x79D4EC", Slot = "6")]
		public virtual void RunStage()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x79D4F8", Offset = "0x79D4F8", VA = "0x79D4F8", Slot = "7")]
		protected virtual void EndStage()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x79D5A8", Offset = "0x79D5A8", VA = "0x79D5A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554500", Offset = "0x554500")]
		protected IEnumerator<float> _PulseMaterial(Material materialToPulse)
		{
			return null;
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x79D66C", Offset = "0x79D66C", VA = "0x79D66C")]
		protected void ResetColor(Material materialToReset)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x79D710", Offset = "0x79D710", VA = "0x79D710")]
		public Stage()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class Stage1 : Stage
	{
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5481F8", Offset = "0x5481F8")]
		[SerializeField]
		private string freedrawToolText;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string freedrawToolTextID;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548254", Offset = "0x548254")]
		[SerializeField]
		private Vector2 newContainerSize;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5482A0", Offset = "0x5482A0")]
		[SerializeField]
		private float lineStartOffset;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5482EC", Offset = "0x5482EC")]
		[SerializeField]
		private Material triggerMaterialL;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548338", Offset = "0x548338")]
		[SerializeField]
		private Material triggerMaterialR;

		[Token(Token = "0x4000F39")]
		private const string triggerPulseRoutine = "stage1TriggerPulse";

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x79D97C", Offset = "0x79D97C", VA = "0x79D97C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x79DA50", Offset = "0x79DA50", VA = "0x79DA50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x79DB24", Offset = "0x79DB24", VA = "0x79DB24")]
		private void TriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x79DB3C", Offset = "0x79DB3C", VA = "0x79DB3C", Slot = "6")]
		public override void RunStage()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x79DEAC", Offset = "0x79DEAC", VA = "0x79DEAC", Slot = "7")]
		protected override void EndStage()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x79DF3C", Offset = "0x79DF3C", VA = "0x79DF3C")]
		public Stage1()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class Stage2 : Stage
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548384", Offset = "0x548384")]
		[SerializeField]
		private string movementToolText;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string movementToolTextID;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5483E0", Offset = "0x5483E0")]
		[SerializeField]
		private Vector2 newContainerSizeMovement;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54842C", Offset = "0x54842C")]
		[SerializeField]
		private float lineStartOffsetMovement;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548478", Offset = "0x548478")]
		[SerializeField]
		private string rotationToolText;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string rotationToolTextID;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5484D4", Offset = "0x5484D4")]
		[SerializeField]
		private Vector2 newContainerSizeRotation;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548520", Offset = "0x548520")]
		[SerializeField]
		private float lineStartOffsetRotation;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54856C", Offset = "0x54856C")]
		[SerializeField]
		private Material buttonOneMaterialR;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5485B8", Offset = "0x5485B8")]
		[SerializeField]
		private Material buttonOneMaterialL;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool movementButtonPressed;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool rotationButtonpressed;

		[Token(Token = "0x4000F46")]
		private const string movementButtonPulseRoutine = "stage2Pulse";

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x79DF94", Offset = "0x79DF94", VA = "0x79DF94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x79E068", Offset = "0x79E068", VA = "0x79E068")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x79E13C", Offset = "0x79E13C", VA = "0x79E13C")]
		private void ButtonOnePressedL(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x79E164", Offset = "0x79E164", VA = "0x79E164")]
		private void ButtonOnePressedR(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x79E18C", Offset = "0x79E18C", VA = "0x79E18C", Slot = "6")]
		public override void RunStage()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x79E498", Offset = "0x79E498", VA = "0x79E498", Slot = "7")]
		protected override void EndStage()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x79E52C", Offset = "0x79E52C", VA = "0x79E52C")]
		public Stage2()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class Stage3 : Stage
	{
		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B48", Offset = "0x539B48")]
		private sealed class <_PulseTool>d__36 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float interval;

			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Stage3 <>4__this;

			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x40019FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <pulseUp>5__3;

			[Token(Token = "0x40019FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color <newColor>5__4;

			[Token(Token = "0x17000271")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60026D3")]
				[Address(RVA = "0x79F6E8", Offset = "0x79F6E8", VA = "0x79F6E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026D5")]
				[Address(RVA = "0x79F758", Offset = "0x79F758", VA = "0x79F758", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026D0")]
			[Address(RVA = "0x79F4D4", Offset = "0x79F4D4", VA = "0x79F4D4")]
			[DebuggerHidden]
			public <_PulseTool>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60026D1")]
			[Address(RVA = "0x79F56C", Offset = "0x79F56C", VA = "0x79F56C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0x79F570", Offset = "0x79F570", VA = "0x79F570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0x79F6F0", Offset = "0x79F6F0", VA = "0x79F6F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548604", Offset = "0x548604")]
		[SerializeField]
		private string toolSelectionText;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string toolSelectionTextID;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548660", Offset = "0x548660")]
		[SerializeField]
		private Vector2 newContainerSizeToolSelection;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5486AC", Offset = "0x5486AC")]
		[SerializeField]
		private float lineStartOffsetToolSelection;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5486F8", Offset = "0x5486F8")]
		[SerializeField]
		private string triggerButtonText;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string triggerButtonTextID;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548754", Offset = "0x548754")]
		[SerializeField]
		private Vector2 newContainerSizeTriggerButton;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5487A0", Offset = "0x5487A0")]
		[SerializeField]
		private float lineStartOffsetTriggerButton;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5487EC", Offset = "0x5487EC")]
		[SerializeField]
		private string makingBoxText;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string makingBoxTextID;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548848", Offset = "0x548848")]
		[SerializeField]
		private Vector2 newContainerSizeMakeBox;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548894", Offset = "0x548894")]
		[SerializeField]
		private float lineStartOffsetMakeBox;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5488E0", Offset = "0x5488E0")]
		[SerializeField]
		private Material toolSelectionMaterial;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54892C", Offset = "0x54892C")]
		[SerializeField]
		private Material triggerMaterialL;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548978", Offset = "0x548978")]
		[SerializeField]
		private Material triggerMaterialR;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5489C4", Offset = "0x5489C4")]
		[SerializeField]
		private float scalableBoxToolBlinkAmount;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548A10", Offset = "0x548A10")]
		[SerializeField]
		private Image scalableBoxToolImage;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548A5C", Offset = "0x548A5C")]
		[SerializeField]
		private Image boxToolImage;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool toolSelectionButtonBeingPressed;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool scalableBoxSelected;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Tool scalableBoxTool;

		[Token(Token = "0x4000F5C")]
		private const string toolSelectionButtonPulseRoutine = "stage3ToolSelectionPulse";

		[Token(Token = "0x4000F5D")]
		private const string toolIconPulseRoutine = "stage3ToolIconPulse";

		[Token(Token = "0x4000F5E")]
		private const string leftTriggerPulseRoutine = "stage3LeftTriggerPulse";

		[Token(Token = "0x4000F5F")]
		private const string rightTriggerPulseRoutine = "stage3RightTriggerPulse";

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x79E588", Offset = "0x79E588", VA = "0x79E588", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x79E5C4", Offset = "0x79E5C4", VA = "0x79E5C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x79E758", Offset = "0x79E758", VA = "0x79E758")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x79E8EC", Offset = "0x79E8EC", VA = "0x79E8EC")]
		private void TouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x79ECC8", Offset = "0x79ECC8", VA = "0x79ECC8")]
		private void TouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x79EDE0", Offset = "0x79EDE0", VA = "0x79EDE0")]
		private void TriggerPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x79EE08", Offset = "0x79EE08", VA = "0x79EE08")]
		private void ToolChanged()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x79F104", Offset = "0x79F104", VA = "0x79F104", Slot = "6")]
		public override void RunStage()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x79EEDC", Offset = "0x79EEDC", VA = "0x79EEDC")]
		public void ScalableBoxSelected(bool selected)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x79EB40", Offset = "0x79EB40", VA = "0x79EB40")]
		private void HighLightScalableBoxTool(bool highLight)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x79F3C8", Offset = "0x79F3C8", VA = "0x79F3C8", Slot = "7")]
		protected override void EndStage()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x79F330", Offset = "0x79F330", VA = "0x79F330")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554564", Offset = "0x554564")]
		private IEnumerator<float> _PulseTool(float interval)
		{
			return null;
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x79F500", Offset = "0x79F500", VA = "0x79F500")]
		public Stage3()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class Stage4 : Stage
	{
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548AA8", Offset = "0x548AA8")]
		[SerializeField]
		private string colorWheelText;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string colorWheelTextID;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548B04", Offset = "0x548B04")]
		[SerializeField]
		private Vector2 newContainerSizeColorWheel;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548B50", Offset = "0x548B50")]
		[SerializeField]
		private float lineStartOffsetColorWheel;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548B9C", Offset = "0x548B9C")]
		[SerializeField]
		private string triggerButtonText;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string triggerButtonTextID;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548BF8", Offset = "0x548BF8")]
		[SerializeField]
		private Vector2 newContainerSizeTriggerButton;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548C44", Offset = "0x548C44")]
		[SerializeField]
		private float lineStartOffsetTriggerButton;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548C90", Offset = "0x548C90")]
		[SerializeField]
		private Material colorWheelButtonMaterial;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548CDC", Offset = "0x548CDC")]
		[SerializeField]
		private Material rightHandTriggerMaterial;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548D28", Offset = "0x548D28")]
		[SerializeField]
		private GameObject colorWheelArtificialLines;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548D74", Offset = "0x548D74")]
		public VRTK_ObjectTooltip colorWheelToolTip;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548DAC", Offset = "0x548DAC")]
		public VRTK_ObjectTooltip threeSoundsToolTip;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool colorWheelButtonBeingPressed;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool colorHasChanged;

		[Token(Token = "0x4000F6F")]
		private const string colorWheelButtonPulseRoutine = "stage4ColorWheelPulse";

		[Token(Token = "0x4000F70")]
		private const string triggerButtonPulseRoutine = "stage4TriggerPulse";

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x79F7BC", Offset = "0x79F7BC", VA = "0x79F7BC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x79F908", Offset = "0x79F908", VA = "0x79F908")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x79FA9C", Offset = "0x79FA9C", VA = "0x79FA9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x79FC30", Offset = "0x79FC30", VA = "0x79FC30")]
		private void TouchpadPressed(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x79FE04", Offset = "0x79FE04", VA = "0x79FE04")]
		private void TouchpadReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x79FF1C", Offset = "0x79FF1C", VA = "0x79FF1C")]
		private void TriggerReleased(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x79FF88", Offset = "0x79FF88", VA = "0x79FF88")]
		private void ColorChanged()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x79FF94", Offset = "0x79FF94", VA = "0x79FF94", Slot = "6")]
		public override void RunStage()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x7A01D4", Offset = "0x7A01D4", VA = "0x7A01D4", Slot = "7")]
		protected override void EndStage()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x79F854", Offset = "0x79F854", VA = "0x79F854")]
		private void ToggleColorWheelTips(bool show)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x7A0278", Offset = "0x7A0278", VA = "0x7A0278")]
		public Stage4()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class Stage5 : Stage
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x548DE4", Offset = "0x548DE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548DE4", Offset = "0x548DE4")]
		[SerializeField]
		private string toolSelectionText;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string toolSelectionTextID;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548E64", Offset = "0x548E64")]
		[SerializeField]
		private Vector2 toolSelectionNewContainerSize;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548EB0", Offset = "0x548EB0")]
		[SerializeField]
		private float toolSelectionLineStartOffset;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548EFC", Offset = "0x548EFC")]
		[SerializeField]
		private string toolQuickbindText;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string toolQuickbindTextID;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548F58", Offset = "0x548F58")]
		[SerializeField]
		private Vector2 toolNewContainerSizeQuickbind;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548FA4", Offset = "0x548FA4")]
		[SerializeField]
		private float toolLineStartOffsetQuickbind;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x548FF0", Offset = "0x548FF0")]
		[SerializeField]
		private Material quickbindMaterialL;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54903C", Offset = "0x54903C")]
		[SerializeField]
		private Material toolSelectionMaterial;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x549088", Offset = "0x549088")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x549088", Offset = "0x549088")]
		[SerializeField]
		private string colorWheelText;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string colorWheelTextID;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x549108", Offset = "0x549108")]
		[SerializeField]
		private Vector2 colorWheelNewContainerSize;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x549154", Offset = "0x549154")]
		[SerializeField]
		private float colorWheelLineStartOffset;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5491A0", Offset = "0x5491A0")]
		[SerializeField]
		private string colorQuickbindText;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string colorQuickbindTextID;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5491FC", Offset = "0x5491FC")]
		[SerializeField]
		private Vector2 colorNewContainerSizeQuickbind;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x549248", Offset = "0x549248")]
		[SerializeField]
		private float colorLineStartOffsetQuickbind;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x549294", Offset = "0x549294")]
		[SerializeField]
		private Material quickbindMaterialR;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5492E0", Offset = "0x5492E0")]
		[SerializeField]
		private Material colorWheelButtonMaterial;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool toolQuickbinded;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool colorQuickbinded;

		[Token(Token = "0x4000F87")]
		private const string toolselectionButtonPulseRoutine = "stage5ToolSelectionPulse";

		[Token(Token = "0x4000F88")]
		private const string toolQuickbindPulseRoutine = "stage5ToolBindRoutine";

		[Token(Token = "0x4000F89")]
		private const string colorWheelButtonPulseRoutine = "stage5ColorWheelPulse";

		[Token(Token = "0x4000F8A")]
		private const string colorQuickbindPulseRoutine = "stage5ColorBindRoutine";

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x7A02D4", Offset = "0x7A02D4", VA = "0x7A02D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x7A0498", Offset = "0x7A0498", VA = "0x7A0498")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x7A05D4", Offset = "0x7A05D4", VA = "0x7A05D4")]
		private void TouchpadPressedR(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x7A07C0", Offset = "0x7A07C0", VA = "0x7A07C0")]
		private void TouchpadReleasedR(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x7A08FC", Offset = "0x7A08FC", VA = "0x7A08FC")]
		private void TouchpadPressedL(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x7A0AF4", Offset = "0x7A0AF4", VA = "0x7A0AF4")]
		private void TouchpadReleasedL(object sender, ControllerInteractionEventArgs e)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x7A0C10", Offset = "0x7A0C10", VA = "0x7A0C10")]
		private void ToolQuickbinded()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x7A0E24", Offset = "0x7A0E24", VA = "0x7A0E24")]
		private void ColorQuickbinded()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x7A0E4C", Offset = "0x7A0E4C", VA = "0x7A0E4C", Slot = "6")]
		public override void RunStage()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x7A1134", Offset = "0x7A1134", VA = "0x7A1134", Slot = "7")]
		protected override void EndStage()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x7A1218", Offset = "0x7A1218", VA = "0x7A1218")]
		public Stage5()
		{
		}
	}
}
namespace Peril.Physics
{
	[Token(Token = "0x2000227")]
	public struct CollisionResult
	{
		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Collides;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 Normal;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Penetration;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CollisionType Type;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool First;
	}
	[Token(Token = "0x2000228")]
	public abstract class CollisionSystem
	{
		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<ICollisionBody> bodyList;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HashSet<int> _pairs;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> _pairCache;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<ICollisionBody> vacuumBodys;

		[Token(Token = "0x4000F94")]
		public const int MaxCollisionBodies = 10000;

		[Token(Token = "0x600179A")]
		public abstract void DetectBodyVsBody(ICollisionBody bodyToCompare);

		[Token(Token = "0x600179B")]
		public abstract bool LineOfSight(Vector3 start, Vector3 end);

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x893FC0", Offset = "0x893FC0", VA = "0x893FC0", Slot = "6")]
		public virtual bool AddBody(ICollisionBody body)
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x894038", Offset = "0x894038", VA = "0x894038", Slot = "7")]
		public virtual void AddVacuum(ICollisionBody vacuum)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x8940A8", Offset = "0x8940A8", VA = "0x8940A8", Slot = "8")]
		public virtual bool RemoveBody(ICollisionBody body)
		{
			return default(bool);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x894118", Offset = "0x894118", VA = "0x894118", Slot = "9")]
		public virtual void Step(ICollisionBody bodyToCompare)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x894124", Offset = "0x894124", VA = "0x894124")]
		public ICollisionBody FindCollisionBody(int refId)
		{
			return null;
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x894294", Offset = "0x894294", VA = "0x894294")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x894624", Offset = "0x894624", VA = "0x894624")]
		protected bool Test(ICollisionBody vacuum, ICollisionBody body, bool removePair = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x894BB4", Offset = "0x894BB4", VA = "0x894BB4")]
		private bool FindCollisionPair(ICollisionBody a, ICollisionBody b, bool remove = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x894A54", Offset = "0x894A54", VA = "0x894A54")]
		private void CacheCollisionPair(ICollisionBody a, ICollisionBody b)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x894968", Offset = "0x894968", VA = "0x894968")]
		private static bool TestCollisionShapes(ICollisionShape a, ICollisionShape b, ref CollisionResult result)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x894D50", Offset = "0x894D50", VA = "0x894D50")]
		protected CollisionSystem()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class CollisionSystemBrute : CollisionSystem
	{
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ICollisionBody vacuum;

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x894E3C", Offset = "0x894E3C", VA = "0x894E3C", Slot = "4")]
		public override void DetectBodyVsBody(ICollisionBody bodyToCompare)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x89505C", Offset = "0x89505C", VA = "0x89505C")]
		public new void AddVacuum(ICollisionBody vacuumBody)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x895064", Offset = "0x895064", VA = "0x895064", Slot = "5")]
		public override bool LineOfSight(Vector3 start, Vector3 end)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x895754", Offset = "0x895754", VA = "0x895754")]
		public CollisionSystemBrute()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class CollisionSystemQuadTree : CollisionSystem
	{
		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private QuadTree _quadTree;

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x895758", Offset = "0x895758", VA = "0x895758")]
		public CollisionSystemQuadTree(QuadTree tree)
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x895780", Offset = "0x895780", VA = "0x895780", Slot = "4")]
		public override void DetectBodyVsBody(ICollisionBody bodyToCompare)
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x895D40", Offset = "0x895D40", VA = "0x895D40", Slot = "7")]
		public override void AddVacuum(ICollisionBody vacuum)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x895D44", Offset = "0x895D44", VA = "0x895D44", Slot = "5")]
		public override bool LineOfSight(Vector3 start, Vector3 end)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200022B")]
	public sealed class CollisionTest
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] _aabbNormals;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float[] _distances;

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x893AF8", Offset = "0x893AF8", VA = "0x893AF8")]
		public static bool TestAABB(Vector3 min0, Vector3 max0, Vector3 min1, Vector3 max1, ref CollisionResult result, bool twod = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x895218", Offset = "0x895218", VA = "0x895218")]
		public static bool SegmentIntersects(ICollisionShape collider, Vector3 start, Vector3 end)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x895EF8", Offset = "0x895EF8", VA = "0x895EF8")]
		public CollisionTest()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public enum CollisionType
	{
		[Token(Token = "0x4000F9A")]
		Enter,
		[Token(Token = "0x4000F9B")]
		Stay,
		[Token(Token = "0x4000F9C")]
		Exit
	}
	[Token(Token = "0x200022D")]
	public interface ICollisionBody
	{
		[Token(Token = "0x170000B2")]
		int RefId
		{
			[Token(Token = "0x60017B3")]
			get;
			[Token(Token = "0x60017B4")]
			set;
		}

		[Token(Token = "0x170000B3")]
		bool Sleeping
		{
			[Token(Token = "0x60017B5")]
			get;
		}

		[Token(Token = "0x170000B4")]
		ICollisionShape CollisionShape
		{
			[Token(Token = "0x60017B6")]
			get;
		}

		[Token(Token = "0x60017B7")]
		void OnCollision(CollisionResult result, ICollisionBody other);
	}
	[Token(Token = "0x200022E")]
	public interface ICollisionShape
	{
		[Token(Token = "0x170000B5")]
		Vector3 Center
		{
			[Token(Token = "0x60017B8")]
			get;
			[Token(Token = "0x60017B9")]
			set;
		}

		[Token(Token = "0x170000B6")]
		Vector3 Extents
		{
			[Token(Token = "0x60017BA")]
			get;
		}

		[Token(Token = "0x170000B7")]
		Vector3 Min
		{
			[Token(Token = "0x60017BB")]
			get;
		}

		[Token(Token = "0x170000B8")]
		Vector3 Max
		{
			[Token(Token = "0x60017BC")]
			get;
		}

		[Token(Token = "0x60017BD")]
		CollisionResult TestCollision(ICollisionShape other);

		[Token(Token = "0x60017BE")]
		void SetBounds(Bounds bounds);
	}
	[Token(Token = "0x200022F")]
	public interface IQuadTreeBody
	{
		[Token(Token = "0x170000B9")]
		Vector2 Position
		{
			[Token(Token = "0x60017BF")]
			get;
		}

		[Token(Token = "0x170000BA")]
		bool QuadTreeIgnore
		{
			[Token(Token = "0x60017C0")]
			get;
		}
	}
	[Token(Token = "0x2000230")]
	public class QuadTree
	{
		[Token(Token = "0x20004D4")]
		private static class QuadTreePool
		{
			[Token(Token = "0x4001A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static Queue<QuadTree> _pool;

			[Token(Token = "0x4001A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static int _maxPoolCount;

			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private static int _defaultMaxBodiesPerNode;

			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private static int _defaultMaxLevel;

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0x89766C", Offset = "0x89766C", VA = "0x89766C")]
			public static QuadTree GetQuadTree(Rect bounds, QuadTree parent)
			{
				return null;
			}

			[Token(Token = "0x60026D7")]
			[Address(RVA = "0x89739C", Offset = "0x89739C", VA = "0x89739C")]
			public static void PoolQuadTree(QuadTree tree)
			{
			}

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x897858", Offset = "0x897858", VA = "0x897858")]
			private static void Init()
			{
			}
		}

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public QuadTree _parent;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rect _bounds;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<IQuadTreeBody> _bodies;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _maxBodiesPerNode;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _maxLevel;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _curLevel;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private QuadTree _childA;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private QuadTree _childB;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private QuadTree _childC;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private QuadTree _childD;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<IQuadTreeBody> _entCache;

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x896168", Offset = "0x896168", VA = "0x896168")]
		public QuadTree(Rect bounds, int maxBodiesPerNode = 6, int maxLevel = 6)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x89621C", Offset = "0x89621C", VA = "0x89621C")]
		private QuadTree(Rect bounds, QuadTree parent)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x8962C4", Offset = "0x8962C4", VA = "0x8962C4")]
		public void AddBody(IQuadTreeBody body)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x896870", Offset = "0x896870", VA = "0x896870")]
		public void RemoveBody(IQuadTreeBody body)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x896A10", Offset = "0x896A10", VA = "0x896A10")]
		private int CheckBodyAmount()
		{
			return default(int);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x8969CC", Offset = "0x8969CC", VA = "0x8969CC")]
		private void CheckQuadrants()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x895CEC", Offset = "0x895CEC", VA = "0x895CEC")]
		public List<IQuadTreeBody> GetBodies(Vector3 point, float radius)
		{
			return null;
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x896BAC", Offset = "0x896BAC", VA = "0x896BAC")]
		public List<IQuadTreeBody> GetBodies(Vector2 point, float radius)
		{
			return null;
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x896E94", Offset = "0x896E94", VA = "0x896E94")]
		public List<IQuadTreeBody> GetBodies(Rect rect)
		{
			return null;
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x896C70", Offset = "0x896C70", VA = "0x896C70")]
		private void GetBodies(Vector2 point, float radius, List<IQuadTreeBody> bods)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x896F60", Offset = "0x896F60", VA = "0x896F60")]
		private void GetBodies(Rect rect, List<IQuadTreeBody> bods)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x8971B8", Offset = "0x8971B8", VA = "0x8971B8")]
		public bool ContainsCircle(Vector2 circleCenter, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x897348", Offset = "0x897348", VA = "0x897348")]
		public bool ContainsRect(Rect rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x897354", Offset = "0x897354", VA = "0x897354")]
		public QuadTree GetLowestChild(Vector2 point)
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x896AF4", Offset = "0x896AF4", VA = "0x896AF4")]
		public void Clear()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x8974A4", Offset = "0x8974A4", VA = "0x8974A4")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x896504", Offset = "0x896504", VA = "0x896504")]
		private void Split()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x89642C", Offset = "0x89642C", VA = "0x89642C")]
		public QuadTree GetQuadrant(Vector2 point)
		{
			return null;
		}
	}
	[Token(Token = "0x2000231")]
	public class BoxShape : ICollisionShape
	{
		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Bounds Bounds;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool TwoD;

		[Token(Token = "0x170000BB")]
		public Vector3 Center
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x893608", Offset = "0x893608", VA = "0x893608", Slot = "4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x893614", Offset = "0x893614", VA = "0x893614", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public Vector3 Extents
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x893620", Offset = "0x893620", VA = "0x893620", Slot = "6")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0x89362C", Offset = "0x89362C", VA = "0x89362C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public Vector3 Min
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x893638", Offset = "0x893638", VA = "0x893638", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000BE")]
		public Vector3 Max
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x893700", Offset = "0x893700", VA = "0x893700", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x8935BC", Offset = "0x8935BC", VA = "0x8935BC")]
		public BoxShape(Bounds bounds, bool twoD = true)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x8937C8", Offset = "0x8937C8", VA = "0x8937C8", Slot = "9")]
		public CollisionResult TestCollision(ICollisionShape other)
		{
			return default(CollisionResult);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x8939A8", Offset = "0x8939A8", VA = "0x8939A8")]
		public static bool BoxVsBox(BoxShape a, BoxShape b, ref CollisionResult result, bool twoD)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x893FAC", Offset = "0x893FAC", VA = "0x893FAC", Slot = "10")]
		public void SetBounds(Bounds bounds)
		{
		}
	}
}
namespace QuadTreeOptimizer
{
	[Token(Token = "0x2000232")]
	public class DemoPhysicsBody : MonoBehaviour, ICollisionBody, IQuadTreeBody
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ICollisionShape _shape;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color _gizmoColor;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54932C", Offset = "0x54932C")]
		private int <RefId>k__BackingField;

		[Token(Token = "0x170000BF")]
		public int RefId
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x7C1D08", Offset = "0x7C1D08", VA = "0x7C1D08", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5545C8", Offset = "0x5545C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x7C1D10", Offset = "0x7C1D10", VA = "0x7C1D10", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5545D8", Offset = "0x5545D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool Sleeping
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x7C1D18", Offset = "0x7C1D18", VA = "0x7C1D18", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		public ICollisionShape CollisionShape
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x7C1D20", Offset = "0x7C1D20", VA = "0x7C1D20", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public Vector2 Position
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x7C1D94", Offset = "0x7C1D94", VA = "0x7C1D94", Slot = "9")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170000C3")]
		public bool QuadTreeIgnore
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x7C1E1C", Offset = "0x7C1E1C", VA = "0x7C1E1C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x7C195C", Offset = "0x7C195C", VA = "0x7C195C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x7C1AD0", Offset = "0x7C1AD0", VA = "0x7C1AD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x7C1BD4", Offset = "0x7C1BD4", VA = "0x7C1BD4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x7C1D28", Offset = "0x7C1D28", VA = "0x7C1D28", Slot = "8")]
		public void OnCollision(CollisionResult result, ICollisionBody other)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x7C1E24", Offset = "0x7C1E24", VA = "0x7C1E24")]
		public DemoPhysicsBody()
		{
		}
	}
}
namespace PlayStationVRExample
{
	[Token(Token = "0x2000233")]
	public class DisableAfterDelay : MonoBehaviour
	{
		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B58", Offset = "0x539B58")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DisableAfterDelay <>4__this;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026DD")]
				[Address(RVA = "0x9C577C", Offset = "0x9C577C", VA = "0x9C577C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026DF")]
				[Address(RVA = "0x9C57EC", Offset = "0x9C57EC", VA = "0x9C57EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026DA")]
			[Address(RVA = "0x9C5658", Offset = "0x9C5658", VA = "0x9C5658")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0x9C5694", Offset = "0x9C5694", VA = "0x9C5694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0x9C5698", Offset = "0x9C5698", VA = "0x9C5698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026DE")]
			[Address(RVA = "0x9C5784", Offset = "0x9C5784", VA = "0x9C5784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x9C55E4", Offset = "0x9C55E4", VA = "0x9C55E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5545E8", Offset = "0x5545E8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x9C5684", Offset = "0x9C5684", VA = "0x9C5684")]
		public DisableAfterDelay()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class InstructionsManager : MonoBehaviour
	{
		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B68", Offset = "0x539B68")]
		private sealed class <BeginGameCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructionsManager <>4__this;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026E3")]
				[Address(RVA = "0x9C68B0", Offset = "0x9C68B0", VA = "0x9C68B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026E5")]
				[Address(RVA = "0x9C6920", Offset = "0x9C6920", VA = "0x9C6920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026E0")]
			[Address(RVA = "0x9C6534", Offset = "0x9C6534", VA = "0x9C6534")]
			[DebuggerHidden]
			public <BeginGameCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60026E1")]
			[Address(RVA = "0x9C6570", Offset = "0x9C6570", VA = "0x9C6570", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0x9C6574", Offset = "0x9C6574", VA = "0x9C6574", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x9C68B8", Offset = "0x9C68B8", VA = "0x9C68B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup instructionsCanvasGroup;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_HasStarted;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x9C6400", Offset = "0x9C6400", VA = "0x9C6400")]
		private void Start()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x9C6474", Offset = "0x9C6474", VA = "0x9C6474")]
		public void BeginGame()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x9C64C0", Offset = "0x9C64C0", VA = "0x9C64C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55464C", Offset = "0x55464C")]
		private IEnumerator BeginGameCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x9C6560", Offset = "0x9C6560", VA = "0x9C6560")]
		public InstructionsManager()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class LookAtTarget : MonoBehaviour
	{
		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform lookAtTarget;

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x9C6B10", Offset = "0x9C6B10", VA = "0x9C6B10")]
		private void Start()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x9C6BA8", Offset = "0x9C6BA8", VA = "0x9C6BA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x9C6CEC", Offset = "0x9C6CEC", VA = "0x9C6CEC")]
		public LookAtTarget()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class MainMenuManager : MonoBehaviour
	{
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text ds4StatusText;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider ds4Slider;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text moveStatusText;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider moveSlider;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text aimStatusText;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider aimSlider;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text renderScaleText;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider renderScaleSlider;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text socialScreenText;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Slider socialScreenSlider;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text minOutputColorText;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider minOutputColorSlider;

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x9C6CF4", Offset = "0x9C6CF4", VA = "0x9C6CF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x9C6E08", Offset = "0x9C6E08", VA = "0x9C6E08")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x9C6E0C", Offset = "0x9C6E0C", VA = "0x9C6E0C")]
		private void DualShock4Check()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x9C6E10", Offset = "0x9C6E10", VA = "0x9C6E10")]
		private void MoveCheck()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x9C6ED8", Offset = "0x9C6ED8", VA = "0x9C6ED8")]
		private void AimCheck()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x9C6EDC", Offset = "0x9C6EDC", VA = "0x9C6EDC")]
		public void GoToDualShock4Scene()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x9C6FC8", Offset = "0x9C6FC8", VA = "0x9C6FC8")]
		public void GoToMoveScene()
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x9C7050", Offset = "0x9C7050", VA = "0x9C7050")]
		public void GoToAimScene()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x9C70D8", Offset = "0x9C70D8", VA = "0x9C70D8")]
		public void OptionsToggleShowHmdView()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x9C71C8", Offset = "0x9C71C8", VA = "0x9C71C8")]
		public void SwitchRenderScale()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x9C72FC", Offset = "0x9C72FC", VA = "0x9C72FC")]
		private void OptionsToggleMinimumOutputColor()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x9C7300", Offset = "0x9C7300", VA = "0x9C7300")]
		public MainMenuManager()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class SceneSwitcher : MonoBehaviour
	{
		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B78", Offset = "0x539B78")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026E9")]
				[Address(RVA = "0x9C7A14", Offset = "0x9C7A14", VA = "0x9C7A14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026EB")]
				[Address(RVA = "0x9C7A84", Offset = "0x9C7A84", VA = "0x9C7A84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x9C737C", Offset = "0x9C737C", VA = "0x9C737C")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x9C787C", Offset = "0x9C787C", VA = "0x9C787C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x9C7880", Offset = "0x9C7880", VA = "0x9C7880", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x9C7A1C", Offset = "0x9C7A1C", VA = "0x9C7A1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B88", Offset = "0x539B88")]
		private sealed class <FadeDownRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x17000279")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026EF")]
				[Address(RVA = "0x9C7804", Offset = "0x9C7804", VA = "0x9C7804", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026F1")]
				[Address(RVA = "0x9C7874", Offset = "0x9C7874", VA = "0x9C7874", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x9C749C", Offset = "0x9C749C", VA = "0x9C749C")]
			[DebuggerHidden]
			public <FadeDownRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0x9C7660", Offset = "0x9C7660", VA = "0x9C7660", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0x9C7664", Offset = "0x9C7664", VA = "0x9C7664", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026F0")]
			[Address(RVA = "0x9C780C", Offset = "0x9C780C", VA = "0x9C780C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539B98", Offset = "0x539B98")]
		private sealed class <SwitchToSceneRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneIndex;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026F5")]
				[Address(RVA = "0x9C7C98", Offset = "0x9C7C98", VA = "0x9C7C98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026F7")]
				[Address(RVA = "0x9C7D08", Offset = "0x9C7D08", VA = "0x9C7D08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x9C7560", Offset = "0x9C7560", VA = "0x9C7560")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x9C7A8C", Offset = "0x9C7A8C", VA = "0x9C7A8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x9C7A90", Offset = "0x9C7A90", VA = "0x9C7A90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x9C7CA0", Offset = "0x9C7CA0", VA = "0x9C7CA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539BA8", Offset = "0x539BA8")]
		private sealed class <SwitchToSceneRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneSwitcher <>4__this;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026FB")]
				[Address(RVA = "0x9C7F1C", Offset = "0x9C7F1C", VA = "0x9C7F1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026FD")]
				[Address(RVA = "0x9C7F8C", Offset = "0x9C7F8C", VA = "0x9C7F8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0x9C7624", Offset = "0x9C7624", VA = "0x9C7624")]
			[DebuggerHidden]
			public <SwitchToSceneRoutine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x9C7D10", Offset = "0x9C7D10", VA = "0x9C7D10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x9C7D14", Offset = "0x9C7D14", VA = "0x9C7D14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x9C7F24", Offset = "0x9C7F24", VA = "0x9C7F24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeSpeed;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x9C7308", Offset = "0x9C7308", VA = "0x9C7308")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5546B0", Offset = "0x5546B0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x9C73A8", Offset = "0x9C73A8", VA = "0x9C73A8")]
		public void SwitchToScene(int sceneIndex)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x9C6F64", Offset = "0x9C6F64", VA = "0x9C6F64")]
		public void SwitchToScene(string sceneName)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x9C7428", Offset = "0x9C7428", VA = "0x9C7428")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554714", Offset = "0x554714")]
		private IEnumerator FadeDownRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x9C74C8", Offset = "0x9C74C8", VA = "0x9C74C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554778", Offset = "0x554778")]
		private IEnumerator SwitchToSceneRoutine(int sceneIndex)
		{
			return null;
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x9C758C", Offset = "0x9C758C", VA = "0x9C758C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5547DC", Offset = "0x5547DC")]
		private IEnumerator SwitchToSceneRoutine(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x9C7650", Offset = "0x9C7650", VA = "0x9C7650")]
		public SceneSwitcher()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class ScoreManager : MonoBehaviour
	{
		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539BB8", Offset = "0x539BB8")]
		private sealed class <EndTimer>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScoreManager <>4__this;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002701")]
				[Address(RVA = "0x9C8890", Offset = "0x9C8890", VA = "0x9C8890", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002703")]
				[Address(RVA = "0x9C8900", Offset = "0x9C8900", VA = "0x9C8900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x9C8494", Offset = "0x9C8494", VA = "0x9C8494")]
			[DebuggerHidden]
			public <EndTimer>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x9C8654", Offset = "0x9C8654", VA = "0x9C8654", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0x9C8658", Offset = "0x9C8658", VA = "0x9C8658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0x9C8898", Offset = "0x9C8898", VA = "0x9C8898", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text timerText;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image timerDisplay;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text scoreText;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text accuracyText;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text highScoreText;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float totalTime;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int scoreValue;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_TheScore;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_HighScore;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_Accuracy;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_RollingScore;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_CurrentTime;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_TimerIsRunning;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TargetsManager m_TargetsManager;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WeaponController[] m_WeaponControls;

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x9C7F94", Offset = "0x9C7F94", VA = "0x9C7F94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x9C814C", Offset = "0x9C814C", VA = "0x9C814C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x9C8214", Offset = "0x9C8214", VA = "0x9C8214")]
		private void Timer()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x9C81A0", Offset = "0x9C81A0", VA = "0x9C81A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554840", Offset = "0x554840")]
		private IEnumerator EndTimer()
		{
			return null;
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x9C82E8", Offset = "0x9C82E8", VA = "0x9C82E8")]
		private void UpdateScoreDisplay()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x9C6898", Offset = "0x9C6898", VA = "0x9C6898")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x9C84C0", Offset = "0x9C84C0", VA = "0x9C84C0")]
		private void CalculateAccuracy()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x9C8594", Offset = "0x9C8594", VA = "0x9C8594")]
		public void IncreaseScore()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x9C85A4", Offset = "0x9C85A4", VA = "0x9C85A4")]
		public void Quit()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x9C8634", Offset = "0x9C8634", VA = "0x9C8634")]
		public ScoreManager()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class SetupManager : MonoBehaviour
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator m_StateMachine;

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x9C8908", Offset = "0x9C8908", VA = "0x9C8908")]
		private void Start()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x9C89D8", Offset = "0x9C89D8", VA = "0x9C89D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x9C8B04", Offset = "0x9C8B04", VA = "0x9C8B04")]
		public void FinishedUIInteraction()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x9C8B68", Offset = "0x9C8B68", VA = "0x9C8B68")]
		public void ProgressToMainMenu()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x9C8BF0", Offset = "0x9C8BF0", VA = "0x9C8BF0")]
		public SetupManager()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class Spinner : MonoBehaviour
	{
		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool local;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool allowManual;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool allowAutomatic;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool lockZ;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float autoTimer;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spinDirection;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float speed;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_GoAutomaticTime;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_AutoSpinDirection;

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x9C8BF8", Offset = "0x9C8BF8", VA = "0x9C8BF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x9C8C0C", Offset = "0x9C8C0C", VA = "0x9C8C0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x9C8D34", Offset = "0x9C8D34", VA = "0x9C8D34")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x9C9014", Offset = "0x9C9014", VA = "0x9C9014")]
		public Spinner()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class TargetObject : MonoBehaviour
	{
		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject explosionEffect;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject solidTarget;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject brokenTarget;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip audioClipSpawned;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip audioClipHit;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float destructionForce;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float debisDestroyDelay;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource m_AudioPlayer;

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x9C90AC", Offset = "0x9C90AC", VA = "0x9C90AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x9C91D0", Offset = "0x9C91D0", VA = "0x9C91D0")]
		public void DestroyTarget()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x9C97E4", Offset = "0x9C97E4", VA = "0x9C97E4")]
		public TargetObject()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class TargetsManager : MonoBehaviour
	{
		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539BC8", Offset = "0x539BC8")]
		private sealed class <SpawnTarget>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetsManager <>4__this;

			[Token(Token = "0x17000281")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002707")]
				[Address(RVA = "0x9C9D34", Offset = "0x9C9D34", VA = "0x9C9D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002709")]
				[Address(RVA = "0x9C9DA4", Offset = "0x9C9DA4", VA = "0x9C9DA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002704")]
			[Address(RVA = "0x9C99C0", Offset = "0x9C99C0", VA = "0x9C99C0")]
			[DebuggerHidden]
			public <SpawnTarget>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002705")]
			[Address(RVA = "0x9C9C08", Offset = "0x9C9C08", VA = "0x9C9C08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002706")]
			[Address(RVA = "0x9C9C0C", Offset = "0x9C9C0C", VA = "0x9C9C0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002708")]
			[Address(RVA = "0x9C9D3C", Offset = "0x9C9D3C", VA = "0x9C9D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float spawnRateMin;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spawnRateMax;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject targetPrefab;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform spawnPoint;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 spawnArea;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxSpawnedObjects;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_AllowSpawning;

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x9C6864", Offset = "0x9C6864", VA = "0x9C6864")]
		public void BeginSpawning()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x9C8884", Offset = "0x9C8884", VA = "0x9C8884")]
		public void StopSpawning()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x9C978C", Offset = "0x9C978C", VA = "0x9C978C")]
		public void SpawnTargetImmediately()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x9C97F8", Offset = "0x9C97F8", VA = "0x9C97F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5548A4", Offset = "0x5548A4")]
		private IEnumerator SpawnTarget()
		{
			return null;
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x9C986C", Offset = "0x9C986C", VA = "0x9C986C")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x9C9B28", Offset = "0x9C9B28", VA = "0x9C9B28")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x9C99EC", Offset = "0x9C99EC", VA = "0x9C99EC")]
		private Vector3 RandomSpawnPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x9C9B7C", Offset = "0x9C9B7C", VA = "0x9C9B7C")]
		public TargetsManager()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class InputVisualiser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004DD")]
		public class Controller
		{
			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform buttonCross;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform buttonCircle;

			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform buttonSquare;

			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform buttonTriangle;

			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform buttonOptions;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform buttonTouchpad;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform dpadDown;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform dpadRight;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform dpadUp;

			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform dpadLeft;

			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Transform buttonL1;

			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform buttonR1;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform buttonR12;

			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform triggerL2;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Transform triggerR2;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Transform thumbstickL3;

			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Transform thumbstickR3;

			[Token(Token = "0x600270A")]
			[Address(RVA = "0x9C63F8", Offset = "0x9C63F8", VA = "0x9C63F8")]
			public Controller()
			{
			}
		}

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Controller controller;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buttonPressDistance;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float triggerPullAngle;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float thumbstickAngle;

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x9C57F4", Offset = "0x9C57F4", VA = "0x9C57F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x9C63F0", Offset = "0x9C63F0", VA = "0x9C63F0")]
		public InputVisualiser()
		{
		}
	}
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x539118", Offset = "0x539118")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer m_Line;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x9C6928", Offset = "0x9C6928", VA = "0x9C6928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x9C6980", Offset = "0x9C6980", VA = "0x9C6980")]
		private void Update()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x9C6B08", Offset = "0x9C6B08", VA = "0x9C6B08")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class WeaponController : MonoBehaviour
	{
		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539BD8", Offset = "0x539BD8")]
		private sealed class <Vibrate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600270E")]
				[Address(RVA = "0x9CB85C", Offset = "0x9CB85C", VA = "0x9CB85C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002710")]
				[Address(RVA = "0x9CB8CC", Offset = "0x9CB8CC", VA = "0x9CB8CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600270B")]
			[Address(RVA = "0x9CB784", Offset = "0x9CB784", VA = "0x9CB784")]
			[DebuggerHidden]
			public <Vibrate>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600270C")]
			[Address(RVA = "0x9CB7C0", Offset = "0x9CB7C0", VA = "0x9CB7C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0x9CB7C4", Offset = "0x9CB7C4", VA = "0x9CB7C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600270F")]
			[Address(RVA = "0x9CB864", Offset = "0x9CB864", VA = "0x9CB864", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fireRate;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem shotEmitter;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isMoveController;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isSecondaryMoveController;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isAimController;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource shotSound;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource missSound;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LaserPointer m_LaserPointer;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_LastShotTime;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_CanShoot;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_HasShootInput;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public int shotsFired;

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x9CB3D4", Offset = "0x9CB3D4", VA = "0x9CB3D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x9CB458", Offset = "0x9CB458", VA = "0x9CB458")]
		private void Update()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x9CB4B8", Offset = "0x9CB4B8", VA = "0x9CB4B8")]
		private bool CheckForInput()
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x9CB504", Offset = "0x9CB504", VA = "0x9CB504")]
		private void Fire()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x9CB724", Offset = "0x9CB724", VA = "0x9CB724")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554908", Offset = "0x554908")]
		private IEnumerator Vibrate()
		{
			return null;
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x9C680C", Offset = "0x9C680C", VA = "0x9C680C")]
		public void WeaponCanShoot(bool shootBool)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x9CB7B0", Offset = "0x9CB7B0", VA = "0x9CB7B0")]
		public WeaponController()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class TrackedPlayStationDevices : MonoBehaviour
	{
		[Token(Token = "0x20004DF")]
		public enum TrackedDevicesType
		{
			[Token(Token = "0x4001A32")]
			DualShock4 = 1,
			[Token(Token = "0x4001A33")]
			Aim = 2,
			[Token(Token = "0x4001A34")]
			Move = 4
		}

		[Serializable]
		[Token(Token = "0x20004E0")]
		public class TrackedDevice
		{
			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int handle;

			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Renderer light;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Quaternion orientation;

			[Token(Token = "0x6002711")]
			[Address(RVA = "0x9CA7FC", Offset = "0x9CA7FC", VA = "0x9CA7FC")]
			public TrackedDevice()
			{
			}
		}

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539BE8", Offset = "0x539BE8")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrackedPlayStationDevices <>4__this;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002715")]
				[Address(RVA = "0x9CA784", Offset = "0x9CA784", VA = "0x9CA784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002717")]
				[Address(RVA = "0x9CA7F4", Offset = "0x9CA7F4", VA = "0x9CA7F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0x9C9E20", Offset = "0x9C9E20", VA = "0x9C9E20")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0x9CA3FC", Offset = "0x9CA3FC", VA = "0x9CA3FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002714")]
			[Address(RVA = "0x9CA400", Offset = "0x9CA400", VA = "0x9CA400", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002716")]
			[Address(RVA = "0x9CA78C", Offset = "0x9CA78C", VA = "0x9CA78C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539BF8", Offset = "0x539BF8")]
		private sealed class <RegisterDualShock4Controller>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600271B")]
				[Address(RVA = "0x9CA2CC", Offset = "0x9CA2CC", VA = "0x9CA2CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600271D")]
				[Address(RVA = "0x9CA33C", Offset = "0x9CA33C", VA = "0x9CA33C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002718")]
			[Address(RVA = "0x9CA134", Offset = "0x9CA134", VA = "0x9CA134")]
			[DebuggerHidden]
			public <RegisterDualShock4Controller>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002719")]
			[Address(RVA = "0x9CA28C", Offset = "0x9CA28C", VA = "0x9CA28C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600271A")]
			[Address(RVA = "0x9CA290", Offset = "0x9CA290", VA = "0x9CA290", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600271C")]
			[Address(RVA = "0x9CA2D4", Offset = "0x9CA2D4", VA = "0x9CA2D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539C08", Offset = "0x539C08")]
		private sealed class <RegisterAimController>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002721")]
				[Address(RVA = "0x9CA214", Offset = "0x9CA214", VA = "0x9CA214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002723")]
				[Address(RVA = "0x9CA284", Offset = "0x9CA284", VA = "0x9CA284", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600271E")]
			[Address(RVA = "0x9CA160", Offset = "0x9CA160", VA = "0x9CA160")]
			[DebuggerHidden]
			public <RegisterAimController>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600271F")]
			[Address(RVA = "0x9CA1D4", Offset = "0x9CA1D4", VA = "0x9CA1D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0x9CA1D8", Offset = "0x9CA1D8", VA = "0x9CA1D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0x9CA21C", Offset = "0x9CA21C", VA = "0x9CA21C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539C18", Offset = "0x539C18")]
		private sealed class <RegisterMoveControllers>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700028B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002727")]
				[Address(RVA = "0x9CA384", Offset = "0x9CA384", VA = "0x9CA384", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002729")]
				[Address(RVA = "0x9CA3F4", Offset = "0x9CA3F4", VA = "0x9CA3F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002724")]
			[Address(RVA = "0x9CA18C", Offset = "0x9CA18C", VA = "0x9CA18C")]
			[DebuggerHidden]
			public <RegisterMoveControllers>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002725")]
			[Address(RVA = "0x9CA344", Offset = "0x9CA344", VA = "0x9CA344", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0x9CA348", Offset = "0x9CA348", VA = "0x9CA348", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002728")]
			[Address(RVA = "0x9CA38C", Offset = "0x9CA38C", VA = "0x9CA38C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TrackedDevicesType trackedDevicesType;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrackedDevice deviceDualShock4;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrackedDevice deviceAim;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TrackedDevice deviceMovePrimary;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrackedDevice deviceMoveSecondary;

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x9C9DAC", Offset = "0x9C9DAC", VA = "0x9C9DAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55496C", Offset = "0x55496C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x9C9E4C", Offset = "0x9C9E4C", VA = "0x9C9E4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x9C9EE4", Offset = "0x9C9EE4", VA = "0x9C9EE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x9C9F6C", Offset = "0x9C9F6C", VA = "0x9C9F6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x9C9F70", Offset = "0x9C9F70", VA = "0x9C9F70")]
		public void ResetDeviceTracking()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x9C9ED8", Offset = "0x9C9ED8", VA = "0x9C9ED8")]
		private void UpdateDualShock4Transforms()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x9C9EDC", Offset = "0x9C9EDC", VA = "0x9C9EDC")]
		private void UpdateAimTransforms()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x9C9EE0", Offset = "0x9C9EE0", VA = "0x9C9EE0")]
		private void UpdateMoveTransforms()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x9C9F94", Offset = "0x9C9F94", VA = "0x9C9F94")]
		public void RegisterDevices()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x9CA014", Offset = "0x9CA014", VA = "0x9CA014")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5549D0", Offset = "0x5549D0")]
		private IEnumerator RegisterDualShock4Controller()
		{
			return null;
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x9CA074", Offset = "0x9CA074", VA = "0x9CA074")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554A34", Offset = "0x554A34")]
		private IEnumerator RegisterAimController()
		{
			return null;
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x9CA0D4", Offset = "0x9CA0D4", VA = "0x9CA0D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554A98", Offset = "0x554A98")]
		private IEnumerator RegisterMoveControllers()
		{
			return null;
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x9C9EE8", Offset = "0x9C9EE8", VA = "0x9C9EE8")]
		public void UnregisterDevices()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x9CA1B8", Offset = "0x9CA1B8", VA = "0x9CA1B8")]
		private void UnregisterDualShock4()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x9CA1BC", Offset = "0x9CA1BC", VA = "0x9CA1BC")]
		private void UnregisterAimController()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x9CA1C0", Offset = "0x9CA1C0", VA = "0x9CA1C0")]
		private void UnregisterMoveControllers()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x9CA1C4", Offset = "0x9CA1C4", VA = "0x9CA1C4")]
		public TrackedPlayStationDevices()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class VRDeviceNames
	{
		[Token(Token = "0x4001001")]
		public const string None = "None";

		[Token(Token = "0x4001002")]
		public const string Unknown = "Unknown";

		[Token(Token = "0x4001003")]
		public const string Oculus = "Oculus";

		[Token(Token = "0x4001004")]
		public const string playStationVR = "PlayStationVR";

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x9CA8AC", Offset = "0x9CA8AC", VA = "0x9CA8AC")]
		public VRDeviceNames()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class VRPlaySpace : MonoBehaviour
	{
		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform frustumTransform;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] frustumRenderers;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float safeDistance;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeSpeed;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color showColor;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color hideColor;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_ShowFrustum;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_CamAcceleration;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_HmdPositionRaw;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion m_HmdRotationUnity;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_HmdRotationRaw;

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x9CA8B4", Offset = "0x9CA8B4", VA = "0x9CA8B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x9CA97C", Offset = "0x9CA97C", VA = "0x9CA97C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x9CA980", Offset = "0x9CA980", VA = "0x9CA980")]
		private void UpdateFrustumTransform()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x9CA984", Offset = "0x9CA984", VA = "0x9CA984")]
		private void UpdateFrustumDisplay()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x9CAB34", Offset = "0x9CAB34", VA = "0x9CAB34")]
		public VRPlaySpace()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class VRPostReprojection : MonoBehaviour
	{
		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject busySpinner;

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x9CAB4C", Offset = "0x9CAB4C", VA = "0x9CAB4C")]
		public VRPostReprojection()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class VRUIComplete : MonoBehaviour
	{
		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool disableColliderAfterUse;

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x9CAB54", Offset = "0x9CAB54", VA = "0x9CAB54")]
		public void Complete()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x9CAC48", Offset = "0x9CAC48", VA = "0x9CAC48")]
		public VRUIComplete()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class VRUIController : MonoBehaviour
	{
		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask uiLayerMask;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_SliderFillSpeed;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RaycastHit m_Hit;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Slider m_CurrentSlider;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource m_AudioSrc;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x9CACA0", Offset = "0x9CACA0", VA = "0x9CACA0")]
		private void Start()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x9CACF8", Offset = "0x9CACF8", VA = "0x9CACF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x9CB3C4", Offset = "0x9CB3C4", VA = "0x9CB3C4")]
		public VRUIController()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x2000246")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4001019")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600184C")]
		[Address(RVA = "0x757EFC", Offset = "0x757EFC", VA = "0x757EFC")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x600184D")]
		[Address(RVA = "0x757F8C", Offset = "0x757F8C", VA = "0x757F8C")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x600184E")]
		[Address(RVA = "0x75801C", Offset = "0x75801C", VA = "0x75801C")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x600184F")]
		[Address(RVA = "0x75811C", Offset = "0x75811C", VA = "0x75811C")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x6001850")]
		[Address(RVA = "0x7581AC", Offset = "0x7581AC", VA = "0x7581AC")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x6001851")]
		[Address(RVA = "0x75823C", Offset = "0x75823C", VA = "0x75823C")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x7582D4", Offset = "0x7582D4", VA = "0x7582D4")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x758364", Offset = "0x758364", VA = "0x758364")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x758370", Offset = "0x758370", VA = "0x758370")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x7583AC", Offset = "0x7583AC", VA = "0x7583AC")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x7583B0", Offset = "0x7583B0", VA = "0x7583B0")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6001857")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001858")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000247")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x539C28", Offset = "0x539C28")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x539C3C", Offset = "0x539C3C")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x20004E7")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x20004E8")]
		public struct GSALine
		{
			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x20004E9")]
		public struct GSALineCollection
		{
			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x4001A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x20004EA")]
		public struct GSALegalData
		{
			[Token(Token = "0x4001A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x4001A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4001A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20004EB")]
		public struct GSARect
		{
			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x400101A")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6001859")]
		[Address(RVA = "0x7586E4", Offset = "0x7586E4", VA = "0x7586E4")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x600185A")]
		[Address(RVA = "0x758794", Offset = "0x758794", VA = "0x758794")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x600185B")]
		[Address(RVA = "0x758824", Offset = "0x758824", VA = "0x758824")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x600185C")]
		[Address(RVA = "0x7588C8", Offset = "0x7588C8", VA = "0x7588C8")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x600185D")]
		[Address(RVA = "0x75896C", Offset = "0x75896C", VA = "0x75896C")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x600185E")]
		[Address(RVA = "0x758A0C", Offset = "0x758A0C", VA = "0x758A0C")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x600185F")]
		[Address(RVA = "0x758AAC", Offset = "0x758AAC", VA = "0x758AAC")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x6001860")]
		[Address(RVA = "0x758B44", Offset = "0x758B44", VA = "0x758B44")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6001861")]
		[Address(RVA = "0x758BE4", Offset = "0x758BE4", VA = "0x758BE4")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x6001862")]
		[Address(RVA = "0x758C84", Offset = "0x758C84", VA = "0x758C84")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6001863")]
		[Address(RVA = "0x758D34", Offset = "0x758D34", VA = "0x758D34")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x758DFC", Offset = "0x758DFC", VA = "0x758DFC")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x758E00", Offset = "0x758E00", VA = "0x758E00")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x758E04", Offset = "0x758E04", VA = "0x758E04")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x758E08", Offset = "0x758E08", VA = "0x758E08")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x758E0C", Offset = "0x758E0C", VA = "0x758E0C")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x758E10", Offset = "0x758E10", VA = "0x758E10")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x758E98", Offset = "0x758E98", VA = "0x758E98")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x758E9C", Offset = "0x758E9C", VA = "0x758E9C")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x758EA0", Offset = "0x758EA0", VA = "0x758EA0")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x758EA4", Offset = "0x758EA4", VA = "0x758EA4")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x758EAC", Offset = "0x758EAC", VA = "0x758EAC")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000248")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x400101C")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x400101D")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x170000C4")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0x7583B4", Offset = "0x7583B4", VA = "0x7583B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x75847C", Offset = "0x75847C", VA = "0x75847C")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x758480", Offset = "0x758480", VA = "0x758480")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x758484", Offset = "0x758484", VA = "0x758484")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x758488", Offset = "0x758488", VA = "0x758488")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x758430", Offset = "0x758430", VA = "0x758430")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x20004EC")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4001A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4001A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4001A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4001A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4001A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4001A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20004ED")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4001A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4001A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x4001A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x20004EE")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x20004EF")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x170000C5")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x75A698", Offset = "0x75A698", VA = "0x75A698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x75A720", Offset = "0x75A720", VA = "0x75A720")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x75A728", Offset = "0x75A728", VA = "0x75A728")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x75A730", Offset = "0x75A730", VA = "0x75A730")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x75A850", Offset = "0x75A850", VA = "0x75A850")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x75AC1C", Offset = "0x75AC1C", VA = "0x75AC1C")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x75ACA0", Offset = "0x75ACA0", VA = "0x75ACA0")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x75ACF4", Offset = "0x75ACF4", VA = "0x75ACF4")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x7598FC", Offset = "0x7598FC", VA = "0x7598FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x554AFC", Offset = "0x554AFC")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x75A00C", Offset = "0x75A00C", VA = "0x75A00C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x554B60", Offset = "0x554B60")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x75A718", Offset = "0x75A718", VA = "0x75A718")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x200024A")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xB2A144", Offset = "0xB2A144", VA = "0xB2A144")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class ControllerHand
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xB29F5C", Offset = "0xB29F5C", VA = "0xB29F5C")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public enum ControllerState
	{
		[Token(Token = "0x4001042")]
		Error = -1,
		[Token(Token = "0x4001043")]
		DisConnected,
		[Token(Token = "0x4001044")]
		Connected
	}
	[Token(Token = "0x200024D")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x4001046")]
		APP = 1,
		[Token(Token = "0x4001047")]
		TOUCHPAD,
		[Token(Token = "0x4001048")]
		HOME,
		[Token(Token = "0x4001049")]
		VOLUMEUP,
		[Token(Token = "0x400104A")]
		VOLUMEDOWN,
		[Token(Token = "0x400104B")]
		TRIGGER,
		[Token(Token = "0x400104C")]
		A,
		[Token(Token = "0x400104D")]
		B,
		[Token(Token = "0x400104E")]
		X,
		[Token(Token = "0x400104F")]
		Y,
		[Token(Token = "0x4001050")]
		Left,
		[Token(Token = "0x4001051")]
		Right,
		[Token(Token = "0x4001052")]
		Thumbrest
	}
	[Token(Token = "0x200024E")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4001054")]
		No,
		[Token(Token = "0x4001055")]
		SwipeUp,
		[Token(Token = "0x4001056")]
		SwipeDown,
		[Token(Token = "0x4001057")]
		SwipeLeft,
		[Token(Token = "0x4001058")]
		SwipeRight
	}
	[Token(Token = "0x200024F")]
	public enum TouchPadClick
	{
		[Token(Token = "0x400105A")]
		No,
		[Token(Token = "0x400105B")]
		ClickUp,
		[Token(Token = "0x400105C")]
		ClickDown,
		[Token(Token = "0x400105D")]
		ClickLeft,
		[Token(Token = "0x400105E")]
		ClickRight
	}
	[Token(Token = "0x2000250")]
	public struct Controller
	{
		[Token(Token = "0x400105F")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xB24D2C", Offset = "0xB24D2C", VA = "0xB24D2C")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xB24E3C", Offset = "0xB24E3C", VA = "0xB24E3C")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xB24FEC", Offset = "0xB24FEC", VA = "0xB24FEC")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xB252A8", Offset = "0xB252A8", VA = "0xB252A8")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xB253BC", Offset = "0xB253BC", VA = "0xB253BC")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xB254E8", Offset = "0xB254E8", VA = "0xB254E8")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xB25610", Offset = "0xB25610", VA = "0xB25610")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xB256F0", Offset = "0xB256F0", VA = "0xB256F0")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xB257D0", Offset = "0xB257D0", VA = "0xB257D0")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xB258B0", Offset = "0xB258B0", VA = "0xB258B0")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xB25990", Offset = "0xB25990", VA = "0xB25990")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xB25FD0", Offset = "0xB25FD0", VA = "0xB25FD0")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xB26610", Offset = "0xB26610", VA = "0xB26610")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xB26C50", Offset = "0xB26C50", VA = "0xB26C50")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xB27020", Offset = "0xB27020", VA = "0xB27020")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xB273F0", Offset = "0xB273F0", VA = "0xB273F0")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xB277C0", Offset = "0xB277C0", VA = "0xB277C0")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xB27E00", Offset = "0xB27E00", VA = "0xB27E00")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xB28440", Offset = "0xB28440", VA = "0xB28440")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xB28648", Offset = "0xB28648", VA = "0xB28648")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xB28728", Offset = "0xB28728", VA = "0xB28728")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xB287A0", Offset = "0xB287A0", VA = "0xB287A0")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xB2888C", Offset = "0xB2888C", VA = "0xB2888C")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xB28908", Offset = "0xB28908", VA = "0xB28908")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xB28980", Offset = "0xB28980", VA = "0xB28980")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xB289F8", Offset = "0xB289F8", VA = "0xB289F8")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xB28A7C", Offset = "0xB28A7C", VA = "0xB28A7C")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xB28B00", Offset = "0xB28B00", VA = "0xB28B00")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xB28BA4", Offset = "0xB28BA4", VA = "0xB28BA4")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xB28C28", Offset = "0xB28C28", VA = "0xB28C28")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xB28CAC", Offset = "0xB28CAC", VA = "0xB28CAC")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xB28D30", Offset = "0xB28D30", VA = "0xB28D30")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xB28DB4", Offset = "0xB28DB4", VA = "0xB28DB4")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xB28E30", Offset = "0xB28E30", VA = "0xB28E30")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xB28EAC", Offset = "0xB28EAC", VA = "0xB28EAC")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xB28F84", Offset = "0xB28F84", VA = "0xB28F84")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xB29000", Offset = "0xB29000", VA = "0xB29000")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xB29084", Offset = "0xB29084", VA = "0xB29084")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xB29100", Offset = "0xB29100", VA = "0xB29100")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xB29184", Offset = "0xB29184", VA = "0xB29184")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xB29208", Offset = "0xB29208", VA = "0xB29208")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xB2928C", Offset = "0xB2928C", VA = "0xB2928C")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xB29308", Offset = "0xB29308", VA = "0xB29308")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xB29384", Offset = "0xB29384", VA = "0xB29384")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xB29418", Offset = "0xB29418", VA = "0xB29418")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xB2949C", Offset = "0xB2949C", VA = "0xB2949C")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xB29520", Offset = "0xB29520", VA = "0xB29520")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xB2959C", Offset = "0xB2959C", VA = "0xB2959C")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xB29618", Offset = "0xB29618", VA = "0xB29618")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xB29694", Offset = "0xB29694", VA = "0xB29694")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xB29718", Offset = "0xB29718", VA = "0xB29718")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x5C0180", Offset = "0x5C0180", VA = "0x5C0180")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x5C0184", Offset = "0x5C0184", VA = "0x5C0184")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x5C0188", Offset = "0x5C0188", VA = "0x5C0188")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xB29918", Offset = "0xB29918", VA = "0xB29918")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xB299F4", Offset = "0xB299F4", VA = "0xB299F4")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xB29AC8", Offset = "0xB29AC8", VA = "0xB29AC8")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xB29B8C", Offset = "0xB29B8C", VA = "0xB29B8C")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xB29C4C", Offset = "0xB29C4C", VA = "0xB29C4C")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xB29D0C", Offset = "0xB29D0C", VA = "0xB29D0C")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xB29DD0", Offset = "0xB29DD0", VA = "0xB29DD0")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xB29E54", Offset = "0xB29E54", VA = "0xB29E54")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xB29ED8", Offset = "0xB29ED8", VA = "0xB29ED8")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xB299F8", Offset = "0xB299F8", VA = "0xB299F8")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xB29ACC", Offset = "0xB29ACC", VA = "0xB29ACC")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xB29B90", Offset = "0xB29B90", VA = "0xB29B90")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xB29C50", Offset = "0xB29C50", VA = "0xB29C50")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xB29D10", Offset = "0xB29D10", VA = "0xB29D10")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xB2991C", Offset = "0xB2991C", VA = "0xB2991C")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x2000251")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001061")]
		Controller0,
		[Token(Token = "0x4001062")]
		Controller1
	}
	[Token(Token = "0x2000252")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001064")]
		Goblin,
		[Token(Token = "0x4001065")]
		Neo,
		[Token(Token = "0x4001066")]
		G2,
		[Token(Token = "0x4001067")]
		Neo2,
		[Token(Token = "0x4001068")]
		Neo3,
		[Token(Token = "0x4001069")]
		NewController
	}
	[Token(Token = "0x2000253")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x400106B")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x400106C")]
		PUI_VERSION,
		[Token(Token = "0x400106D")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x400106E")]
		EQUIPMENT_SN,
		[Token(Token = "0x400106F")]
		CUSTOMER_SN,
		[Token(Token = "0x4001070")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4001071")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4001072")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4001073")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4001074")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4001075")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4001076")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4001077")]
		DEVICE_IP
	}
	[Token(Token = "0x2000254")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4001079")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x400107A")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x2000255")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x400107C")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x400107D")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x2000256")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x400107F")]
		S_ON,
		[Token(Token = "0x4001080")]
		S_OFF
	}
	[Token(Token = "0x2000257")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4001082")]
		SINGLE_CLICK,
		[Token(Token = "0x4001083")]
		DOUBLE_CLICK,
		[Token(Token = "0x4001084")]
		LONG_PRESS
	}
	[Token(Token = "0x2000258")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4001086")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4001087")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4001088")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4001089")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x400108A")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x400108B")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x400108C")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x400108D")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x2000259")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x400108F")]
		THREE = 3,
		[Token(Token = "0x4001090")]
		TEN = 10,
		[Token(Token = "0x4001091")]
		THIRTY = 30,
		[Token(Token = "0x4001092")]
		SIXTY = 60,
		[Token(Token = "0x4001093")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001094")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001095")]
		NEVER = -1
	}
	[Token(Token = "0x200025A")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4001097")]
		FIFTEEN = 15,
		[Token(Token = "0x4001098")]
		THIRTY = 30,
		[Token(Token = "0x4001099")]
		SIXTY = 60,
		[Token(Token = "0x400109A")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x400109B")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x400109C")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x400109D")]
		NEVER = -1
	}
	[Token(Token = "0x200025B")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x400109F")]
		SFS_USB,
		[Token(Token = "0x40010A0")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x40010A1")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x40010A2")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x40010A3")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x40010A4")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x40010A5")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x40010A6")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x40010A7")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x40010A8")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x40010A9")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x40010AA")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x40010AB")]
		SFS_Auto_Calibration,
		[Token(Token = "0x40010AC")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x200025C")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x40010AE")]
		MTP,
		[Token(Token = "0x40010AF")]
		CHARGE
	}
	[Token(Token = "0x200025D")]
	public struct ToBService
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xB33CC0", Offset = "0xB33CC0", VA = "0xB33CC0")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xB33E04", Offset = "0xB33E04", VA = "0xB33E04")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xB33EE0", Offset = "0xB33EE0", VA = "0xB33EE0")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xB33FC4", Offset = "0xB33FC4", VA = "0xB33FC4")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xB340A8", Offset = "0xB340A8", VA = "0xB340A8")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xB341D8", Offset = "0xB341D8", VA = "0xB341D8")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xB34368", Offset = "0xB34368", VA = "0xB34368")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xB3447C", Offset = "0xB3447C", VA = "0xB3447C")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xB34648", Offset = "0xB34648", VA = "0xB34648")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xB347FC", Offset = "0xB347FC", VA = "0xB347FC")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xB34878", Offset = "0xB34878", VA = "0xB34878")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xB34A0C", Offset = "0xB34A0C", VA = "0xB34A0C")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xB34CB0", Offset = "0xB34CB0", VA = "0xB34CB0")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xB34E24", Offset = "0xB34E24", VA = "0xB34E24")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xB34F38", Offset = "0xB34F38", VA = "0xB34F38")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xB3503C", Offset = "0xB3503C", VA = "0xB3503C")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xB35218", Offset = "0xB35218", VA = "0xB35218")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xB35380", Offset = "0xB35380", VA = "0xB35380")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xB353F4", Offset = "0xB353F4", VA = "0xB353F4")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xB35468", Offset = "0xB35468", VA = "0xB35468")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xB354DC", Offset = "0xB354DC", VA = "0xB354DC")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xB35550", Offset = "0xB35550", VA = "0xB35550")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xB355C4", Offset = "0xB355C4", VA = "0xB355C4")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xB35638", Offset = "0xB35638", VA = "0xB35638")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xB356AC", Offset = "0xB356AC", VA = "0xB356AC")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xB35720", Offset = "0xB35720", VA = "0xB35720")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xB35794", Offset = "0xB35794", VA = "0xB35794")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xB35808", Offset = "0xB35808", VA = "0xB35808")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xB3594C", Offset = "0xB3594C", VA = "0xB3594C")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x40010B8")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x40010B9")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x40010BA")]
		SEENSOR_COUNT,
		[Token(Token = "0x40010BB")]
		ABILITY6DOF,
		[Token(Token = "0x40010BC")]
		PLATFORM_TYPE,
		[Token(Token = "0x40010BD")]
		TRACKING_MODE,
		[Token(Token = "0x40010BE")]
		LOG_LEVEL,
		[Token(Token = "0x40010BF")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x40010C0")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x40010C1")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x40010C2")]
		iShowFPS,
		[Token(Token = "0x40010C3")]
		SensorMode,
		[Token(Token = "0x40010C4")]
		LOGICFLOW,
		[Token(Token = "0x40010C5")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x40010C6")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x40010C7")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x40010C8")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x40010C9")]
		isEnableBoundary,
		[Token(Token = "0x40010CA")]
		Enable_Activity_Rotation,
		[Token(Token = "0x40010CB")]
		GetDisplay_Orientation,
		[Token(Token = "0x40010CC")]
		GetWaitFrameNum,
		[Token(Token = "0x40010CD")]
		GetResetFrameNum,
		[Token(Token = "0x40010CE")]
		EnableFFRBYSYS,
		[Token(Token = "0x40010CF")]
		RotControllerMode
	}
	[Token(Token = "0x200025F")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x40010D1")]
		IPD,
		[Token(Token = "0x40010D2")]
		VFOV,
		[Token(Token = "0x40010D3")]
		HFOV,
		[Token(Token = "0x40010D4")]
		NECK_MODEL_X,
		[Token(Token = "0x40010D5")]
		NECK_MODEL_Y,
		[Token(Token = "0x40010D6")]
		NECK_MODEL_Z,
		[Token(Token = "0x40010D7")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x2000260")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x40010D9")]
		X_1 = 1,
		[Token(Token = "0x40010DA")]
		X_2 = 2,
		[Token(Token = "0x40010DB")]
		X_4 = 4,
		[Token(Token = "0x40010DC")]
		X_8 = 8
	}
	[Token(Token = "0x2000261")]
	public enum PlatForm
	{
		[Token(Token = "0x40010DE")]
		Android = 1,
		[Token(Token = "0x40010DF")]
		IOS,
		[Token(Token = "0x40010E0")]
		Win,
		[Token(Token = "0x40010E1")]
		Notsupport
	}
	[Token(Token = "0x2000262")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x40010E3")]
		BD_0 = 0,
		[Token(Token = "0x40010E4")]
		BD_16 = 16,
		[Token(Token = "0x40010E5")]
		BD_24 = 24
	}
	[Token(Token = "0x2000263")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x40010E7")]
		Normal,
		[Token(Token = "0x40010E8")]
		High
	}
	[Token(Token = "0x2000264")]
	public enum Sensorindex
	{
		[Token(Token = "0x40010EA")]
		Default,
		[Token(Token = "0x40010EB")]
		FirstSensor,
		[Token(Token = "0x40010EC")]
		SecondSensor
	}
	[Token(Token = "0x2000265")]
	public enum Eye
	{
		[Token(Token = "0x40010EE")]
		LeftEye,
		[Token(Token = "0x40010EF")]
		RightEye,
		[Token(Token = "0x40010F0")]
		BothEye
	}
	[Token(Token = "0x2000266")]
	public enum ResUtilsType
	{
		[Token(Token = "0x40010F2")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x40010F3")]
		TYPE_COLOR,
		[Token(Token = "0x40010F4")]
		TYPE_TEXT,
		[Token(Token = "0x40010F5")]
		TYPE_FONT,
		[Token(Token = "0x40010F6")]
		TYPE_VALUE,
		[Token(Token = "0x40010F7")]
		TYPE_DRAWABLE,
		[Token(Token = "0x40010F8")]
		TYPE_OBJECT,
		[Token(Token = "0x40010F9")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x2000267")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x40010FB")]
		EyeLevel,
		[Token(Token = "0x40010FC")]
		FloorLevel,
		[Token(Token = "0x40010FD")]
		StageLevel
	}
	[Token(Token = "0x2000268")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x40010FF")]
		Low,
		[Token(Token = "0x4001100")]
		Med,
		[Token(Token = "0x4001101")]
		High,
		[Token(Token = "0x4001102")]
		Top_High
	}
	[Token(Token = "0x2000269")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4001104")]
		MultiPass,
		[Token(Token = "0x4001105")]
		SinglePass
	}
	[Token(Token = "0x200026A")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4001107")]
		kGazePointValid = 1,
		[Token(Token = "0x4001108")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4001109")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x400110A")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x400110B")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x200026B")]
	public enum TrackingMode
	{
		[Token(Token = "0x400110D")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x400110E")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x400110F")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x200026C")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x200026D")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x200026E")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x200026F")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x2000270")]
	public struct EyeSetting
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x2000271")]
	public struct Sensor
	{
		[Token(Token = "0x4001133")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xB2D184", Offset = "0xB2D184", VA = "0xB2D184")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xB2D224", Offset = "0xB2D224", VA = "0xB2D224")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xB2D2D8", Offset = "0xB2D2D8", VA = "0xB2D2D8")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xB2D378", Offset = "0xB2D378", VA = "0xB2D378")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xB2D418", Offset = "0xB2D418", VA = "0xB2D418")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xB2D4B8", Offset = "0xB2D4B8", VA = "0xB2D4B8")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xB2D558", Offset = "0xB2D558", VA = "0xB2D558")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xB2D5F8", Offset = "0xB2D5F8", VA = "0xB2D5F8")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xB2D6F0", Offset = "0xB2D6F0", VA = "0xB2D6F0")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xB2D7F0", Offset = "0xB2D7F0", VA = "0xB2D7F0")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xB2D880", Offset = "0xB2D880", VA = "0xB2D880")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xB2D910", Offset = "0xB2D910", VA = "0xB2D910")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xB2D9D8", Offset = "0xB2D9D8", VA = "0xB2D9D8")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xB2DAA0", Offset = "0xB2DAA0", VA = "0xB2DAA0")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xB2DB30", Offset = "0xB2DB30", VA = "0xB2DB30")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xB2DBC8", Offset = "0xB2DBC8", VA = "0xB2DBC8")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xB2DCD8", Offset = "0xB2DCD8", VA = "0xB2DCD8")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xB2DD80", Offset = "0xB2DD80", VA = "0xB2DD80")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xB2DD84", Offset = "0xB2DD84", VA = "0xB2DD84")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xB2DD88", Offset = "0xB2DD88", VA = "0xB2DD88")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xB2DF8C", Offset = "0xB2DF8C", VA = "0xB2DF8C")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xB2E178", Offset = "0xB2E178", VA = "0xB2E178")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xB2E17C", Offset = "0xB2E17C", VA = "0xB2E17C")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xB2E2F8", Offset = "0xB2E2F8", VA = "0xB2E2F8")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xB2E2FC", Offset = "0xB2E2FC", VA = "0xB2E2FC")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xB2E300", Offset = "0xB2E300", VA = "0xB2E300")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xB2E37C", Offset = "0xB2E37C", VA = "0xB2E37C")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xB2E380", Offset = "0xB2E380", VA = "0xB2E380")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xB2E384", Offset = "0xB2E384", VA = "0xB2E384")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xB2E390", Offset = "0xB2E390", VA = "0xB2E390")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xB2E394", Offset = "0xB2E394", VA = "0xB2E394")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xB2E398", Offset = "0xB2E398", VA = "0xB2E398")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xB2E39C", Offset = "0xB2E39C", VA = "0xB2E39C")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xB2DD8C", Offset = "0xB2DD8C", VA = "0xB2DD8C")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xB2E620", Offset = "0xB2E620", VA = "0xB2E620")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xB2DFE0", Offset = "0xB2DFE0", VA = "0xB2DFE0")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xB2E180", Offset = "0xB2E180", VA = "0xB2E180")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xB2E85C", Offset = "0xB2E85C", VA = "0xB2E85C")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xB2E860", Offset = "0xB2E860", VA = "0xB2E860")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xB2EDB4", Offset = "0xB2EDB4", VA = "0xB2EDB4")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000272")]
	public struct Render
	{
		[Token(Token = "0x4001134")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600190C")]
		[Address(RVA = "0xB2B1B4", Offset = "0xB2B1B4", VA = "0xB2B1B4")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x600190D")]
		[Address(RVA = "0xB2B2A4", Offset = "0xB2B2A4", VA = "0xB2B2A4")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x600190E")]
		[Address(RVA = "0xB2B34C", Offset = "0xB2B34C", VA = "0xB2B34C")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x600190F")]
		[Address(RVA = "0xB2B3EC", Offset = "0xB2B3EC", VA = "0xB2B3EC")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001910")]
		[Address(RVA = "0xB2B47C", Offset = "0xB2B47C", VA = "0xB2B47C")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6001911")]
		[Address(RVA = "0xB2B52C", Offset = "0xB2B52C", VA = "0xB2B52C")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001912")]
		[Address(RVA = "0xB2B5D8", Offset = "0xB2B5D8", VA = "0xB2B5D8")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6001913")]
		[Address(RVA = "0xB2B684", Offset = "0xB2B684", VA = "0xB2B684")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001914")]
		[Address(RVA = "0xB2B76C", Offset = "0xB2B76C", VA = "0xB2B76C")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6001915")]
		[Address(RVA = "0xB2B86C", Offset = "0xB2B86C", VA = "0xB2B86C")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001916")]
		[Address(RVA = "0xB2B9CC", Offset = "0xB2B9CC", VA = "0xB2B9CC")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001917")]
		[Address(RVA = "0xB2BA74", Offset = "0xB2BA74", VA = "0xB2BA74")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001918")]
		[Address(RVA = "0xB2BB6C", Offset = "0xB2BB6C", VA = "0xB2BB6C")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6001919")]
		[Address(RVA = "0xB2BC34", Offset = "0xB2BC34", VA = "0xB2BC34")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x600191A")]
		[Address(RVA = "0xB2BCF8", Offset = "0xB2BCF8", VA = "0xB2BCF8")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x600191B")]
		[Address(RVA = "0xB2BD98", Offset = "0xB2BD98", VA = "0xB2BD98")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x600191C")]
		[Address(RVA = "0xB2BE28", Offset = "0xB2BE28", VA = "0xB2BE28")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x600191D")]
		[Address(RVA = "0xB2BEF4", Offset = "0xB2BEF4", VA = "0xB2BEF4")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600191E")]
		[Address(RVA = "0xB2BF94", Offset = "0xB2BF94", VA = "0xB2BF94")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600191F")]
		[Address(RVA = "0xB2C034", Offset = "0xB2C034", VA = "0xB2C034")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001920")]
		[Address(RVA = "0xB2C0E4", Offset = "0xB2C0E4", VA = "0xB2C0E4")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001921")]
		[Address(RVA = "0xB2C194", Offset = "0xB2C194", VA = "0xB2C194")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6001922")]
		[Address(RVA = "0xB2C234", Offset = "0xB2C234", VA = "0xB2C234")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xB2C304", Offset = "0xB2C304", VA = "0xB2C304")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xB2C308", Offset = "0xB2C308", VA = "0xB2C308")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xB2C30C", Offset = "0xB2C30C", VA = "0xB2C30C")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xB2C4F4", Offset = "0xB2C4F4", VA = "0xB2C4F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x554BC4", Offset = "0x554BC4")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xB2C4F8", Offset = "0xB2C4F8", VA = "0xB2C4F8")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xB2C4FC", Offset = "0xB2C4FC", VA = "0xB2C4FC")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xB2C610", Offset = "0xB2C610", VA = "0xB2C610")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xB2C614", Offset = "0xB2C614", VA = "0xB2C614")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xB2C758", Offset = "0xB2C758", VA = "0xB2C758")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xB2C75C", Offset = "0xB2C75C", VA = "0xB2C75C")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xB2C760", Offset = "0xB2C760", VA = "0xB2C760")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xB2C764", Offset = "0xB2C764", VA = "0xB2C764")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xB2C7F0", Offset = "0xB2C7F0", VA = "0xB2C7F0")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xB2C7F4", Offset = "0xB2C7F4", VA = "0xB2C7F4")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xB2C9C8", Offset = "0xB2C9C8", VA = "0xB2C9C8")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xB2C9CC", Offset = "0xB2C9CC", VA = "0xB2C9CC")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xB2D168", Offset = "0xB2D168", VA = "0xB2D168")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xB2D16C", Offset = "0xB2D16C", VA = "0xB2D16C")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xB2D170", Offset = "0xB2D170", VA = "0xB2D170")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xB2D174", Offset = "0xB2D174", VA = "0xB2D174")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xB2D178", Offset = "0xB2D178", VA = "0xB2D178")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xB2D180", Offset = "0xB2D180", VA = "0xB2D180")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x2000273")]
	public struct System
	{
		[Token(Token = "0x4001135")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001136")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6001939")]
		[Address(RVA = "0xB2EDB8", Offset = "0xB2EDB8", VA = "0xB2EDB8")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x600193A")]
		[Address(RVA = "0xB2EE68", Offset = "0xB2EE68", VA = "0xB2EE68")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x600193B")]
		[Address(RVA = "0xB2EEF8", Offset = "0xB2EEF8", VA = "0xB2EEF8")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x600193C")]
		[Address(RVA = "0xB2EF88", Offset = "0xB2EF88", VA = "0xB2EF88")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x600193D")]
		[Address(RVA = "0xB2F018", Offset = "0xB2F018", VA = "0xB2F018")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x600193E")]
		[Address(RVA = "0xB2F0A8", Offset = "0xB2F0A8", VA = "0xB2F0A8")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x600193F")]
		[Address(RVA = "0xB2F138", Offset = "0xB2F138", VA = "0xB2F138")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6001940")]
		[Address(RVA = "0xB2F1C8", Offset = "0xB2F1C8", VA = "0xB2F1C8")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001941")]
		[Address(RVA = "0xB2F268", Offset = "0xB2F268", VA = "0xB2F268")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6001942")]
		[Address(RVA = "0xB2F3C0", Offset = "0xB2F3C0", VA = "0xB2F3C0")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6001943")]
		[Address(RVA = "0xB2F468", Offset = "0xB2F468", VA = "0xB2F468")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6001944")]
		[Address(RVA = "0xB2F4F8", Offset = "0xB2F4F8", VA = "0xB2F4F8")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6001945")]
		[Address(RVA = "0xB2F588", Offset = "0xB2F588", VA = "0xB2F588")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6001946")]
		[Address(RVA = "0xB2F628", Offset = "0xB2F628", VA = "0xB2F628")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001947")]
		[Address(RVA = "0xB2F6D0", Offset = "0xB2F6D0", VA = "0xB2F6D0")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6001948")]
		[Address(RVA = "0xB2F770", Offset = "0xB2F770", VA = "0xB2F770")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6001949")]
		[Address(RVA = "0xB2F800", Offset = "0xB2F800", VA = "0xB2F800")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x600194A")]
		[Address(RVA = "0xB2F8A0", Offset = "0xB2F8A0", VA = "0xB2F8A0")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x600194B")]
		[Address(RVA = "0xB2F958", Offset = "0xB2F958", VA = "0xB2F958")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x600194C")]
		[Address(RVA = "0xB2FA08", Offset = "0xB2FA08", VA = "0xB2FA08")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x600194D")]
		[Address(RVA = "0xB2FAB4", Offset = "0xB2FAB4", VA = "0xB2FAB4")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x600194E")]
		[Address(RVA = "0xB2FB44", Offset = "0xB2FB44", VA = "0xB2FB44")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x600194F")]
		[Address(RVA = "0xB2FBEC", Offset = "0xB2FBEC", VA = "0xB2FBEC")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6001950")]
		[Address(RVA = "0xB2FC84", Offset = "0xB2FC84", VA = "0xB2FC84")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x6001951")]
		[Address(RVA = "0xB2B124", Offset = "0xB2B124", VA = "0xB2B124")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x6001952")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xB2E3A4", Offset = "0xB2E3A4", VA = "0xB2E3A4")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001954")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xB2FD2C", Offset = "0xB2FD2C", VA = "0xB2FD2C")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xB2FFA8", Offset = "0xB2FFA8", VA = "0xB2FFA8")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xB3003C", Offset = "0xB3003C", VA = "0xB3003C")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xB30084", Offset = "0xB30084", VA = "0xB30084")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xB3008C", Offset = "0xB3008C", VA = "0xB3008C")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xB2A3A8", Offset = "0xB2A3A8", VA = "0xB2A3A8")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xB2A760", Offset = "0xB2A760", VA = "0xB2A760")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xB30094", Offset = "0xB30094", VA = "0xB30094")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xB30100", Offset = "0xB30100", VA = "0xB30100")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xB30190", Offset = "0xB30190", VA = "0xB30190")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xB30220", Offset = "0xB30220", VA = "0xB30220")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xB302AC", Offset = "0xB302AC", VA = "0xB302AC")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xB30554", Offset = "0xB30554", VA = "0xB30554")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xB307AC", Offset = "0xB307AC", VA = "0xB307AC")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xB30838", Offset = "0xB30838", VA = "0xB30838")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xB308C4", Offset = "0xB308C4", VA = "0xB308C4")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xB30950", Offset = "0xB30950", VA = "0xB30950")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xB30A70", Offset = "0xB30A70", VA = "0xB30A70")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xB30AFC", Offset = "0xB30AFC", VA = "0xB30AFC")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xB30C20", Offset = "0xB30C20", VA = "0xB30C20")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xB310D4", Offset = "0xB310D4", VA = "0xB310D4")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xB31194", Offset = "0xB31194", VA = "0xB31194")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xB3119C", Offset = "0xB3119C", VA = "0xB3119C")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xB311A0", Offset = "0xB311A0", VA = "0xB311A0")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xB311A4", Offset = "0xB311A4", VA = "0xB311A4")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xB311A8", Offset = "0xB311A8", VA = "0xB311A8")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xB31228", Offset = "0xB31228", VA = "0xB31228")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xB31388", Offset = "0xB31388", VA = "0xB31388")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xB3138C", Offset = "0xB3138C", VA = "0xB3138C")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xB31420", Offset = "0xB31420", VA = "0xB31420")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xB314B4", Offset = "0xB314B4", VA = "0xB314B4")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xB314B8", Offset = "0xB314B8", VA = "0xB314B8")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xB314BC", Offset = "0xB314BC", VA = "0xB314BC")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xB314C4", Offset = "0xB314C4", VA = "0xB314C4")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xB314C8", Offset = "0xB314C8", VA = "0xB314C8")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xB314CC", Offset = "0xB314CC", VA = "0xB314CC")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xB31738", Offset = "0xB31738", VA = "0xB31738")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xB319A8", Offset = "0xB319A8", VA = "0xB319A8")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xB31CBC", Offset = "0xB31CBC", VA = "0xB31CBC")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xB32040", Offset = "0xB32040", VA = "0xB32040")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xB32158", Offset = "0xB32158", VA = "0xB32158")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xB322C8", Offset = "0xB322C8", VA = "0xB322C8")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xB32598", Offset = "0xB32598", VA = "0xB32598")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xB325A0", Offset = "0xB325A0", VA = "0xB325A0")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xB325A4", Offset = "0xB325A4", VA = "0xB325A4")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xB325A8", Offset = "0xB325A8", VA = "0xB325A8")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xB325AC", Offset = "0xB325AC", VA = "0xB325AC")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xB325B0", Offset = "0xB325B0", VA = "0xB325B0")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xB325B4", Offset = "0xB325B4", VA = "0xB325B4")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xB327A8", Offset = "0xB327A8", VA = "0xB327A8")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xB3299C", Offset = "0xB3299C", VA = "0xB3299C")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xB32B98", Offset = "0xB32B98", VA = "0xB32B98")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xB32D94", Offset = "0xB32D94", VA = "0xB32D94")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xB32F88", Offset = "0xB32F88", VA = "0xB32F88")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xB33184", Offset = "0xB33184", VA = "0xB33184")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xB333F8", Offset = "0xB333F8", VA = "0xB333F8")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xB33664", Offset = "0xB33664", VA = "0xB33664")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xB33858", Offset = "0xB33858", VA = "0xB33858")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xB33ACC", Offset = "0xB33ACC", VA = "0xB33ACC")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000274")]
	public struct BoundarySystem
	{
		[Token(Token = "0x20004F0")]
		public enum BoundaryType
		{
			[Token(Token = "0x4001A6B")]
			OuterBoundary,
			[Token(Token = "0x4001A6C")]
			PlayArea
		}

		[Token(Token = "0x20004F1")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x20004F2")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4001A72")]
			HandLeft,
			[Token(Token = "0x4001A73")]
			HandRight,
			[Token(Token = "0x4001A74")]
			Head
		}

		[Token(Token = "0x20004F3")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x4001A76")]
			PVR_NOREASON,
			[Token(Token = "0x4001A77")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x4001A78")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x4001A79")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x4001A7A")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4001A7B")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4001137")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001990")]
		[Address(RVA = "0xA6B52C", Offset = "0xA6B52C", VA = "0xA6B52C")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x6001991")]
		[Address(RVA = "0xA6B5BC", Offset = "0xA6B5BC", VA = "0xA6B5BC")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6001992")]
		[Address(RVA = "0xA6B64C", Offset = "0xA6B64C", VA = "0xA6B64C")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6001993")]
		[Address(RVA = "0xA6B6EC", Offset = "0xA6B6EC", VA = "0xA6B6EC")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6001994")]
		[Address(RVA = "0xA6B77C", Offset = "0xA6B77C", VA = "0xA6B77C")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6001995")]
		[Address(RVA = "0xA6B814", Offset = "0xA6B814", VA = "0xA6B814")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6001996")]
		[Address(RVA = "0xA6B8AC", Offset = "0xA6B8AC", VA = "0xA6B8AC")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6001997")]
		[Address(RVA = "0xA6B944", Offset = "0xA6B944", VA = "0xA6B944")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001998")]
		[Address(RVA = "0xA6BA64", Offset = "0xA6BA64", VA = "0xA6BA64")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6001999")]
		[Address(RVA = "0xA6BBAC", Offset = "0xA6BBAC", VA = "0xA6BBAC")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x600199A")]
		[Address(RVA = "0xA6BC58", Offset = "0xA6BC58", VA = "0xA6BC58")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x600199B")]
		[Address(RVA = "0xA6BD20", Offset = "0xA6BD20", VA = "0xA6BD20")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x600199C")]
		[Address(RVA = "0xA6BDB8", Offset = "0xA6BDB8", VA = "0xA6BDB8")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600199D")]
		[Address(RVA = "0xA6BE58", Offset = "0xA6BE58", VA = "0xA6BE58")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x600199E")]
		[Address(RVA = "0xA6BEF0", Offset = "0xA6BEF0", VA = "0xA6BEF0")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x600199F")]
		[Address(RVA = "0xA6BF98", Offset = "0xA6BF98", VA = "0xA6BF98")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xA6C050", Offset = "0xA6C050", VA = "0xA6C050")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xA6C0F0", Offset = "0xA6C0F0", VA = "0xA6C0F0")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xA6C1A0", Offset = "0xA6C1A0", VA = "0xA6C1A0")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xA6C240", Offset = "0xA6C240", VA = "0xA6C240")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xA6C2D0", Offset = "0xA6C2D0", VA = "0xA6C2D0")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xA6C2D4", Offset = "0xA6C2D4", VA = "0xA6C2D4")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xA6C2D8", Offset = "0xA6C2D8", VA = "0xA6C2D8")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xA6C2E0", Offset = "0xA6C2E0", VA = "0xA6C2E0")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xA6C2E4", Offset = "0xA6C2E4", VA = "0xA6C2E4")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xA6C2E8", Offset = "0xA6C2E8", VA = "0xA6C2E8")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xA6C2EC", Offset = "0xA6C2EC", VA = "0xA6C2EC")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xA6C2F0", Offset = "0xA6C2F0", VA = "0xA6C2F0")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xA6C434", Offset = "0xA6C434", VA = "0xA6C434")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xA6C584", Offset = "0xA6C584", VA = "0xA6C584")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xA6C7DC", Offset = "0xA6C7DC", VA = "0xA6C7DC")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xA6C838", Offset = "0xA6C838", VA = "0xA6C838")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xA6C83C", Offset = "0xA6C83C", VA = "0xA6C83C")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xA6C844", Offset = "0xA6C844", VA = "0xA6C844")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xA6C848", Offset = "0xA6C848", VA = "0xA6C848")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xA6C850", Offset = "0xA6C850", VA = "0xA6C850")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xA6C854", Offset = "0xA6C854", VA = "0xA6C854")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xA6C99C", Offset = "0xA6C99C", VA = "0xA6C99C")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xA6CAE4", Offset = "0xA6CAE4", VA = "0xA6CAE4")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xA6CCD8", Offset = "0xA6CCD8", VA = "0xA6CCD8")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xA6CE14", Offset = "0xA6CE14", VA = "0xA6CE14")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xA6CF3C", Offset = "0xA6CF3C", VA = "0xA6CF3C")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xA6D064", Offset = "0xA6D064", VA = "0xA6D064")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000275")]
	public struct PlatformSettings
	{
		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xB2A16C", Offset = "0xB2A16C", VA = "0xB2A16C")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xB2A45C", Offset = "0xB2A45C", VA = "0xB2A45C")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xB2A7EC", Offset = "0xB2A7EC", VA = "0xB2A7EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x554BFC", Offset = "0x554BFC")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xB2AAF0", Offset = "0xB2AAF0", VA = "0xB2AAF0")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xB2AE08", Offset = "0xB2AE08", VA = "0xB2AE08")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xB2B120", Offset = "0xB2B120", VA = "0xB2B120")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000276")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4001139")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x400113A")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x2000277")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x400113C")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x400113D")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x400113E")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x400113F")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4001140")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x2000278")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4001141")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xB359C8", Offset = "0xB359C8", VA = "0xB359C8")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xB35A78", Offset = "0xB35A78", VA = "0xB35A78")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xB35B10", Offset = "0xB35B10", VA = "0xB35B10")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xB35BA0", Offset = "0xB35BA0", VA = "0xB35BA0")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xB35C48", Offset = "0xB35C48", VA = "0xB35C48")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xB35C4C", Offset = "0xB35C4C", VA = "0xB35C4C")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xB35C50", Offset = "0xB35C50", VA = "0xB35C50")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xB35C54", Offset = "0xB35C54", VA = "0xB35C54")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xB35F00", Offset = "0xB35F00", VA = "0xB35F00")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xB36134", Offset = "0xB36134", VA = "0xB36134")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xB362C4", Offset = "0xB362C4", VA = "0xB362C4")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xB36514", Offset = "0xB36514", VA = "0xB36514")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xB3669C", Offset = "0xB3669C", VA = "0xB3669C")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xB367E0", Offset = "0xB367E0", VA = "0xB367E0")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xB369F4", Offset = "0xB369F4", VA = "0xB369F4")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xB36CE8", Offset = "0xB36CE8", VA = "0xB36CE8")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xB36F3C", Offset = "0xB36F3C", VA = "0xB36F3C")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xB35C8C", Offset = "0xB35C8C", VA = "0xB35C8C")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xB35F20", Offset = "0xB35F20", VA = "0xB35F20")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xB36138", Offset = "0xB36138", VA = "0xB36138")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xB362C8", Offset = "0xB362C8", VA = "0xB362C8")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xB37140", Offset = "0xB37140", VA = "0xB37140")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xB37394", Offset = "0xB37394", VA = "0xB37394")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xB37598", Offset = "0xB37598", VA = "0xB37598")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xB37710", Offset = "0xB37710", VA = "0xB37710")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xB37888", Offset = "0xB37888", VA = "0xB37888")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xB379E8", Offset = "0xB379E8", VA = "0xB379E8")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xB37B48", Offset = "0xB37B48", VA = "0xB37B48")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xB37D2C", Offset = "0xB37D2C", VA = "0xB37D2C")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xB37D34", Offset = "0xB37D34", VA = "0xB37D34")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xB366A0", Offset = "0xB366A0", VA = "0xB366A0")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xB36518", Offset = "0xB36518", VA = "0xB36518")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x2000279")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xA64D14", Offset = "0xA64D14", VA = "0xA64D14")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xA64D7C", Offset = "0xA64D7C", VA = "0xA64D7C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xA64D80", Offset = "0xA64D80", VA = "0xA64D80")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xA64F38", Offset = "0xA64F38", VA = "0xA64F38")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xA65034", Offset = "0xA65034", VA = "0xA65034")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public static class Achievements
	{
		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xA6509C", Offset = "0xA6509C", VA = "0xA6509C")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xA65594", Offset = "0xA65594", VA = "0xA65594")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xA65844", Offset = "0xA65844", VA = "0xA65844")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xA65AD4", Offset = "0xA65AD4", VA = "0xA65AD4")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xA65D50", Offset = "0xA65D50", VA = "0xA65D50")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xA65F28", Offset = "0xA65F28", VA = "0xA65F28")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xA661A4", Offset = "0xA661A4", VA = "0xA661A4")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xA663D0", Offset = "0xA663D0", VA = "0xA663D0")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xA665FC", Offset = "0xA665FC", VA = "0xA665FC")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xA669D8", Offset = "0xA669D8", VA = "0xA669D8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200027B")]
	public enum AchievementType
	{
		[Token(Token = "0x4001149")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54934C", Offset = "0x54934C")]
		Unknown,
		[Token(Token = "0x400114A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549384", Offset = "0x549384")]
		Simple,
		[Token(Token = "0x400114B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5493BC", Offset = "0x5493BC")]
		Bitfield,
		[Token(Token = "0x400114C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5493F4", Offset = "0x5493F4")]
		Count
	}
	[Token(Token = "0x200027C")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xA65160", Offset = "0xA65160", VA = "0xA65160")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xA64DDC", Offset = "0xA64DDC", VA = "0xA64DDC")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xA64F94", Offset = "0xA64F94", VA = "0xA64F94")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xA673CC", Offset = "0xA673CC", VA = "0xA673CC")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xA67474", Offset = "0xA67474", VA = "0xA67474")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xA67580", Offset = "0xA67580", VA = "0xA67580")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xA6768C", Offset = "0xA6768C", VA = "0xA6768C")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xA65670", Offset = "0xA65670", VA = "0xA65670")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xA65920", Offset = "0xA65920", VA = "0xA65920")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xA65B98", Offset = "0xA65B98", VA = "0xA65B98")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xA65E14", Offset = "0xA65E14", VA = "0xA65E14")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xA65FF4", Offset = "0xA65FF4", VA = "0xA65FF4")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xA66270", Offset = "0xA66270", VA = "0xA66270")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xA6649C", Offset = "0xA6649C", VA = "0xA6649C")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xA66750", Offset = "0xA66750", VA = "0xA66750")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xA67798", Offset = "0xA67798", VA = "0xA67798")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xA67864", Offset = "0xA67864", VA = "0xA67864")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xA678E4", Offset = "0xA678E4", VA = "0xA678E4")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xA6734C", Offset = "0xA6734C", VA = "0xA6734C")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xA67964", Offset = "0xA67964", VA = "0xA67964")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xA67A70", Offset = "0xA67A70", VA = "0xA67A70")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xA67B7C", Offset = "0xA67B7C", VA = "0xA67B7C")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xA67C88", Offset = "0xA67C88", VA = "0xA67C88")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xA67E08", Offset = "0xA67E08", VA = "0xA67E08")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xA67F14", Offset = "0xA67F14", VA = "0xA67F14")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xA68020", Offset = "0xA68020", VA = "0xA68020")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xA6812C", Offset = "0xA6812C", VA = "0xA6812C")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xA68238", Offset = "0xA68238", VA = "0xA68238")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xA68344", Offset = "0xA68344", VA = "0xA68344")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xA6848C", Offset = "0xA6848C", VA = "0xA6848C")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xA684FC", Offset = "0xA684FC", VA = "0xA684FC")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xA68608", Offset = "0xA68608", VA = "0xA68608")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xA68788", Offset = "0xA68788", VA = "0xA68788")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xA68894", Offset = "0xA68894", VA = "0xA68894")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xA689EC", Offset = "0xA689EC", VA = "0xA689EC")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xA68AF8", Offset = "0xA68AF8", VA = "0xA68AF8")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xA68C04", Offset = "0xA68C04", VA = "0xA68C04")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xA68D10", Offset = "0xA68D10", VA = "0xA68D10")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xA68E1C", Offset = "0xA68E1C", VA = "0xA68E1C")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xA68F28", Offset = "0xA68F28", VA = "0xA68F28")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xA69034", Offset = "0xA69034", VA = "0xA69034")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xA69140", Offset = "0xA69140", VA = "0xA69140")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xA6924C", Offset = "0xA6924C", VA = "0xA6924C")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xA69358", Offset = "0xA69358", VA = "0xA69358")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xA69578", Offset = "0xA69578", VA = "0xA69578")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xA66C7C", Offset = "0xA66C7C", VA = "0xA66C7C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xA6966C", Offset = "0xA6966C", VA = "0xA6966C")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xA66F10", Offset = "0xA66F10", VA = "0xA66F10")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xA671A4", Offset = "0xA671A4", VA = "0xA671A4")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x53917C", Offset = "0x53917C")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x170000C6")]
		public int Count
		{
			[Token(Token = "0x6001A23")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C7")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001A24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C8")]
		public T Item
		{
			[Token(Token = "0x6001A26")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001A27")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001A32")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CA")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001A33")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CB")]
		public string NextUrl
		{
			[Token(Token = "0x6001A34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001A35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A25")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001A28")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001A29")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A2A")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2B")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001A2C")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001A2D")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001A2E")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2F")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001A30")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001A36")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x20004F4")]
		private class RequestCallback
		{
			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x600273A")]
			[Address(RVA = "0xA69D80", Offset = "0xA69D80", VA = "0xA69D80")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x600273B")]
			[Address(RVA = "0xA69D88", Offset = "0xA69D88", VA = "0xA69D88")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x600273C")]
			[Address(RVA = "0xA69DB4", Offset = "0xA69DB4", VA = "0xA69DB4", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x20004F5")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x600273D")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x600273E")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xA69724", Offset = "0xA69724", VA = "0xA69724")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xA698BC", Offset = "0xA698BC", VA = "0xA698BC")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xA69B84", Offset = "0xA69B84", VA = "0xA69B84")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xA69C1C", Offset = "0xA69C1C", VA = "0xA69C1C")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xA69998", Offset = "0xA69998", VA = "0xA69998")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xA6A4F8", Offset = "0xA6A4F8", VA = "0xA6A4F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xA6A5F4", Offset = "0xA6A5F4", VA = "0xA6A5F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xA6A680", Offset = "0xA6A680", VA = "0xA6A680")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xA6A6DC", Offset = "0xA6A6DC", VA = "0xA6A6DC")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x20004F6")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170000CD")]
		public T Data
		{
			[Token(Token = "0x6001A42")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001A41")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001A43")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x2000286")]
	public class Pvr_Message
	{
		[Token(Token = "0x20004F7")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x20004F8")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001A7F")]
			Unknown = 0u,
			[Token(Token = "0x4001A80")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001A81")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001A82")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001A83")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001A84")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4001A85")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4001A86")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4001A87")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4001A88")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4001A89")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x4001A8A")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x20004F9")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54942C", Offset = "0x54942C")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170000CE")]
		public MessageType Type
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xA69CD4", Offset = "0xA69CD4", VA = "0xA69CD4")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170000CF")]
		public bool IsError
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xA6A8DC", Offset = "0xA6A8DC", VA = "0xA6A8DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D0")]
		public long RequestID
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xA69CCC", Offset = "0xA69CCC", VA = "0xA69CCC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170000D1")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xA6AB08", Offset = "0xA6AB08", VA = "0xA6AB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554C44", Offset = "0x554C44")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xA6AAB4", Offset = "0xA6AAB4", VA = "0xA6AAB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554C34", Offset = "0x554C34")]
			set
			{
			}
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xA6A6EC", Offset = "0xA6A6EC", VA = "0xA6A6EC")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xA6A8EC", Offset = "0xA6A8EC", VA = "0xA6A8EC", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xA6A8F4", Offset = "0xA6A8F4", VA = "0xA6A8F4", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xA6A8FC", Offset = "0xA6A8FC", VA = "0xA6A8FC", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xA6A904", Offset = "0xA6A904", VA = "0xA6A904", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xA6A90C", Offset = "0xA6A90C", VA = "0xA6A90C", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xA6A914", Offset = "0xA6A914", VA = "0xA6A914")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xA69938", Offset = "0xA69938", VA = "0xA69938")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000287")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xA66B6C", Offset = "0xA66B6C", VA = "0xA66B6C")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xA66BCC", Offset = "0xA66BCC", VA = "0xA66BCC", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xA66C1C", Offset = "0xA66C1C", VA = "0xA66C1C", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000288")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xA66E00", Offset = "0xA66E00", VA = "0xA66E00")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xA66E60", Offset = "0xA66E60", VA = "0xA66E60", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xA66EB0", Offset = "0xA66EB0", VA = "0xA66EB0", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000289")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xA67094", Offset = "0xA67094", VA = "0xA67094")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xA670F4", Offset = "0xA670F4", VA = "0xA670F4", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xA67144", Offset = "0xA67144", VA = "0xA67144", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200028A")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xA67238", Offset = "0xA67238", VA = "0xA67238")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xA67298", Offset = "0xA67298", VA = "0xA67298", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xA672E8", Offset = "0xA672E8", VA = "0xA672E8", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200028B")]
	public class Error
	{
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xA66B2C", Offset = "0xA66B2C", VA = "0xA66B2C")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x6001A5E")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x6001A5F")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001A60")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class Request
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54943C", Offset = "0x54943C")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x170000D2")]
		public long RequestID
		{
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xA698B4", Offset = "0xA698B4", VA = "0xA698B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554C54", Offset = "0x554C54")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xA6B40C", Offset = "0xA6B40C", VA = "0xA6B40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554C64", Offset = "0x554C64")]
			set
			{
			}
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xA6B3E0", Offset = "0xA6B3E0", VA = "0xA6B3E0")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xA6B414", Offset = "0xA6B414", VA = "0xA6B414")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xA6B490", Offset = "0xA6B490", VA = "0xA6B490", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xA6A5FC", Offset = "0xA6A5FC", VA = "0xA6A5FC")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200028E")]
	public enum FaceType : uint
	{
		[Token(Token = "0x400117B")]
		TRIANGLES,
		[Token(Token = "0x400117C")]
		QUADS
	}
	[Token(Token = "0x200028F")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400117E")]
		ABSORPTION,
		[Token(Token = "0x400117F")]
		TRANSMISSION,
		[Token(Token = "0x4001180")]
		SCATTERING
	}
	[Token(Token = "0x2000290")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000291")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x875C24", Offset = "0x875C24", VA = "0x875C24")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x875C9C", Offset = "0x875C9C", VA = "0x875C9C")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x875D18", Offset = "0x875D18", VA = "0x875D18")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x875D94", Offset = "0x875D94", VA = "0x875D94")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x875DE4", Offset = "0x875DE4", VA = "0x875DE4", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public enum AbuseReportType
	{
		[Token(Token = "0x4001187")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54944C", Offset = "0x54944C")]
		Unknown,
		[Token(Token = "0x4001188")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549484", Offset = "0x549484")]
		Object,
		[Token(Token = "0x4001189")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5494BC", Offset = "0x5494BC")]
		User
	}
	[Token(Token = "0x2000293")]
	public enum AchievementType
	{
		[Token(Token = "0x400118B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5494F4", Offset = "0x5494F4")]
		Unknown,
		[Token(Token = "0x400118C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54952C", Offset = "0x54952C")]
		Simple,
		[Token(Token = "0x400118D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549564", Offset = "0x549564")]
		Bitfield,
		[Token(Token = "0x400118E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54959C", Offset = "0x54959C")]
		Count
	}
	[Token(Token = "0x2000294")]
	public class AndroidPlatform
	{
		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x876750", Offset = "0x876750", VA = "0x876750")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x87680C", Offset = "0x87680C", VA = "0x87680C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x876900", Offset = "0x876900", VA = "0x876900")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class ApplicationOptions
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xF2D788", Offset = "0xF2D788", VA = "0xF2D788")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xF2D88C", Offset = "0xF2D88C", VA = "0xF2D88C")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xF2D9B0", Offset = "0xF2D9B0", VA = "0xF2D9B0")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xF2DA00", Offset = "0xF2DA00", VA = "0xF2DA00", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public static class Callback
	{
		[Token(Token = "0x20004FA")]
		private class RequestCallback
		{
			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x600274B")]
			[Address(RVA = "0xF505F4", Offset = "0xF505F4", VA = "0xF505F4")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0xF4FE70", Offset = "0xF4FE70", VA = "0xF4FE70")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x600274D")]
			[Address(RVA = "0xF505FC", Offset = "0xF505FC", VA = "0xF505FC", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20004FB")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x600274E")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x600274F")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6001A73")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xF4FD6C", Offset = "0xF4FD6C", VA = "0xF4FD6C")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6001A75")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xF4FE9C", Offset = "0xF4FE9C", VA = "0xF4FE9C")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xF4FF78", Offset = "0xF4FF78", VA = "0xF4FF78")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xF50228", Offset = "0xF50228", VA = "0xF50228")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xF502C4", Offset = "0xF502C4", VA = "0xF502C4")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xF50374", Offset = "0xF50374", VA = "0xF50374")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xF4FFFC", Offset = "0xF4FFFC", VA = "0xF4FFFC")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class CAPI
	{
		[Token(Token = "0x20004FC")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x6002750")]
			[Address(RVA = "0x5CC564", Offset = "0x5CC564", VA = "0x5CC564")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6002751")]
			[Address(RVA = "0x5CC57C", Offset = "0x5CC57C", VA = "0x5CC57C")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6002752")]
			[Address(RVA = "0x5CC598", Offset = "0x5CC598", VA = "0x5CC598")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20004FD")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x6002753")]
			[Address(RVA = "0x5CC664", Offset = "0x5CC664", VA = "0x5CC664")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20004FE")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20004FF")]
		public struct OculusInitParams
		{
			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4001A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x539C50", Offset = "0x539C50")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4001194")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4001196")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xF2EEC4", Offset = "0xF2EEC4", VA = "0xF2EEC4")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xF2F088", Offset = "0xF2F088", VA = "0xF2F088")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xF2F720", Offset = "0xF2F720", VA = "0xF2F720")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xF2F7E4", Offset = "0xF2F7E4", VA = "0xF2F7E4")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xF2FB14", Offset = "0xF2FB14", VA = "0xF2FB14")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xF2FC34", Offset = "0xF2FC34", VA = "0xF2FC34")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xF2FCC0", Offset = "0xF2FCC0", VA = "0xF2FCC0")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xF2FD30", Offset = "0xF2FD30", VA = "0xF2FD30")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xF2FE28", Offset = "0xF2FE28", VA = "0xF2FE28")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xF2FECC", Offset = "0xF2FECC", VA = "0xF2FECC")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xF3006C", Offset = "0xF3006C", VA = "0xF3006C")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xF30128", Offset = "0xF30128", VA = "0xF30128")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xF301C8", Offset = "0xF301C8", VA = "0xF301C8")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xF30280", Offset = "0xF30280", VA = "0xF30280")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xF3034C", Offset = "0xF3034C", VA = "0xF3034C")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xF30488", Offset = "0xF30488", VA = "0xF30488")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xF30554", Offset = "0xF30554", VA = "0xF30554")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xF30620", Offset = "0xF30620", VA = "0xF30620")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xF306E8", Offset = "0xF306E8", VA = "0xF306E8")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xF307A4", Offset = "0xF307A4", VA = "0xF307A4")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xF30804", Offset = "0xF30804", VA = "0xF30804")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xF30894", Offset = "0xF30894", VA = "0xF30894")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xF30924", Offset = "0xF30924", VA = "0xF30924")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xF309C4", Offset = "0xF309C4", VA = "0xF309C4")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xF30A64", Offset = "0xF30A64", VA = "0xF30A64")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xF30AF4", Offset = "0xF30AF4", VA = "0xF30AF4")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xF30B94", Offset = "0xF30B94", VA = "0xF30B94")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xF30C24", Offset = "0xF30C24", VA = "0xF30C24")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xF30CC4", Offset = "0xF30CC4", VA = "0xF30CC4")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xF30D84", Offset = "0xF30D84", VA = "0xF30D84")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xF30E14", Offset = "0xF30E14", VA = "0xF30E14")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xF30EB4", Offset = "0xF30EB4", VA = "0xF30EB4")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xF30F54", Offset = "0xF30F54", VA = "0xF30F54")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xF30FF4", Offset = "0xF30FF4", VA = "0xF30FF4")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xF31084", Offset = "0xF31084", VA = "0xF31084")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xF3114C", Offset = "0xF3114C", VA = "0xF3114C")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xF311DC", Offset = "0xF311DC", VA = "0xF311DC")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xF31280", Offset = "0xF31280", VA = "0xF31280")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xF31334", Offset = "0xF31334", VA = "0xF31334")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xF316B4", Offset = "0xF316B4", VA = "0xF316B4")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xF31774", Offset = "0xF31774", VA = "0xF31774")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xF31804", Offset = "0xF31804", VA = "0xF31804")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xF318FC", Offset = "0xF318FC", VA = "0xF318FC")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xF31AC4", Offset = "0xF31AC4", VA = "0xF31AC4")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xF31B8C", Offset = "0xF31B8C", VA = "0xF31B8C")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xF31C28", Offset = "0xF31C28", VA = "0xF31C28")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xF31C90", Offset = "0xF31C90", VA = "0xF31C90")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xF31D30", Offset = "0xF31D30", VA = "0xF31D30")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xF31DD0", Offset = "0xF31DD0", VA = "0xF31DD0")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xF31E68", Offset = "0xF31E68", VA = "0xF31E68")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xF31F08", Offset = "0xF31F08", VA = "0xF31F08")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xF31F98", Offset = "0xF31F98", VA = "0xF31F98")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xF32038", Offset = "0xF32038", VA = "0xF32038")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xF320E0", Offset = "0xF320E0", VA = "0xF320E0")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xF32180", Offset = "0xF32180", VA = "0xF32180")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xF32210", Offset = "0xF32210", VA = "0xF32210")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xF322E8", Offset = "0xF322E8", VA = "0xF322E8")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xF323B0", Offset = "0xF323B0", VA = "0xF323B0")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xF32440", Offset = "0xF32440", VA = "0xF32440")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xF324D0", Offset = "0xF324D0", VA = "0xF324D0")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xF32568", Offset = "0xF32568", VA = "0xF32568")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xF325F8", Offset = "0xF325F8", VA = "0xF325F8")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xF32698", Offset = "0xF32698", VA = "0xF32698")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xF32738", Offset = "0xF32738", VA = "0xF32738")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xF327D8", Offset = "0xF327D8", VA = "0xF327D8")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xF32868", Offset = "0xF32868", VA = "0xF32868")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xF32928", Offset = "0xF32928", VA = "0xF32928")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xF329E8", Offset = "0xF329E8", VA = "0xF329E8")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xF32A88", Offset = "0xF32A88", VA = "0xF32A88")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xF32B60", Offset = "0xF32B60", VA = "0xF32B60")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xF32C38", Offset = "0xF32C38", VA = "0xF32C38")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xF32CD8", Offset = "0xF32CD8", VA = "0xF32CD8")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xF32D78", Offset = "0xF32D78", VA = "0xF32D78")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xF32E28", Offset = "0xF32E28", VA = "0xF32E28")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xF32EB8", Offset = "0xF32EB8", VA = "0xF32EB8")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xF32F48", Offset = "0xF32F48", VA = "0xF32F48")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xF32FE8", Offset = "0xF32FE8", VA = "0xF32FE8")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xF33088", Offset = "0xF33088", VA = "0xF33088")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xF33128", Offset = "0xF33128", VA = "0xF33128")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xF331C8", Offset = "0xF331C8", VA = "0xF331C8")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xF33268", Offset = "0xF33268", VA = "0xF33268")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xF33320", Offset = "0xF33320", VA = "0xF33320")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xF333D0", Offset = "0xF333D0", VA = "0xF333D0")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xF334A4", Offset = "0xF334A4", VA = "0xF334A4")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xF33554", Offset = "0xF33554", VA = "0xF33554")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xF335E4", Offset = "0xF335E4", VA = "0xF335E4")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xF33674", Offset = "0xF33674", VA = "0xF33674")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xF337E4", Offset = "0xF337E4", VA = "0xF337E4")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xF33954", Offset = "0xF33954", VA = "0xF33954")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xF339FC", Offset = "0xF339FC", VA = "0xF339FC")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xF33A9C", Offset = "0xF33A9C", VA = "0xF33A9C")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xF33B4C", Offset = "0xF33B4C", VA = "0xF33B4C")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xF33BDC", Offset = "0xF33BDC", VA = "0xF33BDC")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xF33C6C", Offset = "0xF33C6C", VA = "0xF33C6C")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xF33D1C", Offset = "0xF33D1C", VA = "0xF33D1C")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xF33DAC", Offset = "0xF33DAC", VA = "0xF33DAC")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xF33E3C", Offset = "0xF33E3C", VA = "0xF33E3C")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xF33EE4", Offset = "0xF33EE4", VA = "0xF33EE4")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xF2DC94", Offset = "0xF2DC94", VA = "0xF2DC94")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xF2DE00", Offset = "0xF2DE00", VA = "0xF2DE00")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xF2DF6C", Offset = "0xF2DF6C", VA = "0xF2DF6C")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xF33F84", Offset = "0xF33F84", VA = "0xF33F84")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xF2E0E0", Offset = "0xF2E0E0", VA = "0xF2E0E0")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xF2E24C", Offset = "0xF2E24C", VA = "0xF2E24C")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xF2E3B8", Offset = "0xF2E3B8", VA = "0xF2E3B8")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xF34024", Offset = "0xF34024", VA = "0xF34024")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xF2E52C", Offset = "0xF2E52C", VA = "0xF2E52C")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xF2E698", Offset = "0xF2E698", VA = "0xF2E698")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xF2E804", Offset = "0xF2E804", VA = "0xF2E804")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xF340C4", Offset = "0xF340C4", VA = "0xF340C4")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xF2E970", Offset = "0xF2E970", VA = "0xF2E970")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xF2EACC", Offset = "0xF2EACC", VA = "0xF2EACC")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xF2EC38", Offset = "0xF2EC38", VA = "0xF2EC38")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xF2EDA4", Offset = "0xF2EDA4", VA = "0xF2EDA4")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xF34164", Offset = "0xF34164", VA = "0xF34164")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xF34204", Offset = "0xF34204", VA = "0xF34204")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xF342D8", Offset = "0xF342D8", VA = "0xF342D8")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xF34388", Offset = "0xF34388", VA = "0xF34388")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xF34458", Offset = "0xF34458", VA = "0xF34458")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xF34518", Offset = "0xF34518", VA = "0xF34518")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xF345E8", Offset = "0xF345E8", VA = "0xF345E8")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xF346BC", Offset = "0xF346BC", VA = "0xF346BC")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xF3476C", Offset = "0xF3476C", VA = "0xF3476C")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xF34840", Offset = "0xF34840", VA = "0xF34840")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xF348F0", Offset = "0xF348F0", VA = "0xF348F0")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xF34998", Offset = "0xF34998", VA = "0xF34998")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xF34A38", Offset = "0xF34A38", VA = "0xF34A38")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xF34B0C", Offset = "0xF34B0C", VA = "0xF34B0C")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xF34BBC", Offset = "0xF34BBC", VA = "0xF34BBC")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xF34C64", Offset = "0xF34C64", VA = "0xF34C64")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xF34D04", Offset = "0xF34D04", VA = "0xF34D04")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xF34DD8", Offset = "0xF34DD8", VA = "0xF34DD8")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xF34E88", Offset = "0xF34E88", VA = "0xF34E88")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xF34F7C", Offset = "0xF34F7C", VA = "0xF34F7C")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xF35034", Offset = "0xF35034", VA = "0xF35034")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xF35128", Offset = "0xF35128", VA = "0xF35128")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xF351E0", Offset = "0xF351E0", VA = "0xF351E0")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xF352FC", Offset = "0xF352FC", VA = "0xF352FC")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xF353E4", Offset = "0xF353E4", VA = "0xF353E4")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xF35474", Offset = "0xF35474", VA = "0xF35474")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xF35504", Offset = "0xF35504", VA = "0xF35504")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xF355AC", Offset = "0xF355AC", VA = "0xF355AC")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xF3564C", Offset = "0xF3564C", VA = "0xF3564C")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xF356F4", Offset = "0xF356F4", VA = "0xF356F4")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xF35790", Offset = "0xF35790", VA = "0xF35790")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xF35838", Offset = "0xF35838", VA = "0xF35838")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xF358D8", Offset = "0xF358D8", VA = "0xF358D8")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xF359AC", Offset = "0xF359AC", VA = "0xF359AC")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xF35A5C", Offset = "0xF35A5C", VA = "0xF35A5C")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xF35BBC", Offset = "0xF35BBC", VA = "0xF35BBC")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xF35DB0", Offset = "0xF35DB0", VA = "0xF35DB0")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xF35E58", Offset = "0xF35E58", VA = "0xF35E58")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xF35EF8", Offset = "0xF35EF8", VA = "0xF35EF8")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xF35FA0", Offset = "0xF35FA0", VA = "0xF35FA0")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xF36040", Offset = "0xF36040", VA = "0xF36040")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xF361B0", Offset = "0xF361B0", VA = "0xF361B0")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xF36240", Offset = "0xF36240", VA = "0xF36240")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xF362E8", Offset = "0xF362E8", VA = "0xF362E8")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xF36388", Offset = "0xF36388", VA = "0xF36388")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xF36418", Offset = "0xF36418", VA = "0xF36418")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xF364C0", Offset = "0xF364C0", VA = "0xF364C0")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xF36560", Offset = "0xF36560", VA = "0xF36560")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xF36630", Offset = "0xF36630", VA = "0xF36630")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xF366F8", Offset = "0xF366F8", VA = "0xF366F8")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xF367B8", Offset = "0xF367B8", VA = "0xF367B8")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xF36870", Offset = "0xF36870", VA = "0xF36870")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xF36910", Offset = "0xF36910", VA = "0xF36910")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xF369B0", Offset = "0xF369B0", VA = "0xF369B0")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xF36A88", Offset = "0xF36A88", VA = "0xF36A88")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xF36B60", Offset = "0xF36B60", VA = "0xF36B60")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xF36BF0", Offset = "0xF36BF0", VA = "0xF36BF0")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xF36C98", Offset = "0xF36C98", VA = "0xF36C98")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xF36D38", Offset = "0xF36D38", VA = "0xF36D38")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xF36DC8", Offset = "0xF36DC8", VA = "0xF36DC8")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xF36E58", Offset = "0xF36E58", VA = "0xF36E58")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xF36EE8", Offset = "0xF36EE8", VA = "0xF36EE8")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xF36F98", Offset = "0xF36F98", VA = "0xF36F98")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xF37028", Offset = "0xF37028", VA = "0xF37028")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xF370B8", Offset = "0xF370B8", VA = "0xF370B8")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xF37158", Offset = "0xF37158", VA = "0xF37158")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xF371F8", Offset = "0xF371F8", VA = "0xF371F8")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xF372B0", Offset = "0xF372B0", VA = "0xF372B0")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xF37360", Offset = "0xF37360", VA = "0xF37360")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xF37418", Offset = "0xF37418", VA = "0xF37418")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xF374C8", Offset = "0xF374C8", VA = "0xF374C8")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xF3759C", Offset = "0xF3759C", VA = "0xF3759C")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xF3764C", Offset = "0xF3764C", VA = "0xF3764C")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xF376DC", Offset = "0xF376DC", VA = "0xF376DC")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xF377AC", Offset = "0xF377AC", VA = "0xF377AC")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xF37874", Offset = "0xF37874", VA = "0xF37874")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xF3792C", Offset = "0xF3792C", VA = "0xF3792C")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xF379DC", Offset = "0xF379DC", VA = "0xF379DC")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xF37A9C", Offset = "0xF37A9C", VA = "0xF37A9C")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xF37B54", Offset = "0xF37B54", VA = "0xF37B54")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xF37C0C", Offset = "0xF37C0C", VA = "0xF37C0C")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xF37CBC", Offset = "0xF37CBC", VA = "0xF37CBC")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xF37D74", Offset = "0xF37D74", VA = "0xF37D74")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xF37E24", Offset = "0xF37E24", VA = "0xF37E24")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xF37EDC", Offset = "0xF37EDC", VA = "0xF37EDC")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xF37F8C", Offset = "0xF37F8C", VA = "0xF37F8C")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xF3803C", Offset = "0xF3803C", VA = "0xF3803C")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xF380EC", Offset = "0xF380EC", VA = "0xF380EC")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xF3817C", Offset = "0xF3817C", VA = "0xF3817C")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xF3823C", Offset = "0xF3823C", VA = "0xF3823C")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xF382F4", Offset = "0xF382F4", VA = "0xF382F4")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xF383A4", Offset = "0xF383A4", VA = "0xF383A4")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xF3845C", Offset = "0xF3845C", VA = "0xF3845C")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xF38624", Offset = "0xF38624", VA = "0xF38624")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xF386C4", Offset = "0xF386C4", VA = "0xF386C4")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xF387A0", Offset = "0xF387A0", VA = "0xF387A0")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xF38858", Offset = "0xF38858", VA = "0xF38858")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xF388E8", Offset = "0xF388E8", VA = "0xF388E8")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xF38988", Offset = "0xF38988", VA = "0xF38988")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xF38A18", Offset = "0xF38A18", VA = "0xF38A18")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xF38AC8", Offset = "0xF38AC8", VA = "0xF38AC8")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xF38B68", Offset = "0xF38B68", VA = "0xF38B68")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xF38BF8", Offset = "0xF38BF8", VA = "0xF38BF8")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xF38C98", Offset = "0xF38C98", VA = "0xF38C98")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xF38D44", Offset = "0xF38D44", VA = "0xF38D44")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xF38DE4", Offset = "0xF38DE4", VA = "0xF38DE4")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xF38E84", Offset = "0xF38E84", VA = "0xF38E84")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xF38F14", Offset = "0xF38F14", VA = "0xF38F14")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xF38FB4", Offset = "0xF38FB4", VA = "0xF38FB4")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xF3906C", Offset = "0xF3906C", VA = "0xF3906C")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xF39124", Offset = "0xF39124", VA = "0xF39124")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xF391C4", Offset = "0xF391C4", VA = "0xF391C4")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xF39254", Offset = "0xF39254", VA = "0xF39254")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xF392F4", Offset = "0xF392F4", VA = "0xF392F4")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xF39384", Offset = "0xF39384", VA = "0xF39384")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xF39424", Offset = "0xF39424", VA = "0xF39424")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xF394B4", Offset = "0xF394B4", VA = "0xF394B4")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xF39554", Offset = "0xF39554", VA = "0xF39554")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xF39610", Offset = "0xF39610", VA = "0xF39610")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xF396C0", Offset = "0xF396C0", VA = "0xF396C0")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xF39770", Offset = "0xF39770", VA = "0xF39770")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xF39820", Offset = "0xF39820", VA = "0xF39820")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xF398D4", Offset = "0xF398D4", VA = "0xF398D4")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xF39974", Offset = "0xF39974", VA = "0xF39974")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xF39A14", Offset = "0xF39A14", VA = "0xF39A14")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xF39AD0", Offset = "0xF39AD0", VA = "0xF39AD0")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xF39B80", Offset = "0xF39B80", VA = "0xF39B80")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xF39C38", Offset = "0xF39C38", VA = "0xF39C38")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xF39DFC", Offset = "0xF39DFC", VA = "0xF39DFC")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xF39EAC", Offset = "0xF39EAC", VA = "0xF39EAC")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xF39F5C", Offset = "0xF39F5C", VA = "0xF39F5C")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xF3A00C", Offset = "0xF3A00C", VA = "0xF3A00C")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xF3A0AC", Offset = "0xF3A0AC", VA = "0xF3A0AC")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xF3A14C", Offset = "0xF3A14C", VA = "0xF3A14C")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xF3A1F4", Offset = "0xF3A1F4", VA = "0xF3A1F4")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xF3A294", Offset = "0xF3A294", VA = "0xF3A294")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xF3A334", Offset = "0xF3A334", VA = "0xF3A334")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xF3A3C4", Offset = "0xF3A3C4", VA = "0xF3A3C4")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xF3A464", Offset = "0xF3A464", VA = "0xF3A464")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xF3A4F4", Offset = "0xF3A4F4", VA = "0xF3A4F4")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xF3A584", Offset = "0xF3A584", VA = "0xF3A584")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xF3A614", Offset = "0xF3A614", VA = "0xF3A614")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xF3A6B4", Offset = "0xF3A6B4", VA = "0xF3A6B4")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xF3A754", Offset = "0xF3A754", VA = "0xF3A754")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xF3A7E4", Offset = "0xF3A7E4", VA = "0xF3A7E4")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xF3A874", Offset = "0xF3A874", VA = "0xF3A874")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xF3A914", Offset = "0xF3A914", VA = "0xF3A914")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xF3A9B4", Offset = "0xF3A9B4", VA = "0xF3A9B4")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xF3AA54", Offset = "0xF3AA54", VA = "0xF3AA54")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xF3AAF4", Offset = "0xF3AAF4", VA = "0xF3AAF4")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xF3ABA4", Offset = "0xF3ABA4", VA = "0xF3ABA4")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xF3AC44", Offset = "0xF3AC44", VA = "0xF3AC44")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xF3ACD4", Offset = "0xF3ACD4", VA = "0xF3ACD4")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xF3AD64", Offset = "0xF3AD64", VA = "0xF3AD64")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xF3ADF4", Offset = "0xF3ADF4", VA = "0xF3ADF4")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xF3AE84", Offset = "0xF3AE84", VA = "0xF3AE84")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xF3AF40", Offset = "0xF3AF40", VA = "0xF3AF40")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xF3AFF0", Offset = "0xF3AFF0", VA = "0xF3AFF0")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xF3B0B4", Offset = "0xF3B0B4", VA = "0xF3B0B4")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xF3B16C", Offset = "0xF3B16C", VA = "0xF3B16C")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xF3B22C", Offset = "0xF3B22C", VA = "0xF3B22C")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xF3B2EC", Offset = "0xF3B2EC", VA = "0xF3B2EC")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xF3B38C", Offset = "0xF3B38C", VA = "0xF3B38C")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xF3B3F4", Offset = "0xF3B3F4", VA = "0xF3B3F4")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xF3B494", Offset = "0xF3B494", VA = "0xF3B494")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xF3B534", Offset = "0xF3B534", VA = "0xF3B534")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xF3B59C", Offset = "0xF3B59C", VA = "0xF3B59C")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xF3B63C", Offset = "0xF3B63C", VA = "0xF3B63C")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xF3B6DC", Offset = "0xF3B6DC", VA = "0xF3B6DC")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xF3B77C", Offset = "0xF3B77C", VA = "0xF3B77C")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xF3B82C", Offset = "0xF3B82C", VA = "0xF3B82C")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xF3B894", Offset = "0xF3B894", VA = "0xF3B894")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xF3B934", Offset = "0xF3B934", VA = "0xF3B934")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xF3B9D4", Offset = "0xF3B9D4", VA = "0xF3B9D4")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xF3BA7C", Offset = "0xF3BA7C", VA = "0xF3BA7C")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xF3BAE4", Offset = "0xF3BAE4", VA = "0xF3BAE4")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xF3BB84", Offset = "0xF3BB84", VA = "0xF3BB84")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xF3BC24", Offset = "0xF3BC24", VA = "0xF3BC24")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xF3BCCC", Offset = "0xF3BCCC", VA = "0xF3BCCC")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xF3BD34", Offset = "0xF3BD34", VA = "0xF3BD34")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xF3BDD4", Offset = "0xF3BDD4", VA = "0xF3BDD4")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xF3BE3C", Offset = "0xF3BE3C", VA = "0xF3BE3C")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xF3BEDC", Offset = "0xF3BEDC", VA = "0xF3BEDC")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xF3BF8C", Offset = "0xF3BF8C", VA = "0xF3BF8C")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xF3BFF4", Offset = "0xF3BFF4", VA = "0xF3BFF4")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xF3C094", Offset = "0xF3C094", VA = "0xF3C094")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xF3C134", Offset = "0xF3C134", VA = "0xF3C134")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xF3C1DC", Offset = "0xF3C1DC", VA = "0xF3C1DC")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xF3C284", Offset = "0xF3C284", VA = "0xF3C284")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xF3C2EC", Offset = "0xF3C2EC", VA = "0xF3C2EC")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xF3C38C", Offset = "0xF3C38C", VA = "0xF3C38C")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xF3C42C", Offset = "0xF3C42C", VA = "0xF3C42C")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xF3C4CC", Offset = "0xF3C4CC", VA = "0xF3C4CC")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xF3C534", Offset = "0xF3C534", VA = "0xF3C534")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xF3C5D4", Offset = "0xF3C5D4", VA = "0xF3C5D4")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xF3C674", Offset = "0xF3C674", VA = "0xF3C674")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xF3C6DC", Offset = "0xF3C6DC", VA = "0xF3C6DC")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xF3C77C", Offset = "0xF3C77C", VA = "0xF3C77C")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xF3C81C", Offset = "0xF3C81C", VA = "0xF3C81C")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xF3C884", Offset = "0xF3C884", VA = "0xF3C884")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xF3C924", Offset = "0xF3C924", VA = "0xF3C924")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xF3C98C", Offset = "0xF3C98C", VA = "0xF3C98C")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xF3CA2C", Offset = "0xF3CA2C", VA = "0xF3CA2C")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xF3CA94", Offset = "0xF3CA94", VA = "0xF3CA94")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xF3CB34", Offset = "0xF3CB34", VA = "0xF3CB34")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xF3CB9C", Offset = "0xF3CB9C", VA = "0xF3CB9C")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xF3CC3C", Offset = "0xF3CC3C", VA = "0xF3CC3C")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xF3CCDC", Offset = "0xF3CCDC", VA = "0xF3CCDC")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xF3CD44", Offset = "0xF3CD44", VA = "0xF3CD44")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xF3CDE4", Offset = "0xF3CDE4", VA = "0xF3CDE4")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xF3CE94", Offset = "0xF3CE94", VA = "0xF3CE94")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xF3CF34", Offset = "0xF3CF34", VA = "0xF3CF34")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xF3CFD4", Offset = "0xF3CFD4", VA = "0xF3CFD4")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xF3D074", Offset = "0xF3D074", VA = "0xF3D074")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xF3D0DC", Offset = "0xF3D0DC", VA = "0xF3D0DC")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xF3D17C", Offset = "0xF3D17C", VA = "0xF3D17C")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xF3D224", Offset = "0xF3D224", VA = "0xF3D224")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xF3D2C4", Offset = "0xF3D2C4", VA = "0xF3D2C4")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xF3D364", Offset = "0xF3D364", VA = "0xF3D364")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xF3D3CC", Offset = "0xF3D3CC", VA = "0xF3D3CC")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xF3D46C", Offset = "0xF3D46C", VA = "0xF3D46C")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xF3D514", Offset = "0xF3D514", VA = "0xF3D514")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xF3D5B4", Offset = "0xF3D5B4", VA = "0xF3D5B4")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xF3D61C", Offset = "0xF3D61C", VA = "0xF3D61C")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xF3D6BC", Offset = "0xF3D6BC", VA = "0xF3D6BC")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xF3D75C", Offset = "0xF3D75C", VA = "0xF3D75C")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xF3D7FC", Offset = "0xF3D7FC", VA = "0xF3D7FC")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xF3D89C", Offset = "0xF3D89C", VA = "0xF3D89C")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xF3D93C", Offset = "0xF3D93C", VA = "0xF3D93C")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xF3D9E4", Offset = "0xF3D9E4", VA = "0xF3D9E4")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xF3DA84", Offset = "0xF3DA84", VA = "0xF3DA84")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xF3DB24", Offset = "0xF3DB24", VA = "0xF3DB24")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xF3DB8C", Offset = "0xF3DB8C", VA = "0xF3DB8C")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xF3DC2C", Offset = "0xF3DC2C", VA = "0xF3DC2C")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xF3DCCC", Offset = "0xF3DCCC", VA = "0xF3DCCC")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xF3DD6C", Offset = "0xF3DD6C", VA = "0xF3DD6C")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xF3DDD4", Offset = "0xF3DDD4", VA = "0xF3DDD4")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xF3DE74", Offset = "0xF3DE74", VA = "0xF3DE74")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xF3DF24", Offset = "0xF3DF24", VA = "0xF3DF24")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xF3DFC4", Offset = "0xF3DFC4", VA = "0xF3DFC4")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xF3E02C", Offset = "0xF3E02C", VA = "0xF3E02C")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xF3E0CC", Offset = "0xF3E0CC", VA = "0xF3E0CC")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xF3E16C", Offset = "0xF3E16C", VA = "0xF3E16C")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xF3E20C", Offset = "0xF3E20C", VA = "0xF3E20C")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xF3E274", Offset = "0xF3E274", VA = "0xF3E274")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xF3E314", Offset = "0xF3E314", VA = "0xF3E314")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xF3E430", Offset = "0xF3E430", VA = "0xF3E430")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xF3E390", Offset = "0xF3E390", VA = "0xF3E390")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xF3E4D0", Offset = "0xF3E4D0", VA = "0xF3E4D0")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xF3E538", Offset = "0xF3E538", VA = "0xF3E538")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xF3E5D8", Offset = "0xF3E5D8", VA = "0xF3E5D8")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xF3E640", Offset = "0xF3E640", VA = "0xF3E640")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xF3E6E0", Offset = "0xF3E6E0", VA = "0xF3E6E0")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xF3E780", Offset = "0xF3E780", VA = "0xF3E780")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xF3E820", Offset = "0xF3E820", VA = "0xF3E820")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xF3E888", Offset = "0xF3E888", VA = "0xF3E888")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xF3E928", Offset = "0xF3E928", VA = "0xF3E928")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xF3E990", Offset = "0xF3E990", VA = "0xF3E990")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xF3EA30", Offset = "0xF3EA30", VA = "0xF3EA30")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xF3EAD0", Offset = "0xF3EAD0", VA = "0xF3EAD0")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xF3EB70", Offset = "0xF3EB70", VA = "0xF3EB70")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xF3EBD8", Offset = "0xF3EBD8", VA = "0xF3EBD8")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xF3EC78", Offset = "0xF3EC78", VA = "0xF3EC78")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xF3ED28", Offset = "0xF3ED28", VA = "0xF3ED28")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xF3ED90", Offset = "0xF3ED90", VA = "0xF3ED90")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xF3EE30", Offset = "0xF3EE30", VA = "0xF3EE30")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xF3EED0", Offset = "0xF3EED0", VA = "0xF3EED0")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xF3EF78", Offset = "0xF3EF78", VA = "0xF3EF78")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xF3EFE0", Offset = "0xF3EFE0", VA = "0xF3EFE0")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xF3F080", Offset = "0xF3F080", VA = "0xF3F080")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xF3F0E8", Offset = "0xF3F0E8", VA = "0xF3F0E8")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xF3F188", Offset = "0xF3F188", VA = "0xF3F188")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xF3F228", Offset = "0xF3F228", VA = "0xF3F228")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xF3F290", Offset = "0xF3F290", VA = "0xF3F290")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xF3F330", Offset = "0xF3F330", VA = "0xF3F330")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xF3F3EC", Offset = "0xF3F3EC", VA = "0xF3F3EC")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xF2F9DC", Offset = "0xF2F9DC", VA = "0xF2F9DC")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xF3F49C", Offset = "0xF3F49C", VA = "0xF3F49C")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xF2F93C", Offset = "0xF2F93C", VA = "0xF2F93C")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xF2FA54", Offset = "0xF2FA54", VA = "0xF2FA54")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xF3F54C", Offset = "0xF3F54C", VA = "0xF3F54C")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xF3F5FC", Offset = "0xF3F5FC", VA = "0xF3F5FC")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xF3F698", Offset = "0xF3F698", VA = "0xF3F698")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xF3F700", Offset = "0xF3F700", VA = "0xF3F700")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xF3F7A0", Offset = "0xF3F7A0", VA = "0xF3F7A0")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xF3F840", Offset = "0xF3F840", VA = "0xF3F840")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xF3F8A8", Offset = "0xF3F8A8", VA = "0xF3F8A8")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xF3F948", Offset = "0xF3F948", VA = "0xF3F948")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xF3F9E8", Offset = "0xF3F9E8", VA = "0xF3F9E8")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xF3FA88", Offset = "0xF3FA88", VA = "0xF3FA88")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xF3FB28", Offset = "0xF3FB28", VA = "0xF3FB28")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xF3FBD0", Offset = "0xF3FBD0", VA = "0xF3FBD0")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xF3FC38", Offset = "0xF3FC38", VA = "0xF3FC38")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xF3FCD8", Offset = "0xF3FCD8", VA = "0xF3FCD8")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xF3FD40", Offset = "0xF3FD40", VA = "0xF3FD40")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xF3FDE0", Offset = "0xF3FDE0", VA = "0xF3FDE0")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xF3FE48", Offset = "0xF3FE48", VA = "0xF3FE48")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xF3FEE8", Offset = "0xF3FEE8", VA = "0xF3FEE8")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xF3FF88", Offset = "0xF3FF88", VA = "0xF3FF88")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xF3FFF0", Offset = "0xF3FFF0", VA = "0xF3FFF0")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xF40090", Offset = "0xF40090", VA = "0xF40090")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xF40140", Offset = "0xF40140", VA = "0xF40140")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xF401E0", Offset = "0xF401E0", VA = "0xF401E0")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xF40248", Offset = "0xF40248", VA = "0xF40248")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xF402E8", Offset = "0xF402E8", VA = "0xF402E8")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xF40350", Offset = "0xF40350", VA = "0xF40350")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xF403F0", Offset = "0xF403F0", VA = "0xF403F0")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xF40458", Offset = "0xF40458", VA = "0xF40458")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xF404F8", Offset = "0xF404F8", VA = "0xF404F8")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xF405A0", Offset = "0xF405A0", VA = "0xF405A0")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xF40648", Offset = "0xF40648", VA = "0xF40648")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xF406B0", Offset = "0xF406B0", VA = "0xF406B0")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xF40750", Offset = "0xF40750", VA = "0xF40750")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xF407B8", Offset = "0xF407B8", VA = "0xF407B8")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xF40858", Offset = "0xF40858", VA = "0xF40858")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xF408F8", Offset = "0xF408F8", VA = "0xF408F8")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xF40998", Offset = "0xF40998", VA = "0xF40998")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xF40A38", Offset = "0xF40A38", VA = "0xF40A38")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xF40AE0", Offset = "0xF40AE0", VA = "0xF40AE0")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xF40B88", Offset = "0xF40B88", VA = "0xF40B88")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xF40C30", Offset = "0xF40C30", VA = "0xF40C30")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xF40CD0", Offset = "0xF40CD0", VA = "0xF40CD0")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xF40D78", Offset = "0xF40D78", VA = "0xF40D78")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xF40E20", Offset = "0xF40E20", VA = "0xF40E20")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xF40F3C", Offset = "0xF40F3C", VA = "0xF40F3C")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xF40E9C", Offset = "0xF40E9C", VA = "0xF40E9C")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xF40FDC", Offset = "0xF40FDC", VA = "0xF40FDC")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xF4107C", Offset = "0xF4107C", VA = "0xF4107C")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xF4111C", Offset = "0xF4111C", VA = "0xF4111C")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xF41184", Offset = "0xF41184", VA = "0xF41184")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xF41224", Offset = "0xF41224", VA = "0xF41224")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xF412C4", Offset = "0xF412C4", VA = "0xF412C4")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xF41374", Offset = "0xF41374", VA = "0xF41374")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xF413DC", Offset = "0xF413DC", VA = "0xF413DC")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xF4147C", Offset = "0xF4147C", VA = "0xF4147C")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xF414E4", Offset = "0xF414E4", VA = "0xF414E4")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xF41584", Offset = "0xF41584", VA = "0xF41584")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xF41624", Offset = "0xF41624", VA = "0xF41624")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xF416C4", Offset = "0xF416C4", VA = "0xF416C4")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xF4176C", Offset = "0xF4176C", VA = "0xF4176C")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xF41814", Offset = "0xF41814", VA = "0xF41814")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xF418BC", Offset = "0xF418BC", VA = "0xF418BC")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xF41924", Offset = "0xF41924", VA = "0xF41924")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xF419C4", Offset = "0xF419C4", VA = "0xF419C4")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xF41A64", Offset = "0xF41A64", VA = "0xF41A64")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xF41ACC", Offset = "0xF41ACC", VA = "0xF41ACC")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xF41B6C", Offset = "0xF41B6C", VA = "0xF41B6C")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xF41C1C", Offset = "0xF41C1C", VA = "0xF41C1C")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xF41CBC", Offset = "0xF41CBC", VA = "0xF41CBC")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xF41D64", Offset = "0xF41D64", VA = "0xF41D64")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xF41E04", Offset = "0xF41E04", VA = "0xF41E04")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xF41EAC", Offset = "0xF41EAC", VA = "0xF41EAC")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xF41F54", Offset = "0xF41F54", VA = "0xF41F54")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xF41FFC", Offset = "0xF41FFC", VA = "0xF41FFC")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xF4209C", Offset = "0xF4209C", VA = "0xF4209C")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xF42144", Offset = "0xF42144", VA = "0xF42144")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xF421E4", Offset = "0xF421E4", VA = "0xF421E4")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xF42284", Offset = "0xF42284", VA = "0xF42284")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xF422EC", Offset = "0xF422EC", VA = "0xF422EC")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xF4238C", Offset = "0xF4238C", VA = "0xF4238C")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xF4242C", Offset = "0xF4242C", VA = "0xF4242C")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xF424CC", Offset = "0xF424CC", VA = "0xF424CC")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xF42574", Offset = "0xF42574", VA = "0xF42574")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xF42614", Offset = "0xF42614", VA = "0xF42614")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xF426B4", Offset = "0xF426B4", VA = "0xF426B4")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xF42754", Offset = "0xF42754", VA = "0xF42754")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xF427BC", Offset = "0xF427BC", VA = "0xF427BC")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xF4285C", Offset = "0xF4285C", VA = "0xF4285C")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xF4290C", Offset = "0xF4290C", VA = "0xF4290C")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xF429AC", Offset = "0xF429AC", VA = "0xF429AC")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xF42A4C", Offset = "0xF42A4C", VA = "0xF42A4C")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xF42AEC", Offset = "0xF42AEC", VA = "0xF42AEC")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xF42B54", Offset = "0xF42B54", VA = "0xF42B54")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xF42BF4", Offset = "0xF42BF4", VA = "0xF42BF4")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xF42C94", Offset = "0xF42C94", VA = "0xF42C94")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xF42D44", Offset = "0xF42D44", VA = "0xF42D44")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xF42DAC", Offset = "0xF42DAC", VA = "0xF42DAC")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xF42E4C", Offset = "0xF42E4C", VA = "0xF42E4C")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xF42EEC", Offset = "0xF42EEC", VA = "0xF42EEC")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xF42F94", Offset = "0xF42F94", VA = "0xF42F94")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xF43034", Offset = "0xF43034", VA = "0xF43034")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xF430D4", Offset = "0xF430D4", VA = "0xF430D4")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xF43174", Offset = "0xF43174", VA = "0xF43174")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xF43214", Offset = "0xF43214", VA = "0xF43214")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xF4327C", Offset = "0xF4327C", VA = "0xF4327C")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xF4331C", Offset = "0xF4331C", VA = "0xF4331C")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xF433BC", Offset = "0xF433BC", VA = "0xF433BC")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xF43424", Offset = "0xF43424", VA = "0xF43424")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xF434C4", Offset = "0xF434C4", VA = "0xF434C4")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xF43564", Offset = "0xF43564", VA = "0xF43564")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xF43604", Offset = "0xF43604", VA = "0xF43604")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xF436B4", Offset = "0xF436B4", VA = "0xF436B4")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xF43754", Offset = "0xF43754", VA = "0xF43754")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xF437F4", Offset = "0xF437F4", VA = "0xF437F4")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xF43894", Offset = "0xF43894", VA = "0xF43894")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xF43944", Offset = "0xF43944", VA = "0xF43944")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xF439E4", Offset = "0xF439E4", VA = "0xF439E4")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xF43A84", Offset = "0xF43A84", VA = "0xF43A84")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xF43B24", Offset = "0xF43B24", VA = "0xF43B24")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xF43B8C", Offset = "0xF43B8C", VA = "0xF43B8C")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xF43C2C", Offset = "0xF43C2C", VA = "0xF43C2C")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xF43CCC", Offset = "0xF43CCC", VA = "0xF43CCC")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xF43D6C", Offset = "0xF43D6C", VA = "0xF43D6C")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xF43E14", Offset = "0xF43E14", VA = "0xF43E14")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xF43EC4", Offset = "0xF43EC4", VA = "0xF43EC4")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xF43F64", Offset = "0xF43F64", VA = "0xF43F64")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xF44004", Offset = "0xF44004", VA = "0xF44004")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xF440A4", Offset = "0xF440A4", VA = "0xF440A4")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xF44144", Offset = "0xF44144", VA = "0xF44144")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xF441E4", Offset = "0xF441E4", VA = "0xF441E4")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xF44284", Offset = "0xF44284", VA = "0xF44284")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xF44324", Offset = "0xF44324", VA = "0xF44324")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xF443C4", Offset = "0xF443C4", VA = "0xF443C4")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xF44464", Offset = "0xF44464", VA = "0xF44464")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xF44504", Offset = "0xF44504", VA = "0xF44504")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xF445A4", Offset = "0xF445A4", VA = "0xF445A4")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xF44644", Offset = "0xF44644", VA = "0xF44644")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xF446E4", Offset = "0xF446E4", VA = "0xF446E4")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xF44784", Offset = "0xF44784", VA = "0xF44784")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xF44824", Offset = "0xF44824", VA = "0xF44824")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xF448C4", Offset = "0xF448C4", VA = "0xF448C4")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xF44964", Offset = "0xF44964", VA = "0xF44964")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xF44A04", Offset = "0xF44A04", VA = "0xF44A04")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xF44AA4", Offset = "0xF44AA4", VA = "0xF44AA4")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xF44B44", Offset = "0xF44B44", VA = "0xF44B44")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xF44BE4", Offset = "0xF44BE4", VA = "0xF44BE4")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xF44C84", Offset = "0xF44C84", VA = "0xF44C84")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xF44D24", Offset = "0xF44D24", VA = "0xF44D24")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xF44DC4", Offset = "0xF44DC4", VA = "0xF44DC4")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xF44E64", Offset = "0xF44E64", VA = "0xF44E64")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xF44F04", Offset = "0xF44F04", VA = "0xF44F04")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xF44FA4", Offset = "0xF44FA4", VA = "0xF44FA4")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xF45044", Offset = "0xF45044", VA = "0xF45044")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xF450E4", Offset = "0xF450E4", VA = "0xF450E4")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xF45184", Offset = "0xF45184", VA = "0xF45184")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xF45224", Offset = "0xF45224", VA = "0xF45224")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xF452C4", Offset = "0xF452C4", VA = "0xF452C4")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xF45364", Offset = "0xF45364", VA = "0xF45364")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xF45404", Offset = "0xF45404", VA = "0xF45404")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xF454A4", Offset = "0xF454A4", VA = "0xF454A4")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xF45544", Offset = "0xF45544", VA = "0xF45544")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xF455E4", Offset = "0xF455E4", VA = "0xF455E4")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xF45684", Offset = "0xF45684", VA = "0xF45684")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xF45724", Offset = "0xF45724", VA = "0xF45724")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xF457C4", Offset = "0xF457C4", VA = "0xF457C4")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xF45864", Offset = "0xF45864", VA = "0xF45864")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xF45904", Offset = "0xF45904", VA = "0xF45904")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xF459A4", Offset = "0xF459A4", VA = "0xF459A4")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xF45A44", Offset = "0xF45A44", VA = "0xF45A44")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xF45AE4", Offset = "0xF45AE4", VA = "0xF45AE4")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xF45B84", Offset = "0xF45B84", VA = "0xF45B84")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xF45C24", Offset = "0xF45C24", VA = "0xF45C24")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xF45CC4", Offset = "0xF45CC4", VA = "0xF45CC4")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xF45D64", Offset = "0xF45D64", VA = "0xF45D64")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xF45E04", Offset = "0xF45E04", VA = "0xF45E04")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xF45EA4", Offset = "0xF45EA4", VA = "0xF45EA4")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xF45F44", Offset = "0xF45F44", VA = "0xF45F44")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xF45FE4", Offset = "0xF45FE4", VA = "0xF45FE4")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xF46084", Offset = "0xF46084", VA = "0xF46084")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xF46124", Offset = "0xF46124", VA = "0xF46124")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xF461C4", Offset = "0xF461C4", VA = "0xF461C4")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xF46264", Offset = "0xF46264", VA = "0xF46264")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xF46304", Offset = "0xF46304", VA = "0xF46304")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xF463A4", Offset = "0xF463A4", VA = "0xF463A4")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xF46444", Offset = "0xF46444", VA = "0xF46444")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xF464E4", Offset = "0xF464E4", VA = "0xF464E4")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xF46584", Offset = "0xF46584", VA = "0xF46584")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xF46624", Offset = "0xF46624", VA = "0xF46624")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xF4668C", Offset = "0xF4668C", VA = "0xF4668C")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xF4672C", Offset = "0xF4672C", VA = "0xF4672C")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xF467CC", Offset = "0xF467CC", VA = "0xF467CC")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xF4686C", Offset = "0xF4686C", VA = "0xF4686C")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xF4690C", Offset = "0xF4690C", VA = "0xF4690C")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xF469AC", Offset = "0xF469AC", VA = "0xF469AC")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xF46A4C", Offset = "0xF46A4C", VA = "0xF46A4C")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xF46AEC", Offset = "0xF46AEC", VA = "0xF46AEC")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xF46B8C", Offset = "0xF46B8C", VA = "0xF46B8C")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xF46C2C", Offset = "0xF46C2C", VA = "0xF46C2C")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xF46CD4", Offset = "0xF46CD4", VA = "0xF46CD4")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xF46D74", Offset = "0xF46D74", VA = "0xF46D74")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xF46E14", Offset = "0xF46E14", VA = "0xF46E14")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xF46ED4", Offset = "0xF46ED4", VA = "0xF46ED4")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xF46F94", Offset = "0xF46F94", VA = "0xF46F94")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xF47054", Offset = "0xF47054", VA = "0xF47054")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xF47104", Offset = "0xF47104", VA = "0xF47104")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xF471A4", Offset = "0xF471A4", VA = "0xF471A4")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xF47244", Offset = "0xF47244", VA = "0xF47244")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xF472E4", Offset = "0xF472E4", VA = "0xF472E4")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xF47384", Offset = "0xF47384", VA = "0xF47384")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xF47424", Offset = "0xF47424", VA = "0xF47424")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xF474C4", Offset = "0xF474C4", VA = "0xF474C4")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xF47564", Offset = "0xF47564", VA = "0xF47564")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xF47604", Offset = "0xF47604", VA = "0xF47604")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xF476A4", Offset = "0xF476A4", VA = "0xF476A4")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xF47744", Offset = "0xF47744", VA = "0xF47744")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xF477E4", Offset = "0xF477E4", VA = "0xF477E4")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xF47884", Offset = "0xF47884", VA = "0xF47884")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xF47924", Offset = "0xF47924", VA = "0xF47924")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xF479C0", Offset = "0xF479C0", VA = "0xF479C0")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xF47A60", Offset = "0xF47A60", VA = "0xF47A60")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xF47AFC", Offset = "0xF47AFC", VA = "0xF47AFC")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xF47B9C", Offset = "0xF47B9C", VA = "0xF47B9C")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xF47C3C", Offset = "0xF47C3C", VA = "0xF47C3C")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xF47CDC", Offset = "0xF47CDC", VA = "0xF47CDC")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xF47D44", Offset = "0xF47D44", VA = "0xF47D44")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xF47DE4", Offset = "0xF47DE4", VA = "0xF47DE4")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xF47E4C", Offset = "0xF47E4C", VA = "0xF47E4C")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xF47EEC", Offset = "0xF47EEC", VA = "0xF47EEC")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xF47F8C", Offset = "0xF47F8C", VA = "0xF47F8C")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xF47FF4", Offset = "0xF47FF4", VA = "0xF47FF4")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xF48094", Offset = "0xF48094", VA = "0xF48094")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xF480FC", Offset = "0xF480FC", VA = "0xF480FC")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xF4819C", Offset = "0xF4819C", VA = "0xF4819C")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xF4824C", Offset = "0xF4824C", VA = "0xF4824C")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xF482EC", Offset = "0xF482EC", VA = "0xF482EC")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xF4838C", Offset = "0xF4838C", VA = "0xF4838C")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xF4842C", Offset = "0xF4842C", VA = "0xF4842C")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xF484D4", Offset = "0xF484D4", VA = "0xF484D4")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xF48574", Offset = "0xF48574", VA = "0xF48574")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xF48614", Offset = "0xF48614", VA = "0xF48614")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xF4867C", Offset = "0xF4867C", VA = "0xF4867C")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xF4871C", Offset = "0xF4871C", VA = "0xF4871C")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xF48784", Offset = "0xF48784", VA = "0xF48784")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xF48824", Offset = "0xF48824", VA = "0xF48824")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xF4888C", Offset = "0xF4888C", VA = "0xF4888C")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xF4892C", Offset = "0xF4892C", VA = "0xF4892C")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xF48994", Offset = "0xF48994", VA = "0xF48994")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xF48A34", Offset = "0xF48A34", VA = "0xF48A34")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xF48A9C", Offset = "0xF48A9C", VA = "0xF48A9C")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xF48B3C", Offset = "0xF48B3C", VA = "0xF48B3C")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xF48BA4", Offset = "0xF48BA4", VA = "0xF48BA4")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xF48C44", Offset = "0xF48C44", VA = "0xF48C44")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xF48CF4", Offset = "0xF48CF4", VA = "0xF48CF4")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xF48D5C", Offset = "0xF48D5C", VA = "0xF48D5C")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xF48DFC", Offset = "0xF48DFC", VA = "0xF48DFC")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xF48E9C", Offset = "0xF48E9C", VA = "0xF48E9C")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xF48F44", Offset = "0xF48F44", VA = "0xF48F44")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xF48FAC", Offset = "0xF48FAC", VA = "0xF48FAC")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xF4904C", Offset = "0xF4904C", VA = "0xF4904C")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xF490B4", Offset = "0xF490B4", VA = "0xF490B4")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xF49154", Offset = "0xF49154", VA = "0xF49154")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xF491F4", Offset = "0xF491F4", VA = "0xF491F4")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xF4925C", Offset = "0xF4925C", VA = "0xF4925C")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xF492FC", Offset = "0xF492FC", VA = "0xF492FC")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xF493AC", Offset = "0xF493AC", VA = "0xF493AC")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xF49414", Offset = "0xF49414", VA = "0xF49414")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xF494B4", Offset = "0xF494B4", VA = "0xF494B4")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xF49554", Offset = "0xF49554", VA = "0xF49554")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xF495FC", Offset = "0xF495FC", VA = "0xF495FC")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xF4969C", Offset = "0xF4969C", VA = "0xF4969C")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xF4973C", Offset = "0xF4973C", VA = "0xF4973C")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xF497A4", Offset = "0xF497A4", VA = "0xF497A4")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xF49844", Offset = "0xF49844", VA = "0xF49844")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xF498E4", Offset = "0xF498E4", VA = "0xF498E4")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xF49984", Offset = "0xF49984", VA = "0xF49984")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xF49A2C", Offset = "0xF49A2C", VA = "0xF49A2C")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xF49ACC", Offset = "0xF49ACC", VA = "0xF49ACC")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xF49B6C", Offset = "0xF49B6C", VA = "0xF49B6C")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xF49C0C", Offset = "0xF49C0C", VA = "0xF49C0C")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xF49CAC", Offset = "0xF49CAC", VA = "0xF49CAC")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xF49D14", Offset = "0xF49D14", VA = "0xF49D14")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xF49DB4", Offset = "0xF49DB4", VA = "0xF49DB4")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xF49E50", Offset = "0xF49E50", VA = "0xF49E50")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xF49EEC", Offset = "0xF49EEC", VA = "0xF49EEC")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xF49F8C", Offset = "0xF49F8C", VA = "0xF49F8C")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xF4A028", Offset = "0xF4A028", VA = "0xF4A028")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xF4A0C8", Offset = "0xF4A0C8", VA = "0xF4A0C8")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xF4A178", Offset = "0xF4A178", VA = "0xF4A178")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xF4A1E0", Offset = "0xF4A1E0", VA = "0xF4A1E0")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xF4A280", Offset = "0xF4A280", VA = "0xF4A280")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xF4A320", Offset = "0xF4A320", VA = "0xF4A320")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xF4A3C8", Offset = "0xF4A3C8", VA = "0xF4A3C8")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xF4A468", Offset = "0xF4A468", VA = "0xF4A468")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xF4A508", Offset = "0xF4A508", VA = "0xF4A508")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xF4A5A8", Offset = "0xF4A5A8", VA = "0xF4A5A8")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xF4A610", Offset = "0xF4A610", VA = "0xF4A610")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xF4A6B0", Offset = "0xF4A6B0", VA = "0xF4A6B0")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xF4A760", Offset = "0xF4A760", VA = "0xF4A760")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xF4A7C8", Offset = "0xF4A7C8", VA = "0xF4A7C8")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xF4A868", Offset = "0xF4A868", VA = "0xF4A868")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xF4A908", Offset = "0xF4A908", VA = "0xF4A908")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xF4A9B0", Offset = "0xF4A9B0", VA = "0xF4A9B0")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xF4AA50", Offset = "0xF4AA50", VA = "0xF4AA50")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xF4AAF0", Offset = "0xF4AAF0", VA = "0xF4AAF0")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xF4ABA0", Offset = "0xF4ABA0", VA = "0xF4ABA0")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xF4AC40", Offset = "0xF4AC40", VA = "0xF4AC40")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xF4ACE0", Offset = "0xF4ACE0", VA = "0xF4ACE0")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xF4AD88", Offset = "0xF4AD88", VA = "0xF4AD88")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xF4AE28", Offset = "0xF4AE28", VA = "0xF4AE28")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xF4AEC8", Offset = "0xF4AEC8", VA = "0xF4AEC8")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xF4AF68", Offset = "0xF4AF68", VA = "0xF4AF68")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xF4B008", Offset = "0xF4B008", VA = "0xF4B008")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xF4B0A8", Offset = "0xF4B0A8", VA = "0xF4B0A8")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xF4B148", Offset = "0xF4B148", VA = "0xF4B148")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xF4B1B0", Offset = "0xF4B1B0", VA = "0xF4B1B0")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xF4B250", Offset = "0xF4B250", VA = "0xF4B250")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xF4B300", Offset = "0xF4B300", VA = "0xF4B300")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xF4B3A0", Offset = "0xF4B3A0", VA = "0xF4B3A0")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xF4B408", Offset = "0xF4B408", VA = "0xF4B408")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xF4B4A8", Offset = "0xF4B4A8", VA = "0xF4B4A8")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xF4B548", Offset = "0xF4B548", VA = "0xF4B548")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xF4B5E8", Offset = "0xF4B5E8", VA = "0xF4B5E8")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xF4B650", Offset = "0xF4B650", VA = "0xF4B650")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xF4B6F0", Offset = "0xF4B6F0", VA = "0xF4B6F0")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xF4B790", Offset = "0xF4B790", VA = "0xF4B790")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xF4B7F8", Offset = "0xF4B7F8", VA = "0xF4B7F8")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xF4B898", Offset = "0xF4B898", VA = "0xF4B898")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xF4B938", Offset = "0xF4B938", VA = "0xF4B938")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xF4B9D8", Offset = "0xF4B9D8", VA = "0xF4B9D8")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xF4BA40", Offset = "0xF4BA40", VA = "0xF4BA40")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xF4BAE0", Offset = "0xF4BAE0", VA = "0xF4BAE0")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xF4BB80", Offset = "0xF4BB80", VA = "0xF4BB80")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xF4BC20", Offset = "0xF4BC20", VA = "0xF4BC20")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xF4BCD0", Offset = "0xF4BCD0", VA = "0xF4BCD0")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xF4BD70", Offset = "0xF4BD70", VA = "0xF4BD70")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xF4BE10", Offset = "0xF4BE10", VA = "0xF4BE10")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xF4BE78", Offset = "0xF4BE78", VA = "0xF4BE78")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xF4BF18", Offset = "0xF4BF18", VA = "0xF4BF18")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xF4BF80", Offset = "0xF4BF80", VA = "0xF4BF80")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xF4C020", Offset = "0xF4C020", VA = "0xF4C020")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xF4C088", Offset = "0xF4C088", VA = "0xF4C088")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xF4C128", Offset = "0xF4C128", VA = "0xF4C128")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xF4C190", Offset = "0xF4C190", VA = "0xF4C190")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xF4C230", Offset = "0xF4C230", VA = "0xF4C230")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xF4C2D0", Offset = "0xF4C2D0", VA = "0xF4C2D0")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xF4C338", Offset = "0xF4C338", VA = "0xF4C338")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xF4C3D8", Offset = "0xF4C3D8", VA = "0xF4C3D8")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xF4C478", Offset = "0xF4C478", VA = "0xF4C478")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xF4C518", Offset = "0xF4C518", VA = "0xF4C518")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xF4C5C8", Offset = "0xF4C5C8", VA = "0xF4C5C8")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xF4C630", Offset = "0xF4C630", VA = "0xF4C630")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xF4C6D0", Offset = "0xF4C6D0", VA = "0xF4C6D0")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xF4C770", Offset = "0xF4C770", VA = "0xF4C770")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xF4C818", Offset = "0xF4C818", VA = "0xF4C818")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xF4C8C8", Offset = "0xF4C8C8", VA = "0xF4C8C8")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xF4C930", Offset = "0xF4C930", VA = "0xF4C930")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xF4C9D0", Offset = "0xF4C9D0", VA = "0xF4C9D0")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xF4CA70", Offset = "0xF4CA70", VA = "0xF4CA70")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xF4CB18", Offset = "0xF4CB18", VA = "0xF4CB18")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xF4CB80", Offset = "0xF4CB80", VA = "0xF4CB80")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xF4CC20", Offset = "0xF4CC20", VA = "0xF4CC20")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xF4CCC8", Offset = "0xF4CCC8", VA = "0xF4CCC8")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xF4CD68", Offset = "0xF4CD68", VA = "0xF4CD68")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xF4CE28", Offset = "0xF4CE28", VA = "0xF4CE28")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xF4CEE8", Offset = "0xF4CEE8", VA = "0xF4CEE8")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xF4CFA8", Offset = "0xF4CFA8", VA = "0xF4CFA8")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xF4D068", Offset = "0xF4D068", VA = "0xF4D068")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xF4D108", Offset = "0xF4D108", VA = "0xF4D108")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xF4D198", Offset = "0xF4D198", VA = "0xF4D198")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xF4D238", Offset = "0xF4D238", VA = "0xF4D238")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xF4D2E8", Offset = "0xF4D2E8", VA = "0xF4D2E8")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xF2D7FC", Offset = "0xF2D7FC", VA = "0xF2D7FC")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xF2DAC0", Offset = "0xF2DAC0", VA = "0xF2DAC0")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xF2D904", Offset = "0xF2D904", VA = "0xF2D904")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xF4D398", Offset = "0xF4D398", VA = "0xF4D398")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xF4D448", Offset = "0xF4D448", VA = "0xF4D448")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xF4D4D8", Offset = "0xF4D4D8", VA = "0xF4D4D8")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xF4D578", Offset = "0xF4D578", VA = "0xF4D578")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xF4D644", Offset = "0xF4D644", VA = "0xF4D644")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xF4D6FC", Offset = "0xF4D6FC", VA = "0xF4D6FC")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xF4D79C", Offset = "0xF4D79C", VA = "0xF4D79C")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xF4D84C", Offset = "0xF4D84C", VA = "0xF4D84C")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xF4D8FC", Offset = "0xF4D8FC", VA = "0xF4D8FC")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xF4D9AC", Offset = "0xF4D9AC", VA = "0xF4D9AC")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xF4DA4C", Offset = "0xF4DA4C", VA = "0xF4DA4C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xF4DB00", Offset = "0xF4DB00", VA = "0xF4DB00")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xF4DBB8", Offset = "0xF4DBB8", VA = "0xF4DBB8")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xF4DC74", Offset = "0xF4DC74", VA = "0xF4DC74")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xF4DD34", Offset = "0xF4DD34", VA = "0xF4DD34")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xF4DE00", Offset = "0xF4DE00", VA = "0xF4DE00")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xF4DEB8", Offset = "0xF4DEB8", VA = "0xF4DEB8")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xF4DF58", Offset = "0xF4DF58", VA = "0xF4DF58")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xF4E008", Offset = "0xF4E008", VA = "0xF4E008")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xF4E0B4", Offset = "0xF4E0B4", VA = "0xF4E0B4")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xF4E164", Offset = "0xF4E164", VA = "0xF4E164")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xF4E1F4", Offset = "0xF4E1F4", VA = "0xF4E1F4")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xF4E294", Offset = "0xF4E294", VA = "0xF4E294")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xF4E340", Offset = "0xF4E340", VA = "0xF4E340")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xF4E3F0", Offset = "0xF4E3F0", VA = "0xF4E3F0")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xF4E4BC", Offset = "0xF4E4BC", VA = "0xF4E4BC")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xF4E574", Offset = "0xF4E574", VA = "0xF4E574")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xF4E614", Offset = "0xF4E614", VA = "0xF4E614")]
		public static extern void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value);

		[PreserveSig]
		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xF4E638", Offset = "0xF4E638", VA = "0xF4E638")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xF4E6E8", Offset = "0xF4E6E8", VA = "0xF4E6E8")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xF4E798", Offset = "0xF4E798", VA = "0xF4E798")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xF4E844", Offset = "0xF4E844", VA = "0xF4E844")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xF4E8F4", Offset = "0xF4E8F4", VA = "0xF4E8F4")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xF4E984", Offset = "0xF4E984", VA = "0xF4E984")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xF4EA24", Offset = "0xF4EA24", VA = "0xF4EA24")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xF4EAF0", Offset = "0xF4EAF0", VA = "0xF4EAF0")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xF4EBA8", Offset = "0xF4EBA8", VA = "0xF4EBA8")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xF4EC48", Offset = "0xF4EC48", VA = "0xF4EC48")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xF4ECF8", Offset = "0xF4ECF8", VA = "0xF4ECF8")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xF4EDA8", Offset = "0xF4EDA8", VA = "0xF4EDA8")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xF4EE58", Offset = "0xF4EE58", VA = "0xF4EE58")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xF4EF08", Offset = "0xF4EF08", VA = "0xF4EF08")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xF4EFB8", Offset = "0xF4EFB8", VA = "0xF4EFB8")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xF4F068", Offset = "0xF4F068", VA = "0xF4F068")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xF4F0F8", Offset = "0xF4F0F8", VA = "0xF4F0F8")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xF4F198", Offset = "0xF4F198", VA = "0xF4F198")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xF4F248", Offset = "0xF4F248", VA = "0xF4F248")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xF4F2F8", Offset = "0xF4F2F8", VA = "0xF4F2F8")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xF4F398", Offset = "0xF4F398", VA = "0xF4F398")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xF4F448", Offset = "0xF4F448", VA = "0xF4F448")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xF4F4D8", Offset = "0xF4F4D8", VA = "0xF4F4D8")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xF4F578", Offset = "0xF4F578", VA = "0xF4F578")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xF4F628", Offset = "0xF4F628", VA = "0xF4F628")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xF4F6D8", Offset = "0xF4F6D8", VA = "0xF4F6D8")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4001198")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5495D4", Offset = "0x5495D4")]
		Unknown,
		[Token(Token = "0x4001199")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54960C", Offset = "0x54960C")]
		InSync,
		[Token(Token = "0x400119A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549644", Offset = "0x549644")]
		NeedsDownload,
		[Token(Token = "0x400119B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54967C", Offset = "0x54967C")]
		RemoteDownloading,
		[Token(Token = "0x400119C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5496B4", Offset = "0x5496B4")]
		NeedsUpload,
		[Token(Token = "0x400119D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5496EC", Offset = "0x5496EC")]
		LocalUploading,
		[Token(Token = "0x400119E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549724", Offset = "0x549724")]
		InConflict
	}
	[Token(Token = "0x2000299")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x40011A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54975C", Offset = "0x54975C")]
		Unknown,
		[Token(Token = "0x40011A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549794", Offset = "0x549794")]
		Ok,
		[Token(Token = "0x40011A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5497CC", Offset = "0x5497CC")]
		BetterVersionStored,
		[Token(Token = "0x40011A3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549804", Offset = "0x549804")]
		ManualMergeRequired
	}
	[Token(Token = "0x200029A")]
	public interface IMicrophone
	{
		[Token(Token = "0x6001DB4")]
		void Start();

		[Token(Token = "0x6001DB5")]
		void Stop();

		[Token(Token = "0x6001DB6")]
		float[] Update();
	}
	[Token(Token = "0x200029B")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6001DB7")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6001DB8")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6001DB9")]
		void Update();

		[Token(Token = "0x6001DBA")]
		int PeekSizeElements();
	}
	[Token(Token = "0x200029C")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x40011A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54983C", Offset = "0x54983C")]
		String,
		[Token(Token = "0x40011A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549874", Offset = "0x549874")]
		Int,
		[Token(Token = "0x40011A7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5498AC", Offset = "0x5498AC")]
		Double,
		[Token(Token = "0x40011A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5498E4", Offset = "0x5498E4")]
		Unknown
	}
	[Token(Token = "0x200029D")]
	public enum LaunchType
	{
		[Token(Token = "0x40011AA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54991C", Offset = "0x54991C")]
		Unknown,
		[Token(Token = "0x40011AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549954", Offset = "0x549954")]
		Normal,
		[Token(Token = "0x40011AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54998C", Offset = "0x54998C")]
		Invite,
		[Token(Token = "0x40011AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5499C4", Offset = "0x5499C4")]
		Coordinated,
		[Token(Token = "0x40011AE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x5499FC", Offset = "0x5499FC")]
		Deeplink
	}
	[Token(Token = "0x200029E")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x40011B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549A34", Offset = "0x549A34")]
		None,
		[Token(Token = "0x40011B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549A6C", Offset = "0x549A6C")]
		Friends,
		[Token(Token = "0x40011B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549AA4", Offset = "0x549AA4")]
		Unknown
	}
	[Token(Token = "0x200029F")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x40011B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549ADC", Offset = "0x549ADC")]
		Top,
		[Token(Token = "0x40011B5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549B14", Offset = "0x549B14")]
		CenteredOnViewer,
		[Token(Token = "0x40011B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549B4C", Offset = "0x549B4C")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x40011B7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549B84", Offset = "0x549B84")]
		Unknown
	}
	[Token(Token = "0x20002A0")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x40011B9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549BBC", Offset = "0x549BBC")]
		Unknown,
		[Token(Token = "0x40011BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549BF4", Offset = "0x549BF4")]
		Public,
		[Token(Token = "0x40011BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549C2C", Offset = "0x549C2C")]
		Friends,
		[Token(Token = "0x40011BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549C64", Offset = "0x549C64")]
		OnlyMe
	}
	[Token(Token = "0x20002A1")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x40011BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549C9C", Offset = "0x549C9C")]
		Unknown,
		[Token(Token = "0x40011BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549CD4", Offset = "0x549CD4")]
		MicrophoneOn,
		[Token(Token = "0x40011C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549D0C", Offset = "0x549D0C")]
		MicrophoneOff
	}
	[Token(Token = "0x20002A2")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x40011C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549D44", Offset = "0x549D44")]
		Success = 1,
		[Token(Token = "0x40011C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549D7C", Offset = "0x549D7C")]
		Unknown = 0,
		[Token(Token = "0x40011C4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549DB4", Offset = "0x549DB4")]
		NoPackageSet = -1,
		[Token(Token = "0x40011C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549DEC", Offset = "0x549DEC")]
		NoFbConnect = -2,
		[Token(Token = "0x40011C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549E24", Offset = "0x549E24")]
		NoSessionId = -3,
		[Token(Token = "0x40011C7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549E5C", Offset = "0x549E5C")]
		MissingParameters = -4
	}
	[Token(Token = "0x20002A3")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x40011C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549E94", Offset = "0x549E94")]
		Required,
		[Token(Token = "0x40011CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549ECC", Offset = "0x549ECC")]
		High,
		[Token(Token = "0x40011CB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549F04", Offset = "0x549F04")]
		Medium,
		[Token(Token = "0x40011CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549F3C", Offset = "0x549F3C")]
		Low,
		[Token(Token = "0x40011CD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549F74", Offset = "0x549F74")]
		Unknown
	}
	[Token(Token = "0x20002A4")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x7F3168", Offset = "0x7F3168", VA = "0x7F3168")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x7F31E0", Offset = "0x7F31E0", VA = "0x7F31E0")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x7F3264", Offset = "0x7F3264", VA = "0x7F3264")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x7F32D0", Offset = "0x7F32D0", VA = "0x7F32D0")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x7F334C", Offset = "0x7F334C", VA = "0x7F334C")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x7F33C8", Offset = "0x7F33C8", VA = "0x7F33C8")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x7F3444", Offset = "0x7F3444", VA = "0x7F3444")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x7F34B0", Offset = "0x7F34B0", VA = "0x7F34B0")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x7F3534", Offset = "0x7F3534", VA = "0x7F3534")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x7F35C0", Offset = "0x7F35C0", VA = "0x7F35C0")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x7F3644", Offset = "0x7F3644", VA = "0x7F3644")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x7F36B0", Offset = "0x7F36B0", VA = "0x7F36B0")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x7F372C", Offset = "0x7F372C", VA = "0x7F372C")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x7F37A8", Offset = "0x7F37A8", VA = "0x7F37A8")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x7F37F8", Offset = "0x7F37F8", VA = "0x7F37F8", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x40011D0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549FAC", Offset = "0x549FAC")]
		Unknown,
		[Token(Token = "0x40011D1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x549FE4", Offset = "0x549FE4")]
		Trailing,
		[Token(Token = "0x40011D2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A01C", Offset = "0x54A01C")]
		Swingy
	}
	[Token(Token = "0x20002A6")]
	public enum MediaContentType
	{
		[Token(Token = "0x40011D4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A054", Offset = "0x54A054")]
		Unknown,
		[Token(Token = "0x40011D5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A08C", Offset = "0x54A08C")]
		Photo
	}
	[Token(Token = "0x20002A7")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x2000501")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170000D3")]
		public T Data
		{
			[Token(Token = "0x6001DCB")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001DCA")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DCC")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x20002A8")]
	public class Message
	{
		[Token(Token = "0x2000502")]
		public delegate void Callback(Message message);

		[Token(Token = "0x2000503")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001AA0")]
			Unknown = 0u,
			[Token(Token = "0x4001AA1")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001AA2")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001AA3")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001AA4")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001AA5")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4001AA6")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x4001AA7")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x4001AA8")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x4001AA9")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x4001AAA")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x4001AAB")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4001AAC")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4001AAD")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4001AAE")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4001AAF")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4001AB0")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4001AB1")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4001AB2")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4001AB3")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4001AB4")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4001AB5")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4001AB6")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x4001AB7")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x4001AB8")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x4001AB9")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x4001ABA")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x4001ABB")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4001ABC")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4001ABD")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4001ABE")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4001ABF")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4001AC0")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4001AC1")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4001AC2")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4001AC3")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4001AC4")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4001AC5")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4001AC6")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x4001AC7")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x4001AC8")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x4001AC9")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x4001ACA")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x4001ACB")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x4001ACC")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4001ACD")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4001ACE")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4001ACF")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4001AD0")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4001AD1")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4001AD2")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4001AD3")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4001AD4")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4001AD5")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4001AD6")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x4001AD7")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x4001AD8")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x4001AD9")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x4001ADA")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x4001ADB")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4001ADC")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4001ADD")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4001ADE")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4001ADF")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4001AE0")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4001AE1")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4001AE2")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4001AE3")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4001AE4")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4001AE5")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4001AE6")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x4001AE7")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x4001AE8")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x4001AE9")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x4001AEA")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x4001AEB")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4001AEC")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4001AED")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4001AEE")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4001AEF")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4001AF0")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4001AF1")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4001AF2")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4001AF3")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x4001AF4")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x4001AF5")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x4001AF6")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x4001AF7")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x4001AF8")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x4001AF9")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4001AFA")]
			Room_Join = 382373641u,
			[Token(Token = "0x4001AFB")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4001AFC")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4001AFD")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4001AFE")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4001AFF")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4001B00")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4001B01")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4001B02")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4001B03")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x4001B04")]
			User_Get = 1808768583u,
			[Token(Token = "0x4001B05")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x4001B06")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x4001B07")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x4001B08")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x4001B09")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x4001B0A")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x4001B0B")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x4001B0C")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x4001B0D")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x4001B0E")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x4001B0F")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x4001B10")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x4001B11")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x4001B12")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x4001B13")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x4001B14")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x4001B15")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x4001B16")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x4001B17")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x4001B18")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x4001B19")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x4001B1A")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x4001B1B")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x4001B1C")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x4001B1D")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x4001B1E")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x4001B1F")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x4001B20")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x4001B21")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x4001B22")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x4001B23")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x4001B24")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x4001B25")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x4001B26")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x2000504")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Oculus.Platform.Models.Error error;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54A0C4", Offset = "0x54A0C4")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170000D4")]
		public MessageType Type
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x7F3C24", Offset = "0x7F3C24", VA = "0x7F3C24")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170000D5")]
		public bool IsError
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x7F3C2C", Offset = "0x7F3C2C", VA = "0x7F3C2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D6")]
		public ulong RequestID
		{
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x7F3C3C", Offset = "0x7F3C3C", VA = "0x7F3C3C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000D7")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x7F6E10", Offset = "0x7F6E10", VA = "0x7F6E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554C84", Offset = "0x554C84")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x7F6DBC", Offset = "0x7F6DBC", VA = "0x7F6DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554C74", Offset = "0x554C74")]
			set
			{
			}
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x7F39A4", Offset = "0x7F39A4", VA = "0x7F39A4")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x7F3C1C", Offset = "0x7F3C1C", VA = "0x7F3C1C", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x7F3C44", Offset = "0x7F3C44", VA = "0x7F3C44", Slot = "4")]
		public virtual Oculus.Platform.Models.Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x7F3C4C", Offset = "0x7F3C4C", VA = "0x7F3C4C", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x7F3C54", Offset = "0x7F3C54", VA = "0x7F3C54", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x7F3C5C", Offset = "0x7F3C5C", VA = "0x7F3C5C", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x7F3C64", Offset = "0x7F3C64", VA = "0x7F3C64", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x7F3C6C", Offset = "0x7F3C6C", VA = "0x7F3C6C", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x7F3C74", Offset = "0x7F3C74", VA = "0x7F3C74", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x7F3C7C", Offset = "0x7F3C7C", VA = "0x7F3C7C", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x7F3C84", Offset = "0x7F3C84", VA = "0x7F3C84", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x7F3C8C", Offset = "0x7F3C8C", VA = "0x7F3C8C", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x7F3C94", Offset = "0x7F3C94", VA = "0x7F3C94", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x7F3C9C", Offset = "0x7F3C9C", VA = "0x7F3C9C", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x7F3CA4", Offset = "0x7F3CA4", VA = "0x7F3CA4", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x7F3CAC", Offset = "0x7F3CAC", VA = "0x7F3CAC", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x7F3CB4", Offset = "0x7F3CB4", VA = "0x7F3CB4", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x7F3CBC", Offset = "0x7F3CBC", VA = "0x7F3CBC", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x7F3CC4", Offset = "0x7F3CC4", VA = "0x7F3CC4", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x7F3CCC", Offset = "0x7F3CCC", VA = "0x7F3CCC", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x7F3CD4", Offset = "0x7F3CD4", VA = "0x7F3CD4", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x7F3CDC", Offset = "0x7F3CDC", VA = "0x7F3CDC", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x7F3CE4", Offset = "0x7F3CE4", VA = "0x7F3CE4", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x7F3CEC", Offset = "0x7F3CEC", VA = "0x7F3CEC", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x7F3CF4", Offset = "0x7F3CF4", VA = "0x7F3CF4", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x7F3CFC", Offset = "0x7F3CFC", VA = "0x7F3CFC", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x7F3D04", Offset = "0x7F3D04", VA = "0x7F3D04", Slot = "28")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x7F3D0C", Offset = "0x7F3D0C", VA = "0x7F3D0C", Slot = "29")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x7F3D14", Offset = "0x7F3D14", VA = "0x7F3D14", Slot = "30")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x7F3D1C", Offset = "0x7F3D1C", VA = "0x7F3D1C", Slot = "31")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x7F3D24", Offset = "0x7F3D24", VA = "0x7F3D24", Slot = "32")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x7F3D2C", Offset = "0x7F3D2C", VA = "0x7F3D2C", Slot = "33")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x7F3D34", Offset = "0x7F3D34", VA = "0x7F3D34", Slot = "34")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x7F3D3C", Offset = "0x7F3D3C", VA = "0x7F3D3C", Slot = "35")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x7F3D44", Offset = "0x7F3D44", VA = "0x7F3D44", Slot = "36")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x7F3D4C", Offset = "0x7F3D4C", VA = "0x7F3D4C", Slot = "37")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x7F3D54", Offset = "0x7F3D54", VA = "0x7F3D54", Slot = "38")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x7F3D5C", Offset = "0x7F3D5C", VA = "0x7F3D5C", Slot = "39")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x7F3D64", Offset = "0x7F3D64", VA = "0x7F3D64", Slot = "40")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x7F3D6C", Offset = "0x7F3D6C", VA = "0x7F3D6C", Slot = "41")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x7F3D74", Offset = "0x7F3D74", VA = "0x7F3D74", Slot = "42")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x7F3D7C", Offset = "0x7F3D7C", VA = "0x7F3D7C", Slot = "43")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x7F3D84", Offset = "0x7F3D84", VA = "0x7F3D84", Slot = "44")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x7F3D8C", Offset = "0x7F3D8C", VA = "0x7F3D8C", Slot = "45")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x7F3D94", Offset = "0x7F3D94", VA = "0x7F3D94", Slot = "46")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x7F3D9C", Offset = "0x7F3D9C", VA = "0x7F3D9C", Slot = "47")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x7F3DA4", Offset = "0x7F3DA4", VA = "0x7F3DA4", Slot = "48")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x7F3DAC", Offset = "0x7F3DAC", VA = "0x7F3DAC", Slot = "49")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x7F3DB4", Offset = "0x7F3DB4", VA = "0x7F3DB4", Slot = "50")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x7F3DBC", Offset = "0x7F3DBC", VA = "0x7F3DBC", Slot = "51")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x7F3DC4", Offset = "0x7F3DC4", VA = "0x7F3DC4", Slot = "52")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x7F3DCC", Offset = "0x7F3DCC", VA = "0x7F3DCC", Slot = "53")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x7F3DD4", Offset = "0x7F3DD4", VA = "0x7F3DD4", Slot = "54")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x7F3DDC", Offset = "0x7F3DDC", VA = "0x7F3DDC", Slot = "55")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x7F3DE4", Offset = "0x7F3DE4", VA = "0x7F3DE4", Slot = "56")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x7F3DEC", Offset = "0x7F3DEC", VA = "0x7F3DEC", Slot = "57")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x7F3DF4", Offset = "0x7F3DF4", VA = "0x7F3DF4", Slot = "58")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x7F3DFC", Offset = "0x7F3DFC", VA = "0x7F3DFC", Slot = "59")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x7F3E04", Offset = "0x7F3E04", VA = "0x7F3E04", Slot = "60")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x7F3E0C", Offset = "0x7F3E0C", VA = "0x7F3E0C", Slot = "61")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x7F3E14", Offset = "0x7F3E14", VA = "0x7F3E14", Slot = "62")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x7F3E1C", Offset = "0x7F3E1C", VA = "0x7F3E1C", Slot = "63")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x7F3E24", Offset = "0x7F3E24", VA = "0x7F3E24", Slot = "64")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x7F3E2C", Offset = "0x7F3E2C", VA = "0x7F3E2C", Slot = "65")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x7F3E34", Offset = "0x7F3E34", VA = "0x7F3E34", Slot = "66")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x7F3E3C", Offset = "0x7F3E3C", VA = "0x7F3E3C")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x7F6D08", Offset = "0x7F6D08", VA = "0x7F6D08")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A9")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x7F7B24", Offset = "0x7F7B24", VA = "0x7F7B24")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x7F7B84", Offset = "0x7F7B84", VA = "0x7F7B84", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x7F7BD4", Offset = "0x7F7BD4", VA = "0x7F7BD4", Slot = "67")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AA")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x7F52E4", Offset = "0x7F52E4", VA = "0x7F52E4")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x7F7CF8", Offset = "0x7F7CF8", VA = "0x7F7CF8", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x7F7D48", Offset = "0x7F7D48", VA = "0x7F7D48", Slot = "67")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AB")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x7F5344", Offset = "0x7F5344", VA = "0x7F5344")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x7F7FEC", Offset = "0x7F7FEC", VA = "0x7F7FEC", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x7F803C", Offset = "0x7F803C", VA = "0x7F803C", Slot = "67")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AC")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x7F53A4", Offset = "0x7F53A4", VA = "0x7F53A4")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x7F82E0", Offset = "0x7F82E0", VA = "0x7F82E0", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x7F8330", Offset = "0x7F8330", VA = "0x7F8330", Slot = "67")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AD")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x7F5404", Offset = "0x7F5404", VA = "0x7F5404")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x7F8468", Offset = "0x7F8468", VA = "0x7F8468", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x7F84B8", Offset = "0x7F84B8", VA = "0x7F84B8", Slot = "67")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AE")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x7F5464", Offset = "0x7F5464", VA = "0x7F5464")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x7F860C", Offset = "0x7F860C", VA = "0x7F860C", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x7F865C", Offset = "0x7F865C", VA = "0x7F865C", Slot = "67")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002AF")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x7F54C4", Offset = "0x7F54C4", VA = "0x7F54C4")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x7F8844", Offset = "0x7F8844", VA = "0x7F8844", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x7F8894", Offset = "0x7F8894", VA = "0x7F8894", Slot = "67")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B0")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x7F5524", Offset = "0x7F5524", VA = "0x7F5524")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x7F8B08", Offset = "0x7F8B08", VA = "0x7F8B08", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x7F8B58", Offset = "0x7F8B58", VA = "0x7F8B58", Slot = "67")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B1")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x7F5584", Offset = "0x7F5584", VA = "0x7F5584")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x7F8CB0", Offset = "0x7F8CB0", VA = "0x7F8CB0", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x7F8D00", Offset = "0x7F8D00", VA = "0x7F8D00", Slot = "67")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B2")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x7F55E4", Offset = "0x7F55E4", VA = "0x7F55E4")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x7F8E58", Offset = "0x7F8E58", VA = "0x7F8E58", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x7F8EA8", Offset = "0x7F8EA8", VA = "0x7F8EA8", Slot = "67")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B3")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x7F5644", Offset = "0x7F5644", VA = "0x7F5644")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x7F8FDC", Offset = "0x7F8FDC", VA = "0x7F8FDC", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x7F902C", Offset = "0x7F902C", VA = "0x7F902C", Slot = "67")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B4")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x7F56A4", Offset = "0x7F56A4", VA = "0x7F56A4")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x7F9194", Offset = "0x7F9194", VA = "0x7F9194", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x7F91E4", Offset = "0x7F91E4", VA = "0x7F91E4", Slot = "67")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B5")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x7F5704", Offset = "0x7F5704", VA = "0x7F5704")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x7F9328", Offset = "0x7F9328", VA = "0x7F9328", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x7F9378", Offset = "0x7F9378", VA = "0x7F9378", Slot = "67")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B6")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x7F949C", Offset = "0x7F949C", VA = "0x7F949C")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x7F94FC", Offset = "0x7F94FC", VA = "0x7F94FC", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x7F954C", Offset = "0x7F954C", VA = "0x7F954C", Slot = "67")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B7")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x7F5764", Offset = "0x7F5764", VA = "0x7F5764")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x7F97C0", Offset = "0x7F97C0", VA = "0x7F97C0", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x7F9810", Offset = "0x7F9810", VA = "0x7F9810", Slot = "67")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B8")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x7F57C4", Offset = "0x7F57C4", VA = "0x7F57C4")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x7F998C", Offset = "0x7F998C", VA = "0x7F998C", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x7F99DC", Offset = "0x7F99DC", VA = "0x7F99DC", Slot = "67")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B9")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x7F5824", Offset = "0x7F5824", VA = "0x7F5824")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x7F9E24", Offset = "0x7F9E24", VA = "0x7F9E24", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x7F9E74", Offset = "0x7F9E74", VA = "0x7F9E74", Slot = "67")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BA")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x7F5884", Offset = "0x7F5884", VA = "0x7F5884")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x7F9B30", Offset = "0x7F9B30", VA = "0x7F9B30", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x7F9B80", Offset = "0x7F9B80", VA = "0x7F9B80", Slot = "67")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BB")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x7F58E4", Offset = "0x7F58E4", VA = "0x7F58E4")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x7FA008", Offset = "0x7FA008", VA = "0x7FA008", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x7FA058", Offset = "0x7FA058", VA = "0x7FA058", Slot = "67")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BC")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x7FA3E0", Offset = "0x7FA3E0", VA = "0x7FA3E0")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x7FA440", Offset = "0x7FA440", VA = "0x7FA440", Slot = "28")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x7FA490", Offset = "0x7FA490", VA = "0x7FA490", Slot = "67")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BD")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x7FA704", Offset = "0x7FA704", VA = "0x7FA704")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x7FA764", Offset = "0x7FA764", VA = "0x7FA764", Slot = "29")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x7FA7B4", Offset = "0x7FA7B4", VA = "0x7FA7B4", Slot = "67")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BE")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x7F5944", Offset = "0x7F5944", VA = "0x7F5944")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x7FA8F0", Offset = "0x7FA8F0", VA = "0x7FA8F0", Slot = "30")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x7FA940", Offset = "0x7FA940", VA = "0x7FA940", Slot = "67")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002BF")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x7FAA7C", Offset = "0x7FAA7C", VA = "0x7FAA7C")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x7FAADC", Offset = "0x7FAADC", VA = "0x7FAADC", Slot = "31")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x7FAB2C", Offset = "0x7FAB2C", VA = "0x7FAB2C", Slot = "67")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C0")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x7FAC64", Offset = "0x7FAC64", VA = "0x7FAC64")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x7FACC4", Offset = "0x7FACC4", VA = "0x7FACC4", Slot = "32")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x7FAD14", Offset = "0x7FAD14", VA = "0x7FAD14", Slot = "67")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C1")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x7F59A4", Offset = "0x7F59A4", VA = "0x7F59A4")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x7FAF18", Offset = "0x7FAF18", VA = "0x7FAF18", Slot = "34")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x7FAF68", Offset = "0x7FAF68", VA = "0x7FAF68", Slot = "67")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C2")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x7FB22C", Offset = "0x7FB22C", VA = "0x7FB22C")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x7FB28C", Offset = "0x7FB28C", VA = "0x7FB28C", Slot = "35")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x7FB2DC", Offset = "0x7FB2DC", VA = "0x7FB2DC", Slot = "67")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C3")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x7FB550", Offset = "0x7FB550", VA = "0x7FB550")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x7FB5B0", Offset = "0x7FB5B0", VA = "0x7FB5B0", Slot = "36")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x7FB600", Offset = "0x7FB600", VA = "0x7FB600", Slot = "67")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C4")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x7FB728", Offset = "0x7FB728", VA = "0x7FB728")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x7FB788", Offset = "0x7FB788", VA = "0x7FB788", Slot = "37")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x7FB7D8", Offset = "0x7FB7D8", VA = "0x7FB7D8", Slot = "67")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C5")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x7F5A64", Offset = "0x7F5A64", VA = "0x7F5A64")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x7FB8FC", Offset = "0x7FB8FC", VA = "0x7FB8FC", Slot = "38")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x7FB94C", Offset = "0x7FB94C", VA = "0x7FB94C", Slot = "67")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C6")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x7FBAC0", Offset = "0x7FBAC0", VA = "0x7FBAC0")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x7FBB20", Offset = "0x7FBB20", VA = "0x7FBB20", Slot = "39")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x7FBB70", Offset = "0x7FBB70", VA = "0x7FBB70", Slot = "67")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C7")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x7F5AC4", Offset = "0x7F5AC4", VA = "0x7F5AC4")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x7FBCB4", Offset = "0x7FBCB4", VA = "0x7FBCB4", Slot = "40")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x7FBD04", Offset = "0x7FBD04", VA = "0x7FBD04", Slot = "67")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C8")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x7F5B84", Offset = "0x7F5B84", VA = "0x7F5B84")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x7FC0A0", Offset = "0x7FC0A0", VA = "0x7FC0A0", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x7FC0F0", Offset = "0x7FC0F0", VA = "0x7FC0F0", Slot = "67")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C9")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x7F5BE4", Offset = "0x7F5BE4", VA = "0x7F5BE4")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x7FC2D8", Offset = "0x7FC2D8", VA = "0x7FC2D8", Slot = "43")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x7FC328", Offset = "0x7FC328", VA = "0x7FC328", Slot = "67")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CA")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x7F5C44", Offset = "0x7F5C44", VA = "0x7F5C44")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x7FC8E0", Offset = "0x7FC8E0", VA = "0x7FC8E0", Slot = "44")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x7FC930", Offset = "0x7FC930", VA = "0x7FC930", Slot = "67")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CB")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x7F5CA4", Offset = "0x7F5CA4", VA = "0x7F5CA4")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x7FCBD0", Offset = "0x7FCBD0", VA = "0x7FCBD0", Slot = "45")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x7FCC20", Offset = "0x7FCC20", VA = "0x7FCC20", Slot = "67")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CC")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x7FCD44", Offset = "0x7FCD44", VA = "0x7FCD44")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x7FCDA4", Offset = "0x7FCDA4", VA = "0x7FCDA4", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x7FCDF4", Offset = "0x7FCDF4", VA = "0x7FCDF4", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CD")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x7F5D04", Offset = "0x7F5D04", VA = "0x7F5D04")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x7FD284", Offset = "0x7FD284", VA = "0x7FD284", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x7FD2D4", Offset = "0x7FD2D4", VA = "0x7FD2D4", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CE")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x7FD0B0", Offset = "0x7FD0B0", VA = "0x7FD0B0")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x7FD110", Offset = "0x7FD110", VA = "0x7FD110", Slot = "47")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x7FD160", Offset = "0x7FD160", VA = "0x7FD160", Slot = "67")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CF")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x7F5D64", Offset = "0x7F5D64", VA = "0x7F5D64")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x7FD370", Offset = "0x7FD370", VA = "0x7FD370", Slot = "48")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x7FD3C0", Offset = "0x7FD3C0", VA = "0x7FD3C0", Slot = "67")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D0")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x7F5DC4", Offset = "0x7F5DC4", VA = "0x7F5DC4")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x7FD544", Offset = "0x7FD544", VA = "0x7FD544", Slot = "49")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x7FD594", Offset = "0x7FD594", VA = "0x7FD594", Slot = "67")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D1")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x7F5E24", Offset = "0x7F5E24", VA = "0x7F5E24")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x7FDB28", Offset = "0x7FDB28", VA = "0x7FDB28", Slot = "50")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x7FDB78", Offset = "0x7FDB78", VA = "0x7FDB78", Slot = "67")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D2")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x7F5E84", Offset = "0x7F5E84", VA = "0x7F5E84")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x7FDE1C", Offset = "0x7FDE1C", VA = "0x7FDE1C", Slot = "51")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x7FDE6C", Offset = "0x7FDE6C", VA = "0x7FDE6C", Slot = "67")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D3")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x7F5EE4", Offset = "0x7F5EE4", VA = "0x7F5EE4")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x7FDFC0", Offset = "0x7FDFC0", VA = "0x7FDFC0", Slot = "52")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x7FE010", Offset = "0x7FE010", VA = "0x7FE010", Slot = "67")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D4")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x7F5F44", Offset = "0x7F5F44", VA = "0x7F5F44")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x7FE2B4", Offset = "0x7FE2B4", VA = "0x7FE2B4", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x7FE304", Offset = "0x7FE304", VA = "0x7FE304", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D5")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x7F5FA4", Offset = "0x7F5FA4", VA = "0x7F5FA4")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x7FEB2C", Offset = "0x7FEB2C", VA = "0x7FEB2C", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x7FEB7C", Offset = "0x7FEB7C", VA = "0x7FEB7C", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D6")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x7F6004", Offset = "0x7F6004", VA = "0x7F6004")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x7FEC18", Offset = "0x7FEC18", VA = "0x7FEC18", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x7FEC68", Offset = "0x7FEC68", VA = "0x7FEC68", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D7")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x7F6064", Offset = "0x7F6064", VA = "0x7F6064")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x7FE838", Offset = "0x7FE838", VA = "0x7FE838", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x7FE888", Offset = "0x7FE888", VA = "0x7FE888", Slot = "67")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D8")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x7F60C4", Offset = "0x7F60C4", VA = "0x7F60C4")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x7FE3A0", Offset = "0x7FE3A0", VA = "0x7FE3A0", Slot = "54")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x7FE3F0", Offset = "0x7FE3F0", VA = "0x7FE3F0", Slot = "67")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D9")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x7F6124", Offset = "0x7F6124", VA = "0x7F6124")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x7FE544", Offset = "0x7FE544", VA = "0x7FE544", Slot = "55")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x7FE594", Offset = "0x7FE594", VA = "0x7FE594", Slot = "67")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DA")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x7F6184", Offset = "0x7F6184", VA = "0x7F6184")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x7FED04", Offset = "0x7FED04", VA = "0x7FED04", Slot = "57")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x7FED54", Offset = "0x7FED54", VA = "0x7FED54", Slot = "67")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DB")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x7F61E4", Offset = "0x7F61E4", VA = "0x7F61E4")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x7FEFC8", Offset = "0x7FEFC8", VA = "0x7FEFC8", Slot = "58")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x7FF018", Offset = "0x7FF018", VA = "0x7FF018", Slot = "67")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DC")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x7F6244", Offset = "0x7F6244", VA = "0x7F6244")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x7FF13C", Offset = "0x7FF13C", VA = "0x7FF13C", Slot = "59")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x7FF18C", Offset = "0x7FF18C", VA = "0x7FF18C", Slot = "67")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DD")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x7FF1F4", Offset = "0x7FF1F4", VA = "0x7FF1F4")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x7FF254", Offset = "0x7FF254", VA = "0x7FF254", Slot = "60")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x7FF2A4", Offset = "0x7FF2A4", VA = "0x7FF2A4", Slot = "67")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DE")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x7F62A4", Offset = "0x7F62A4", VA = "0x7F62A4")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x7FF3DC", Offset = "0x7FF3DC", VA = "0x7FF3DC", Slot = "61")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x7FF42C", Offset = "0x7FF42C", VA = "0x7FF42C", Slot = "67")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002DF")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x7F6304", Offset = "0x7F6304", VA = "0x7F6304")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x7FF560", Offset = "0x7FF560", VA = "0x7FF560", Slot = "62")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x7FF5B0", Offset = "0x7FF5B0", VA = "0x7FF5B0", Slot = "67")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E0")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x7F6364", Offset = "0x7F6364", VA = "0x7F6364")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x7FF734", Offset = "0x7FF734", VA = "0x7FF734", Slot = "63")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x7FF784", Offset = "0x7FF784", VA = "0x7FF784", Slot = "67")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E1")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x7F63C4", Offset = "0x7F63C4", VA = "0x7F63C4")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x7FFA28", Offset = "0x7FFA28", VA = "0x7FFA28", Slot = "64")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x7FFA78", Offset = "0x7FFA78", VA = "0x7FFA78", Slot = "67")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E2")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x7F6424", Offset = "0x7F6424", VA = "0x7F6424")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x7FFD1C", Offset = "0x7FFD1C", VA = "0x7FFD1C", Slot = "65")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x7FFD6C", Offset = "0x7FFD6C", VA = "0x7FFD6C", Slot = "67")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E3")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x7FFE90", Offset = "0x7FFE90", VA = "0x7FFE90")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x7FFEF0", Offset = "0x7FFEF0", VA = "0x7FFEF0", Slot = "66")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x7FFF40", Offset = "0x7FFF40", VA = "0x7FFF40", Slot = "67")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E4")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x7F6484", Offset = "0x7F6484", VA = "0x7F6484")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x7FCA84", Offset = "0x7FCA84", VA = "0x7FCA84", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x7FCAD4", Offset = "0x7FCAD4", VA = "0x7FCAD4", Slot = "67")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E5")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x7F64E4", Offset = "0x7F64E4", VA = "0x7F64E4")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x7FD808", Offset = "0x7FD808", VA = "0x7FD808", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x7FD858", Offset = "0x7FD858", VA = "0x7FD858", Slot = "67")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E6")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x7F5A04", Offset = "0x7F5A04", VA = "0x7F5A04")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x7FAE50", Offset = "0x7FAE50", VA = "0x7FAE50", Slot = "33")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x7FAEA0", Offset = "0x7FAEA0", VA = "0x7FAEA0", Slot = "67")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E7")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x7F6544", Offset = "0x7F6544", VA = "0x7F6544")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x7FC4A4", Offset = "0x7FC4A4", VA = "0x7FC4A4", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x7FC4F4", Offset = "0x7FC4F4", VA = "0x7FC4F4", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E8")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x7F5B24", Offset = "0x7F5B24", VA = "0x7F5B24")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x7FBE5C", Offset = "0x7FBE5C", VA = "0x7FBE5C", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x7FBEC0", Offset = "0x7FBEC0", VA = "0x7FBEC0", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x7FBF24", Offset = "0x7FBF24", VA = "0x7FBF24", Slot = "67")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E9")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x7F65A4", Offset = "0x7F65A4", VA = "0x7F65A4")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x7FA1AC", Offset = "0x7FA1AC", VA = "0x7FA1AC", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x7FA1FC", Offset = "0x7FA1FC", VA = "0x7FA1FC", Slot = "67")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EA")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x7F6604", Offset = "0x7F6604", VA = "0x7F6604")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x7FD9B4", Offset = "0x7FD9B4", VA = "0x7FD9B4", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x7FDA04", Offset = "0x7FDA04", VA = "0x7FDA04", Slot = "67")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EB")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x170000D8")]
		public ulong SenderID
		{
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x8020B0", Offset = "0x8020B0", VA = "0x8020B0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000D9")]
		public ulong Size
		{
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x80211C", Offset = "0x80211C", VA = "0x80211C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000DA")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x802124", Offset = "0x802124", VA = "0x802124")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x801384", Offset = "0x801384", VA = "0x801384")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x801F50", Offset = "0x801F50", VA = "0x801F50")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x802190", Offset = "0x802190", VA = "0x802190", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x802204", Offset = "0x802204", VA = "0x802204", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x40011DE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A0D4", Offset = "0x54A0D4")]
		Unknown,
		[Token(Token = "0x40011DF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A10C", Offset = "0x54A10C")]
		Join,
		[Token(Token = "0x40011E0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A144", Offset = "0x54A144")]
		Leave,
		[Token(Token = "0x40011E1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A17C", Offset = "0x54A17C")]
		Invite,
		[Token(Token = "0x40011E2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A1B4", Offset = "0x54A1B4")]
		Uninvite
	}
	[Token(Token = "0x20002ED")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x40011E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A1EC", Offset = "0x54A1EC")]
		Unknown,
		[Token(Token = "0x40011E5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A224", Offset = "0x54A224")]
		Connected,
		[Token(Token = "0x40011E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A25C", Offset = "0x54A25C")]
		Timeout,
		[Token(Token = "0x40011E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A294", Offset = "0x54A294")]
		Closed
	}
	[Token(Token = "0x20002EE")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x40011E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A2CC", Offset = "0x54A2CC")]
		Unknown,
		[Token(Token = "0x40011EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A304", Offset = "0x54A304")]
		Granted,
		[Token(Token = "0x40011EB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A33C", Offset = "0x54A33C")]
		Denied,
		[Token(Token = "0x40011EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A374", Offset = "0x54A374")]
		Blocked
	}
	[Token(Token = "0x20002EF")]
	public enum PermissionType
	{
		[Token(Token = "0x40011EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A3AC", Offset = "0x54A3AC")]
		Unknown,
		[Token(Token = "0x40011EF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A3E4", Offset = "0x54A3E4")]
		Microphone,
		[Token(Token = "0x40011F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A41C", Offset = "0x54A41C")]
		WriteExternalStorage
	}
	[Token(Token = "0x20002F0")]
	public sealed class Core
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xF2DC2C", Offset = "0xF2DC2C", VA = "0xF2DC2C")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xF51008", Offset = "0xF51008", VA = "0xF51008")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xF51074", Offset = "0xF51074", VA = "0xF51074")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xF5126C", Offset = "0xF5126C", VA = "0xF5126C")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xF514E0", Offset = "0xF514E0", VA = "0xF514E0")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xF5123C", Offset = "0xF5123C", VA = "0xF5123C")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xF517A8", Offset = "0xF517A8", VA = "0xF517A8")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x876AC4", Offset = "0x876AC4", VA = "0x876AC4")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F2")]
	public static class Rooms
	{
		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x80377C", Offset = "0x80377C", VA = "0x80377C")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x803A40", Offset = "0x803A40", VA = "0x803A40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x554C94", Offset = "0x554C94")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x803ABC", Offset = "0x803ABC", VA = "0x803ABC")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x803BA4", Offset = "0x803BA4", VA = "0x803BA4")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x803CB8", Offset = "0x803CB8", VA = "0x803CB8")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x803D88", Offset = "0x803D88", VA = "0x803D88")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x803E50", Offset = "0x803E50", VA = "0x803E50")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x803F20", Offset = "0x803F20", VA = "0x803F20")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x803FE8", Offset = "0x803FE8", VA = "0x803FE8")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x8040E4", Offset = "0x8040E4", VA = "0x8040E4")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x8041AC", Offset = "0x8041AC", VA = "0x8041AC")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x80428C", Offset = "0x80428C", VA = "0x80428C")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x80436C", Offset = "0x80436C", VA = "0x80436C")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x804478", Offset = "0x804478", VA = "0x804478")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x804560", Offset = "0x804560", VA = "0x804560")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x804628", Offset = "0x804628", VA = "0x804628")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x8046F8", Offset = "0x8046F8", VA = "0x8046F8")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x8047D8", Offset = "0x8047D8", VA = "0x8047D8")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x8048B8", Offset = "0x8048B8", VA = "0x8048B8")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x804990", Offset = "0x804990", VA = "0x804990")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x803A44", Offset = "0x803A44", VA = "0x803A44")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x804A70", Offset = "0x804A70", VA = "0x804A70")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x804AE8", Offset = "0x804AE8", VA = "0x804AE8")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x804B60", Offset = "0x804B60", VA = "0x804B60")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F3")]
	public static class Matchmaking
	{
		[Token(Token = "0x2000505")]
		public class CustomQuery
		{
			[Token(Token = "0x2000521")]
			public struct Criterion
			{
				[Token(Token = "0x4001BA3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4001BA4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4001BA5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6002796")]
				[Address(RVA = "0x5B6610", Offset = "0x5B6610", VA = "0x5B6610")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x6002764")]
			[Address(RVA = "0x7F2CA8", Offset = "0x7F2CA8", VA = "0x7F2CA8")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6002765")]
			[Address(RVA = "0x7F3150", Offset = "0x7F3150", VA = "0x7F3150")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xF527C8", Offset = "0xF527C8", VA = "0xF527C8")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xF52A54", Offset = "0xF52A54", VA = "0xF52A54")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xF52B38", Offset = "0xF52B38", VA = "0xF52B38")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xF52C28", Offset = "0xF52C28", VA = "0xF52C28")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xF52D18", Offset = "0xF52D18", VA = "0xF52D18")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xF52DEC", Offset = "0xF52DEC", VA = "0xF52DEC")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xF52EA8", Offset = "0xF52EA8", VA = "0xF52EA8")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xF52FB0", Offset = "0xF52FB0", VA = "0xF52FB0")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xF530A0", Offset = "0xF530A0", VA = "0xF530A0")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xF53184", Offset = "0xF53184", VA = "0xF53184")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xF53274", Offset = "0xF53274", VA = "0xF53274")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xF53364", Offset = "0xF53364", VA = "0xF53364")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xF53454", Offset = "0xF53454", VA = "0xF53454")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xF53544", Offset = "0xF53544", VA = "0xF53544")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xF53634", Offset = "0xF53634", VA = "0xF53634")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xF536F8", Offset = "0xF536F8", VA = "0xF536F8")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xF537D4", Offset = "0xF537D4", VA = "0xF537D4")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xF53898", Offset = "0xF53898", VA = "0xF53898")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public static class Net
	{
		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x8012B8", Offset = "0x8012B8", VA = "0x8012B8")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x801444", Offset = "0x801444", VA = "0x801444")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x801548", Offset = "0x801548", VA = "0x801548")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x8015E8", Offset = "0x8015E8", VA = "0x8015E8")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x801688", Offset = "0x801688", VA = "0x801688")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x801728", Offset = "0x801728", VA = "0x801728")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x8017CC", Offset = "0x8017CC", VA = "0x8017CC")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x8018C8", Offset = "0x8018C8", VA = "0x8018C8")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x801964", Offset = "0x801964", VA = "0x801964")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x8019FC", Offset = "0x8019FC", VA = "0x8019FC")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x801ACC", Offset = "0x801ACC", VA = "0x801ACC")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x801B44", Offset = "0x801B44", VA = "0x801B44")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x801BBC", Offset = "0x801BBC", VA = "0x801BBC")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public static class Leaderboards
	{
		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xF5202C", Offset = "0xF5202C", VA = "0xF5202C")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xF52128", Offset = "0xF52128", VA = "0xF52128")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xF52224", Offset = "0xF52224", VA = "0xF52224")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xF52318", Offset = "0xF52318", VA = "0xF52318")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xF523FC", Offset = "0xF523FC", VA = "0xF523FC")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F6")]
	public static class Voip
	{
		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x88BC2C", Offset = "0x88BC2C", VA = "0x88BC2C")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x88BF98", Offset = "0x88BF98", VA = "0x88BF98")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x88BCCC", Offset = "0x88BCCC", VA = "0x88BCCC")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x88D97C", Offset = "0x88D97C", VA = "0x88D97C")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x88DA54", Offset = "0x88DA54", VA = "0x88DA54")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x88DAF4", Offset = "0x88DAF4", VA = "0x88DAF4")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x88DB90", Offset = "0x88DB90", VA = "0x88DB90")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x88DC2C", Offset = "0x88DC2C", VA = "0x88DC2C")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x88DCD0", Offset = "0x88DCD0", VA = "0x88DCD0")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x88DD74", Offset = "0x88DD74", VA = "0x88DD74")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x88DE18", Offset = "0x88DE18", VA = "0x88DE18")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x88DF34", Offset = "0x88DF34", VA = "0x88DF34")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x88BA74", Offset = "0x88BA74", VA = "0x88BA74")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x88BAEC", Offset = "0x88BAEC", VA = "0x88BAEC")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x88E004", Offset = "0x88E004", VA = "0x88E004")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public static class Achievements
	{
		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x875EA8", Offset = "0x875EA8", VA = "0x875EA8")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x875F88", Offset = "0x875F88", VA = "0x875F88")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x876068", Offset = "0x876068", VA = "0x876068")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x876130", Offset = "0x876130", VA = "0x876130")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x8761F8", Offset = "0x8761F8", VA = "0x8761F8")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x8762DC", Offset = "0x8762DC", VA = "0x8762DC")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x8763C0", Offset = "0x8763C0", VA = "0x8763C0")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x876490", Offset = "0x876490", VA = "0x876490")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x8765F0", Offset = "0x8765F0", VA = "0x8765F0")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F8")]
	public static class Application
	{
		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x876908", Offset = "0x876908", VA = "0x876908")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x8769D0", Offset = "0x8769D0", VA = "0x8769D0")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F9")]
	public static class AssetFile
	{
		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xF2DB60", Offset = "0xF2DB60", VA = "0xF2DB60")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xF2DD34", Offset = "0xF2DD34", VA = "0xF2DD34")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xF2DEA0", Offset = "0xF2DEA0", VA = "0xF2DEA0")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xF2E014", Offset = "0xF2E014", VA = "0xF2E014")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xF2E180", Offset = "0xF2E180", VA = "0xF2E180")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xF2E2EC", Offset = "0xF2E2EC", VA = "0xF2E2EC")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xF2E460", Offset = "0xF2E460", VA = "0xF2E460")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xF2E5CC", Offset = "0xF2E5CC", VA = "0xF2E5CC")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xF2E738", Offset = "0xF2E738", VA = "0xF2E738")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xF2E8AC", Offset = "0xF2E8AC", VA = "0xF2E8AC")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xF2EA00", Offset = "0xF2EA00", VA = "0xF2EA00")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xF2EB6C", Offset = "0xF2EB6C", VA = "0xF2EB6C")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xF2ECD8", Offset = "0xF2ECD8", VA = "0xF2ECD8")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xF2EE4C", Offset = "0xF2EE4C", VA = "0xF2EE4C")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public static class Avatar
	{
	}
	[Token(Token = "0x20002FB")]
	public static class Cal
	{
	}
	[Token(Token = "0x20002FC")]
	public static class CloudStorage
	{
		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xF50610", Offset = "0xF50610", VA = "0xF50610")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xF506EC", Offset = "0xF506EC", VA = "0xF506EC")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xF507C8", Offset = "0xF507C8", VA = "0xF507C8")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xF50894", Offset = "0xF50894", VA = "0xF50894")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xF50970", Offset = "0xF50970", VA = "0xF50970")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xF50A3C", Offset = "0xF50A3C", VA = "0xF50A3C")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xF50B18", Offset = "0xF50B18", VA = "0xF50B18")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xF50BFC", Offset = "0xF50BFC", VA = "0xF50BFC")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xF50CE0", Offset = "0xF50CE0", VA = "0xF50CE0")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xF50DF0", Offset = "0xF50DF0", VA = "0xF50DF0")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FD")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xF50F44", Offset = "0xF50F44", VA = "0xF50F44")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FE")]
	public static class Entitlements
	{
		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xF517B4", Offset = "0xF517B4", VA = "0xF517B4")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FF")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x2000300")]
	public static class HTTP
	{
	}
	[Token(Token = "0x2000301")]
	public static class IAP
	{
		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xF51870", Offset = "0xF51870", VA = "0xF51870")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xF51934", Offset = "0xF51934", VA = "0xF51934")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xF51A14", Offset = "0xF51A14", VA = "0xF51A14")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xF51AD8", Offset = "0xF51AD8", VA = "0xF51AD8")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xF51BF4", Offset = "0xF51BF4", VA = "0xF51BF4")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xF51D48", Offset = "0xF51D48", VA = "0xF51D48")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000302")]
	public static class LanguagePack
	{
		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xF51E9C", Offset = "0xF51E9C", VA = "0xF51E9C")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xF51F60", Offset = "0xF51F60", VA = "0xF51F60")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000303")]
	public static class Livestreaming
	{
		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xF52504", Offset = "0xF52504", VA = "0xF52504")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xF525C8", Offset = "0xF525C8", VA = "0xF525C8")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xF5268C", Offset = "0xF5268C", VA = "0xF5268C")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xF52750", Offset = "0xF52750", VA = "0xF52750")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000304")]
	public static class Media
	{
		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x7F38BC", Offset = "0x7F38BC", VA = "0x7F38BC")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000305")]
	public static class Notifications
	{
		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x801C34", Offset = "0x801C34", VA = "0x801C34")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x801CFC", Offset = "0x801CFC", VA = "0x801CFC")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x801DF0", Offset = "0x801DF0", VA = "0x801DF0")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000306")]
	public static class Parties
	{
		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x80229C", Offset = "0x80229C", VA = "0x80229C")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x802364", Offset = "0x802364", VA = "0x802364")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000307")]
	public static class RichPresence
	{
		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x802B7C", Offset = "0x802B7C", VA = "0x802B7C")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x802C3C", Offset = "0x802C3C", VA = "0x802C3C")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}
	}
	[Token(Token = "0x2000308")]
	public static class Users
	{
		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x88CEA0", Offset = "0x88CEA0", VA = "0x88CEA0")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x88CF70", Offset = "0x88CF70", VA = "0x88CF70")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x87AD60", Offset = "0x87AD60", VA = "0x87AD60")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x88D038", Offset = "0x88D038", VA = "0x88D038")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x88D100", Offset = "0x88D100", VA = "0x88D100")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x88D1C8", Offset = "0x88D1C8", VA = "0x88D1C8")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x88D2C4", Offset = "0x88D2C4", VA = "0x88D2C4")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x88D394", Offset = "0x88D394", VA = "0x88D394")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x88D45C", Offset = "0x88D45C", VA = "0x88D45C")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x88D524", Offset = "0x88D524", VA = "0x88D524")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x88D5F4", Offset = "0x88D5F4", VA = "0x88D5F4")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x88D6BC", Offset = "0x88D6BC", VA = "0x88D6BC")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x88D81C", Offset = "0x88D81C", VA = "0x88D81C")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000309")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x40011F4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A454", Offset = "0x54A454")]
		Success = 0,
		[Token(Token = "0x40011F5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A48C", Offset = "0x54A48C")]
		Uninitialized = -1,
		[Token(Token = "0x40011F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A4C4", Offset = "0x54A4C4")]
		PreLoaded = -2,
		[Token(Token = "0x40011F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A4FC", Offset = "0x54A4FC")]
		FileInvalid = -3,
		[Token(Token = "0x40011F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A534", Offset = "0x54A534")]
		SignatureInvalid = -4,
		[Token(Token = "0x40011F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A56C", Offset = "0x54A56C")]
		UnableToVerify = -5,
		[Token(Token = "0x40011FA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A5A4", Offset = "0x54A5A4")]
		VersionMismatch = -6,
		[Token(Token = "0x40011FB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A5DC", Offset = "0x54A5DC")]
		Unknown = -7,
		[Token(Token = "0x40011FC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A614", Offset = "0x54A614")]
		InvalidCredentials = -8,
		[Token(Token = "0x40011FD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A64C", Offset = "0x54A64C")]
		NotEntitled = -9
	}
	[Token(Token = "0x200030A")]
	public static class PlatformInternal
	{
		[Token(Token = "0x2000506")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x4001B2A")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x4001B2B")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x4001B2C")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x4001B2D")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x4001B2E")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4001B2F")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4001B30")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4001B31")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4001B32")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4001B33")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4001B34")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4001B35")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4001B36")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4001B37")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x4001B38")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x4001B39")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x4001B3A")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x4001B3B")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x4001B3C")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x4001B3D")]
			Party_Create = 450042703u,
			[Token(Token = "0x4001B3E")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4001B3F")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4001B40")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4001B41")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4001B42")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4001B43")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4001B44")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4001B45")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4001B46")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4001B47")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x4001B48")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x4001B49")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x4001B4A")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x4001B4B")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x4001B4C")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x4001B4D")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4001B4E")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4001B4F")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4001B50")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4001B51")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4001B52")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4001B53")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4001B54")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4001B55")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x2000507")]
		public static class HTTP
		{
			[Token(Token = "0x6002766")]
			[Address(RVA = "0x80253C", Offset = "0x80253C", VA = "0x80253C")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x2000508")]
		public static class Users
		{
			[Token(Token = "0x6002767")]
			[Address(RVA = "0x8025B4", Offset = "0x8025B4", VA = "0x8025B4")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x8023DC", Offset = "0x8023DC", VA = "0x8023DC")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x7F6664", Offset = "0x7F6664", VA = "0x7F6664")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x80243C", Offset = "0x80243C", VA = "0x80243C")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x200030B")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x170000DB")]
		public static string AppID
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x802720", Offset = "0x802720", VA = "0x802720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x802860", Offset = "0x802860", VA = "0x802860")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public static string MobileAppID
		{
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x802890", Offset = "0x802890", VA = "0x802890")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x8028BC", Offset = "0x8028BC", VA = "0x8028BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x8028EC", Offset = "0x8028EC", VA = "0x8028EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x802918", Offset = "0x802918", VA = "0x802918")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x80294C", Offset = "0x80294C", VA = "0x80294C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x802978", Offset = "0x802978", VA = "0x802978")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x80274C", Offset = "0x80274C", VA = "0x80274C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x8029AC", Offset = "0x8029AC", VA = "0x8029AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x802A00", Offset = "0x802A00", VA = "0x802A00")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x6001F8B")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6001F8C")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x200030D")]
	public class Request
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54A6C4", Offset = "0x54A6C4")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x170000E0")]
		public ulong RequestID
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x802A68", Offset = "0x802A68", VA = "0x802A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554CCC", Offset = "0x554CCC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x802A60", Offset = "0x802A60", VA = "0x802A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554CDC", Offset = "0x554CDC")]
			set
			{
			}
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x801DC4", Offset = "0x801DC4", VA = "0x801DC4")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x802A70", Offset = "0x802A70", VA = "0x802A70")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x802AF0", Offset = "0x802AF0", VA = "0x802AF0")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x802D80", Offset = "0x802D80", VA = "0x802D80")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x802DF8", Offset = "0x802DF8", VA = "0x802DF8")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x802E74", Offset = "0x802E74", VA = "0x802E74")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x802EF8", Offset = "0x802EF8", VA = "0x802EF8")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x802F64", Offset = "0x802F64", VA = "0x802F64")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x802FE0", Offset = "0x802FE0", VA = "0x802FE0")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x80305C", Offset = "0x80305C", VA = "0x80305C")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x8030D8", Offset = "0x8030D8", VA = "0x8030D8")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x802D30", Offset = "0x802D30", VA = "0x802D30")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x803154", Offset = "0x803154", VA = "0x803154", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4001206")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A6D4", Offset = "0x54A6D4")]
		Unknown,
		[Token(Token = "0x4001207")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A70C", Offset = "0x54A70C")]
		AreIn,
		[Token(Token = "0x4001208")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A744", Offset = "0x54A744")]
		AreKicked,
		[Token(Token = "0x4001209")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A77C", Offset = "0x54A77C")]
		CanJoin,
		[Token(Token = "0x400120A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A7B4", Offset = "0x54A7B4")]
		IsFull,
		[Token(Token = "0x400120B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A7EC", Offset = "0x54A7EC")]
		NoViewer,
		[Token(Token = "0x400120C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A824", Offset = "0x54A824")]
		PolicyPrevents
	}
	[Token(Token = "0x2000310")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x400120E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A85C", Offset = "0x54A85C")]
		None,
		[Token(Token = "0x400120F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A894", Offset = "0x54A894")]
		Everyone,
		[Token(Token = "0x4001210")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A8CC", Offset = "0x54A8CC")]
		FriendsOfMembers,
		[Token(Token = "0x4001211")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A904", Offset = "0x54A904")]
		FriendsOfOwner,
		[Token(Token = "0x4001212")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A93C", Offset = "0x54A93C")]
		InvitedUsers,
		[Token(Token = "0x4001213")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A974", Offset = "0x54A974")]
		Unknown
	}
	[Token(Token = "0x2000311")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4001215")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A9AC", Offset = "0x54A9AC")]
		Unknown,
		[Token(Token = "0x4001216")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54A9E4", Offset = "0x54A9E4")]
		Lock,
		[Token(Token = "0x4001217")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AA1C", Offset = "0x54AA1C")]
		Unlock
	}
	[Token(Token = "0x2000312")]
	public class RoomOptions
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x803218", Offset = "0x803218", VA = "0x803218")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x803290", Offset = "0x803290", VA = "0x803290")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x803314", Offset = "0x803314", VA = "0x803314")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x803380", Offset = "0x803380", VA = "0x803380")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x8033FC", Offset = "0x8033FC", VA = "0x8033FC")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x803478", Offset = "0x803478", VA = "0x803478")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x8034F4", Offset = "0x8034F4", VA = "0x8034F4")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x803570", Offset = "0x803570", VA = "0x803570")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x8035EC", Offset = "0x8035EC", VA = "0x8035EC")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x803668", Offset = "0x803668", VA = "0x803668")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x8036B8", Offset = "0x8036B8", VA = "0x8036B8", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public enum RoomType
	{
		[Token(Token = "0x400121A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AA54", Offset = "0x54AA54")]
		Unknown,
		[Token(Token = "0x400121B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AA8C", Offset = "0x54AA8C")]
		Matchmaking,
		[Token(Token = "0x400121C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AAC4", Offset = "0x54AAC4")]
		Moderated,
		[Token(Token = "0x400121D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AAFC", Offset = "0x54AAFC")]
		Private,
		[Token(Token = "0x400121E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AB34", Offset = "0x54AB34")]
		Solo
	}
	[Token(Token = "0x2000314")]
	public enum SdkAccountType
	{
		[Token(Token = "0x4001220")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AB6C", Offset = "0x54AB6C")]
		Unknown,
		[Token(Token = "0x4001221")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54ABA4", Offset = "0x54ABA4")]
		Oculus,
		[Token(Token = "0x4001222")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54ABDC", Offset = "0x54ABDC")]
		FacebookGameroom
	}
	[Token(Token = "0x2000315")]
	public enum SendPolicy
	{
		[Token(Token = "0x4001224")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AC14", Offset = "0x54AC14")]
		Unreliable,
		[Token(Token = "0x4001225")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AC4C", Offset = "0x54AC4C")]
		Reliable,
		[Token(Token = "0x4001226")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AC84", Offset = "0x54AC84")]
		Unknown
	}
	[Token(Token = "0x2000316")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4001228")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54ACBC", Offset = "0x54ACBC")]
		Unknown,
		[Token(Token = "0x4001229")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54ACF4", Offset = "0x54ACF4")]
		Dropbox,
		[Token(Token = "0x400122A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AD2C", Offset = "0x54AD2C")]
		Facebook,
		[Token(Token = "0x400122B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AD64", Offset = "0x54AD64")]
		Google,
		[Token(Token = "0x400122C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AD9C", Offset = "0x54AD9C")]
		Instagram,
		[Token(Token = "0x400122D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54ADD4", Offset = "0x54ADD4")]
		RemoteMedia
	}
	[Token(Token = "0x2000317")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x400122F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AE0C", Offset = "0x54AE0C")]
		Unknown,
		[Token(Token = "0x4001230")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AE44", Offset = "0x54AE44")]
		Shared,
		[Token(Token = "0x4001231")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AE7C", Offset = "0x54AE7C")]
		Canceled
	}
	[Token(Token = "0x2000318")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x539C64", Offset = "0x539C64")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x88C2F8", Offset = "0x88C2F8", VA = "0x88C2F8")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x88C490", Offset = "0x88C490", VA = "0x88C490")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x88C554", Offset = "0x88C554", VA = "0x88C554")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x170000E1")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x88CA80", Offset = "0x88CA80", VA = "0x88CA80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x88CAD0", Offset = "0x88CAD0", VA = "0x88CAD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x88CAD4", Offset = "0x88CAD4", VA = "0x88CAD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x88CB24", Offset = "0x88CB24", VA = "0x88CB24")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x88C440", Offset = "0x88C440", VA = "0x88C440")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x88CB28", Offset = "0x88CB28", VA = "0x88CB28")]
			set
			{
			}
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x88CB2C", Offset = "0x88CB2C", VA = "0x88CB2C")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x4001233")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AEB4", Offset = "0x54AEB4")]
		Unknown,
		[Token(Token = "0x4001234")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AEEC", Offset = "0x54AEEC")]
		Unavailable,
		[Token(Token = "0x4001235")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AF24", Offset = "0x54AF24")]
		Suppressed,
		[Token(Token = "0x4001236")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AF5C", Offset = "0x54AF5C")]
		Active
	}
	[Token(Token = "0x200031B")]
	public enum TimeWindow
	{
		[Token(Token = "0x4001238")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AF94", Offset = "0x54AF94")]
		Unknown,
		[Token(Token = "0x4001239")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54AFCC", Offset = "0x54AFCC")]
		OneHour,
		[Token(Token = "0x400123A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B004", Offset = "0x54B004")]
		OneDay,
		[Token(Token = "0x400123B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B03C", Offset = "0x54B03C")]
		OneWeek,
		[Token(Token = "0x400123C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B074", Offset = "0x54B074")]
		ThirtyDays,
		[Token(Token = "0x400123D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B0AC", Offset = "0x54B0AC")]
		NinetyDays
	}
	[Token(Token = "0x200031C")]
	public class UserOptions
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x88CB34", Offset = "0x88CB34", VA = "0x88CB34")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x88CBAC", Offset = "0x88CBAC", VA = "0x88CBAC")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x88CC28", Offset = "0x88CC28", VA = "0x88CC28")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x88CCA4", Offset = "0x88CCA4", VA = "0x88CCA4")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x88CD10", Offset = "0x88CD10", VA = "0x88CD10")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x88CD8C", Offset = "0x88CD8C", VA = "0x88CD8C")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x88CDDC", Offset = "0x88CDDC", VA = "0x88CDDC", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public enum UserOrdering
	{
		[Token(Token = "0x4001240")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B0E4", Offset = "0x54B0E4")]
		Unknown,
		[Token(Token = "0x4001241")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B11C", Offset = "0x54B11C")]
		None,
		[Token(Token = "0x4001242")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B154", Offset = "0x54B154")]
		PresenceAlphabetical
	}
	[Token(Token = "0x200031E")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x4001244")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B18C", Offset = "0x54B18C")]
		Unknown,
		[Token(Token = "0x4001245")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B1C4", Offset = "0x54B1C4")]
		Online,
		[Token(Token = "0x4001246")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B1FC", Offset = "0x54B1FC")]
		Offline
	}
	[Token(Token = "0x200031F")]
	public class WindowsPlatform
	{
		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x539C78", Offset = "0x539C78")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x88F228", Offset = "0x88F228", VA = "0x88F228")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x88F300", Offset = "0x88F300", VA = "0x88F300")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x88F340", Offset = "0x88F340", VA = "0x88F340")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x88F42C", Offset = "0x88F42C", VA = "0x88F42C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x88F548", Offset = "0x88F548", VA = "0x88F548")]
		public WindowsPlatform()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x200050B")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6002770")]
			[Address(RVA = "0x88E7F8", Offset = "0x88E7F8", VA = "0x88E7F8")]
			private void Awake()
			{
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0x88E8B0", Offset = "0x88E8B0", VA = "0x88E8B0")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x6002772")]
			[Address(RVA = "0x88EE80", Offset = "0x88EE80", VA = "0x88EE80")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170000E4")]
		public ulong senderID
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x88BB64", Offset = "0x88BB64", VA = "0x88BB64")]
			set
			{
			}
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x88E07C", Offset = "0x88E07C", VA = "0x88E07C")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x88E080", Offset = "0x88E080", VA = "0x88E080")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x88E0BC", Offset = "0x88E0BC", VA = "0x88E0BC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x88E3B8", Offset = "0x88E3B8", VA = "0x88E3B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x88E3E8", Offset = "0x88E3E8", VA = "0x88E3E8", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x88E450", Offset = "0x88E450", VA = "0x88E450")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x88E4D8", Offset = "0x88E4D8", VA = "0x88E4D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x88E7EC", Offset = "0x88E7EC", VA = "0x88E7EC")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public enum VoipBitrate
	{
		[Token(Token = "0x400124E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B234", Offset = "0x54B234")]
		Unknown,
		[Token(Token = "0x400124F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B26C", Offset = "0x54B26C")]
		B16000,
		[Token(Token = "0x4001250")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B2A4", Offset = "0x54B2A4")]
		B24000,
		[Token(Token = "0x4001251")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B2DC", Offset = "0x54B2DC")]
		B32000,
		[Token(Token = "0x4001252")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B314", Offset = "0x54B314")]
		B64000,
		[Token(Token = "0x4001253")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B34C", Offset = "0x54B34C")]
		B96000,
		[Token(Token = "0x4001254")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B384", Offset = "0x54B384")]
		B128000
	}
	[Token(Token = "0x2000322")]
	public enum VoipDtxState
	{
		[Token(Token = "0x4001256")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B3BC", Offset = "0x54B3BC")]
		Unknown,
		[Token(Token = "0x4001257")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B3F4", Offset = "0x54B3F4")]
		Enabled,
		[Token(Token = "0x4001258")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B42C", Offset = "0x54B42C")]
		Disabled
	}
	[Token(Token = "0x2000323")]
	public enum VoipMuteState
	{
		[Token(Token = "0x400125A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B464", Offset = "0x54B464")]
		Unknown,
		[Token(Token = "0x400125B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B49C", Offset = "0x54B49C")]
		Muted,
		[Token(Token = "0x400125C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B4D4", Offset = "0x54B4D4")]
		Unmuted
	}
	[Token(Token = "0x2000324")]
	public class VoipOptions
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x88EE88", Offset = "0x88EE88", VA = "0x88EE88")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x88EF00", Offset = "0x88EF00", VA = "0x88EF00")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x88EF7C", Offset = "0x88EF7C", VA = "0x88EF7C")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x88DEE4", Offset = "0x88DEE4", VA = "0x88DEE4")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x88EFF8", Offset = "0x88EFF8", VA = "0x88EFF8", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x88F0BC", Offset = "0x88F0BC", VA = "0x88F0BC", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x88F17C", Offset = "0x88F17C", VA = "0x88F17C", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x88F184", Offset = "0x88F184", VA = "0x88F184", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x88F224", Offset = "0x88F224", VA = "0x88F224", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x88E448", Offset = "0x88E448", VA = "0x88E448")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4001260")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B50C", Offset = "0x54B50C")]
		Unknown,
		[Token(Token = "0x4001261")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B544", Offset = "0x54B544")]
		HZ24000,
		[Token(Token = "0x4001262")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B57C", Offset = "0x54B57C")]
		HZ44100,
		[Token(Token = "0x4001263")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x54B5B4", Offset = "0x54B5B4")]
		HZ48000
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x2000327")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x7F7C70", Offset = "0x7F7C70", VA = "0x7F7C70")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class AchievementDefinition
	{
		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x800078", Offset = "0x800078", VA = "0x800078")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x7F7DE4", Offset = "0x7F7DE4", VA = "0x7F7DE4")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class AchievementProgress
	{
		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x800130", Offset = "0x800130", VA = "0x800130")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x7F80D8", Offset = "0x7F80D8", VA = "0x7F80D8")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class AchievementUpdate
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x7F83CC", Offset = "0x7F83CC", VA = "0x7F83CC")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x7F8554", Offset = "0x7F8554", VA = "0x7F8554")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class AssetDetails
	{
		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B5EC", Offset = "0x54B5EC")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x7F86F8", Offset = "0x7F86F8", VA = "0x7F86F8")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x7F8930", Offset = "0x7F8930", VA = "0x7F8930")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x7F8BF4", Offset = "0x7F8BF4", VA = "0x7F8BF4")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x7F8D9C", Offset = "0x7F8D9C", VA = "0x7F8D9C")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x7F8F44", Offset = "0x7F8F44", VA = "0x7F8F44")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x7F90C8", Offset = "0x7F90C8", VA = "0x7F90C8")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x7F9280", Offset = "0x7F9280", VA = "0x7F9280")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x7F9414", Offset = "0x7F9414", VA = "0x7F9414")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x8002A4", Offset = "0x8002A4", VA = "0x8002A4")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x7F95E8", Offset = "0x7F95E8", VA = "0x7F95E8")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x7F98AC", Offset = "0x7F98AC", VA = "0x7F98AC")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class CloudStorageData
	{
		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x7F9A78", Offset = "0x7F9A78", VA = "0x7F9A78")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x7F9F10", Offset = "0x7F9F10", VA = "0x7F9F10")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x7F9C1C", Offset = "0x7F9C1C", VA = "0x7F9C1C")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x7FA0F4", Offset = "0x7FA0F4", VA = "0x7FA0F4")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5391B4", Offset = "0x5391B4")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x170000E5")]
		public int Count
		{
			[Token(Token = "0x6001FE7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E6")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001FE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E7")]
		public T Item
		{
			[Token(Token = "0x6001FEA")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001FEB")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5570E8", Offset = "0x5570E8")]
		public List<T> Data
		{
			[Token(Token = "0x6001FF6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001FF7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001FF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EB")]
		public string NextUrl
		{
			[Token(Token = "0x6001FF9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001FFA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE9")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6001FEC")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001FED")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001FEE")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEF")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001FF0")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001FF1")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001FF2")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF3")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001FF4")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001FF5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001FFB")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class Error
	{
		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x7F3BDC", Offset = "0x7F3BDC", VA = "0x7F3BDC")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x7FA298", Offset = "0x7FA298", VA = "0x7FA298")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class InstalledApplication
	{
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x80033C", Offset = "0x80033C", VA = "0x80033C")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x7FA52C", Offset = "0x7FA52C", VA = "0x7FA52C")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x8001FC", Offset = "0x8001FC", VA = "0x8001FC")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x7FA850", Offset = "0x7FA850", VA = "0x7FA850")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class LaunchDetails
	{
		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchSource;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong RoomID;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B624", Offset = "0x54B624")]
		public readonly UserList Users;

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x800404", Offset = "0x800404", VA = "0x800404")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x7FA9DC", Offset = "0x7FA9DC", VA = "0x7FA9DC")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x7FABC8", Offset = "0x7FABC8", VA = "0x7FABC8")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x7FADB0", Offset = "0x7FADB0", VA = "0x7FADB0")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x800510", Offset = "0x800510", VA = "0x800510")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x7FB004", Offset = "0x7FB004", VA = "0x7FB004")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class LinkedAccount
	{
		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x8005FC", Offset = "0x8005FC", VA = "0x8005FC")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6002009")]
		[Address(RVA = "0x7FB378", Offset = "0x7FB378", VA = "0x7FB378")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x7FB69C", Offset = "0x7FB69C", VA = "0x7FB69C")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x7FB874", Offset = "0x7FB874", VA = "0x7FB874")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x7FB9E8", Offset = "0x7FB9E8", VA = "0x7FB9E8")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x7FBC0C", Offset = "0x7FBC0C", VA = "0x7FBC0C")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x7FBDA0", Offset = "0x7FBDA0", VA = "0x7FBDA0")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x80087C", Offset = "0x80087C", VA = "0x80087C")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6002010")]
		[Address(RVA = "0x8006A4", Offset = "0x8006A4", VA = "0x8006A4")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x7FBFC0", Offset = "0x7FBFC0", VA = "0x7FBFC0")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B65C", Offset = "0x54B65C")]
		public readonly User User;

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x800948", Offset = "0x800948", VA = "0x800948")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x6002013")]
		[Address(RVA = "0x800A2C", Offset = "0x800A2C", VA = "0x800A2C")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B694", Offset = "0x54B694")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x7FC18C", Offset = "0x7FC18C", VA = "0x7FC18C")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x7FC3C4", Offset = "0x7FC3C4", VA = "0x7FC3C4")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class MatchmakingStats
	{
		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly uint WinCount;

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x7FC9CC", Offset = "0x7FC9CC", VA = "0x7FC9CC")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class NetworkingPeer
	{
		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54B6CC", Offset = "0x54B6CC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54B6DC", Offset = "0x54B6DC")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170000ED")]
		public ulong ID
		{
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x800C14", Offset = "0x800C14", VA = "0x800C14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554CEC", Offset = "0x554CEC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x800C04", Offset = "0x800C04", VA = "0x800C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554CFC", Offset = "0x554CFC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public PeerConnectionState State
		{
			[Token(Token = "0x600201A")]
			[Address(RVA = "0x800C1C", Offset = "0x800C1C", VA = "0x800C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D0C", Offset = "0x554D0C")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x600201B")]
			[Address(RVA = "0x800C0C", Offset = "0x800C0C", VA = "0x800C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D1C", Offset = "0x554D1C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x7FCB94", Offset = "0x7FCB94", VA = "0x7FCB94")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class OrgScopedID
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x7FCCBC", Offset = "0x7FCCBC", VA = "0x7FCCBC")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class Party
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B6EC", Offset = "0x54B6EC")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B724", Offset = "0x54B724")]
		public readonly User Leader;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B75C", Offset = "0x54B75C")]
		public readonly Room Room;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B794", Offset = "0x54B794")]
		public readonly UserList Users;

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x7FCE90", Offset = "0x7FCE90", VA = "0x7FCE90")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class PartyID
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x7FD1FC", Offset = "0x7FD1FC", VA = "0x7FD1FC")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x7FD45C", Offset = "0x7FD45C", VA = "0x7FD45C")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class Pid
	{
		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x800C24", Offset = "0x800C24", VA = "0x800C24")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6002021")]
		[Address(RVA = "0x7FD630", Offset = "0x7FD630", VA = "0x7FD630")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class PingResult
	{
		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54B7CC", Offset = "0x54B7CC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170000EF")]
		public ulong ID
		{
			[Token(Token = "0x6002023")]
			[Address(RVA = "0x800CB4", Offset = "0x800CB4", VA = "0x800CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D2C", Offset = "0x554D2C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6002024")]
			[Address(RVA = "0x800CAC", Offset = "0x800CAC", VA = "0x800CAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D3C", Offset = "0x554D3C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0x800CBC", Offset = "0x800CBC", VA = "0x800CBC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000F1")]
		public bool IsTimeout
		{
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x800D38", Offset = "0x800D38", VA = "0x800D38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x7FD974", Offset = "0x7FD974", VA = "0x7FD974")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x7FDAA0", Offset = "0x7FDAA0", VA = "0x7FDAA0")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class Product
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x800D94", Offset = "0x800D94", VA = "0x800D94")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6002029")]
		[Address(RVA = "0x7FDC14", Offset = "0x7FDC14", VA = "0x7FDC14")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class Purchase
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x7FDF08", Offset = "0x7FDF08", VA = "0x7FDF08")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x600202B")]
		[Address(RVA = "0x7FE0AC", Offset = "0x7FE0AC", VA = "0x7FE0AC")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class Room
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B7DC", Offset = "0x54B7DC")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B814", Offset = "0x54B814")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B84C", Offset = "0x54B84C")]
		public readonly User Owner;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B884", Offset = "0x54B884")]
		public readonly TeamList Teams;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B8BC", Offset = "0x54B8BC")]
		public readonly UserList Users;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x7FC590", Offset = "0x7FC590", VA = "0x7FC590")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x600202D")]
		[Address(RVA = "0x7FE924", Offset = "0x7FE924", VA = "0x7FE924")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x7FE48C", Offset = "0x7FE48C", VA = "0x7FE48C")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x600202F")]
		[Address(RVA = "0x7FE630", Offset = "0x7FE630", VA = "0x7FE630")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class SdkAccount
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x801024", Offset = "0x801024", VA = "0x801024")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6002031")]
		[Address(RVA = "0x7FEDF0", Offset = "0x7FEDF0", VA = "0x7FEDF0")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class ShareMediaResult
	{
		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x7FF0B4", Offset = "0x7FF0B4", VA = "0x7FF0B4")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class SystemPermission
	{
		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x7FF340", Offset = "0x7FF340", VA = "0x7FF340")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class SystemVoipState
	{
		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x7FF4C8", Offset = "0x7FF4C8", VA = "0x7FF4C8")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class Team
	{
		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x8010BC", Offset = "0x8010BC", VA = "0x8010BC")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6002036")]
		[Address(RVA = "0x800E4C", Offset = "0x800E4C", VA = "0x800E4C")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class User
	{
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x7FF64C", Offset = "0x7FF64C", VA = "0x7FF64C")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6002038")]
		[Address(RVA = "0x7FFB14", Offset = "0x7FFB14", VA = "0x7FFB14")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class UserAndRoom
	{
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x54B8F4", Offset = "0x54B8F4")]
		public readonly Room Room;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x801198", Offset = "0x801198", VA = "0x801198")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x600203A")]
		[Address(RVA = "0x7FF820", Offset = "0x7FF820", VA = "0x7FF820")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class UserProof
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x7FFE08", Offset = "0x7FFE08", VA = "0x7FFE08")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class UserReportID
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x7FFFDC", Offset = "0x7FFFDC", VA = "0x7FFFDC")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x2000377")]
	public class P2PManager
	{
		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x170000F2")]
		public bool Connected
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x887250", Offset = "0x887250", VA = "0x887250")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F3")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x6002043")]
			[Address(RVA = "0x887A2C", Offset = "0x887A2C", VA = "0x887A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x886F44", Offset = "0x886F44", VA = "0x886F44")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x8870AC", Offset = "0x8870AC", VA = "0x8870AC")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x88721C", Offset = "0x88721C", VA = "0x88721C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x887260", Offset = "0x887260", VA = "0x887260")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x887490", Offset = "0x887490", VA = "0x887490")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x887A70", Offset = "0x887A70", VA = "0x887A70")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x887CB8", Offset = "0x887CB8", VA = "0x887CB8")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x887D60", Offset = "0x887D60", VA = "0x887D60")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x200050C")]
		public enum State
		{
			[Token(Token = "0x4001B59")]
			INITIALIZING,
			[Token(Token = "0x4001B5A")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x4001B5B")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x4001B5C")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x4001B5D")]
			HANGUP
		}

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539C8C", Offset = "0x539C8C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x6002773")]
			[Address(RVA = "0x88A064", Offset = "0x88A064", VA = "0x88A064")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0x88A078", Offset = "0x88A078", VA = "0x88A078")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x170000F4")]
		public static State CurrentState
		{
			[Token(Token = "0x600204F")]
			[Address(RVA = "0x889238", Offset = "0x889238", VA = "0x889238")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170000F5")]
		public static ulong MyID
		{
			[Token(Token = "0x6002050")]
			[Address(RVA = "0x887140", Offset = "0x887140", VA = "0x887140")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000F6")]
		public static string MyOculusID
		{
			[Token(Token = "0x6002051")]
			[Address(RVA = "0x8892B0", Offset = "0x8892B0", VA = "0x8892B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x888280", Offset = "0x888280", VA = "0x888280")]
		private void Update()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x888510", Offset = "0x888510", VA = "0x888510")]
		private void Awake()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x888CD8", Offset = "0x888CD8", VA = "0x888CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x888D74", Offset = "0x888D74", VA = "0x888D74")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x888F28", Offset = "0x888F28", VA = "0x888F28")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x8890A0", Offset = "0x8890A0", VA = "0x8890A0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x888E70", Offset = "0x888E70", VA = "0x888E70")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x8893D4", Offset = "0x8893D4", VA = "0x8893D4")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x889518", Offset = "0x889518", VA = "0x889518")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x889544", Offset = "0x889544", VA = "0x889544")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x88954C", Offset = "0x88954C", VA = "0x88954C")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x888714", Offset = "0x888714", VA = "0x888714")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x887754", Offset = "0x887754", VA = "0x887754")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x8897FC", Offset = "0x8897FC", VA = "0x8897FC")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x88A06C", Offset = "0x88A06C", VA = "0x88A06C")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class RoomManager
	{
		[Token(Token = "0x200050E")]
		public struct Invite
		{
			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x6002775")]
			[Address(RVA = "0x5B8368", Offset = "0x5B8368", VA = "0x5B8368")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User m_remoteUser;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x170000F7")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x600205C")]
			[Address(RVA = "0x889704", Offset = "0x889704", VA = "0x889704")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000F8")]
		public string RemoteOculusID
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x88A0E0", Offset = "0x88A0E0", VA = "0x88A0E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x88838C", Offset = "0x88838C", VA = "0x88838C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x888B50", Offset = "0x888B50", VA = "0x888B50")]
		public RoomManager()
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x88A144", Offset = "0x88A144", VA = "0x88A144")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x889078", Offset = "0x889078", VA = "0x889078")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x889460", Offset = "0x889460", VA = "0x889460")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x88A2A8", Offset = "0x88A2A8", VA = "0x88A2A8")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x88A3F8", Offset = "0x88A3F8", VA = "0x88A3F8")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x8883CC", Offset = "0x8883CC", VA = "0x8883CC")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x88A484", Offset = "0x88A484", VA = "0x88A484")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x88A8D4", Offset = "0x88A8D4", VA = "0x88A8D4")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x88964C", Offset = "0x88964C", VA = "0x88964C")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x88AB6C", Offset = "0x88AB6C", VA = "0x88AB6C")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x88B1A4", Offset = "0x88B1A4", VA = "0x88B1A4")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x889110", Offset = "0x889110", VA = "0x889110")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class VoipManager
	{
		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x170000FA")]
		public bool Connected
		{
			[Token(Token = "0x600206F")]
			[Address(RVA = "0x8897EC", Offset = "0x8897EC", VA = "0x8897EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x888C18", Offset = "0x888C18", VA = "0x888C18")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x88971C", Offset = "0x88971C", VA = "0x88971C")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x889188", Offset = "0x889188", VA = "0x889188")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x88BD6C", Offset = "0x88BD6C", VA = "0x88BD6C")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x88C038", Offset = "0x88C038", VA = "0x88C038")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x88B838", Offset = "0x88B838", VA = "0x88B838")]
		private void Update()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x88BA6C", Offset = "0x88BA6C", VA = "0x88BA6C")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x200037C")]
	public class AchievementsManager
	{
		[Token(Token = "0x4001363")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x170000FB")]
		public bool LikesToWin
		{
			[Token(Token = "0x6002074")]
			[Address(RVA = "0x87B32C", Offset = "0x87B32C", VA = "0x87B32C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x87B334", Offset = "0x87B334", VA = "0x87B334")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x87B454", Offset = "0x87B454", VA = "0x87B454")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x87B4B0", Offset = "0x87B4B0", VA = "0x87B4B0")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x87B4B8", Offset = "0x87B4B8", VA = "0x87B4B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D4C", Offset = "0x554D4C")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6002079")]
		[Address(RVA = "0x87AF50", Offset = "0x87AF50", VA = "0x87AF50")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x87B2B8", Offset = "0x87B2B8", VA = "0x87B2B8")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x600207B")]
		[Address(RVA = "0x87B734", Offset = "0x87B734", VA = "0x87B734")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x600207C")]
		[Address(RVA = "0x87B73C", Offset = "0x87B73C", VA = "0x87B73C")]
		private void Update()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x87BA28", Offset = "0x87BA28", VA = "0x87BA28")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x200050F")]
		private enum BasketPhase
		{
			[Token(Token = "0x4001B62")]
			NONE,
			[Token(Token = "0x4001B63")]
			TOP,
			[Token(Token = "0x4001B64")]
			BOTH,
			[Token(Token = "0x4001B65")]
			BOTTOM
		}

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x170000FC")]
		public Player Player
		{
			[Token(Token = "0x600207E")]
			[Address(RVA = "0x87BA30", Offset = "0x87BA30", VA = "0x87BA30")]
			set
			{
			}
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x87BA38", Offset = "0x87BA38", VA = "0x87BA38")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x87BB40", Offset = "0x87BB40", VA = "0x87BB40")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x87BD3C", Offset = "0x87BD3C", VA = "0x87BD3C")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x4001367")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x87BD44", Offset = "0x87BD44", VA = "0x87BD44")]
		private void Start()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x87BE14", Offset = "0x87BE14", VA = "0x87BE14")]
		private void Update()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x87BF78", Offset = "0x87BF78", VA = "0x87BF78")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x400136C")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x170000FD")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x87C014", Offset = "0x87C014", VA = "0x87C014")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x87C020", Offset = "0x87C020", VA = "0x87C020")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x87C02C", Offset = "0x87C02C", VA = "0x87C02C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x87C038", Offset = "0x87C038", VA = "0x87C038")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x87C044", Offset = "0x87C044", VA = "0x87C044")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x87C050", Offset = "0x87C050", VA = "0x87C050")]
			set
			{
			}
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x87C05C", Offset = "0x87C05C", VA = "0x87C05C")]
		private void Start()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x87C1F4", Offset = "0x87C1F4", VA = "0x87C1F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x87C5C0", Offset = "0x87C5C0", VA = "0x87C5C0")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class LeaderboardManager
	{
		[Token(Token = "0x2000510")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x2000511")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x4001370")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x4001371")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x4001372")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x4001373")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x17000100")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x87C860", Offset = "0x87C860", VA = "0x87C860")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x87D454", Offset = "0x87D454", VA = "0x87D454")]
			set
			{
			}
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x87C5D8", Offset = "0x87C5D8", VA = "0x87C5D8")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x87C640", Offset = "0x87C640", VA = "0x87C640")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x87C868", Offset = "0x87C868", VA = "0x87C868")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x87C750", Offset = "0x87C750", VA = "0x87C750")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x87D45C", Offset = "0x87D45C", VA = "0x87D45C")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x87DFA0", Offset = "0x87DFA0", VA = "0x87DFA0")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x87E054", Offset = "0x87E054", VA = "0x87E054")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x17000102")]
		public override uint Score
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x87E0DC", Offset = "0x87E0DC", VA = "0x87E0DC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x87E444", Offset = "0x87E444", VA = "0x87E444")]
		private void Update()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x87E5F8", Offset = "0x87E5F8", VA = "0x87E5F8")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x2000512")]
		private enum State
		{
			[Token(Token = "0x4001B67")]
			UNKNOWN,
			[Token(Token = "0x4001B68")]
			NONE,
			[Token(Token = "0x4001B69")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4001B6A")]
			PRACTICING,
			[Token(Token = "0x4001B6B")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4001B6C")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4001B6D")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4001B6E")]
			PLAYING_MATCH,
			[Token(Token = "0x4001B6F")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x17000103")]
		public float MatchStartTime
		{
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x87EEC4", Offset = "0x87EEC4", VA = "0x87EEC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x87EEE4", Offset = "0x87EEE4", VA = "0x87EEE4")]
			private set
			{
			}
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x87E5FC", Offset = "0x87E5FC", VA = "0x87E5FC")]
		private void Start()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x87EBEC", Offset = "0x87EBEC", VA = "0x87EBEC")]
		private void Update()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x87E8BC", Offset = "0x87E8BC", VA = "0x87E8BC")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x87EC10", Offset = "0x87EC10", VA = "0x87EC10")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x87ECBC", Offset = "0x87ECBC", VA = "0x87ECBC")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x87EEEC", Offset = "0x87EEEC", VA = "0x87EEEC")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x87F210", Offset = "0x87F210", VA = "0x87F210")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x87FA04", Offset = "0x87FA04", VA = "0x87FA04")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x87EFC8", Offset = "0x87EFC8", VA = "0x87EFC8")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x87F354", Offset = "0x87F354", VA = "0x87F354")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x87FD8C", Offset = "0x87FD8C", VA = "0x87FD8C")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x87FDA4", Offset = "0x87FDA4", VA = "0x87FDA4")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x87FF64", Offset = "0x87FF64", VA = "0x87FF64")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x87FF78", Offset = "0x87FF78", VA = "0x87FF78")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x88007C", Offset = "0x88007C", VA = "0x88007C")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x8806F0", Offset = "0x8806F0", VA = "0x8806F0")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x87F524", Offset = "0x87F524", VA = "0x87F524")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x87FB5C", Offset = "0x87FB5C", VA = "0x87FB5C")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x880E2C", Offset = "0x880E2C", VA = "0x880E2C")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class MatchmakingManager
	{
		[Token(Token = "0x2000513")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x2000514")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x400138C")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x17000104")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x880F80", Offset = "0x880F80", VA = "0x880F80")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x87E824", Offset = "0x87E824", VA = "0x87E824")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x880F88", Offset = "0x880F88", VA = "0x880F88")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x87E83C", Offset = "0x87E83C", VA = "0x87E83C")]
			set
			{
			}
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x880E98", Offset = "0x880E98", VA = "0x880E98")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x87FE80", Offset = "0x87FE80", VA = "0x87FE80")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x880F90", Offset = "0x880F90", VA = "0x880F90")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x8814B8", Offset = "0x8814B8", VA = "0x8814B8")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x8815C8", Offset = "0x8815C8", VA = "0x8815C8")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x882138", Offset = "0x882138", VA = "0x882138")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x87F89C", Offset = "0x87F89C", VA = "0x87F89C")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x87FF3C", Offset = "0x87FF3C", VA = "0x87FF3C")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class P2PManager
	{
		[Token(Token = "0x2000515")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x6002786")]
			[Address(RVA = "0x883E88", Offset = "0x883E88", VA = "0x883E88")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x2000516")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x4001393")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x4001394")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4001395")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4001396")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x4001397")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4001398")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x4001399")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x400139A")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x400139B")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x400139C")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x400139D")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x400139E")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x17000106")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x884B98", Offset = "0x884B98", VA = "0x884B98")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x87E854", Offset = "0x87E854", VA = "0x87E854")]
			set
			{
			}
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x8828D4", Offset = "0x8828D4", VA = "0x8828D4")]
		public P2PManager()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x882A4C", Offset = "0x882A4C", VA = "0x882A4C")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x881EF4", Offset = "0x881EF4", VA = "0x881EF4")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x88263C", Offset = "0x88263C", VA = "0x88263C")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x883EF8", Offset = "0x883EF8", VA = "0x883EF8")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x884188", Offset = "0x884188", VA = "0x884188")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x884618", Offset = "0x884618", VA = "0x884618")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x882C88", Offset = "0x882C88", VA = "0x882C88")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x884AD4", Offset = "0x884AD4", VA = "0x884AD4")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x8848C0", Offset = "0x8848C0", VA = "0x8848C0")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x8833A0", Offset = "0x8833A0", VA = "0x8833A0")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x885024", Offset = "0x885024", VA = "0x885024")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x88340C", Offset = "0x88340C", VA = "0x88340C")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x87E534", Offset = "0x87E534", VA = "0x87E534")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x88551C", Offset = "0x88551C", VA = "0x88551C")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x883A58", Offset = "0x883A58", VA = "0x883A58")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x88356C", Offset = "0x88356C", VA = "0x88356C")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x87E264", Offset = "0x87E264", VA = "0x87E264")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x883998", Offset = "0x883998", VA = "0x883998")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x885284", Offset = "0x885284", VA = "0x885284")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x8852D4", Offset = "0x8852D4", VA = "0x8852D4")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x885DC0", Offset = "0x885DC0", VA = "0x885DC0")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x88478C", Offset = "0x88478C", VA = "0x88478C")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x884834", Offset = "0x884834", VA = "0x884834")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x884FF0", Offset = "0x884FF0", VA = "0x884FF0")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x885648", Offset = "0x885648", VA = "0x885648")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x885778", Offset = "0x885778", VA = "0x885778")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x885C90", Offset = "0x885C90", VA = "0x885C90")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x885D30", Offset = "0x885D30", VA = "0x885D30")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x8855E4", Offset = "0x8855E4", VA = "0x8855E4")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x885718", Offset = "0x885718", VA = "0x885718")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000388")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x17000107")]
		public Vector3 velocity
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0x8856E8", Offset = "0x8856E8", VA = "0x8856E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x885EF4", Offset = "0x885EF4", VA = "0x885EF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x8855A8", Offset = "0x8855A8", VA = "0x8855A8")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x885AC4", Offset = "0x885AC4", VA = "0x885AC4")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x885F64", Offset = "0x885F64", VA = "0x885F64")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x8860A0", Offset = "0x8860A0", VA = "0x8860A0")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x8861F0", Offset = "0x8861F0", VA = "0x8861F0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x886218", Offset = "0x886218", VA = "0x886218")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x886260", Offset = "0x886260", VA = "0x886260")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x17000108")]
		public bool SendUpdates
		{
			[Token(Token = "0x60020E5")]
			[Address(RVA = "0x886268", Offset = "0x886268", VA = "0x886268")]
			set
			{
			}
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x886274", Offset = "0x886274", VA = "0x886274")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x8862E4", Offset = "0x8862E4", VA = "0x8862E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x8863C4", Offset = "0x8863C4", VA = "0x8863C4")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x885334", Offset = "0x885334", VA = "0x885334")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x8864DC", Offset = "0x8864DC", VA = "0x8864DC")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000517")]
		public enum State
		{
			[Token(Token = "0x4001B76")]
			INITIALIZING,
			[Token(Token = "0x4001B77")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4001B78")]
			MATCH_TRANSITION,
			[Token(Token = "0x4001B79")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x4001B7A")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x17000109")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x87E7B4", Offset = "0x87E7B4", VA = "0x87E7B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public static P2PManager P2P
		{
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x87E1FC", Offset = "0x87E1FC", VA = "0x87E1FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x87E85C", Offset = "0x87E85C", VA = "0x87E85C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x880DC4", Offset = "0x880DC4", VA = "0x880DC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		public static State CurrentState
		{
			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x87BCDC", Offset = "0x87BCDC", VA = "0x87BCDC")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x1700010E")]
		public static ulong MyID
		{
			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x87CC78", Offset = "0x87CC78", VA = "0x87CC78")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700010F")]
		public static string MyOculusID
		{
			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x87F92C", Offset = "0x87F92C", VA = "0x87F92C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x8864E4", Offset = "0x8864E4", VA = "0x8864E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x88652C", Offset = "0x88652C", VA = "0x88652C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x8866E8", Offset = "0x8866E8", VA = "0x8866E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x886784", Offset = "0x886784", VA = "0x886784")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x886860", Offset = "0x886860", VA = "0x886860")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x882584", Offset = "0x882584", VA = "0x882584")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x886958", Offset = "0x886958", VA = "0x886958")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x886960", Offset = "0x886960", VA = "0x886960")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x87F144", Offset = "0x87F144", VA = "0x87F144")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x886994", Offset = "0x886994", VA = "0x886994")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x40013B1")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x40013B2")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x40013B3")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x17000110")]
		public virtual uint Score
		{
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x87E25C", Offset = "0x87E25C", VA = "0x87E25C", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x87E130", Offset = "0x87E130", VA = "0x87E130", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x88699C", Offset = "0x88699C", VA = "0x88699C")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		protected bool HasBall
		{
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x87AFB4", Offset = "0x87AFB4", VA = "0x87AFB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x8869A4", Offset = "0x8869A4", VA = "0x8869A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x885804", Offset = "0x885804", VA = "0x885804")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x87B23C", Offset = "0x87B23C", VA = "0x87B23C")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x87B024", Offset = "0x87B024", VA = "0x87B024")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x886A84", Offset = "0x886A84", VA = "0x886A84")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x87B2BC", Offset = "0x87B2BC", VA = "0x87B2BC")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x17000113")]
		public Player Player
		{
			[Token(Token = "0x6002106")]
			[Address(RVA = "0x880D64", Offset = "0x880D64", VA = "0x880D64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public Text NameText
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0x880E24", Offset = "0x880E24", VA = "0x880E24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x886BC0", Offset = "0x886BC0", VA = "0x886BC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002109")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x886CF0", Offset = "0x886CF0", VA = "0x886CF0")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x17000115")]
		public User User
		{
			[Token(Token = "0x600210B")]
			[Address(RVA = "0x87FB54", Offset = "0x87FB54", VA = "0x87FB54")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public ulong ID
		{
			[Token(Token = "0x600210C")]
			[Address(RVA = "0x883E5C", Offset = "0x883E5C", VA = "0x883E5C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000117")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x88532C", Offset = "0x88532C", VA = "0x88532C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600210E")]
			[Address(RVA = "0x886CF8", Offset = "0x886CF8", VA = "0x886CF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public override uint Score
		{
			[Token(Token = "0x600210F")]
			[Address(RVA = "0x886D00", Offset = "0x886D00", VA = "0x886D00", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x885DBC", Offset = "0x885DBC", VA = "0x885DBC")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x886D04", Offset = "0x886D04", VA = "0x886D04")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x886D08", Offset = "0x886D08", VA = "0x886D08")]
		private void Update()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x886F3C", Offset = "0x886F3C", VA = "0x886F3C")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x200038F")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BA8C", Offset = "0x54BA8C")]
		public int x;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BACC", Offset = "0x54BACC")]
		public int y;

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x80CE88", Offset = "0x80CE88", VA = "0x80CE88")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x80CE90", Offset = "0x80CE90", VA = "0x80CE90")]
		private void Update()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x80D8E8", Offset = "0x80D8E8", VA = "0x80D8E8")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x2000518")]
		private struct PositionInfo
		{
			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x40013CB")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x40013CC")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x40013CD")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x80D8F0", Offset = "0x80D8F0", VA = "0x80D8F0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x80DB98", Offset = "0x80DB98", VA = "0x80DB98")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x80DCA8", Offset = "0x80DCA8", VA = "0x80DCA8")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x80DD8C", Offset = "0x80DD8C", VA = "0x80DD8C")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x80DE70", Offset = "0x80DE70", VA = "0x80DE70")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x80E764", Offset = "0x80E764", VA = "0x80E764")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x80E888", Offset = "0x80E888", VA = "0x80E888")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x80EB0C", Offset = "0x80EB0C", VA = "0x80EB0C")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x80E164", Offset = "0x80E164", VA = "0x80E164")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x80ECD4", Offset = "0x80ECD4", VA = "0x80ECD4")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x80E348", Offset = "0x80E348", VA = "0x80E348")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x80ED28", Offset = "0x80ED28", VA = "0x80ED28")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x2000519")]
		private enum GameState
		{
			[Token(Token = "0x4001B7F")]
			None,
			[Token(Token = "0x4001B80")]
			PracticingMyTurn,
			[Token(Token = "0x4001B81")]
			PracticingAiTurn,
			[Token(Token = "0x4001B82")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4001B83")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x80EE00", Offset = "0x80EE00", VA = "0x80EE00")]
		private void Start()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x80EF88", Offset = "0x80EF88", VA = "0x80EF88")]
		private void Update()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x80EE28", Offset = "0x80EE28", VA = "0x80EE28")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x80F578", Offset = "0x80F578", VA = "0x80F578")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x80EF8C", Offset = "0x80EF8C", VA = "0x80EF8C")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x80FC50", Offset = "0x80FC50", VA = "0x80FC50")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x80F684", Offset = "0x80F684", VA = "0x80F684")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x80FD80", Offset = "0x80FD80", VA = "0x80FD80")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x80FDE8", Offset = "0x80FDE8", VA = "0x80FDE8")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x80FE80", Offset = "0x80FE80", VA = "0x80FE80")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x80FE94", Offset = "0x80FE94", VA = "0x80FE94")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x80D530", Offset = "0x80D530", VA = "0x80D530")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x80D528", Offset = "0x80D528", VA = "0x80D528")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x80D538", Offset = "0x80D538", VA = "0x80D538")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x80D814", Offset = "0x80D814", VA = "0x80D814")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x80F8A0", Offset = "0x80F8A0", VA = "0x80F8A0")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x80F9AC", Offset = "0x80F9AC", VA = "0x80F9AC")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x80FF14", Offset = "0x80FF14", VA = "0x80FF14")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x80FF1C", Offset = "0x80FF1C", VA = "0x80FF1C")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x80EE30", Offset = "0x80EE30", VA = "0x80EE30")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x80F044", Offset = "0x80F044", VA = "0x80F044")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x80FFC4", Offset = "0x80FFC4", VA = "0x80FFC4")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x200051A")]
		public enum Piece
		{
			[Token(Token = "0x4001B85")]
			A,
			[Token(Token = "0x4001B86")]
			B,
			[Token(Token = "0x4001B87")]
			PowerBall
		}

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x17000119")]
		public Piece Type
		{
			[Token(Token = "0x6002139")]
			[Address(RVA = "0x877B54", Offset = "0x877B54", VA = "0x877B54")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x1700011A")]
		public BoardPosition Position
		{
			[Token(Token = "0x600213A")]
			[Address(RVA = "0x877B5C", Offset = "0x877B5C", VA = "0x877B5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600213B")]
			[Address(RVA = "0x877B64", Offset = "0x877B64", VA = "0x877B64")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public GameObject Prefab
		{
			[Token(Token = "0x600213C")]
			[Address(RVA = "0x877B6C", Offset = "0x877B6C", VA = "0x877B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x877B98", Offset = "0x877B98", VA = "0x877B98")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x877BC0", Offset = "0x877BC0", VA = "0x877BC0")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x40013EC")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x877BC8", Offset = "0x877BC8", VA = "0x877BC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x877BEC", Offset = "0x877BEC", VA = "0x877BEC")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x877DB8", Offset = "0x877DB8", VA = "0x877DB8")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x877D0C", Offset = "0x877D0C", VA = "0x877D0C")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x8782B4", Offset = "0x8782B4", VA = "0x8782B4")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x8786E0", Offset = "0x8786E0", VA = "0x8786E0")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x878798", Offset = "0x878798", VA = "0x878798")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x8788A8", Offset = "0x8788A8", VA = "0x8788A8")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x200051B")]
		private enum MatchRoomState
		{
			[Token(Token = "0x4001B89")]
			None,
			[Token(Token = "0x4001B8A")]
			Queued,
			[Token(Token = "0x4001B8B")]
			Configuring,
			[Token(Token = "0x4001B8C")]
			MyTurn,
			[Token(Token = "0x4001B8D")]
			RemoteTurn
		}

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x40013F0")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x40013F4")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x8788B0", Offset = "0x8788B0", VA = "0x8788B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x878B20", Offset = "0x878B20", VA = "0x878B20")]
		private void Update()
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x878C4C", Offset = "0x878C4C", VA = "0x878C4C")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x878C64", Offset = "0x878C64", VA = "0x878C64")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x878F18", Offset = "0x878F18", VA = "0x878F18")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x878970", Offset = "0x878970", VA = "0x878970")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x878F54", Offset = "0x878F54", VA = "0x878F54")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x879358", Offset = "0x879358", VA = "0x879358")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x879510", Offset = "0x879510", VA = "0x879510")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x879E60", Offset = "0x879E60", VA = "0x879E60")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x879910", Offset = "0x879910", VA = "0x879910")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x87A3B4", Offset = "0x87A3B4", VA = "0x87A3B4")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x87A64C", Offset = "0x87A64C", VA = "0x87A64C")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x87A984", Offset = "0x87A984", VA = "0x87A984")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x87A35C", Offset = "0x87A35C", VA = "0x87A35C")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x87A9C8", Offset = "0x87A9C8", VA = "0x87A9C8")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x87AAA0", Offset = "0x87AAA0", VA = "0x87AAA0")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x1700011C")]
		public static ulong MyID
		{
			[Token(Token = "0x600215D")]
			[Address(RVA = "0x878E70", Offset = "0x878E70", VA = "0x878E70")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700011D")]
		public static string MyOculusID
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0x87A8AC", Offset = "0x87A8AC", VA = "0x87A8AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x87AAA8", Offset = "0x87AAA8", VA = "0x87AAA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x87ABE8", Offset = "0x87ABE8", VA = "0x87ABE8")]
		private void Start()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x87AC84", Offset = "0x87AC84", VA = "0x87AC84")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x87AE28", Offset = "0x87AE28", VA = "0x87AE28")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x8781FC", Offset = "0x8781FC", VA = "0x8781FC")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x87AF48", Offset = "0x87AF48", VA = "0x87AF48")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x2000397")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x8082CC", Offset = "0x8082CC", VA = "0x8082CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x8083D4", Offset = "0x8083D4", VA = "0x8083D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x8084B0", Offset = "0x8084B0", VA = "0x8084B0")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x80A2D0", Offset = "0x80A2D0", VA = "0x80A2D0")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x80A1B4", Offset = "0x80A1B4", VA = "0x80A1B4")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x80A0F8", Offset = "0x80A0F8", VA = "0x80A0F8")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x80A010", Offset = "0x80A010", VA = "0x80A010")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x809F5C", Offset = "0x809F5C", VA = "0x809F5C")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x809E3C", Offset = "0x809E3C", VA = "0x809E3C")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x809D1C", Offset = "0x809D1C", VA = "0x809D1C")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x80833C", Offset = "0x80833C", VA = "0x80833C")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x809C5C", Offset = "0x809C5C", VA = "0x809C5C")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x808DC4", Offset = "0x808DC4", VA = "0x808DC4")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x808ED0", Offset = "0x808ED0", VA = "0x808ED0")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x808F8C", Offset = "0x808F8C", VA = "0x808F8C")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x809088", Offset = "0x809088", VA = "0x809088")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x809188", Offset = "0x809188", VA = "0x809188")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x809284", Offset = "0x809284", VA = "0x809284")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x8093B0", Offset = "0x8093B0", VA = "0x8093B0")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x809470", Offset = "0x809470", VA = "0x809470")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x809570", Offset = "0x809570", VA = "0x809570")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x809630", Offset = "0x809630", VA = "0x809630")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x8096EC", Offset = "0x8096EC", VA = "0x8096EC")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x809800", Offset = "0x809800", VA = "0x809800")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x809914", Offset = "0x809914", VA = "0x809914")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x80A390", Offset = "0x80A390", VA = "0x80A390")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x80A458", Offset = "0x80A458", VA = "0x80A458")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x80AB78", Offset = "0x80AB78", VA = "0x80AB78")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x80B0AC", Offset = "0x80B0AC", VA = "0x80B0AC")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x80B1A0", Offset = "0x80B1A0", VA = "0x80B1A0")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x80B21C", Offset = "0x80B21C", VA = "0x80B21C")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x80B82C", Offset = "0x80B82C", VA = "0x80B82C")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x80BA30", Offset = "0x80BA30", VA = "0x80BA30")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x80BAF0", Offset = "0x80BAF0", VA = "0x80BAF0")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x80BBB0", Offset = "0x80BBB0", VA = "0x80BBB0")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x80BC70", Offset = "0x80BC70", VA = "0x80BC70")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x80C028", Offset = "0x80C028", VA = "0x80C028")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x80C458", Offset = "0x80C458", VA = "0x80C458")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x80C548", Offset = "0x80C548", VA = "0x80C548")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x80C638", Offset = "0x80C638", VA = "0x80C638")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x80C728", Offset = "0x80C728", VA = "0x80C728")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x80C818", Offset = "0x80C818", VA = "0x80C818")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x80CBE0", Offset = "0x80CBE0", VA = "0x80CBE0")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x80CCD0", Offset = "0x80CCD0", VA = "0x80CCD0")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x80CDC0", Offset = "0x80CDC0", VA = "0x80CDC0")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x80CE80", Offset = "0x80CE80", VA = "0x80CE80")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x2000398")]
	internal enum states
	{
		[Token(Token = "0x40013FB")]
		NOT_INIT,
		[Token(Token = "0x40013FC")]
		IDLE,
		[Token(Token = "0x40013FD")]
		REQUEST_FIND,
		[Token(Token = "0x40013FE")]
		FINDING_ROOM,
		[Token(Token = "0x40013FF")]
		REQUEST_CREATE,
		[Token(Token = "0x4001400")]
		REQUEST_JOIN,
		[Token(Token = "0x4001401")]
		REQUEST_LEAVE,
		[Token(Token = "0x4001402")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x4001403")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x2000399")]
	public static class Constants
	{
		[Token(Token = "0x4001404")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4001405")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4001406")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x200039A")]
	public class chatPacket
	{
		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54BCBC", Offset = "0x54BCBC")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54BCCC", Offset = "0x54BCCC")]
		private string <textString>k__BackingField;

		[Token(Token = "0x1700011E")]
		public int packetID
		{
			[Token(Token = "0x600218E")]
			[Address(RVA = "0x808038", Offset = "0x808038", VA = "0x808038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D5C", Offset = "0x554D5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600218F")]
			[Address(RVA = "0x807A24", Offset = "0x807A24", VA = "0x807A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D6C", Offset = "0x554D6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public string textString
		{
			[Token(Token = "0x6002190")]
			[Address(RVA = "0x808030", Offset = "0x808030", VA = "0x808030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D7C", Offset = "0x554D7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002191")]
			[Address(RVA = "0x807A2C", Offset = "0x807A2C", VA = "0x807A2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D8C", Offset = "0x554D8C")]
			set
			{
			}
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x807A34", Offset = "0x807A34", VA = "0x807A34")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x807D80", Offset = "0x807D80", VA = "0x807D80")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x807A1C", Offset = "0x807A1C", VA = "0x807A1C")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x8054F4", Offset = "0x8054F4", VA = "0x8054F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x805680", Offset = "0x805680", VA = "0x805680")]
		private void Update()
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x805764", Offset = "0x805764", VA = "0x805764")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x806C64", Offset = "0x806C64", VA = "0x806C64")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x8055E8", Offset = "0x8055E8", VA = "0x8055E8")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x806D2C", Offset = "0x806D2C", VA = "0x806D2C")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x806E24", Offset = "0x806E24", VA = "0x806E24")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x805C84", Offset = "0x805C84", VA = "0x805C84")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x806F68", Offset = "0x806F68", VA = "0x806F68")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x805E08", Offset = "0x805E08", VA = "0x805E08")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x806208", Offset = "0x806208", VA = "0x806208")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x806384", Offset = "0x806384", VA = "0x806384")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x8070C8", Offset = "0x8070C8", VA = "0x8070C8")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x80722C", Offset = "0x80722C", VA = "0x80722C")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x80608C", Offset = "0x80608C", VA = "0x80608C")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x807590", Offset = "0x807590", VA = "0x807590")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x80766C", Offset = "0x80766C", VA = "0x80766C")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x806710", Offset = "0x806710", VA = "0x806710")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x805AE4", Offset = "0x805AE4", VA = "0x805AE4")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x806828", Offset = "0x806828", VA = "0x806828")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x808040", Offset = "0x808040", VA = "0x808040")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x80695C", Offset = "0x80695C", VA = "0x80695C")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x808120", Offset = "0x808120", VA = "0x808120")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x806A70", Offset = "0x806A70", VA = "0x806A70")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x8081FC", Offset = "0x8081FC", VA = "0x8081FC")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x8082C4", Offset = "0x8082C4", VA = "0x8082C4")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x200039C")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000109")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x804CC0", Offset = "0x804CC0", VA = "0x804CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D9C", Offset = "0x554D9C")]
			add
			{
			}
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x804DBC", Offset = "0x804DBC", VA = "0x804DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554DAC", Offset = "0x554DAC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400010A")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x804EB8", Offset = "0x804EB8", VA = "0x804EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554DBC", Offset = "0x554DBC")]
			add
			{
			}
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x804FB8", Offset = "0x804FB8", VA = "0x804FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554DCC", Offset = "0x554DCC")]
			remove
			{
			}
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x8050B8", Offset = "0x8050B8", VA = "0x8050B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x8054A8", Offset = "0x8054A8", VA = "0x8054A8")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x80522C", Offset = "0x80522C", VA = "0x80522C")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x8054E4", Offset = "0x8054E4", VA = "0x8054E4")]
		public EntitlementCheck()
		{
		}
	}
}
namespace BeautifyEffect
{
	[Token(Token = "0x200039D")]
	public class CameraAnimator : MonoBehaviour
	{
		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xA4871C", Offset = "0xA4871C", VA = "0xA4871C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xA48794", Offset = "0xA48794", VA = "0xA48794")]
		public CameraAnimator()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class Demo1 : MonoBehaviour
	{
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float deltaTime;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool benchmarkEnabled;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle style;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect rect;

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xA4879C", Offset = "0xA4879C", VA = "0xA4879C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xA48914", Offset = "0xA48914", VA = "0xA48914")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xA489E8", Offset = "0xA489E8", VA = "0xA489E8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xA48C3C", Offset = "0xA48C3C", VA = "0xA48C3C")]
		public Demo1()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class Demo2 : MonoBehaviour
	{
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int demoMode;

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xA48C44", Offset = "0xA48C44", VA = "0xA48C44")]
		private void Start()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xA49164", Offset = "0xA49164", VA = "0xA49164")]
		private void Update()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xA48C48", Offset = "0xA48C48", VA = "0xA48C48")]
		private void UpdateDemoMode()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xA491D4", Offset = "0xA491D4", VA = "0xA491D4")]
		public Demo2()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class Demo4 : MonoBehaviour
	{
		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xA491DC", Offset = "0xA491DC", VA = "0xA491DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xA492F4", Offset = "0xA492F4", VA = "0xA492F4")]
		public Demo4()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class FreeCameraMove : MonoBehaviour
	{
		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion originalRotation;

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xA492FC", Offset = "0xA492FC", VA = "0xA492FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xA49364", Offset = "0xA49364", VA = "0xA49364")]
		private void Update()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xA4A054", Offset = "0xA4A054", VA = "0xA4A054")]
		public FreeCameraMove()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class SphereAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xA4A148", Offset = "0xA4A148", VA = "0xA4A148")]
		private void Start()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xA4A1A0", Offset = "0xA4A1A0", VA = "0xA4A1A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xA4A300", Offset = "0xA4A300", VA = "0xA4A300")]
		public SphereAnimator()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public delegate float OnBeforeFocusEvent(float currentFocusDistance);
	[Token(Token = "0x20003A4")]
	public enum BEAUTIFY_QUALITY
	{
		[Token(Token = "0x4001422")]
		BestQuality,
		[Token(Token = "0x4001423")]
		BestPerformance,
		[Token(Token = "0x4001424")]
		Basic
	}
	[Token(Token = "0x20003A5")]
	public enum BEAUTIFY_PRESET
	{
		[Token(Token = "0x4001426")]
		Soft = 10,
		[Token(Token = "0x4001427")]
		Medium = 20,
		[Token(Token = "0x4001428")]
		Strong = 30,
		[Token(Token = "0x4001429")]
		Exaggerated = 40,
		[Token(Token = "0x400142A")]
		Custom = 999
	}
	[Token(Token = "0x20003A6")]
	public enum BEAUTIFY_TMO
	{
		[Token(Token = "0x400142C")]
		Linear = 0,
		[Token(Token = "0x400142D")]
		ACES = 10
	}
	[Token(Token = "0x20003A7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5391EC", Offset = "0x5391EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5391EC", Offset = "0x5391EC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x5391EC", Offset = "0x5391EC")]
	[ImageEffectAllowedInSceneView]
	public class Beautify : MonoBehaviour
	{
		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x539C9C", Offset = "0x539C9C")]
		private sealed class <DoBlink>d__720 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Beautify <>4__this;

			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float maxValue;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <start>5__2;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__3;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WaitForEndOfFrame <w>5__4;

			[Token(Token = "0x1700028D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600278E")]
				[Address(RVA = "0xA47214", Offset = "0xA47214", VA = "0xA47214", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002790")]
				[Address(RVA = "0xA47284", Offset = "0xA47284", VA = "0xA47284", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0xA46BA4", Offset = "0xA46BA4", VA = "0xA46BA4")]
			[DebuggerHidden]
			public <DoBlink>d__720(int <>1__state)
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0xA4706C", Offset = "0xA4706C", VA = "0xA4706C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0xA47070", Offset = "0xA47070", VA = "0xA47070", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0xA4721C", Offset = "0xA4721C", VA = "0xA4721C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BEAUTIFY_PRESET _preset;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private BEAUTIFY_QUALITY _quality;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BeautifyProfile _profile;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _compareMode;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BD3C", Offset = "0x54BD3C")]
		private float _compareLineAngle;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BD84", Offset = "0x54BD84")]
		private float _compareLineWidth;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BDCC", Offset = "0x54BDCC")]
		private float _dither;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BE10", Offset = "0x54BE10")]
		private float _ditherDepth;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BE50", Offset = "0x54BE50")]
		private float _sharpenMinDepth;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BE90", Offset = "0x54BE90")]
		private float _sharpenMaxDepth;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BED4", Offset = "0x54BED4")]
		private float _sharpenMinMaxDepthFallOff;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BF14", Offset = "0x54BF14")]
		private float _sharpen;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BF54", Offset = "0x54BF54")]
		private float _sharpenDepthThreshold;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _tintColor;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BFA8", Offset = "0x54BFA8")]
		private float _sharpenRelaxation;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54BFEC", Offset = "0x54BFEC")]
		private float _sharpenClamp;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C02C", Offset = "0x54C02C")]
		private float _sharpenMotionSensibility;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C06C", Offset = "0x54C06C")]
		private float _saturate;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C0AC", Offset = "0x54C0AC")]
		private float _contrast;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _brightness;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C0FC", Offset = "0x54C0FC")]
		private float _daltonize;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private bool _vignetting;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color _vignettingColor;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C15C", Offset = "0x54C15C")]
		private float _vignettingFade;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _vignettingCircularShape;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _vignettingAspectRatio;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C1BC", Offset = "0x54C1BC")]
		private float _vignettingBlink;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture2D _vignettingMask;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _frame;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Color _frameColor;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Texture2D _frameMask;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _lut;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C24C", Offset = "0x54C24C")]
		private float _lutIntensity;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Texture2D _lutTexture;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private bool _nightVision;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private Color _nightVisionColor;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _outline;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color _outlineColor;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool _thermalVision;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[SerializeField]
		private bool _lensDirt;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C2FC", Offset = "0x54C2FC")]
		private float _lensDirtThreshold;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C33C", Offset = "0x54C33C")]
		private float _lensDirtIntensity;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Texture2D _lensDirtTexture;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool _bloom;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private LayerMask _bloomCullingMask;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C3AC", Offset = "0x54C3AC")]
		private float _bloomLayerMaskDownsampling;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C3EC", Offset = "0x54C3EC")]
		private float _bloomIntensity;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float _bloomMaxBrightness;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C43C", Offset = "0x54C43C")]
		private float _bloomBoost0;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C47C", Offset = "0x54C47C")]
		private float _bloomBoost1;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C4BC", Offset = "0x54C4BC")]
		private float _bloomBoost2;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C4FC", Offset = "0x54C4FC")]
		private float _bloomBoost3;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C53C", Offset = "0x54C53C")]
		private float _bloomBoost4;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C57C", Offset = "0x54C57C")]
		private float _bloomBoost5;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private bool _bloomAntiflicker;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		[SerializeField]
		private bool _bloomUltra;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C5DC", Offset = "0x54C5DC")]
		private float _bloomThreshold;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		private bool _bloomCustomize;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		[SerializeField]
		private bool _bloomDebug;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C63C", Offset = "0x54C63C")]
		private float _bloomWeight0;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C67C", Offset = "0x54C67C")]
		private float _bloomWeight1;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C6BC", Offset = "0x54C6BC")]
		private float _bloomWeight2;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C6FC", Offset = "0x54C6FC")]
		private float _bloomWeight3;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C73C", Offset = "0x54C73C")]
		private float _bloomWeight4;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C77C", Offset = "0x54C77C")]
		private float _bloomWeight5;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private bool _bloomBlur;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		[SerializeField]
		private bool _bloomQuickerBlur;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C7DC", Offset = "0x54C7DC")]
		private float _bloomDepthAtten;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C81C", Offset = "0x54C81C")]
		private float _bloomLayerZBias;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		private bool _anamorphicFlares;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C86C", Offset = "0x54C86C")]
		private float _anamorphicFlaresIntensity;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private bool _anamorphicFlaresAntiflicker;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
		[SerializeField]
		private bool _anamorphicFlaresUltra;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C8CC", Offset = "0x54C8CC")]
		private float _anamorphicFlaresThreshold;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54C90C", Offset = "0x54C90C")]
		private float _anamorphicFlaresSpread;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private bool _anamorphicFlaresVertical;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		private Color _anamorphicFlaresTint;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private bool _anamorphicFlaresBlur;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
		[SerializeField]
		private bool _depthOfField;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
		[SerializeField]
		private bool _depthOfFieldTransparencySupport;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private LayerMask _depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private Transform _depthOfFieldTargetFocus;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private bool _depthOfFieldDebug;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		[SerializeField]
		private bool _depthOfFieldAutofocus;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[SerializeField]
		private Vector2 _depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[SerializeField]
		private float _depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private float _depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private LayerMask _depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private LayerMask _depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CA30", Offset = "0x54CA30")]
		private float _depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CA70", Offset = "0x54CA70")]
		private float _depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CAB0", Offset = "0x54CAB0")]
		private float _depthOfFieldExclusionBias;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CAF4", Offset = "0x54CAF4")]
		private float _depthOfFieldDistance;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CB38", Offset = "0x54CB38")]
		private float _depthOfFieldFocusSpeed;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CB7C", Offset = "0x54CB7C")]
		private int _depthOfFieldDownsampling;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CBBC", Offset = "0x54CBBC")]
		private int _depthOfFieldMaxSamples;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CBFC", Offset = "0x54CBFC")]
		private float _depthOfFieldFocalLength;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		private float _depthOfFieldAperture;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlur;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float _depthOfFieldForegroundDistance;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private bool _depthOfFieldBokeh;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CC90", Offset = "0x54CC90")]
		private float _depthOfFieldBokehThreshold;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CCD0", Offset = "0x54CCD0")]
		private float _depthOfFieldBokehIntensity;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		private float _depthOfFieldMaxBrightness;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CD20", Offset = "0x54CD20")]
		private float _depthOfFieldMaxDistance;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private FilterMode _depthOfFieldFilterMode;

		[NonSerialized]
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public OnBeforeFocusEvent OnBeforeFocus;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private bool _eyeAdaptation;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CD80", Offset = "0x54CD80")]
		private float _eyeAdaptationMinExposure;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CDC0", Offset = "0x54CDC0")]
		private float _eyeAdaptationMaxExposure;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CE04", Offset = "0x54CE04")]
		private float _eyeAdaptationSpeedToLight;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CE44", Offset = "0x54CE44")]
		private float _eyeAdaptationSpeedToDark;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[SerializeField]
		private bool _purkinje;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CE94", Offset = "0x54CE94")]
		private float _purkinjeAmount;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CED4", Offset = "0x54CED4")]
		private float _purkinjeLuminanceThreshold;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private BEAUTIFY_TMO _tonemap;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		private bool _sunFlares;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private Transform _sun;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private LayerMask _sunFlaresLayerMask;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CF54", Offset = "0x54CF54")]
		private float _sunFlaresIntensity;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CF94", Offset = "0x54CF94")]
		private float _sunFlaresSolarWindSpeed;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		private Color _sunFlaresTint;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54CFE4", Offset = "0x54CFE4")]
		private int _sunFlaresDownsampling;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D024", Offset = "0x54D024")]
		private float _sunFlaresSunIntensity;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D064", Offset = "0x54D064")]
		private float _sunFlaresSunDiskSize;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D0A4", Offset = "0x54D0A4")]
		private float _sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D0E4", Offset = "0x54D0E4")]
		private float _sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D124", Offset = "0x54D124")]
		private float _sunFlaresCoronaRays1Length;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D168", Offset = "0x54D168")]
		private int _sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D1A8", Offset = "0x54D1A8")]
		private float _sunFlaresCoronaRays1Spread;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D1EC", Offset = "0x54D1EC")]
		private float _sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D230", Offset = "0x54D230")]
		private float _sunFlaresCoronaRays2Length;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D274", Offset = "0x54D274")]
		private int _sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D2B4", Offset = "0x54D2B4")]
		private float _sunFlaresCoronaRays2Spread;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D2F8", Offset = "0x54D2F8")]
		private float _sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D33C", Offset = "0x54D33C")]
		private float _sunFlaresGhosts1Size;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D37C", Offset = "0x54D37C")]
		private float _sunFlaresGhosts1Offset;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D3BC", Offset = "0x54D3BC")]
		private float _sunFlaresGhosts1Brightness;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D3FC", Offset = "0x54D3FC")]
		private float _sunFlaresGhosts2Size;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D43C", Offset = "0x54D43C")]
		private float _sunFlaresGhosts2Offset;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D47C", Offset = "0x54D47C")]
		private float _sunFlaresGhosts2Brightness;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D4BC", Offset = "0x54D4BC")]
		private float _sunFlaresGhosts3Size;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D4FC", Offset = "0x54D4FC")]
		private float _sunFlaresGhosts3Brightness;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D53C", Offset = "0x54D53C")]
		private float _sunFlaresGhosts3Offset;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D57C", Offset = "0x54D57C")]
		private float _sunFlaresGhosts4Size;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D5BC", Offset = "0x54D5BC")]
		private float _sunFlaresGhosts4Offset;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D5FC", Offset = "0x54D5FC")]
		private float _sunFlaresGhosts4Brightness;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D63C", Offset = "0x54D63C")]
		private float _sunFlaresHaloOffset;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D67C", Offset = "0x54D67C")]
		private float _sunFlaresHaloAmplitude;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D6C0", Offset = "0x54D6C0")]
		private float _sunFlaresHaloIntensity;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[SerializeField]
		private bool _sunFlaresRotationDeadZone;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D5")]
		[SerializeField]
		private bool _blur;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D720", Offset = "0x54D720")]
		private float _blurIntensity;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D760", Offset = "0x54D760")]
		private int _pixelateAmount;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		private bool _pixelateDownscale;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D7B4", Offset = "0x54D7B4")]
		private float _antialiasStrength;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D7F4", Offset = "0x54D7F4")]
		private float _antialiasDepthThreshold;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		public bool isDirty;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Beautify _beautify;

		[Token(Token = "0x40014CE")]
		public const string SKW_BLOOM = "BEAUTIFY_BLOOM";

		[Token(Token = "0x40014CF")]
		public const string SKW_LUT = "BEAUTIFY_LUT";

		[Token(Token = "0x40014D0")]
		public const string SKW_NIGHT_VISION = "BEAUTIFY_NIGHT_VISION";

		[Token(Token = "0x40014D1")]
		public const string SKW_THERMAL_VISION = "BEAUTIFY_THERMAL_VISION";

		[Token(Token = "0x40014D2")]
		public const string SKW_OUTLINE = "BEAUTIFY_OUTLINE";

		[Token(Token = "0x40014D3")]
		public const string SKW_FRAME = "BEAUTIFY_FRAME";

		[Token(Token = "0x40014D4")]
		public const string SKW_FRAME_MASK = "BEAUTIFY_FRAME_MASK";

		[Token(Token = "0x40014D5")]
		public const string SKW_DALTONIZE = "BEAUTIFY_DALTONIZE";

		[Token(Token = "0x40014D6")]
		public const string SKW_DIRT = "BEAUTIFY_DIRT";

		[Token(Token = "0x40014D7")]
		public const string SKW_VIGNETTING = "BEAUTIFY_VIGNETTING";

		[Token(Token = "0x40014D8")]
		public const string SKW_VIGNETTING_MASK = "BEAUTIFY_VIGNETTING_MASK";

		[Token(Token = "0x40014D9")]
		public const string SKW_DEPTH_OF_FIELD = "BEAUTIFY_DEPTH_OF_FIELD";

		[Token(Token = "0x40014DA")]
		public const string SKW_DEPTH_OF_FIELD_TRANSPARENT = "BEAUTIFY_DEPTH_OF_FIELD_TRANSPARENT";

		[Token(Token = "0x40014DB")]
		public const string SKW_EYE_ADAPTATION = "BEAUTIFY_EYE_ADAPTATION";

		[Token(Token = "0x40014DC")]
		public const string SKW_TONEMAP_ACES = "BEAUTIFY_TONEMAP_ACES";

		[Token(Token = "0x40014DD")]
		public const string SKW_PURKINJE = "BEAUTIFY_PURKINJE";

		[Token(Token = "0x40014DE")]
		public const string SKW_BLOOM_USE_DEPTH = "BEAUTIFY_BLOOM_USE_DEPTH";

		[Token(Token = "0x40014DF")]
		public const string SKW_BLOOM_USE_LAYER = "BEAUTIFY_BLOOM_USE_LAYER";

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Material bMatDesktop;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Material bMatMobile;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material bMatBasic;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[SerializeField]
		private Material bMat;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Camera currentCamera;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Vector3 camPrevForward;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private Vector3 camPrevPos;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private float currSens;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		private int renderPass;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture[] rt;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTexture[] rtAF;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private RenderTexture[] rtEA;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTexture rtEAacum;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private RenderTexture rtEAHist;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private float dofPrevDistance;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private float dofLastAutofocusDistance;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private Vector4 dofLastBokehData;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private Camera sceneCamera;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private Camera depthCam;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private GameObject depthCamObj;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private List<string> shaderKeywords;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private Shader depthShader;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private Shader dofExclusionShader;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x40014F9")]
		private const string BEAUTIFY_BUILD_HINT = "BeautifyBuildHint71RC1";

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		private float sunFlareCurrentIntensity;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private Vector4 sunLastScrPos;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private float sunLastRot;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private Texture2D flareNoise;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private RenderTexture dofDepthTexture;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private RenderTexture dofExclusionTexture;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private RenderTexture bloomSourceTexture;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private RenderTexture bloomSourceDepthTexture;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private RenderTexture pixelateTexture;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private RenderTextureDescriptor rtDescBase;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
		private float sunFlareTime;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private int dofCurrentLayerMaskValue;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
		private int bloomCurrentLayerMaskValue;

		[Token(Token = "0x17000120")]
		public BEAUTIFY_PRESET preset
		{
			[Token(Token = "0x60021CD")]
			[Address(RVA = "0xA38D00", Offset = "0xA38D00", VA = "0xA38D00")]
			get
			{
				return default(BEAUTIFY_PRESET);
			}
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0xA38D08", Offset = "0xA38D08", VA = "0xA38D08")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public BEAUTIFY_QUALITY quality
		{
			[Token(Token = "0x60021CF")]
			[Address(RVA = "0xA38D98", Offset = "0xA38D98", VA = "0xA38D98")]
			get
			{
				return default(BEAUTIFY_QUALITY);
			}
			[Token(Token = "0x60021D0")]
			[Address(RVA = "0xA38DA0", Offset = "0xA38DA0", VA = "0xA38DA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public BeautifyProfile profile
		{
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0xA38E5C", Offset = "0xA38E5C", VA = "0xA38E5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021D2")]
			[Address(RVA = "0xA38E64", Offset = "0xA38E64", VA = "0xA38E64")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public bool compareMode
		{
			[Token(Token = "0x60021D3")]
			[Address(RVA = "0xA3A464", Offset = "0xA3A464", VA = "0xA3A464")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0xA3A46C", Offset = "0xA3A46C", VA = "0xA3A46C")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public float compareLineAngle
		{
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0xA3A4C8", Offset = "0xA3A4C8", VA = "0xA3A4C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0xA3A4D0", Offset = "0xA3A4D0", VA = "0xA3A4D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public float compareLineWidth
		{
			[Token(Token = "0x60021D7")]
			[Address(RVA = "0xA3A520", Offset = "0xA3A520", VA = "0xA3A520")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0xA3A528", Offset = "0xA3A528", VA = "0xA3A528")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public float dither
		{
			[Token(Token = "0x60021D9")]
			[Address(RVA = "0xA3A578", Offset = "0xA3A578", VA = "0xA3A578")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021DA")]
			[Address(RVA = "0xA3A580", Offset = "0xA3A580", VA = "0xA3A580")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public float ditherDepth
		{
			[Token(Token = "0x60021DB")]
			[Address(RVA = "0xA3A5D8", Offset = "0xA3A5D8", VA = "0xA3A5D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021DC")]
			[Address(RVA = "0xA3A5E0", Offset = "0xA3A5E0", VA = "0xA3A5E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public float sharpenMinDepth
		{
			[Token(Token = "0x60021DD")]
			[Address(RVA = "0xA3A638", Offset = "0xA3A638", VA = "0xA3A638")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0xA3A640", Offset = "0xA3A640", VA = "0xA3A640")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public float sharpenMaxDepth
		{
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0xA3A690", Offset = "0xA3A690", VA = "0xA3A690")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021E0")]
			[Address(RVA = "0xA3A698", Offset = "0xA3A698", VA = "0xA3A698")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public float sharpenMinMaxDepthFallOff
		{
			[Token(Token = "0x60021E1")]
			[Address(RVA = "0xA3A6E8", Offset = "0xA3A6E8", VA = "0xA3A6E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021E2")]
			[Address(RVA = "0xA3A6F0", Offset = "0xA3A6F0", VA = "0xA3A6F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public float sharpen
		{
			[Token(Token = "0x60021E3")]
			[Address(RVA = "0xA3A740", Offset = "0xA3A740", VA = "0xA3A740")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0xA3A748", Offset = "0xA3A748", VA = "0xA3A748")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public float sharpenDepthThreshold
		{
			[Token(Token = "0x60021E5")]
			[Address(RVA = "0xA3A7A0", Offset = "0xA3A7A0", VA = "0xA3A7A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0xA3A7A8", Offset = "0xA3A7A8", VA = "0xA3A7A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public Color tintColor
		{
			[Token(Token = "0x60021E7")]
			[Address(RVA = "0xA3A800", Offset = "0xA3A800", VA = "0xA3A800")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0xA3A80C", Offset = "0xA3A80C", VA = "0xA3A80C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public float sharpenRelaxation
		{
			[Token(Token = "0x60021E9")]
			[Address(RVA = "0xA3A8A4", Offset = "0xA3A8A4", VA = "0xA3A8A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0xA3A8AC", Offset = "0xA3A8AC", VA = "0xA3A8AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public float sharpenClamp
		{
			[Token(Token = "0x60021EB")]
			[Address(RVA = "0xA3A904", Offset = "0xA3A904", VA = "0xA3A904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021EC")]
			[Address(RVA = "0xA3A90C", Offset = "0xA3A90C", VA = "0xA3A90C")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public float sharpenMotionSensibility
		{
			[Token(Token = "0x60021ED")]
			[Address(RVA = "0xA3A964", Offset = "0xA3A964", VA = "0xA3A964")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0xA3A96C", Offset = "0xA3A96C", VA = "0xA3A96C")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public float saturate
		{
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0xA3A9BC", Offset = "0xA3A9BC", VA = "0xA3A9BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0xA3A9C4", Offset = "0xA3A9C4", VA = "0xA3A9C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public float contrast
		{
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0xA3AA1C", Offset = "0xA3AA1C", VA = "0xA3AA1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0xA3AA24", Offset = "0xA3AA24", VA = "0xA3AA24")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public float brightness
		{
			[Token(Token = "0x60021F3")]
			[Address(RVA = "0xA3AA7C", Offset = "0xA3AA7C", VA = "0xA3AA7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0xA3AA84", Offset = "0xA3AA84", VA = "0xA3AA84")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public float daltonize
		{
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0xA3AADC", Offset = "0xA3AADC", VA = "0xA3AADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021F6")]
			[Address(RVA = "0xA3AAE4", Offset = "0xA3AAE4", VA = "0xA3AAE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public bool vignetting
		{
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0xA3AB3C", Offset = "0xA3AB3C", VA = "0xA3AB3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0xA3AB44", Offset = "0xA3AB44", VA = "0xA3AB44")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public Color vignettingColor
		{
			[Token(Token = "0x60021F9")]
			[Address(RVA = "0xA3ABA0", Offset = "0xA3ABA0", VA = "0xA3ABA0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0xA3ABAC", Offset = "0xA3ABAC", VA = "0xA3ABAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public float vignettingFade
		{
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0xA3AC44", Offset = "0xA3AC44", VA = "0xA3AC44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0xA3AC4C", Offset = "0xA3AC4C", VA = "0xA3AC4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public bool vignettingCircularShape
		{
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0xA3AC9C", Offset = "0xA3AC9C", VA = "0xA3AC9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0xA3ACA4", Offset = "0xA3ACA4", VA = "0xA3ACA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float vignettingAspectRatio
		{
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0xA3AD00", Offset = "0xA3AD00", VA = "0xA3AD00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002200")]
			[Address(RVA = "0xA3AD08", Offset = "0xA3AD08", VA = "0xA3AD08")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float vignettingBlink
		{
			[Token(Token = "0x6002201")]
			[Address(RVA = "0xA3AD58", Offset = "0xA3AD58", VA = "0xA3AD58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002202")]
			[Address(RVA = "0xA3AD60", Offset = "0xA3AD60", VA = "0xA3AD60")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public Texture2D vignettingMask
		{
			[Token(Token = "0x6002203")]
			[Address(RVA = "0xA3ADB0", Offset = "0xA3ADB0", VA = "0xA3ADB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002204")]
			[Address(RVA = "0xA3ADB8", Offset = "0xA3ADB8", VA = "0xA3ADB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public bool frame
		{
			[Token(Token = "0x6002205")]
			[Address(RVA = "0xA3AE68", Offset = "0xA3AE68", VA = "0xA3AE68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002206")]
			[Address(RVA = "0xA3AE70", Offset = "0xA3AE70", VA = "0xA3AE70")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public Color frameColor
		{
			[Token(Token = "0x6002207")]
			[Address(RVA = "0xA3AECC", Offset = "0xA3AECC", VA = "0xA3AECC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002208")]
			[Address(RVA = "0xA3AED8", Offset = "0xA3AED8", VA = "0xA3AED8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public Texture2D frameMask
		{
			[Token(Token = "0x6002209")]
			[Address(RVA = "0xA3AF70", Offset = "0xA3AF70", VA = "0xA3AF70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600220A")]
			[Address(RVA = "0xA3AF78", Offset = "0xA3AF78", VA = "0xA3AF78")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public bool lut
		{
			[Token(Token = "0x600220B")]
			[Address(RVA = "0xA3B028", Offset = "0xA3B028", VA = "0xA3B028")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600220C")]
			[Address(RVA = "0xA3B030", Offset = "0xA3B030", VA = "0xA3B030")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public float lutIntensity
		{
			[Token(Token = "0x600220D")]
			[Address(RVA = "0xA3B098", Offset = "0xA3B098", VA = "0xA3B098")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600220E")]
			[Address(RVA = "0xA3B0A0", Offset = "0xA3B0A0", VA = "0xA3B0A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public Texture2D lutTexture
		{
			[Token(Token = "0x600220F")]
			[Address(RVA = "0xA3B0F0", Offset = "0xA3B0F0", VA = "0xA3B0F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002210")]
			[Address(RVA = "0xA3B0F8", Offset = "0xA3B0F8", VA = "0xA3B0F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public bool nightVision
		{
			[Token(Token = "0x6002211")]
			[Address(RVA = "0xA3B1A8", Offset = "0xA3B1A8", VA = "0xA3B1A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002212")]
			[Address(RVA = "0xA3B1B0", Offset = "0xA3B1B0", VA = "0xA3B1B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public Color nightVisionColor
		{
			[Token(Token = "0x6002213")]
			[Address(RVA = "0xA3B270", Offset = "0xA3B270", VA = "0xA3B270")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002214")]
			[Address(RVA = "0xA3B27C", Offset = "0xA3B27C", VA = "0xA3B27C")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public bool outline
		{
			[Token(Token = "0x6002215")]
			[Address(RVA = "0xA3B314", Offset = "0xA3B314", VA = "0xA3B314")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002216")]
			[Address(RVA = "0xA3B31C", Offset = "0xA3B31C", VA = "0xA3B31C")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public Color outlineColor
		{
			[Token(Token = "0x6002217")]
			[Address(RVA = "0xA3B378", Offset = "0xA3B378", VA = "0xA3B378")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002218")]
			[Address(RVA = "0xA3B384", Offset = "0xA3B384", VA = "0xA3B384")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public bool thermalVision
		{
			[Token(Token = "0x6002219")]
			[Address(RVA = "0xA3B41C", Offset = "0xA3B41C", VA = "0xA3B41C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600221A")]
			[Address(RVA = "0xA3B424", Offset = "0xA3B424", VA = "0xA3B424")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public bool lensDirt
		{
			[Token(Token = "0x600221B")]
			[Address(RVA = "0xA3B4E8", Offset = "0xA3B4E8", VA = "0xA3B4E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600221C")]
			[Address(RVA = "0xA3B4F0", Offset = "0xA3B4F0", VA = "0xA3B4F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float lensDirtThreshold
		{
			[Token(Token = "0x600221D")]
			[Address(RVA = "0xA3B54C", Offset = "0xA3B54C", VA = "0xA3B54C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600221E")]
			[Address(RVA = "0xA3B554", Offset = "0xA3B554", VA = "0xA3B554")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public float lensDirtIntensity
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xA3B5A4", Offset = "0xA3B5A4", VA = "0xA3B5A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002220")]
			[Address(RVA = "0xA3B5AC", Offset = "0xA3B5AC", VA = "0xA3B5AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public Texture2D lensDirtTexture
		{
			[Token(Token = "0x6002221")]
			[Address(RVA = "0xA3B5FC", Offset = "0xA3B5FC", VA = "0xA3B5FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002222")]
			[Address(RVA = "0xA3B604", Offset = "0xA3B604", VA = "0xA3B604")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool bloom
		{
			[Token(Token = "0x6002223")]
			[Address(RVA = "0xA3B6B4", Offset = "0xA3B6B4", VA = "0xA3B6B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002224")]
			[Address(RVA = "0xA3B6BC", Offset = "0xA3B6BC", VA = "0xA3B6BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public LayerMask bloomCullingMask
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0xA3B718", Offset = "0xA3B718", VA = "0xA3B718")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6002226")]
			[Address(RVA = "0xA3B720", Offset = "0xA3B720", VA = "0xA3B720")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public float bloomLayerMaskDownsampling
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0xA3B798", Offset = "0xA3B798", VA = "0xA3B798")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002228")]
			[Address(RVA = "0xA3B7A0", Offset = "0xA3B7A0", VA = "0xA3B7A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public float bloomIntensity
		{
			[Token(Token = "0x6002229")]
			[Address(RVA = "0xA3B854", Offset = "0xA3B854", VA = "0xA3B854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600222A")]
			[Address(RVA = "0xA3B85C", Offset = "0xA3B85C", VA = "0xA3B85C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public float bloomMaxBrightness
		{
			[Token(Token = "0x600222B")]
			[Address(RVA = "0xA3B904", Offset = "0xA3B904", VA = "0xA3B904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600222C")]
			[Address(RVA = "0xA3B90C", Offset = "0xA3B90C", VA = "0xA3B90C")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public float bloomBoost0
		{
			[Token(Token = "0x600222D")]
			[Address(RVA = "0xA3B9B4", Offset = "0xA3B9B4", VA = "0xA3B9B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600222E")]
			[Address(RVA = "0xA3B9BC", Offset = "0xA3B9BC", VA = "0xA3B9BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public float bloomBoost1
		{
			[Token(Token = "0x600222F")]
			[Address(RVA = "0xA3BA0C", Offset = "0xA3BA0C", VA = "0xA3BA0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002230")]
			[Address(RVA = "0xA3BA14", Offset = "0xA3BA14", VA = "0xA3BA14")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public float bloomBoost2
		{
			[Token(Token = "0x6002231")]
			[Address(RVA = "0xA3BA64", Offset = "0xA3BA64", VA = "0xA3BA64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002232")]
			[Address(RVA = "0xA3BA6C", Offset = "0xA3BA6C", VA = "0xA3BA6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public float bloomBoost3
		{
			[Token(Token = "0x6002233")]
			[Address(RVA = "0xA3BABC", Offset = "0xA3BABC", VA = "0xA3BABC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002234")]
			[Address(RVA = "0xA3BAC4", Offset = "0xA3BAC4", VA = "0xA3BAC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public float bloomBoost4
		{
			[Token(Token = "0x6002235")]
			[Address(RVA = "0xA3BB14", Offset = "0xA3BB14", VA = "0xA3BB14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002236")]
			[Address(RVA = "0xA3BB1C", Offset = "0xA3BB1C", VA = "0xA3BB1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public float bloomBoost5
		{
			[Token(Token = "0x6002237")]
			[Address(RVA = "0xA3BB6C", Offset = "0xA3BB6C", VA = "0xA3BB6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002238")]
			[Address(RVA = "0xA3BB74", Offset = "0xA3BB74", VA = "0xA3BB74")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public bool bloomAntiflicker
		{
			[Token(Token = "0x6002239")]
			[Address(RVA = "0xA3BBC4", Offset = "0xA3BBC4", VA = "0xA3BBC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600223A")]
			[Address(RVA = "0xA3BBCC", Offset = "0xA3BBCC", VA = "0xA3BBCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public bool bloomUltra
		{
			[Token(Token = "0x600223B")]
			[Address(RVA = "0xA3BC28", Offset = "0xA3BC28", VA = "0xA3BC28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600223C")]
			[Address(RVA = "0xA3BC30", Offset = "0xA3BC30", VA = "0xA3BC30")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public float bloomThreshold
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0xA3BC8C", Offset = "0xA3BC8C", VA = "0xA3BC8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600223E")]
			[Address(RVA = "0xA3BC94", Offset = "0xA3BC94", VA = "0xA3BC94")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public bool bloomCustomize
		{
			[Token(Token = "0x600223F")]
			[Address(RVA = "0xA3BCE4", Offset = "0xA3BCE4", VA = "0xA3BCE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002240")]
			[Address(RVA = "0xA3BCEC", Offset = "0xA3BCEC", VA = "0xA3BCEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public bool bloomDebug
		{
			[Token(Token = "0x6002241")]
			[Address(RVA = "0xA3BD48", Offset = "0xA3BD48", VA = "0xA3BD48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002242")]
			[Address(RVA = "0xA3BD50", Offset = "0xA3BD50", VA = "0xA3BD50")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public float bloomWeight0
		{
			[Token(Token = "0x6002243")]
			[Address(RVA = "0xA3BDAC", Offset = "0xA3BDAC", VA = "0xA3BDAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002244")]
			[Address(RVA = "0xA3BDB4", Offset = "0xA3BDB4", VA = "0xA3BDB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public float bloomWeight1
		{
			[Token(Token = "0x6002245")]
			[Address(RVA = "0xA3BE04", Offset = "0xA3BE04", VA = "0xA3BE04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002246")]
			[Address(RVA = "0xA3BE0C", Offset = "0xA3BE0C", VA = "0xA3BE0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public float bloomWeight2
		{
			[Token(Token = "0x6002247")]
			[Address(RVA = "0xA3BE5C", Offset = "0xA3BE5C", VA = "0xA3BE5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002248")]
			[Address(RVA = "0xA3BE64", Offset = "0xA3BE64", VA = "0xA3BE64")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public float bloomWeight3
		{
			[Token(Token = "0x6002249")]
			[Address(RVA = "0xA3BEB4", Offset = "0xA3BEB4", VA = "0xA3BEB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600224A")]
			[Address(RVA = "0xA3BEBC", Offset = "0xA3BEBC", VA = "0xA3BEBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public float bloomWeight4
		{
			[Token(Token = "0x600224B")]
			[Address(RVA = "0xA3BF0C", Offset = "0xA3BF0C", VA = "0xA3BF0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600224C")]
			[Address(RVA = "0xA3BF14", Offset = "0xA3BF14", VA = "0xA3BF14")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public float bloomWeight5
		{
			[Token(Token = "0x600224D")]
			[Address(RVA = "0xA3BF64", Offset = "0xA3BF64", VA = "0xA3BF64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600224E")]
			[Address(RVA = "0xA3BF6C", Offset = "0xA3BF6C", VA = "0xA3BF6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public bool bloomBlur
		{
			[Token(Token = "0x600224F")]
			[Address(RVA = "0xA3BFBC", Offset = "0xA3BFBC", VA = "0xA3BFBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002250")]
			[Address(RVA = "0xA3BFC4", Offset = "0xA3BFC4", VA = "0xA3BFC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public bool bloomQuickerBlur
		{
			[Token(Token = "0x6002251")]
			[Address(RVA = "0xA3C020", Offset = "0xA3C020", VA = "0xA3C020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002252")]
			[Address(RVA = "0xA3C028", Offset = "0xA3C028", VA = "0xA3C028")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public float bloomDepthAtten
		{
			[Token(Token = "0x6002253")]
			[Address(RVA = "0xA3C084", Offset = "0xA3C084", VA = "0xA3C084")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002254")]
			[Address(RVA = "0xA3C08C", Offset = "0xA3C08C", VA = "0xA3C08C")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public float bloomLayerZBias
		{
			[Token(Token = "0x6002255")]
			[Address(RVA = "0xA3C0DC", Offset = "0xA3C0DC", VA = "0xA3C0DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002256")]
			[Address(RVA = "0xA3C0E4", Offset = "0xA3C0E4", VA = "0xA3C0E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public bool anamorphicFlares
		{
			[Token(Token = "0x6002257")]
			[Address(RVA = "0xA3C19C", Offset = "0xA3C19C", VA = "0xA3C19C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002258")]
			[Address(RVA = "0xA3C1A4", Offset = "0xA3C1A4", VA = "0xA3C1A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public float anamorphicFlaresIntensity
		{
			[Token(Token = "0x6002259")]
			[Address(RVA = "0xA3C200", Offset = "0xA3C200", VA = "0xA3C200")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600225A")]
			[Address(RVA = "0xA3C208", Offset = "0xA3C208", VA = "0xA3C208")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public bool anamorphicFlaresAntiflicker
		{
			[Token(Token = "0x600225B")]
			[Address(RVA = "0xA3C2B0", Offset = "0xA3C2B0", VA = "0xA3C2B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600225C")]
			[Address(RVA = "0xA3C2B8", Offset = "0xA3C2B8", VA = "0xA3C2B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public bool anamorphicFlaresUltra
		{
			[Token(Token = "0x600225D")]
			[Address(RVA = "0xA3C314", Offset = "0xA3C314", VA = "0xA3C314")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600225E")]
			[Address(RVA = "0xA3C31C", Offset = "0xA3C31C", VA = "0xA3C31C")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public float anamorphicFlaresThreshold
		{
			[Token(Token = "0x600225F")]
			[Address(RVA = "0xA3C378", Offset = "0xA3C378", VA = "0xA3C378")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002260")]
			[Address(RVA = "0xA3C380", Offset = "0xA3C380", VA = "0xA3C380")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public float anamorphicFlaresSpread
		{
			[Token(Token = "0x6002261")]
			[Address(RVA = "0xA3C3D0", Offset = "0xA3C3D0", VA = "0xA3C3D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002262")]
			[Address(RVA = "0xA3C3D8", Offset = "0xA3C3D8", VA = "0xA3C3D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public bool anamorphicFlaresVertical
		{
			[Token(Token = "0x6002263")]
			[Address(RVA = "0xA3C428", Offset = "0xA3C428", VA = "0xA3C428")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002264")]
			[Address(RVA = "0xA3C430", Offset = "0xA3C430", VA = "0xA3C430")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public Color anamorphicFlaresTint
		{
			[Token(Token = "0x6002265")]
			[Address(RVA = "0xA3C48C", Offset = "0xA3C48C", VA = "0xA3C48C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002266")]
			[Address(RVA = "0xA3C4A0", Offset = "0xA3C4A0", VA = "0xA3C4A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public bool anamorphicFlaresBlur
		{
			[Token(Token = "0x6002267")]
			[Address(RVA = "0xA3C548", Offset = "0xA3C548", VA = "0xA3C548")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002268")]
			[Address(RVA = "0xA3C550", Offset = "0xA3C550", VA = "0xA3C550")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public bool depthOfField
		{
			[Token(Token = "0x6002269")]
			[Address(RVA = "0xA3C5AC", Offset = "0xA3C5AC", VA = "0xA3C5AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600226A")]
			[Address(RVA = "0xA3C5B4", Offset = "0xA3C5B4", VA = "0xA3C5B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public bool depthOfFieldTransparencySupport
		{
			[Token(Token = "0x600226B")]
			[Address(RVA = "0xA3C610", Offset = "0xA3C610", VA = "0xA3C610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600226C")]
			[Address(RVA = "0xA3C618", Offset = "0xA3C618", VA = "0xA3C618")]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public LayerMask depthOfFieldTransparencyLayerMask
		{
			[Token(Token = "0x600226D")]
			[Address(RVA = "0xA3C674", Offset = "0xA3C674", VA = "0xA3C674")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600226E")]
			[Address(RVA = "0xA3C67C", Offset = "0xA3C67C", VA = "0xA3C67C")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public Transform depthOfFieldTargetFocus
		{
			[Token(Token = "0x600226F")]
			[Address(RVA = "0xA3C6F4", Offset = "0xA3C6F4", VA = "0xA3C6F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002270")]
			[Address(RVA = "0xA3C6FC", Offset = "0xA3C6FC", VA = "0xA3C6FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public bool depthOfFieldDebug
		{
			[Token(Token = "0x6002271")]
			[Address(RVA = "0xA3C7AC", Offset = "0xA3C7AC", VA = "0xA3C7AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002272")]
			[Address(RVA = "0xA3C7B4", Offset = "0xA3C7B4", VA = "0xA3C7B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public bool depthOfFieldAutofocus
		{
			[Token(Token = "0x6002273")]
			[Address(RVA = "0xA3C810", Offset = "0xA3C810", VA = "0xA3C810")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002274")]
			[Address(RVA = "0xA3C818", Offset = "0xA3C818", VA = "0xA3C818")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public Vector2 depthofFieldAutofocusViewportPoint
		{
			[Token(Token = "0x6002275")]
			[Address(RVA = "0xA3C874", Offset = "0xA3C874", VA = "0xA3C874")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002276")]
			[Address(RVA = "0xA3C880", Offset = "0xA3C880", VA = "0xA3C880")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public float depthOfFieldAutofocusMinDistance
		{
			[Token(Token = "0x6002277")]
			[Address(RVA = "0xA3C950", Offset = "0xA3C950", VA = "0xA3C950")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002278")]
			[Address(RVA = "0xA3C958", Offset = "0xA3C958", VA = "0xA3C958")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public float depthOfFieldAutofocusMaxDistance
		{
			[Token(Token = "0x6002279")]
			[Address(RVA = "0xA3C9A8", Offset = "0xA3C9A8", VA = "0xA3C9A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600227A")]
			[Address(RVA = "0xA3C9B0", Offset = "0xA3C9B0", VA = "0xA3C9B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public LayerMask depthOfFieldAutofocusLayerMask
		{
			[Token(Token = "0x600227B")]
			[Address(RVA = "0xA3CA00", Offset = "0xA3CA00", VA = "0xA3CA00")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600227C")]
			[Address(RVA = "0xA3CA08", Offset = "0xA3CA08", VA = "0xA3CA08")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public LayerMask depthOfFieldExclusionLayerMask
		{
			[Token(Token = "0x600227D")]
			[Address(RVA = "0xA3CA80", Offset = "0xA3CA80", VA = "0xA3CA80")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600227E")]
			[Address(RVA = "0xA3CA88", Offset = "0xA3CA88", VA = "0xA3CA88")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public float depthOfFieldExclusionLayerMaskDownsampling
		{
			[Token(Token = "0x600227F")]
			[Address(RVA = "0xA3CB00", Offset = "0xA3CB00", VA = "0xA3CB00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002280")]
			[Address(RVA = "0xA3CB08", Offset = "0xA3CB08", VA = "0xA3CB08")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public float depthOfFieldTransparencySupportDownsampling
		{
			[Token(Token = "0x6002281")]
			[Address(RVA = "0xA3CBBC", Offset = "0xA3CBBC", VA = "0xA3CBBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002282")]
			[Address(RVA = "0xA3CBC4", Offset = "0xA3CBC4", VA = "0xA3CBC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public float depthOfFieldExclusionBias
		{
			[Token(Token = "0x6002283")]
			[Address(RVA = "0xA3CC78", Offset = "0xA3CC78", VA = "0xA3CC78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002284")]
			[Address(RVA = "0xA3CC80", Offset = "0xA3CC80", VA = "0xA3CC80")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public float depthOfFieldDistance
		{
			[Token(Token = "0x6002285")]
			[Address(RVA = "0xA3CD30", Offset = "0xA3CD30", VA = "0xA3CD30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002286")]
			[Address(RVA = "0xA3CD38", Offset = "0xA3CD38", VA = "0xA3CD38")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public float depthOfFieldFocusSpeed
		{
			[Token(Token = "0x6002287")]
			[Address(RVA = "0xA3CDEC", Offset = "0xA3CDEC", VA = "0xA3CDEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002288")]
			[Address(RVA = "0xA3CDF4", Offset = "0xA3CDF4", VA = "0xA3CDF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public int depthOfFieldDownsampling
		{
			[Token(Token = "0x6002289")]
			[Address(RVA = "0xA3CEB0", Offset = "0xA3CEB0", VA = "0xA3CEB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600228A")]
			[Address(RVA = "0xA3CEB8", Offset = "0xA3CEB8", VA = "0xA3CEB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public int depthOfFieldMaxSamples
		{
			[Token(Token = "0x600228B")]
			[Address(RVA = "0xA3CF6C", Offset = "0xA3CF6C", VA = "0xA3CF6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600228C")]
			[Address(RVA = "0xA3CF74", Offset = "0xA3CF74", VA = "0xA3CF74")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public float depthOfFieldFocalLength
		{
			[Token(Token = "0x600228D")]
			[Address(RVA = "0xA3D028", Offset = "0xA3D028", VA = "0xA3D028")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600228E")]
			[Address(RVA = "0xA3D030", Offset = "0xA3D030", VA = "0xA3D030")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public float depthOfFieldAperture
		{
			[Token(Token = "0x600228F")]
			[Address(RVA = "0xA3D0D8", Offset = "0xA3D0D8", VA = "0xA3D0D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002290")]
			[Address(RVA = "0xA3D0E0", Offset = "0xA3D0E0", VA = "0xA3D0E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool depthOfFieldForegroundBlur
		{
			[Token(Token = "0x6002291")]
			[Address(RVA = "0xA3D188", Offset = "0xA3D188", VA = "0xA3D188")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002292")]
			[Address(RVA = "0xA3D190", Offset = "0xA3D190", VA = "0xA3D190")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public bool depthOfFieldForegroundBlurHQ
		{
			[Token(Token = "0x6002293")]
			[Address(RVA = "0xA3D1EC", Offset = "0xA3D1EC", VA = "0xA3D1EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002294")]
			[Address(RVA = "0xA3D1F4", Offset = "0xA3D1F4", VA = "0xA3D1F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public float depthOfFieldForegroundDistance
		{
			[Token(Token = "0x6002295")]
			[Address(RVA = "0xA3D250", Offset = "0xA3D250", VA = "0xA3D250")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002296")]
			[Address(RVA = "0xA3D258", Offset = "0xA3D258", VA = "0xA3D258")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public bool depthOfFieldBokeh
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0xA3D2A8", Offset = "0xA3D2A8", VA = "0xA3D2A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002298")]
			[Address(RVA = "0xA3D2B0", Offset = "0xA3D2B0", VA = "0xA3D2B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public float depthOfFieldBokehThreshold
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0xA3D30C", Offset = "0xA3D30C", VA = "0xA3D30C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600229A")]
			[Address(RVA = "0xA3D314", Offset = "0xA3D314", VA = "0xA3D314")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public float depthOfFieldBokehIntensity
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0xA3D3C8", Offset = "0xA3D3C8", VA = "0xA3D3C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600229C")]
			[Address(RVA = "0xA3D3D0", Offset = "0xA3D3D0", VA = "0xA3D3D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public float depthOfFieldMaxBrightness
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0xA3D484", Offset = "0xA3D484", VA = "0xA3D484")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600229E")]
			[Address(RVA = "0xA3D48C", Offset = "0xA3D48C", VA = "0xA3D48C")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public float depthOfFieldMaxDistance
		{
			[Token(Token = "0x600229F")]
			[Address(RVA = "0xA3D534", Offset = "0xA3D534", VA = "0xA3D534")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0xA3D53C", Offset = "0xA3D53C", VA = "0xA3D53C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public FilterMode depthOfFieldFilterMode
		{
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0xA3D5E4", Offset = "0xA3D5E4", VA = "0xA3D5E4")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xA3D5EC", Offset = "0xA3D5EC", VA = "0xA3D5EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public bool eyeAdaptation
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0xA3D63C", Offset = "0xA3D63C", VA = "0xA3D63C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0xA3D644", Offset = "0xA3D644", VA = "0xA3D644")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public float eyeAdaptationMinExposure
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xA3D6A0", Offset = "0xA3D6A0", VA = "0xA3D6A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0xA3D6A8", Offset = "0xA3D6A8", VA = "0xA3D6A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public float eyeAdaptationMaxExposure
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xA3D758", Offset = "0xA3D758", VA = "0xA3D758")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xA3D760", Offset = "0xA3D760", VA = "0xA3D760")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public float eyeAdaptationSpeedToLight
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xA3D81C", Offset = "0xA3D81C", VA = "0xA3D81C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022AA")]
			[Address(RVA = "0xA3D824", Offset = "0xA3D824", VA = "0xA3D824")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public float eyeAdaptationSpeedToDark
		{
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xA3D8D4", Offset = "0xA3D8D4", VA = "0xA3D8D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022AC")]
			[Address(RVA = "0xA3D8DC", Offset = "0xA3D8DC", VA = "0xA3D8DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public bool purkinje
		{
			[Token(Token = "0x60022AD")]
			[Address(RVA = "0xA3D98C", Offset = "0xA3D98C", VA = "0xA3D98C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022AE")]
			[Address(RVA = "0xA3D994", Offset = "0xA3D994", VA = "0xA3D994")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public float purkinjeAmount
		{
			[Token(Token = "0x60022AF")]
			[Address(RVA = "0xA3D9F0", Offset = "0xA3D9F0", VA = "0xA3D9F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022B0")]
			[Address(RVA = "0xA3D9F8", Offset = "0xA3D9F8", VA = "0xA3D9F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public float purkinjeLuminanceThreshold
		{
			[Token(Token = "0x60022B1")]
			[Address(RVA = "0xA3DAB0", Offset = "0xA3DAB0", VA = "0xA3DAB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022B2")]
			[Address(RVA = "0xA3DAB8", Offset = "0xA3DAB8", VA = "0xA3DAB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public BEAUTIFY_TMO tonemap
		{
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0xA3DB70", Offset = "0xA3DB70", VA = "0xA3DB70")]
			get
			{
				return default(BEAUTIFY_TMO);
			}
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0xA3DB78", Offset = "0xA3DB78", VA = "0xA3DB78")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public bool sunFlares
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0xA3DBD8", Offset = "0xA3DBD8", VA = "0xA3DBD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0xA3DBE0", Offset = "0xA3DBE0", VA = "0xA3DBE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public Transform sun
		{
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xA3DC3C", Offset = "0xA3DC3C", VA = "0xA3DC3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xA3DC44", Offset = "0xA3DC44", VA = "0xA3DC44")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public LayerMask sunFlaresLayerMask
		{
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xA3DCF4", Offset = "0xA3DCF4", VA = "0xA3DCF4")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xA3DCFC", Offset = "0xA3DCFC", VA = "0xA3DCFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public float sunFlaresIntensity
		{
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xA3DD74", Offset = "0xA3DD74", VA = "0xA3DD74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0xA3DD7C", Offset = "0xA3DD7C", VA = "0xA3DD7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public float sunFlaresSolarWindSpeed
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0xA3DDCC", Offset = "0xA3DDCC", VA = "0xA3DDCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0xA3DDD4", Offset = "0xA3DDD4", VA = "0xA3DDD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public Color sunFlaresTint
		{
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0xA3DE24", Offset = "0xA3DE24", VA = "0xA3DE24")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60022C0")]
			[Address(RVA = "0xA3DE38", Offset = "0xA3DE38", VA = "0xA3DE38")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public int sunFlaresDownsampling
		{
			[Token(Token = "0x60022C1")]
			[Address(RVA = "0xA3DEE0", Offset = "0xA3DEE0", VA = "0xA3DEE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022C2")]
			[Address(RVA = "0xA3DEE8", Offset = "0xA3DEE8", VA = "0xA3DEE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public float sunFlaresSunIntensity
		{
			[Token(Token = "0x60022C3")]
			[Address(RVA = "0xA3DF9C", Offset = "0xA3DF9C", VA = "0xA3DF9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022C4")]
			[Address(RVA = "0xA3DFA4", Offset = "0xA3DFA4", VA = "0xA3DFA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public float sunFlaresSunDiskSize
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0xA3DFF4", Offset = "0xA3DFF4", VA = "0xA3DFF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0xA3DFFC", Offset = "0xA3DFFC", VA = "0xA3DFFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public float sunFlaresSunRayDiffractionIntensity
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0xA3E04C", Offset = "0xA3E04C", VA = "0xA3E04C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0xA3E054", Offset = "0xA3E054", VA = "0xA3E054")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public float sunFlaresSunRayDiffractionThreshold
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0xA3E0A4", Offset = "0xA3E0A4", VA = "0xA3E0A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0xA3E0AC", Offset = "0xA3E0AC", VA = "0xA3E0AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public float sunFlaresCoronaRays1Length
		{
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0xA3E0FC", Offset = "0xA3E0FC", VA = "0xA3E0FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0xA3E104", Offset = "0xA3E104", VA = "0xA3E104")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public int sunFlaresCoronaRays1Streaks
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0xA3E154", Offset = "0xA3E154", VA = "0xA3E154")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0xA3E15C", Offset = "0xA3E15C", VA = "0xA3E15C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public float sunFlaresCoronaRays1Spread
		{
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0xA3E1AC", Offset = "0xA3E1AC", VA = "0xA3E1AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0xA3E1B4", Offset = "0xA3E1B4", VA = "0xA3E1B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public float sunFlaresCoronaRays1AngleOffset
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0xA3E204", Offset = "0xA3E204", VA = "0xA3E204")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0xA3E20C", Offset = "0xA3E20C", VA = "0xA3E20C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public float sunFlaresCoronaRays2Length
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xA3E25C", Offset = "0xA3E25C", VA = "0xA3E25C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0xA3E264", Offset = "0xA3E264", VA = "0xA3E264")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public int sunFlaresCoronaRays2Streaks
		{
			[Token(Token = "0x60022D5")]
			[Address(RVA = "0xA3E2B4", Offset = "0xA3E2B4", VA = "0xA3E2B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0xA3E2BC", Offset = "0xA3E2BC", VA = "0xA3E2BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public float sunFlaresCoronaRays2Spread
		{
			[Token(Token = "0x60022D7")]
			[Address(RVA = "0xA3E30C", Offset = "0xA3E30C", VA = "0xA3E30C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022D8")]
			[Address(RVA = "0xA3E314", Offset = "0xA3E314", VA = "0xA3E314")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public float sunFlaresCoronaRays2AngleOffset
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0xA3E364", Offset = "0xA3E364", VA = "0xA3E364")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022DA")]
			[Address(RVA = "0xA3E36C", Offset = "0xA3E36C", VA = "0xA3E36C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public float sunFlaresGhosts1Size
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0xA3E3BC", Offset = "0xA3E3BC", VA = "0xA3E3BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0xA3E3C4", Offset = "0xA3E3C4", VA = "0xA3E3C4")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public float sunFlaresGhosts1Offset
		{
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0xA3E414", Offset = "0xA3E414", VA = "0xA3E414")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0xA3E41C", Offset = "0xA3E41C", VA = "0xA3E41C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public float sunFlaresGhosts1Brightness
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0xA3E46C", Offset = "0xA3E46C", VA = "0xA3E46C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0xA3E474", Offset = "0xA3E474", VA = "0xA3E474")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public float sunFlaresGhosts2Size
		{
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0xA3E4C4", Offset = "0xA3E4C4", VA = "0xA3E4C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0xA3E4CC", Offset = "0xA3E4CC", VA = "0xA3E4CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public float sunFlaresGhosts2Offset
		{
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0xA3E51C", Offset = "0xA3E51C", VA = "0xA3E51C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022E4")]
			[Address(RVA = "0xA3E524", Offset = "0xA3E524", VA = "0xA3E524")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public float sunFlaresGhosts2Brightness
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0xA3E574", Offset = "0xA3E574", VA = "0xA3E574")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022E6")]
			[Address(RVA = "0xA3E57C", Offset = "0xA3E57C", VA = "0xA3E57C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public float sunFlaresGhosts3Size
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0xA3E5CC", Offset = "0xA3E5CC", VA = "0xA3E5CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0xA3E5D4", Offset = "0xA3E5D4", VA = "0xA3E5D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public float sunFlaresGhosts3Brightness
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0xA3E624", Offset = "0xA3E624", VA = "0xA3E624")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0xA3E62C", Offset = "0xA3E62C", VA = "0xA3E62C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public float sunFlaresGhosts3Offset
		{
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0xA3E67C", Offset = "0xA3E67C", VA = "0xA3E67C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0xA3E684", Offset = "0xA3E684", VA = "0xA3E684")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public float sunFlaresGhosts4Size
		{
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0xA3E6D4", Offset = "0xA3E6D4", VA = "0xA3E6D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022EE")]
			[Address(RVA = "0xA3E6DC", Offset = "0xA3E6DC", VA = "0xA3E6DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public float sunFlaresGhosts4Offset
		{
			[Token(Token = "0x60022EF")]
			[Address(RVA = "0xA3E72C", Offset = "0xA3E72C", VA = "0xA3E72C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0xA3E734", Offset = "0xA3E734", VA = "0xA3E734")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public float sunFlaresGhosts4Brightness
		{
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0xA3E784", Offset = "0xA3E784", VA = "0xA3E784")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0xA3E78C", Offset = "0xA3E78C", VA = "0xA3E78C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public float sunFlaresHaloOffset
		{
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0xA3E7DC", Offset = "0xA3E7DC", VA = "0xA3E7DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022F4")]
			[Address(RVA = "0xA3E7E4", Offset = "0xA3E7E4", VA = "0xA3E7E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public float sunFlaresHaloAmplitude
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xA3E834", Offset = "0xA3E834", VA = "0xA3E834")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xA3E83C", Offset = "0xA3E83C", VA = "0xA3E83C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public float sunFlaresHaloIntensity
		{
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xA3E88C", Offset = "0xA3E88C", VA = "0xA3E88C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022F8")]
			[Address(RVA = "0xA3E894", Offset = "0xA3E894", VA = "0xA3E894")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public bool sunFlaresRotationDeadZone
		{
			[Token(Token = "0x60022F9")]
			[Address(RVA = "0xA3E8E4", Offset = "0xA3E8E4", VA = "0xA3E8E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022FA")]
			[Address(RVA = "0xA3E8EC", Offset = "0xA3E8EC", VA = "0xA3E8EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public bool blur
		{
			[Token(Token = "0x60022FB")]
			[Address(RVA = "0xA3E948", Offset = "0xA3E948", VA = "0xA3E948")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022FC")]
			[Address(RVA = "0xA3E950", Offset = "0xA3E950", VA = "0xA3E950")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public float blurIntensity
		{
			[Token(Token = "0x60022FD")]
			[Address(RVA = "0xA3E9AC", Offset = "0xA3E9AC", VA = "0xA3E9AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022FE")]
			[Address(RVA = "0xA3E9B4", Offset = "0xA3E9B4", VA = "0xA3E9B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public int pixelateAmount
		{
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0xA3EA04", Offset = "0xA3EA04", VA = "0xA3EA04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002300")]
			[Address(RVA = "0xA3EA0C", Offset = "0xA3EA0C", VA = "0xA3EA0C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public bool pixelateDownscale
		{
			[Token(Token = "0x6002301")]
			[Address(RVA = "0xA3EA5C", Offset = "0xA3EA5C", VA = "0xA3EA5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002302")]
			[Address(RVA = "0xA3EA64", Offset = "0xA3EA64", VA = "0xA3EA64")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float antialiasStrength
		{
			[Token(Token = "0x6002303")]
			[Address(RVA = "0xA3EAC0", Offset = "0xA3EAC0", VA = "0xA3EAC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002304")]
			[Address(RVA = "0xA3EAC8", Offset = "0xA3EAC8", VA = "0xA3EAC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float antialiasDepthThreshold
		{
			[Token(Token = "0x6002305")]
			[Address(RVA = "0xA3EB18", Offset = "0xA3EB18", VA = "0xA3EB18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002306")]
			[Address(RVA = "0xA3EB20", Offset = "0xA3EB20", VA = "0xA3EB20")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public static Beautify instance
		{
			[Token(Token = "0x6002307")]
			[Address(RVA = "0xA3EB70", Offset = "0xA3EB70", VA = "0xA3EB70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		public Camera cameraEffect
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0xA3ECC4", Offset = "0xA3ECC4", VA = "0xA3ECC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		public float depthOfFieldCurrentFocalPointDistance
		{
			[Token(Token = "0x6002326")]
			[Address(RVA = "0xA46BD0", Offset = "0xA46BD0", VA = "0xA46BD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xA3ECCC", Offset = "0xA3ECCC", VA = "0xA3ECCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xA406C0", Offset = "0xA406C0", VA = "0xA406C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xA40AB4", Offset = "0xA40AB4", VA = "0xA40AB4")]
		private void Reset()
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xA40AB8", Offset = "0xA40AB8", VA = "0xA40AB8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xA40E88", Offset = "0xA40E88", VA = "0xA40E88")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xA41F9C", Offset = "0xA41F9C", VA = "0xA41F9C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xA40924", Offset = "0xA40924", VA = "0xA40924")]
		private void CleanUpRT()
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xA41038", Offset = "0xA41038", VA = "0xA41038")]
		private void CheckDoFTransparencySupport()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xA414C0", Offset = "0xA414C0", VA = "0xA414C0")]
		private void CheckDoFExclusionMask()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xA41940", Offset = "0xA41940", VA = "0xA41940")]
		private void CheckBloomCullingLayer()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xA42198", Offset = "0xA42198", VA = "0xA42198", Slot = "4")]
		protected virtual void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xA462BC", Offset = "0xA462BC", VA = "0xA462BC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xA45D30", Offset = "0xA45D30", VA = "0xA45D30")]
		private void BlurThis(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xA45E88", Offset = "0xA45E88", VA = "0xA45E88")]
		private void BlurThisDownscaling(RenderTexture rt, RenderTexture downscaled, float blurScale = 1f)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xA46178", Offset = "0xA46178", VA = "0xA46178")]
		private RenderTexture BlurThisOneDirection(RenderTexture rt, bool vertical, float blurScale = 1f)
		{
			return null;
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xA45A1C", Offset = "0xA45A1C", VA = "0xA45A1C")]
		private void BlurThisDoF(RenderTexture rt, int renderPass)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xA458C4", Offset = "0xA458C4", VA = "0xA458C4")]
		private void BlurThisAlpha(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xA464B8", Offset = "0xA464B8", VA = "0xA464B8")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xA38E20", Offset = "0xA38E20", VA = "0xA38E20")]
		public void UpdateQualitySettings()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xA38D58", Offset = "0xA38D58", VA = "0xA38D58")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xA3EDB0", Offset = "0xA3EDB0", VA = "0xA3EDB0")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xA45C5C", Offset = "0xA45C5C", VA = "0xA45C5C")]
		private void UpdateMaterialBloomIntensityAndThreshold()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xA460B0", Offset = "0xA460B0", VA = "0xA460B0")]
		private void UpdateMaterialAnamorphicIntensityAndThreshold()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xA40DE8", Offset = "0xA40DE8", VA = "0xA40DE8")]
		private void UpdateSharpenParams(float sharpen)
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xA45464", Offset = "0xA45464", VA = "0xA45464")]
		private void UpdateDepthOfFieldData()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xA463D0", Offset = "0xA463D0", VA = "0xA463D0")]
		private void UpdateDepthOfFieldBlurData(Vector2 blurDir)
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xA464C4", Offset = "0xA464C4", VA = "0xA464C4")]
		private void UpdateDoFAutofocusDistance()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xA46AB0", Offset = "0xA46AB0", VA = "0xA46AB0")]
		public void Blink(float duration, float maxValue = 1f)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xA46AF4", Offset = "0xA46AF4", VA = "0xA46AF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554DDC", Offset = "0x554DDC")]
		private IEnumerator DoBlink(float duration, float maxValue)
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xA46BD8", Offset = "0xA46BD8", VA = "0xA46BD8")]
		public Beautify()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x5392B8", Offset = "0x5392B8")]
	public class BeautifyProfile : ScriptableObject
	{
		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D848", Offset = "0x54D848")]
		public float dither;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D864", Offset = "0x54D864")]
		public float ditherDepth;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D87C", Offset = "0x54D87C")]
		public float sharpenMinDepth;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D894", Offset = "0x54D894")]
		public float sharpenMaxDepth;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D8B0", Offset = "0x54D8B0")]
		public float sharpen;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D8C8", Offset = "0x54D8C8")]
		public float sharpenMinMaxDepthFallOff;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D8E0", Offset = "0x54D8E0")]
		public float sharpenDepthThreshold;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color tintColor;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D8FC", Offset = "0x54D8FC")]
		public float sharpenRelaxation;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D918", Offset = "0x54D918")]
		public float sharpenClamp;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D930", Offset = "0x54D930")]
		public float sharpenMotionSensibility;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D948", Offset = "0x54D948")]
		public float antialiasStrength;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D960", Offset = "0x54D960")]
		public float antialiasDepthThreshold;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D97C", Offset = "0x54D97C")]
		public float saturate;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D994", Offset = "0x54D994")]
		public float contrast;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D9AC", Offset = "0x54D9AC")]
		public float brightness;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D9C4", Offset = "0x54D9C4")]
		public float daltonize;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool vignetting;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color vignettingColor;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float vignettingFade;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool vignettingCircularShape;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float vignettingAspectRatio;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D9DC", Offset = "0x54D9DC")]
		public float vignettingBlink;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D vignettingMask;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool frame;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color frameColor;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D frameMask;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool lut;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54D9F4", Offset = "0x54D9F4")]
		public float lutIntensity;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Texture2D lutTexture;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool nightVision;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Color nightVisionColor;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool outline;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Color outlineColor;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool thermalVision;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool lensDirt;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DA0C", Offset = "0x54DA0C")]
		public float lensDirtThreshold;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DA24", Offset = "0x54DA24")]
		public float lensDirtIntensity;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Texture2D lensDirtTexture;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool bloom;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public LayerMask bloomCullingMask;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DA3C", Offset = "0x54DA3C")]
		public float bloomLayerMaskDownsampling;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DA54", Offset = "0x54DA54")]
		public float bloomIntensity;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float bloomMaxBrightness;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DA6C", Offset = "0x54DA6C")]
		public float bloomBoost0;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DA84", Offset = "0x54DA84")]
		public float bloomBoost1;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DA9C", Offset = "0x54DA9C")]
		public float bloomBoost2;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DAB4", Offset = "0x54DAB4")]
		public float bloomBoost3;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DACC", Offset = "0x54DACC")]
		public float bloomBoost4;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DAE4", Offset = "0x54DAE4")]
		public float bloomBoost5;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool bloomAntiflicker;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public bool bloomUltra;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DAFC", Offset = "0x54DAFC")]
		public float bloomThreshold;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public bool bloomCustomize;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DB14", Offset = "0x54DB14")]
		public float bloomWeight0;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DB2C", Offset = "0x54DB2C")]
		public float bloomWeight1;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DB44", Offset = "0x54DB44")]
		public float bloomWeight2;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DB5C", Offset = "0x54DB5C")]
		public float bloomWeight3;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DB74", Offset = "0x54DB74")]
		public float bloomWeight4;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DB8C", Offset = "0x54DB8C")]
		public float bloomWeight5;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public bool bloomBlur;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DBA4", Offset = "0x54DBA4")]
		public float bloomDepthAtten;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DBBC", Offset = "0x54DBBC")]
		public float bloomLayerZBias;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public bool anamorphicFlares;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DBD4", Offset = "0x54DBD4")]
		public float anamorphicFlaresIntensity;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public bool anamorphicFlaresAntiflicker;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		public bool anamorphicFlaresUltra;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DBEC", Offset = "0x54DBEC")]
		public float anamorphicFlaresThreshold;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DC04", Offset = "0x54DC04")]
		public float anamorphicFlaresSpread;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool anamorphicFlaresVertical;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public Color anamorphicFlaresTint;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public bool anamorphicFlaresBlur;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
		public bool depthOfField;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
		public bool depthOfFieldTransparencySupport;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Transform depthOfFieldTargetFocus;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public bool depthOfFieldAutofocus;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public Vector2 depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public LayerMask depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public LayerMask depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DC20", Offset = "0x54DC20")]
		public float depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DC38", Offset = "0x54DC38")]
		public float depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DC50", Offset = "0x54DC50")]
		public float depthOfFieldExclusionBias;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DC6C", Offset = "0x54DC6C")]
		public float depthOfFieldDistance;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DC88", Offset = "0x54DC88")]
		public float depthOfFieldFocusSpeed;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DCA4", Offset = "0x54DCA4")]
		public int depthOfFieldDownsampling;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DCBC", Offset = "0x54DCBC")]
		public int depthOfFieldMaxSamples;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DCD4", Offset = "0x54DCD4")]
		public float depthOfFieldFocalLength;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public float depthOfFieldAperture;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool depthOfFieldForegroundBlur;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		public bool depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float depthOfFieldForegroundDistance;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool depthOfFieldBokeh;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DCF0", Offset = "0x54DCF0")]
		public float depthOfFieldBokehThreshold;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DD08", Offset = "0x54DD08")]
		public float depthOfFieldBokehIntensity;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public float depthOfFieldMaxBrightness;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float depthOfFieldMaxDistance;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public FilterMode depthOfFieldFilterMode;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public LayerMask depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public bool eyeAdaptation;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DD20", Offset = "0x54DD20")]
		public float eyeAdaptationMinExposure;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DD38", Offset = "0x54DD38")]
		public float eyeAdaptationMaxExposure;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DD54", Offset = "0x54DD54")]
		public float eyeAdaptationSpeedToLight;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DD6C", Offset = "0x54DD6C")]
		public float eyeAdaptationSpeedToDark;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public bool purkinje;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DD84", Offset = "0x54DD84")]
		public float purkinjeAmount;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DD9C", Offset = "0x54DD9C")]
		public float purkinjeLuminanceThreshold;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public BEAUTIFY_TMO tonemap;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public bool sunFlares;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DDB4", Offset = "0x54DDB4")]
		public float sunFlaresIntensity;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DDCC", Offset = "0x54DDCC")]
		public float sunFlaresSolarWindSpeed;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public Color sunFlaresTint;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DDE4", Offset = "0x54DDE4")]
		public int sunFlaresDownsampling;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DDFC", Offset = "0x54DDFC")]
		public float sunFlaresSunIntensity;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DE14", Offset = "0x54DE14")]
		public float sunFlaresSunDiskSize;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DE2C", Offset = "0x54DE2C")]
		public float sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DE44", Offset = "0x54DE44")]
		public float sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DE5C", Offset = "0x54DE5C")]
		public float sunFlaresCoronaRays1Length;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DE78", Offset = "0x54DE78")]
		public int sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DE90", Offset = "0x54DE90")]
		public float sunFlaresCoronaRays1Spread;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DEAC", Offset = "0x54DEAC")]
		public float sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DEC8", Offset = "0x54DEC8")]
		public float sunFlaresCoronaRays2Length;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DEE4", Offset = "0x54DEE4")]
		public int sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DEFC", Offset = "0x54DEFC")]
		public float sunFlaresCoronaRays2Spread;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DF18", Offset = "0x54DF18")]
		public float sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DF34", Offset = "0x54DF34")]
		public float sunFlaresGhosts1Size;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DF4C", Offset = "0x54DF4C")]
		public float sunFlaresGhosts1Offset;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DF64", Offset = "0x54DF64")]
		public float sunFlaresGhosts1Brightness;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DF7C", Offset = "0x54DF7C")]
		public float sunFlaresGhosts2Size;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DF94", Offset = "0x54DF94")]
		public float sunFlaresGhosts2Offset;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DFAC", Offset = "0x54DFAC")]
		public float sunFlaresGhosts2Brightness;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DFC4", Offset = "0x54DFC4")]
		public float sunFlaresGhosts3Size;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DFDC", Offset = "0x54DFDC")]
		public float sunFlaresGhosts3Brightness;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DFF4", Offset = "0x54DFF4")]
		public float sunFlaresGhosts3Offset;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E00C", Offset = "0x54E00C")]
		public float sunFlaresGhosts4Size;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E024", Offset = "0x54E024")]
		public float sunFlaresGhosts4Offset;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E03C", Offset = "0x54E03C")]
		public float sunFlaresGhosts4Brightness;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E054", Offset = "0x54E054")]
		public float sunFlaresHaloOffset;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E06C", Offset = "0x54E06C")]
		public float sunFlaresHaloAmplitude;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E088", Offset = "0x54E088")]
		public float sunFlaresHaloIntensity;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public bool sunFlaresRotationDeadZone;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AD")]
		public bool blur;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E0A0", Offset = "0x54E0A0")]
		public float blurIntensity;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public int pixelateAmount;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public bool pixelateDownscale;

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xA38F3C", Offset = "0xA38F3C", VA = "0xA38F3C")]
		public void Load(Beautify b)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xA4728C", Offset = "0xA4728C", VA = "0xA4728C")]
		public void Save(Beautify b)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xA482EC", Offset = "0xA482EC", VA = "0xA482EC")]
		public BeautifyProfile()
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x20003A9")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x796870", Offset = "0x796870", VA = "0x796870")]
		private void Start()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x7968E0", Offset = "0x7968E0", VA = "0x7968E0")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x796978", Offset = "0x796978", VA = "0x796978")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x7968E8", Offset = "0x7968E8", VA = "0x7968E8")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x796980", Offset = "0x796980", VA = "0x796980")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x20003AA")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x7961E8", Offset = "0x7961E8", VA = "0x7961E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x796274", Offset = "0x796274", VA = "0x796274")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x796284", Offset = "0x796284", VA = "0x796284")]
		private void Start()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x7962F4", Offset = "0x7962F4", VA = "0x7962F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x7963A4", Offset = "0x7963A4", VA = "0x7963A4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x7965B8", Offset = "0x7965B8", VA = "0x7965B8")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x7965C0", Offset = "0x7965C0", VA = "0x7965C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x79685C", Offset = "0x79685C", VA = "0x79685C")]
		public ForceShieldShootBall()
		{
		}
	}
}
